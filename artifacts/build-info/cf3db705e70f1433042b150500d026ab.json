{"id":"cf3db705e70f1433042b150500d026ab","_format":"hh-sol-build-info-1","solcVersion":"0.8.25","solcLongVersion":"0.8.25+commit.b61c2a91","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\n    struct ReentrancyGuardStorage {\n        uint256 _status;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ReentrancyGuard\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\n\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\n        assembly {\n            $.slot := ReentrancyGuardStorageLocation\n        }\n    }\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if ($._status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        $._status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        return $._status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title The interface for the Uniswap V3 Factory\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\ninterface IUniswapV3Factory {\n    /// @notice Emitted when the owner of the factory is changed\n    /// @param oldOwner The owner before the owner was changed\n    /// @param newOwner The owner after the owner was changed\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\n\n    /// @notice Emitted when a pool is created\n    /// @param token0 The first token of the pool by address sort order\n    /// @param token1 The second token of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param pool The address of the created pool\n    event PoolCreated(\n        address indexed token0,\n        address indexed token1,\n        uint24 indexed fee,\n        int24 tickSpacing,\n        address pool\n    );\n\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\n    /// @param fee The enabled fee, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\n\n    /// @notice Returns the current owner of the factory\n    /// @dev Can be changed by the current owner via setOwner\n    /// @return The address of the factory owner\n    function owner() external view returns (address);\n\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n    /// @return The tick spacing\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\n\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The pool address\n    function getPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external view returns (address pool);\n\n    /// @notice Creates a pool for the given two tokens and fee\n    /// @param tokenA One of the two tokens in the desired pool\n    /// @param tokenB The other of the two tokens in the desired pool\n    /// @param fee The desired fee for the pool\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n    /// are invalid.\n    /// @return pool The address of the newly created pool\n    function createPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external returns (address pool);\n\n    /// @notice Updates the owner of the factory\n    /// @dev Must be called by the current owner\n    /// @param _owner The new owner of the factory\n    function setOwner(address _owner) external;\n\n    /// @notice Enables a fee amount with the given tickSpacing\n    /// @dev Fee amounts may never be removed once enabled\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"},"contracts/interfaces/I1inchSpotAgg.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\n\r\ninterface I1inchSpotAgg {\r\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\r\n\r\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Agent.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1Agent {\r\n  struct Call {\r\n    address to;\r\n    uint256 value;\r\n    bytes data;\r\n  }\r\n\r\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\r\n}\r\n"},"contracts/interfaces/IBaluniV1AgentFactory.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1AgentFactory {\r\n    function getAgentAddress(address user) external view returns (address);\r\n\r\n    function getOrCreateAgent(address user) external returns (address);\r\n\r\n    function getRegistry() external view returns (address);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Oracle.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1Oracle {\r\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256 valuation);\r\n\r\n    function convertScaled(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount\r\n    ) external view returns (uint256 valuation);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1Rebalancer {\r\n    struct RebalanceVars {\r\n        uint256 length;\r\n        uint256 totalValue;\r\n        uint256 finalUsdBalance;\r\n        uint256 overweightVaultsLength;\r\n        uint256 underweightVaultsLength;\r\n        uint256 totalActiveWeight;\r\n        uint256 amountOut;\r\n        uint256[] overweightVaults;\r\n        uint256[] overweightAmounts;\r\n        uint256[] underweightVaults;\r\n        uint256[] underweightAmounts;\r\n        uint256[] balances;\r\n    }\r\n\r\n    // Functions\r\n    function rebalance(\r\n        uint256[] memory balances,\r\n        address[] calldata assets,\r\n        uint256[] calldata weights,\r\n        uint256 limit,\r\n        address sender,\r\n        address receiver,\r\n        address baseAsset\r\n    ) external;\r\n\r\n    function checkRebalance(\r\n        uint256[] memory balances,\r\n        address[] calldata assets,\r\n        uint256[] calldata weights,\r\n        uint256 limit,\r\n        address sender,\r\n        address baseAsset\r\n    ) external view returns (RebalanceVars memory);\r\n\r\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Registry.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\n/**\r\n * @title IBaluniV1Registry\r\n * @dev Interface for the BaluniV1Registry contract.\r\n */\r\ninterface IBaluniV1Registry {\r\n    function setUniswapFactory(address _uniswapFactory) external;\r\n\r\n    function setUniswapRouter(address _uniswapRouter) external;\r\n\r\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\r\n\r\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\r\n\r\n    function setBaluniSwapper(address _baluniSwapper) external;\r\n\r\n    function setBaluniOracle(address _baluniOracle) external;\r\n\r\n    function setBaluniPoolRegistry(address _baluniPoolRegistry) external;\r\n\r\n    function setBaluniVaultRegistry(address _baluniPoolRegistry) external;\r\n\r\n    function setBaluniRebalancer(address _baluniRebalancer) external;\r\n\r\n    function setBaluniRouter(address _baluniRouter) external;\r\n\r\n    function setBaluniRegistry(address _baluniRegistry) external;\r\n\r\n    function setWNATIVE(address _WNATIVE) external;\r\n\r\n    function setUSDC(address _USDC) external;\r\n\r\n    function setTreasury(address _treasury) external;\r\n\r\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\r\n\r\n    function setBPS_FEE(uint256 __BPS_FEE) external;\r\n\r\n    function getUniswapFactory() external view returns (address);\r\n\r\n    function getUniswapRouter() external view returns (address);\r\n\r\n    function getBaluniSwapper() external view returns (address);\r\n\r\n    function getBaluniOracle() external view returns (address);\r\n\r\n    function getBaluniAgentFactory() external view returns (address);\r\n\r\n    function getBaluniPoolPeriphery() external view returns (address);\r\n\r\n    function getBaluniVaultRegistry() external view returns (address);\r\n\r\n    function getBaluniPoolRegistry() external view returns (address);\r\n\r\n    function getBaluniRebalancer() external view returns (address);\r\n\r\n    function getBaluniRouter() external view returns (address);\r\n\r\n    function getBaluniRegistry() external view returns (address);\r\n\r\n    function getWNATIVE() external view returns (address);\r\n\r\n    function getUSDC() external view returns (address);\r\n\r\n    function get1inchSpotAgg() external view returns (address);\r\n\r\n    function getBPS_FEE() external view returns (uint256);\r\n\r\n    function getMAX_BPS_FEE() external view returns (uint256);\r\n\r\n    function getBPS_BASE() external view returns (uint256);\r\n\r\n    function getTreasury() external view returns (address);\r\n\r\n    function setStaticOracle(address _staticOracle) external;\r\n\r\n    function getStaticOracle() external view returns (address);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Swapper.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1Swapper {\r\n    function singleSwap(\r\n        address token0,\r\n        address token1,\r\n        uint256 amount,\r\n        address receiver\r\n    ) external returns (uint256 amountOut);\r\n    function multiHopSwap(\r\n        address token0,\r\n        address token1,\r\n        address token2,\r\n        uint256 amount,\r\n        address receiver\r\n    ) external returns (uint256 amountOut);\r\n}\r\n"},"contracts/libs/EnumerableSetUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Library for managing\r\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\r\n * types.\r\n *\r\n * Sets have the following properties:\r\n *\r\n * - Elements are added, removed, and checked for existence in constant time\r\n * (O(1)).\r\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\r\n *\r\n * ```\r\n * contract Example {\r\n *     // Add the library methods\r\n *     using EnumerableSet for EnumerableSet.AddressSet;\r\n *\r\n *     // Declare a set state variable\r\n *     EnumerableSet.AddressSet private mySet;\r\n * }\r\n * ```\r\n *\r\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\r\n * and `uint256` (`UintSet`) are supported.\r\n *\r\n * [WARNING]\r\n * ====\r\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\r\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\r\n *\r\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\r\n * ====\r\n */\r\nlibrary EnumerableSetUpgradeable {\r\n    // To implement this library for multiple types with as little code\r\n    // repetition as possible, we write it in terms of a generic Set type with\r\n    // bytes32 values.\r\n    // The Set implementation uses private functions, and user-facing\r\n    // implementations (such as AddressSet) are just wrappers around the\r\n    // underlying Set.\r\n    // This means that we can only create new EnumerableSets for types that fit\r\n    // in bytes32.\r\n\r\n    struct Set {\r\n        // Storage of set values\r\n        bytes32[] _values;\r\n        // Position of the value in the `values` array, plus 1 because index 0\r\n        // means a value is not in the set.\r\n        mapping(bytes32 => uint256) _indexes;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function _add(Set storage set, bytes32 value) private returns (bool) {\r\n        if (!_contains(set, value)) {\r\n            set._values.push(value);\r\n            // The value is stored at length-1, but we add 1 to all indexes\r\n            // and use 0 as a sentinel value\r\n            set._indexes[value] = set._values.length;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\r\n        // We read and store the value's index to prevent multiple reads from the same storage slot\r\n        uint256 valueIndex = set._indexes[value];\r\n\r\n        if (valueIndex != 0) {\r\n            // Equivalent to contains(set, value)\r\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\r\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\r\n            // This modifies the order of the array, as noted in {at}.\r\n\r\n            uint256 toDeleteIndex = valueIndex - 1;\r\n            uint256 lastIndex = set._values.length - 1;\r\n\r\n            if (lastIndex != toDeleteIndex) {\r\n                bytes32 lastValue = set._values[lastIndex];\r\n\r\n                // Move the last value to the index where the value to delete is\r\n                set._values[toDeleteIndex] = lastValue;\r\n                // Update the index for the moved value\r\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\r\n            }\r\n\r\n            // Delete the slot where the moved value was stored\r\n            set._values.pop();\r\n\r\n            // Delete the index for the deleted slot\r\n            delete set._indexes[value];\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\r\n        return set._indexes[value] != 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function _length(Set storage set) private view returns (uint256) {\r\n        return set._values.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\r\n        return set._values[index];\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function _values(Set storage set) private view returns (bytes32[] memory) {\r\n        return set._values;\r\n    }\r\n\r\n    // Bytes32Set\r\n\r\n    struct Bytes32Set {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\r\n        return _add(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\r\n        return _remove(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\r\n        return _contains(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(Bytes32Set storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\r\n        return _at(set._inner, index);\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\r\n        return _values(set._inner);\r\n    }\r\n\r\n    // AddressSet\r\n\r\n    struct AddressSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(AddressSet storage set, address value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(AddressSet storage set, address value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(AddressSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\r\n        return address(uint160(uint256(_at(set._inner, index))));\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(AddressSet storage set) internal view returns (address[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        address[] memory result;\r\n\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // UintSet\r\n\r\n    struct UintSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function length(UintSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\r\n        return uint256(_at(set._inner, index));\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        uint256[] memory result;\r\n\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n"},"contracts/orchestators/BaluniV1Router.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\n/**\r\n *  __                  __                      __\r\n * /  |                /  |                    /  |\r\n * $$ |____    ______  $$ | __    __  _______  $$/\r\n * $$      \\  /      \\ $$ |/  |  /  |/       \\ /  |\r\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\r\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\r\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\__$$ |$$ |  $$ |$$ |\r\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\r\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\r\n *\r\n *\r\n *                  ,-\"\"\"\"-.\r\n *                ,'      _ `.\r\n *               /       )_)  \\\r\n *              :              :\r\n *              \\              /\r\n *               \\            /\r\n *                `.        ,'\r\n *                  `.    ,'\r\n *                    `.,'\r\n *                     /\\`.   ,-._\r\n *                         `-'    \\__\r\n *                              .\r\n *               s                \\\r\n *                                \\\\\r\n *                                 \\\\\r\n *                                  >\\/7\r\n *                              _.-(6'  \\\r\n *                             (=___._/` \\\r\n *                                  )  \\ |\r\n *                                 /   / |\r\n *                                /    > /\r\n *                               j    < _\\\r\n *                           _.-' :      ``.\r\n *                           \\ r=._\\        `.\r\n */\r\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\r\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\r\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\r\n\r\nimport '../interfaces/IBaluniV1Agent.sol';\r\nimport '../interfaces/IBaluniV1AgentFactory.sol';\r\nimport '../interfaces/IBaluniV1Rebalancer.sol';\r\nimport '../interfaces/I1inchSpotAgg.sol';\r\nimport '../interfaces/IBaluniV1Oracle.sol';\r\nimport '../libs/EnumerableSetUpgradeable.sol';\r\nimport '../interfaces/IBaluniV1Swapper.sol';\r\nimport '../interfaces/IBaluniV1Registry.sol';\r\n\r\ncontract BaluniV1Router is\r\n    Initializable,\r\n    ERC20Upgradeable,\r\n    OwnableUpgradeable,\r\n    ReentrancyGuardUpgradeable,\r\n    UUPSUpgradeable\r\n{\r\n    struct Call {\r\n        address to;\r\n        uint256 value;\r\n        bytes data;\r\n    }\r\n\r\n    EnumerableSetUpgradeable.AddressSet private tokens;\r\n\r\n    IBaluniV1Registry public registry;\r\n\r\n    using EnumerableSetUpgradeable for EnumerableSetUpgradeable.AddressSet;\r\n\r\n    address public baseAsset;\r\n\r\n    event Execute(address user, IBaluniV1Agent.Call[] calls, address[] tokensReturn);\r\n    event Burn(address user, uint256 value);\r\n    event Mint(address user, uint256 value);\r\n    event Log(string message, uint256 value);\r\n\r\n    /**\r\n     * @dev Initializes the BaluniV1Router contract.\r\n     * It sets the initial values for various variables and mints 1 ether to the contract's address.\r\n     * It also sets the USDC token address, WNATIVE token address, oracle address, Uniswap router address, and Uniswap factory address.\r\n     * Finally, it adds the USDC token address to the tokens set.\r\n     */\r\n    function initialize(address _registry) public initializer {\r\n        __ERC20_init('Baluni', 'BALUNI');\r\n        __Ownable_init(msg.sender);\r\n        __ReentrancyGuard_init();\r\n        __UUPSUpgradeable_init();\r\n        _mint(address(this), 1 ether);\r\n\r\n        registry = IBaluniV1Registry(_registry);\r\n        baseAsset = registry.getUSDC();\r\n    }\r\n\r\n    function reinitialize(address _registry, uint64 version) public reinitializer(version) {\r\n        // __UUPSUpgradeable_init();\r\n        // __Ownable_init(msg.sender);\r\n        registry = IBaluniV1Registry(_registry);\r\n    }\r\n\r\n    function resetContract(address _registry) public onlyOwner {\r\n        registry = IBaluniV1Registry(_registry);\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to authorize an upgrade to a new implementation contract.\r\n     * @param newImplementation The address of the new implementation contract.\r\n     * @notice This function can only be called by the contract owner.\r\n     */\r\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\r\n\r\n    /**\r\n     * @dev Returns the unit price of the token in USDC.\r\n     * @return The unit price of the token in USDC.\r\n     */\r\n    function unitPrice() public view returns (uint256) {\r\n        return _calculateBaluniToUSDC(1e18);\r\n    }\r\n\r\n    /**\r\n     * @dev Executes a series of calls to a BaluniV1Agent contract and handles token returns.\r\n     * @param calls An array of IBaluniV1Agent.Call structs representing the calls to be executed.\r\n     * @param tokensReturn An array of addresses representing the tokens to be returned.\r\n     * @notice This function requires the agentFactory to be set and creates a new agent if necessary.\r\n     * @notice If a token is new and a Uniswap pool exists for it, the token is added to the tokens set.\r\n     * @notice If no Uniswap pool exists for a token, the token balance is transferred back to the caller.\r\n     */\r\n    function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external nonReentrant {\r\n        address agentFactory = registry.getBaluniAgentFactory();\r\n        address uniswapFactory = registry.getUniswapFactory();\r\n        address WNATIVE = registry.getWNATIVE();\r\n        address USDC = registry.getUSDC();\r\n\r\n        require(address(agentFactory) != address(0), 'Agent factory not set');\r\n        address agent = IBaluniV1AgentFactory(agentFactory).getOrCreateAgent(msg.sender);\r\n        bool[] memory isTokenNew = new bool[](tokensReturn.length);\r\n        uint256[] memory tokenBalances = new uint256[](tokensReturn.length);\r\n\r\n        for (uint256 i = 0; i < tokensReturn.length; i++) {\r\n            isTokenNew[i] = !EnumerableSetUpgradeable.contains(tokens, tokensReturn[i]);\r\n            tokenBalances[i] = IERC20(tokensReturn[i]).balanceOf(address(this));\r\n        }\r\n\r\n        IBaluniV1Agent(agent).execute(calls, tokensReturn);\r\n\r\n        for (uint256 i = 0; i < tokensReturn.length; i++) {\r\n            address token = tokensReturn[i];\r\n            uint256 balance = IERC20(token).balanceOf(address(this));\r\n            address poolNative3000 = IUniswapV3Factory(uniswapFactory).getPool(token, address(WNATIVE), 3000);\r\n            address poolNative500 = IUniswapV3Factory(uniswapFactory).getPool(token, address(WNATIVE), 500);\r\n            address poolUSDC500 = IUniswapV3Factory(uniswapFactory).getPool(token, address(USDC), 500);\r\n            address poolUSDC3000 = IUniswapV3Factory(uniswapFactory).getPool(token, address(USDC), 3000);\r\n            bool poolExist = poolNative3000 != address(0) ||\r\n                poolNative500 != address(0) ||\r\n                poolUSDC3000 != address(0) ||\r\n                poolUSDC500 != address(0);\r\n\r\n            if (isTokenNew[i] && poolExist) {\r\n                EnumerableSetUpgradeable.add(tokens, token);\r\n            }\r\n\r\n            uint256 amountReceived = balance - tokenBalances[i];\r\n\r\n            if (!poolExist) {\r\n                IERC20(token).transfer(msg.sender, amountReceived);\r\n                return;\r\n            }\r\n\r\n            address treasury = registry.getTreasury();\r\n            uint256 _BPS_FEE = registry.getBPS_FEE();\r\n            uint256 _BPS_BASE = registry.getBPS_BASE();\r\n\r\n            if (balance > tokenBalances[i]) {\r\n                uint256 fee = (amountReceived * _BPS_FEE) / _BPS_BASE;\r\n                IERC20(token).transfer(treasury, fee);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Liquidates the specified token by swapping it for USDC.\r\n     * @param token The address of the token to be liquidated.\r\n     * @notice The contract must have sufficient approval to spend the specified token.\r\n     * @notice If a pool exists for the token and USDC on Uniswap, a direct swap is performed.\r\n     * @notice If no pool exists, a multi-hop swap is performed through the WNATIVE token.\r\n     * @notice If the swap fails, the `burn` function should be called to handle the failed swap.\r\n     */\r\n    function liquidate(address token) public {\r\n        address WNATIVE = registry.getWNATIVE();\r\n        address baluniSwapper = registry.getBaluniSwapper();\r\n\r\n        uint256 totalERC20Balance = IERC20(token).balanceOf(address(this));\r\n        bool haveBalance = totalERC20Balance > 0;\r\n        IERC20(token).approve(baluniSwapper, totalERC20Balance);\r\n\r\n        if (!haveBalance) return;\r\n\r\n        try IBaluniV1Swapper(baluniSwapper).singleSwap(token, baseAsset, totalERC20Balance, address(this)) {\r\n            return;\r\n        } catch {\r\n            uint256 multiHopSwapResult = IBaluniV1Swapper(baluniSwapper).multiHopSwap(\r\n                token,\r\n                address(WNATIVE),\r\n                baseAsset,\r\n                totalERC20Balance,\r\n                address(this)\r\n            );\r\n\r\n            require(multiHopSwapResult > 0, 'Muti Hop Swap Failed, Try Burn()');\r\n            return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Liquidates all tokens in the contract.\r\n     * This function iterates through all the tokens in the contract and calls the `liquidate` function for each token.\r\n     * Can only be called by the contract owner.\r\n     */\r\n    function liquidateAll() public nonReentrant {\r\n        uint256 length = tokens.length();\r\n        for (uint256 i = 0; i < length; i++) {\r\n            address token = tokens.at(i);\r\n            if (token == baseAsset) continue;\r\n            liquidate(token);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Burns a specified amount of BALUNI tokens from the caller's balance.\r\n     * @param burnAmount The amount of BALUNI tokens to burn.\r\n     * @notice This function requires the caller to have a balance of at least `burnAmount` BAL tokens.\r\n     * @notice The function also checks the USDC balance before burning the tokens.\r\n     * @notice After burning the tokens, the function transfers a proportional share of each ERC20 token held by the contract to the caller.\r\n     * @notice The share is calculated based on the total supply of BAL tokens, the balance of each ERC20 token, and the decimals of each token.\r\n     * @notice Finally, the function emits a `Burn` event with the caller's address and the amount of tokens burned.\r\n     */\r\n    function burnERC20(uint256 burnAmount) external nonReentrant {\r\n        require(burnAmount > 0, 'Burn amount must be greater than 0');\r\n        address treasury = registry.getTreasury();\r\n        require(treasury != address(0), 'Treasury not set');\r\n        require(balanceOf(msg.sender) >= burnAmount, 'Insufficient BAL');\r\n        uint256 burnAmountAfterFee = _calculateNetAmountAfterFee(burnAmount);\r\n        require(burnAmountAfterFee <= burnAmount, 'Fee calculation error');\r\n        transfer(treasury, burnAmount - burnAmountAfterFee);\r\n\r\n        for (uint256 i; i < tokens.length(); i++) {\r\n            address token = tokens.at(i);\r\n            require(token != address(0), 'Invalid token address');\r\n            uint256 totalBaluni = totalSupply();\r\n            require(totalBaluni > 0, 'Total supply is 0');\r\n            uint256 totalERC20Balance = IERC20(token).balanceOf(address(this));\r\n            if (totalERC20Balance == 0 || token == address(this)) continue;\r\n            uint256 decimals = IERC20Metadata(token).decimals();\r\n            uint256 share = _calculateERC20Share(totalBaluni, totalERC20Balance, burnAmountAfterFee, decimals);\r\n            require(share <= totalERC20Balance, 'Share calculation error');\r\n            IERC20(token).transfer(msg.sender, share);\r\n        }\r\n        _burn(msg.sender, burnAmountAfterFee);\r\n        emit Burn(msg.sender, burnAmountAfterFee);\r\n    }\r\n\r\n    /**\r\n     * @dev Burns a specified amount of BAL tokens and performs token swaps on multiple tokens.\r\n     * @param burnAmount The amount of BAL tokens to burn.\r\n     */\r\n    function burnUSDC(uint256 burnAmount) public nonReentrant {\r\n        require(burnAmount > 0, 'Burn amount must be greater than 0');\r\n        address uniswapFactory = registry.getUniswapFactory();\r\n        require(uniswapFactory != address(0), 'UniswapFactory not set');\r\n        address treasury = registry.getTreasury();\r\n        require(treasury != address(0), 'Treasury not set');\r\n        address WNATIVE = registry.getWNATIVE();\r\n        require(WNATIVE != address(0), 'WNATIVE not set');\r\n\r\n        uint256 burnAmountAfterFee = _calculateNetAmountAfterFee(burnAmount);\r\n        require(burnAmountAfterFee <= burnAmount, 'Fee calculation error');\r\n\r\n        uint burnAmountToSend = burnAmount - burnAmountAfterFee;\r\n\r\n        transfer(treasury, burnAmountToSend);\r\n\r\n        for (uint256 i; i < tokens.length(); i++) {\r\n            address token = tokens.at(i);\r\n            require(token != address(0), 'Invalid token address');\r\n\r\n            uint256 totalBaluni = totalSupply();\r\n            require(totalBaluni > 0, 'Total supply is 0');\r\n\r\n            uint256 totalERC20Balance = IERC20(token).balanceOf(address(this));\r\n\r\n            if (totalERC20Balance == 0 || token == address(this)) continue;\r\n\r\n            uint256 decimals = IERC20Metadata(token).decimals();\r\n\r\n            uint256 burnAmountToken = _calculateERC20Share(\r\n                totalBaluni,\r\n                totalERC20Balance,\r\n                burnAmountAfterFee,\r\n                decimals\r\n            );\r\n\r\n            require(burnAmountToken <= totalERC20Balance, 'Share calculation error');\r\n\r\n            if (token == baseAsset) {\r\n                IERC20(baseAsset).transfer(msg.sender, burnAmountToken);\r\n                continue;\r\n            }\r\n\r\n            address baluniSwapper = registry.getBaluniSwapper();\r\n            require(baluniSwapper != address(0), 'BaluniSwapper not set');\r\n\r\n            IERC20(token).approve(baluniSwapper, burnAmountToken);\r\n\r\n            try IBaluniV1Swapper(baluniSwapper).singleSwap(token, baseAsset, burnAmountToken, msg.sender) returns (\r\n                uint256 amountOut\r\n            ) {\r\n                require(amountOut > 0, 'Swap Failed');\r\n                IERC20(baseAsset).transfer(msg.sender, amountOut);\r\n            } catch {\r\n                uint256 amountOutHop = IBaluniV1Swapper(baluniSwapper).multiHopSwap(\r\n                    token,\r\n                    address(WNATIVE),\r\n                    baseAsset,\r\n                    burnAmountToken,\r\n                    msg.sender\r\n                );\r\n                require(amountOutHop > 0, 'MultiHopSwap Failed');\r\n                IERC20(baseAsset).transfer(msg.sender, amountOutHop);\r\n            }\r\n        }\r\n\r\n        _burn(msg.sender, burnAmountAfterFee);\r\n        emit Burn(msg.sender, burnAmountAfterFee);\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the agent address associated with a user.\r\n     * @param _user The user's address.\r\n     * @return The agent address.\r\n     */\r\n    function getAgentAddress(address _user) external view returns (address) {\r\n        address agentFactory = registry.getBaluniAgentFactory();\r\n        return IBaluniV1AgentFactory(agentFactory).getAgentAddress(_user);\r\n    }\r\n\r\n    /**\r\n     * @dev Mints a specified amount of BALUNI tokens in exchange for USDC.\r\n     * @param balAmountToMint The amount of BALUNI tokens to mint.\r\n     */\r\n    function mintWithUSDC(uint256 balAmountToMint) public nonReentrant {\r\n        address treasury = registry.getTreasury();\r\n        address USDC = registry.getUSDC();\r\n        uint256 _BPS_FEE = registry.getBPS_FEE();\r\n        uint256 _BPS_BASE = registry.getBPS_BASE();\r\n        uint256 totalUSDValuation = _totalValuationScaled();\r\n        uint256 totalBalSupply = totalSupply();\r\n        uint256 usdcRequired = (balAmountToMint * totalUSDValuation) / totalBalSupply;\r\n        IERC20(USDC).transferFrom(msg.sender, address(this), usdcRequired / 1e12);\r\n        uint256 balance = IERC20(USDC).balanceOf(msg.sender);\r\n        uint256 allowed = IERC20(USDC).allowance(msg.sender, address(this));\r\n\r\n        require(totalBalSupply > 0, 'Total BALUNI supply cannot be zero');\r\n        require(balance >= usdcRequired / 1e12, 'USDC balance is insufficient');\r\n        require(allowed >= usdcRequired / 1e12, 'Check the token allowance');\r\n\r\n        _mint(msg.sender, balAmountToMint);\r\n        emit Mint(msg.sender, balAmountToMint);\r\n\r\n        uint256 fee = ((usdcRequired / 1e12) * _BPS_FEE) / _BPS_BASE;\r\n        IERC20(address(USDC)).transfer(treasury, fee);\r\n    }\r\n\r\n    /**\r\n     * @dev Calls the `rebalance` function of the `rebalancer` contract.\r\n     * @param assets An array of addresses representing the assets to rebalance.\r\n     * @param weights An array of uint256 values representing the weights of the assets.\r\n     * @param sender The address of the sender.\r\n     * @param receiver The address of the receiver.\r\n     * @param limit The maximum number of assets to rebalance.\r\n     */\r\n    function callRebalance(\r\n        address[] calldata assets,\r\n        uint256[] calldata weights,\r\n        address sender,\r\n        address receiver,\r\n        uint256 limit,\r\n        address /* baseAsset */\r\n    ) external {\r\n        address USDC = registry.getUSDC();\r\n        address rebalancer = registry.getBaluniRebalancer();\r\n        uint256[] memory balances = new uint256[](0);\r\n        IBaluniV1Rebalancer(rebalancer).rebalance(balances, assets, weights, limit, sender, receiver, USDC);\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the amount of USDC required to mint a given amount of BAL tokens.\r\n     * @param balAmountToMint The amount of BAL tokens to be minted.\r\n     * @return The amount of USDC required to mint the specified amount of BAL tokens.\r\n     */\r\n    function requiredUSDCtoMint(uint256 balAmountToMint) public view returns (uint256) {\r\n        uint256 totalUSDValuation = _totalValuationScaled();\r\n        uint256 totalBalSupply = totalSupply();\r\n        uint256 usdcRequired = (balAmountToMint * totalUSDValuation) / totalBalSupply;\r\n        return usdcRequired / 1e12;\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the token share based on the total Baluni supply, total ERC20 balance, Baluni amount, and token decimals.\r\n     * @param totalBaluni The total supply of Baluni tokens.\r\n     * @param totalERC20Balance The total balance of the ERC20 token.\r\n     * @param baluniAmount The amount of Baluni tokens.\r\n     * @param tokenDecimals The number of decimals for the ERC20 token.\r\n     * @return The calculated token share.\r\n     */\r\n    function calculateTokenShare(\r\n        uint256 totalBaluni,\r\n        uint256 totalERC20Balance,\r\n        uint256 baluniAmount,\r\n        uint256 tokenDecimals\r\n    ) external pure returns (uint256) {\r\n        return _calculateERC20Share(totalBaluni, totalERC20Balance, baluniAmount, tokenDecimals);\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the valuation of a given amount of a specific ERC20 token.\r\n     * @param amount The amount of the ERC20 token.\r\n     * @param token The address of the ERC20 token.\r\n     * @return The calculated valuation of the ERC20 token.\r\n     */\r\n    function tokenValuation(uint256 amount, address token) external view returns (uint256) {\r\n        address baluniOracle = registry.getBaluniOracle();\r\n        return IBaluniV1Oracle(baluniOracle).convertScaled(token, baseAsset, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total valuation of the Baluni ecosystem.\r\n     * @return The total valuation of the Baluni ecosystem.\r\n     */\r\n    function totalValuation() external view returns (uint256) {\r\n        return _totalValuationScaled();\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the value of a given amount of Baluni tokens in USDC.\r\n     * @param amount The amount of Baluni tokens.\r\n     * @return The calculated value of the Baluni tokens in USDC.\r\n     */\r\n    function getUSDCShareValue(uint256 amount) external view returns (uint256) {\r\n        return _calculateBaluniToUSDC(amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the valuation of an ERC20 token based on the amount and token address.\r\n     * @param amount The amount of the token.\r\n     * @param token The address of the token.\r\n     * @return valuation The valuation of the token.\r\n     */\r\n    function _calculateERC20ValuationScaled(uint256 amount, address token) internal view returns (uint256 valuation) {\r\n        address baluniOracle = registry.getBaluniOracle();\r\n        return IBaluniV1Oracle(baluniOracle).convertScaled(token, baseAsset, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the equivalent amount of USDC tokens for a given amount of Baluni tokens.\r\n     * @param amount The amount of Baluni tokens to convert.\r\n     * @return shareUSDC The equivalent amount of USDC tokens.\r\n     *\r\n     * Requirements:\r\n     * - The total supply of Baluni tokens must be greater than zero.\r\n     */\r\n    function _calculateBaluniToUSDC(uint256 amount) internal view returns (uint256 shareUSDC) {\r\n        uint256 baseDecimal = IERC20Metadata(baseAsset).decimals();\r\n        uint256 totalBaluni = totalSupply();\r\n        require(totalBaluni > 0, 'Total supply cannot be zero');\r\n        uint256 totalUSDC = _totalValuationScaled();\r\n        shareUSDC = (amount * totalUSDC) / totalBaluni;\r\n        shareUSDC /= 10 ** (18 - baseDecimal);\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the ERC20 share based on the total Baluni supply, total ERC20 balance,\r\n     * Baluni amount, and token decimals.\r\n     * @param totalBaluni The total supply of Baluni tokens.\r\n     * @param totalERC20Balance The total balance of the ERC20 token.\r\n     * @param baluniAmount The amount of Baluni tokens.\r\n     * @param tokenDecimals The number of decimals for the ERC20 token.\r\n     * @return The calculated ERC20 share.\r\n     */\r\n    function _calculateERC20Share(\r\n        uint256 totalBaluni,\r\n        uint256 totalERC20Balance,\r\n        uint256 baluniAmount,\r\n        uint256 tokenDecimals\r\n    ) internal pure returns (uint256) {\r\n        require(totalBaluni > 0, 'Total supply cannot be zero');\r\n        require(tokenDecimals <= 18, 'Token decimals should be <= 18');\r\n        uint256 baluniAdjusted;\r\n        uint256 amountAdjusted;\r\n        uint256 factor = (10 ** (18 - tokenDecimals));\r\n\r\n        if (tokenDecimals < 18) {\r\n            baluniAdjusted = totalBaluni / factor;\r\n            amountAdjusted = baluniAmount / factor;\r\n        } else {\r\n            baluniAdjusted = totalBaluni;\r\n            amountAdjusted = baluniAmount;\r\n        }\r\n\r\n        uint256 result = (amountAdjusted * totalERC20Balance) / baluniAdjusted;\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the total valuation of the contract by summing up the valuation of each token held.\r\n     * @return The total valuation of the contract.\r\n     */\r\n    function _totalValuationScaled() internal view returns (uint256) {\r\n        uint256 _totalV = 0;\r\n\r\n        for (uint256 i = 0; i < tokens.length(); i++) {\r\n            address token = tokens.at(i);\r\n            uint256 balance = IERC20(token).balanceOf(address(this));\r\n\r\n            if (balance == 0) continue;\r\n\r\n            if (token == baseAsset) {\r\n                _totalV += balance * 1e12;\r\n                continue;\r\n            }\r\n\r\n            address baluniOracle = registry.getBaluniOracle();\r\n            uint256 tokenBalanceValuation = IBaluniV1Oracle(baluniOracle).convertScaled(token, baseAsset, balance);\r\n            require(tokenBalanceValuation > 0, 'Token valuation is zero');\r\n            _totalV += tokenBalanceValuation;\r\n        }\r\n        return _totalV;\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the net amount after deducting the fee.\r\n     * @param _amount The input amount.\r\n     * @return The net amount after deducting the fee.\r\n     */\r\n    function _calculateNetAmountAfterFee(uint256 _amount) internal view returns (uint256) {\r\n        uint256 _BPS_FEE = registry.getBPS_FEE();\r\n        uint256 _BPS_BASE = registry.getBPS_BASE();\r\n        uint256 amountInWithFee = (_amount * (_BPS_BASE - (_BPS_FEE))) / _BPS_BASE;\r\n        return amountInWithFee;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the version of the contract.\r\n     * @return The version string.\r\n     */\r\n    function getVersion() external view returns (uint64) {\r\n        return _getInitializedVersion();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an array of addresses representing the tokens.\r\n     * @return An array of addresses representing the tokens.\r\n     */\r\n    function getTokens() external view returns (address[] memory) {\r\n        return tokens.values();\r\n    }\r\n\r\n    /**\r\n     * @dev Adds a token to the `tokens` set.\r\n     * Can only be called by the contract owner.\r\n     * @param _token The address of the token to be added.\r\n     */\r\n    function addToken(address _token) external onlyOwner {\r\n        EnumerableSetUpgradeable.add(tokens, _token);\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a token from the `tokens` set.\r\n     * Can only be called by the contract owner.\r\n     * @param _token The address of the token to be removed.\r\n     */\r\n    function removeToken(address _token) external onlyOwner {\r\n        EnumerableSetUpgradeable.remove(tokens, _token);\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":2000},"evmVersion":"cancun","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates","devdoc","userdoc"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1293],"Initializable":[448],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":1294,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":449,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,1293,448],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nativeSrc":"1289:56:0","nodeType":"YulBlock","src":"1289:56:0","statements":[{"nativeSrc":"1303:32:0","nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:0","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:0","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[448]},"id":449,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":448,"linearizedBaseContracts":[448],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":448,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":448,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":269,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6357:20:1"},"referencedDeclaration":205,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":448,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7826:20:1"},"referencedDeclaration":205,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":448,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":448,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":448,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nativeSrc":"8846:55:1","nodeType":"YulBlock","src":"8846:55:1","statements":[{"nativeSrc":"8860:31:1","nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:1","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:1","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":443,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":208,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":445,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":447,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":442,"nodeType":"UserDefinedTypeName","pathNode":{"id":441,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"8795:20:1"},"referencedDeclaration":205,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":448,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":449,"src":"2349:6560:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[1872],"IERC1822Proxiable":[1432],"Initializable":[448],"UUPSUpgradeable":[630]},"id":631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":450,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":1433,"src":"141:88:2","symbolAliases":[{"foreign":{"id":451,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":1873,"src":"230:84:2","symbolAliases":[{"foreign":{"id":453,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":449,"src":"315:50:2","symbolAliases":[{"foreign":{"id":455,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":458,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1023:13:2"},"id":459,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":460,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":1432,"src":"1038:17:2"},"id":461,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":630,"linearizedBaseContracts":[630,1432,448],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":468,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":630,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":466,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":472,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":630,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":470,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":475,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":480,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":480,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":487,"nodeType":"Block","src":"2643:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2653:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2653:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"2653:13:2"},{"id":486,"nodeType":"PlaceholderStatement","src":"2676:1:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2124:493:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":488,"name":"onlyProxy","nameLocation":"2631:9:2","nodeType":"ModifierDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"2640:2:2"},"src":"2622:62:2","virtual":false,"visibility":"internal"},{"body":{"id":495,"nodeType":"Block","src":"2914:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":491,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"2924:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2924:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"2924:20:2"},{"id":494,"nodeType":"PlaceholderStatement","src":"2954:1:2"}]},"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"2690:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":496,"name":"notDelegated","nameLocation":"2899:12:2","nodeType":"ModifierDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"2911:2:2"},"src":"2890:72:2","virtual":false,"visibility":"internal"},{"body":{"id":501,"nodeType":"Block","src":"3028:7:2","statements":[]},"id":502,"implemented":true,"kind":"function","modifiers":[{"id":499,"kind":"modifierInvocation","modifierName":{"id":498,"name":"onlyInitializing","nameLocations":["3011:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3011:16:2"},"nodeType":"ModifierInvocation","src":"3011:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2977:22:2","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"2999:2:2"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"3028:0:2"},"scope":630,"src":"2968:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":507,"nodeType":"Block","src":"3111:7:2","statements":[]},"id":508,"implemented":true,"kind":"function","modifiers":[{"id":505,"kind":"modifierInvocation","modifierName":{"id":504,"name":"onlyInitializing","nameLocations":["3094:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3094:16:2"},"nodeType":"ModifierInvocation","src":"3094:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3050:32:2","nodeType":"FunctionDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"3082:2:2"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"3111:0:2"},"scope":630,"src":"3041:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1431],"body":{"id":519,"nodeType":"Block","src":"3783:56:2","statements":[{"expression":{"expression":{"id":516,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"3800:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1872_$","typeString":"type(library ERC1967Utils)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3813:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":1599,"src":"3800:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":515,"id":518,"nodeType":"Return","src":"3793:39:2"}]},"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"3123:577:2","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":520,"implemented":true,"kind":"function","modifiers":[{"id":512,"kind":"modifierInvocation","modifierName":{"id":511,"name":"notDelegated","nameLocations":["3752:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":496,"src":"3752:12:2"},"nodeType":"ModifierInvocation","src":"3752:12:2"}],"name":"proxiableUUID","nameLocation":"3714:13:2","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"3727:2:2"},"returnParameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":520,"src":"3774:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3774:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3773:9:2"},"scope":630,"src":"3705:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":539,"nodeType":"Block","src":"4263:109:2","statements":[{"expression":{"arguments":[{"id":531,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4291:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":530,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4273:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4273:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"4273:36:2"},{"expression":{"arguments":[{"id":535,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4341:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"4360:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":534,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4319:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"4319:46:2"}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"3845:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":540,"implemented":true,"kind":"function","modifiers":[{"id":528,"kind":"modifierInvocation","modifierName":{"id":527,"name":"onlyProxy","nameLocations":["4253:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":488,"src":"4253:9:2"},"nodeType":"ModifierInvocation","src":"4253:9:2"}],"name":"upgradeToAndCall","nameLocation":"4167:16:2","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"newImplementation","nameLocation":"4192:17:2","nodeType":"VariableDeclaration","scope":540,"src":"4184:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"4184:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"data","nameLocation":"4224:4:2","nodeType":"VariableDeclaration","scope":540,"src":"4211:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":524,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4183:46:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"4263:0:2"},"scope":630,"src":"4158:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":561,"nodeType":"Block","src":"4644:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":546,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4679:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4671:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:2","typeDescriptions":{}}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4671:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":548,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4688:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4671:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":550,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"4749:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1872_$","typeString":"type(library ERC1967Utils)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4762:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":1630,"src":"4749:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4749:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":553,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4785:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4749:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4671:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":560,"nodeType":"IfStatement","src":"4654:251:2","trueBody":{"id":559,"nodeType":"Block","src":"4844:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":556,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"4865:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4865:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"RevertStatement","src":"4858:36:2"}]}}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"4378:216:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."},"id":562,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4608:11:2","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"4619:2:2"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"4644:0:2"},"scope":630,"src":"4599:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":577,"nodeType":"Block","src":"5080:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":568,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5102:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5094:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"5094:7:2","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":570,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"5111:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5094:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":576,"nodeType":"IfStatement","src":"5090:145:2","trueBody":{"id":575,"nodeType":"Block","src":"5119:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":572,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"5195:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5195:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":574,"nodeType":"RevertStatement","src":"5188:36:2"}]}}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"4917:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":578,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5037:18:2","nodeType":"FunctionDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"5055:2:2"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[],"src":"5080:0:2"},"scope":630,"src":"5028:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"5247:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":584,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5633:17:2","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"newImplementation","nameLocation":"5659:17:2","nodeType":"VariableDeclaration","scope":584,"src":"5651:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:27:2"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"5694:0:2"},"scope":630,"src":"5624:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"6137:453:2","statements":[{"clauses":[{"block":{"id":617,"nodeType":"Block","src":"6227:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":600,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6245:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":601,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"6253:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1872_$","typeString":"type(library ERC1967Utils)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6266:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":1599,"src":"6253:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6245:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":609,"nodeType":"IfStatement","src":"6241:120:2","trueBody":{"id":608,"nodeType":"Block","src":"6287:74:2","statements":[{"errorCall":{"arguments":[{"id":605,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6341:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":604,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"6312:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6312:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"RevertStatement","src":"6305:41:2"}]}},{"expression":{"arguments":[{"id":613,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6404:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"6423:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":610,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"6374:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1872_$","typeString":"type(library ERC1967Utils)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6387:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":1691,"src":"6374:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":616,"nodeType":"ExpressionStatement","src":"6374:54:2"}]},"errorName":"","id":618,"nodeType":"TryCatchClause","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"slot","nameLocation":"6221:4:2","nodeType":"VariableDeclaration","scope":618,"src":"6213:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6213:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6212:14:2"},"src":"6204:235:2"},{"block":{"id":625,"nodeType":"Block","src":"6446:138:2","statements":[{"errorCall":{"arguments":[{"id":622,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6555:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":619,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"6513:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1872_$","typeString":"type(library ERC1967Utils)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6526:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":1604,"src":"6513:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6513:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":624,"nodeType":"RevertStatement","src":"6506:67:2"}]},"errorName":"","id":626,"nodeType":"TryCatchClause","src":"6440:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":593,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6169:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":592,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"6151:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$1432_$","typeString":"type(contract IERC1822Proxiable)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$1432","typeString":"contract IERC1822Proxiable"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6188:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":1431,"src":"6151:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":627,"nodeType":"TryStatement","src":"6147:437:2"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"5701:346:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."},"id":629,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6061:21:2","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"newImplementation","nameLocation":"6091:17:2","nodeType":"VariableDeclaration","scope":629,"src":"6083:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"6083:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"data","nameLocation":"6123:4:2","nodeType":"VariableDeclaration","scope":629,"src":"6110:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"6110:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6082:46:2"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[],"src":"6137:0:2"},"scope":630,"src":"6052:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":631,"src":"986:5606:2","usedErrors":[211,214,475,480,1604,1617,1999,2002],"usedEvents":[219,1583]}],"src":"115:6478:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1293],"ERC20Upgradeable":[1247],"IERC20":[1960],"IERC20Errors":[1474],"IERC20Metadata":[1986],"Initializable":[448]},"id":1248,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":632,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":1961,"src":"131:70:3","symbolAliases":[{"foreign":{"id":633,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":636,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":1987,"src":"202:97:3","symbolAliases":[{"foreign":{"id":635,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"210:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":638,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":1294,"src":"300:70:3","symbolAliases":[{"foreign":{"id":637,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"308:18:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":1570,"src":"371:83:3","symbolAliases":[{"foreign":{"id":639,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"379:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":642,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":449,"src":"455:66:3","symbolAliases":[{"foreign":{"id":641,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"463:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":644,"name":"Initializable","nameLocations":["1614:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1614:13:3"},"id":645,"nodeType":"InheritanceSpecifier","src":"1614:13:3"},{"baseName":{"id":646,"name":"ContextUpgradeable","nameLocations":["1629:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"1629:18:3"},"id":647,"nodeType":"InheritanceSpecifier","src":"1629:18:3"},{"baseName":{"id":648,"name":"IERC20","nameLocations":["1649:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":1960,"src":"1649:6:3"},"id":649,"nodeType":"InheritanceSpecifier","src":"1649:6:3"},{"baseName":{"id":650,"name":"IERC20Metadata","nameLocations":["1657:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":1986,"src":"1657:14:3"},"id":651,"nodeType":"InheritanceSpecifier","src":"1657:14:3"},{"baseName":{"id":652,"name":"IERC20Errors","nameLocations":["1673:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1474,"src":"1673:12:3"},"id":653,"nodeType":"InheritanceSpecifier","src":"1673:12:3"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"523:1052:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1247,"linearizedBaseContracts":[1247,1474,1986,1960,1293,448],"name":"ERC20Upgradeable","nameLocation":"1594:16:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Upgradeable.ERC20Storage","documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"1692:63:3","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC20"},"id":671,"members":[{"constant":false,"id":658,"mutability":"mutable","name":"_balances","nameLocation":"1826:9:3","nodeType":"VariableDeclaration","scope":671,"src":"1790:45:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":657,"keyName":"account","keyNameLocation":"1806:7:3","keyType":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"1798:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1790:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":656,"name":"uint256","nodeType":"ElementaryTypeName","src":"1817:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":664,"mutability":"mutable","name":"_allowances","nameLocation":"1910:11:3","nodeType":"VariableDeclaration","scope":671,"src":"1846:75:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":663,"keyName":"account","keyNameLocation":"1862:7:3","keyType":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"1854:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1846:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":662,"keyName":"spender","keyNameLocation":"1889:7:3","keyType":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1873:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"1900:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":666,"mutability":"mutable","name":"_totalSupply","nameLocation":"1940:12:3","nodeType":"VariableDeclaration","scope":671,"src":"1932:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"1932:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":668,"mutability":"mutable","name":"_name","nameLocation":"1970:5:3","nodeType":"VariableDeclaration","scope":671,"src":"1963:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":667,"name":"string","nodeType":"ElementaryTypeName","src":"1963:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":670,"mutability":"mutable","name":"_symbol","nameLocation":"1992:7:3","nodeType":"VariableDeclaration","scope":671,"src":"1985:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":669,"name":"string","nodeType":"ElementaryTypeName","src":"1985:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ERC20Storage","nameLocation":"1767:12:3","nodeType":"StructDefinition","scope":1247,"src":"1760:246:3","visibility":"public"},{"constant":true,"id":674,"mutability":"constant","name":"ERC20StorageLocation","nameLocation":"2146:20:3","nodeType":"VariableDeclaration","scope":1247,"src":"2121:114:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":672,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2121:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2169:66:3","typeDescriptions":{"typeIdentifier":"t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1","typeString":"int_const 3743...(69 digits omitted)...2592"},"value":"0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"},"visibility":"private"},{"body":{"id":681,"nodeType":"Block","src":"2316:79:3","statements":[{"AST":{"nativeSrc":"2335:54:3","nodeType":"YulBlock","src":"2335:54:3","statements":[{"nativeSrc":"2349:30:3","nodeType":"YulAssignment","src":"2349:30:3","value":{"name":"ERC20StorageLocation","nativeSrc":"2359:20:3","nodeType":"YulIdentifier","src":"2359:20:3"},"variableNames":[{"name":"$.slot","nativeSrc":"2349:6:3","nodeType":"YulIdentifier","src":"2349:6:3"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":678,"isOffset":false,"isSlot":true,"src":"2349:6:3","suffix":"slot","valueSize":1},{"declaration":674,"isOffset":false,"isSlot":false,"src":"2359:20:3","valueSize":1}],"id":680,"nodeType":"InlineAssembly","src":"2326:63:3"}]},"id":682,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC20Storage","nameLocation":"2251:16:3","nodeType":"FunctionDefinition","parameters":{"id":675,"nodeType":"ParameterList","parameters":[],"src":"2267:2:3"},"returnParameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"$","nameLocation":"2313:1:3","nodeType":"VariableDeclaration","scope":682,"src":"2292:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":677,"nodeType":"UserDefinedTypeName","pathNode":{"id":676,"name":"ERC20Storage","nameLocations":["2292:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"2292:12:3"},"referencedDeclaration":671,"src":"2292:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"src":"2291:24:3"},"scope":1247,"src":"2242:153:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":697,"nodeType":"Block","src":"2669:55:3","statements":[{"expression":{"arguments":[{"id":693,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"2702:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":694,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"2709:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":692,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"2679:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2679:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":696,"nodeType":"ExpressionStatement","src":"2679:38:3"}]},"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"2401:171:3","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":698,"implemented":true,"kind":"function","modifiers":[{"id":690,"kind":"modifierInvocation","modifierName":{"id":689,"name":"onlyInitializing","nameLocations":["2652:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2652:16:3"},"nodeType":"ModifierInvocation","src":"2652:16:3"}],"name":"__ERC20_init","nameLocation":"2586:12:3","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"name_","nameLocation":"2613:5:3","nodeType":"VariableDeclaration","scope":698,"src":"2599:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":684,"name":"string","nodeType":"ElementaryTypeName","src":"2599:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"symbol_","nameLocation":"2634:7:3","nodeType":"VariableDeclaration","scope":698,"src":"2620:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":686,"name":"string","nodeType":"ElementaryTypeName","src":"2620:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2598:44:3"},"returnParameters":{"id":691,"nodeType":"ParameterList","parameters":[],"src":"2669:0:3"},"scope":1247,"src":"2577:147:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":725,"nodeType":"Block","src":"2832:114:3","statements":[{"assignments":[709],"declarations":[{"constant":false,"id":709,"mutability":"mutable","name":"$","nameLocation":"2863:1:3","nodeType":"VariableDeclaration","scope":725,"src":"2842:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":708,"nodeType":"UserDefinedTypeName","pathNode":{"id":707,"name":"ERC20Storage","nameLocations":["2842:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"2842:12:3"},"referencedDeclaration":671,"src":"2842:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":712,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":710,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"2867:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2867:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2842:43:3"},{"expression":{"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":713,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"2895:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2897:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":668,"src":"2895:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":716,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"2905:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2895:15:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":718,"nodeType":"ExpressionStatement","src":"2895:15:3"},{"expression":{"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":719,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"2920:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":721,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2922:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":670,"src":"2920:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":722,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"2932:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2920:19:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":724,"nodeType":"ExpressionStatement","src":"2920:19:3"}]},"id":726,"implemented":true,"kind":"function","modifiers":[{"id":705,"kind":"modifierInvocation","modifierName":{"id":704,"name":"onlyInitializing","nameLocations":["2815:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2815:16:3"},"nodeType":"ModifierInvocation","src":"2815:16:3"}],"name":"__ERC20_init_unchained","nameLocation":"2739:22:3","nodeType":"FunctionDefinition","parameters":{"id":703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"name_","nameLocation":"2776:5:3","nodeType":"VariableDeclaration","scope":726,"src":"2762:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":699,"name":"string","nodeType":"ElementaryTypeName","src":"2762:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"symbol_","nameLocation":"2797:7:3","nodeType":"VariableDeclaration","scope":726,"src":"2783:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":701,"name":"string","nodeType":"ElementaryTypeName","src":"2783:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2761:44:3"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[],"src":"2832:0:3"},"scope":1247,"src":"2730:216:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1973],"body":{"id":741,"nodeType":"Block","src":"3071:84:3","statements":[{"assignments":[734],"declarations":[{"constant":false,"id":734,"mutability":"mutable","name":"$","nameLocation":"3102:1:3","nodeType":"VariableDeclaration","scope":741,"src":"3081:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":733,"nodeType":"UserDefinedTypeName","pathNode":{"id":732,"name":"ERC20Storage","nameLocations":["3081:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"3081:12:3"},"referencedDeclaration":671,"src":"3081:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":737,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":735,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"3106:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3106:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3081:43:3"},{"expression":{"expression":{"id":738,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"3141:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3143:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":668,"src":"3141:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":731,"id":740,"nodeType":"Return","src":"3134:14:3"}]},"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"2952:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":742,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"3020:4:3","nodeType":"FunctionDefinition","parameters":{"id":728,"nodeType":"ParameterList","parameters":[],"src":"3024:2:3"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":742,"src":"3056:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":729,"name":"string","nodeType":"ElementaryTypeName","src":"3056:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3055:15:3"},"scope":1247,"src":"3011:144:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1979],"body":{"id":757,"nodeType":"Block","src":"3330:86:3","statements":[{"assignments":[750],"declarations":[{"constant":false,"id":750,"mutability":"mutable","name":"$","nameLocation":"3361:1:3","nodeType":"VariableDeclaration","scope":757,"src":"3340:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":749,"nodeType":"UserDefinedTypeName","pathNode":{"id":748,"name":"ERC20Storage","nameLocations":["3340:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"3340:12:3"},"referencedDeclaration":671,"src":"3340:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":753,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":751,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"3365:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3340:43:3"},{"expression":{"expression":{"id":754,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"3400:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3402:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":670,"src":"3400:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":747,"id":756,"nodeType":"Return","src":"3393:16:3"}]},"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"3161:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":758,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"3277:6:3","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"3283:2:3"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":758,"src":"3315:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":745,"name":"string","nodeType":"ElementaryTypeName","src":"3315:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3314:15:3"},"scope":1247,"src":"3268:148:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1985],"body":{"id":766,"nodeType":"Block","src":"4105:26:3","statements":[{"expression":{"hexValue":"3138","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4122:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":763,"id":765,"nodeType":"Return","src":"4115:9:3"}]},"documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"3422:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":767,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"4058:8:3","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[],"src":"4066:2:3"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":767,"src":"4098:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":761,"name":"uint8","nodeType":"ElementaryTypeName","src":"4098:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4097:7:3"},"scope":1247,"src":"4049:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1909],"body":{"id":782,"nodeType":"Block","src":"4252:91:3","statements":[{"assignments":[775],"declarations":[{"constant":false,"id":775,"mutability":"mutable","name":"$","nameLocation":"4283:1:3","nodeType":"VariableDeclaration","scope":782,"src":"4262:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":774,"nodeType":"UserDefinedTypeName","pathNode":{"id":773,"name":"ERC20Storage","nameLocations":["4262:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"4262:12:3"},"referencedDeclaration":671,"src":"4262:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":778,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":776,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4287:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4287:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4262:43:3"},{"expression":{"expression":{"id":779,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"4322:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4324:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":666,"src":"4322:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":772,"id":781,"nodeType":"Return","src":"4315:21:3"}]},"documentation":{"id":768,"nodeType":"StructuredDocumentation","src":"4137:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":783,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"4200:11:3","nodeType":"FunctionDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[],"src":"4211:2:3"},"returnParameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":783,"src":"4243:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"4243:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4242:9:3"},"scope":1247,"src":"4191:152:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1917],"body":{"id":802,"nodeType":"Block","src":"4475:97:3","statements":[{"assignments":[793],"declarations":[{"constant":false,"id":793,"mutability":"mutable","name":"$","nameLocation":"4506:1:3","nodeType":"VariableDeclaration","scope":802,"src":"4485:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":792,"nodeType":"UserDefinedTypeName","pathNode":{"id":791,"name":"ERC20Storage","nameLocations":["4485:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"4485:12:3"},"referencedDeclaration":671,"src":"4485:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":796,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":794,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4510:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4510:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4485:43:3"},{"expression":{"baseExpression":{"expression":{"id":797,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"4545:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4547:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":658,"src":"4545:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":800,"indexExpression":{"id":799,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"4557:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4545:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":790,"id":801,"nodeType":"Return","src":"4538:27:3"}]},"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"4349:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":803,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"4410:9:3","nodeType":"FunctionDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"account","nameLocation":"4428:7:3","nodeType":"VariableDeclaration","scope":803,"src":"4420:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"4420:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4419:17:3"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":803,"src":"4466:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"4466:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4465:9:3"},"scope":1247,"src":"4401:171:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1927],"body":{"id":826,"nodeType":"Block","src":"4842:103:3","statements":[{"assignments":[814],"declarations":[{"constant":false,"id":814,"mutability":"mutable","name":"owner","nameLocation":"4860:5:3","nodeType":"VariableDeclaration","scope":826,"src":"4852:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"4852:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":817,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":815,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"4868:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4868:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4852:28:3"},{"expression":{"arguments":[{"id":819,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4900:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":820,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"4907:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"4911:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":818,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"4890:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4890:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":823,"nodeType":"ExpressionStatement","src":"4890:27:3"},{"expression":{"hexValue":"74727565","id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4934:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":812,"id":825,"nodeType":"Return","src":"4927:11:3"}]},"documentation":{"id":804,"nodeType":"StructuredDocumentation","src":"4578:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":827,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4776:8:3","nodeType":"FunctionDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"to","nameLocation":"4793:2:3","nodeType":"VariableDeclaration","scope":827,"src":"4785:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"4785:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"value","nameLocation":"4805:5:3","nodeType":"VariableDeclaration","scope":827,"src":"4797:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"4797:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4784:27:3"},"returnParameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":827,"src":"4836:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":810,"name":"bool","nodeType":"ElementaryTypeName","src":"4836:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4835:6:3"},"scope":1247,"src":"4767:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1937],"body":{"id":850,"nodeType":"Block","src":"5092:106:3","statements":[{"assignments":[839],"declarations":[{"constant":false,"id":839,"mutability":"mutable","name":"$","nameLocation":"5123:1:3","nodeType":"VariableDeclaration","scope":850,"src":"5102:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":838,"nodeType":"UserDefinedTypeName","pathNode":{"id":837,"name":"ERC20Storage","nameLocations":["5102:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"5102:12:3"},"referencedDeclaration":671,"src":"5102:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":842,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":840,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5127:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5127:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5102:43:3"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":843,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"5162:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":844,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5164:11:3","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":664,"src":"5162:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":846,"indexExpression":{"id":845,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"5176:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5162:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":848,"indexExpression":{"id":847,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"5183:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5162:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":836,"id":849,"nodeType":"Return","src":"5155:36:3"}]},"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"4951:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":851,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"5012:9:3","nodeType":"FunctionDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"owner","nameLocation":"5030:5:3","nodeType":"VariableDeclaration","scope":851,"src":"5022:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"5022:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"spender","nameLocation":"5045:7:3","nodeType":"VariableDeclaration","scope":851,"src":"5037:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"5037:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5021:32:3"},"returnParameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":851,"src":"5083:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"5083:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5082:9:3"},"scope":1247,"src":"5003:195:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1947],"body":{"id":874,"nodeType":"Block","src":"5584:107:3","statements":[{"assignments":[862],"declarations":[{"constant":false,"id":862,"mutability":"mutable","name":"owner","nameLocation":"5602:5:3","nodeType":"VariableDeclaration","scope":874,"src":"5594:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"5594:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":865,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":863,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"5610:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5594:28:3"},{"expression":{"arguments":[{"id":867,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"5641:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":868,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"5648:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"5657:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":866,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1130,1198],"referencedDeclaration":1130,"src":"5632:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5632:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":871,"nodeType":"ExpressionStatement","src":"5632:31:3"},{"expression":{"hexValue":"74727565","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5680:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":860,"id":873,"nodeType":"Return","src":"5673:11:3"}]},"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"5204:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":875,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"5514:7:3","nodeType":"FunctionDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"spender","nameLocation":"5530:7:3","nodeType":"VariableDeclaration","scope":875,"src":"5522:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"5522:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"value","nameLocation":"5547:5:3","nodeType":"VariableDeclaration","scope":875,"src":"5539:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":855,"name":"uint256","nodeType":"ElementaryTypeName","src":"5539:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5521:32:3"},"returnParameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":875,"src":"5578:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":858,"name":"bool","nodeType":"ElementaryTypeName","src":"5578:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5577:6:3"},"scope":1247,"src":"5505:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1959],"body":{"id":906,"nodeType":"Block","src":"6344:151:3","statements":[{"assignments":[888],"declarations":[{"constant":false,"id":888,"mutability":"mutable","name":"spender","nameLocation":"6362:7:3","nodeType":"VariableDeclaration","scope":906,"src":"6354:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"6354:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":891,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":889,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"6372:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6372:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6354:30:3"},{"expression":{"arguments":[{"id":893,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"6410:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":894,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"6416:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"6425:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":892,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"6394:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6394:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":897,"nodeType":"ExpressionStatement","src":"6394:37:3"},{"expression":{"arguments":[{"id":899,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"6451:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":900,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"6457:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"6461:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":898,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"6441:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6441:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":903,"nodeType":"ExpressionStatement","src":"6441:26:3"},{"expression":{"hexValue":"74727565","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6484:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":886,"id":905,"nodeType":"Return","src":"6477:11:3"}]},"documentation":{"id":876,"nodeType":"StructuredDocumentation","src":"5697:549:3","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":907,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"6260:12:3","nodeType":"FunctionDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"mutability":"mutable","name":"from","nameLocation":"6281:4:3","nodeType":"VariableDeclaration","scope":907,"src":"6273:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"6273:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":880,"mutability":"mutable","name":"to","nameLocation":"6295:2:3","nodeType":"VariableDeclaration","scope":907,"src":"6287:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"6287:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"value","nameLocation":"6307:5:3","nodeType":"VariableDeclaration","scope":907,"src":"6299:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"6299:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6272:41:3"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":907,"src":"6338:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":884,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6337:6:3"},"scope":1247,"src":"6251:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":953,"nodeType":"Block","src":"6937:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":917,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"6951:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6967:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6959:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"6959:7:3","typeDescriptions":{}}},"id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6959:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6951:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":931,"nodeType":"IfStatement","src":"6947:86:3","trueBody":{"id":930,"nodeType":"Block","src":"6971:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7019:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7011:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":924,"name":"address","nodeType":"ElementaryTypeName","src":"7011:7:3","typeDescriptions":{}}},"id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7011:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":923,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"6992:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6992:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":929,"nodeType":"RevertStatement","src":"6985:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":932,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"7046:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7060:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7052:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":933,"name":"address","nodeType":"ElementaryTypeName","src":"7052:7:3","typeDescriptions":{}}},"id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7052:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7046:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":946,"nodeType":"IfStatement","src":"7042:86:3","trueBody":{"id":945,"nodeType":"Block","src":"7064:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7114:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7106:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"7106:7:3","typeDescriptions":{}}},"id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7106:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":938,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"7085:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7085:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":944,"nodeType":"RevertStatement","src":"7078:39:3"}]}},{"expression":{"arguments":[{"id":948,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"7145:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":949,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"7151:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"7155:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":947,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"7137:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7137:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":952,"nodeType":"ExpressionStatement","src":"7137:24:3"}]},"documentation":{"id":908,"nodeType":"StructuredDocumentation","src":"6501:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":954,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"6877:9:3","nodeType":"FunctionDefinition","parameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"from","nameLocation":"6895:4:3","nodeType":"VariableDeclaration","scope":954,"src":"6887:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"6887:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":912,"mutability":"mutable","name":"to","nameLocation":"6909:2:3","nodeType":"VariableDeclaration","scope":954,"src":"6901:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":911,"name":"address","nodeType":"ElementaryTypeName","src":"6901:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":914,"mutability":"mutable","name":"value","nameLocation":"6921:5:3","nodeType":"VariableDeclaration","scope":954,"src":"6913:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"6913:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6886:41:3"},"returnParameters":{"id":916,"nodeType":"ParameterList","parameters":[],"src":"6937:0:3"},"scope":1247,"src":"6868:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1045,"nodeType":"Block","src":"7558:1095:3","statements":[{"assignments":[966],"declarations":[{"constant":false,"id":966,"mutability":"mutable","name":"$","nameLocation":"7589:1:3","nodeType":"VariableDeclaration","scope":1045,"src":"7568:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":965,"nodeType":"UserDefinedTypeName","pathNode":{"id":964,"name":"ERC20Storage","nameLocations":["7568:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"7568:12:3"},"referencedDeclaration":671,"src":"7568:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":969,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":967,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"7593:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7568:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":970,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"7625:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7641:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7633:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"7633:7:3","typeDescriptions":{}}},"id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7633:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7625:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1012,"nodeType":"Block","src":"7801:366:3","statements":[{"assignments":[984],"declarations":[{"constant":false,"id":984,"mutability":"mutable","name":"fromBalance","nameLocation":"7823:11:3","nodeType":"VariableDeclaration","scope":1012,"src":"7815:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"7815:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":989,"initialValue":{"baseExpression":{"expression":{"id":985,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"7837:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7839:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":658,"src":"7837:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":988,"indexExpression":{"id":987,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"7849:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7837:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7815:39:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":990,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7872:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"7886:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7872:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1000,"nodeType":"IfStatement","src":"7868:115:3","trueBody":{"id":999,"nodeType":"Block","src":"7893:90:3","statements":[{"errorCall":{"arguments":[{"id":994,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"7943:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":995,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7949:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"7962:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":993,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"7918:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7918:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":998,"nodeType":"RevertStatement","src":"7911:57:3"}]}},{"id":1011,"nodeType":"UncheckedBlock","src":"7996:161:3","statements":[{"expression":{"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1001,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"8103:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1004,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8105:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":658,"src":"8103:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1005,"indexExpression":{"id":1003,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"8115:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8103:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1006,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"8123:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8137:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8123:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8103:39:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1010,"nodeType":"ExpressionStatement","src":"8103:39:3"}]}]},"id":1013,"nodeType":"IfStatement","src":"7621:546:3","trueBody":{"id":982,"nodeType":"Block","src":"7645:150:3","statements":[{"expression":{"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":976,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"7761:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7763:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":666,"src":"7761:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"7779:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7761:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":981,"nodeType":"ExpressionStatement","src":"7761:23:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1014,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8181:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8195:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8187:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"8187:7:3","typeDescriptions":{}}},"id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8187:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8181:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1037,"nodeType":"Block","src":"8398:208:3","statements":[{"id":1036,"nodeType":"UncheckedBlock","src":"8412:184:3","statements":[{"expression":{"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1028,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"8557:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8559:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":658,"src":"8557:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1032,"indexExpression":{"id":1030,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8569:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8557:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8576:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8557:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1035,"nodeType":"ExpressionStatement","src":"8557:24:3"}]}]},"id":1038,"nodeType":"IfStatement","src":"8177:429:3","trueBody":{"id":1027,"nodeType":"Block","src":"8199:193:3","statements":[{"id":1026,"nodeType":"UncheckedBlock","src":"8213:169:3","statements":[{"expression":{"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1020,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"8344:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8346:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":666,"src":"8344:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8362:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8344:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1025,"nodeType":"ExpressionStatement","src":"8344:23:3"}]}]}},{"eventCall":{"arguments":[{"id":1040,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"8630:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1041,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8636:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8640:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1039,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"8621:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8621:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1044,"nodeType":"EmitStatement","src":"8616:30:3"}]},"documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"7174:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1046,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"7492:7:3","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"from","nameLocation":"7508:4:3","nodeType":"VariableDeclaration","scope":1046,"src":"7500:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"7500:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"to","nameLocation":"7522:2:3","nodeType":"VariableDeclaration","scope":1046,"src":"7514:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"7514:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"value","nameLocation":"7534:5:3","nodeType":"VariableDeclaration","scope":1046,"src":"7526:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"7526:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7499:41:3"},"returnParameters":{"id":963,"nodeType":"ParameterList","parameters":[],"src":"7558:0:3"},"scope":1247,"src":"7483:1170:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1078,"nodeType":"Block","src":"9052:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1054,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"9066:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9085:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9077:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"9077:7:3","typeDescriptions":{}}},"id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9077:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9066:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1068,"nodeType":"IfStatement","src":"9062:91:3","trueBody":{"id":1067,"nodeType":"Block","src":"9089:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9139:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9131:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"9131:7:3","typeDescriptions":{}}},"id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9131:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1060,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"9110:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9110:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1066,"nodeType":"RevertStatement","src":"9103:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9178:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9170:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"9170:7:3","typeDescriptions":{}}},"id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9170:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1074,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"9182:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"9191:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1069,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"9162:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9162:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"ExpressionStatement","src":"9162:35:3"}]},"documentation":{"id":1047,"nodeType":"StructuredDocumentation","src":"8659:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1079,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9005:5:3","nodeType":"FunctionDefinition","parameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"account","nameLocation":"9019:7:3","nodeType":"VariableDeclaration","scope":1079,"src":"9011:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"9011:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"value","nameLocation":"9036:5:3","nodeType":"VariableDeclaration","scope":1079,"src":"9028:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"9028:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9010:32:3"},"returnParameters":{"id":1053,"nodeType":"ParameterList","parameters":[],"src":"9052:0:3"},"scope":1247,"src":"8996:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1111,"nodeType":"Block","src":"9578:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1087,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"9592:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9611:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9603:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"9603:7:3","typeDescriptions":{}}},"id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9603:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9592:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1101,"nodeType":"IfStatement","src":"9588:89:3","trueBody":{"id":1100,"nodeType":"Block","src":"9615:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9663:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9655:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"9655:7:3","typeDescriptions":{}}},"id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9655:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1093,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"9636:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9636:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1099,"nodeType":"RevertStatement","src":"9629:37:3"}]}},{"expression":{"arguments":[{"id":1103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"9694:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9711:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9703:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"9703:7:3","typeDescriptions":{}}},"id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9703:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"9715:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1102,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"9686:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9686:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1110,"nodeType":"ExpressionStatement","src":"9686:35:3"}]},"documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"9210:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1112,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9531:5:3","nodeType":"FunctionDefinition","parameters":{"id":1085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"account","nameLocation":"9545:7:3","nodeType":"VariableDeclaration","scope":1112,"src":"9537:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1081,"name":"address","nodeType":"ElementaryTypeName","src":"9537:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"value","nameLocation":"9562:5:3","nodeType":"VariableDeclaration","scope":1112,"src":"9554:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1083,"name":"uint256","nodeType":"ElementaryTypeName","src":"9554:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9536:32:3"},"returnParameters":{"id":1086,"nodeType":"ParameterList","parameters":[],"src":"9578:0:3"},"scope":1247,"src":"9522:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1129,"nodeType":"Block","src":"10338:54:3","statements":[{"expression":{"arguments":[{"id":1123,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"10357:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1124,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"10364:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"10373:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10380:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1122,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1130,1198],"referencedDeclaration":1198,"src":"10348:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10348:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1128,"nodeType":"ExpressionStatement","src":"10348:37:3"}]},"documentation":{"id":1113,"nodeType":"StructuredDocumentation","src":"9734:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1130,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10273:8:3","nodeType":"FunctionDefinition","parameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"owner","nameLocation":"10290:5:3","nodeType":"VariableDeclaration","scope":1130,"src":"10282:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"10282:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"spender","nameLocation":"10305:7:3","nodeType":"VariableDeclaration","scope":1130,"src":"10297:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"10297:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"value","nameLocation":"10322:5:3","nodeType":"VariableDeclaration","scope":1130,"src":"10314:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"10314:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10281:47:3"},"returnParameters":{"id":1121,"nodeType":"ParameterList","parameters":[],"src":"10338:0:3"},"scope":1247,"src":"10264:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1197,"nodeType":"Block","src":"11322:389:3","statements":[{"assignments":[1144],"declarations":[{"constant":false,"id":1144,"mutability":"mutable","name":"$","nameLocation":"11353:1:3","nodeType":"VariableDeclaration","scope":1197,"src":"11332:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1143,"nodeType":"UserDefinedTypeName","pathNode":{"id":1142,"name":"ERC20Storage","nameLocations":["11332:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"11332:12:3"},"referencedDeclaration":671,"src":"11332:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1147,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1145,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"11357:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11357:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11332:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1148,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"11389:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11406:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11398:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"11398:7:3","typeDescriptions":{}}},"id":1152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11398:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11389:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1162,"nodeType":"IfStatement","src":"11385:89:3","trueBody":{"id":1161,"nodeType":"Block","src":"11410:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11460:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11452:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"11452:7:3","typeDescriptions":{}}},"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11452:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1154,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"11431:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11431:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1160,"nodeType":"RevertStatement","src":"11424:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1163,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"11487:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11506:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11498:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"11498:7:3","typeDescriptions":{}}},"id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11498:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11487:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1177,"nodeType":"IfStatement","src":"11483:90:3","trueBody":{"id":1176,"nodeType":"Block","src":"11510:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11559:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11551:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1170,"name":"address","nodeType":"ElementaryTypeName","src":"11551:7:3","typeDescriptions":{}}},"id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11551:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1169,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"11531:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11531:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1175,"nodeType":"RevertStatement","src":"11524:38:3"}]}},{"expression":{"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"11582:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11584:11:3","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":664,"src":"11582:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1183,"indexExpression":{"id":1180,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"11596:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11582:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1184,"indexExpression":{"id":1181,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"11603:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11582:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"11614:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11582:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1187,"nodeType":"ExpressionStatement","src":"11582:37:3"},{"condition":{"id":1188,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"11633:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1196,"nodeType":"IfStatement","src":"11629:76:3","trueBody":{"id":1195,"nodeType":"Block","src":"11644:61:3","statements":[{"eventCall":{"arguments":[{"id":1190,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"11672:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1191,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"11679:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"11688:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1189,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"11663:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11663:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1194,"nodeType":"EmitStatement","src":"11658:36:3"}]}}]},"documentation":{"id":1131,"nodeType":"StructuredDocumentation","src":"10398:821:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1198,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"11233:8:3","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"owner","nameLocation":"11250:5:3","nodeType":"VariableDeclaration","scope":1198,"src":"11242:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"11242:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"spender","nameLocation":"11265:7:3","nodeType":"VariableDeclaration","scope":1198,"src":"11257:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"11257:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"value","nameLocation":"11282:5:3","nodeType":"VariableDeclaration","scope":1198,"src":"11274:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1136,"name":"uint256","nodeType":"ElementaryTypeName","src":"11274:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1139,"mutability":"mutable","name":"emitEvent","nameLocation":"11294:9:3","nodeType":"VariableDeclaration","scope":1198,"src":"11289:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1138,"name":"bool","nodeType":"ElementaryTypeName","src":"11289:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11241:63:3"},"returnParameters":{"id":1141,"nodeType":"ParameterList","parameters":[],"src":"11322:0:3"},"scope":1247,"src":"11224:487:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1245,"nodeType":"Block","src":"12082:388:3","statements":[{"assignments":[1209],"declarations":[{"constant":false,"id":1209,"mutability":"mutable","name":"currentAllowance","nameLocation":"12100:16:3","nodeType":"VariableDeclaration","scope":1245,"src":"12092:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1208,"name":"uint256","nodeType":"ElementaryTypeName","src":"12092:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1214,"initialValue":{"arguments":[{"id":1211,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"12129:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1212,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"12136:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1210,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"12119:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12119:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12092:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1215,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12158:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12183:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"12183:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1216,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12178:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12178:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12192:3:3","memberName":"max","nodeType":"MemberAccess","src":"12178:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12158:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1244,"nodeType":"IfStatement","src":"12154:310:3","trueBody":{"id":1243,"nodeType":"Block","src":"12197:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1222,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12215:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"12234:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12215:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1232,"nodeType":"IfStatement","src":"12211:130:3","trueBody":{"id":1231,"nodeType":"Block","src":"12241:100:3","statements":[{"errorCall":{"arguments":[{"id":1226,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"12293:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1227,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12302:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"12320:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1225,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"12266:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12266:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1230,"nodeType":"RevertStatement","src":"12259:67:3"}]}},{"id":1242,"nodeType":"UncheckedBlock","src":"12354:100:3","statements":[{"expression":{"arguments":[{"id":1234,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"12391:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1235,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"12398:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1236,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12407:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"12426:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12407:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12433:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1233,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1130,1198],"referencedDeclaration":1198,"src":"12382:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1241,"nodeType":"ExpressionStatement","src":"12382:57:3"}]}]}}]},"documentation":{"id":1199,"nodeType":"StructuredDocumentation","src":"11717:271:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1246,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"12002:15:3","nodeType":"FunctionDefinition","parameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"owner","nameLocation":"12026:5:3","nodeType":"VariableDeclaration","scope":1246,"src":"12018:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1200,"name":"address","nodeType":"ElementaryTypeName","src":"12018:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1203,"mutability":"mutable","name":"spender","nameLocation":"12041:7:3","nodeType":"VariableDeclaration","scope":1246,"src":"12033:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1202,"name":"address","nodeType":"ElementaryTypeName","src":"12033:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1205,"mutability":"mutable","name":"value","nameLocation":"12058:5:3","nodeType":"VariableDeclaration","scope":1246,"src":"12050:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1204,"name":"uint256","nodeType":"ElementaryTypeName","src":"12050:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12017:47:3"},"returnParameters":{"id":1207,"nodeType":"ParameterList","parameters":[],"src":"12082:0:3"},"scope":1247,"src":"11993:477:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1248,"src":"1576:10896:3","usedErrors":[211,214,1444,1449,1454,1463,1468,1473],"usedEvents":[219,1894,1903]}],"src":"105:12368:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1293],"Initializable":[448]},"id":1294,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1249,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1251,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":449,"src":"126:63:4","symbolAliases":[{"foreign":{"id":1250,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"134:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1253,"name":"Initializable","nameLocations":["728:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"728:13:4"},"id":1254,"nodeType":"InheritanceSpecifier","src":"728:13:4"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"191:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1293,"linearizedBaseContracts":[1293,448],"name":"ContextUpgradeable","nameLocation":"706:18:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":1259,"nodeType":"Block","src":"800:7:4","statements":[]},"id":1260,"implemented":true,"kind":"function","modifiers":[{"id":1257,"kind":"modifierInvocation","modifierName":{"id":1256,"name":"onlyInitializing","nameLocations":["783:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:4"},"nodeType":"ModifierInvocation","src":"783:16:4"}],"name":"__Context_init","nameLocation":"757:14:4","nodeType":"FunctionDefinition","parameters":{"id":1255,"nodeType":"ParameterList","parameters":[],"src":"771:2:4"},"returnParameters":{"id":1258,"nodeType":"ParameterList","parameters":[],"src":"800:0:4"},"scope":1293,"src":"748:59:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1265,"nodeType":"Block","src":"875:7:4","statements":[]},"id":1266,"implemented":true,"kind":"function","modifiers":[{"id":1263,"kind":"modifierInvocation","modifierName":{"id":1262,"name":"onlyInitializing","nameLocations":["858:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:4"},"nodeType":"ModifierInvocation","src":"858:16:4"}],"name":"__Context_init_unchained","nameLocation":"822:24:4","nodeType":"FunctionDefinition","parameters":{"id":1261,"nodeType":"ParameterList","parameters":[],"src":"846:2:4"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[],"src":"875:0:4"},"scope":1293,"src":"813:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1274,"nodeType":"Block","src":"949:34:4","statements":[{"expression":{"expression":{"id":1271,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:4","memberName":"sender","nodeType":"MemberAccess","src":"966:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1270,"id":1273,"nodeType":"Return","src":"959:17:4"}]},"id":1275,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:4","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[],"src":"906:2:4"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1275,"src":"940:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:4"},"scope":1293,"src":"887:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1283,"nodeType":"Block","src":"1056:32:4","statements":[{"expression":{"expression":{"id":1280,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:4","memberName":"data","nodeType":"MemberAccess","src":"1073:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1279,"id":1282,"nodeType":"Return","src":"1066:15:4"}]},"id":1284,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:4","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[],"src":"1006:2:4"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1284,"src":"1040:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1277,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:4"},"scope":1293,"src":"989:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1291,"nodeType":"Block","src":"1166:25:4","statements":[{"expression":{"hexValue":"30","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1288,"id":1290,"nodeType":"Return","src":"1176:8:4"}]},"id":1292,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:4","nodeType":"FunctionDefinition","parameters":{"id":1285,"nodeType":"ParameterList","parameters":[],"src":"1123:2:4"},"returnParameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1292,"src":"1157:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1286,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:4"},"scope":1293,"src":"1094:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1294,"src":"688:505:4","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"Initializable":[448],"ReentrancyGuardUpgradeable":[1422]},"id":1423,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1295,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1297,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1423,"sourceUnit":449,"src":"134:63:5","symbolAliases":[{"foreign":{"id":1296,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"142:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1299,"name":"Initializable","nameLocations":["998:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"998:13:5"},"id":1300,"nodeType":"InheritanceSpecifier","src":"998:13:5"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"199:750:5","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1422,"linearizedBaseContracts":[1422,448],"name":"ReentrancyGuardUpgradeable","nameLocation":"968:26:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1303,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1791:11:5","nodeType":"VariableDeclaration","scope":1422,"src":"1766:40:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"1766:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1805:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1306,"mutability":"constant","name":"ENTERED","nameLocation":"1837:7:5","nodeType":"VariableDeclaration","scope":1422,"src":"1812:36:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1304,"name":"uint256","nodeType":"ElementaryTypeName","src":"1812:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1847:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"canonicalName":"ReentrancyGuardUpgradeable.ReentrancyGuardStorage","documentation":{"id":1307,"nodeType":"StructuredDocumentation","src":"1855:73:5","text":"@custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard"},"id":1310,"members":[{"constant":false,"id":1309,"mutability":"mutable","name":"_status","nameLocation":"1981:7:5","nodeType":"VariableDeclaration","scope":1310,"src":"1973:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1308,"name":"uint256","nodeType":"ElementaryTypeName","src":"1973:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReentrancyGuardStorage","nameLocation":"1940:22:5","nodeType":"StructDefinition","scope":1422,"src":"1933:62:5","visibility":"public"},{"constant":true,"id":1313,"mutability":"constant","name":"ReentrancyGuardStorageLocation","nameLocation":"2145:30:5","nodeType":"VariableDeclaration","scope":1422,"src":"2120:124:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2120:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839623737396231373432326430646639323232333031386233326234643166613436653037313732336436383137653234383664303033626563633535663030","id":1312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2178:66:5","typeDescriptions":{"typeIdentifier":"t_rational_70319816728846589445362000750570655803700195216363692647688146666176345628416_by_1","typeString":"int_const 7031...(69 digits omitted)...8416"},"value":"0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"},"visibility":"private"},{"body":{"id":1320,"nodeType":"Block","src":"2345:89:5","statements":[{"AST":{"nativeSrc":"2364:64:5","nodeType":"YulBlock","src":"2364:64:5","statements":[{"nativeSrc":"2378:40:5","nodeType":"YulAssignment","src":"2378:40:5","value":{"name":"ReentrancyGuardStorageLocation","nativeSrc":"2388:30:5","nodeType":"YulIdentifier","src":"2388:30:5"},"variableNames":[{"name":"$.slot","nativeSrc":"2378:6:5","nodeType":"YulIdentifier","src":"2378:6:5"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":1317,"isOffset":false,"isSlot":true,"src":"2378:6:5","suffix":"slot","valueSize":1},{"declaration":1313,"isOffset":false,"isSlot":false,"src":"2388:30:5","valueSize":1}],"id":1319,"nodeType":"InlineAssembly","src":"2355:73:5"}]},"id":1321,"implemented":true,"kind":"function","modifiers":[],"name":"_getReentrancyGuardStorage","nameLocation":"2260:26:5","nodeType":"FunctionDefinition","parameters":{"id":1314,"nodeType":"ParameterList","parameters":[],"src":"2286:2:5"},"returnParameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"$","nameLocation":"2342:1:5","nodeType":"VariableDeclaration","scope":1321,"src":"2311:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1316,"nodeType":"UserDefinedTypeName","pathNode":{"id":1315,"name":"ReentrancyGuardStorage","nameLocations":["2311:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1310,"src":"2311:22:5"},"referencedDeclaration":1310,"src":"2311:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"src":"2310:34:5"},"scope":1422,"src":"2251:183:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":1322,"nodeType":"StructuredDocumentation","src":"2440:52:5","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1324,"name":"ReentrancyGuardReentrantCall","nameLocation":"2503:28:5","nodeType":"ErrorDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[],"src":"2531:2:5"},"src":"2497:37:5"},{"body":{"id":1332,"nodeType":"Block","src":"2600:51:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1329,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"2610:32:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2610:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1331,"nodeType":"ExpressionStatement","src":"2610:34:5"}]},"id":1333,"implemented":true,"kind":"function","modifiers":[{"id":1327,"kind":"modifierInvocation","modifierName":{"id":1326,"name":"onlyInitializing","nameLocations":["2583:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2583:16:5"},"nodeType":"ModifierInvocation","src":"2583:16:5"}],"name":"__ReentrancyGuard_init","nameLocation":"2549:22:5","nodeType":"FunctionDefinition","parameters":{"id":1325,"nodeType":"ParameterList","parameters":[],"src":"2571:2:5"},"returnParameters":{"id":1328,"nodeType":"ParameterList","parameters":[],"src":"2600:0:5"},"scope":1422,"src":"2540:111:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1350,"nodeType":"Block","src":"2727:113:5","statements":[{"assignments":[1340],"declarations":[{"constant":false,"id":1340,"mutability":"mutable","name":"$","nameLocation":"2768:1:5","nodeType":"VariableDeclaration","scope":1350,"src":"2737:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1339,"nodeType":"UserDefinedTypeName","pathNode":{"id":1338,"name":"ReentrancyGuardStorage","nameLocations":["2737:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1310,"src":"2737:22:5"},"referencedDeclaration":1310,"src":"2737:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1343,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1341,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"2772:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1310_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2772:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2737:63:5"},{"expression":{"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1344,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"2810:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2812:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1309,"src":"2810:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1347,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"2822:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2810:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1349,"nodeType":"ExpressionStatement","src":"2810:23:5"}]},"id":1351,"implemented":true,"kind":"function","modifiers":[{"id":1336,"kind":"modifierInvocation","modifierName":{"id":1335,"name":"onlyInitializing","nameLocations":["2710:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2710:16:5"},"nodeType":"ModifierInvocation","src":"2710:16:5"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"2666:32:5","nodeType":"FunctionDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[],"src":"2698:2:5"},"returnParameters":{"id":1337,"nodeType":"ParameterList","parameters":[],"src":"2727:0:5"},"scope":1422,"src":"2657:183:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1361,"nodeType":"Block","src":"3241:79:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1354,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"3251:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3251:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1356,"nodeType":"ExpressionStatement","src":"3251:21:5"},{"id":1357,"nodeType":"PlaceholderStatement","src":"3282:1:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1358,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"3293:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3293:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1360,"nodeType":"ExpressionStatement","src":"3293:20:5"}]},"documentation":{"id":1352,"nodeType":"StructuredDocumentation","src":"2846:366:5","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1362,"name":"nonReentrant","nameLocation":"3226:12:5","nodeType":"ModifierDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[],"src":"3238:2:5"},"src":"3217:103:5","virtual":false,"visibility":"internal"},{"body":{"id":1386,"nodeType":"Block","src":"3365:345:5","statements":[{"assignments":[1367],"declarations":[{"constant":false,"id":1367,"mutability":"mutable","name":"$","nameLocation":"3406:1:5","nodeType":"VariableDeclaration","scope":1386,"src":"3375:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1366,"nodeType":"UserDefinedTypeName","pathNode":{"id":1365,"name":"ReentrancyGuardStorage","nameLocations":["3375:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1310,"src":"3375:22:5"},"referencedDeclaration":1310,"src":"3375:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1370,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1368,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"3410:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1310_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3375:63:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1371,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"3526:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3528:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1309,"src":"3526:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1373,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"3539:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3526:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1379,"nodeType":"IfStatement","src":"3522:88:5","trueBody":{"id":1378,"nodeType":"Block","src":"3548:62:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1375,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"3569:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3569:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1377,"nodeType":"RevertStatement","src":"3562:37:5"}]}},{"expression":{"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"3684:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1382,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3686:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1309,"src":"3684:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1383,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"3696:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3684:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1385,"nodeType":"ExpressionStatement","src":"3684:19:5"}]},"id":1387,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"3335:19:5","nodeType":"FunctionDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[],"src":"3354:2:5"},"returnParameters":{"id":1364,"nodeType":"ParameterList","parameters":[],"src":"3365:0:5"},"scope":1422,"src":"3326:384:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1402,"nodeType":"Block","src":"3754:245:5","statements":[{"assignments":[1392],"declarations":[{"constant":false,"id":1392,"mutability":"mutable","name":"$","nameLocation":"3795:1:5","nodeType":"VariableDeclaration","scope":1402,"src":"3764:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1391,"nodeType":"UserDefinedTypeName","pathNode":{"id":1390,"name":"ReentrancyGuardStorage","nameLocations":["3764:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1310,"src":"3764:22:5"},"referencedDeclaration":1310,"src":"3764:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1395,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1393,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"3799:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1310_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3799:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3764:63:5"},{"expression":{"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1396,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"3969:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1398,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3971:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1309,"src":"3969:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1399,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"3981:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3969:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1401,"nodeType":"ExpressionStatement","src":"3969:23:5"}]},"id":1403,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"3725:18:5","nodeType":"FunctionDefinition","parameters":{"id":1388,"nodeType":"ParameterList","parameters":[],"src":"3743:2:5"},"returnParameters":{"id":1389,"nodeType":"ParameterList","parameters":[],"src":"3754:0:5"},"scope":1422,"src":"3716:283:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1420,"nodeType":"Block","src":"4242:117:5","statements":[{"assignments":[1411],"declarations":[{"constant":false,"id":1411,"mutability":"mutable","name":"$","nameLocation":"4283:1:5","nodeType":"VariableDeclaration","scope":1420,"src":"4252:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1410,"nodeType":"UserDefinedTypeName","pathNode":{"id":1409,"name":"ReentrancyGuardStorage","nameLocations":["4252:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1310,"src":"4252:22:5"},"referencedDeclaration":1310,"src":"4252:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1414,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1412,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"4287:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1310_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4287:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4252:63:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1415,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"4332:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4334:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1309,"src":"4332:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1417,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"4345:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4332:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1408,"id":1419,"nodeType":"Return","src":"4325:27:5"}]},"documentation":{"id":1404,"nodeType":"StructuredDocumentation","src":"4005:168:5","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1421,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"4187:23:5","nodeType":"FunctionDefinition","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[],"src":"4210:2:5"},"returnParameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1421,"src":"4236:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1406,"name":"bool","nodeType":"ElementaryTypeName","src":"4236:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4235:6:5"},"scope":1422,"src":"4178:181:5","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1423,"src":"950:3411:5","usedErrors":[211,214,1324],"usedEvents":[219]}],"src":"109:4253:5"},"id":5},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[1432]},"id":1433,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1424,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1425,"nodeType":"StructuredDocumentation","src":"139:203:6","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":1432,"linearizedBaseContracts":[1432],"name":"IERC1822Proxiable","nameLocation":"353:17:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1426,"nodeType":"StructuredDocumentation","src":"377:438:6","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":1431,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"829:13:6","nodeType":"FunctionDefinition","parameters":{"id":1427,"nodeType":"ParameterList","parameters":[],"src":"842:2:6"},"returnParameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1431,"src":"868:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1428,"name":"bytes32","nodeType":"ElementaryTypeName","src":"868:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"867:9:6"},"scope":1432,"src":"820:57:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1433,"src":"343:536:6","usedErrors":[],"usedEvents":[]}],"src":"113:767:6"},"id":6},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[1569],"IERC20Errors":[1474],"IERC721Errors":[1522]},"id":1570,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1434,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1435,"nodeType":"StructuredDocumentation","src":"138:139:7","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":1474,"linearizedBaseContracts":[1474],"name":"IERC20Errors","nameLocation":"288:12:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1436,"nodeType":"StructuredDocumentation","src":"307:309:7","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":1444,"name":"ERC20InsufficientBalance","nameLocation":"627:24:7","nodeType":"ErrorDefinition","parameters":{"id":1443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"sender","nameLocation":"660:6:7","nodeType":"VariableDeclaration","scope":1444,"src":"652:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1437,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1440,"mutability":"mutable","name":"balance","nameLocation":"676:7:7","nodeType":"VariableDeclaration","scope":1444,"src":"668:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1439,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1442,"mutability":"mutable","name":"needed","nameLocation":"693:6:7","nodeType":"VariableDeclaration","scope":1444,"src":"685:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1441,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:7"},"src":"621:80:7"},{"documentation":{"id":1445,"nodeType":"StructuredDocumentation","src":"707:152:7","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":1449,"name":"ERC20InvalidSender","nameLocation":"870:18:7","nodeType":"ErrorDefinition","parameters":{"id":1448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1447,"mutability":"mutable","name":"sender","nameLocation":"897:6:7","nodeType":"VariableDeclaration","scope":1449,"src":"889:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1446,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:7"},"src":"864:41:7"},{"documentation":{"id":1450,"nodeType":"StructuredDocumentation","src":"911:159:7","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":1454,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:7","nodeType":"ErrorDefinition","parameters":{"id":1453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1452,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:7","nodeType":"VariableDeclaration","scope":1454,"src":"1102:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1451,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:7"},"src":"1075:45:7"},{"documentation":{"id":1455,"nodeType":"StructuredDocumentation","src":"1126:345:7","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":1463,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:7","nodeType":"ErrorDefinition","parameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"mutability":"mutable","name":"spender","nameLocation":"1517:7:7","nodeType":"VariableDeclaration","scope":1463,"src":"1509:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1456,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1459,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:7","nodeType":"VariableDeclaration","scope":1463,"src":"1526:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1458,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1461,"mutability":"mutable","name":"needed","nameLocation":"1553:6:7","nodeType":"VariableDeclaration","scope":1463,"src":"1545:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1460,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:7"},"src":"1476:85:7"},{"documentation":{"id":1464,"nodeType":"StructuredDocumentation","src":"1567:174:7","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":1468,"name":"ERC20InvalidApprover","nameLocation":"1752:20:7","nodeType":"ErrorDefinition","parameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"approver","nameLocation":"1781:8:7","nodeType":"VariableDeclaration","scope":1468,"src":"1773:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1465,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:7"},"src":"1746:45:7"},{"documentation":{"id":1469,"nodeType":"StructuredDocumentation","src":"1797:195:7","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":1473,"name":"ERC20InvalidSpender","nameLocation":"2003:19:7","nodeType":"ErrorDefinition","parameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1471,"mutability":"mutable","name":"spender","nameLocation":"2031:7:7","nodeType":"VariableDeclaration","scope":1473,"src":"2023:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1470,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:7"},"src":"1997:43:7"}],"scope":1570,"src":"278:1764:7","usedErrors":[1444,1449,1454,1463,1468,1473],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1475,"nodeType":"StructuredDocumentation","src":"2044:141:7","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":1522,"linearizedBaseContracts":[1522],"name":"IERC721Errors","nameLocation":"2196:13:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1476,"nodeType":"StructuredDocumentation","src":"2216:219:7","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":1480,"name":"ERC721InvalidOwner","nameLocation":"2446:18:7","nodeType":"ErrorDefinition","parameters":{"id":1479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1478,"mutability":"mutable","name":"owner","nameLocation":"2473:5:7","nodeType":"VariableDeclaration","scope":1480,"src":"2465:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1477,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:7"},"src":"2440:40:7"},{"documentation":{"id":1481,"nodeType":"StructuredDocumentation","src":"2486:132:7","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":1485,"name":"ERC721NonexistentToken","nameLocation":"2629:22:7","nodeType":"ErrorDefinition","parameters":{"id":1484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1483,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:7","nodeType":"VariableDeclaration","scope":1485,"src":"2652:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1482,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:7"},"src":"2623:46:7"},{"documentation":{"id":1486,"nodeType":"StructuredDocumentation","src":"2675:289:7","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":1494,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:7","nodeType":"ErrorDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"sender","nameLocation":"3004:6:7","nodeType":"VariableDeclaration","scope":1494,"src":"2996:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1490,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:7","nodeType":"VariableDeclaration","scope":1494,"src":"3012:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"owner","nameLocation":"3037:5:7","nodeType":"VariableDeclaration","scope":1494,"src":"3029:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1491,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:7"},"src":"2969:75:7"},{"documentation":{"id":1495,"nodeType":"StructuredDocumentation","src":"3050:152:7","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":1499,"name":"ERC721InvalidSender","nameLocation":"3213:19:7","nodeType":"ErrorDefinition","parameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"sender","nameLocation":"3241:6:7","nodeType":"VariableDeclaration","scope":1499,"src":"3233:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1496,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:7"},"src":"3207:42:7"},{"documentation":{"id":1500,"nodeType":"StructuredDocumentation","src":"3255:159:7","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":1504,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:7","nodeType":"ErrorDefinition","parameters":{"id":1503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1502,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:7","nodeType":"VariableDeclaration","scope":1504,"src":"3447:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1501,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:7"},"src":"3419:46:7"},{"documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"3471:247:7","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":1511,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:7","nodeType":"ErrorDefinition","parameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"operator","nameLocation":"3764:8:7","nodeType":"VariableDeclaration","scope":1511,"src":"3756:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:7","nodeType":"VariableDeclaration","scope":1511,"src":"3774:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:7"},"src":"3723:68:7"},{"documentation":{"id":1512,"nodeType":"StructuredDocumentation","src":"3797:174:7","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":1516,"name":"ERC721InvalidApprover","nameLocation":"3982:21:7","nodeType":"ErrorDefinition","parameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"approver","nameLocation":"4012:8:7","nodeType":"VariableDeclaration","scope":1516,"src":"4004:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1513,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:7"},"src":"3976:46:7"},{"documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"4028:197:7","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":1521,"name":"ERC721InvalidOperator","nameLocation":"4236:21:7","nodeType":"ErrorDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"operator","nameLocation":"4266:8:7","nodeType":"VariableDeclaration","scope":1521,"src":"4258:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1518,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:7"},"src":"4230:46:7"}],"scope":1570,"src":"2186:2092:7","usedErrors":[1480,1485,1494,1499,1504,1511,1516,1521],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"4280:143:7","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":1569,"linearizedBaseContracts":[1569],"name":"IERC1155Errors","nameLocation":"4434:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1524,"nodeType":"StructuredDocumentation","src":"4455:361:7","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":1534,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:7","nodeType":"ErrorDefinition","parameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1526,"mutability":"mutable","name":"sender","nameLocation":"4862:6:7","nodeType":"VariableDeclaration","scope":1534,"src":"4854:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1525,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1528,"mutability":"mutable","name":"balance","nameLocation":"4878:7:7","nodeType":"VariableDeclaration","scope":1534,"src":"4870:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1527,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1530,"mutability":"mutable","name":"needed","nameLocation":"4895:6:7","nodeType":"VariableDeclaration","scope":1534,"src":"4887:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1529,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1532,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:7","nodeType":"VariableDeclaration","scope":1534,"src":"4903:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1531,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:7"},"src":"4821:99:7"},{"documentation":{"id":1535,"nodeType":"StructuredDocumentation","src":"4926:152:7","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":1539,"name":"ERC1155InvalidSender","nameLocation":"5089:20:7","nodeType":"ErrorDefinition","parameters":{"id":1538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1537,"mutability":"mutable","name":"sender","nameLocation":"5118:6:7","nodeType":"VariableDeclaration","scope":1539,"src":"5110:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1536,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:7"},"src":"5083:43:7"},{"documentation":{"id":1540,"nodeType":"StructuredDocumentation","src":"5132:159:7","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":1544,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:7","nodeType":"ErrorDefinition","parameters":{"id":1543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1542,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:7","nodeType":"VariableDeclaration","scope":1544,"src":"5325:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1541,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:7"},"src":"5296:47:7"},{"documentation":{"id":1545,"nodeType":"StructuredDocumentation","src":"5349:256:7","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":1551,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:7","nodeType":"ErrorDefinition","parameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"operator","nameLocation":"5653:8:7","nodeType":"VariableDeclaration","scope":1551,"src":"5645:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1549,"mutability":"mutable","name":"owner","nameLocation":"5671:5:7","nodeType":"VariableDeclaration","scope":1551,"src":"5663:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1548,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:7"},"src":"5610:68:7"},{"documentation":{"id":1552,"nodeType":"StructuredDocumentation","src":"5684:174:7","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":1556,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:7","nodeType":"ErrorDefinition","parameters":{"id":1555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1554,"mutability":"mutable","name":"approver","nameLocation":"5900:8:7","nodeType":"VariableDeclaration","scope":1556,"src":"5892:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1553,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:7"},"src":"5863:47:7"},{"documentation":{"id":1557,"nodeType":"StructuredDocumentation","src":"5916:197:7","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":1561,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:7","nodeType":"ErrorDefinition","parameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"operator","nameLocation":"6155:8:7","nodeType":"VariableDeclaration","scope":1561,"src":"6147:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1558,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:7"},"src":"6118:47:7"},{"documentation":{"id":1562,"nodeType":"StructuredDocumentation","src":"6171:280:7","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":1568,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:7","nodeType":"ErrorDefinition","parameters":{"id":1567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1564,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:7","nodeType":"VariableDeclaration","scope":1568,"src":"6488:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1563,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1566,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:7","nodeType":"VariableDeclaration","scope":1568,"src":"6507:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1565,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:7"},"src":"6456:73:7"}],"scope":1570,"src":"4424:2107:7","usedErrors":[1534,1539,1544,1551,1556,1561,1568],"usedEvents":[]}],"src":"112:6420:7"},"id":7},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[2239],"ERC1967Utils":[1872],"IBeacon":[1882],"StorageSlot":[2349]},"id":1873,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1571,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:8"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":1573,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1873,"sourceUnit":1883,"src":"140:46:8","symbolAliases":[{"foreign":{"id":1572,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"148:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1575,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1873,"sourceUnit":2240,"src":"187:48:8","symbolAliases":[{"foreign":{"id":1574,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"195:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":1577,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1873,"sourceUnit":2350,"src":"236:56:8","symbolAliases":[{"foreign":{"id":1576,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"244:11:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1578,"nodeType":"StructuredDocumentation","src":"294:154:8","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."},"fullyImplemented":true,"id":1872,"linearizedBaseContracts":[1872],"name":"ERC1967Utils","nameLocation":"457:12:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1579,"nodeType":"StructuredDocumentation","src":"660:68:8","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":1583,"name":"Upgraded","nameLocation":"739:8:8","nodeType":"EventDefinition","parameters":{"id":1582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"764:14:8","nodeType":"VariableDeclaration","scope":1583,"src":"748:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1580,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"747:32:8"},"src":"733:47:8"},{"anonymous":false,"documentation":{"id":1584,"nodeType":"StructuredDocumentation","src":"786:67:8","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":1590,"name":"AdminChanged","nameLocation":"864:12:8","nodeType":"EventDefinition","parameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"885:13:8","nodeType":"VariableDeclaration","scope":1590,"src":"877:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1585,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1588,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"908:8:8","nodeType":"VariableDeclaration","scope":1590,"src":"900:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1587,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"876:41:8"},"src":"858:60:8"},{"anonymous":false,"documentation":{"id":1591,"nodeType":"StructuredDocumentation","src":"924:59:8","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":1595,"name":"BeaconUpgraded","nameLocation":"994:14:8","nodeType":"EventDefinition","parameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"1025:6:8","nodeType":"VariableDeclaration","scope":1595,"src":"1009:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1592,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1008:24:8"},"src":"988:45:8"},{"constant":true,"documentation":{"id":1596,"nodeType":"StructuredDocumentation","src":"1039:170:8","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":1599,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"1305:19:8","nodeType":"VariableDeclaration","scope":1872,"src":"1279:114:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1327:66:8","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":1600,"nodeType":"StructuredDocumentation","src":"1400:69:8","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":1604,"name":"ERC1967InvalidImplementation","nameLocation":"1480:28:8","nodeType":"ErrorDefinition","parameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1602,"mutability":"mutable","name":"implementation","nameLocation":"1517:14:8","nodeType":"VariableDeclaration","scope":1604,"src":"1509:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1601,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1508:24:8"},"src":"1474:59:8"},{"documentation":{"id":1605,"nodeType":"StructuredDocumentation","src":"1539:60:8","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":1609,"name":"ERC1967InvalidAdmin","nameLocation":"1610:19:8","nodeType":"ErrorDefinition","parameters":{"id":1608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1607,"mutability":"mutable","name":"admin","nameLocation":"1638:5:8","nodeType":"VariableDeclaration","scope":1609,"src":"1630:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1629:15:8"},"src":"1604:41:8"},{"documentation":{"id":1610,"nodeType":"StructuredDocumentation","src":"1651:61:8","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":1614,"name":"ERC1967InvalidBeacon","nameLocation":"1723:20:8","nodeType":"ErrorDefinition","parameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"beacon","nameLocation":"1752:6:8","nodeType":"VariableDeclaration","scope":1614,"src":"1744:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1611,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1743:16:8"},"src":"1717:43:8"},{"documentation":{"id":1615,"nodeType":"StructuredDocumentation","src":"1766:82:8","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":1617,"name":"ERC1967NonPayable","nameLocation":"1859:17:8","nodeType":"ErrorDefinition","parameters":{"id":1616,"nodeType":"ParameterList","parameters":[],"src":"1876:2:8"},"src":"1853:26:8"},{"body":{"id":1629,"nodeType":"Block","src":"2018:77:8","statements":[{"expression":{"expression":{"arguments":[{"id":1625,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"2062:19:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1623,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"2035:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2349_$","typeString":"type(library StorageSlot)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2047:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2271,"src":"2035:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2245_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2245_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2244,"src":"2035:53:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1622,"id":1628,"nodeType":"Return","src":"2028:60:8"}]},"documentation":{"id":1618,"nodeType":"StructuredDocumentation","src":"1885:67:8","text":" @dev Returns the current implementation address."},"id":1630,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1966:17:8","nodeType":"FunctionDefinition","parameters":{"id":1619,"nodeType":"ParameterList","parameters":[],"src":"1983:2:8"},"returnParameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1630,"src":"2009:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1620,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2008:9:8"},"scope":1872,"src":"1957:138:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1656,"nodeType":"Block","src":"2249:218:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1636,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"2263:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2281:4:8","memberName":"code","nodeType":"MemberAccess","src":"2263:22:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2286:6:8","memberName":"length","nodeType":"MemberAccess","src":"2263:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2263:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1646,"nodeType":"IfStatement","src":"2259:119:8","trueBody":{"id":1645,"nodeType":"Block","src":"2299:79:8","statements":[{"errorCall":{"arguments":[{"id":1642,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"2349:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1641,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"2320:28:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1644,"nodeType":"RevertStatement","src":"2313:54:8"}]}},{"expression":{"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1650,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"2414:19:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1647,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"2387:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2349_$","typeString":"type(library StorageSlot)"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2399:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2271,"src":"2387:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2245_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2387:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2245_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1652,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2435:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2244,"src":"2387:53:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1653,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"2443:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2387:73:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1655,"nodeType":"ExpressionStatement","src":"2387:73:8"}]},"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"2101:80:8","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":1657,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"2195:18:8","nodeType":"FunctionDefinition","parameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"newImplementation","nameLocation":"2222:17:8","nodeType":"VariableDeclaration","scope":1657,"src":"2214:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1632,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2213:27:8"},"returnParameters":{"id":1635,"nodeType":"ParameterList","parameters":[],"src":"2249:0:8"},"scope":1872,"src":"2186:281:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1690,"nodeType":"Block","src":"2860:254:8","statements":[{"expression":{"arguments":[{"id":1666,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2889:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1665,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"2870:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2870:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1668,"nodeType":"ExpressionStatement","src":"2870:37:8"},{"eventCall":{"arguments":[{"id":1670,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2931:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1669,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"2922:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1672,"nodeType":"EmitStatement","src":"2917:32:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1673,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"2964:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:6:8","memberName":"length","nodeType":"MemberAccess","src":"2964:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2964:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1688,"nodeType":"Block","src":"3065:43:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1685,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"3079:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1687,"nodeType":"ExpressionStatement","src":"3079:18:8"}]},"id":1689,"nodeType":"IfStatement","src":"2960:148:8","trueBody":{"id":1684,"nodeType":"Block","src":"2981:78:8","statements":[{"expression":{"arguments":[{"id":1680,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"3024:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1681,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"3043:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1677,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"2995:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2239_$","typeString":"type(library Address)"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:20:8","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2158,"src":"2995:28:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1683,"nodeType":"ExpressionStatement","src":"2995:53:8"}]}}]},"documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"2473:301:8","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":1691,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2788:16:8","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"newImplementation","nameLocation":"2813:17:8","nodeType":"VariableDeclaration","scope":1691,"src":"2805:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1659,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1662,"mutability":"mutable","name":"data","nameLocation":"2845:4:8","nodeType":"VariableDeclaration","scope":1691,"src":"2832:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1661,"name":"bytes","nodeType":"ElementaryTypeName","src":"2832:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2804:46:8"},"returnParameters":{"id":1664,"nodeType":"ParameterList","parameters":[],"src":"2860:0:8"},"scope":1872,"src":"2779:335:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1692,"nodeType":"StructuredDocumentation","src":"3120:145:8","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":1695,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"3361:10:8","nodeType":"VariableDeclaration","scope":1872,"src":"3335:105:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3335:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3374:66:8","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":1707,"nodeType":"Block","src":"3844:68:8","statements":[{"expression":{"expression":{"arguments":[{"id":1703,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"3888:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1701,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"3861:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2349_$","typeString":"type(library StorageSlot)"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3873:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2271,"src":"3861:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2245_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2245_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1705,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3900:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2244,"src":"3861:44:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1700,"id":1706,"nodeType":"Return","src":"3854:51:8"}]},"documentation":{"id":1696,"nodeType":"StructuredDocumentation","src":"3447:340:8","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":1708,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3801:8:8","nodeType":"FunctionDefinition","parameters":{"id":1697,"nodeType":"ParameterList","parameters":[],"src":"3809:2:8"},"returnParameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1708,"src":"3835:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3834:9:8"},"scope":1872,"src":"3792:120:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1738,"nodeType":"Block","src":"4039:172:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1714,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"4053:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4065:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"4065:7:8","typeDescriptions":{}}},"id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4053:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1728,"nodeType":"IfStatement","src":"4049:91:8","trueBody":{"id":1727,"nodeType":"Block","src":"4077:63:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4126:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4118:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1721,"name":"address","nodeType":"ElementaryTypeName","src":"4118:7:8","typeDescriptions":{}}},"id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1720,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"4098:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1726,"nodeType":"RevertStatement","src":"4091:38:8"}]}},{"expression":{"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1732,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"4176:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1729,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"4149:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2349_$","typeString":"type(library StorageSlot)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4161:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2271,"src":"4149:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2245_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4149:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2245_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1734,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4188:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2244,"src":"4149:44:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1735,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"4196:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4149:55:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1737,"nodeType":"ExpressionStatement","src":"4149:55:8"}]},"documentation":{"id":1709,"nodeType":"StructuredDocumentation","src":"3918:71:8","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":1739,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4003:9:8","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1711,"mutability":"mutable","name":"newAdmin","nameLocation":"4021:8:8","nodeType":"VariableDeclaration","scope":1739,"src":"4013:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1710,"name":"address","nodeType":"ElementaryTypeName","src":"4013:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4012:18:8"},"returnParameters":{"id":1713,"nodeType":"ParameterList","parameters":[],"src":"4039:0:8"},"scope":1872,"src":"3994:217:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1755,"nodeType":"Block","src":"4379:85:8","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1746,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"4407:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1748,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"4419:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1745,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"4394:12:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4394:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1750,"nodeType":"EmitStatement","src":"4389:39:8"},{"expression":{"arguments":[{"id":1752,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"4448:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1751,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"4438:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1754,"nodeType":"ExpressionStatement","src":"4438:19:8"}]},"documentation":{"id":1740,"nodeType":"StructuredDocumentation","src":"4217:109:8","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":1756,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"4340:11:8","nodeType":"FunctionDefinition","parameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"newAdmin","nameLocation":"4360:8:8","nodeType":"VariableDeclaration","scope":1756,"src":"4352:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1741,"name":"address","nodeType":"ElementaryTypeName","src":"4352:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4351:18:8"},"returnParameters":{"id":1744,"nodeType":"ParameterList","parameters":[],"src":"4379:0:8"},"scope":1872,"src":"4331:133:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1757,"nodeType":"StructuredDocumentation","src":"4470:201:8","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":1760,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4767:11:8","nodeType":"VariableDeclaration","scope":1872,"src":"4741:106:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4741:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4781:66:8","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":1772,"nodeType":"Block","src":"4963:69:8","statements":[{"expression":{"expression":{"arguments":[{"id":1768,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"5007:11:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1766,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"4980:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2349_$","typeString":"type(library StorageSlot)"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4992:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2271,"src":"4980:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2245_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4980:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2245_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1770,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2244,"src":"4980:45:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1765,"id":1771,"nodeType":"Return","src":"4973:52:8"}]},"documentation":{"id":1761,"nodeType":"StructuredDocumentation","src":"4854:51:8","text":" @dev Returns the current beacon."},"id":1773,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4919:9:8","nodeType":"FunctionDefinition","parameters":{"id":1762,"nodeType":"ParameterList","parameters":[],"src":"4928:2:8"},"returnParameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1773,"src":"4954:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1763,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4953:9:8"},"scope":1872,"src":"4910:122:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1818,"nodeType":"Block","src":"5161:390:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1779,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"5175:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5185:4:8","memberName":"code","nodeType":"MemberAccess","src":"5175:14:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5190:6:8","memberName":"length","nodeType":"MemberAccess","src":"5175:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5200:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5175:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1789,"nodeType":"IfStatement","src":"5171:95:8","trueBody":{"id":1788,"nodeType":"Block","src":"5203:63:8","statements":[{"errorCall":{"arguments":[{"id":1785,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"5245:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1784,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"5224:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5224:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1787,"nodeType":"RevertStatement","src":"5217:38:8"}]}},{"expression":{"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1793,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"5303:11:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1790,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"5276:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2349_$","typeString":"type(library StorageSlot)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5288:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2271,"src":"5276:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2245_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2245_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5316:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2244,"src":"5276:45:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1796,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"5324:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5276:57:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1798,"nodeType":"ExpressionStatement","src":"5276:57:8"},{"assignments":[1800],"declarations":[{"constant":false,"id":1800,"mutability":"mutable","name":"beaconImplementation","nameLocation":"5352:20:8","nodeType":"VariableDeclaration","scope":1818,"src":"5344:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1799,"name":"address","nodeType":"ElementaryTypeName","src":"5344:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1806,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1802,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"5383:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1801,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"5375:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1882_$","typeString":"type(contract IBeacon)"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1882","typeString":"contract IBeacon"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5394:14:8","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1881,"src":"5375:33:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5344:66:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1807,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"5424:20:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5445:4:8","memberName":"code","nodeType":"MemberAccess","src":"5424:25:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5450:6:8","memberName":"length","nodeType":"MemberAccess","src":"5424:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5460:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5424:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1817,"nodeType":"IfStatement","src":"5420:125:8","trueBody":{"id":1816,"nodeType":"Block","src":"5463:82:8","statements":[{"errorCall":{"arguments":[{"id":1813,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"5513:20:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1812,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"5484:28:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1815,"nodeType":"RevertStatement","src":"5477:57:8"}]}}]},"documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"5038:71:8","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":1819,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5123:10:8","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"newBeacon","nameLocation":"5142:9:8","nodeType":"VariableDeclaration","scope":1819,"src":"5134:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1775,"name":"address","nodeType":"ElementaryTypeName","src":"5134:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5133:19:8"},"returnParameters":{"id":1778,"nodeType":"ParameterList","parameters":[],"src":"5161:0:8"},"scope":1872,"src":"5114:437:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1856,"nodeType":"Block","src":"6155:254:8","statements":[{"expression":{"arguments":[{"id":1828,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"6176:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1827,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"6165:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6165:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1830,"nodeType":"ExpressionStatement","src":"6165:21:8"},{"eventCall":{"arguments":[{"id":1832,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"6216:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1831,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"6201:14:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6201:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1834,"nodeType":"EmitStatement","src":"6196:30:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1835,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"6241:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6246:6:8","memberName":"length","nodeType":"MemberAccess","src":"6241:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6255:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6241:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1854,"nodeType":"Block","src":"6360:43:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1851,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"6374:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1853,"nodeType":"ExpressionStatement","src":"6374:18:8"}]},"id":1855,"nodeType":"IfStatement","src":"6237:166:8","trueBody":{"id":1850,"nodeType":"Block","src":"6258:96:8","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1843,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"6309:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1842,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"6301:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1882_$","typeString":"type(contract IBeacon)"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1882","typeString":"contract IBeacon"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6320:14:8","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1881,"src":"6301:33:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1847,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"6338:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1839,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"6272:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2239_$","typeString":"type(library Address)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6280:20:8","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2158,"src":"6272:28:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6272:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1849,"nodeType":"ExpressionStatement","src":"6272:71:8"}]}}]},"documentation":{"id":1820,"nodeType":"StructuredDocumentation","src":"5557:514:8","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":1857,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"6085:22:8","nodeType":"FunctionDefinition","parameters":{"id":1825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"newBeacon","nameLocation":"6116:9:8","nodeType":"VariableDeclaration","scope":1857,"src":"6108:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1821,"name":"address","nodeType":"ElementaryTypeName","src":"6108:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1824,"mutability":"mutable","name":"data","nameLocation":"6140:4:8","nodeType":"VariableDeclaration","scope":1857,"src":"6127:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1823,"name":"bytes","nodeType":"ElementaryTypeName","src":"6127:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:38:8"},"returnParameters":{"id":1826,"nodeType":"ParameterList","parameters":[],"src":"6155:0:8"},"scope":1872,"src":"6076:333:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1870,"nodeType":"Block","src":"6634:86:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1861,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6648:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6652:5:8","memberName":"value","nodeType":"MemberAccess","src":"6648:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6648:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1869,"nodeType":"IfStatement","src":"6644:70:8","trueBody":{"id":1868,"nodeType":"Block","src":"6663:51:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1865,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"6684:17:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1867,"nodeType":"RevertStatement","src":"6677:26:8"}]}}]},"documentation":{"id":1858,"nodeType":"StructuredDocumentation","src":"6415:178:8","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":1871,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6607:16:8","nodeType":"FunctionDefinition","parameters":{"id":1859,"nodeType":"ParameterList","parameters":[],"src":"6623:2:8"},"returnParameters":{"id":1860,"nodeType":"ParameterList","parameters":[],"src":"6634:0:8"},"scope":1872,"src":"6598:122:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1873,"src":"449:6273:8","usedErrors":[1604,1609,1614,1617],"usedEvents":[1583,1590,1595]}],"src":"114:6609:8"},"id":8},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[1882]},"id":1883,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1874,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":1875,"nodeType":"StructuredDocumentation","src":"134:79:9","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":1882,"linearizedBaseContracts":[1882],"name":"IBeacon","nameLocation":"224:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"238:168:9","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":1881,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:9","nodeType":"FunctionDefinition","parameters":{"id":1877,"nodeType":"ParameterList","parameters":[],"src":"434:2:9"},"returnParameters":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1881,"src":"460:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1878,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:9"},"scope":1882,"src":"411:58:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1883,"src":"214:257:9","usedErrors":[],"usedEvents":[]}],"src":"108:364:9"},"id":9},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1960]},"id":1961,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1884,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1885,"nodeType":"StructuredDocumentation","src":"132:70:10","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1960,"linearizedBaseContracts":[1960],"name":"IERC20","nameLocation":"213:6:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1886,"nodeType":"StructuredDocumentation","src":"226:158:10","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1894,"name":"Transfer","nameLocation":"395:8:10","nodeType":"EventDefinition","parameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:10","nodeType":"VariableDeclaration","scope":1894,"src":"404:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1887,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1890,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:10","nodeType":"VariableDeclaration","scope":1894,"src":"426:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1889,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1892,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:10","nodeType":"VariableDeclaration","scope":1894,"src":"446:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1891,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:10"},"src":"389:72:10"},{"anonymous":false,"documentation":{"id":1895,"nodeType":"StructuredDocumentation","src":"467:148:10","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1903,"name":"Approval","nameLocation":"626:8:10","nodeType":"EventDefinition","parameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1897,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:10","nodeType":"VariableDeclaration","scope":1903,"src":"635:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1896,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1899,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:10","nodeType":"VariableDeclaration","scope":1903,"src":"658:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1898,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1901,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:10","nodeType":"VariableDeclaration","scope":1903,"src":"683:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1900,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:10"},"src":"620:78:10"},{"documentation":{"id":1904,"nodeType":"StructuredDocumentation","src":"704:65:10","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1909,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:10","nodeType":"FunctionDefinition","parameters":{"id":1905,"nodeType":"ParameterList","parameters":[],"src":"794:2:10"},"returnParameters":{"id":1908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1909,"src":"820:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1906,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:10"},"scope":1960,"src":"774:55:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1910,"nodeType":"StructuredDocumentation","src":"835:71:10","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1917,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:10","nodeType":"FunctionDefinition","parameters":{"id":1913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"account","nameLocation":"938:7:10","nodeType":"VariableDeclaration","scope":1917,"src":"930:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1911,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:10"},"returnParameters":{"id":1916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1917,"src":"970:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:10"},"scope":1960,"src":"911:68:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1918,"nodeType":"StructuredDocumentation","src":"985:213:10","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1927,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:10","nodeType":"FunctionDefinition","parameters":{"id":1923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"mutability":"mutable","name":"to","nameLocation":"1229:2:10","nodeType":"VariableDeclaration","scope":1927,"src":"1221:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1919,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1922,"mutability":"mutable","name":"value","nameLocation":"1241:5:10","nodeType":"VariableDeclaration","scope":1927,"src":"1233:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1921,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:10"},"returnParameters":{"id":1926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1927,"src":"1266:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1924,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:10"},"scope":1960,"src":"1203:69:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1928,"nodeType":"StructuredDocumentation","src":"1278:264:10","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1937,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:10","nodeType":"FunctionDefinition","parameters":{"id":1933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"owner","nameLocation":"1574:5:10","nodeType":"VariableDeclaration","scope":1937,"src":"1566:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1929,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1932,"mutability":"mutable","name":"spender","nameLocation":"1589:7:10","nodeType":"VariableDeclaration","scope":1937,"src":"1581:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1931,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:10"},"returnParameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1937,"src":"1621:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1934,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:10"},"scope":1960,"src":"1547:83:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1938,"nodeType":"StructuredDocumentation","src":"1636:667:10","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1947,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:10","nodeType":"FunctionDefinition","parameters":{"id":1943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1940,"mutability":"mutable","name":"spender","nameLocation":"2333:7:10","nodeType":"VariableDeclaration","scope":1947,"src":"2325:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1939,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1942,"mutability":"mutable","name":"value","nameLocation":"2350:5:10","nodeType":"VariableDeclaration","scope":1947,"src":"2342:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1941,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:10"},"returnParameters":{"id":1946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1947,"src":"2375:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1944,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:10"},"scope":1960,"src":"2308:73:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1948,"nodeType":"StructuredDocumentation","src":"2387:297:10","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1959,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:10","nodeType":"FunctionDefinition","parameters":{"id":1955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1950,"mutability":"mutable","name":"from","nameLocation":"2719:4:10","nodeType":"VariableDeclaration","scope":1959,"src":"2711:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1949,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1952,"mutability":"mutable","name":"to","nameLocation":"2733:2:10","nodeType":"VariableDeclaration","scope":1959,"src":"2725:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1951,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1954,"mutability":"mutable","name":"value","nameLocation":"2745:5:10","nodeType":"VariableDeclaration","scope":1959,"src":"2737:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1953,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:10"},"returnParameters":{"id":1958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1959,"src":"2770:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1956,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:10"},"scope":1960,"src":"2689:87:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1961,"src":"203:2575:10","usedErrors":[],"usedEvents":[1894,1903]}],"src":"106:2673:10"},"id":10},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1960],"IERC20Metadata":[1986]},"id":1987,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1962,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1964,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1987,"sourceUnit":1961,"src":"151:37:11","symbolAliases":[{"foreign":{"id":1963,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"159:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1966,"name":"IERC20","nameLocations":["305:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":1960,"src":"305:6:11"},"id":1967,"nodeType":"InheritanceSpecifier","src":"305:6:11"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1965,"nodeType":"StructuredDocumentation","src":"190:86:11","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":1986,"linearizedBaseContracts":[1986,1960],"name":"IERC20Metadata","nameLocation":"287:14:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1968,"nodeType":"StructuredDocumentation","src":"318:54:11","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1973,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:11","nodeType":"FunctionDefinition","parameters":{"id":1969,"nodeType":"ParameterList","parameters":[],"src":"390:2:11"},"returnParameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1973,"src":"416:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1970,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:11"},"scope":1986,"src":"377:54:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1974,"nodeType":"StructuredDocumentation","src":"437:56:11","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1979,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:11","nodeType":"FunctionDefinition","parameters":{"id":1975,"nodeType":"ParameterList","parameters":[],"src":"513:2:11"},"returnParameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1979,"src":"539:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1976,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:11"},"scope":1986,"src":"498:56:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1980,"nodeType":"StructuredDocumentation","src":"560:65:11","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1985,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:11","nodeType":"FunctionDefinition","parameters":{"id":1981,"nodeType":"ParameterList","parameters":[],"src":"647:2:11"},"returnParameters":{"id":1984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1985,"src":"673:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1982,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:11"},"scope":1986,"src":"630:50:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1987,"src":"277:405:11","usedErrors":[],"usedEvents":[1894,1903]}],"src":"125:558:11"},"id":11},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2239]},"id":2240,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1988,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1989,"nodeType":"StructuredDocumentation","src":"127:67:12","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2239,"linearizedBaseContracts":[2239],"name":"Address","nameLocation":"203:7:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1990,"nodeType":"StructuredDocumentation","src":"217:94:12","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":1994,"name":"AddressInsufficientBalance","nameLocation":"322:26:12","nodeType":"ErrorDefinition","parameters":{"id":1993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1992,"mutability":"mutable","name":"account","nameLocation":"357:7:12","nodeType":"VariableDeclaration","scope":1994,"src":"349:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1991,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:12"},"src":"316:50:12"},{"documentation":{"id":1995,"nodeType":"StructuredDocumentation","src":"372:75:12","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":1999,"name":"AddressEmptyCode","nameLocation":"458:16:12","nodeType":"ErrorDefinition","parameters":{"id":1998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1997,"mutability":"mutable","name":"target","nameLocation":"483:6:12","nodeType":"VariableDeclaration","scope":1999,"src":"475:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1996,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:12"},"src":"452:39:12"},{"documentation":{"id":2000,"nodeType":"StructuredDocumentation","src":"497:89:12","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":2002,"name":"FailedInnerCall","nameLocation":"597:15:12","nodeType":"ErrorDefinition","parameters":{"id":2001,"nodeType":"ParameterList","parameters":[],"src":"612:2:12"},"src":"591:24:12"},{"body":{"id":2042,"nodeType":"Block","src":"1602:260:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2012,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2239","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2239","typeString":"library Address"}],"id":2011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2010,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:12","typeDescriptions":{}}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:12","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2015,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"1640:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2025,"nodeType":"IfStatement","src":"1612:109:12","trueBody":{"id":2024,"nodeType":"Block","src":"1648:73:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2020,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2239","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2239","typeString":"library Address"}],"id":2019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2018,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:12","typeDescriptions":{}}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2017,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"1669:26:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2023,"nodeType":"RevertStatement","src":"1662:48:12"}]}},{"assignments":[2027,null],"declarations":[{"constant":false,"id":2027,"mutability":"mutable","name":"success","nameLocation":"1737:7:12","nodeType":"VariableDeclaration","scope":2042,"src":"1732:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2026,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2034,"initialValue":{"arguments":[{"hexValue":"","id":2032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2028,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"1750:9:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:12","memberName":"call","nodeType":"MemberAccess","src":"1750:14:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2030,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"1772:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:12"},{"condition":{"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:12","subExpression":{"id":2035,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"1798:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2041,"nodeType":"IfStatement","src":"1793:63:12","trueBody":{"id":2040,"nodeType":"Block","src":"1807:49:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2037,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"1828:15:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2039,"nodeType":"RevertStatement","src":"1821:24:12"}]}}]},"documentation":{"id":2003,"nodeType":"StructuredDocumentation","src":"621:905:12","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2043,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:12","nodeType":"FunctionDefinition","parameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2005,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:12","nodeType":"VariableDeclaration","scope":2043,"src":"1550:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2004,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2007,"mutability":"mutable","name":"amount","nameLocation":"1585:6:12","nodeType":"VariableDeclaration","scope":2043,"src":"1577:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:12"},"returnParameters":{"id":2009,"nodeType":"ParameterList","parameters":[],"src":"1602:0:12"},"scope":2239,"src":"1531:331:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2059,"nodeType":"Block","src":"2794:62:12","statements":[{"expression":{"arguments":[{"id":2054,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"2833:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2055,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"2841:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2053,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"2811:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2052,"id":2058,"nodeType":"Return","src":"2804:45:12"}]},"documentation":{"id":2044,"nodeType":"StructuredDocumentation","src":"1868:832:12","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":2060,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:12","nodeType":"FunctionDefinition","parameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"target","nameLocation":"2735:6:12","nodeType":"VariableDeclaration","scope":2060,"src":"2727:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2045,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2048,"mutability":"mutable","name":"data","nameLocation":"2756:4:12","nodeType":"VariableDeclaration","scope":2060,"src":"2743:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2047,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:12"},"returnParameters":{"id":2052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2060,"src":"2780:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2050,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:12"},"scope":2239,"src":"2705:151:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2105,"nodeType":"Block","src":"3293:279:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2074,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2239","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2239","typeString":"library Address"}],"id":2073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2072,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:12","typeDescriptions":{}}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:12","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"3331:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2087,"nodeType":"IfStatement","src":"3303:108:12","trueBody":{"id":2086,"nodeType":"Block","src":"3338:73:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2082,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2239","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2239","typeString":"library Address"}],"id":2081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2080,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:12","typeDescriptions":{}}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2079,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"3359:26:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2085,"nodeType":"RevertStatement","src":"3352:48:12"}]}},{"assignments":[2089,2091],"declarations":[{"constant":false,"id":2089,"mutability":"mutable","name":"success","nameLocation":"3426:7:12","nodeType":"VariableDeclaration","scope":2105,"src":"3421:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2088,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2091,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:12","nodeType":"VariableDeclaration","scope":2105,"src":"3435:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2090,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2098,"initialValue":{"arguments":[{"id":2096,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"3488:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2092,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"3462:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:12","memberName":"call","nodeType":"MemberAccess","src":"3462:11:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"3481:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:12"},{"expression":{"arguments":[{"id":2100,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"3537:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2101,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"3545:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2102,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"3554:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2099,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"3510:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2071,"id":2104,"nodeType":"Return","src":"3503:62:12"}]},"documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"2862:313:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":2106,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:12","nodeType":"FunctionDefinition","parameters":{"id":2068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"target","nameLocation":"3219:6:12","nodeType":"VariableDeclaration","scope":2106,"src":"3211:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2062,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2065,"mutability":"mutable","name":"data","nameLocation":"3240:4:12","nodeType":"VariableDeclaration","scope":2106,"src":"3227:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2064,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2067,"mutability":"mutable","name":"value","nameLocation":"3254:5:12","nodeType":"VariableDeclaration","scope":2106,"src":"3246:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2066,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:12"},"returnParameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2106,"src":"3279:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2069,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:12"},"scope":2239,"src":"3180:392:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2131,"nodeType":"Block","src":"3811:154:12","statements":[{"assignments":[2117,2119],"declarations":[{"constant":false,"id":2117,"mutability":"mutable","name":"success","nameLocation":"3827:7:12","nodeType":"VariableDeclaration","scope":2131,"src":"3822:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2116,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2119,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:12","nodeType":"VariableDeclaration","scope":2131,"src":"3836:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2118,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2124,"initialValue":{"arguments":[{"id":2122,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"3881:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2120,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"3863:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:12","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:12","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:12"},{"expression":{"arguments":[{"id":2126,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"3930:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2127,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"3938:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2128,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"3947:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2125,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"3903:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2115,"id":2130,"nodeType":"Return","src":"3896:62:12"}]},"documentation":{"id":2107,"nodeType":"StructuredDocumentation","src":"3578:128:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":2132,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:12","nodeType":"FunctionDefinition","parameters":{"id":2112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"target","nameLocation":"3747:6:12","nodeType":"VariableDeclaration","scope":2132,"src":"3739:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2108,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2111,"mutability":"mutable","name":"data","nameLocation":"3768:4:12","nodeType":"VariableDeclaration","scope":2132,"src":"3755:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2110,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:12"},"returnParameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2132,"src":"3797:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2113,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:12"},"scope":2239,"src":"3711:254:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2157,"nodeType":"Block","src":"4203:156:12","statements":[{"assignments":[2143,2145],"declarations":[{"constant":false,"id":2143,"mutability":"mutable","name":"success","nameLocation":"4219:7:12","nodeType":"VariableDeclaration","scope":2157,"src":"4214:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2142,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2145,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:12","nodeType":"VariableDeclaration","scope":2157,"src":"4228:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2144,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2150,"initialValue":{"arguments":[{"id":2148,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"4275:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2146,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"4255:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:12","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:12","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:12"},{"expression":{"arguments":[{"id":2152,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"4324:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2153,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"4332:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2154,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"4341:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2151,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"4297:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2141,"id":2156,"nodeType":"Return","src":"4290:62:12"}]},"documentation":{"id":2133,"nodeType":"StructuredDocumentation","src":"3971:130:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":2158,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:12","nodeType":"FunctionDefinition","parameters":{"id":2138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"target","nameLocation":"4144:6:12","nodeType":"VariableDeclaration","scope":2158,"src":"4136:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2134,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2137,"mutability":"mutable","name":"data","nameLocation":"4165:4:12","nodeType":"VariableDeclaration","scope":2158,"src":"4152:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2136,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:12"},"returnParameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2158,"src":"4189:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2139,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:12"},"scope":2239,"src":"4106:253:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2197,"nodeType":"Block","src":"4783:424:12","statements":[{"condition":{"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:12","subExpression":{"id":2170,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"4798:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2195,"nodeType":"Block","src":"4857:344:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2177,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"5045:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:12","memberName":"length","nodeType":"MemberAccess","src":"5045:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2181,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"5071:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:12","memberName":"code","nodeType":"MemberAccess","src":"5071:11:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:12","memberName":"length","nodeType":"MemberAccess","src":"5071:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2192,"nodeType":"IfStatement","src":"5041:119:12","trueBody":{"id":2191,"nodeType":"Block","src":"5096:64:12","statements":[{"errorCall":{"arguments":[{"id":2188,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"5138:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2187,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"5121:16:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2190,"nodeType":"RevertStatement","src":"5114:31:12"}]}},{"expression":{"id":2193,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"5180:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2169,"id":2194,"nodeType":"Return","src":"5173:17:12"}]},"id":2196,"nodeType":"IfStatement","src":"4793:408:12","trueBody":{"id":2176,"nodeType":"Block","src":"4807:44:12","statements":[{"expression":{"arguments":[{"id":2173,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"4829:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2172,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"4821:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2175,"nodeType":"ExpressionStatement","src":"4821:19:12"}]}}]},"documentation":{"id":2159,"nodeType":"StructuredDocumentation","src":"4365:255:12","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":2198,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:12","nodeType":"FunctionDefinition","parameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"mutability":"mutable","name":"target","nameLocation":"4678:6:12","nodeType":"VariableDeclaration","scope":2198,"src":"4670:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2160,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2163,"mutability":"mutable","name":"success","nameLocation":"4699:7:12","nodeType":"VariableDeclaration","scope":2198,"src":"4694:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2162,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2165,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:12","nodeType":"VariableDeclaration","scope":2198,"src":"4716:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2164,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:12"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2198,"src":"4769:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2167,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:12"},"scope":2239,"src":"4625:582:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2219,"nodeType":"Block","src":"5509:122:12","statements":[{"condition":{"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:12","subExpression":{"id":2208,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"5524:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2217,"nodeType":"Block","src":"5583:42:12","statements":[{"expression":{"id":2215,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"5604:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2207,"id":2216,"nodeType":"Return","src":"5597:17:12"}]},"id":2218,"nodeType":"IfStatement","src":"5519:106:12","trueBody":{"id":2214,"nodeType":"Block","src":"5533:44:12","statements":[{"expression":{"arguments":[{"id":2211,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"5555:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2210,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"5547:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2213,"nodeType":"ExpressionStatement","src":"5547:19:12"}]}}]},"documentation":{"id":2199,"nodeType":"StructuredDocumentation","src":"5213:189:12","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":2220,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:12","nodeType":"FunctionDefinition","parameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"success","nameLocation":"5438:7:12","nodeType":"VariableDeclaration","scope":2220,"src":"5433:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2200,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2203,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:12","nodeType":"VariableDeclaration","scope":2220,"src":"5447:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2202,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:12"},"returnParameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2220,"src":"5495:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2205,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:12"},"scope":2239,"src":"5407:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2237,"nodeType":"Block","src":"5798:461:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2226,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"5874:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:12","memberName":"length","nodeType":"MemberAccess","src":"5874:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2235,"nodeType":"Block","src":"6204:49:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2232,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"6225:15:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2234,"nodeType":"RevertStatement","src":"6218:24:12"}]},"id":2236,"nodeType":"IfStatement","src":"5870:383:12","trueBody":{"id":2231,"nodeType":"Block","src":"5897:301:12","statements":[{"AST":{"nativeSrc":"6055:133:12","nodeType":"YulBlock","src":"6055:133:12","statements":[{"nativeSrc":"6073:40:12","nodeType":"YulVariableDeclaration","src":"6073:40:12","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:12","nodeType":"YulIdentifier","src":"6102:10:12"}],"functionName":{"name":"mload","nativeSrc":"6096:5:12","nodeType":"YulIdentifier","src":"6096:5:12"},"nativeSrc":"6096:17:12","nodeType":"YulFunctionCall","src":"6096:17:12"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:12","nodeType":"YulTypedName","src":"6077:15:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:12","nodeType":"YulLiteral","src":"6141:2:12","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:12","nodeType":"YulIdentifier","src":"6145:10:12"}],"functionName":{"name":"add","nativeSrc":"6137:3:12","nodeType":"YulIdentifier","src":"6137:3:12"},"nativeSrc":"6137:19:12","nodeType":"YulFunctionCall","src":"6137:19:12"},{"name":"returndata_size","nativeSrc":"6158:15:12","nodeType":"YulIdentifier","src":"6158:15:12"}],"functionName":{"name":"revert","nativeSrc":"6130:6:12","nodeType":"YulIdentifier","src":"6130:6:12"},"nativeSrc":"6130:44:12","nodeType":"YulFunctionCall","src":"6130:44:12"},"nativeSrc":"6130:44:12","nodeType":"YulExpressionStatement","src":"6130:44:12"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2223,"isOffset":false,"isSlot":false,"src":"6102:10:12","valueSize":1},{"declaration":2223,"isOffset":false,"isSlot":false,"src":"6145:10:12","valueSize":1}],"id":2230,"nodeType":"InlineAssembly","src":"6046:142:12"}]}}]},"documentation":{"id":2221,"nodeType":"StructuredDocumentation","src":"5637:101:12","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":2238,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:12","nodeType":"FunctionDefinition","parameters":{"id":2224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2223,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:12","nodeType":"VariableDeclaration","scope":2238,"src":"5760:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2222,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:12"},"returnParameters":{"id":2225,"nodeType":"ParameterList","parameters":[],"src":"5798:0:12"},"scope":2239,"src":"5743:516:12","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2240,"src":"195:6066:12","usedErrors":[1994,1999,2002],"usedEvents":[]}],"src":"101:6161:12"},"id":12},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2349]},"id":2350,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2241,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2242,"nodeType":"StructuredDocumentation","src":"219:1025:13","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":2349,"linearizedBaseContracts":[2349],"name":"StorageSlot","nameLocation":"1253:11:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2245,"members":[{"constant":false,"id":2244,"mutability":"mutable","name":"value","nameLocation":"1308:5:13","nodeType":"VariableDeclaration","scope":2245,"src":"1300:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2243,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:13","nodeType":"StructDefinition","scope":2349,"src":"1271:49:13","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2248,"members":[{"constant":false,"id":2247,"mutability":"mutable","name":"value","nameLocation":"1360:5:13","nodeType":"VariableDeclaration","scope":2248,"src":"1355:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2246,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:13","nodeType":"StructDefinition","scope":2349,"src":"1326:46:13","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2251,"members":[{"constant":false,"id":2250,"mutability":"mutable","name":"value","nameLocation":"1415:5:13","nodeType":"VariableDeclaration","scope":2251,"src":"1407:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2249,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:13","nodeType":"StructDefinition","scope":2349,"src":"1378:49:13","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2254,"members":[{"constant":false,"id":2253,"mutability":"mutable","name":"value","nameLocation":"1470:5:13","nodeType":"VariableDeclaration","scope":2254,"src":"1462:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2252,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:13","nodeType":"StructDefinition","scope":2349,"src":"1433:49:13","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2257,"members":[{"constant":false,"id":2256,"mutability":"mutable","name":"value","nameLocation":"1523:5:13","nodeType":"VariableDeclaration","scope":2257,"src":"1516:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2255,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:13","nodeType":"StructDefinition","scope":2349,"src":"1488:47:13","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2260,"members":[{"constant":false,"id":2259,"mutability":"mutable","name":"value","nameLocation":"1574:5:13","nodeType":"VariableDeclaration","scope":2260,"src":"1568:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2258,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:13","nodeType":"StructDefinition","scope":2349,"src":"1541:45:13","visibility":"public"},{"body":{"id":2270,"nodeType":"Block","src":"1768:106:13","statements":[{"AST":{"nativeSrc":"1830:38:13","nodeType":"YulBlock","src":"1830:38:13","statements":[{"nativeSrc":"1844:14:13","nodeType":"YulAssignment","src":"1844:14:13","value":{"name":"slot","nativeSrc":"1854:4:13","nodeType":"YulIdentifier","src":"1854:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:13","nodeType":"YulIdentifier","src":"1844:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2267,"isOffset":false,"isSlot":true,"src":"1844:6:13","suffix":"slot","valueSize":1},{"declaration":2263,"isOffset":false,"isSlot":false,"src":"1854:4:13","valueSize":1}],"id":2269,"nodeType":"InlineAssembly","src":"1821:47:13"}]},"documentation":{"id":2261,"nodeType":"StructuredDocumentation","src":"1592:87:13","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2271,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:13","nodeType":"FunctionDefinition","parameters":{"id":2264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2263,"mutability":"mutable","name":"slot","nameLocation":"1716:4:13","nodeType":"VariableDeclaration","scope":2271,"src":"1708:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:13"},"returnParameters":{"id":2268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"mutability":"mutable","name":"r","nameLocation":"1765:1:13","nodeType":"VariableDeclaration","scope":2271,"src":"1745:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2245_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2266,"nodeType":"UserDefinedTypeName","pathNode":{"id":2265,"name":"AddressSlot","nameLocations":["1745:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2245,"src":"1745:11:13"},"referencedDeclaration":2245,"src":"1745:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2245_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:13"},"scope":2349,"src":"1684:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2281,"nodeType":"Block","src":"2056:106:13","statements":[{"AST":{"nativeSrc":"2118:38:13","nodeType":"YulBlock","src":"2118:38:13","statements":[{"nativeSrc":"2132:14:13","nodeType":"YulAssignment","src":"2132:14:13","value":{"name":"slot","nativeSrc":"2142:4:13","nodeType":"YulIdentifier","src":"2142:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:13","nodeType":"YulIdentifier","src":"2132:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2278,"isOffset":false,"isSlot":true,"src":"2132:6:13","suffix":"slot","valueSize":1},{"declaration":2274,"isOffset":false,"isSlot":false,"src":"2142:4:13","valueSize":1}],"id":2280,"nodeType":"InlineAssembly","src":"2109:47:13"}]},"documentation":{"id":2272,"nodeType":"StructuredDocumentation","src":"1880:87:13","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2282,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:13","nodeType":"FunctionDefinition","parameters":{"id":2275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2274,"mutability":"mutable","name":"slot","nameLocation":"2004:4:13","nodeType":"VariableDeclaration","scope":2282,"src":"1996:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2273,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:13"},"returnParameters":{"id":2279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2278,"mutability":"mutable","name":"r","nameLocation":"2053:1:13","nodeType":"VariableDeclaration","scope":2282,"src":"2033:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2248_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2277,"nodeType":"UserDefinedTypeName","pathNode":{"id":2276,"name":"BooleanSlot","nameLocations":["2033:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2248,"src":"2033:11:13"},"referencedDeclaration":2248,"src":"2033:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2248_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:13"},"scope":2349,"src":"1972:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2292,"nodeType":"Block","src":"2344:106:13","statements":[{"AST":{"nativeSrc":"2406:38:13","nodeType":"YulBlock","src":"2406:38:13","statements":[{"nativeSrc":"2420:14:13","nodeType":"YulAssignment","src":"2420:14:13","value":{"name":"slot","nativeSrc":"2430:4:13","nodeType":"YulIdentifier","src":"2430:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:13","nodeType":"YulIdentifier","src":"2420:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2289,"isOffset":false,"isSlot":true,"src":"2420:6:13","suffix":"slot","valueSize":1},{"declaration":2285,"isOffset":false,"isSlot":false,"src":"2430:4:13","valueSize":1}],"id":2291,"nodeType":"InlineAssembly","src":"2397:47:13"}]},"documentation":{"id":2283,"nodeType":"StructuredDocumentation","src":"2168:87:13","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2293,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:13","nodeType":"FunctionDefinition","parameters":{"id":2286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2285,"mutability":"mutable","name":"slot","nameLocation":"2292:4:13","nodeType":"VariableDeclaration","scope":2293,"src":"2284:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:13"},"returnParameters":{"id":2290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2289,"mutability":"mutable","name":"r","nameLocation":"2341:1:13","nodeType":"VariableDeclaration","scope":2293,"src":"2321:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2251_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2288,"nodeType":"UserDefinedTypeName","pathNode":{"id":2287,"name":"Bytes32Slot","nameLocations":["2321:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2251,"src":"2321:11:13"},"referencedDeclaration":2251,"src":"2321:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2251_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:13"},"scope":2349,"src":"2260:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2303,"nodeType":"Block","src":"2632:106:13","statements":[{"AST":{"nativeSrc":"2694:38:13","nodeType":"YulBlock","src":"2694:38:13","statements":[{"nativeSrc":"2708:14:13","nodeType":"YulAssignment","src":"2708:14:13","value":{"name":"slot","nativeSrc":"2718:4:13","nodeType":"YulIdentifier","src":"2718:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:13","nodeType":"YulIdentifier","src":"2708:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2300,"isOffset":false,"isSlot":true,"src":"2708:6:13","suffix":"slot","valueSize":1},{"declaration":2296,"isOffset":false,"isSlot":false,"src":"2718:4:13","valueSize":1}],"id":2302,"nodeType":"InlineAssembly","src":"2685:47:13"}]},"documentation":{"id":2294,"nodeType":"StructuredDocumentation","src":"2456:87:13","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2304,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:13","nodeType":"FunctionDefinition","parameters":{"id":2297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"mutability":"mutable","name":"slot","nameLocation":"2580:4:13","nodeType":"VariableDeclaration","scope":2304,"src":"2572:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:13"},"returnParameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2300,"mutability":"mutable","name":"r","nameLocation":"2629:1:13","nodeType":"VariableDeclaration","scope":2304,"src":"2609:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2254_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2299,"nodeType":"UserDefinedTypeName","pathNode":{"id":2298,"name":"Uint256Slot","nameLocations":["2609:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2254,"src":"2609:11:13"},"referencedDeclaration":2254,"src":"2609:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2254_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:13"},"scope":2349,"src":"2548:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2314,"nodeType":"Block","src":"2917:106:13","statements":[{"AST":{"nativeSrc":"2979:38:13","nodeType":"YulBlock","src":"2979:38:13","statements":[{"nativeSrc":"2993:14:13","nodeType":"YulAssignment","src":"2993:14:13","value":{"name":"slot","nativeSrc":"3003:4:13","nodeType":"YulIdentifier","src":"3003:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:13","nodeType":"YulIdentifier","src":"2993:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2311,"isOffset":false,"isSlot":true,"src":"2993:6:13","suffix":"slot","valueSize":1},{"declaration":2307,"isOffset":false,"isSlot":false,"src":"3003:4:13","valueSize":1}],"id":2313,"nodeType":"InlineAssembly","src":"2970:47:13"}]},"documentation":{"id":2305,"nodeType":"StructuredDocumentation","src":"2744:86:13","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2315,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:13","nodeType":"FunctionDefinition","parameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2307,"mutability":"mutable","name":"slot","nameLocation":"2866:4:13","nodeType":"VariableDeclaration","scope":2315,"src":"2858:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2306,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:13"},"returnParameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2311,"mutability":"mutable","name":"r","nameLocation":"2914:1:13","nodeType":"VariableDeclaration","scope":2315,"src":"2895:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2257_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2310,"nodeType":"UserDefinedTypeName","pathNode":{"id":2309,"name":"StringSlot","nameLocations":["2895:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2257,"src":"2895:10:13"},"referencedDeclaration":2257,"src":"2895:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2257_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:13"},"scope":2349,"src":"2835:188:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2325,"nodeType":"Block","src":"3225:112:13","statements":[{"AST":{"nativeSrc":"3287:44:13","nodeType":"YulBlock","src":"3287:44:13","statements":[{"nativeSrc":"3301:20:13","nodeType":"YulAssignment","src":"3301:20:13","value":{"name":"store.slot","nativeSrc":"3311:10:13","nodeType":"YulIdentifier","src":"3311:10:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:13","nodeType":"YulIdentifier","src":"3301:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2322,"isOffset":false,"isSlot":true,"src":"3301:6:13","suffix":"slot","valueSize":1},{"declaration":2318,"isOffset":false,"isSlot":true,"src":"3311:10:13","suffix":"slot","valueSize":1}],"id":2324,"nodeType":"InlineAssembly","src":"3278:53:13"}]},"documentation":{"id":2316,"nodeType":"StructuredDocumentation","src":"3029:101:13","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2326,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:13","nodeType":"FunctionDefinition","parameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"store","nameLocation":"3173:5:13","nodeType":"VariableDeclaration","scope":2326,"src":"3158:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2317,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:13"},"returnParameters":{"id":2323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2322,"mutability":"mutable","name":"r","nameLocation":"3222:1:13","nodeType":"VariableDeclaration","scope":2326,"src":"3203:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2257_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2321,"nodeType":"UserDefinedTypeName","pathNode":{"id":2320,"name":"StringSlot","nameLocations":["3203:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2257,"src":"3203:10:13"},"referencedDeclaration":2257,"src":"3203:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2257_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:13"},"scope":2349,"src":"3135:202:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2336,"nodeType":"Block","src":"3513:106:13","statements":[{"AST":{"nativeSrc":"3575:38:13","nodeType":"YulBlock","src":"3575:38:13","statements":[{"nativeSrc":"3589:14:13","nodeType":"YulAssignment","src":"3589:14:13","value":{"name":"slot","nativeSrc":"3599:4:13","nodeType":"YulIdentifier","src":"3599:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:13","nodeType":"YulIdentifier","src":"3589:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2333,"isOffset":false,"isSlot":true,"src":"3589:6:13","suffix":"slot","valueSize":1},{"declaration":2329,"isOffset":false,"isSlot":false,"src":"3599:4:13","valueSize":1}],"id":2335,"nodeType":"InlineAssembly","src":"3566:47:13"}]},"documentation":{"id":2327,"nodeType":"StructuredDocumentation","src":"3343:85:13","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2337,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:13","nodeType":"FunctionDefinition","parameters":{"id":2330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"mutability":"mutable","name":"slot","nameLocation":"3463:4:13","nodeType":"VariableDeclaration","scope":2337,"src":"3455:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:13"},"returnParameters":{"id":2334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2333,"mutability":"mutable","name":"r","nameLocation":"3510:1:13","nodeType":"VariableDeclaration","scope":2337,"src":"3492:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2260_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2332,"nodeType":"UserDefinedTypeName","pathNode":{"id":2331,"name":"BytesSlot","nameLocations":["3492:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":2260,"src":"3492:9:13"},"referencedDeclaration":2260,"src":"3492:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2260_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:13"},"scope":2349,"src":"3433:186:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2347,"nodeType":"Block","src":"3816:112:13","statements":[{"AST":{"nativeSrc":"3878:44:13","nodeType":"YulBlock","src":"3878:44:13","statements":[{"nativeSrc":"3892:20:13","nodeType":"YulAssignment","src":"3892:20:13","value":{"name":"store.slot","nativeSrc":"3902:10:13","nodeType":"YulIdentifier","src":"3902:10:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:13","nodeType":"YulIdentifier","src":"3892:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2344,"isOffset":false,"isSlot":true,"src":"3892:6:13","suffix":"slot","valueSize":1},{"declaration":2340,"isOffset":false,"isSlot":true,"src":"3902:10:13","suffix":"slot","valueSize":1}],"id":2346,"nodeType":"InlineAssembly","src":"3869:53:13"}]},"documentation":{"id":2338,"nodeType":"StructuredDocumentation","src":"3625:99:13","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2348,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:13","nodeType":"FunctionDefinition","parameters":{"id":2341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2340,"mutability":"mutable","name":"store","nameLocation":"3765:5:13","nodeType":"VariableDeclaration","scope":2348,"src":"3751:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2339,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:13"},"returnParameters":{"id":2345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"r","nameLocation":"3813:1:13","nodeType":"VariableDeclaration","scope":2348,"src":"3795:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2260_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2343,"nodeType":"UserDefinedTypeName","pathNode":{"id":2342,"name":"BytesSlot","nameLocations":["3795:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":2260,"src":"3795:9:13"},"referencedDeclaration":2260,"src":"3795:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2260_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:13"},"scope":2349,"src":"3729:199:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2350,"src":"1245:2685:13","usedErrors":[],"usedEvents":[]}],"src":"193:3738:13"},"id":13},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","exportedSymbols":{"IUniswapV3Factory":[2432]},"id":2433,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2351,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3Factory","contractDependencies":[],"contractKind":"interface","documentation":{"id":2352,"nodeType":"StructuredDocumentation","src":"71:163:14","text":"@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"},"fullyImplemented":false,"id":2432,"linearizedBaseContracts":[2432],"name":"IUniswapV3Factory","nameLocation":"244:17:14","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2353,"nodeType":"StructuredDocumentation","src":"268:185:14","text":"@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"},"eventSelector":"b532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c","id":2359,"name":"OwnerChanged","nameLocation":"464:12:14","nodeType":"EventDefinition","parameters":{"id":2358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2355,"indexed":true,"mutability":"mutable","name":"oldOwner","nameLocation":"493:8:14","nodeType":"VariableDeclaration","scope":2359,"src":"477:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2354,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2357,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"519:8:14","nodeType":"VariableDeclaration","scope":2359,"src":"503:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2356,"name":"address","nodeType":"ElementaryTypeName","src":"503:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"476:52:14"},"src":"458:71:14"},{"anonymous":false,"documentation":{"id":2360,"nodeType":"StructuredDocumentation","src":"535:421:14","text":"@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"},"eventSelector":"783cca1c0412dd0d695e784568c96da2e9c22ff989357a2e8b1d9b2b4e6b7118","id":2372,"name":"PoolCreated","nameLocation":"967:11:14","nodeType":"EventDefinition","parameters":{"id":2371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2362,"indexed":true,"mutability":"mutable","name":"token0","nameLocation":"1004:6:14","nodeType":"VariableDeclaration","scope":2372,"src":"988:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2361,"name":"address","nodeType":"ElementaryTypeName","src":"988:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2364,"indexed":true,"mutability":"mutable","name":"token1","nameLocation":"1036:6:14","nodeType":"VariableDeclaration","scope":2372,"src":"1020:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2363,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2366,"indexed":true,"mutability":"mutable","name":"fee","nameLocation":"1067:3:14","nodeType":"VariableDeclaration","scope":2372,"src":"1052:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2365,"name":"uint24","nodeType":"ElementaryTypeName","src":"1052:6:14","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2368,"indexed":false,"mutability":"mutable","name":"tickSpacing","nameLocation":"1086:11:14","nodeType":"VariableDeclaration","scope":2372,"src":"1080:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2367,"name":"int24","nodeType":"ElementaryTypeName","src":"1080:5:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":2370,"indexed":false,"mutability":"mutable","name":"pool","nameLocation":"1115:4:14","nodeType":"VariableDeclaration","scope":2372,"src":"1107:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2369,"name":"address","nodeType":"ElementaryTypeName","src":"1107:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"978:147:14"},"src":"961:165:14"},{"anonymous":false,"documentation":{"id":2373,"nodeType":"StructuredDocumentation","src":"1132:275:14","text":"@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"},"eventSelector":"c66a3fdf07232cdd185febcc6579d408c241b47ae2f9907d84be655141eeaecc","id":2379,"name":"FeeAmountEnabled","nameLocation":"1418:16:14","nodeType":"EventDefinition","parameters":{"id":2378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2375,"indexed":true,"mutability":"mutable","name":"fee","nameLocation":"1450:3:14","nodeType":"VariableDeclaration","scope":2379,"src":"1435:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2374,"name":"uint24","nodeType":"ElementaryTypeName","src":"1435:6:14","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2377,"indexed":true,"mutability":"mutable","name":"tickSpacing","nameLocation":"1469:11:14","nodeType":"VariableDeclaration","scope":2379,"src":"1455:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2376,"name":"int24","nodeType":"ElementaryTypeName","src":"1455:5:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1434:47:14"},"src":"1412:70:14"},{"documentation":{"id":2380,"nodeType":"StructuredDocumentation","src":"1488:163:14","text":"@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"},"functionSelector":"8da5cb5b","id":2385,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1665:5:14","nodeType":"FunctionDefinition","parameters":{"id":2381,"nodeType":"ParameterList","parameters":[],"src":"1670:2:14"},"returnParameters":{"id":2384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2385,"src":"1696:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2382,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1695:9:14"},"scope":2432,"src":"1656:49:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2386,"nodeType":"StructuredDocumentation","src":"1711:348:14","text":"@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"},"functionSelector":"22afcccb","id":2393,"implemented":false,"kind":"function","modifiers":[],"name":"feeAmountTickSpacing","nameLocation":"2073:20:14","nodeType":"FunctionDefinition","parameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2388,"mutability":"mutable","name":"fee","nameLocation":"2101:3:14","nodeType":"VariableDeclaration","scope":2393,"src":"2094:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2387,"name":"uint24","nodeType":"ElementaryTypeName","src":"2094:6:14","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2093:12:14"},"returnParameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2393,"src":"2129:5:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2390,"name":"int24","nodeType":"ElementaryTypeName","src":"2129:5:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"2128:7:14"},"scope":2432,"src":"2064:72:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2394,"nodeType":"StructuredDocumentation","src":"2142:471:14","text":"@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"},"functionSelector":"1698ee82","id":2405,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"2627:7:14","nodeType":"FunctionDefinition","parameters":{"id":2401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"tokenA","nameLocation":"2652:6:14","nodeType":"VariableDeclaration","scope":2405,"src":"2644:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2395,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2398,"mutability":"mutable","name":"tokenB","nameLocation":"2676:6:14","nodeType":"VariableDeclaration","scope":2405,"src":"2668:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2397,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2400,"mutability":"mutable","name":"fee","nameLocation":"2699:3:14","nodeType":"VariableDeclaration","scope":2405,"src":"2692:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2399,"name":"uint24","nodeType":"ElementaryTypeName","src":"2692:6:14","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2634:74:14"},"returnParameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"pool","nameLocation":"2740:4:14","nodeType":"VariableDeclaration","scope":2405,"src":"2732:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2402,"name":"address","nodeType":"ElementaryTypeName","src":"2732:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2731:14:14"},"scope":2432,"src":"2618:128:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2406,"nodeType":"StructuredDocumentation","src":"2752:554:14","text":"@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"},"functionSelector":"a1671295","id":2417,"implemented":false,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"3320:10:14","nodeType":"FunctionDefinition","parameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"mutability":"mutable","name":"tokenA","nameLocation":"3348:6:14","nodeType":"VariableDeclaration","scope":2417,"src":"3340:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2407,"name":"address","nodeType":"ElementaryTypeName","src":"3340:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2410,"mutability":"mutable","name":"tokenB","nameLocation":"3372:6:14","nodeType":"VariableDeclaration","scope":2417,"src":"3364:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2409,"name":"address","nodeType":"ElementaryTypeName","src":"3364:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2412,"mutability":"mutable","name":"fee","nameLocation":"3395:3:14","nodeType":"VariableDeclaration","scope":2417,"src":"3388:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2411,"name":"uint24","nodeType":"ElementaryTypeName","src":"3388:6:14","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3330:74:14"},"returnParameters":{"id":2416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2415,"mutability":"mutable","name":"pool","nameLocation":"3431:4:14","nodeType":"VariableDeclaration","scope":2417,"src":"3423:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2414,"name":"address","nodeType":"ElementaryTypeName","src":"3423:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3422:14:14"},"scope":2432,"src":"3311:126:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2418,"nodeType":"StructuredDocumentation","src":"3443:144:14","text":"@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"},"functionSelector":"13af4035","id":2423,"implemented":false,"kind":"function","modifiers":[],"name":"setOwner","nameLocation":"3601:8:14","nodeType":"FunctionDefinition","parameters":{"id":2421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2420,"mutability":"mutable","name":"_owner","nameLocation":"3618:6:14","nodeType":"VariableDeclaration","scope":2423,"src":"3610:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2419,"name":"address","nodeType":"ElementaryTypeName","src":"3610:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3609:16:14"},"returnParameters":{"id":2422,"nodeType":"ParameterList","parameters":[],"src":"3634:0:14"},"scope":2432,"src":"3592:43:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2424,"nodeType":"StructuredDocumentation","src":"3641:326:14","text":"@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"},"functionSelector":"8a7c195f","id":2431,"implemented":false,"kind":"function","modifiers":[],"name":"enableFeeAmount","nameLocation":"3981:15:14","nodeType":"FunctionDefinition","parameters":{"id":2429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2426,"mutability":"mutable","name":"fee","nameLocation":"4004:3:14","nodeType":"VariableDeclaration","scope":2431,"src":"3997:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2425,"name":"uint24","nodeType":"ElementaryTypeName","src":"3997:6:14","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2428,"mutability":"mutable","name":"tickSpacing","nameLocation":"4015:11:14","nodeType":"VariableDeclaration","scope":2431,"src":"4009:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2427,"name":"int24","nodeType":"ElementaryTypeName","src":"4009:5:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"3996:31:14"},"returnParameters":{"id":2430,"nodeType":"ParameterList","parameters":[],"src":"4036:0:14"},"scope":2432,"src":"3972:65:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2433,"src":"234:3805:14","usedErrors":[],"usedEvents":[2359,2372,2379]}],"src":"45:3995:14"},"id":14},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","exportedSymbols":{"IUniswapV3SwapCallback":[2446]},"id":2447,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2434,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3SwapCallback","contractDependencies":[],"contractKind":"interface","documentation":{"id":2435,"nodeType":"StructuredDocumentation","src":"71:144:15","text":"@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"},"fullyImplemented":false,"id":2446,"linearizedBaseContracts":[2446],"name":"IUniswapV3SwapCallback","nameLocation":"225:22:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2436,"nodeType":"StructuredDocumentation","src":"254:898:15","text":"@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"},"functionSelector":"fa461e33","id":2445,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapV3SwapCallback","nameLocation":"1166:21:15","nodeType":"FunctionDefinition","parameters":{"id":2443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"amount0Delta","nameLocation":"1204:12:15","nodeType":"VariableDeclaration","scope":2445,"src":"1197:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2437,"name":"int256","nodeType":"ElementaryTypeName","src":"1197:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2440,"mutability":"mutable","name":"amount1Delta","nameLocation":"1233:12:15","nodeType":"VariableDeclaration","scope":2445,"src":"1226:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2439,"name":"int256","nodeType":"ElementaryTypeName","src":"1226:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2442,"mutability":"mutable","name":"data","nameLocation":"1270:4:15","nodeType":"VariableDeclaration","scope":2445,"src":"1255:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2441,"name":"bytes","nodeType":"ElementaryTypeName","src":"1255:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1187:93:15"},"returnParameters":{"id":2444,"nodeType":"ParameterList","parameters":[],"src":"1289:0:15"},"scope":2446,"src":"1157:133:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2447,"src":"215:1077:15","usedErrors":[],"usedEvents":[]}],"src":"45:1248:15"},"id":15},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","exportedSymbols":{"ISwapRouter":[2546],"IUniswapV3SwapCallback":[2446]},"id":2547,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2448,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:16"},{"id":2449,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:16"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","file":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","id":2450,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2547,"sourceUnit":2447,"src":"91:83:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2452,"name":"IUniswapV3SwapCallback","nameLocations":["305:22:16"],"nodeType":"IdentifierPath","referencedDeclaration":2446,"src":"305:22:16"},"id":2453,"nodeType":"InheritanceSpecifier","src":"305:22:16"}],"canonicalName":"ISwapRouter","contractDependencies":[],"contractKind":"interface","documentation":{"id":2451,"nodeType":"StructuredDocumentation","src":"176:104:16","text":"@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"},"fullyImplemented":false,"id":2546,"linearizedBaseContracts":[2546,2446],"name":"ISwapRouter","nameLocation":"290:11:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISwapRouter.ExactInputSingleParams","id":2470,"members":[{"constant":false,"id":2455,"mutability":"mutable","name":"tokenIn","nameLocation":"382:7:16","nodeType":"VariableDeclaration","scope":2470,"src":"374:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2454,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2457,"mutability":"mutable","name":"tokenOut","nameLocation":"407:8:16","nodeType":"VariableDeclaration","scope":2470,"src":"399:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2456,"name":"address","nodeType":"ElementaryTypeName","src":"399:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2459,"mutability":"mutable","name":"fee","nameLocation":"432:3:16","nodeType":"VariableDeclaration","scope":2470,"src":"425:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2458,"name":"uint24","nodeType":"ElementaryTypeName","src":"425:6:16","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2461,"mutability":"mutable","name":"recipient","nameLocation":"453:9:16","nodeType":"VariableDeclaration","scope":2470,"src":"445:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2460,"name":"address","nodeType":"ElementaryTypeName","src":"445:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"deadline","nameLocation":"480:8:16","nodeType":"VariableDeclaration","scope":2470,"src":"472:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2465,"mutability":"mutable","name":"amountIn","nameLocation":"506:8:16","nodeType":"VariableDeclaration","scope":2470,"src":"498:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2464,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2467,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"532:16:16","nodeType":"VariableDeclaration","scope":2470,"src":"524:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2466,"name":"uint256","nodeType":"ElementaryTypeName","src":"524:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2469,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"566:17:16","nodeType":"VariableDeclaration","scope":2470,"src":"558:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2468,"name":"uint160","nodeType":"ElementaryTypeName","src":"558:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactInputSingleParams","nameLocation":"341:22:16","nodeType":"StructDefinition","scope":2546,"src":"334:256:16","visibility":"public"},{"documentation":{"id":2471,"nodeType":"StructuredDocumentation","src":"596:250:16","text":"@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"414bf389","id":2479,"implemented":false,"kind":"function","modifiers":[],"name":"exactInputSingle","nameLocation":"860:16:16","nodeType":"FunctionDefinition","parameters":{"id":2475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"params","nameLocation":"909:6:16","nodeType":"VariableDeclaration","scope":2479,"src":"877:38:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2470_calldata_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":2473,"nodeType":"UserDefinedTypeName","pathNode":{"id":2472,"name":"ExactInputSingleParams","nameLocations":["877:22:16"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"877:22:16"},"referencedDeclaration":2470,"src":"877:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2470_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"src":"876:40:16"},"returnParameters":{"id":2478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2477,"mutability":"mutable","name":"amountOut","nameLocation":"951:9:16","nodeType":"VariableDeclaration","scope":2479,"src":"943:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2476,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"942:19:16"},"scope":2546,"src":"851:111:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactInputParams","id":2490,"members":[{"constant":false,"id":2481,"mutability":"mutable","name":"path","nameLocation":"1008:4:16","nodeType":"VariableDeclaration","scope":2490,"src":"1002:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2480,"name":"bytes","nodeType":"ElementaryTypeName","src":"1002:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2483,"mutability":"mutable","name":"recipient","nameLocation":"1030:9:16","nodeType":"VariableDeclaration","scope":2490,"src":"1022:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2482,"name":"address","nodeType":"ElementaryTypeName","src":"1022:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2485,"mutability":"mutable","name":"deadline","nameLocation":"1057:8:16","nodeType":"VariableDeclaration","scope":2490,"src":"1049:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2484,"name":"uint256","nodeType":"ElementaryTypeName","src":"1049:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2487,"mutability":"mutable","name":"amountIn","nameLocation":"1083:8:16","nodeType":"VariableDeclaration","scope":2490,"src":"1075:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2486,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2489,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"1109:16:16","nodeType":"VariableDeclaration","scope":2490,"src":"1101:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2488,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactInputParams","nameLocation":"975:16:16","nodeType":"StructDefinition","scope":2546,"src":"968:164:16","visibility":"public"},{"documentation":{"id":2491,"nodeType":"StructuredDocumentation","src":"1138:273:16","text":"@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"c04b8d59","id":2499,"implemented":false,"kind":"function","modifiers":[],"name":"exactInput","nameLocation":"1425:10:16","nodeType":"FunctionDefinition","parameters":{"id":2495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2494,"mutability":"mutable","name":"params","nameLocation":"1462:6:16","nodeType":"VariableDeclaration","scope":2499,"src":"1436:32:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$2490_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams"},"typeName":{"id":2493,"nodeType":"UserDefinedTypeName","pathNode":{"id":2492,"name":"ExactInputParams","nameLocations":["1436:16:16"],"nodeType":"IdentifierPath","referencedDeclaration":2490,"src":"1436:16:16"},"referencedDeclaration":2490,"src":"1436:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$2490_storage_ptr","typeString":"struct ISwapRouter.ExactInputParams"}},"visibility":"internal"}],"src":"1435:34:16"},"returnParameters":{"id":2498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"amountOut","nameLocation":"1504:9:16","nodeType":"VariableDeclaration","scope":2499,"src":"1496:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2496,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:19:16"},"scope":2546,"src":"1416:99:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputSingleParams","id":2516,"members":[{"constant":false,"id":2501,"mutability":"mutable","name":"tokenIn","nameLocation":"1570:7:16","nodeType":"VariableDeclaration","scope":2516,"src":"1562:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2500,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2503,"mutability":"mutable","name":"tokenOut","nameLocation":"1595:8:16","nodeType":"VariableDeclaration","scope":2516,"src":"1587:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2502,"name":"address","nodeType":"ElementaryTypeName","src":"1587:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2505,"mutability":"mutable","name":"fee","nameLocation":"1620:3:16","nodeType":"VariableDeclaration","scope":2516,"src":"1613:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2504,"name":"uint24","nodeType":"ElementaryTypeName","src":"1613:6:16","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2507,"mutability":"mutable","name":"recipient","nameLocation":"1641:9:16","nodeType":"VariableDeclaration","scope":2516,"src":"1633:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2506,"name":"address","nodeType":"ElementaryTypeName","src":"1633:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2509,"mutability":"mutable","name":"deadline","nameLocation":"1668:8:16","nodeType":"VariableDeclaration","scope":2516,"src":"1660:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2508,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2511,"mutability":"mutable","name":"amountOut","nameLocation":"1694:9:16","nodeType":"VariableDeclaration","scope":2516,"src":"1686:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"1686:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2513,"mutability":"mutable","name":"amountInMaximum","nameLocation":"1721:15:16","nodeType":"VariableDeclaration","scope":2516,"src":"1713:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2512,"name":"uint256","nodeType":"ElementaryTypeName","src":"1713:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2515,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"1754:17:16","nodeType":"VariableDeclaration","scope":2516,"src":"1746:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2514,"name":"uint160","nodeType":"ElementaryTypeName","src":"1746:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactOutputSingleParams","nameLocation":"1528:23:16","nodeType":"StructDefinition","scope":2546,"src":"1521:257:16","visibility":"public"},{"documentation":{"id":2517,"nodeType":"StructuredDocumentation","src":"1784:250:16","text":"@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"db3e2198","id":2525,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutputSingle","nameLocation":"2048:17:16","nodeType":"FunctionDefinition","parameters":{"id":2521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"mutability":"mutable","name":"params","nameLocation":"2099:6:16","nodeType":"VariableDeclaration","scope":2525,"src":"2066:39:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$2516_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"},"typeName":{"id":2519,"nodeType":"UserDefinedTypeName","pathNode":{"id":2518,"name":"ExactOutputSingleParams","nameLocations":["2066:23:16"],"nodeType":"IdentifierPath","referencedDeclaration":2516,"src":"2066:23:16"},"referencedDeclaration":2516,"src":"2066:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$2516_storage_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"}},"visibility":"internal"}],"src":"2065:41:16"},"returnParameters":{"id":2524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2523,"mutability":"mutable","name":"amountIn","nameLocation":"2141:8:16","nodeType":"VariableDeclaration","scope":2525,"src":"2133:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2522,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:18:16"},"scope":2546,"src":"2039:112:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputParams","id":2536,"members":[{"constant":false,"id":2527,"mutability":"mutable","name":"path","nameLocation":"2198:4:16","nodeType":"VariableDeclaration","scope":2536,"src":"2192:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2526,"name":"bytes","nodeType":"ElementaryTypeName","src":"2192:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2529,"mutability":"mutable","name":"recipient","nameLocation":"2220:9:16","nodeType":"VariableDeclaration","scope":2536,"src":"2212:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2528,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2531,"mutability":"mutable","name":"deadline","nameLocation":"2247:8:16","nodeType":"VariableDeclaration","scope":2536,"src":"2239:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2530,"name":"uint256","nodeType":"ElementaryTypeName","src":"2239:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2533,"mutability":"mutable","name":"amountOut","nameLocation":"2273:9:16","nodeType":"VariableDeclaration","scope":2536,"src":"2265:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2532,"name":"uint256","nodeType":"ElementaryTypeName","src":"2265:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2535,"mutability":"mutable","name":"amountInMaximum","nameLocation":"2300:15:16","nodeType":"VariableDeclaration","scope":2536,"src":"2292:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2534,"name":"uint256","nodeType":"ElementaryTypeName","src":"2292:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactOutputParams","nameLocation":"2164:17:16","nodeType":"StructDefinition","scope":2546,"src":"2157:165:16","visibility":"public"},{"documentation":{"id":2537,"nodeType":"StructuredDocumentation","src":"2328:284:16","text":"@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"f28c0498","id":2545,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutput","nameLocation":"2626:11:16","nodeType":"FunctionDefinition","parameters":{"id":2541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"params","nameLocation":"2665:6:16","nodeType":"VariableDeclaration","scope":2545,"src":"2638:33:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$2536_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputParams"},"typeName":{"id":2539,"nodeType":"UserDefinedTypeName","pathNode":{"id":2538,"name":"ExactOutputParams","nameLocations":["2638:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":2536,"src":"2638:17:16"},"referencedDeclaration":2536,"src":"2638:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$2536_storage_ptr","typeString":"struct ISwapRouter.ExactOutputParams"}},"visibility":"internal"}],"src":"2637:35:16"},"returnParameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2543,"mutability":"mutable","name":"amountIn","nameLocation":"2707:8:16","nodeType":"VariableDeclaration","scope":2545,"src":"2699:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2542,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2698:18:16"},"scope":2546,"src":"2617:100:16","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2547,"src":"280:2439:16","usedErrors":[],"usedEvents":[]}],"src":"45:2675:16"},"id":16},"contracts/interfaces/I1inchSpotAgg.sol":{"ast":{"absolutePath":"contracts/interfaces/I1inchSpotAgg.sol","exportedSymbols":{"I1inchSpotAgg":[2573],"IERC20":[1960]},"id":2574,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2548,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2549,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2574,"sourceUnit":1961,"src":"65:56:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"I1inchSpotAgg","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2573,"linearizedBaseContracts":[2573],"name":"I1inchSpotAgg","nameLocation":"135:13:17","nodeType":"ContractDefinition","nodes":[{"functionSelector":"802431fb","id":2562,"implemented":false,"kind":"function","modifiers":[],"name":"getRate","nameLocation":"163:7:17","nodeType":"FunctionDefinition","parameters":{"id":2558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2552,"mutability":"mutable","name":"srcToken","nameLocation":"178:8:17","nodeType":"VariableDeclaration","scope":2562,"src":"171:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"},"typeName":{"id":2551,"nodeType":"UserDefinedTypeName","pathNode":{"id":2550,"name":"IERC20","nameLocations":["171:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1960,"src":"171:6:17"},"referencedDeclaration":1960,"src":"171:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2555,"mutability":"mutable","name":"dstToken","nameLocation":"195:8:17","nodeType":"VariableDeclaration","scope":2562,"src":"188:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"},"typeName":{"id":2554,"nodeType":"UserDefinedTypeName","pathNode":{"id":2553,"name":"IERC20","nameLocations":["188:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1960,"src":"188:6:17"},"referencedDeclaration":1960,"src":"188:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2557,"mutability":"mutable","name":"useWrappers","nameLocation":"210:11:17","nodeType":"VariableDeclaration","scope":2562,"src":"205:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2556,"name":"bool","nodeType":"ElementaryTypeName","src":"205:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"170:52:17"},"returnParameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2560,"mutability":"mutable","name":"weightedRate","nameLocation":"254:12:17","nodeType":"VariableDeclaration","scope":2562,"src":"246:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2559,"name":"uint256","nodeType":"ElementaryTypeName","src":"246:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"245:22:17"},"scope":2573,"src":"154:114:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7de4fd10","id":2572,"implemented":false,"kind":"function","modifiers":[],"name":"getRateToEth","nameLocation":"283:12:17","nodeType":"FunctionDefinition","parameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2565,"mutability":"mutable","name":"srcToken","nameLocation":"303:8:17","nodeType":"VariableDeclaration","scope":2572,"src":"296:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"},"typeName":{"id":2564,"nodeType":"UserDefinedTypeName","pathNode":{"id":2563,"name":"IERC20","nameLocations":["296:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1960,"src":"296:6:17"},"referencedDeclaration":1960,"src":"296:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2567,"mutability":"mutable","name":"useWrappers","nameLocation":"318:11:17","nodeType":"VariableDeclaration","scope":2572,"src":"313:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2566,"name":"bool","nodeType":"ElementaryTypeName","src":"313:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"295:35:17"},"returnParameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"weightedRate","nameLocation":"362:12:17","nodeType":"VariableDeclaration","scope":2572,"src":"354:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2569,"name":"uint256","nodeType":"ElementaryTypeName","src":"354:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"353:22:17"},"scope":2573,"src":"274:102:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2574,"src":"125:254:17","usedErrors":[],"usedEvents":[]}],"src":"40:341:17"},"id":17},"contracts/interfaces/IBaluniV1Agent.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Agent.sol","exportedSymbols":{"IBaluniV1Agent":[2593]},"id":2594,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2575,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Agent","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2593,"linearizedBaseContracts":[2593],"name":"IBaluniV1Agent","nameLocation":"77:14:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBaluniV1Agent.Call","id":2582,"members":[{"constant":false,"id":2577,"mutability":"mutable","name":"to","nameLocation":"124:2:18","nodeType":"VariableDeclaration","scope":2582,"src":"116:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2576,"name":"address","nodeType":"ElementaryTypeName","src":"116:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2579,"mutability":"mutable","name":"value","nameLocation":"141:5:18","nodeType":"VariableDeclaration","scope":2582,"src":"133:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"133:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2581,"mutability":"mutable","name":"data","nameLocation":"159:4:18","nodeType":"VariableDeclaration","scope":2582,"src":"153:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2580,"name":"bytes","nodeType":"ElementaryTypeName","src":"153:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Call","nameLocation":"104:4:18","nodeType":"StructDefinition","scope":2593,"src":"97:72:18","visibility":"public"},{"functionSelector":"eedc3c50","id":2592,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"184:7:18","nodeType":"FunctionDefinition","parameters":{"id":2590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2586,"mutability":"mutable","name":"calls","nameLocation":"206:5:18","nodeType":"VariableDeclaration","scope":2592,"src":"192:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2582_memory_ptr_$dyn_memory_ptr","typeString":"struct IBaluniV1Agent.Call[]"},"typeName":{"baseType":{"id":2584,"nodeType":"UserDefinedTypeName","pathNode":{"id":2583,"name":"Call","nameLocations":["192:4:18"],"nodeType":"IdentifierPath","referencedDeclaration":2582,"src":"192:4:18"},"referencedDeclaration":2582,"src":"192:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$2582_storage_ptr","typeString":"struct IBaluniV1Agent.Call"}},"id":2585,"nodeType":"ArrayTypeName","src":"192:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2582_storage_$dyn_storage_ptr","typeString":"struct IBaluniV1Agent.Call[]"}},"visibility":"internal"},{"constant":false,"id":2589,"mutability":"mutable","name":"tokensReturn","nameLocation":"230:12:18","nodeType":"VariableDeclaration","scope":2592,"src":"213:29:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2587,"name":"address","nodeType":"ElementaryTypeName","src":"213:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2588,"nodeType":"ArrayTypeName","src":"213:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"191:52:18"},"returnParameters":{"id":2591,"nodeType":"ParameterList","parameters":[],"src":"252:0:18"},"scope":2593,"src":"175:78:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2594,"src":"67:189:18","usedErrors":[],"usedEvents":[]}],"src":"40:218:18"},"id":18},"contracts/interfaces/IBaluniV1AgentFactory.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1AgentFactory.sol","exportedSymbols":{"IBaluniV1AgentFactory":[2615]},"id":2616,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2595,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1AgentFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2615,"linearizedBaseContracts":[2615],"name":"IBaluniV1AgentFactory","nameLocation":"77:21:19","nodeType":"ContractDefinition","nodes":[{"functionSelector":"27d54a92","id":2602,"implemented":false,"kind":"function","modifiers":[],"name":"getAgentAddress","nameLocation":"115:15:19","nodeType":"FunctionDefinition","parameters":{"id":2598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2597,"mutability":"mutable","name":"user","nameLocation":"139:4:19","nodeType":"VariableDeclaration","scope":2602,"src":"131:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2596,"name":"address","nodeType":"ElementaryTypeName","src":"131:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"130:14:19"},"returnParameters":{"id":2601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2602,"src":"168:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2599,"name":"address","nodeType":"ElementaryTypeName","src":"168:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"167:9:19"},"scope":2615,"src":"106:71:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9b76a5cd","id":2609,"implemented":false,"kind":"function","modifiers":[],"name":"getOrCreateAgent","nameLocation":"194:16:19","nodeType":"FunctionDefinition","parameters":{"id":2605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2604,"mutability":"mutable","name":"user","nameLocation":"219:4:19","nodeType":"VariableDeclaration","scope":2609,"src":"211:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2603,"name":"address","nodeType":"ElementaryTypeName","src":"211:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"210:14:19"},"returnParameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2609,"src":"243:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2606,"name":"address","nodeType":"ElementaryTypeName","src":"243:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"242:9:19"},"scope":2615,"src":"185:67:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5ab1bd53","id":2614,"implemented":false,"kind":"function","modifiers":[],"name":"getRegistry","nameLocation":"269:11:19","nodeType":"FunctionDefinition","parameters":{"id":2610,"nodeType":"ParameterList","parameters":[],"src":"280:2:19"},"returnParameters":{"id":2613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2614,"src":"306:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2611,"name":"address","nodeType":"ElementaryTypeName","src":"306:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"305:9:19"},"scope":2615,"src":"260:55:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2616,"src":"67:251:19","usedErrors":[],"usedEvents":[]}],"src":"40:280:19"},"id":19},"contracts/interfaces/IBaluniV1Oracle.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Oracle.sol","exportedSymbols":{"IBaluniV1Oracle":[2640]},"id":2641,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2617,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Oracle","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2640,"linearizedBaseContracts":[2640],"name":"IBaluniV1Oracle","nameLocation":"77:15:20","nodeType":"ContractDefinition","nodes":[{"functionSelector":"248391ff","id":2628,"implemented":false,"kind":"function","modifiers":[],"name":"convert","nameLocation":"109:7:20","nodeType":"FunctionDefinition","parameters":{"id":2624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2619,"mutability":"mutable","name":"fromToken","nameLocation":"125:9:20","nodeType":"VariableDeclaration","scope":2628,"src":"117:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2618,"name":"address","nodeType":"ElementaryTypeName","src":"117:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2621,"mutability":"mutable","name":"toToken","nameLocation":"144:7:20","nodeType":"VariableDeclaration","scope":2628,"src":"136:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2620,"name":"address","nodeType":"ElementaryTypeName","src":"136:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2623,"mutability":"mutable","name":"amount","nameLocation":"161:6:20","nodeType":"VariableDeclaration","scope":2628,"src":"153:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2622,"name":"uint256","nodeType":"ElementaryTypeName","src":"153:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116:52:20"},"returnParameters":{"id":2627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2626,"mutability":"mutable","name":"valuation","nameLocation":"200:9:20","nodeType":"VariableDeclaration","scope":2628,"src":"192:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2625,"name":"uint256","nodeType":"ElementaryTypeName","src":"192:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"191:19:20"},"scope":2640,"src":"100:111:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b27b5e75","id":2639,"implemented":false,"kind":"function","modifiers":[],"name":"convertScaled","nameLocation":"228:13:20","nodeType":"FunctionDefinition","parameters":{"id":2635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2630,"mutability":"mutable","name":"fromToken","nameLocation":"260:9:20","nodeType":"VariableDeclaration","scope":2639,"src":"252:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2629,"name":"address","nodeType":"ElementaryTypeName","src":"252:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2632,"mutability":"mutable","name":"toToken","nameLocation":"288:7:20","nodeType":"VariableDeclaration","scope":2639,"src":"280:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2631,"name":"address","nodeType":"ElementaryTypeName","src":"280:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2634,"mutability":"mutable","name":"amount","nameLocation":"314:6:20","nodeType":"VariableDeclaration","scope":2639,"src":"306:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2633,"name":"uint256","nodeType":"ElementaryTypeName","src":"306:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"241:86:20"},"returnParameters":{"id":2638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"valuation","nameLocation":"359:9:20","nodeType":"VariableDeclaration","scope":2639,"src":"351:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2636,"name":"uint256","nodeType":"ElementaryTypeName","src":"351:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"350:19:20"},"scope":2640,"src":"219:151:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2641,"src":"67:306:20","usedErrors":[],"usedEvents":[]}],"src":"40:335:20"},"id":20},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Rebalancer.sol","exportedSymbols":{"IBaluniV1Rebalancer":[2725]},"id":2726,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2642,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:21"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Rebalancer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2725,"linearizedBaseContracts":[2725],"name":"IBaluniV1Rebalancer","nameLocation":"77:19:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBaluniV1Rebalancer.RebalanceVars","id":2672,"members":[{"constant":false,"id":2644,"mutability":"mutable","name":"length","nameLocation":"144:6:21","nodeType":"VariableDeclaration","scope":2672,"src":"136:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2643,"name":"uint256","nodeType":"ElementaryTypeName","src":"136:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2646,"mutability":"mutable","name":"totalValue","nameLocation":"169:10:21","nodeType":"VariableDeclaration","scope":2672,"src":"161:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2645,"name":"uint256","nodeType":"ElementaryTypeName","src":"161:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2648,"mutability":"mutable","name":"finalUsdBalance","nameLocation":"198:15:21","nodeType":"VariableDeclaration","scope":2672,"src":"190:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2647,"name":"uint256","nodeType":"ElementaryTypeName","src":"190:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2650,"mutability":"mutable","name":"overweightVaultsLength","nameLocation":"232:22:21","nodeType":"VariableDeclaration","scope":2672,"src":"224:30:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2649,"name":"uint256","nodeType":"ElementaryTypeName","src":"224:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2652,"mutability":"mutable","name":"underweightVaultsLength","nameLocation":"273:23:21","nodeType":"VariableDeclaration","scope":2672,"src":"265:31:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2651,"name":"uint256","nodeType":"ElementaryTypeName","src":"265:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2654,"mutability":"mutable","name":"totalActiveWeight","nameLocation":"315:17:21","nodeType":"VariableDeclaration","scope":2672,"src":"307:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2653,"name":"uint256","nodeType":"ElementaryTypeName","src":"307:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2656,"mutability":"mutable","name":"amountOut","nameLocation":"351:9:21","nodeType":"VariableDeclaration","scope":2672,"src":"343:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2655,"name":"uint256","nodeType":"ElementaryTypeName","src":"343:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2659,"mutability":"mutable","name":"overweightVaults","nameLocation":"381:16:21","nodeType":"VariableDeclaration","scope":2672,"src":"371:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2657,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2658,"nodeType":"ArrayTypeName","src":"371:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2662,"mutability":"mutable","name":"overweightAmounts","nameLocation":"418:17:21","nodeType":"VariableDeclaration","scope":2672,"src":"408:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2660,"name":"uint256","nodeType":"ElementaryTypeName","src":"408:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2661,"nodeType":"ArrayTypeName","src":"408:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2665,"mutability":"mutable","name":"underweightVaults","nameLocation":"456:17:21","nodeType":"VariableDeclaration","scope":2672,"src":"446:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2663,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2664,"nodeType":"ArrayTypeName","src":"446:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2668,"mutability":"mutable","name":"underweightAmounts","nameLocation":"494:18:21","nodeType":"VariableDeclaration","scope":2672,"src":"484:28:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2666,"name":"uint256","nodeType":"ElementaryTypeName","src":"484:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2667,"nodeType":"ArrayTypeName","src":"484:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2671,"mutability":"mutable","name":"balances","nameLocation":"533:8:21","nodeType":"VariableDeclaration","scope":2672,"src":"523:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2669,"name":"uint256","nodeType":"ElementaryTypeName","src":"523:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2670,"nodeType":"ArrayTypeName","src":"523:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"RebalanceVars","nameLocation":"111:13:21","nodeType":"StructDefinition","scope":2725,"src":"104:445:21","visibility":"public"},{"functionSelector":"f0bf7714","id":2692,"implemented":false,"kind":"function","modifiers":[],"name":"rebalance","nameLocation":"584:9:21","nodeType":"FunctionDefinition","parameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2675,"mutability":"mutable","name":"balances","nameLocation":"621:8:21","nodeType":"VariableDeclaration","scope":2692,"src":"604:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2673,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2674,"nodeType":"ArrayTypeName","src":"604:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2678,"mutability":"mutable","name":"assets","nameLocation":"659:6:21","nodeType":"VariableDeclaration","scope":2692,"src":"640:25:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2676,"name":"address","nodeType":"ElementaryTypeName","src":"640:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2677,"nodeType":"ArrayTypeName","src":"640:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2681,"mutability":"mutable","name":"weights","nameLocation":"695:7:21","nodeType":"VariableDeclaration","scope":2692,"src":"676:26:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2679,"name":"uint256","nodeType":"ElementaryTypeName","src":"676:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2680,"nodeType":"ArrayTypeName","src":"676:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2683,"mutability":"mutable","name":"limit","nameLocation":"721:5:21","nodeType":"VariableDeclaration","scope":2692,"src":"713:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2682,"name":"uint256","nodeType":"ElementaryTypeName","src":"713:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2685,"mutability":"mutable","name":"sender","nameLocation":"745:6:21","nodeType":"VariableDeclaration","scope":2692,"src":"737:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2684,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2687,"mutability":"mutable","name":"receiver","nameLocation":"770:8:21","nodeType":"VariableDeclaration","scope":2692,"src":"762:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2686,"name":"address","nodeType":"ElementaryTypeName","src":"762:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2689,"mutability":"mutable","name":"baseAsset","nameLocation":"797:9:21","nodeType":"VariableDeclaration","scope":2692,"src":"789:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2688,"name":"address","nodeType":"ElementaryTypeName","src":"789:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"593:220:21"},"returnParameters":{"id":2691,"nodeType":"ParameterList","parameters":[],"src":"822:0:21"},"scope":2725,"src":"575:248:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"997146f5","id":2713,"implemented":false,"kind":"function","modifiers":[],"name":"checkRebalance","nameLocation":"840:14:21","nodeType":"FunctionDefinition","parameters":{"id":2708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2695,"mutability":"mutable","name":"balances","nameLocation":"882:8:21","nodeType":"VariableDeclaration","scope":2713,"src":"865:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2693,"name":"uint256","nodeType":"ElementaryTypeName","src":"865:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2694,"nodeType":"ArrayTypeName","src":"865:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2698,"mutability":"mutable","name":"assets","nameLocation":"920:6:21","nodeType":"VariableDeclaration","scope":2713,"src":"901:25:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2696,"name":"address","nodeType":"ElementaryTypeName","src":"901:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2697,"nodeType":"ArrayTypeName","src":"901:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2701,"mutability":"mutable","name":"weights","nameLocation":"956:7:21","nodeType":"VariableDeclaration","scope":2713,"src":"937:26:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2699,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2700,"nodeType":"ArrayTypeName","src":"937:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2703,"mutability":"mutable","name":"limit","nameLocation":"982:5:21","nodeType":"VariableDeclaration","scope":2713,"src":"974:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2702,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2705,"mutability":"mutable","name":"sender","nameLocation":"1006:6:21","nodeType":"VariableDeclaration","scope":2713,"src":"998:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2704,"name":"address","nodeType":"ElementaryTypeName","src":"998:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2707,"mutability":"mutable","name":"baseAsset","nameLocation":"1031:9:21","nodeType":"VariableDeclaration","scope":2713,"src":"1023:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2706,"name":"address","nodeType":"ElementaryTypeName","src":"1023:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"854:193:21"},"returnParameters":{"id":2712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2713,"src":"1071:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RebalanceVars_$2672_memory_ptr","typeString":"struct IBaluniV1Rebalancer.RebalanceVars"},"typeName":{"id":2710,"nodeType":"UserDefinedTypeName","pathNode":{"id":2709,"name":"RebalanceVars","nameLocations":["1071:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":2672,"src":"1071:13:21"},"referencedDeclaration":2672,"src":"1071:13:21","typeDescriptions":{"typeIdentifier":"t_struct$_RebalanceVars_$2672_storage_ptr","typeString":"struct IBaluniV1Rebalancer.RebalanceVars"}},"visibility":"internal"}],"src":"1070:22:21"},"scope":2725,"src":"831:262:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"248391ff","id":2724,"implemented":false,"kind":"function","modifiers":[],"name":"convert","nameLocation":"1110:7:21","nodeType":"FunctionDefinition","parameters":{"id":2720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2715,"mutability":"mutable","name":"fromToken","nameLocation":"1126:9:21","nodeType":"VariableDeclaration","scope":2724,"src":"1118:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2714,"name":"address","nodeType":"ElementaryTypeName","src":"1118:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2717,"mutability":"mutable","name":"toToken","nameLocation":"1145:7:21","nodeType":"VariableDeclaration","scope":2724,"src":"1137:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2716,"name":"address","nodeType":"ElementaryTypeName","src":"1137:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2719,"mutability":"mutable","name":"amount","nameLocation":"1162:6:21","nodeType":"VariableDeclaration","scope":2724,"src":"1154:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2718,"name":"uint256","nodeType":"ElementaryTypeName","src":"1154:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1117:52:21"},"returnParameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2724,"src":"1193:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2721,"name":"uint256","nodeType":"ElementaryTypeName","src":"1193:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1192:9:21"},"scope":2725,"src":"1101:101:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2726,"src":"67:1138:21","usedErrors":[],"usedEvents":[]}],"src":"40:1167:21"},"id":21},"contracts/interfaces/IBaluniV1Registry.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Registry.sol","exportedSymbols":{"IBaluniV1Registry":[2909]},"id":2910,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2727,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:22"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Registry","contractDependencies":[],"contractKind":"interface","documentation":{"id":2728,"nodeType":"StructuredDocumentation","src":"67:91:22","text":" @title IBaluniV1Registry\n @dev Interface for the BaluniV1Registry contract."},"fullyImplemented":false,"id":2909,"linearizedBaseContracts":[2909],"name":"IBaluniV1Registry","nameLocation":"170:17:22","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e04b677f","id":2733,"implemented":false,"kind":"function","modifiers":[],"name":"setUniswapFactory","nameLocation":"204:17:22","nodeType":"FunctionDefinition","parameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"_uniswapFactory","nameLocation":"230:15:22","nodeType":"VariableDeclaration","scope":2733,"src":"222:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2729,"name":"address","nodeType":"ElementaryTypeName","src":"222:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"221:25:22"},"returnParameters":{"id":2732,"nodeType":"ParameterList","parameters":[],"src":"255:0:22"},"scope":2909,"src":"195:61:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bea9849e","id":2738,"implemented":false,"kind":"function","modifiers":[],"name":"setUniswapRouter","nameLocation":"273:16:22","nodeType":"FunctionDefinition","parameters":{"id":2736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2735,"mutability":"mutable","name":"_uniswapRouter","nameLocation":"298:14:22","nodeType":"VariableDeclaration","scope":2738,"src":"290:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2734,"name":"address","nodeType":"ElementaryTypeName","src":"290:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"289:24:22"},"returnParameters":{"id":2737,"nodeType":"ParameterList","parameters":[],"src":"322:0:22"},"scope":2909,"src":"264:59:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f1dccde7","id":2743,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniAgentFactory","nameLocation":"340:21:22","nodeType":"FunctionDefinition","parameters":{"id":2741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2740,"mutability":"mutable","name":"_baluniAgentFactory","nameLocation":"370:19:22","nodeType":"VariableDeclaration","scope":2743,"src":"362:27:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2739,"name":"address","nodeType":"ElementaryTypeName","src":"362:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"361:29:22"},"returnParameters":{"id":2742,"nodeType":"ParameterList","parameters":[],"src":"399:0:22"},"scope":2909,"src":"331:69:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"588c5b70","id":2748,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniPoolPeriphery","nameLocation":"417:22:22","nodeType":"FunctionDefinition","parameters":{"id":2746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2745,"mutability":"mutable","name":"_baluniPoolPeriphery","nameLocation":"448:20:22","nodeType":"VariableDeclaration","scope":2748,"src":"440:28:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2744,"name":"address","nodeType":"ElementaryTypeName","src":"440:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"439:30:22"},"returnParameters":{"id":2747,"nodeType":"ParameterList","parameters":[],"src":"478:0:22"},"scope":2909,"src":"408:71:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c3f5df5c","id":2753,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniSwapper","nameLocation":"496:16:22","nodeType":"FunctionDefinition","parameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"mutability":"mutable","name":"_baluniSwapper","nameLocation":"521:14:22","nodeType":"VariableDeclaration","scope":2753,"src":"513:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2749,"name":"address","nodeType":"ElementaryTypeName","src":"513:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"512:24:22"},"returnParameters":{"id":2752,"nodeType":"ParameterList","parameters":[],"src":"545:0:22"},"scope":2909,"src":"487:59:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f5b84f64","id":2758,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniOracle","nameLocation":"563:15:22","nodeType":"FunctionDefinition","parameters":{"id":2756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2755,"mutability":"mutable","name":"_baluniOracle","nameLocation":"587:13:22","nodeType":"VariableDeclaration","scope":2758,"src":"579:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2754,"name":"address","nodeType":"ElementaryTypeName","src":"579:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"578:23:22"},"returnParameters":{"id":2757,"nodeType":"ParameterList","parameters":[],"src":"610:0:22"},"scope":2909,"src":"554:57:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f98977a9","id":2763,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniPoolRegistry","nameLocation":"628:21:22","nodeType":"FunctionDefinition","parameters":{"id":2761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"_baluniPoolRegistry","nameLocation":"658:19:22","nodeType":"VariableDeclaration","scope":2763,"src":"650:27:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2759,"name":"address","nodeType":"ElementaryTypeName","src":"650:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"649:29:22"},"returnParameters":{"id":2762,"nodeType":"ParameterList","parameters":[],"src":"687:0:22"},"scope":2909,"src":"619:69:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5055fe98","id":2768,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniVaultRegistry","nameLocation":"705:22:22","nodeType":"FunctionDefinition","parameters":{"id":2766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2765,"mutability":"mutable","name":"_baluniPoolRegistry","nameLocation":"736:19:22","nodeType":"VariableDeclaration","scope":2768,"src":"728:27:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2764,"name":"address","nodeType":"ElementaryTypeName","src":"728:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"727:29:22"},"returnParameters":{"id":2767,"nodeType":"ParameterList","parameters":[],"src":"765:0:22"},"scope":2909,"src":"696:70:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0241bffa","id":2773,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniRebalancer","nameLocation":"783:19:22","nodeType":"FunctionDefinition","parameters":{"id":2771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2770,"mutability":"mutable","name":"_baluniRebalancer","nameLocation":"811:17:22","nodeType":"VariableDeclaration","scope":2773,"src":"803:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2769,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"802:27:22"},"returnParameters":{"id":2772,"nodeType":"ParameterList","parameters":[],"src":"838:0:22"},"scope":2909,"src":"774:65:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"400fb668","id":2778,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniRouter","nameLocation":"856:15:22","nodeType":"FunctionDefinition","parameters":{"id":2776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2775,"mutability":"mutable","name":"_baluniRouter","nameLocation":"880:13:22","nodeType":"VariableDeclaration","scope":2778,"src":"872:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2774,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"871:23:22"},"returnParameters":{"id":2777,"nodeType":"ParameterList","parameters":[],"src":"903:0:22"},"scope":2909,"src":"847:57:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6c43274c","id":2783,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniRegistry","nameLocation":"921:17:22","nodeType":"FunctionDefinition","parameters":{"id":2781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2780,"mutability":"mutable","name":"_baluniRegistry","nameLocation":"947:15:22","nodeType":"VariableDeclaration","scope":2783,"src":"939:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2779,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"938:25:22"},"returnParameters":{"id":2782,"nodeType":"ParameterList","parameters":[],"src":"972:0:22"},"scope":2909,"src":"912:61:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b6fe9cc7","id":2788,"implemented":false,"kind":"function","modifiers":[],"name":"setWNATIVE","nameLocation":"990:10:22","nodeType":"FunctionDefinition","parameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2785,"mutability":"mutable","name":"_WNATIVE","nameLocation":"1009:8:22","nodeType":"VariableDeclaration","scope":2788,"src":"1001:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2784,"name":"address","nodeType":"ElementaryTypeName","src":"1001:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1000:18:22"},"returnParameters":{"id":2787,"nodeType":"ParameterList","parameters":[],"src":"1027:0:22"},"scope":2909,"src":"981:47:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b3e089a2","id":2793,"implemented":false,"kind":"function","modifiers":[],"name":"setUSDC","nameLocation":"1045:7:22","nodeType":"FunctionDefinition","parameters":{"id":2791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2790,"mutability":"mutable","name":"_USDC","nameLocation":"1061:5:22","nodeType":"VariableDeclaration","scope":2793,"src":"1053:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2789,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1052:15:22"},"returnParameters":{"id":2792,"nodeType":"ParameterList","parameters":[],"src":"1076:0:22"},"scope":2909,"src":"1036:41:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f0f44260","id":2798,"implemented":false,"kind":"function","modifiers":[],"name":"setTreasury","nameLocation":"1094:11:22","nodeType":"FunctionDefinition","parameters":{"id":2796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2795,"mutability":"mutable","name":"_treasury","nameLocation":"1114:9:22","nodeType":"VariableDeclaration","scope":2798,"src":"1106:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2794,"name":"address","nodeType":"ElementaryTypeName","src":"1106:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1105:19:22"},"returnParameters":{"id":2797,"nodeType":"ParameterList","parameters":[],"src":"1133:0:22"},"scope":2909,"src":"1085:49:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c08f786b","id":2803,"implemented":false,"kind":"function","modifiers":[],"name":"set1inchSpotAgg","nameLocation":"1151:15:22","nodeType":"FunctionDefinition","parameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2800,"mutability":"mutable","name":"__1inchSpotAgg","nameLocation":"1175:14:22","nodeType":"VariableDeclaration","scope":2803,"src":"1167:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2799,"name":"address","nodeType":"ElementaryTypeName","src":"1167:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1166:24:22"},"returnParameters":{"id":2802,"nodeType":"ParameterList","parameters":[],"src":"1199:0:22"},"scope":2909,"src":"1142:58:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9e6453f8","id":2808,"implemented":false,"kind":"function","modifiers":[],"name":"setBPS_FEE","nameLocation":"1217:10:22","nodeType":"FunctionDefinition","parameters":{"id":2806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2805,"mutability":"mutable","name":"__BPS_FEE","nameLocation":"1236:9:22","nodeType":"VariableDeclaration","scope":2808,"src":"1228:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2804,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1227:19:22"},"returnParameters":{"id":2807,"nodeType":"ParameterList","parameters":[],"src":"1255:0:22"},"scope":2909,"src":"1208:48:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3e6dfa36","id":2813,"implemented":false,"kind":"function","modifiers":[],"name":"getUniswapFactory","nameLocation":"1273:17:22","nodeType":"FunctionDefinition","parameters":{"id":2809,"nodeType":"ParameterList","parameters":[],"src":"1290:2:22"},"returnParameters":{"id":2812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2813,"src":"1316:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2810,"name":"address","nodeType":"ElementaryTypeName","src":"1316:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1315:9:22"},"scope":2909,"src":"1264:61:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"524900b5","id":2818,"implemented":false,"kind":"function","modifiers":[],"name":"getUniswapRouter","nameLocation":"1342:16:22","nodeType":"FunctionDefinition","parameters":{"id":2814,"nodeType":"ParameterList","parameters":[],"src":"1358:2:22"},"returnParameters":{"id":2817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2818,"src":"1384:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2815,"name":"address","nodeType":"ElementaryTypeName","src":"1384:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1383:9:22"},"scope":2909,"src":"1333:60:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"82755ebb","id":2823,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniSwapper","nameLocation":"1410:16:22","nodeType":"FunctionDefinition","parameters":{"id":2819,"nodeType":"ParameterList","parameters":[],"src":"1426:2:22"},"returnParameters":{"id":2822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2823,"src":"1452:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2820,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1451:9:22"},"scope":2909,"src":"1401:60:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"bb3ba04c","id":2828,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniOracle","nameLocation":"1478:15:22","nodeType":"FunctionDefinition","parameters":{"id":2824,"nodeType":"ParameterList","parameters":[],"src":"1493:2:22"},"returnParameters":{"id":2827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2828,"src":"1519:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2825,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1518:9:22"},"scope":2909,"src":"1469:59:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f5d2d998","id":2833,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniAgentFactory","nameLocation":"1545:21:22","nodeType":"FunctionDefinition","parameters":{"id":2829,"nodeType":"ParameterList","parameters":[],"src":"1566:2:22"},"returnParameters":{"id":2832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2833,"src":"1592:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2830,"name":"address","nodeType":"ElementaryTypeName","src":"1592:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1591:9:22"},"scope":2909,"src":"1536:65:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1acb6141","id":2838,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniPoolPeriphery","nameLocation":"1618:22:22","nodeType":"FunctionDefinition","parameters":{"id":2834,"nodeType":"ParameterList","parameters":[],"src":"1640:2:22"},"returnParameters":{"id":2837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2838,"src":"1666:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2835,"name":"address","nodeType":"ElementaryTypeName","src":"1666:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1665:9:22"},"scope":2909,"src":"1609:66:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1cc2b00d","id":2843,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniVaultRegistry","nameLocation":"1692:22:22","nodeType":"FunctionDefinition","parameters":{"id":2839,"nodeType":"ParameterList","parameters":[],"src":"1714:2:22"},"returnParameters":{"id":2842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2843,"src":"1740:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2840,"name":"address","nodeType":"ElementaryTypeName","src":"1740:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1739:9:22"},"scope":2909,"src":"1683:66:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"32569e02","id":2848,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniPoolRegistry","nameLocation":"1766:21:22","nodeType":"FunctionDefinition","parameters":{"id":2844,"nodeType":"ParameterList","parameters":[],"src":"1787:2:22"},"returnParameters":{"id":2847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2848,"src":"1813:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2845,"name":"address","nodeType":"ElementaryTypeName","src":"1813:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1812:9:22"},"scope":2909,"src":"1757:65:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cff49d68","id":2853,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniRebalancer","nameLocation":"1839:19:22","nodeType":"FunctionDefinition","parameters":{"id":2849,"nodeType":"ParameterList","parameters":[],"src":"1858:2:22"},"returnParameters":{"id":2852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2853,"src":"1884:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2850,"name":"address","nodeType":"ElementaryTypeName","src":"1884:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1883:9:22"},"scope":2909,"src":"1830:63:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"04cc7325","id":2858,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniRouter","nameLocation":"1910:15:22","nodeType":"FunctionDefinition","parameters":{"id":2854,"nodeType":"ParameterList","parameters":[],"src":"1925:2:22"},"returnParameters":{"id":2857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2858,"src":"1951:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2855,"name":"address","nodeType":"ElementaryTypeName","src":"1951:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1950:9:22"},"scope":2909,"src":"1901:59:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c9aba8ae","id":2863,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniRegistry","nameLocation":"1977:17:22","nodeType":"FunctionDefinition","parameters":{"id":2859,"nodeType":"ParameterList","parameters":[],"src":"1994:2:22"},"returnParameters":{"id":2862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2863,"src":"2020:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2860,"name":"address","nodeType":"ElementaryTypeName","src":"2020:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2019:9:22"},"scope":2909,"src":"1968:61:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6c9c0078","id":2868,"implemented":false,"kind":"function","modifiers":[],"name":"getWNATIVE","nameLocation":"2046:10:22","nodeType":"FunctionDefinition","parameters":{"id":2864,"nodeType":"ParameterList","parameters":[],"src":"2056:2:22"},"returnParameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2868,"src":"2082:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2865,"name":"address","nodeType":"ElementaryTypeName","src":"2082:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2081:9:22"},"scope":2909,"src":"2037:54:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1bf01e9b","id":2873,"implemented":false,"kind":"function","modifiers":[],"name":"getUSDC","nameLocation":"2108:7:22","nodeType":"FunctionDefinition","parameters":{"id":2869,"nodeType":"ParameterList","parameters":[],"src":"2115:2:22"},"returnParameters":{"id":2872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2873,"src":"2141:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2870,"name":"address","nodeType":"ElementaryTypeName","src":"2141:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2140:9:22"},"scope":2909,"src":"2099:51:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8e1c3a8a","id":2878,"implemented":false,"kind":"function","modifiers":[],"name":"get1inchSpotAgg","nameLocation":"2167:15:22","nodeType":"FunctionDefinition","parameters":{"id":2874,"nodeType":"ParameterList","parameters":[],"src":"2182:2:22"},"returnParameters":{"id":2877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2878,"src":"2208:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2875,"name":"address","nodeType":"ElementaryTypeName","src":"2208:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2207:9:22"},"scope":2909,"src":"2158:59:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"85462d6f","id":2883,"implemented":false,"kind":"function","modifiers":[],"name":"getBPS_FEE","nameLocation":"2234:10:22","nodeType":"FunctionDefinition","parameters":{"id":2879,"nodeType":"ParameterList","parameters":[],"src":"2244:2:22"},"returnParameters":{"id":2882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2883,"src":"2270:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2880,"name":"uint256","nodeType":"ElementaryTypeName","src":"2270:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2269:9:22"},"scope":2909,"src":"2225:54:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9380fb6f","id":2888,"implemented":false,"kind":"function","modifiers":[],"name":"getMAX_BPS_FEE","nameLocation":"2296:14:22","nodeType":"FunctionDefinition","parameters":{"id":2884,"nodeType":"ParameterList","parameters":[],"src":"2310:2:22"},"returnParameters":{"id":2887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2888,"src":"2336:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2885,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:9:22"},"scope":2909,"src":"2287:58:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4f4608a2","id":2893,"implemented":false,"kind":"function","modifiers":[],"name":"getBPS_BASE","nameLocation":"2362:11:22","nodeType":"FunctionDefinition","parameters":{"id":2889,"nodeType":"ParameterList","parameters":[],"src":"2373:2:22"},"returnParameters":{"id":2892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2893,"src":"2399:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2890,"name":"uint256","nodeType":"ElementaryTypeName","src":"2399:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2398:9:22"},"scope":2909,"src":"2353:55:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3b19e84a","id":2898,"implemented":false,"kind":"function","modifiers":[],"name":"getTreasury","nameLocation":"2425:11:22","nodeType":"FunctionDefinition","parameters":{"id":2894,"nodeType":"ParameterList","parameters":[],"src":"2436:2:22"},"returnParameters":{"id":2897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2898,"src":"2462:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2895,"name":"address","nodeType":"ElementaryTypeName","src":"2462:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2461:9:22"},"scope":2909,"src":"2416:55:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cc01e9a6","id":2903,"implemented":false,"kind":"function","modifiers":[],"name":"setStaticOracle","nameLocation":"2488:15:22","nodeType":"FunctionDefinition","parameters":{"id":2901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2900,"mutability":"mutable","name":"_staticOracle","nameLocation":"2512:13:22","nodeType":"VariableDeclaration","scope":2903,"src":"2504:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2899,"name":"address","nodeType":"ElementaryTypeName","src":"2504:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2503:23:22"},"returnParameters":{"id":2902,"nodeType":"ParameterList","parameters":[],"src":"2535:0:22"},"scope":2909,"src":"2479:57:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a5d2236f","id":2908,"implemented":false,"kind":"function","modifiers":[],"name":"getStaticOracle","nameLocation":"2553:15:22","nodeType":"FunctionDefinition","parameters":{"id":2904,"nodeType":"ParameterList","parameters":[],"src":"2568:2:22"},"returnParameters":{"id":2907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2908,"src":"2594:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2905,"name":"address","nodeType":"ElementaryTypeName","src":"2594:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2593:9:22"},"scope":2909,"src":"2544:59:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2910,"src":"160:2446:22","usedErrors":[],"usedEvents":[]}],"src":"40:2568:22"},"id":22},"contracts/interfaces/IBaluniV1Swapper.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Swapper.sol","exportedSymbols":{"IBaluniV1Swapper":[2940]},"id":2941,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2911,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:23"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Swapper","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2940,"linearizedBaseContracts":[2940],"name":"IBaluniV1Swapper","nameLocation":"77:16:23","nodeType":"ContractDefinition","nodes":[{"functionSelector":"2d6bc8ea","id":2924,"implemented":false,"kind":"function","modifiers":[],"name":"singleSwap","nameLocation":"110:10:23","nodeType":"FunctionDefinition","parameters":{"id":2920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2913,"mutability":"mutable","name":"token0","nameLocation":"139:6:23","nodeType":"VariableDeclaration","scope":2924,"src":"131:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2912,"name":"address","nodeType":"ElementaryTypeName","src":"131:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2915,"mutability":"mutable","name":"token1","nameLocation":"164:6:23","nodeType":"VariableDeclaration","scope":2924,"src":"156:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2914,"name":"address","nodeType":"ElementaryTypeName","src":"156:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2917,"mutability":"mutable","name":"amount","nameLocation":"189:6:23","nodeType":"VariableDeclaration","scope":2924,"src":"181:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2916,"name":"uint256","nodeType":"ElementaryTypeName","src":"181:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2919,"mutability":"mutable","name":"receiver","nameLocation":"214:8:23","nodeType":"VariableDeclaration","scope":2924,"src":"206:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2918,"name":"address","nodeType":"ElementaryTypeName","src":"206:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"120:109:23"},"returnParameters":{"id":2923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2922,"mutability":"mutable","name":"amountOut","nameLocation":"256:9:23","nodeType":"VariableDeclaration","scope":2924,"src":"248:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2921,"name":"uint256","nodeType":"ElementaryTypeName","src":"248:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"247:19:23"},"scope":2940,"src":"101:166:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5efaaebb","id":2939,"implemented":false,"kind":"function","modifiers":[],"name":"multiHopSwap","nameLocation":"282:12:23","nodeType":"FunctionDefinition","parameters":{"id":2935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2926,"mutability":"mutable","name":"token0","nameLocation":"313:6:23","nodeType":"VariableDeclaration","scope":2939,"src":"305:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2925,"name":"address","nodeType":"ElementaryTypeName","src":"305:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2928,"mutability":"mutable","name":"token1","nameLocation":"338:6:23","nodeType":"VariableDeclaration","scope":2939,"src":"330:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2927,"name":"address","nodeType":"ElementaryTypeName","src":"330:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2930,"mutability":"mutable","name":"token2","nameLocation":"363:6:23","nodeType":"VariableDeclaration","scope":2939,"src":"355:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2929,"name":"address","nodeType":"ElementaryTypeName","src":"355:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2932,"mutability":"mutable","name":"amount","nameLocation":"388:6:23","nodeType":"VariableDeclaration","scope":2939,"src":"380:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2931,"name":"uint256","nodeType":"ElementaryTypeName","src":"380:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2934,"mutability":"mutable","name":"receiver","nameLocation":"413:8:23","nodeType":"VariableDeclaration","scope":2939,"src":"405:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2933,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"294:134:23"},"returnParameters":{"id":2938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2937,"mutability":"mutable","name":"amountOut","nameLocation":"455:9:23","nodeType":"VariableDeclaration","scope":2939,"src":"447:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2936,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"446:19:23"},"scope":2940,"src":"273:193:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2941,"src":"67:402:23","usedErrors":[],"usedEvents":[]}],"src":"40:431:23"},"id":23},"contracts/libs/EnumerableSetUpgradeable.sol":{"ast":{"absolutePath":"contracts/libs/EnumerableSetUpgradeable.sol","exportedSymbols":{"EnumerableSetUpgradeable":[3539]},"id":3540,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2942,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:24"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSetUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2943,"nodeType":"StructuredDocumentation","src":"145:1118:24","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":3539,"linearizedBaseContracts":[3539],"name":"EnumerableSetUpgradeable","nameLocation":"1273:24:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSetUpgradeable.Set","id":2951,"members":[{"constant":false,"id":2946,"mutability":"mutable","name":"_values","nameLocation":"1820:7:24","nodeType":"VariableDeclaration","scope":2951,"src":"1810:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2944,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1810:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2945,"nodeType":"ArrayTypeName","src":"1810:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2950,"mutability":"mutable","name":"_indexes","nameLocation":"1991:8:24","nodeType":"VariableDeclaration","scope":2951,"src":"1963:36:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":2949,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1971:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1963:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2948,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1761:3:24","nodeType":"StructDefinition","scope":3539,"src":"1754:253:24","visibility":"public"},{"body":{"id":2992,"nodeType":"Block","src":"2254:345:24","statements":[{"condition":{"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2269:22:24","subExpression":{"arguments":[{"id":2963,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"2280:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},{"id":2964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"2285:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2962,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"2270:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2951_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2270:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2990,"nodeType":"Block","src":"2553:39:24","statements":[{"expression":{"hexValue":"66616c7365","id":2988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2575:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2961,"id":2989,"nodeType":"Return","src":"2568:12:24"}]},"id":2991,"nodeType":"IfStatement","src":"2265:327:24","trueBody":{"id":2987,"nodeType":"Block","src":"2293:254:24","statements":[{"expression":{"arguments":[{"id":2972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"2325:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":2967,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"2308:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2312:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2946,"src":"2308:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2320:4:24","memberName":"push","nodeType":"MemberAccess","src":"2308:16:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2308:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2974,"nodeType":"ExpressionStatement","src":"2308:23:24"},{"expression":{"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2975,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"2469:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2473:8:24","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2950,"src":"2469:12:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2979,"indexExpression":{"id":2977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"2482:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2469:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":2980,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"2491:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2981,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2495:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2946,"src":"2491:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2503:6:24","memberName":"length","nodeType":"MemberAccess","src":"2491:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2469:40:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2984,"nodeType":"ExpressionStatement","src":"2469:40:24"},{"expression":{"hexValue":"74727565","id":2985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2531:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2961,"id":2986,"nodeType":"Return","src":"2524:11:24"}]}}]},"documentation":{"id":2952,"nodeType":"StructuredDocumentation","src":"2015:164:24","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2993,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2194:4:24","nodeType":"FunctionDefinition","parameters":{"id":2958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2955,"mutability":"mutable","name":"set","nameLocation":"2211:3:24","nodeType":"VariableDeclaration","scope":2993,"src":"2199:15:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":2954,"nodeType":"UserDefinedTypeName","pathNode":{"id":2953,"name":"Set","nameLocations":["2199:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":2951,"src":"2199:3:24"},"referencedDeclaration":2951,"src":"2199:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":2957,"mutability":"mutable","name":"value","nameLocation":"2224:5:24","nodeType":"VariableDeclaration","scope":2993,"src":"2216:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2216:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2198:32:24"},"returnParameters":{"id":2961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2993,"src":"2248:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2959,"name":"bool","nodeType":"ElementaryTypeName","src":"2248:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2247:6:24"},"scope":3539,"src":"2185:414:24","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3076,"nodeType":"Block","src":"2847:1348:24","statements":[{"assignments":[3005],"declarations":[{"constant":false,"id":3005,"mutability":"mutable","name":"valueIndex","nameLocation":"2967:10:24","nodeType":"VariableDeclaration","scope":3076,"src":"2959:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3004,"name":"uint256","nodeType":"ElementaryTypeName","src":"2959:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3010,"initialValue":{"baseExpression":{"expression":{"id":3006,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"2980:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3007,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2984:8:24","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2950,"src":"2980:12:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3009,"indexExpression":{"id":3008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"2993:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2980:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2959:40:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3011,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"3016:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3030:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3016:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3074,"nodeType":"Block","src":"4149:39:24","statements":[{"expression":{"hexValue":"66616c7365","id":3072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4171:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3003,"id":3073,"nodeType":"Return","src":"4164:12:24"}]},"id":3075,"nodeType":"IfStatement","src":"3012:1176:24","trueBody":{"id":3071,"nodeType":"Block","src":"3033:1110:24","statements":[{"assignments":[3015],"declarations":[{"constant":false,"id":3015,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3399:13:24","nodeType":"VariableDeclaration","scope":3071,"src":"3391:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3014,"name":"uint256","nodeType":"ElementaryTypeName","src":"3391:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3019,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3016,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"3415:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3428:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3415:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3391:38:24"},{"assignments":[3021],"declarations":[{"constant":false,"id":3021,"mutability":"mutable","name":"lastIndex","nameLocation":"3452:9:24","nodeType":"VariableDeclaration","scope":3071,"src":"3444:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3020,"name":"uint256","nodeType":"ElementaryTypeName","src":"3444:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3027,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3022,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"3464:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3468:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2946,"src":"3464:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3476:6:24","memberName":"length","nodeType":"MemberAccess","src":"3464:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3485:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3464:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3444:42:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3028,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"3507:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3029,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"3520:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3507:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3055,"nodeType":"IfStatement","src":"3503:405:24","trueBody":{"id":3054,"nodeType":"Block","src":"3535:373:24","statements":[{"assignments":[3032],"declarations":[{"constant":false,"id":3032,"mutability":"mutable","name":"lastValue","nameLocation":"3562:9:24","nodeType":"VariableDeclaration","scope":3054,"src":"3554:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3031,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3554:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3037,"initialValue":{"baseExpression":{"expression":{"id":3033,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"3574:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3034,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3578:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2946,"src":"3574:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3036,"indexExpression":{"id":3035,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"3586:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3574:22:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3554:42:24"},{"expression":{"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3038,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"3699:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3041,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3703:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2946,"src":"3699:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3042,"indexExpression":{"id":3040,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"3711:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3699:26:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3043,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"3728:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3699:38:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3045,"nodeType":"ExpressionStatement","src":"3699:38:24"},{"expression":{"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3046,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"3813:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3817:8:24","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2950,"src":"3813:12:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3050,"indexExpression":{"id":3048,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"3826:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3813:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3051,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"3839:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3813:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3053,"nodeType":"ExpressionStatement","src":"3813:36:24"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":3056,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"3989:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3059,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3993:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2946,"src":"3989:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4001:3:24","memberName":"pop","nodeType":"MemberAccess","src":"3989:15:24","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3989:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3062,"nodeType":"ExpressionStatement","src":"3989:17:24"},{"expression":{"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4077:26:24","subExpression":{"baseExpression":{"expression":{"id":3063,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"4084:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3064,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4088:8:24","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2950,"src":"4084:12:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3066,"indexExpression":{"id":3065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"4097:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4084:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3068,"nodeType":"ExpressionStatement","src":"4077:26:24"},{"expression":{"hexValue":"74727565","id":3069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4127:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3003,"id":3070,"nodeType":"Return","src":"4120:11:24"}]}}]},"documentation":{"id":2994,"nodeType":"StructuredDocumentation","src":"2607:162:24","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3077,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2784:7:24","nodeType":"FunctionDefinition","parameters":{"id":3000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2997,"mutability":"mutable","name":"set","nameLocation":"2804:3:24","nodeType":"VariableDeclaration","scope":3077,"src":"2792:15:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":2996,"nodeType":"UserDefinedTypeName","pathNode":{"id":2995,"name":"Set","nameLocations":["2792:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":2951,"src":"2792:3:24"},"referencedDeclaration":2951,"src":"2792:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":2999,"mutability":"mutable","name":"value","nameLocation":"2817:5:24","nodeType":"VariableDeclaration","scope":3077,"src":"2809:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2998,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2809:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2791:32:24"},"returnParameters":{"id":3003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3077,"src":"2841:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3001,"name":"bool","nodeType":"ElementaryTypeName","src":"2841:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2840:6:24"},"scope":3539,"src":"2775:1420:24","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3095,"nodeType":"Block","src":"4360:50:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":3088,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"4378:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3089,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4382:8:24","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2950,"src":"4378:12:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3091,"indexExpression":{"id":3090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"4391:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4378:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4401:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4378:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3087,"id":3094,"nodeType":"Return","src":"4371:31:24"}]},"documentation":{"id":3078,"nodeType":"StructuredDocumentation","src":"4203:72:24","text":" @dev Returns true if the value is in the set. O(1)."},"id":3096,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4290:9:24","nodeType":"FunctionDefinition","parameters":{"id":3084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3081,"mutability":"mutable","name":"set","nameLocation":"4312:3:24","nodeType":"VariableDeclaration","scope":3096,"src":"4300:15:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":3080,"nodeType":"UserDefinedTypeName","pathNode":{"id":3079,"name":"Set","nameLocations":["4300:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":2951,"src":"4300:3:24"},"referencedDeclaration":2951,"src":"4300:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":3083,"mutability":"mutable","name":"value","nameLocation":"4325:5:24","nodeType":"VariableDeclaration","scope":3096,"src":"4317:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3082,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4317:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4299:32:24"},"returnParameters":{"id":3087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3096,"src":"4354:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3085,"name":"bool","nodeType":"ElementaryTypeName","src":"4354:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4353:6:24"},"scope":3539,"src":"4281:129:24","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3109,"nodeType":"Block","src":"4561:44:24","statements":[{"expression":{"expression":{"expression":{"id":3105,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"4579:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4583:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2946,"src":"4579:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4591:6:24","memberName":"length","nodeType":"MemberAccess","src":"4579:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3104,"id":3108,"nodeType":"Return","src":"4572:25:24"}]},"documentation":{"id":3097,"nodeType":"StructuredDocumentation","src":"4418:72:24","text":" @dev Returns the number of values on the set. O(1)."},"id":3110,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4505:7:24","nodeType":"FunctionDefinition","parameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3100,"mutability":"mutable","name":"set","nameLocation":"4525:3:24","nodeType":"VariableDeclaration","scope":3110,"src":"4513:15:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":3099,"nodeType":"UserDefinedTypeName","pathNode":{"id":3098,"name":"Set","nameLocations":["4513:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":2951,"src":"4513:3:24"},"referencedDeclaration":2951,"src":"4513:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"src":"4512:17:24"},"returnParameters":{"id":3104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3110,"src":"4552:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3102,"name":"uint256","nodeType":"ElementaryTypeName","src":"4552:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4551:9:24"},"scope":3539,"src":"4496:109:24","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3126,"nodeType":"Block","src":"5035:44:24","statements":[{"expression":{"baseExpression":{"expression":{"id":3121,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"5053:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3122,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5057:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2946,"src":"5053:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3124,"indexExpression":{"id":3123,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"5065:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5053:18:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3120,"id":3125,"nodeType":"Return","src":"5046:25:24"}]},"documentation":{"id":3111,"nodeType":"StructuredDocumentation","src":"4613:340:24","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3127,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4968:3:24","nodeType":"FunctionDefinition","parameters":{"id":3117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3114,"mutability":"mutable","name":"set","nameLocation":"4984:3:24","nodeType":"VariableDeclaration","scope":3127,"src":"4972:15:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":3113,"nodeType":"UserDefinedTypeName","pathNode":{"id":3112,"name":"Set","nameLocations":["4972:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":2951,"src":"4972:3:24"},"referencedDeclaration":2951,"src":"4972:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":3116,"mutability":"mutable","name":"index","nameLocation":"4997:5:24","nodeType":"VariableDeclaration","scope":3127,"src":"4989:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3115,"name":"uint256","nodeType":"ElementaryTypeName","src":"4989:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4971:32:24"},"returnParameters":{"id":3120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3127,"src":"5026:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5026:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5025:9:24"},"scope":3539,"src":"4959:120:24","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3140,"nodeType":"Block","src":"5703:37:24","statements":[{"expression":{"expression":{"id":3137,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"5721:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5725:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2946,"src":"5721:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":3136,"id":3139,"nodeType":"Return","src":"5714:18:24"}]},"documentation":{"id":3128,"nodeType":"StructuredDocumentation","src":"5087:536:24","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3141,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5638:7:24","nodeType":"FunctionDefinition","parameters":{"id":3132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3131,"mutability":"mutable","name":"set","nameLocation":"5658:3:24","nodeType":"VariableDeclaration","scope":3141,"src":"5646:15:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":3130,"nodeType":"UserDefinedTypeName","pathNode":{"id":3129,"name":"Set","nameLocations":["5646:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":2951,"src":"5646:3:24"},"referencedDeclaration":2951,"src":"5646:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"src":"5645:17:24"},"returnParameters":{"id":3136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3141,"src":"5685:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5685:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3134,"nodeType":"ArrayTypeName","src":"5685:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5684:18:24"},"scope":3539,"src":"5629:111:24","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSetUpgradeable.Bytes32Set","id":3145,"members":[{"constant":false,"id":3144,"mutability":"mutable","name":"_inner","nameLocation":"5802:6:24","nodeType":"VariableDeclaration","scope":3145,"src":"5798:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":3143,"nodeType":"UserDefinedTypeName","pathNode":{"id":3142,"name":"Set","nameLocations":["5798:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":2951,"src":"5798:3:24"},"referencedDeclaration":2951,"src":"5798:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5776:10:24","nodeType":"StructDefinition","scope":3539,"src":"5769:47:24","visibility":"public"},{"body":{"id":3162,"nodeType":"Block","src":"6070:49:24","statements":[{"expression":{"arguments":[{"expression":{"id":3157,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"6093:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3145_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":3158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6097:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3144,"src":"6093:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":3159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"6105:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3156,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"6088:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2951_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6088:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3155,"id":3161,"nodeType":"Return","src":"6081:30:24"}]},"documentation":{"id":3146,"nodeType":"StructuredDocumentation","src":"5824:164:24","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3163,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"6003:3:24","nodeType":"FunctionDefinition","parameters":{"id":3152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3149,"mutability":"mutable","name":"set","nameLocation":"6026:3:24","nodeType":"VariableDeclaration","scope":3163,"src":"6007:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3145_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":3148,"nodeType":"UserDefinedTypeName","pathNode":{"id":3147,"name":"Bytes32Set","nameLocations":["6007:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3145,"src":"6007:10:24"},"referencedDeclaration":3145,"src":"6007:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3145_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3151,"mutability":"mutable","name":"value","nameLocation":"6039:5:24","nodeType":"VariableDeclaration","scope":3163,"src":"6031:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6031:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6006:39:24"},"returnParameters":{"id":3155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3163,"src":"6064:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3153,"name":"bool","nodeType":"ElementaryTypeName","src":"6064:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6063:6:24"},"scope":3539,"src":"5994:125:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3180,"nodeType":"Block","src":"6374:52:24","statements":[{"expression":{"arguments":[{"expression":{"id":3175,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"6400:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3145_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":3176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6404:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3144,"src":"6400:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":3177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"6412:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3174,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"6392:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2951_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6392:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3173,"id":3179,"nodeType":"Return","src":"6385:33:24"}]},"documentation":{"id":3164,"nodeType":"StructuredDocumentation","src":"6127:162:24","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3181,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6304:6:24","nodeType":"FunctionDefinition","parameters":{"id":3170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3167,"mutability":"mutable","name":"set","nameLocation":"6330:3:24","nodeType":"VariableDeclaration","scope":3181,"src":"6311:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3145_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":3166,"nodeType":"UserDefinedTypeName","pathNode":{"id":3165,"name":"Bytes32Set","nameLocations":["6311:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3145,"src":"6311:10:24"},"referencedDeclaration":3145,"src":"6311:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3145_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3169,"mutability":"mutable","name":"value","nameLocation":"6343:5:24","nodeType":"VariableDeclaration","scope":3181,"src":"6335:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6335:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6310:39:24"},"returnParameters":{"id":3173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3181,"src":"6368:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3171,"name":"bool","nodeType":"ElementaryTypeName","src":"6368:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6367:6:24"},"scope":3539,"src":"6295:131:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3198,"nodeType":"Block","src":"6598:54:24","statements":[{"expression":{"arguments":[{"expression":{"id":3193,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"6626:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3145_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":3194,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6630:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3144,"src":"6626:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":3195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"6638:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3192,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"6616:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2951_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6616:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3191,"id":3197,"nodeType":"Return","src":"6609:35:24"}]},"documentation":{"id":3182,"nodeType":"StructuredDocumentation","src":"6434:72:24","text":" @dev Returns true if the value is in the set. O(1)."},"id":3199,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6521:8:24","nodeType":"FunctionDefinition","parameters":{"id":3188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"set","nameLocation":"6549:3:24","nodeType":"VariableDeclaration","scope":3199,"src":"6530:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3145_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":3184,"nodeType":"UserDefinedTypeName","pathNode":{"id":3183,"name":"Bytes32Set","nameLocations":["6530:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3145,"src":"6530:10:24"},"referencedDeclaration":3145,"src":"6530:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3145_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3187,"mutability":"mutable","name":"value","nameLocation":"6562:5:24","nodeType":"VariableDeclaration","scope":3199,"src":"6554:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6554:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6529:39:24"},"returnParameters":{"id":3191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3199,"src":"6592:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3189,"name":"bool","nodeType":"ElementaryTypeName","src":"6592:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6591:6:24"},"scope":3539,"src":"6512:140:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3213,"nodeType":"Block","src":"6810:45:24","statements":[{"expression":{"arguments":[{"expression":{"id":3209,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"6836:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3145_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":3210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6840:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3144,"src":"6836:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":3208,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"6828:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2951_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6828:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3207,"id":3212,"nodeType":"Return","src":"6821:26:24"}]},"documentation":{"id":3200,"nodeType":"StructuredDocumentation","src":"6660:72:24","text":" @dev Returns the number of values in the set. O(1)."},"id":3214,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6747:6:24","nodeType":"FunctionDefinition","parameters":{"id":3204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3203,"mutability":"mutable","name":"set","nameLocation":"6773:3:24","nodeType":"VariableDeclaration","scope":3214,"src":"6754:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3145_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":3202,"nodeType":"UserDefinedTypeName","pathNode":{"id":3201,"name":"Bytes32Set","nameLocations":["6754:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3145,"src":"6754:10:24"},"referencedDeclaration":3145,"src":"6754:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3145_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"}],"src":"6753:24:24"},"returnParameters":{"id":3207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3214,"src":"6801:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3205,"name":"uint256","nodeType":"ElementaryTypeName","src":"6801:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6800:9:24"},"scope":3539,"src":"6738:117:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3231,"nodeType":"Block","src":"7292:48:24","statements":[{"expression":{"arguments":[{"expression":{"id":3226,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"7314:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3145_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":3227,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7318:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3144,"src":"7314:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":3228,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"7326:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3225,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"7310:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2951_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7310:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3224,"id":3230,"nodeType":"Return","src":"7303:29:24"}]},"documentation":{"id":3215,"nodeType":"StructuredDocumentation","src":"6863:340:24","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3232,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7218:2:24","nodeType":"FunctionDefinition","parameters":{"id":3221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3218,"mutability":"mutable","name":"set","nameLocation":"7240:3:24","nodeType":"VariableDeclaration","scope":3232,"src":"7221:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3145_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":3217,"nodeType":"UserDefinedTypeName","pathNode":{"id":3216,"name":"Bytes32Set","nameLocations":["7221:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3145,"src":"7221:10:24"},"referencedDeclaration":3145,"src":"7221:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3145_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3220,"mutability":"mutable","name":"index","nameLocation":"7253:5:24","nodeType":"VariableDeclaration","scope":3232,"src":"7245:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3219,"name":"uint256","nodeType":"ElementaryTypeName","src":"7245:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7220:39:24"},"returnParameters":{"id":3224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3232,"src":"7283:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7283:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7282:9:24"},"scope":3539,"src":"7209:131:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3247,"nodeType":"Block","src":"7971:45:24","statements":[{"expression":{"arguments":[{"expression":{"id":3243,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"7997:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3145_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":3244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8001:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3144,"src":"7997:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":3242,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"7989:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2951_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7989:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3241,"id":3246,"nodeType":"Return","src":"7982:26:24"}]},"documentation":{"id":3233,"nodeType":"StructuredDocumentation","src":"7348:536:24","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3248,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7899:6:24","nodeType":"FunctionDefinition","parameters":{"id":3237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3236,"mutability":"mutable","name":"set","nameLocation":"7925:3:24","nodeType":"VariableDeclaration","scope":3248,"src":"7906:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3145_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":3235,"nodeType":"UserDefinedTypeName","pathNode":{"id":3234,"name":"Bytes32Set","nameLocations":["7906:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3145,"src":"7906:10:24"},"referencedDeclaration":3145,"src":"7906:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3145_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"}],"src":"7905:24:24"},"returnParameters":{"id":3241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3248,"src":"7953:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3238,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7953:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3239,"nodeType":"ArrayTypeName","src":"7953:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7952:18:24"},"scope":3539,"src":"7890:126:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSetUpgradeable.AddressSet","id":3252,"members":[{"constant":false,"id":3251,"mutability":"mutable","name":"_inner","nameLocation":"8078:6:24","nodeType":"VariableDeclaration","scope":3252,"src":"8074:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":3250,"nodeType":"UserDefinedTypeName","pathNode":{"id":3249,"name":"Set","nameLocations":["8074:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":2951,"src":"8074:3:24"},"referencedDeclaration":2951,"src":"8074:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8052:10:24","nodeType":"StructDefinition","scope":3539,"src":"8045:47:24","visibility":"public"},{"body":{"id":3278,"nodeType":"Block","src":"8346:76:24","statements":[{"expression":{"arguments":[{"expression":{"id":3264,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"8369:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":3265,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8373:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3251,"src":"8369:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"8405:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8397:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3270,"name":"uint160","nodeType":"ElementaryTypeName","src":"8397:7:24","typeDescriptions":{}}},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8397:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8389:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3268,"name":"uint256","nodeType":"ElementaryTypeName","src":"8389:7:24","typeDescriptions":{}}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8389:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8381:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3266,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8381:7:24","typeDescriptions":{}}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8381:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3263,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"8364:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2951_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8364:50:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3262,"id":3277,"nodeType":"Return","src":"8357:57:24"}]},"documentation":{"id":3253,"nodeType":"StructuredDocumentation","src":"8100:164:24","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3279,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8279:3:24","nodeType":"FunctionDefinition","parameters":{"id":3259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3256,"mutability":"mutable","name":"set","nameLocation":"8302:3:24","nodeType":"VariableDeclaration","scope":3279,"src":"8283:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":3255,"nodeType":"UserDefinedTypeName","pathNode":{"id":3254,"name":"AddressSet","nameLocations":["8283:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3252,"src":"8283:10:24"},"referencedDeclaration":3252,"src":"8283:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3258,"mutability":"mutable","name":"value","nameLocation":"8315:5:24","nodeType":"VariableDeclaration","scope":3279,"src":"8307:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3257,"name":"address","nodeType":"ElementaryTypeName","src":"8307:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8282:39:24"},"returnParameters":{"id":3262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3279,"src":"8340:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3260,"name":"bool","nodeType":"ElementaryTypeName","src":"8340:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8339:6:24"},"scope":3539,"src":"8270:152:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3305,"nodeType":"Block","src":"8677:79:24","statements":[{"expression":{"arguments":[{"expression":{"id":3291,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"8703:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":3292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8707:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3251,"src":"8703:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"8739:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8731:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3297,"name":"uint160","nodeType":"ElementaryTypeName","src":"8731:7:24","typeDescriptions":{}}},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8731:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8723:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3295,"name":"uint256","nodeType":"ElementaryTypeName","src":"8723:7:24","typeDescriptions":{}}},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8723:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8715:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8715:7:24","typeDescriptions":{}}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8715:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3290,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"8695:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2951_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8695:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3289,"id":3304,"nodeType":"Return","src":"8688:60:24"}]},"documentation":{"id":3280,"nodeType":"StructuredDocumentation","src":"8430:162:24","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3306,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8607:6:24","nodeType":"FunctionDefinition","parameters":{"id":3286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"set","nameLocation":"8633:3:24","nodeType":"VariableDeclaration","scope":3306,"src":"8614:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":3282,"nodeType":"UserDefinedTypeName","pathNode":{"id":3281,"name":"AddressSet","nameLocations":["8614:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3252,"src":"8614:10:24"},"referencedDeclaration":3252,"src":"8614:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3285,"mutability":"mutable","name":"value","nameLocation":"8646:5:24","nodeType":"VariableDeclaration","scope":3306,"src":"8638:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3284,"name":"address","nodeType":"ElementaryTypeName","src":"8638:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8613:39:24"},"returnParameters":{"id":3289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3306,"src":"8671:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3287,"name":"bool","nodeType":"ElementaryTypeName","src":"8671:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8670:6:24"},"scope":3539,"src":"8598:158:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3332,"nodeType":"Block","src":"8928:81:24","statements":[{"expression":{"arguments":[{"expression":{"id":3318,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"8956:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":3319,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8960:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3251,"src":"8956:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"8992:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8984:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3324,"name":"uint160","nodeType":"ElementaryTypeName","src":"8984:7:24","typeDescriptions":{}}},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8984:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8976:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3322,"name":"uint256","nodeType":"ElementaryTypeName","src":"8976:7:24","typeDescriptions":{}}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8968:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8968:7:24","typeDescriptions":{}}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8968:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3317,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"8946:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2951_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8946:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3316,"id":3331,"nodeType":"Return","src":"8939:62:24"}]},"documentation":{"id":3307,"nodeType":"StructuredDocumentation","src":"8764:72:24","text":" @dev Returns true if the value is in the set. O(1)."},"id":3333,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8851:8:24","nodeType":"FunctionDefinition","parameters":{"id":3313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3310,"mutability":"mutable","name":"set","nameLocation":"8879:3:24","nodeType":"VariableDeclaration","scope":3333,"src":"8860:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":3309,"nodeType":"UserDefinedTypeName","pathNode":{"id":3308,"name":"AddressSet","nameLocations":["8860:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3252,"src":"8860:10:24"},"referencedDeclaration":3252,"src":"8860:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3312,"mutability":"mutable","name":"value","nameLocation":"8892:5:24","nodeType":"VariableDeclaration","scope":3333,"src":"8884:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3311,"name":"address","nodeType":"ElementaryTypeName","src":"8884:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8859:39:24"},"returnParameters":{"id":3316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3333,"src":"8922:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3314,"name":"bool","nodeType":"ElementaryTypeName","src":"8922:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8921:6:24"},"scope":3539,"src":"8842:167:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3347,"nodeType":"Block","src":"9167:45:24","statements":[{"expression":{"arguments":[{"expression":{"id":3343,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"9193:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":3344,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9197:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3251,"src":"9193:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":3342,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"9185:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2951_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9185:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3341,"id":3346,"nodeType":"Return","src":"9178:26:24"}]},"documentation":{"id":3334,"nodeType":"StructuredDocumentation","src":"9017:72:24","text":" @dev Returns the number of values in the set. O(1)."},"id":3348,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9104:6:24","nodeType":"FunctionDefinition","parameters":{"id":3338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3337,"mutability":"mutable","name":"set","nameLocation":"9130:3:24","nodeType":"VariableDeclaration","scope":3348,"src":"9111:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":3336,"nodeType":"UserDefinedTypeName","pathNode":{"id":3335,"name":"AddressSet","nameLocations":["9111:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3252,"src":"9111:10:24"},"referencedDeclaration":3252,"src":"9111:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"}],"src":"9110:24:24"},"returnParameters":{"id":3341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3348,"src":"9158:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3339,"name":"uint256","nodeType":"ElementaryTypeName","src":"9158:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9157:9:24"},"scope":3539,"src":"9095:117:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3374,"nodeType":"Block","src":"9649:75:24","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":3366,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"9695:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":3367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9699:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3251,"src":"9695:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":3368,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"9707:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3365,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"9691:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2951_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9691:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9683:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3363,"name":"uint256","nodeType":"ElementaryTypeName","src":"9683:7:24","typeDescriptions":{}}},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9683:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9675:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3361,"name":"uint160","nodeType":"ElementaryTypeName","src":"9675:7:24","typeDescriptions":{}}},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9675:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9667:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3359,"name":"address","nodeType":"ElementaryTypeName","src":"9667:7:24","typeDescriptions":{}}},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9667:49:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3358,"id":3373,"nodeType":"Return","src":"9660:56:24"}]},"documentation":{"id":3349,"nodeType":"StructuredDocumentation","src":"9220:340:24","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3375,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9575:2:24","nodeType":"FunctionDefinition","parameters":{"id":3355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3352,"mutability":"mutable","name":"set","nameLocation":"9597:3:24","nodeType":"VariableDeclaration","scope":3375,"src":"9578:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":3351,"nodeType":"UserDefinedTypeName","pathNode":{"id":3350,"name":"AddressSet","nameLocations":["9578:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3252,"src":"9578:10:24"},"referencedDeclaration":3252,"src":"9578:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3354,"mutability":"mutable","name":"index","nameLocation":"9610:5:24","nodeType":"VariableDeclaration","scope":3375,"src":"9602:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3353,"name":"uint256","nodeType":"ElementaryTypeName","src":"9602:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9577:39:24"},"returnParameters":{"id":3358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3375,"src":"9640:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3356,"name":"address","nodeType":"ElementaryTypeName","src":"9640:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9639:9:24"},"scope":3539,"src":"9566:158:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3404,"nodeType":"Block","src":"10355:229:24","statements":[{"assignments":[3389],"declarations":[{"constant":false,"id":3389,"mutability":"mutable","name":"store","nameLocation":"10383:5:24","nodeType":"VariableDeclaration","scope":3404,"src":"10366:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10366:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3388,"nodeType":"ArrayTypeName","src":"10366:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3394,"initialValue":{"arguments":[{"expression":{"id":3391,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"10399:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":3392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10403:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3251,"src":"10399:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":3390,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"10391:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2951_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10391:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10366:44:24"},{"assignments":[3399],"declarations":[{"constant":false,"id":3399,"mutability":"mutable","name":"result","nameLocation":"10438:6:24","nodeType":"VariableDeclaration","scope":3404,"src":"10421:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3397,"name":"address","nodeType":"ElementaryTypeName","src":"10421:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3398,"nodeType":"ArrayTypeName","src":"10421:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3400,"nodeType":"VariableDeclarationStatement","src":"10421:23:24"},{"AST":{"nativeSrc":"10510:41:24","nodeType":"YulBlock","src":"10510:41:24","statements":[{"nativeSrc":"10525:15:24","nodeType":"YulAssignment","src":"10525:15:24","value":{"name":"store","nativeSrc":"10535:5:24","nodeType":"YulIdentifier","src":"10535:5:24"},"variableNames":[{"name":"result","nativeSrc":"10525:6:24","nodeType":"YulIdentifier","src":"10525:6:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":3399,"isOffset":false,"isSlot":false,"src":"10525:6:24","valueSize":1},{"declaration":3389,"isOffset":false,"isSlot":false,"src":"10535:5:24","valueSize":1}],"id":3401,"nodeType":"InlineAssembly","src":"10501:50:24"},{"expression":{"id":3402,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"10570:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3384,"id":3403,"nodeType":"Return","src":"10563:13:24"}]},"documentation":{"id":3376,"nodeType":"StructuredDocumentation","src":"9732:536:24","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3405,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10283:6:24","nodeType":"FunctionDefinition","parameters":{"id":3380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3379,"mutability":"mutable","name":"set","nameLocation":"10309:3:24","nodeType":"VariableDeclaration","scope":3405,"src":"10290:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":3378,"nodeType":"UserDefinedTypeName","pathNode":{"id":3377,"name":"AddressSet","nameLocations":["10290:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3252,"src":"10290:10:24"},"referencedDeclaration":3252,"src":"10290:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"}],"src":"10289:24:24"},"returnParameters":{"id":3384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3405,"src":"10337:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3381,"name":"address","nodeType":"ElementaryTypeName","src":"10337:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3382,"nodeType":"ArrayTypeName","src":"10337:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10336:18:24"},"scope":3539,"src":"10274:310:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSetUpgradeable.UintSet","id":3409,"members":[{"constant":false,"id":3408,"mutability":"mutable","name":"_inner","nameLocation":"10640:6:24","nodeType":"VariableDeclaration","scope":3409,"src":"10636:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":3407,"nodeType":"UserDefinedTypeName","pathNode":{"id":3406,"name":"Set","nameLocations":["10636:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":2951,"src":"10636:3:24"},"referencedDeclaration":2951,"src":"10636:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10617:7:24","nodeType":"StructDefinition","scope":3539,"src":"10610:44:24","visibility":"public"},{"body":{"id":3429,"nodeType":"Block","src":"10905:58:24","statements":[{"expression":{"arguments":[{"expression":{"id":3421,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"10928:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3409_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":3422,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10932:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3408,"src":"10928:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":3425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"10948:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10940:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10940:7:24","typeDescriptions":{}}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10940:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3420,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"10923:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2951_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10923:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3419,"id":3428,"nodeType":"Return","src":"10916:39:24"}]},"documentation":{"id":3410,"nodeType":"StructuredDocumentation","src":"10662:164:24","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3430,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10841:3:24","nodeType":"FunctionDefinition","parameters":{"id":3416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3413,"mutability":"mutable","name":"set","nameLocation":"10861:3:24","nodeType":"VariableDeclaration","scope":3430,"src":"10845:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3409_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":3412,"nodeType":"UserDefinedTypeName","pathNode":{"id":3411,"name":"UintSet","nameLocations":["10845:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":3409,"src":"10845:7:24"},"referencedDeclaration":3409,"src":"10845:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3409_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":3415,"mutability":"mutable","name":"value","nameLocation":"10874:5:24","nodeType":"VariableDeclaration","scope":3430,"src":"10866:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3414,"name":"uint256","nodeType":"ElementaryTypeName","src":"10866:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10844:36:24"},"returnParameters":{"id":3419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3430,"src":"10899:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3417,"name":"bool","nodeType":"ElementaryTypeName","src":"10899:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10898:6:24"},"scope":3539,"src":"10832:131:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3450,"nodeType":"Block","src":"11215:61:24","statements":[{"expression":{"arguments":[{"expression":{"id":3442,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"11241:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3409_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":3443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11245:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3408,"src":"11241:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":3446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"11261:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11253:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3444,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11253:7:24","typeDescriptions":{}}},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11253:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3441,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"11233:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2951_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11233:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3440,"id":3449,"nodeType":"Return","src":"11226:42:24"}]},"documentation":{"id":3431,"nodeType":"StructuredDocumentation","src":"10971:162:24","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3451,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11148:6:24","nodeType":"FunctionDefinition","parameters":{"id":3437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3434,"mutability":"mutable","name":"set","nameLocation":"11171:3:24","nodeType":"VariableDeclaration","scope":3451,"src":"11155:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3409_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":3433,"nodeType":"UserDefinedTypeName","pathNode":{"id":3432,"name":"UintSet","nameLocations":["11155:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":3409,"src":"11155:7:24"},"referencedDeclaration":3409,"src":"11155:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3409_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":3436,"mutability":"mutable","name":"value","nameLocation":"11184:5:24","nodeType":"VariableDeclaration","scope":3451,"src":"11176:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3435,"name":"uint256","nodeType":"ElementaryTypeName","src":"11176:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:36:24"},"returnParameters":{"id":3440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3451,"src":"11209:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3438,"name":"bool","nodeType":"ElementaryTypeName","src":"11209:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11208:6:24"},"scope":3539,"src":"11139:137:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3471,"nodeType":"Block","src":"11445:63:24","statements":[{"expression":{"arguments":[{"expression":{"id":3463,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"11473:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3409_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":3464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11477:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3408,"src":"11473:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":3467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"11493:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11485:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3465,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11485:7:24","typeDescriptions":{}}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11485:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3462,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"11463:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2951_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11463:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3461,"id":3470,"nodeType":"Return","src":"11456:44:24"}]},"documentation":{"id":3452,"nodeType":"StructuredDocumentation","src":"11284:72:24","text":" @dev Returns true if the value is in the set. O(1)."},"id":3472,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11371:8:24","nodeType":"FunctionDefinition","parameters":{"id":3458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3455,"mutability":"mutable","name":"set","nameLocation":"11396:3:24","nodeType":"VariableDeclaration","scope":3472,"src":"11380:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3409_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":3454,"nodeType":"UserDefinedTypeName","pathNode":{"id":3453,"name":"UintSet","nameLocations":["11380:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":3409,"src":"11380:7:24"},"referencedDeclaration":3409,"src":"11380:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3409_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":3457,"mutability":"mutable","name":"value","nameLocation":"11409:5:24","nodeType":"VariableDeclaration","scope":3472,"src":"11401:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3456,"name":"uint256","nodeType":"ElementaryTypeName","src":"11401:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11379:36:24"},"returnParameters":{"id":3461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3472,"src":"11439:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3459,"name":"bool","nodeType":"ElementaryTypeName","src":"11439:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11438:6:24"},"scope":3539,"src":"11362:146:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3486,"nodeType":"Block","src":"11663:45:24","statements":[{"expression":{"arguments":[{"expression":{"id":3482,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"11689:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3409_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":3483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11693:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3408,"src":"11689:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":3481,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"11681:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2951_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11681:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3480,"id":3485,"nodeType":"Return","src":"11674:26:24"}]},"documentation":{"id":3473,"nodeType":"StructuredDocumentation","src":"11516:72:24","text":" @dev Returns the number of values on the set. O(1)."},"id":3487,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11603:6:24","nodeType":"FunctionDefinition","parameters":{"id":3477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3476,"mutability":"mutable","name":"set","nameLocation":"11626:3:24","nodeType":"VariableDeclaration","scope":3487,"src":"11610:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3409_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":3475,"nodeType":"UserDefinedTypeName","pathNode":{"id":3474,"name":"UintSet","nameLocations":["11610:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":3409,"src":"11610:7:24"},"referencedDeclaration":3409,"src":"11610:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3409_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"src":"11609:21:24"},"returnParameters":{"id":3480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3487,"src":"11654:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3478,"name":"uint256","nodeType":"ElementaryTypeName","src":"11654:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11653:9:24"},"scope":3539,"src":"11594:114:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3507,"nodeType":"Block","src":"12142:57:24","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3501,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"12172:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3409_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":3502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12176:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3408,"src":"12172:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":3503,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"12184:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3500,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"12168:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2951_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12168:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12160:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3498,"name":"uint256","nodeType":"ElementaryTypeName","src":"12160:7:24","typeDescriptions":{}}},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3497,"id":3506,"nodeType":"Return","src":"12153:38:24"}]},"documentation":{"id":3488,"nodeType":"StructuredDocumentation","src":"11716:340:24","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3508,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"12071:2:24","nodeType":"FunctionDefinition","parameters":{"id":3494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3491,"mutability":"mutable","name":"set","nameLocation":"12090:3:24","nodeType":"VariableDeclaration","scope":3508,"src":"12074:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3409_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":3490,"nodeType":"UserDefinedTypeName","pathNode":{"id":3489,"name":"UintSet","nameLocations":["12074:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":3409,"src":"12074:7:24"},"referencedDeclaration":3409,"src":"12074:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3409_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":3493,"mutability":"mutable","name":"index","nameLocation":"12103:5:24","nodeType":"VariableDeclaration","scope":3508,"src":"12095:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3492,"name":"uint256","nodeType":"ElementaryTypeName","src":"12095:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12073:36:24"},"returnParameters":{"id":3497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3508,"src":"12133:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3495,"name":"uint256","nodeType":"ElementaryTypeName","src":"12133:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12132:9:24"},"scope":3539,"src":"12062:137:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3537,"nodeType":"Block","src":"12827:229:24","statements":[{"assignments":[3522],"declarations":[{"constant":false,"id":3522,"mutability":"mutable","name":"store","nameLocation":"12855:5:24","nodeType":"VariableDeclaration","scope":3537,"src":"12838:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12838:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3521,"nodeType":"ArrayTypeName","src":"12838:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3527,"initialValue":{"arguments":[{"expression":{"id":3524,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"12871:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3409_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":3525,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12875:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3408,"src":"12871:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2951_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":3523,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"12863:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2951_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12863:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12838:44:24"},{"assignments":[3532],"declarations":[{"constant":false,"id":3532,"mutability":"mutable","name":"result","nameLocation":"12910:6:24","nodeType":"VariableDeclaration","scope":3537,"src":"12893:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3530,"name":"uint256","nodeType":"ElementaryTypeName","src":"12893:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3531,"nodeType":"ArrayTypeName","src":"12893:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3533,"nodeType":"VariableDeclarationStatement","src":"12893:23:24"},{"AST":{"nativeSrc":"12982:41:24","nodeType":"YulBlock","src":"12982:41:24","statements":[{"nativeSrc":"12997:15:24","nodeType":"YulAssignment","src":"12997:15:24","value":{"name":"store","nativeSrc":"13007:5:24","nodeType":"YulIdentifier","src":"13007:5:24"},"variableNames":[{"name":"result","nativeSrc":"12997:6:24","nodeType":"YulIdentifier","src":"12997:6:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":3532,"isOffset":false,"isSlot":false,"src":"12997:6:24","valueSize":1},{"declaration":3522,"isOffset":false,"isSlot":false,"src":"13007:5:24","valueSize":1}],"id":3534,"nodeType":"InlineAssembly","src":"12973:50:24"},{"expression":{"id":3535,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"13042:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3517,"id":3536,"nodeType":"Return","src":"13035:13:24"}]},"documentation":{"id":3509,"nodeType":"StructuredDocumentation","src":"12207:536:24","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3538,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12758:6:24","nodeType":"FunctionDefinition","parameters":{"id":3513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3512,"mutability":"mutable","name":"set","nameLocation":"12781:3:24","nodeType":"VariableDeclaration","scope":3538,"src":"12765:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3409_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":3511,"nodeType":"UserDefinedTypeName","pathNode":{"id":3510,"name":"UintSet","nameLocations":["12765:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":3409,"src":"12765:7:24"},"referencedDeclaration":3409,"src":"12765:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3409_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"src":"12764:21:24"},"returnParameters":{"id":3517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3538,"src":"12809:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3514,"name":"uint256","nodeType":"ElementaryTypeName","src":"12809:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3515,"nodeType":"ArrayTypeName","src":"12809:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12808:18:24"},"scope":3539,"src":"12749:307:24","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3540,"src":"1265:11794:24","usedErrors":[],"usedEvents":[]}],"src":"118:12943:24"},"id":24},"contracts/orchestators/BaluniV1Router.sol":{"ast":{"absolutePath":"contracts/orchestators/BaluniV1Router.sol","exportedSymbols":{"BaluniV1Router":[5318],"ContextUpgradeable":[1293],"ERC1967Utils":[1872],"ERC20Upgradeable":[1247],"EnumerableSetUpgradeable":[3539],"I1inchSpotAgg":[2573],"IBaluniV1Agent":[2593],"IBaluniV1AgentFactory":[2615],"IBaluniV1Oracle":[2640],"IBaluniV1Rebalancer":[2725],"IBaluniV1Registry":[2909],"IBaluniV1Swapper":[2940],"IERC1822Proxiable":[1432],"IERC20":[1960],"IERC20Errors":[1474],"IERC20Metadata":[1986],"ISwapRouter":[2546],"IUniswapV3Factory":[2432],"IUniswapV3SwapCallback":[2446],"Initializable":[448],"OwnableUpgradeable":[194],"ReentrancyGuardUpgradeable":[1422],"UUPSUpgradeable":[630]},"id":5319,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":3541,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:25"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":3542,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5319,"sourceUnit":1248,"src":"1468:78:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":3543,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5319,"sourceUnit":195,"src":"1548:75:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","id":3544,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5319,"sourceUnit":1423,"src":"1625:82:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":3545,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5319,"sourceUnit":631,"src":"1709:77:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","file":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","id":3546,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5319,"sourceUnit":2547,"src":"1788:68:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","file":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","id":3547,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5319,"sourceUnit":2433,"src":"1858:69:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":3548,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5319,"sourceUnit":449,"src":"1929:75:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Agent.sol","file":"../interfaces/IBaluniV1Agent.sol","id":3549,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5319,"sourceUnit":2594,"src":"2008:42:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1AgentFactory.sol","file":"../interfaces/IBaluniV1AgentFactory.sol","id":3550,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5319,"sourceUnit":2616,"src":"2052:49:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Rebalancer.sol","file":"../interfaces/IBaluniV1Rebalancer.sol","id":3551,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5319,"sourceUnit":2726,"src":"2103:47:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/I1inchSpotAgg.sol","file":"../interfaces/I1inchSpotAgg.sol","id":3552,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5319,"sourceUnit":2574,"src":"2152:41:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Oracle.sol","file":"../interfaces/IBaluniV1Oracle.sol","id":3553,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5319,"sourceUnit":2641,"src":"2195:43:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libs/EnumerableSetUpgradeable.sol","file":"../libs/EnumerableSetUpgradeable.sol","id":3554,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5319,"sourceUnit":3540,"src":"2240:46:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Swapper.sol","file":"../interfaces/IBaluniV1Swapper.sol","id":3555,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5319,"sourceUnit":2941,"src":"2288:44:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Registry.sol","file":"../interfaces/IBaluniV1Registry.sol","id":3556,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5319,"sourceUnit":2910,"src":"2334:45:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3557,"name":"Initializable","nameLocations":["2415:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"2415:13:25"},"id":3558,"nodeType":"InheritanceSpecifier","src":"2415:13:25"},{"baseName":{"id":3559,"name":"ERC20Upgradeable","nameLocations":["2435:16:25"],"nodeType":"IdentifierPath","referencedDeclaration":1247,"src":"2435:16:25"},"id":3560,"nodeType":"InheritanceSpecifier","src":"2435:16:25"},{"baseName":{"id":3561,"name":"OwnableUpgradeable","nameLocations":["2458:18:25"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"2458:18:25"},"id":3562,"nodeType":"InheritanceSpecifier","src":"2458:18:25"},{"baseName":{"id":3563,"name":"ReentrancyGuardUpgradeable","nameLocations":["2483:26:25"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"2483:26:25"},"id":3564,"nodeType":"InheritanceSpecifier","src":"2483:26:25"},{"baseName":{"id":3565,"name":"UUPSUpgradeable","nameLocations":["2516:15:25"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"2516:15:25"},"id":3566,"nodeType":"InheritanceSpecifier","src":"2516:15:25"}],"canonicalName":"BaluniV1Router","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5318,"linearizedBaseContracts":[5318,630,1432,1422,194,1247,1474,1986,1960,1293,448],"name":"BaluniV1Router","nameLocation":"2392:14:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"BaluniV1Router.Call","id":3573,"members":[{"constant":false,"id":3568,"mutability":"mutable","name":"to","nameLocation":"2571:2:25","nodeType":"VariableDeclaration","scope":3573,"src":"2563:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3567,"name":"address","nodeType":"ElementaryTypeName","src":"2563:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3570,"mutability":"mutable","name":"value","nameLocation":"2592:5:25","nodeType":"VariableDeclaration","scope":3573,"src":"2584:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3569,"name":"uint256","nodeType":"ElementaryTypeName","src":"2584:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3572,"mutability":"mutable","name":"data","nameLocation":"2614:4:25","nodeType":"VariableDeclaration","scope":3573,"src":"2608:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3571,"name":"bytes","nodeType":"ElementaryTypeName","src":"2608:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Call","nameLocation":"2547:4:25","nodeType":"StructDefinition","scope":5318,"src":"2540:86:25","visibility":"public"},{"constant":false,"id":3576,"mutability":"mutable","name":"tokens","nameLocation":"2678:6:25","nodeType":"VariableDeclaration","scope":5318,"src":"2634:50:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":3575,"nodeType":"UserDefinedTypeName","pathNode":{"id":3574,"name":"EnumerableSetUpgradeable.AddressSet","nameLocations":["2634:24:25","2659:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":3252,"src":"2634:35:25"},"referencedDeclaration":3252,"src":"2634:35:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"private"},{"constant":false,"functionSelector":"7b103999","id":3579,"mutability":"mutable","name":"registry","nameLocation":"2718:8:25","nodeType":"VariableDeclaration","scope":5318,"src":"2693:33:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"},"typeName":{"id":3578,"nodeType":"UserDefinedTypeName","pathNode":{"id":3577,"name":"IBaluniV1Registry","nameLocations":["2693:17:25"],"nodeType":"IdentifierPath","referencedDeclaration":2909,"src":"2693:17:25"},"referencedDeclaration":2909,"src":"2693:17:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"visibility":"public"},{"global":false,"id":3583,"libraryName":{"id":3580,"name":"EnumerableSetUpgradeable","nameLocations":["2741:24:25"],"nodeType":"IdentifierPath","referencedDeclaration":3539,"src":"2741:24:25"},"nodeType":"UsingForDirective","src":"2735:71:25","typeName":{"id":3582,"nodeType":"UserDefinedTypeName","pathNode":{"id":3581,"name":"EnumerableSetUpgradeable.AddressSet","nameLocations":["2770:24:25","2795:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":3252,"src":"2770:35:25"},"referencedDeclaration":3252,"src":"2770:35:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}}},{"constant":false,"functionSelector":"cdf456e1","id":3585,"mutability":"mutable","name":"baseAsset","nameLocation":"2829:9:25","nodeType":"VariableDeclaration","scope":5318,"src":"2814:24:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3584,"name":"address","nodeType":"ElementaryTypeName","src":"2814:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"959525f9273812bc5ed0bd375df7492e36027567ab13116ec62673c8d46870c8","id":3596,"name":"Execute","nameLocation":"2853:7:25","nodeType":"EventDefinition","parameters":{"id":3595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3587,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"2869:4:25","nodeType":"VariableDeclaration","scope":3596,"src":"2861:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3586,"name":"address","nodeType":"ElementaryTypeName","src":"2861:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3591,"indexed":false,"mutability":"mutable","name":"calls","nameLocation":"2897:5:25","nodeType":"VariableDeclaration","scope":3596,"src":"2875:27:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2582_memory_ptr_$dyn_memory_ptr","typeString":"struct IBaluniV1Agent.Call[]"},"typeName":{"baseType":{"id":3589,"nodeType":"UserDefinedTypeName","pathNode":{"id":3588,"name":"IBaluniV1Agent.Call","nameLocations":["2875:14:25","2890:4:25"],"nodeType":"IdentifierPath","referencedDeclaration":2582,"src":"2875:19:25"},"referencedDeclaration":2582,"src":"2875:19:25","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$2582_storage_ptr","typeString":"struct IBaluniV1Agent.Call"}},"id":3590,"nodeType":"ArrayTypeName","src":"2875:21:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2582_storage_$dyn_storage_ptr","typeString":"struct IBaluniV1Agent.Call[]"}},"visibility":"internal"},{"constant":false,"id":3594,"indexed":false,"mutability":"mutable","name":"tokensReturn","nameLocation":"2914:12:25","nodeType":"VariableDeclaration","scope":3596,"src":"2904:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3592,"name":"address","nodeType":"ElementaryTypeName","src":"2904:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3593,"nodeType":"ArrayTypeName","src":"2904:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2860:67:25"},"src":"2847:81:25"},{"anonymous":false,"eventSelector":"cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5","id":3602,"name":"Burn","nameLocation":"2940:4:25","nodeType":"EventDefinition","parameters":{"id":3601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3598,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"2953:4:25","nodeType":"VariableDeclaration","scope":3602,"src":"2945:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3597,"name":"address","nodeType":"ElementaryTypeName","src":"2945:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3600,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2967:5:25","nodeType":"VariableDeclaration","scope":3602,"src":"2959:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3599,"name":"uint256","nodeType":"ElementaryTypeName","src":"2959:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2944:29:25"},"src":"2934:40:25"},{"anonymous":false,"eventSelector":"0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885","id":3608,"name":"Mint","nameLocation":"2986:4:25","nodeType":"EventDefinition","parameters":{"id":3607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"2999:4:25","nodeType":"VariableDeclaration","scope":3608,"src":"2991:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3603,"name":"address","nodeType":"ElementaryTypeName","src":"2991:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3606,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"3013:5:25","nodeType":"VariableDeclaration","scope":3608,"src":"3005:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3605,"name":"uint256","nodeType":"ElementaryTypeName","src":"3005:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2990:29:25"},"src":"2980:40:25"},{"anonymous":false,"eventSelector":"dd970dd9b5bfe707922155b058a407655cb18288b807e2216442bca8ad83d6b5","id":3614,"name":"Log","nameLocation":"3032:3:25","nodeType":"EventDefinition","parameters":{"id":3613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3610,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"3043:7:25","nodeType":"VariableDeclaration","scope":3614,"src":"3036:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3609,"name":"string","nodeType":"ElementaryTypeName","src":"3036:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3612,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"3060:5:25","nodeType":"VariableDeclaration","scope":3614,"src":"3052:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3611,"name":"uint256","nodeType":"ElementaryTypeName","src":"3052:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:31:25"},"src":"3026:41:25"},{"body":{"id":3658,"nodeType":"Block","src":"3511:291:25","statements":[{"expression":{"arguments":[{"hexValue":"42616c756e69","id":3623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3535:8:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_d434daf865c4172431fe963e09dfffee59bf02a039f2a16ac1512baa0b52f5ad","typeString":"literal_string \"Baluni\""},"value":"Baluni"},{"hexValue":"42414c554e49","id":3624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3545:8:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_7dbbcf8e986894bb951b03a039da22e5dd38b473b6e36e83d09344a88817b0fb","typeString":"literal_string \"BALUNI\""},"value":"BALUNI"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d434daf865c4172431fe963e09dfffee59bf02a039f2a16ac1512baa0b52f5ad","typeString":"literal_string \"Baluni\""},{"typeIdentifier":"t_stringliteral_7dbbcf8e986894bb951b03a039da22e5dd38b473b6e36e83d09344a88817b0fb","typeString":"literal_string \"BALUNI\""}],"id":3622,"name":"__ERC20_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"3522:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3522:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3626,"nodeType":"ExpressionStatement","src":"3522:32:25"},{"expression":{"arguments":[{"expression":{"id":3628,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3580:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3584:6:25","memberName":"sender","nodeType":"MemberAccess","src":"3580:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3627,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"3565:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3631,"nodeType":"ExpressionStatement","src":"3565:26:25"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3632,"name":"__ReentrancyGuard_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"3602:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3602:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3634,"nodeType":"ExpressionStatement","src":"3602:24:25"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3635,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"3637:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3637:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3637,"nodeType":"ExpressionStatement","src":"3637:24:25"},{"expression":{"arguments":[{"arguments":[{"id":3641,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3686:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}],"id":3640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3678:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3639,"name":"address","nodeType":"ElementaryTypeName","src":"3678:7:25","typeDescriptions":{}}},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3678:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":3643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3693:7:25","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"id":3638,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"3672:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3672:29:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3645,"nodeType":"ExpressionStatement","src":"3672:29:25"},{"expression":{"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3646,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"3714:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3648,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"3743:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3647,"name":"IBaluniV1Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"3725:17:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Registry_$2909_$","typeString":"type(contract IBaluniV1Registry)"}},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3725:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"src":"3714:39:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":3651,"nodeType":"ExpressionStatement","src":"3714:39:25"},{"expression":{"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3652,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"3764:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3653,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"3776:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3785:7:25","memberName":"getUSDC","nodeType":"MemberAccess","referencedDeclaration":2873,"src":"3776:16:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3776:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3764:30:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3657,"nodeType":"ExpressionStatement","src":"3764:30:25"}]},"documentation":{"id":3615,"nodeType":"StructuredDocumentation","src":"3075:372:25","text":" @dev Initializes the BaluniV1Router contract.\n It sets the initial values for various variables and mints 1 ether to the contract's address.\n It also sets the USDC token address, WNATIVE token address, oracle address, Uniswap router address, and Uniswap factory address.\n Finally, it adds the USDC token address to the tokens set."},"functionSelector":"c4d66de8","id":3659,"implemented":true,"kind":"function","modifiers":[{"id":3620,"kind":"modifierInvocation","modifierName":{"id":3619,"name":"initializer","nameLocations":["3499:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"3499:11:25"},"nodeType":"ModifierInvocation","src":"3499:11:25"}],"name":"initialize","nameLocation":"3462:10:25","nodeType":"FunctionDefinition","parameters":{"id":3618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3617,"mutability":"mutable","name":"_registry","nameLocation":"3481:9:25","nodeType":"VariableDeclaration","scope":3659,"src":"3473:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3616,"name":"address","nodeType":"ElementaryTypeName","src":"3473:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3472:19:25"},"returnParameters":{"id":3621,"nodeType":"ParameterList","parameters":[],"src":"3511:0:25"},"scope":5318,"src":"3453:349:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3675,"nodeType":"Block","src":"3897:136:25","statements":[{"expression":{"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3669,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"3986:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3671,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"4015:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3670,"name":"IBaluniV1Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"3997:17:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Registry_$2909_$","typeString":"type(contract IBaluniV1Registry)"}},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3997:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"src":"3986:39:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":3674,"nodeType":"ExpressionStatement","src":"3986:39:25"}]},"functionSelector":"8f2248bc","id":3676,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3666,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"3888:7:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":3667,"kind":"modifierInvocation","modifierName":{"id":3665,"name":"reinitializer","nameLocations":["3874:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":349,"src":"3874:13:25"},"nodeType":"ModifierInvocation","src":"3874:22:25"}],"name":"reinitialize","nameLocation":"3819:12:25","nodeType":"FunctionDefinition","parameters":{"id":3664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3661,"mutability":"mutable","name":"_registry","nameLocation":"3840:9:25","nodeType":"VariableDeclaration","scope":3676,"src":"3832:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3660,"name":"address","nodeType":"ElementaryTypeName","src":"3832:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3663,"mutability":"mutable","name":"version","nameLocation":"3858:7:25","nodeType":"VariableDeclaration","scope":3676,"src":"3851:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3662,"name":"uint64","nodeType":"ElementaryTypeName","src":"3851:6:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3831:35:25"},"returnParameters":{"id":3668,"nodeType":"ParameterList","parameters":[],"src":"3897:0:25"},"scope":5318,"src":"3810:223:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3689,"nodeType":"Block","src":"4100:58:25","statements":[{"expression":{"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3683,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"4111:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3685,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"4140:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3684,"name":"IBaluniV1Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"4122:17:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Registry_$2909_$","typeString":"type(contract IBaluniV1Registry)"}},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4122:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"src":"4111:39:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":3688,"nodeType":"ExpressionStatement","src":"4111:39:25"}]},"functionSelector":"e67ad759","id":3690,"implemented":true,"kind":"function","modifiers":[{"id":3681,"kind":"modifierInvocation","modifierName":{"id":3680,"name":"onlyOwner","nameLocations":["4090:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"4090:9:25"},"nodeType":"ModifierInvocation","src":"4090:9:25"}],"name":"resetContract","nameLocation":"4050:13:25","nodeType":"FunctionDefinition","parameters":{"id":3679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3678,"mutability":"mutable","name":"_registry","nameLocation":"4072:9:25","nodeType":"VariableDeclaration","scope":3690,"src":"4064:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3677,"name":"address","nodeType":"ElementaryTypeName","src":"4064:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4063:19:25"},"returnParameters":{"id":3682,"nodeType":"ParameterList","parameters":[],"src":"4100:0:25"},"scope":5318,"src":"4041:117:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[584],"body":{"id":3699,"nodeType":"Block","src":"4508:2:25","statements":[]},"documentation":{"id":3691,"nodeType":"StructuredDocumentation","src":"4166:254:25","text":" @dev Internal function to authorize an upgrade to a new implementation contract.\n @param newImplementation The address of the new implementation contract.\n @notice This function can only be called by the contract owner."},"id":3700,"implemented":true,"kind":"function","modifiers":[{"id":3697,"kind":"modifierInvocation","modifierName":{"id":3696,"name":"onlyOwner","nameLocations":["4498:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"4498:9:25"},"nodeType":"ModifierInvocation","src":"4498:9:25"}],"name":"_authorizeUpgrade","nameLocation":"4435:17:25","nodeType":"FunctionDefinition","overrides":{"id":3695,"nodeType":"OverrideSpecifier","overrides":[],"src":"4489:8:25"},"parameters":{"id":3694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3693,"mutability":"mutable","name":"newImplementation","nameLocation":"4461:17:25","nodeType":"VariableDeclaration","scope":3700,"src":"4453:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3692,"name":"address","nodeType":"ElementaryTypeName","src":"4453:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4452:27:25"},"returnParameters":{"id":3698,"nodeType":"ParameterList","parameters":[],"src":"4508:0:25"},"scope":5318,"src":"4426:84:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3710,"nodeType":"Block","src":"4698:54:25","statements":[{"expression":{"arguments":[{"hexValue":"31653138","id":3707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4739:4:25","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"id":3706,"name":"_calculateBaluniToUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"4716:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4716:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3705,"id":3709,"nodeType":"Return","src":"4709:35:25"}]},"documentation":{"id":3701,"nodeType":"StructuredDocumentation","src":"4518:123:25","text":" @dev Returns the unit price of the token in USDC.\n @return The unit price of the token in USDC."},"functionSelector":"e73faa2d","id":3711,"implemented":true,"kind":"function","modifiers":[],"name":"unitPrice","nameLocation":"4656:9:25","nodeType":"FunctionDefinition","parameters":{"id":3702,"nodeType":"ParameterList","parameters":[],"src":"4665:2:25"},"returnParameters":{"id":3705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3711,"src":"4689:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3703,"name":"uint256","nodeType":"ElementaryTypeName","src":"4689:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4688:9:25"},"scope":5318,"src":"4647:105:25","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4040,"nodeType":"Block","src":"5487:2385:25","statements":[{"assignments":[3725],"declarations":[{"constant":false,"id":3725,"mutability":"mutable","name":"agentFactory","nameLocation":"5506:12:25","nodeType":"VariableDeclaration","scope":4040,"src":"5498:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3724,"name":"address","nodeType":"ElementaryTypeName","src":"5498:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3729,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3726,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"5521:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5530:21:25","memberName":"getBaluniAgentFactory","nodeType":"MemberAccess","referencedDeclaration":2833,"src":"5521:30:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5521:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5498:55:25"},{"assignments":[3731],"declarations":[{"constant":false,"id":3731,"mutability":"mutable","name":"uniswapFactory","nameLocation":"5572:14:25","nodeType":"VariableDeclaration","scope":4040,"src":"5564:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3730,"name":"address","nodeType":"ElementaryTypeName","src":"5564:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3735,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3732,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"5589:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5598:17:25","memberName":"getUniswapFactory","nodeType":"MemberAccess","referencedDeclaration":2813,"src":"5589:26:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5589:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5564:53:25"},{"assignments":[3737],"declarations":[{"constant":false,"id":3737,"mutability":"mutable","name":"WNATIVE","nameLocation":"5636:7:25","nodeType":"VariableDeclaration","scope":4040,"src":"5628:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3736,"name":"address","nodeType":"ElementaryTypeName","src":"5628:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3741,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3738,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"5646:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5655:10:25","memberName":"getWNATIVE","nodeType":"MemberAccess","referencedDeclaration":2868,"src":"5646:19:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5646:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5628:39:25"},{"assignments":[3743],"declarations":[{"constant":false,"id":3743,"mutability":"mutable","name":"USDC","nameLocation":"5686:4:25","nodeType":"VariableDeclaration","scope":4040,"src":"5678:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3742,"name":"address","nodeType":"ElementaryTypeName","src":"5678:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3747,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3744,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"5693:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5702:7:25","memberName":"getUSDC","nodeType":"MemberAccess","referencedDeclaration":2873,"src":"5693:16:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5693:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5678:33:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3751,"name":"agentFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"5740:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5732:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3749,"name":"address","nodeType":"ElementaryTypeName","src":"5732:7:25","typeDescriptions":{}}},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5732:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5765:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5757:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3753,"name":"address","nodeType":"ElementaryTypeName","src":"5757:7:25","typeDescriptions":{}}},"id":3756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5757:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5732:35:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4167656e7420666163746f7279206e6f7420736574","id":3758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5769:23:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_c0699f179d2a1b62cb97d8e7fffb6f849ca18ed4e697b2f010f29e743716b888","typeString":"literal_string \"Agent factory not set\""},"value":"Agent factory not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c0699f179d2a1b62cb97d8e7fffb6f849ca18ed4e697b2f010f29e743716b888","typeString":"literal_string \"Agent factory not set\""}],"id":3748,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5724:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5724:69:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3760,"nodeType":"ExpressionStatement","src":"5724:69:25"},{"assignments":[3762],"declarations":[{"constant":false,"id":3762,"mutability":"mutable","name":"agent","nameLocation":"5812:5:25","nodeType":"VariableDeclaration","scope":4040,"src":"5804:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3761,"name":"address","nodeType":"ElementaryTypeName","src":"5804:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3770,"initialValue":{"arguments":[{"expression":{"id":3767,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5873:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5877:6:25","memberName":"sender","nodeType":"MemberAccess","src":"5873:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3764,"name":"agentFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"5842:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3763,"name":"IBaluniV1AgentFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"5820:21:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1AgentFactory_$2615_$","typeString":"type(contract IBaluniV1AgentFactory)"}},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5820:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1AgentFactory_$2615","typeString":"contract IBaluniV1AgentFactory"}},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5856:16:25","memberName":"getOrCreateAgent","nodeType":"MemberAccess","referencedDeclaration":2609,"src":"5820:52:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$_t_address_$","typeString":"function (address) external returns (address)"}},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5820:64:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5804:80:25"},{"assignments":[3775],"declarations":[{"constant":false,"id":3775,"mutability":"mutable","name":"isTokenNew","nameLocation":"5909:10:25","nodeType":"VariableDeclaration","scope":4040,"src":"5895:24:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3773,"name":"bool","nodeType":"ElementaryTypeName","src":"5895:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3774,"nodeType":"ArrayTypeName","src":"5895:6:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"id":3782,"initialValue":{"arguments":[{"expression":{"id":3779,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"5933:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5946:6:25","memberName":"length","nodeType":"MemberAccess","src":"5933:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5922:10:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":3776,"name":"bool","nodeType":"ElementaryTypeName","src":"5926:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3777,"nodeType":"ArrayTypeName","src":"5926:6:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5922:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5895:58:25"},{"assignments":[3787],"declarations":[{"constant":false,"id":3787,"mutability":"mutable","name":"tokenBalances","nameLocation":"5981:13:25","nodeType":"VariableDeclaration","scope":4040,"src":"5964:30:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3785,"name":"uint256","nodeType":"ElementaryTypeName","src":"5964:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3786,"nodeType":"ArrayTypeName","src":"5964:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3794,"initialValue":{"arguments":[{"expression":{"id":3791,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"6011:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6024:6:25","memberName":"length","nodeType":"MemberAccess","src":"6011:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5997:13:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3788,"name":"uint256","nodeType":"ElementaryTypeName","src":"6001:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3789,"nodeType":"ArrayTypeName","src":"6001:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5997:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5964:67:25"},{"body":{"id":3835,"nodeType":"Block","src":"6094:184:25","statements":[{"expression":{"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3806,"name":"isTokenNew","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"6109:10:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3808,"indexExpression":{"id":3807,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"6120:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6109:13:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6125:59:25","subExpression":{"arguments":[{"id":3811,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"6160:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},{"baseExpression":{"id":3812,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"6168:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3814,"indexExpression":{"id":3813,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"6181:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6168:15:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AddressSet_$3252_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3809,"name":"EnumerableSetUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"6126:24:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnumerableSetUpgradeable_$3539_$","typeString":"type(library EnumerableSetUpgradeable)"}},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6151:8:25","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":3333,"src":"6126:33:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3252_storage_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) view returns (bool)"}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6126:58:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6109:75:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3818,"nodeType":"ExpressionStatement","src":"6109:75:25"},{"expression":{"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3819,"name":"tokenBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"6199:13:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3821,"indexExpression":{"id":3820,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"6213:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6199:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3830,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6260:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}],"id":3829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6252:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3828,"name":"address","nodeType":"ElementaryTypeName","src":"6252:7:25","typeDescriptions":{}}},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6252:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":3823,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"6225:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3825,"indexExpression":{"id":3824,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"6238:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6225:15:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3822,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"6218:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6218:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6242:9:25","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1917,"src":"6218:33:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6218:48:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6199:67:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3834,"nodeType":"ExpressionStatement","src":"6199:67:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3799,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"6064:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3800,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"6068:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6081:6:25","memberName":"length","nodeType":"MemberAccess","src":"6068:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6064:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3836,"initializationExpression":{"assignments":[3796],"declarations":[{"constant":false,"id":3796,"mutability":"mutable","name":"i","nameLocation":"6057:1:25","nodeType":"VariableDeclaration","scope":3836,"src":"6049:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3795,"name":"uint256","nodeType":"ElementaryTypeName","src":"6049:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3798,"initialValue":{"hexValue":"30","id":3797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6061:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6049:13:25"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6089:3:25","subExpression":{"id":3803,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"6089:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3805,"nodeType":"ExpressionStatement","src":"6089:3:25"},"nodeType":"ForStatement","src":"6044:234:25"},{"expression":{"arguments":[{"id":3841,"name":"calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"6320:5:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2582_memory_ptr_$dyn_memory_ptr","typeString":"struct IBaluniV1Agent.Call memory[] memory"}},{"id":3842,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"6327:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Call_$2582_memory_ptr_$dyn_memory_ptr","typeString":"struct IBaluniV1Agent.Call memory[] memory"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"expression":{"arguments":[{"id":3838,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"6305:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3837,"name":"IBaluniV1Agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"6290:14:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Agent_$2593_$","typeString":"type(contract IBaluniV1Agent)"}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6290:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Agent_$2593","typeString":"contract IBaluniV1Agent"}},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6312:7:25","memberName":"execute","nodeType":"MemberAccess","referencedDeclaration":2592,"src":"6290:29:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_array$_t_struct$_Call_$2582_memory_ptr_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (struct IBaluniV1Agent.Call memory[] memory,address[] memory) external"}},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6290:50:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3844,"nodeType":"ExpressionStatement","src":"6290:50:25"},{"body":{"id":4038,"nodeType":"Block","src":"6403:1462:25","statements":[{"assignments":[3857],"declarations":[{"constant":false,"id":3857,"mutability":"mutable","name":"token","nameLocation":"6426:5:25","nodeType":"VariableDeclaration","scope":4038,"src":"6418:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3856,"name":"address","nodeType":"ElementaryTypeName","src":"6418:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3861,"initialValue":{"baseExpression":{"id":3858,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"6434:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3860,"indexExpression":{"id":3859,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"6447:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6434:15:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6418:31:25"},{"assignments":[3863],"declarations":[{"constant":false,"id":3863,"mutability":"mutable","name":"balance","nameLocation":"6472:7:25","nodeType":"VariableDeclaration","scope":4038,"src":"6464:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3862,"name":"uint256","nodeType":"ElementaryTypeName","src":"6464:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3873,"initialValue":{"arguments":[{"arguments":[{"id":3870,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6514:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}],"id":3869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6506:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3868,"name":"address","nodeType":"ElementaryTypeName","src":"6506:7:25","typeDescriptions":{}}},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6506:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3865,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"6489:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3864,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"6482:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6482:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6496:9:25","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1917,"src":"6482:23:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6482:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6464:56:25"},{"assignments":[3875],"declarations":[{"constant":false,"id":3875,"mutability":"mutable","name":"poolNative3000","nameLocation":"6543:14:25","nodeType":"VariableDeclaration","scope":4038,"src":"6535:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3874,"name":"address","nodeType":"ElementaryTypeName","src":"6535:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3887,"initialValue":{"arguments":[{"id":3880,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"6602:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3883,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"6617:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6609:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3881,"name":"address","nodeType":"ElementaryTypeName","src":"6609:7:25","typeDescriptions":{}}},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6609:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"33303030","id":3885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6627:4:25","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"}],"expression":{"arguments":[{"id":3877,"name":"uniswapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"6578:14:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3876,"name":"IUniswapV3Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"6560:17:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Factory_$2432_$","typeString":"type(contract IUniswapV3Factory)"}},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6560:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$2432","typeString":"contract IUniswapV3Factory"}},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6594:7:25","memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":2405,"src":"6560:41:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$","typeString":"function (address,address,uint24) view external returns (address)"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6560:72:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6535:97:25"},{"assignments":[3889],"declarations":[{"constant":false,"id":3889,"mutability":"mutable","name":"poolNative500","nameLocation":"6655:13:25","nodeType":"VariableDeclaration","scope":4038,"src":"6647:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3888,"name":"address","nodeType":"ElementaryTypeName","src":"6647:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3901,"initialValue":{"arguments":[{"id":3894,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"6713:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3897,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"6728:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6720:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3895,"name":"address","nodeType":"ElementaryTypeName","src":"6720:7:25","typeDescriptions":{}}},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6720:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"353030","id":3899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6738:3:25","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"}],"expression":{"arguments":[{"id":3891,"name":"uniswapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"6689:14:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3890,"name":"IUniswapV3Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"6671:17:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Factory_$2432_$","typeString":"type(contract IUniswapV3Factory)"}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6671:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$2432","typeString":"contract IUniswapV3Factory"}},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6705:7:25","memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":2405,"src":"6671:41:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$","typeString":"function (address,address,uint24) view external returns (address)"}},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6671:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6647:95:25"},{"assignments":[3903],"declarations":[{"constant":false,"id":3903,"mutability":"mutable","name":"poolUSDC500","nameLocation":"6765:11:25","nodeType":"VariableDeclaration","scope":4038,"src":"6757:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3902,"name":"address","nodeType":"ElementaryTypeName","src":"6757:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3915,"initialValue":{"arguments":[{"id":3908,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"6821:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3911,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"6836:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6828:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3909,"name":"address","nodeType":"ElementaryTypeName","src":"6828:7:25","typeDescriptions":{}}},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6828:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"353030","id":3913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6843:3:25","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"}],"expression":{"arguments":[{"id":3905,"name":"uniswapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"6797:14:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3904,"name":"IUniswapV3Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"6779:17:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Factory_$2432_$","typeString":"type(contract IUniswapV3Factory)"}},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6779:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$2432","typeString":"contract IUniswapV3Factory"}},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6813:7:25","memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":2405,"src":"6779:41:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$","typeString":"function (address,address,uint24) view external returns (address)"}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6779:68:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6757:90:25"},{"assignments":[3917],"declarations":[{"constant":false,"id":3917,"mutability":"mutable","name":"poolUSDC3000","nameLocation":"6870:12:25","nodeType":"VariableDeclaration","scope":4038,"src":"6862:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3916,"name":"address","nodeType":"ElementaryTypeName","src":"6862:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3929,"initialValue":{"arguments":[{"id":3922,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"6927:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3925,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"6942:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6934:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3923,"name":"address","nodeType":"ElementaryTypeName","src":"6934:7:25","typeDescriptions":{}}},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6934:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"33303030","id":3927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6949:4:25","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"}],"expression":{"arguments":[{"id":3919,"name":"uniswapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"6903:14:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3918,"name":"IUniswapV3Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"6885:17:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Factory_$2432_$","typeString":"type(contract IUniswapV3Factory)"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6885:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$2432","typeString":"contract IUniswapV3Factory"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6919:7:25","memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":2405,"src":"6885:41:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$","typeString":"function (address,address,uint24) view external returns (address)"}},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6885:69:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6862:92:25"},{"assignments":[3931],"declarations":[{"constant":false,"id":3931,"mutability":"mutable","name":"poolExist","nameLocation":"6974:9:25","nodeType":"VariableDeclaration","scope":4038,"src":"6969:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3930,"name":"bool","nodeType":"ElementaryTypeName","src":"6969:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3959,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3932,"name":"poolNative3000","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"6986:14:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7012:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7004:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3933,"name":"address","nodeType":"ElementaryTypeName","src":"7004:7:25","typeDescriptions":{}}},"id":3936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7004:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6986:28:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3938,"name":"poolNative500","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"7035:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7060:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7052:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3939,"name":"address","nodeType":"ElementaryTypeName","src":"7052:7:25","typeDescriptions":{}}},"id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7052:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7035:27:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6986:76:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3945,"name":"poolUSDC3000","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"7083:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7107:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7099:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3946,"name":"address","nodeType":"ElementaryTypeName","src":"7099:7:25","typeDescriptions":{}}},"id":3949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7099:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7083:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6986:123:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3952,"name":"poolUSDC500","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"7130:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7153:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7145:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3953,"name":"address","nodeType":"ElementaryTypeName","src":"7145:7:25","typeDescriptions":{}}},"id":3956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7145:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7130:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6986:169:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"6969:186:25"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3960,"name":"isTokenNew","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"7176:10:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3962,"indexExpression":{"id":3961,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"7187:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7176:13:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3963,"name":"poolExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"7193:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7176:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3973,"nodeType":"IfStatement","src":"7172:110:25","trueBody":{"id":3972,"nodeType":"Block","src":"7204:78:25","statements":[{"expression":{"arguments":[{"id":3968,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"7252:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},{"id":3969,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"7260:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AddressSet_$3252_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3965,"name":"EnumerableSetUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"7223:24:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnumerableSetUpgradeable_$3539_$","typeString":"type(library EnumerableSetUpgradeable)"}},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7248:3:25","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3279,"src":"7223:28:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$3252_storage_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"}},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7223:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3971,"nodeType":"ExpressionStatement","src":"7223:43:25"}]}},{"assignments":[3975],"declarations":[{"constant":false,"id":3975,"mutability":"mutable","name":"amountReceived","nameLocation":"7306:14:25","nodeType":"VariableDeclaration","scope":4038,"src":"7298:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3974,"name":"uint256","nodeType":"ElementaryTypeName","src":"7298:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3981,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3976,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"7323:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":3977,"name":"tokenBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"7333:13:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3979,"indexExpression":{"id":3978,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"7347:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7333:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7323:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7298:51:25"},{"condition":{"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7370:10:25","subExpression":{"id":3982,"name":"poolExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"7371:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3995,"nodeType":"IfStatement","src":"7366:126:25","trueBody":{"id":3994,"nodeType":"Block","src":"7382:110:25","statements":[{"expression":{"arguments":[{"expression":{"id":3988,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7424:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7428:6:25","memberName":"sender","nodeType":"MemberAccess","src":"7424:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3990,"name":"amountReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"7436:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3985,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"7408:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3984,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"7401:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7401:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7415:8:25","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"7401:22:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7401:50:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3992,"nodeType":"ExpressionStatement","src":"7401:50:25"},{"functionReturnParameters":3723,"id":3993,"nodeType":"Return","src":"7470:7:25"}]}},{"assignments":[3997],"declarations":[{"constant":false,"id":3997,"mutability":"mutable","name":"treasury","nameLocation":"7516:8:25","nodeType":"VariableDeclaration","scope":4038,"src":"7508:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3996,"name":"address","nodeType":"ElementaryTypeName","src":"7508:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4001,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3998,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"7527:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7536:11:25","memberName":"getTreasury","nodeType":"MemberAccess","referencedDeclaration":2898,"src":"7527:20:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7527:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7508:41:25"},{"assignments":[4003],"declarations":[{"constant":false,"id":4003,"mutability":"mutable","name":"_BPS_FEE","nameLocation":"7572:8:25","nodeType":"VariableDeclaration","scope":4038,"src":"7564:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4002,"name":"uint256","nodeType":"ElementaryTypeName","src":"7564:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4007,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4004,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"7583:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7592:10:25","memberName":"getBPS_FEE","nodeType":"MemberAccess","referencedDeclaration":2883,"src":"7583:19:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7583:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7564:40:25"},{"assignments":[4009],"declarations":[{"constant":false,"id":4009,"mutability":"mutable","name":"_BPS_BASE","nameLocation":"7627:9:25","nodeType":"VariableDeclaration","scope":4038,"src":"7619:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4008,"name":"uint256","nodeType":"ElementaryTypeName","src":"7619:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4013,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4010,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"7639:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7648:11:25","memberName":"getBPS_BASE","nodeType":"MemberAccess","referencedDeclaration":2893,"src":"7639:20:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7639:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7619:42:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4014,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"7682:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"baseExpression":{"id":4015,"name":"tokenBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"7692:13:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4017,"indexExpression":{"id":4016,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"7706:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7692:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7682:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4037,"nodeType":"IfStatement","src":"7678:176:25","trueBody":{"id":4036,"nodeType":"Block","src":"7710:144:25","statements":[{"assignments":[4020],"declarations":[{"constant":false,"id":4020,"mutability":"mutable","name":"fee","nameLocation":"7737:3:25","nodeType":"VariableDeclaration","scope":4036,"src":"7729:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4019,"name":"uint256","nodeType":"ElementaryTypeName","src":"7729:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4027,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4021,"name":"amountReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"7744:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4022,"name":"_BPS_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"7761:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7744:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4024,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7743:27:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4025,"name":"_BPS_BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"7773:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7743:39:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7729:53:25"},{"expression":{"arguments":[{"id":4032,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"7824:8:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4033,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"7834:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4029,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"7808:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4028,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"7801:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7801:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7815:8:25","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"7801:22:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7801:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4035,"nodeType":"ExpressionStatement","src":"7801:37:25"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3849,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"6373:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3850,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"6377:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6390:6:25","memberName":"length","nodeType":"MemberAccess","src":"6377:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6373:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4039,"initializationExpression":{"assignments":[3846],"declarations":[{"constant":false,"id":3846,"mutability":"mutable","name":"i","nameLocation":"6366:1:25","nodeType":"VariableDeclaration","scope":4039,"src":"6358:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3845,"name":"uint256","nodeType":"ElementaryTypeName","src":"6358:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3848,"initialValue":{"hexValue":"30","id":3847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6370:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6358:13:25"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6398:3:25","subExpression":{"id":3853,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"6398:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3855,"nodeType":"ExpressionStatement","src":"6398:3:25"},"nodeType":"ForStatement","src":"6353:1512:25"}]},"documentation":{"id":3712,"nodeType":"StructuredDocumentation","src":"4760:615:25","text":" @dev Executes a series of calls to a BaluniV1Agent contract and handles token returns.\n @param calls An array of IBaluniV1Agent.Call structs representing the calls to be executed.\n @param tokensReturn An array of addresses representing the tokens to be returned.\n @notice This function requires the agentFactory to be set and creates a new agent if necessary.\n @notice If a token is new and a Uniswap pool exists for it, the token is added to the tokens set.\n @notice If no Uniswap pool exists for a token, the token balance is transferred back to the caller."},"functionSelector":"eedc3c50","id":4041,"implemented":true,"kind":"function","modifiers":[{"id":3722,"kind":"modifierInvocation","modifierName":{"id":3721,"name":"nonReentrant","nameLocations":["5474:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"5474:12:25"},"nodeType":"ModifierInvocation","src":"5474:12:25"}],"name":"execute","nameLocation":"5390:7:25","nodeType":"FunctionDefinition","parameters":{"id":3720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3716,"mutability":"mutable","name":"calls","nameLocation":"5427:5:25","nodeType":"VariableDeclaration","scope":4041,"src":"5398:34:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2582_memory_ptr_$dyn_memory_ptr","typeString":"struct IBaluniV1Agent.Call[]"},"typeName":{"baseType":{"id":3714,"nodeType":"UserDefinedTypeName","pathNode":{"id":3713,"name":"IBaluniV1Agent.Call","nameLocations":["5398:14:25","5413:4:25"],"nodeType":"IdentifierPath","referencedDeclaration":2582,"src":"5398:19:25"},"referencedDeclaration":2582,"src":"5398:19:25","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$2582_storage_ptr","typeString":"struct IBaluniV1Agent.Call"}},"id":3715,"nodeType":"ArrayTypeName","src":"5398:21:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$2582_storage_$dyn_storage_ptr","typeString":"struct IBaluniV1Agent.Call[]"}},"visibility":"internal"},{"constant":false,"id":3719,"mutability":"mutable","name":"tokensReturn","nameLocation":"5451:12:25","nodeType":"VariableDeclaration","scope":4041,"src":"5434:29:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3717,"name":"address","nodeType":"ElementaryTypeName","src":"5434:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3718,"nodeType":"ArrayTypeName","src":"5434:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"5397:67:25"},"returnParameters":{"id":3723,"nodeType":"ParameterList","parameters":[],"src":"5487:0:25"},"scope":5318,"src":"5381:2491:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4134,"nodeType":"Block","src":"8448:879:25","statements":[{"assignments":[4048],"declarations":[{"constant":false,"id":4048,"mutability":"mutable","name":"WNATIVE","nameLocation":"8467:7:25","nodeType":"VariableDeclaration","scope":4134,"src":"8459:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4047,"name":"address","nodeType":"ElementaryTypeName","src":"8459:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4052,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4049,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"8477:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8486:10:25","memberName":"getWNATIVE","nodeType":"MemberAccess","referencedDeclaration":2868,"src":"8477:19:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8477:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8459:39:25"},{"assignments":[4054],"declarations":[{"constant":false,"id":4054,"mutability":"mutable","name":"baluniSwapper","nameLocation":"8517:13:25","nodeType":"VariableDeclaration","scope":4134,"src":"8509:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4053,"name":"address","nodeType":"ElementaryTypeName","src":"8509:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4058,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4055,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"8533:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8542:16:25","memberName":"getBaluniSwapper","nodeType":"MemberAccess","referencedDeclaration":2823,"src":"8533:25:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8533:27:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8509:51:25"},{"assignments":[4060],"declarations":[{"constant":false,"id":4060,"mutability":"mutable","name":"totalERC20Balance","nameLocation":"8581:17:25","nodeType":"VariableDeclaration","scope":4134,"src":"8573:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4059,"name":"uint256","nodeType":"ElementaryTypeName","src":"8573:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4070,"initialValue":{"arguments":[{"arguments":[{"id":4067,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8633:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}],"id":4066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8625:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4065,"name":"address","nodeType":"ElementaryTypeName","src":"8625:7:25","typeDescriptions":{}}},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8625:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4062,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"8608:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4061,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"8601:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8601:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8615:9:25","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1917,"src":"8601:23:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8601:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8573:66:25"},{"assignments":[4072],"declarations":[{"constant":false,"id":4072,"mutability":"mutable","name":"haveBalance","nameLocation":"8655:11:25","nodeType":"VariableDeclaration","scope":4134,"src":"8650:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4071,"name":"bool","nodeType":"ElementaryTypeName","src":"8650:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4076,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4073,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"8669:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8689:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8669:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"8650:40:25"},{"expression":{"arguments":[{"id":4081,"name":"baluniSwapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"8723:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4082,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"8738:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4078,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"8708:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4077,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"8701:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8701:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8715:7:25","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1947,"src":"8701:21:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8701:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4084,"nodeType":"ExpressionStatement","src":"8701:55:25"},{"condition":{"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8773:12:25","subExpression":{"id":4085,"name":"haveBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"8774:11:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4088,"nodeType":"IfStatement","src":"8769:25:25","trueBody":{"functionReturnParameters":4046,"id":4087,"nodeType":"Return","src":"8787:7:25"}},{"clauses":[{"block":{"id":4102,"nodeType":"Block","src":"8905:33:25","statements":[{"functionReturnParameters":4046,"id":4101,"nodeType":"Return","src":"8920:7:25"}]},"errorName":"","id":4103,"nodeType":"TryCatchClause","src":"8905:33:25"},{"block":{"id":4131,"nodeType":"Block","src":"8945:375:25","statements":[{"assignments":[4105],"declarations":[{"constant":false,"id":4105,"mutability":"mutable","name":"multiHopSwapResult","nameLocation":"8968:18:25","nodeType":"VariableDeclaration","scope":4131,"src":"8960:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4104,"name":"uint256","nodeType":"ElementaryTypeName","src":"8960:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4122,"initialValue":{"arguments":[{"id":4110,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"9052:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4113,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"9084:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9076:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4111,"name":"address","nodeType":"ElementaryTypeName","src":"9076:7:25","typeDescriptions":{}}},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9076:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4115,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"9111:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4116,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"9139:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4119,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9183:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}],"id":4118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9175:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4117,"name":"address","nodeType":"ElementaryTypeName","src":"9175:7:25","typeDescriptions":{}}},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9175:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4107,"name":"baluniSwapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"9006:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4106,"name":"IBaluniV1Swapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"8989:16:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Swapper_$2940_$","typeString":"type(contract IBaluniV1Swapper)"}},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8989:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Swapper_$2940","typeString":"contract IBaluniV1Swapper"}},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9021:12:25","memberName":"multiHopSwap","nodeType":"MemberAccess","referencedDeclaration":2939,"src":"8989:44:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,address,uint256,address) external returns (uint256)"}},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8989:214:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8960:243:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4124,"name":"multiHopSwapResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"9228:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9249:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9228:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d75746920486f702053776170204661696c65642c20547279204275726e2829","id":4127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9252:34:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_3bfb1910864572988af91047c2a74bf6c8bc662651e6ced4da8e59a423cae87d","typeString":"literal_string \"Muti Hop Swap Failed, Try Burn()\""},"value":"Muti Hop Swap Failed, Try Burn()"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3bfb1910864572988af91047c2a74bf6c8bc662651e6ced4da8e59a423cae87d","typeString":"literal_string \"Muti Hop Swap Failed, Try Burn()\""}],"id":4123,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9220:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:67:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4129,"nodeType":"ExpressionStatement","src":"9220:67:25"},{"functionReturnParameters":4046,"id":4130,"nodeType":"Return","src":"9302:7:25"}]},"errorName":"","id":4132,"nodeType":"TryCatchClause","src":"8939:381:25"}],"externalCall":{"arguments":[{"id":4093,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"8853:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4094,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"8860:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4095,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"8871:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4098,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8898:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}],"id":4097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8890:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4096,"name":"address","nodeType":"ElementaryTypeName","src":"8890:7:25","typeDescriptions":{}}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8890:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4090,"name":"baluniSwapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"8827:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4089,"name":"IBaluniV1Swapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"8810:16:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Swapper_$2940_$","typeString":"type(contract IBaluniV1Swapper)"}},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Swapper_$2940","typeString":"contract IBaluniV1Swapper"}},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8842:10:25","memberName":"singleSwap","nodeType":"MemberAccess","referencedDeclaration":2924,"src":"8810:42:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) external returns (uint256)"}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:94:25","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4133,"nodeType":"TryStatement","src":"8806:514:25"}]},"documentation":{"id":4042,"nodeType":"StructuredDocumentation","src":"7880:521:25","text":" @dev Liquidates the specified token by swapping it for USDC.\n @param token The address of the token to be liquidated.\n @notice The contract must have sufficient approval to spend the specified token.\n @notice If a pool exists for the token and USDC on Uniswap, a direct swap is performed.\n @notice If no pool exists, a multi-hop swap is performed through the WNATIVE token.\n @notice If the swap fails, the `burn` function should be called to handle the failed swap."},"functionSelector":"2f865568","id":4135,"implemented":true,"kind":"function","modifiers":[],"name":"liquidate","nameLocation":"8416:9:25","nodeType":"FunctionDefinition","parameters":{"id":4045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4044,"mutability":"mutable","name":"token","nameLocation":"8434:5:25","nodeType":"VariableDeclaration","scope":4135,"src":"8426:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4043,"name":"address","nodeType":"ElementaryTypeName","src":"8426:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8425:15:25"},"returnParameters":{"id":4046,"nodeType":"ParameterList","parameters":[],"src":"8448:0:25"},"scope":5318,"src":"8407:920:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4175,"nodeType":"Block","src":"9620:231:25","statements":[{"assignments":[4142],"declarations":[{"constant":false,"id":4142,"mutability":"mutable","name":"length","nameLocation":"9639:6:25","nodeType":"VariableDeclaration","scope":4175,"src":"9631:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4141,"name":"uint256","nodeType":"ElementaryTypeName","src":"9631:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4146,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4143,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"9648:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":4144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9655:6:25","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":3348,"src":"9648:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3252_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$3252_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"}},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9648:15:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9631:32:25"},{"body":{"id":4173,"nodeType":"Block","src":"9711:133:25","statements":[{"assignments":[4158],"declarations":[{"constant":false,"id":4158,"mutability":"mutable","name":"token","nameLocation":"9734:5:25","nodeType":"VariableDeclaration","scope":4173,"src":"9726:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4157,"name":"address","nodeType":"ElementaryTypeName","src":"9726:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4163,"initialValue":{"arguments":[{"id":4161,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"9752:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4159,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"9742:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":4160,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9749:2:25","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":3375,"src":"9742:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3252_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$3252_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256) view returns (address)"}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9742:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9726:28:25"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4164,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"9773:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4165,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"9782:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9773:18:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4168,"nodeType":"IfStatement","src":"9769:32:25","trueBody":{"id":4167,"nodeType":"Continue","src":"9793:8:25"}},{"expression":{"arguments":[{"id":4170,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"9826:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4169,"name":"liquidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"9816:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9816:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4172,"nodeType":"ExpressionStatement","src":"9816:16:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4151,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"9694:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4152,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"9698:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9694:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4174,"initializationExpression":{"assignments":[4148],"declarations":[{"constant":false,"id":4148,"mutability":"mutable","name":"i","nameLocation":"9687:1:25","nodeType":"VariableDeclaration","scope":4174,"src":"9679:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4147,"name":"uint256","nodeType":"ElementaryTypeName","src":"9679:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4150,"initialValue":{"hexValue":"30","id":4149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9691:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9679:13:25"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9706:3:25","subExpression":{"id":4154,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"9706:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4156,"nodeType":"ExpressionStatement","src":"9706:3:25"},"nodeType":"ForStatement","src":"9674:170:25"}]},"documentation":{"id":4136,"nodeType":"StructuredDocumentation","src":"9335:235:25","text":" @dev Liquidates all tokens in the contract.\n This function iterates through all the tokens in the contract and calls the `liquidate` function for each token.\n Can only be called by the contract owner."},"functionSelector":"3c2066a9","id":4176,"implemented":true,"kind":"function","modifiers":[{"id":4139,"kind":"modifierInvocation","modifierName":{"id":4138,"name":"nonReentrant","nameLocations":["9607:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"9607:12:25"},"nodeType":"ModifierInvocation","src":"9607:12:25"}],"name":"liquidateAll","nameLocation":"9585:12:25","nodeType":"FunctionDefinition","parameters":{"id":4137,"nodeType":"ParameterList","parameters":[],"src":"9597:2:25"},"returnParameters":{"id":4140,"nodeType":"ParameterList","parameters":[],"src":"9620:0:25"},"scope":5318,"src":"9576:275:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4348,"nodeType":"Block","src":"10679:1344:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4185,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"10698:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10711:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10698:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4275726e20616d6f756e74206d7573742062652067726561746572207468616e2030","id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10714:36:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_05dde7ba458fa57c690848c203ec960214f35b18f13e857028bd34ad518b5575","typeString":"literal_string \"Burn amount must be greater than 0\""},"value":"Burn amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05dde7ba458fa57c690848c203ec960214f35b18f13e857028bd34ad518b5575","typeString":"literal_string \"Burn amount must be greater than 0\""}],"id":4184,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10690:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10690:61:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4190,"nodeType":"ExpressionStatement","src":"10690:61:25"},{"assignments":[4192],"declarations":[{"constant":false,"id":4192,"mutability":"mutable","name":"treasury","nameLocation":"10770:8:25","nodeType":"VariableDeclaration","scope":4348,"src":"10762:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4191,"name":"address","nodeType":"ElementaryTypeName","src":"10762:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4196,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4193,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"10781:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10790:11:25","memberName":"getTreasury","nodeType":"MemberAccess","referencedDeclaration":2898,"src":"10781:20:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10781:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10762:41:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4198,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"10822:8:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10842:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10834:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4199,"name":"address","nodeType":"ElementaryTypeName","src":"10834:7:25","typeDescriptions":{}}},"id":4202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10834:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10822:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472656173757279206e6f7420736574","id":4204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10846:18:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_19ae815948d188a4017d21662744b2e39ca52dd9e0c04ca7540cb50ca889bf62","typeString":"literal_string \"Treasury not set\""},"value":"Treasury not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_19ae815948d188a4017d21662744b2e39ca52dd9e0c04ca7540cb50ca889bf62","typeString":"literal_string \"Treasury not set\""}],"id":4197,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10814:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10814:51:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4206,"nodeType":"ExpressionStatement","src":"10814:51:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":4209,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10894:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10898:6:25","memberName":"sender","nodeType":"MemberAccess","src":"10894:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4208,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"10884:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10884:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4212,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"10909:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10884:35:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742042414c","id":4214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10921:18:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_3802b739a1b061f89edd5fd7a12d8792298aa749cedf62bac9eac44415882c7f","typeString":"literal_string \"Insufficient BAL\""},"value":"Insufficient BAL"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3802b739a1b061f89edd5fd7a12d8792298aa749cedf62bac9eac44415882c7f","typeString":"literal_string \"Insufficient BAL\""}],"id":4207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10876:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10876:64:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4216,"nodeType":"ExpressionStatement","src":"10876:64:25"},{"assignments":[4218],"declarations":[{"constant":false,"id":4218,"mutability":"mutable","name":"burnAmountAfterFee","nameLocation":"10959:18:25","nodeType":"VariableDeclaration","scope":4348,"src":"10951:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4217,"name":"uint256","nodeType":"ElementaryTypeName","src":"10951:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4222,"initialValue":{"arguments":[{"id":4220,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"11008:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4219,"name":"_calculateNetAmountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"10980:27:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10980:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10951:68:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4224,"name":"burnAmountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"11038:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4225,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"11060:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11038:32:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4665652063616c63756c6174696f6e206572726f72","id":4227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11072:23:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_2d5dedc64e58ec2dfd9d57a4a8363c0fd7692430e9d02e08dba505855fefef17","typeString":"literal_string \"Fee calculation error\""},"value":"Fee calculation error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2d5dedc64e58ec2dfd9d57a4a8363c0fd7692430e9d02e08dba505855fefef17","typeString":"literal_string \"Fee calculation error\""}],"id":4223,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11030:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11030:66:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4229,"nodeType":"ExpressionStatement","src":"11030:66:25"},{"expression":{"arguments":[{"id":4231,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"11116:8:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4232,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"11126:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4233,"name":"burnAmountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"11139:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11126:31:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4230,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"11107:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11107:51:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4236,"nodeType":"ExpressionStatement","src":"11107:51:25"},{"body":{"id":4334,"nodeType":"Block","src":"11213:703:25","statements":[{"assignments":[4249],"declarations":[{"constant":false,"id":4249,"mutability":"mutable","name":"token","nameLocation":"11236:5:25","nodeType":"VariableDeclaration","scope":4334,"src":"11228:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4248,"name":"address","nodeType":"ElementaryTypeName","src":"11228:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4254,"initialValue":{"arguments":[{"id":4252,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4238,"src":"11254:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4250,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"11244:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":4251,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11251:2:25","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":3375,"src":"11244:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3252_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$3252_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256) view returns (address)"}},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11244:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11228:28:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4256,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"11279:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11296:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11288:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4257,"name":"address","nodeType":"ElementaryTypeName","src":"11288:7:25","typeDescriptions":{}}},"id":4260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11288:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11279:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e2061646472657373","id":4262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11300:23:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743","typeString":"literal_string \"Invalid token address\""},"value":"Invalid token address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743","typeString":"literal_string \"Invalid token address\""}],"id":4255,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11271:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11271:53:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4264,"nodeType":"ExpressionStatement","src":"11271:53:25"},{"assignments":[4266],"declarations":[{"constant":false,"id":4266,"mutability":"mutable","name":"totalBaluni","nameLocation":"11347:11:25","nodeType":"VariableDeclaration","scope":4334,"src":"11339:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4265,"name":"uint256","nodeType":"ElementaryTypeName","src":"11339:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4269,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4267,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"11361:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11361:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11339:35:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4271,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"11397:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11397:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c20737570706c792069732030","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11414:19:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_e16f85873456a830f1ff99f4c2c493d8a3c64696cfa808146bb8fc6bce2e7570","typeString":"literal_string \"Total supply is 0\""},"value":"Total supply is 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e16f85873456a830f1ff99f4c2c493d8a3c64696cfa808146bb8fc6bce2e7570","typeString":"literal_string \"Total supply is 0\""}],"id":4270,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11389:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11389:45:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4276,"nodeType":"ExpressionStatement","src":"11389:45:25"},{"assignments":[4278],"declarations":[{"constant":false,"id":4278,"mutability":"mutable","name":"totalERC20Balance","nameLocation":"11457:17:25","nodeType":"VariableDeclaration","scope":4334,"src":"11449:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4277,"name":"uint256","nodeType":"ElementaryTypeName","src":"11449:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4288,"initialValue":{"arguments":[{"arguments":[{"id":4285,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11509:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}],"id":4284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11501:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4283,"name":"address","nodeType":"ElementaryTypeName","src":"11501:7:25","typeDescriptions":{}}},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11501:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4280,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"11484:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4279,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"11477:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11477:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11491:9:25","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1917,"src":"11477:23:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11477:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11449:66:25"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4289,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"11534:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11555:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11534:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4292,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"11560:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":4295,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11577:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}],"id":4294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11569:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4293,"name":"address","nodeType":"ElementaryTypeName","src":"11569:7:25","typeDescriptions":{}}},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11569:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11560:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11534:48:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4300,"nodeType":"IfStatement","src":"11530:62:25","trueBody":{"id":4299,"nodeType":"Continue","src":"11584:8:25"}},{"assignments":[4302],"declarations":[{"constant":false,"id":4302,"mutability":"mutable","name":"decimals","nameLocation":"11615:8:25","nodeType":"VariableDeclaration","scope":4334,"src":"11607:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4301,"name":"uint256","nodeType":"ElementaryTypeName","src":"11607:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4308,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4304,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"11641:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4303,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"11626:14:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1986_$","typeString":"type(contract IERC20Metadata)"}},"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11626:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1986","typeString":"contract IERC20Metadata"}},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11648:8:25","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1985,"src":"11626:30:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11626:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"11607:51:25"},{"assignments":[4310],"declarations":[{"constant":false,"id":4310,"mutability":"mutable","name":"share","nameLocation":"11681:5:25","nodeType":"VariableDeclaration","scope":4334,"src":"11673:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4309,"name":"uint256","nodeType":"ElementaryTypeName","src":"11673:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4317,"initialValue":{"arguments":[{"id":4312,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"11710:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4313,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"11723:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4314,"name":"burnAmountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"11742:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4315,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"11762:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4311,"name":"_calculateERC20Share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"11689:20:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256) pure returns (uint256)"}},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11689:82:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11673:98:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4319,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"11794:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4320,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"11803:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11794:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53686172652063616c63756c6174696f6e206572726f72","id":4322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11822:25:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_87d7498470f76c7b536e2b3ec9816474a9844e531fdac32c215159c083e5c40c","typeString":"literal_string \"Share calculation error\""},"value":"Share calculation error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87d7498470f76c7b536e2b3ec9816474a9844e531fdac32c215159c083e5c40c","typeString":"literal_string \"Share calculation error\""}],"id":4318,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11786:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11786:62:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4324,"nodeType":"ExpressionStatement","src":"11786:62:25"},{"expression":{"arguments":[{"expression":{"id":4329,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11886:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11890:6:25","memberName":"sender","nodeType":"MemberAccess","src":"11886:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4331,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"11898:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4326,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"11870:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4325,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"11863:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11863:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11877:8:25","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"11863:22:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11863:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4333,"nodeType":"ExpressionStatement","src":"11863:41:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4240,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4238,"src":"11187:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4241,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"11191:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":4242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11198:6:25","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":3348,"src":"11191:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3252_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$3252_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11191:15:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11187:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4335,"initializationExpression":{"assignments":[4238],"declarations":[{"constant":false,"id":4238,"mutability":"mutable","name":"i","nameLocation":"11184:1:25","nodeType":"VariableDeclaration","scope":4335,"src":"11176:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4237,"name":"uint256","nodeType":"ElementaryTypeName","src":"11176:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4239,"nodeType":"VariableDeclarationStatement","src":"11176:9:25"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11208:3:25","subExpression":{"id":4245,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4238,"src":"11208:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4247,"nodeType":"ExpressionStatement","src":"11208:3:25"},"nodeType":"ForStatement","src":"11171:745:25"},{"expression":{"arguments":[{"expression":{"id":4337,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11932:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11936:6:25","memberName":"sender","nodeType":"MemberAccess","src":"11932:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4339,"name":"burnAmountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"11944:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4336,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"11926:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11926:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4341,"nodeType":"ExpressionStatement","src":"11926:37:25"},{"eventCall":{"arguments":[{"expression":{"id":4343,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11984:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11988:6:25","memberName":"sender","nodeType":"MemberAccess","src":"11984:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4345,"name":"burnAmountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"11996:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4342,"name":"Burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"11979:4:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11979:36:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4347,"nodeType":"EmitStatement","src":"11974:41:25"}]},"documentation":{"id":4177,"nodeType":"StructuredDocumentation","src":"9859:753:25","text":" @dev Burns a specified amount of BALUNI tokens from the caller's balance.\n @param burnAmount The amount of BALUNI tokens to burn.\n @notice This function requires the caller to have a balance of at least `burnAmount` BAL tokens.\n @notice The function also checks the USDC balance before burning the tokens.\n @notice After burning the tokens, the function transfers a proportional share of each ERC20 token held by the contract to the caller.\n @notice The share is calculated based on the total supply of BAL tokens, the balance of each ERC20 token, and the decimals of each token.\n @notice Finally, the function emits a `Burn` event with the caller's address and the amount of tokens burned."},"functionSelector":"1a168da2","id":4349,"implemented":true,"kind":"function","modifiers":[{"id":4182,"kind":"modifierInvocation","modifierName":{"id":4181,"name":"nonReentrant","nameLocations":["10666:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"10666:12:25"},"nodeType":"ModifierInvocation","src":"10666:12:25"}],"name":"burnERC20","nameLocation":"10627:9:25","nodeType":"FunctionDefinition","parameters":{"id":4180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4179,"mutability":"mutable","name":"burnAmount","nameLocation":"10645:10:25","nodeType":"VariableDeclaration","scope":4349,"src":"10637:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4178,"name":"uint256","nodeType":"ElementaryTypeName","src":"10637:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10636:20:25"},"returnParameters":{"id":4183,"nodeType":"ParameterList","parameters":[],"src":"10679:0:25"},"scope":5318,"src":"10618:1405:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4644,"nodeType":"Block","src":"12264:2752:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4358,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"12283:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12296:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12283:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4275726e20616d6f756e74206d7573742062652067726561746572207468616e2030","id":4361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12299:36:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_05dde7ba458fa57c690848c203ec960214f35b18f13e857028bd34ad518b5575","typeString":"literal_string \"Burn amount must be greater than 0\""},"value":"Burn amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05dde7ba458fa57c690848c203ec960214f35b18f13e857028bd34ad518b5575","typeString":"literal_string \"Burn amount must be greater than 0\""}],"id":4357,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12275:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12275:61:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4363,"nodeType":"ExpressionStatement","src":"12275:61:25"},{"assignments":[4365],"declarations":[{"constant":false,"id":4365,"mutability":"mutable","name":"uniswapFactory","nameLocation":"12355:14:25","nodeType":"VariableDeclaration","scope":4644,"src":"12347:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4364,"name":"address","nodeType":"ElementaryTypeName","src":"12347:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4369,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4366,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"12372:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12381:17:25","memberName":"getUniswapFactory","nodeType":"MemberAccess","referencedDeclaration":2813,"src":"12372:26:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12372:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12347:53:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4371,"name":"uniswapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"12419:14:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12445:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12437:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4372,"name":"address","nodeType":"ElementaryTypeName","src":"12437:7:25","typeDescriptions":{}}},"id":4375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12437:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12419:28:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e6973776170466163746f7279206e6f7420736574","id":4377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12449:24:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_40edaaaeefde7a606ab22e3c37f33984fb3b1e0058b05ccc31b572de63cd1497","typeString":"literal_string \"UniswapFactory not set\""},"value":"UniswapFactory not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_40edaaaeefde7a606ab22e3c37f33984fb3b1e0058b05ccc31b572de63cd1497","typeString":"literal_string \"UniswapFactory not set\""}],"id":4370,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12411:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12411:63:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4379,"nodeType":"ExpressionStatement","src":"12411:63:25"},{"assignments":[4381],"declarations":[{"constant":false,"id":4381,"mutability":"mutable","name":"treasury","nameLocation":"12493:8:25","nodeType":"VariableDeclaration","scope":4644,"src":"12485:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4380,"name":"address","nodeType":"ElementaryTypeName","src":"12485:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4385,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4382,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"12504:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12513:11:25","memberName":"getTreasury","nodeType":"MemberAccess","referencedDeclaration":2898,"src":"12504:20:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12504:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12485:41:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4387,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"12545:8:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12565:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12557:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4388,"name":"address","nodeType":"ElementaryTypeName","src":"12557:7:25","typeDescriptions":{}}},"id":4391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12557:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12545:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472656173757279206e6f7420736574","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12569:18:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_19ae815948d188a4017d21662744b2e39ca52dd9e0c04ca7540cb50ca889bf62","typeString":"literal_string \"Treasury not set\""},"value":"Treasury not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_19ae815948d188a4017d21662744b2e39ca52dd9e0c04ca7540cb50ca889bf62","typeString":"literal_string \"Treasury not set\""}],"id":4386,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12537:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12537:51:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4395,"nodeType":"ExpressionStatement","src":"12537:51:25"},{"assignments":[4397],"declarations":[{"constant":false,"id":4397,"mutability":"mutable","name":"WNATIVE","nameLocation":"12607:7:25","nodeType":"VariableDeclaration","scope":4644,"src":"12599:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4396,"name":"address","nodeType":"ElementaryTypeName","src":"12599:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4401,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4398,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"12617:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12626:10:25","memberName":"getWNATIVE","nodeType":"MemberAccess","referencedDeclaration":2868,"src":"12617:19:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12617:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12599:39:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4403,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"12657:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12676:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12668:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4404,"name":"address","nodeType":"ElementaryTypeName","src":"12668:7:25","typeDescriptions":{}}},"id":4407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12668:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12657:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"574e4154495645206e6f7420736574","id":4409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12680:17:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_277b788f6bc7cefc93f8369ac2f11d44c3d87b9ef59c2dd3a42e3f629340b86f","typeString":"literal_string \"WNATIVE not set\""},"value":"WNATIVE not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277b788f6bc7cefc93f8369ac2f11d44c3d87b9ef59c2dd3a42e3f629340b86f","typeString":"literal_string \"WNATIVE not set\""}],"id":4402,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12649:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12649:49:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4411,"nodeType":"ExpressionStatement","src":"12649:49:25"},{"assignments":[4413],"declarations":[{"constant":false,"id":4413,"mutability":"mutable","name":"burnAmountAfterFee","nameLocation":"12719:18:25","nodeType":"VariableDeclaration","scope":4644,"src":"12711:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4412,"name":"uint256","nodeType":"ElementaryTypeName","src":"12711:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4417,"initialValue":{"arguments":[{"id":4415,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"12768:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4414,"name":"_calculateNetAmountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"12740:27:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12740:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12711:68:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4419,"name":"burnAmountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"12798:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4420,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"12820:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12798:32:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4665652063616c63756c6174696f6e206572726f72","id":4422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12832:23:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_2d5dedc64e58ec2dfd9d57a4a8363c0fd7692430e9d02e08dba505855fefef17","typeString":"literal_string \"Fee calculation error\""},"value":"Fee calculation error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2d5dedc64e58ec2dfd9d57a4a8363c0fd7692430e9d02e08dba505855fefef17","typeString":"literal_string \"Fee calculation error\""}],"id":4418,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12790:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12790:66:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4424,"nodeType":"ExpressionStatement","src":"12790:66:25"},{"assignments":[4426],"declarations":[{"constant":false,"id":4426,"mutability":"mutable","name":"burnAmountToSend","nameLocation":"12874:16:25","nodeType":"VariableDeclaration","scope":4644,"src":"12869:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4425,"name":"uint","nodeType":"ElementaryTypeName","src":"12869:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4430,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4427,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"12893:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4428,"name":"burnAmountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"12906:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12893:31:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12869:55:25"},{"expression":{"arguments":[{"id":4432,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"12946:8:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4433,"name":"burnAmountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"12956:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4431,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"12937:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12937:36:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4435,"nodeType":"ExpressionStatement","src":"12937:36:25"},{"body":{"id":4630,"nodeType":"Block","src":"13028:1879:25","statements":[{"assignments":[4448],"declarations":[{"constant":false,"id":4448,"mutability":"mutable","name":"token","nameLocation":"13051:5:25","nodeType":"VariableDeclaration","scope":4630,"src":"13043:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4447,"name":"address","nodeType":"ElementaryTypeName","src":"13043:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4453,"initialValue":{"arguments":[{"id":4451,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"13069:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4449,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"13059:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":4450,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13066:2:25","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":3375,"src":"13059:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3252_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$3252_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256) view returns (address)"}},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13059:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13043:28:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4455,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"13094:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13111:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13103:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4456,"name":"address","nodeType":"ElementaryTypeName","src":"13103:7:25","typeDescriptions":{}}},"id":4459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13103:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13094:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e2061646472657373","id":4461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13115:23:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743","typeString":"literal_string \"Invalid token address\""},"value":"Invalid token address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743","typeString":"literal_string \"Invalid token address\""}],"id":4454,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13086:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13086:53:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4463,"nodeType":"ExpressionStatement","src":"13086:53:25"},{"assignments":[4465],"declarations":[{"constant":false,"id":4465,"mutability":"mutable","name":"totalBaluni","nameLocation":"13164:11:25","nodeType":"VariableDeclaration","scope":4630,"src":"13156:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4464,"name":"uint256","nodeType":"ElementaryTypeName","src":"13156:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4468,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4466,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"13178:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13178:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13156:35:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4470,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"13214:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13228:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13214:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c20737570706c792069732030","id":4473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13231:19:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_e16f85873456a830f1ff99f4c2c493d8a3c64696cfa808146bb8fc6bce2e7570","typeString":"literal_string \"Total supply is 0\""},"value":"Total supply is 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e16f85873456a830f1ff99f4c2c493d8a3c64696cfa808146bb8fc6bce2e7570","typeString":"literal_string \"Total supply is 0\""}],"id":4469,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13206:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13206:45:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4475,"nodeType":"ExpressionStatement","src":"13206:45:25"},{"assignments":[4477],"declarations":[{"constant":false,"id":4477,"mutability":"mutable","name":"totalERC20Balance","nameLocation":"13276:17:25","nodeType":"VariableDeclaration","scope":4630,"src":"13268:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4476,"name":"uint256","nodeType":"ElementaryTypeName","src":"13268:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4487,"initialValue":{"arguments":[{"arguments":[{"id":4484,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13328:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}],"id":4483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13320:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4482,"name":"address","nodeType":"ElementaryTypeName","src":"13320:7:25","typeDescriptions":{}}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13320:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4479,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"13303:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4478,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"13296:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13310:9:25","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1917,"src":"13296:23:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13268:66:25"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4488,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4477,"src":"13355:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13376:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13355:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4491,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"13381:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":4494,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13398:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}],"id":4493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13390:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4492,"name":"address","nodeType":"ElementaryTypeName","src":"13390:7:25","typeDescriptions":{}}},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13390:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13381:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13355:48:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4499,"nodeType":"IfStatement","src":"13351:62:25","trueBody":{"id":4498,"nodeType":"Continue","src":"13405:8:25"}},{"assignments":[4501],"declarations":[{"constant":false,"id":4501,"mutability":"mutable","name":"decimals","nameLocation":"13438:8:25","nodeType":"VariableDeclaration","scope":4630,"src":"13430:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4500,"name":"uint256","nodeType":"ElementaryTypeName","src":"13430:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4507,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4503,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"13464:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4502,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"13449:14:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1986_$","typeString":"type(contract IERC20Metadata)"}},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13449:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1986","typeString":"contract IERC20Metadata"}},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13471:8:25","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1985,"src":"13449:30:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13449:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13430:51:25"},{"assignments":[4509],"declarations":[{"constant":false,"id":4509,"mutability":"mutable","name":"burnAmountToken","nameLocation":"13506:15:25","nodeType":"VariableDeclaration","scope":4630,"src":"13498:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4508,"name":"uint256","nodeType":"ElementaryTypeName","src":"13498:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4516,"initialValue":{"arguments":[{"id":4511,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"13563:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4512,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4477,"src":"13593:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4513,"name":"burnAmountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"13629:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4514,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"13666:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4510,"name":"_calculateERC20Share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"13524:20:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256) pure returns (uint256)"}},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13524:165:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13498:191:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4518,"name":"burnAmountToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4509,"src":"13714:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4519,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4477,"src":"13733:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13714:36:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53686172652063616c63756c6174696f6e206572726f72","id":4521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13752:25:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_87d7498470f76c7b536e2b3ec9816474a9844e531fdac32c215159c083e5c40c","typeString":"literal_string \"Share calculation error\""},"value":"Share calculation error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87d7498470f76c7b536e2b3ec9816474a9844e531fdac32c215159c083e5c40c","typeString":"literal_string \"Share calculation error\""}],"id":4517,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13706:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13706:72:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4523,"nodeType":"ExpressionStatement","src":"13706:72:25"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4524,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"13799:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4525,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"13808:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13799:18:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4538,"nodeType":"IfStatement","src":"13795:141:25","trueBody":{"id":4537,"nodeType":"Block","src":"13819:117:25","statements":[{"expression":{"arguments":[{"expression":{"id":4531,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13865:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13869:6:25","memberName":"sender","nodeType":"MemberAccess","src":"13865:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4533,"name":"burnAmountToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4509,"src":"13877:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4528,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"13845:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4527,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"13838:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13838:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13856:8:25","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"13838:26:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13838:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4535,"nodeType":"ExpressionStatement","src":"13838:55:25"},{"id":4536,"nodeType":"Continue","src":"13912:8:25"}]}},{"assignments":[4540],"declarations":[{"constant":false,"id":4540,"mutability":"mutable","name":"baluniSwapper","nameLocation":"13960:13:25","nodeType":"VariableDeclaration","scope":4630,"src":"13952:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4539,"name":"address","nodeType":"ElementaryTypeName","src":"13952:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4544,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4541,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"13976:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13985:16:25","memberName":"getBaluniSwapper","nodeType":"MemberAccess","referencedDeclaration":2823,"src":"13976:25:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13976:27:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13952:51:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4546,"name":"baluniSwapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"14026:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14051:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14043:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4547,"name":"address","nodeType":"ElementaryTypeName","src":"14043:7:25","typeDescriptions":{}}},"id":4550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14043:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14026:27:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42616c756e6953776170706572206e6f7420736574","id":4552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14055:23:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8a54059e31ba8035a6fc0cc512134c3fd2ca3508fc8500195d25c2966df732b","typeString":"literal_string \"BaluniSwapper not set\""},"value":"BaluniSwapper not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8a54059e31ba8035a6fc0cc512134c3fd2ca3508fc8500195d25c2966df732b","typeString":"literal_string \"BaluniSwapper not set\""}],"id":4545,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14018:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14018:61:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4554,"nodeType":"ExpressionStatement","src":"14018:61:25"},{"expression":{"arguments":[{"id":4559,"name":"baluniSwapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"14118:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4560,"name":"burnAmountToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4509,"src":"14133:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4556,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"14103:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4555,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"14096:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14096:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14110:7:25","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1947,"src":"14096:21:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14096:53:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4562,"nodeType":"ExpressionStatement","src":"14096:53:25"},{"clauses":[{"block":{"id":4592,"nodeType":"Block","src":"14320:140:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4577,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"14347:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14359:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14347:13:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53776170204661696c6564","id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14362:13:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_c26370c748e399efe4c5a302d20f1fe22da5300fc60bdab39924790733506945","typeString":"literal_string \"Swap Failed\""},"value":"Swap Failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c26370c748e399efe4c5a302d20f1fe22da5300fc60bdab39924790733506945","typeString":"literal_string \"Swap Failed\""}],"id":4576,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14339:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14339:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4582,"nodeType":"ExpressionStatement","src":"14339:37:25"},{"expression":{"arguments":[{"expression":{"id":4587,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14422:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14426:6:25","memberName":"sender","nodeType":"MemberAccess","src":"14422:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4589,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"14434:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4584,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"14402:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4583,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"14395:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14395:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14413:8:25","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"14395:26:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14395:49:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4591,"nodeType":"ExpressionStatement","src":"14395:49:25"}]},"errorName":"","id":4593,"nodeType":"TryCatchClause","parameters":{"id":4575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4574,"mutability":"mutable","name":"amountOut","nameLocation":"14295:9:25","nodeType":"VariableDeclaration","scope":4593,"src":"14287:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4573,"name":"uint256","nodeType":"ElementaryTypeName","src":"14287:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14268:51:25"},"src":"14260:200:25"},{"block":{"id":4627,"nodeType":"Block","src":"14467:429:25","statements":[{"assignments":[4595],"declarations":[{"constant":false,"id":4595,"mutability":"mutable","name":"amountOutHop","nameLocation":"14494:12:25","nodeType":"VariableDeclaration","scope":4627,"src":"14486:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4594,"name":"uint256","nodeType":"ElementaryTypeName","src":"14486:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4610,"initialValue":{"arguments":[{"id":4600,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"14576:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4603,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"14612:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14604:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4601,"name":"address","nodeType":"ElementaryTypeName","src":"14604:7:25","typeDescriptions":{}}},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14604:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4605,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"14643:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4606,"name":"burnAmountToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4509,"src":"14675:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4607,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14713:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14717:6:25","memberName":"sender","nodeType":"MemberAccess","src":"14713:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4597,"name":"baluniSwapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"14526:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4596,"name":"IBaluniV1Swapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"14509:16:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Swapper_$2940_$","typeString":"type(contract IBaluniV1Swapper)"}},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14509:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Swapper_$2940","typeString":"contract IBaluniV1Swapper"}},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14541:12:25","memberName":"multiHopSwap","nodeType":"MemberAccess","referencedDeclaration":2939,"src":"14509:44:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,address,uint256,address) external returns (uint256)"}},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14509:233:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14486:256:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4612,"name":"amountOutHop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"14769:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14784:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14769:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d756c7469486f7053776170204661696c6564","id":4615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14787:21:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_69c3c275e229957bd624940053bb5e224e915c9b003c39a1899996718abe87b0","typeString":"literal_string \"MultiHopSwap Failed\""},"value":"MultiHopSwap Failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_69c3c275e229957bd624940053bb5e224e915c9b003c39a1899996718abe87b0","typeString":"literal_string \"MultiHopSwap Failed\""}],"id":4611,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14761:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14761:48:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4617,"nodeType":"ExpressionStatement","src":"14761:48:25"},{"expression":{"arguments":[{"expression":{"id":4622,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14855:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14859:6:25","memberName":"sender","nodeType":"MemberAccess","src":"14855:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4624,"name":"amountOutHop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"14867:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4619,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"14835:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4618,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"14828:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14828:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14846:8:25","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"14828:26:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14828:52:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4626,"nodeType":"ExpressionStatement","src":"14828:52:25"}]},"errorName":"","id":4628,"nodeType":"TryCatchClause","src":"14461:435:25"}],"externalCall":{"arguments":[{"id":4567,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"14213:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4568,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"14220:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4569,"name":"burnAmountToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4509,"src":"14231:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4570,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14248:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14252:6:25","memberName":"sender","nodeType":"MemberAccess","src":"14248:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4564,"name":"baluniSwapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"14187:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4563,"name":"IBaluniV1Swapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"14170:16:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Swapper_$2940_$","typeString":"type(contract IBaluniV1Swapper)"}},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14170:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Swapper_$2940","typeString":"contract IBaluniV1Swapper"}},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14202:10:25","memberName":"singleSwap","nodeType":"MemberAccess","referencedDeclaration":2924,"src":"14170:42:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) external returns (uint256)"}},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14170:89:25","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4629,"nodeType":"TryStatement","src":"14166:730:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4439,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"13002:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4440,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"13006:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":4441,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13013:6:25","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":3348,"src":"13006:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3252_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$3252_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13006:15:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13002:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4631,"initializationExpression":{"assignments":[4437],"declarations":[{"constant":false,"id":4437,"mutability":"mutable","name":"i","nameLocation":"12999:1:25","nodeType":"VariableDeclaration","scope":4631,"src":"12991:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4436,"name":"uint256","nodeType":"ElementaryTypeName","src":"12991:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4438,"nodeType":"VariableDeclarationStatement","src":"12991:9:25"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13023:3:25","subExpression":{"id":4444,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"13023:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4446,"nodeType":"ExpressionStatement","src":"13023:3:25"},"nodeType":"ForStatement","src":"12986:1921:25"},{"expression":{"arguments":[{"expression":{"id":4633,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14925:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14929:6:25","memberName":"sender","nodeType":"MemberAccess","src":"14925:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4635,"name":"burnAmountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"14937:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4632,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"14919:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14919:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4637,"nodeType":"ExpressionStatement","src":"14919:37:25"},{"eventCall":{"arguments":[{"expression":{"id":4639,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14977:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14981:6:25","memberName":"sender","nodeType":"MemberAccess","src":"14977:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4641,"name":"burnAmountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"14989:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4638,"name":"Burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"14972:4:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14972:36:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4643,"nodeType":"EmitStatement","src":"14967:41:25"}]},"documentation":{"id":4350,"nodeType":"StructuredDocumentation","src":"12031:169:25","text":" @dev Burns a specified amount of BAL tokens and performs token swaps on multiple tokens.\n @param burnAmount The amount of BAL tokens to burn."},"functionSelector":"fe0a4dd1","id":4645,"implemented":true,"kind":"function","modifiers":[{"id":4355,"kind":"modifierInvocation","modifierName":{"id":4354,"name":"nonReentrant","nameLocations":["12251:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"12251:12:25"},"nodeType":"ModifierInvocation","src":"12251:12:25"}],"name":"burnUSDC","nameLocation":"12215:8:25","nodeType":"FunctionDefinition","parameters":{"id":4353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4352,"mutability":"mutable","name":"burnAmount","nameLocation":"12232:10:25","nodeType":"VariableDeclaration","scope":4645,"src":"12224:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4351,"name":"uint256","nodeType":"ElementaryTypeName","src":"12224:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12223:20:25"},"returnParameters":{"id":4356,"nodeType":"ParameterList","parameters":[],"src":"12264:0:25"},"scope":5318,"src":"12206:2810:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4666,"nodeType":"Block","src":"15255:150:25","statements":[{"assignments":[4654],"declarations":[{"constant":false,"id":4654,"mutability":"mutable","name":"agentFactory","nameLocation":"15274:12:25","nodeType":"VariableDeclaration","scope":4666,"src":"15266:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4653,"name":"address","nodeType":"ElementaryTypeName","src":"15266:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4658,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4655,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"15289:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15298:21:25","memberName":"getBaluniAgentFactory","nodeType":"MemberAccess","referencedDeclaration":2833,"src":"15289:30:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15289:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15266:55:25"},{"expression":{"arguments":[{"id":4663,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"15391:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4660,"name":"agentFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"15361:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4659,"name":"IBaluniV1AgentFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"15339:21:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1AgentFactory_$2615_$","typeString":"type(contract IBaluniV1AgentFactory)"}},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15339:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1AgentFactory_$2615","typeString":"contract IBaluniV1AgentFactory"}},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15375:15:25","memberName":"getAgentAddress","nodeType":"MemberAccess","referencedDeclaration":2602,"src":"15339:51:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_address_$","typeString":"function (address) view external returns (address)"}},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15339:58:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4652,"id":4665,"nodeType":"Return","src":"15332:65:25"}]},"documentation":{"id":4646,"nodeType":"StructuredDocumentation","src":"15024:153:25","text":" @dev Retrieves the agent address associated with a user.\n @param _user The user's address.\n @return The agent address."},"functionSelector":"27d54a92","id":4667,"implemented":true,"kind":"function","modifiers":[],"name":"getAgentAddress","nameLocation":"15192:15:25","nodeType":"FunctionDefinition","parameters":{"id":4649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4648,"mutability":"mutable","name":"_user","nameLocation":"15216:5:25","nodeType":"VariableDeclaration","scope":4667,"src":"15208:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4647,"name":"address","nodeType":"ElementaryTypeName","src":"15208:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15207:15:25"},"returnParameters":{"id":4652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4667,"src":"15246:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4650,"name":"address","nodeType":"ElementaryTypeName","src":"15246:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15245:9:25"},"scope":5318,"src":"15183:222:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4817,"nodeType":"Block","src":"15643:1096:25","statements":[{"assignments":[4676],"declarations":[{"constant":false,"id":4676,"mutability":"mutable","name":"treasury","nameLocation":"15662:8:25","nodeType":"VariableDeclaration","scope":4817,"src":"15654:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4675,"name":"address","nodeType":"ElementaryTypeName","src":"15654:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4680,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4677,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"15673:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15682:11:25","memberName":"getTreasury","nodeType":"MemberAccess","referencedDeclaration":2898,"src":"15673:20:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15673:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15654:41:25"},{"assignments":[4682],"declarations":[{"constant":false,"id":4682,"mutability":"mutable","name":"USDC","nameLocation":"15714:4:25","nodeType":"VariableDeclaration","scope":4817,"src":"15706:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4681,"name":"address","nodeType":"ElementaryTypeName","src":"15706:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4686,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4683,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"15721:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15730:7:25","memberName":"getUSDC","nodeType":"MemberAccess","referencedDeclaration":2873,"src":"15721:16:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15721:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15706:33:25"},{"assignments":[4688],"declarations":[{"constant":false,"id":4688,"mutability":"mutable","name":"_BPS_FEE","nameLocation":"15758:8:25","nodeType":"VariableDeclaration","scope":4817,"src":"15750:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4687,"name":"uint256","nodeType":"ElementaryTypeName","src":"15750:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4692,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4689,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"15769:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15778:10:25","memberName":"getBPS_FEE","nodeType":"MemberAccess","referencedDeclaration":2883,"src":"15769:19:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15769:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15750:40:25"},{"assignments":[4694],"declarations":[{"constant":false,"id":4694,"mutability":"mutable","name":"_BPS_BASE","nameLocation":"15809:9:25","nodeType":"VariableDeclaration","scope":4817,"src":"15801:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4693,"name":"uint256","nodeType":"ElementaryTypeName","src":"15801:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4698,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4695,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"15821:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15830:11:25","memberName":"getBPS_BASE","nodeType":"MemberAccess","referencedDeclaration":2893,"src":"15821:20:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15821:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15801:42:25"},{"assignments":[4700],"declarations":[{"constant":false,"id":4700,"mutability":"mutable","name":"totalUSDValuation","nameLocation":"15862:17:25","nodeType":"VariableDeclaration","scope":4817,"src":"15854:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4699,"name":"uint256","nodeType":"ElementaryTypeName","src":"15854:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4703,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4701,"name":"_totalValuationScaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"15882:21:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15854:51:25"},{"assignments":[4705],"declarations":[{"constant":false,"id":4705,"mutability":"mutable","name":"totalBalSupply","nameLocation":"15924:14:25","nodeType":"VariableDeclaration","scope":4817,"src":"15916:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4704,"name":"uint256","nodeType":"ElementaryTypeName","src":"15916:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4708,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4706,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"15941:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15941:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15916:38:25"},{"assignments":[4710],"declarations":[{"constant":false,"id":4710,"mutability":"mutable","name":"usdcRequired","nameLocation":"15973:12:25","nodeType":"VariableDeclaration","scope":4817,"src":"15965:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4709,"name":"uint256","nodeType":"ElementaryTypeName","src":"15965:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4717,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4711,"name":"balAmountToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"15989:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4712,"name":"totalUSDValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"16007:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15989:35:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4714,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15988:37:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4715,"name":"totalBalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"16028:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15988:54:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15965:77:25"},{"expression":{"arguments":[{"expression":{"id":4722,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16079:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16083:6:25","memberName":"sender","nodeType":"MemberAccess","src":"16079:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4726,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16099:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}],"id":4725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16091:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4724,"name":"address","nodeType":"ElementaryTypeName","src":"16091:7:25","typeDescriptions":{}}},"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16091:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4728,"name":"usdcRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"16106:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653132","id":4729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16121:4:25","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"16106:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4719,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"16060:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4718,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"16053:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16053:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16066:12:25","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1959,"src":"16053:25:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16053:73:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4732,"nodeType":"ExpressionStatement","src":"16053:73:25"},{"assignments":[4734],"declarations":[{"constant":false,"id":4734,"mutability":"mutable","name":"balance","nameLocation":"16145:7:25","nodeType":"VariableDeclaration","scope":4817,"src":"16137:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4733,"name":"uint256","nodeType":"ElementaryTypeName","src":"16137:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4742,"initialValue":{"arguments":[{"expression":{"id":4739,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16178:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16182:6:25","memberName":"sender","nodeType":"MemberAccess","src":"16178:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4736,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"16162:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4735,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"16155:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16155:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16168:9:25","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1917,"src":"16155:22:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16155:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16137:52:25"},{"assignments":[4744],"declarations":[{"constant":false,"id":4744,"mutability":"mutable","name":"allowed","nameLocation":"16208:7:25","nodeType":"VariableDeclaration","scope":4817,"src":"16200:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4743,"name":"uint256","nodeType":"ElementaryTypeName","src":"16200:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4756,"initialValue":{"arguments":[{"expression":{"id":4749,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16241:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16245:6:25","memberName":"sender","nodeType":"MemberAccess","src":"16241:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4753,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16261:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}],"id":4752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16253:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4751,"name":"address","nodeType":"ElementaryTypeName","src":"16253:7:25","typeDescriptions":{}}},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16253:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4746,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"16225:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4745,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"16218:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16218:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16231:9:25","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1937,"src":"16218:22:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16218:49:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16200:67:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4758,"name":"totalBalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"16288:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16305:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16288:18:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c2042414c554e4920737570706c792063616e6e6f74206265207a65726f","id":4761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16308:36:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ddcc9d8f2a6704234c103a6ef7b2e41a8659f7661115b0460a24c8abe542fd0","typeString":"literal_string \"Total BALUNI supply cannot be zero\""},"value":"Total BALUNI supply cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ddcc9d8f2a6704234c103a6ef7b2e41a8659f7661115b0460a24c8abe542fd0","typeString":"literal_string \"Total BALUNI supply cannot be zero\""}],"id":4757,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16280:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16280:65:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4763,"nodeType":"ExpressionStatement","src":"16280:65:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4765,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"16364:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4766,"name":"usdcRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"16375:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653132","id":4767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16390:4:25","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"16375:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16364:30:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"555344432062616c616e636520697320696e73756666696369656e74","id":4770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16396:30:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_bad2ba4e17745a4d4fd221dac6ffa18dd2cdb7d74e252bb930552ebc273a413c","typeString":"literal_string \"USDC balance is insufficient\""},"value":"USDC balance is insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bad2ba4e17745a4d4fd221dac6ffa18dd2cdb7d74e252bb930552ebc273a413c","typeString":"literal_string \"USDC balance is insufficient\""}],"id":4764,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16356:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16356:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4772,"nodeType":"ExpressionStatement","src":"16356:71:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4774,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"16446:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4775,"name":"usdcRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"16457:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653132","id":4776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16472:4:25","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"16457:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16446:30:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b2074686520746f6b656e20616c6c6f77616e6365","id":4779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16478:27:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650","typeString":"literal_string \"Check the token allowance\""},"value":"Check the token allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650","typeString":"literal_string \"Check the token allowance\""}],"id":4773,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16438:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16438:68:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4781,"nodeType":"ExpressionStatement","src":"16438:68:25"},{"expression":{"arguments":[{"expression":{"id":4783,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16525:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16529:6:25","memberName":"sender","nodeType":"MemberAccess","src":"16525:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4785,"name":"balAmountToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"16537:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4782,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"16519:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16519:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4787,"nodeType":"ExpressionStatement","src":"16519:34:25"},{"eventCall":{"arguments":[{"expression":{"id":4789,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16574:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16578:6:25","memberName":"sender","nodeType":"MemberAccess","src":"16574:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4791,"name":"balAmountToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"16586:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4788,"name":"Mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"16569:4:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16569:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4793,"nodeType":"EmitStatement","src":"16564:38:25"},{"assignments":[4795],"declarations":[{"constant":false,"id":4795,"mutability":"mutable","name":"fee","nameLocation":"16623:3:25","nodeType":"VariableDeclaration","scope":4817,"src":"16615:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4794,"name":"uint256","nodeType":"ElementaryTypeName","src":"16615:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4805,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4796,"name":"usdcRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"16631:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653132","id":4797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16646:4:25","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"16631:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4799,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16630:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4800,"name":"_BPS_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"16654:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16630:32:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4802,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16629:34:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4803,"name":"_BPS_BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"16666:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16629:46:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16615:60:25"},{"expression":{"arguments":[{"id":4813,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"16717:8:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4814,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"16727:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":4809,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"16701:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16693:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4807,"name":"address","nodeType":"ElementaryTypeName","src":"16693:7:25","typeDescriptions":{}}},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16693:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4806,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"16686:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16686:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16708:8:25","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"16686:30:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16686:45:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4816,"nodeType":"ExpressionStatement","src":"16686:45:25"}]},"documentation":{"id":4668,"nodeType":"StructuredDocumentation","src":"15413:157:25","text":" @dev Mints a specified amount of BALUNI tokens in exchange for USDC.\n @param balAmountToMint The amount of BALUNI tokens to mint."},"functionSelector":"0cfc7386","id":4818,"implemented":true,"kind":"function","modifiers":[{"id":4673,"kind":"modifierInvocation","modifierName":{"id":4672,"name":"nonReentrant","nameLocations":["15630:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"15630:12:25"},"nodeType":"ModifierInvocation","src":"15630:12:25"}],"name":"mintWithUSDC","nameLocation":"15585:12:25","nodeType":"FunctionDefinition","parameters":{"id":4671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4670,"mutability":"mutable","name":"balAmountToMint","nameLocation":"15606:15:25","nodeType":"VariableDeclaration","scope":4818,"src":"15598:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4669,"name":"uint256","nodeType":"ElementaryTypeName","src":"15598:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15597:25:25"},"returnParameters":{"id":4674,"nodeType":"ParameterList","parameters":[],"src":"15643:0:25"},"scope":5318,"src":"15576:1163:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4872,"nodeType":"Block","src":"17399:279:25","statements":[{"assignments":[4837],"declarations":[{"constant":false,"id":4837,"mutability":"mutable","name":"USDC","nameLocation":"17418:4:25","nodeType":"VariableDeclaration","scope":4872,"src":"17410:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4836,"name":"address","nodeType":"ElementaryTypeName","src":"17410:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4841,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4838,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"17425:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17434:7:25","memberName":"getUSDC","nodeType":"MemberAccess","referencedDeclaration":2873,"src":"17425:16:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17425:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"17410:33:25"},{"assignments":[4843],"declarations":[{"constant":false,"id":4843,"mutability":"mutable","name":"rebalancer","nameLocation":"17462:10:25","nodeType":"VariableDeclaration","scope":4872,"src":"17454:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4842,"name":"address","nodeType":"ElementaryTypeName","src":"17454:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4847,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4844,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"17475:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17484:19:25","memberName":"getBaluniRebalancer","nodeType":"MemberAccess","referencedDeclaration":2853,"src":"17475:28:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17475:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"17454:51:25"},{"assignments":[4852],"declarations":[{"constant":false,"id":4852,"mutability":"mutable","name":"balances","nameLocation":"17533:8:25","nodeType":"VariableDeclaration","scope":4872,"src":"17516:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4850,"name":"uint256","nodeType":"ElementaryTypeName","src":"17516:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4851,"nodeType":"ArrayTypeName","src":"17516:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4858,"initialValue":{"arguments":[{"hexValue":"30","id":4856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17558:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17544:13:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4853,"name":"uint256","nodeType":"ElementaryTypeName","src":"17548:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4854,"nodeType":"ArrayTypeName","src":"17548:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17544:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"17516:44:25"},{"expression":{"arguments":[{"id":4863,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"17613:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4864,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"17623:6:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},{"id":4865,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"17631:7:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},{"id":4866,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"17640:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4867,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"17647:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4868,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"17655:8:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4869,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"17665:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4860,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"17591:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4859,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"17571:19:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$2725_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17571:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$2725","typeString":"contract IBaluniV1Rebalancer"}},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17603:9:25","memberName":"rebalance","nodeType":"MemberAccess","referencedDeclaration":2692,"src":"17571:41:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256[] memory,address[] memory,uint256[] memory,uint256,address,address,address) external"}},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17571:99:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4871,"nodeType":"ExpressionStatement","src":"17571:99:25"}]},"documentation":{"id":4819,"nodeType":"StructuredDocumentation","src":"16747:424:25","text":" @dev Calls the `rebalance` function of the `rebalancer` contract.\n @param assets An array of addresses representing the assets to rebalance.\n @param weights An array of uint256 values representing the weights of the assets.\n @param sender The address of the sender.\n @param receiver The address of the receiver.\n @param limit The maximum number of assets to rebalance."},"functionSelector":"599f69f7","id":4873,"implemented":true,"kind":"function","modifiers":[],"name":"callRebalance","nameLocation":"17186:13:25","nodeType":"FunctionDefinition","parameters":{"id":4834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4822,"mutability":"mutable","name":"assets","nameLocation":"17229:6:25","nodeType":"VariableDeclaration","scope":4873,"src":"17210:25:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4820,"name":"address","nodeType":"ElementaryTypeName","src":"17210:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4821,"nodeType":"ArrayTypeName","src":"17210:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4825,"mutability":"mutable","name":"weights","nameLocation":"17265:7:25","nodeType":"VariableDeclaration","scope":4873,"src":"17246:26:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4823,"name":"uint256","nodeType":"ElementaryTypeName","src":"17246:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4824,"nodeType":"ArrayTypeName","src":"17246:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4827,"mutability":"mutable","name":"sender","nameLocation":"17291:6:25","nodeType":"VariableDeclaration","scope":4873,"src":"17283:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4826,"name":"address","nodeType":"ElementaryTypeName","src":"17283:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4829,"mutability":"mutable","name":"receiver","nameLocation":"17316:8:25","nodeType":"VariableDeclaration","scope":4873,"src":"17308:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4828,"name":"address","nodeType":"ElementaryTypeName","src":"17308:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4831,"mutability":"mutable","name":"limit","nameLocation":"17343:5:25","nodeType":"VariableDeclaration","scope":4873,"src":"17335:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4830,"name":"uint256","nodeType":"ElementaryTypeName","src":"17335:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4873,"src":"17359:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4832,"name":"address","nodeType":"ElementaryTypeName","src":"17359:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17199:190:25"},"returnParameters":{"id":4835,"nodeType":"ParameterList","parameters":[],"src":"17399:0:25"},"scope":5318,"src":"17177:501:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4904,"nodeType":"Block","src":"18035:244:25","statements":[{"assignments":[4882],"declarations":[{"constant":false,"id":4882,"mutability":"mutable","name":"totalUSDValuation","nameLocation":"18054:17:25","nodeType":"VariableDeclaration","scope":4904,"src":"18046:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4881,"name":"uint256","nodeType":"ElementaryTypeName","src":"18046:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4885,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4883,"name":"_totalValuationScaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"18074:21:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18074:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18046:51:25"},{"assignments":[4887],"declarations":[{"constant":false,"id":4887,"mutability":"mutable","name":"totalBalSupply","nameLocation":"18116:14:25","nodeType":"VariableDeclaration","scope":4904,"src":"18108:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4886,"name":"uint256","nodeType":"ElementaryTypeName","src":"18108:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4890,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4888,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"18133:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18133:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18108:38:25"},{"assignments":[4892],"declarations":[{"constant":false,"id":4892,"mutability":"mutable","name":"usdcRequired","nameLocation":"18165:12:25","nodeType":"VariableDeclaration","scope":4904,"src":"18157:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4891,"name":"uint256","nodeType":"ElementaryTypeName","src":"18157:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4899,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4893,"name":"balAmountToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"18181:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4894,"name":"totalUSDValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"18199:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18181:35:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4896,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18180:37:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4897,"name":"totalBalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"18220:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18180:54:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18157:77:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4900,"name":"usdcRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4892,"src":"18252:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653132","id":4901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18267:4:25","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"18252:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4880,"id":4903,"nodeType":"Return","src":"18245:26:25"}]},"documentation":{"id":4874,"nodeType":"StructuredDocumentation","src":"17686:260:25","text":" @dev Calculates the amount of USDC required to mint a given amount of BAL tokens.\n @param balAmountToMint The amount of BAL tokens to be minted.\n @return The amount of USDC required to mint the specified amount of BAL tokens."},"functionSelector":"aa95d893","id":4905,"implemented":true,"kind":"function","modifiers":[],"name":"requiredUSDCtoMint","nameLocation":"17961:18:25","nodeType":"FunctionDefinition","parameters":{"id":4877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4876,"mutability":"mutable","name":"balAmountToMint","nameLocation":"17988:15:25","nodeType":"VariableDeclaration","scope":4905,"src":"17980:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4875,"name":"uint256","nodeType":"ElementaryTypeName","src":"17980:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17979:25:25"},"returnParameters":{"id":4880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4905,"src":"18026:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4878,"name":"uint256","nodeType":"ElementaryTypeName","src":"18026:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18025:9:25"},"scope":5318,"src":"17952:327:25","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4926,"nodeType":"Block","src":"18939:107:25","statements":[{"expression":{"arguments":[{"id":4920,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4908,"src":"18978:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4921,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"18991:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4922,"name":"baluniAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"19010:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4923,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"19024:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4919,"name":"_calculateERC20Share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"18957:20:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256) pure returns (uint256)"}},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18957:81:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4918,"id":4925,"nodeType":"Return","src":"18950:88:25"}]},"documentation":{"id":4906,"nodeType":"StructuredDocumentation","src":"18287:449:25","text":" @dev Calculates the token share based on the total Baluni supply, total ERC20 balance, Baluni amount, and token decimals.\n @param totalBaluni The total supply of Baluni tokens.\n @param totalERC20Balance The total balance of the ERC20 token.\n @param baluniAmount The amount of Baluni tokens.\n @param tokenDecimals The number of decimals for the ERC20 token.\n @return The calculated token share."},"functionSelector":"fe330a51","id":4927,"implemented":true,"kind":"function","modifiers":[],"name":"calculateTokenShare","nameLocation":"18751:19:25","nodeType":"FunctionDefinition","parameters":{"id":4915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4908,"mutability":"mutable","name":"totalBaluni","nameLocation":"18789:11:25","nodeType":"VariableDeclaration","scope":4927,"src":"18781:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4907,"name":"uint256","nodeType":"ElementaryTypeName","src":"18781:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4910,"mutability":"mutable","name":"totalERC20Balance","nameLocation":"18819:17:25","nodeType":"VariableDeclaration","scope":4927,"src":"18811:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4909,"name":"uint256","nodeType":"ElementaryTypeName","src":"18811:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4912,"mutability":"mutable","name":"baluniAmount","nameLocation":"18855:12:25","nodeType":"VariableDeclaration","scope":4927,"src":"18847:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4911,"name":"uint256","nodeType":"ElementaryTypeName","src":"18847:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4914,"mutability":"mutable","name":"tokenDecimals","nameLocation":"18886:13:25","nodeType":"VariableDeclaration","scope":4927,"src":"18878:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4913,"name":"uint256","nodeType":"ElementaryTypeName","src":"18878:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18770:136:25"},"returnParameters":{"id":4918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4927,"src":"18930:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4916,"name":"uint256","nodeType":"ElementaryTypeName","src":"18930:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18929:9:25"},"scope":5318,"src":"18742:304:25","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":4952,"nodeType":"Block","src":"19409:155:25","statements":[{"assignments":[4938],"declarations":[{"constant":false,"id":4938,"mutability":"mutable","name":"baluniOracle","nameLocation":"19428:12:25","nodeType":"VariableDeclaration","scope":4952,"src":"19420:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4937,"name":"address","nodeType":"ElementaryTypeName","src":"19420:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4942,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4939,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"19443:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19452:15:25","memberName":"getBaluniOracle","nodeType":"MemberAccess","referencedDeclaration":2828,"src":"19443:24:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19443:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"19420:49:25"},{"expression":{"arguments":[{"id":4947,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"19531:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4948,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"19538:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4949,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4930,"src":"19549:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4944,"name":"baluniOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"19503:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4943,"name":"IBaluniV1Oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"19487:15:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Oracle_$2640_$","typeString":"type(contract IBaluniV1Oracle)"}},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19487:29:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$2640","typeString":"contract IBaluniV1Oracle"}},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19517:13:25","memberName":"convertScaled","nodeType":"MemberAccess","referencedDeclaration":2639,"src":"19487:43:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19487:69:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4936,"id":4951,"nodeType":"Return","src":"19480:76:25"}]},"documentation":{"id":4928,"nodeType":"StructuredDocumentation","src":"19054:262:25","text":" @dev Calculates the valuation of a given amount of a specific ERC20 token.\n @param amount The amount of the ERC20 token.\n @param token The address of the ERC20 token.\n @return The calculated valuation of the ERC20 token."},"functionSelector":"2bdd955a","id":4953,"implemented":true,"kind":"function","modifiers":[],"name":"tokenValuation","nameLocation":"19331:14:25","nodeType":"FunctionDefinition","parameters":{"id":4933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4930,"mutability":"mutable","name":"amount","nameLocation":"19354:6:25","nodeType":"VariableDeclaration","scope":4953,"src":"19346:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4929,"name":"uint256","nodeType":"ElementaryTypeName","src":"19346:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4932,"mutability":"mutable","name":"token","nameLocation":"19370:5:25","nodeType":"VariableDeclaration","scope":4953,"src":"19362:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4931,"name":"address","nodeType":"ElementaryTypeName","src":"19362:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19345:31:25"},"returnParameters":{"id":4936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4953,"src":"19400:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4934,"name":"uint256","nodeType":"ElementaryTypeName","src":"19400:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19399:9:25"},"scope":5318,"src":"19322:242:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4962,"nodeType":"Block","src":"19775:49:25","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4959,"name":"_totalValuationScaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"19793:21:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19793:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4958,"id":4961,"nodeType":"Return","src":"19786:30:25"}]},"documentation":{"id":4954,"nodeType":"StructuredDocumentation","src":"19572:139:25","text":" @dev Returns the total valuation of the Baluni ecosystem.\n @return The total valuation of the Baluni ecosystem."},"functionSelector":"295b9300","id":4963,"implemented":true,"kind":"function","modifiers":[],"name":"totalValuation","nameLocation":"19726:14:25","nodeType":"FunctionDefinition","parameters":{"id":4955,"nodeType":"ParameterList","parameters":[],"src":"19740:2:25"},"returnParameters":{"id":4958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4963,"src":"19766:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4956,"name":"uint256","nodeType":"ElementaryTypeName","src":"19766:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19765:9:25"},"scope":5318,"src":"19717:107:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4975,"nodeType":"Block","src":"20121:56:25","statements":[{"expression":{"arguments":[{"id":4972,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"20162:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4971,"name":"_calculateBaluniToUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"20139:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20139:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4970,"id":4974,"nodeType":"Return","src":"20132:37:25"}]},"documentation":{"id":4964,"nodeType":"StructuredDocumentation","src":"19832:208:25","text":" @dev Calculates the value of a given amount of Baluni tokens in USDC.\n @param amount The amount of Baluni tokens.\n @return The calculated value of the Baluni tokens in USDC."},"functionSelector":"71ddcfb8","id":4976,"implemented":true,"kind":"function","modifiers":[],"name":"getUSDCShareValue","nameLocation":"20055:17:25","nodeType":"FunctionDefinition","parameters":{"id":4967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4966,"mutability":"mutable","name":"amount","nameLocation":"20081:6:25","nodeType":"VariableDeclaration","scope":4976,"src":"20073:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4965,"name":"uint256","nodeType":"ElementaryTypeName","src":"20073:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20072:16:25"},"returnParameters":{"id":4970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4976,"src":"20112:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4968,"name":"uint256","nodeType":"ElementaryTypeName","src":"20112:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20111:9:25"},"scope":5318,"src":"20046:131:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5001,"nodeType":"Block","src":"20559:155:25","statements":[{"assignments":[4987],"declarations":[{"constant":false,"id":4987,"mutability":"mutable","name":"baluniOracle","nameLocation":"20578:12:25","nodeType":"VariableDeclaration","scope":5001,"src":"20570:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4986,"name":"address","nodeType":"ElementaryTypeName","src":"20570:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4991,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4988,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"20593:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20602:15:25","memberName":"getBaluniOracle","nodeType":"MemberAccess","referencedDeclaration":2828,"src":"20593:24:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20593:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"20570:49:25"},{"expression":{"arguments":[{"id":4996,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"20681:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4997,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"20688:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4998,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"20699:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4993,"name":"baluniOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"20653:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4992,"name":"IBaluniV1Oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"20637:15:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Oracle_$2640_$","typeString":"type(contract IBaluniV1Oracle)"}},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20637:29:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$2640","typeString":"contract IBaluniV1Oracle"}},"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20667:13:25","memberName":"convertScaled","nodeType":"MemberAccess","referencedDeclaration":2639,"src":"20637:43:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20637:69:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4985,"id":5000,"nodeType":"Return","src":"20630:76:25"}]},"documentation":{"id":4977,"nodeType":"StructuredDocumentation","src":"20185:255:25","text":" @dev Calculates the valuation of an ERC20 token based on the amount and token address.\n @param amount The amount of the token.\n @param token The address of the token.\n @return valuation The valuation of the token."},"id":5002,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateERC20ValuationScaled","nameLocation":"20455:30:25","nodeType":"FunctionDefinition","parameters":{"id":4982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4979,"mutability":"mutable","name":"amount","nameLocation":"20494:6:25","nodeType":"VariableDeclaration","scope":5002,"src":"20486:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4978,"name":"uint256","nodeType":"ElementaryTypeName","src":"20486:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4981,"mutability":"mutable","name":"token","nameLocation":"20510:5:25","nodeType":"VariableDeclaration","scope":5002,"src":"20502:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4980,"name":"address","nodeType":"ElementaryTypeName","src":"20502:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20485:31:25"},"returnParameters":{"id":4985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4984,"mutability":"mutable","name":"valuation","nameLocation":"20548:9:25","nodeType":"VariableDeclaration","scope":5002,"src":"20540:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4983,"name":"uint256","nodeType":"ElementaryTypeName","src":"20540:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20539:19:25"},"scope":5318,"src":"20446:268:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5053,"nodeType":"Block","src":"21155:348:25","statements":[{"assignments":[5011],"declarations":[{"constant":false,"id":5011,"mutability":"mutable","name":"baseDecimal","nameLocation":"21174:11:25","nodeType":"VariableDeclaration","scope":5053,"src":"21166:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5010,"name":"uint256","nodeType":"ElementaryTypeName","src":"21166:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5017,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":5013,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"21203:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5012,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"21188:14:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1986_$","typeString":"type(contract IERC20Metadata)"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21188:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1986","typeString":"contract IERC20Metadata"}},"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21214:8:25","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1985,"src":"21188:34:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21188:36:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"21166:58:25"},{"assignments":[5019],"declarations":[{"constant":false,"id":5019,"mutability":"mutable","name":"totalBaluni","nameLocation":"21243:11:25","nodeType":"VariableDeclaration","scope":5053,"src":"21235:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5018,"name":"uint256","nodeType":"ElementaryTypeName","src":"21235:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5022,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":5020,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"21257:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21257:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21235:35:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5024,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"21289:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21303:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21289:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c20737570706c792063616e6e6f74206265207a65726f","id":5027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21306:29:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_075182a57f83974087c76763cd3bc4eedd97b16a8f6ac226f0c2ef23a69b575b","typeString":"literal_string \"Total supply cannot be zero\""},"value":"Total supply cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_075182a57f83974087c76763cd3bc4eedd97b16a8f6ac226f0c2ef23a69b575b","typeString":"literal_string \"Total supply cannot be zero\""}],"id":5023,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21281:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21281:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5029,"nodeType":"ExpressionStatement","src":"21281:55:25"},{"assignments":[5031],"declarations":[{"constant":false,"id":5031,"mutability":"mutable","name":"totalUSDC","nameLocation":"21355:9:25","nodeType":"VariableDeclaration","scope":5053,"src":"21347:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5030,"name":"uint256","nodeType":"ElementaryTypeName","src":"21347:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5034,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":5032,"name":"_totalValuationScaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"21367:21:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21367:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21347:43:25"},{"expression":{"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5035,"name":"shareUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"21401:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5036,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"21414:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5037,"name":"totalUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"21423:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21414:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5039,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21413:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5040,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"21436:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21413:34:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21401:46:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5043,"nodeType":"ExpressionStatement","src":"21401:46:25"},{"expression":{"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5044,"name":"shareUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"21458:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21471:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3138","id":5046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21478:2:25","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5047,"name":"baseDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"21483:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21478:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5049,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21477:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21471:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21458:37:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5052,"nodeType":"ExpressionStatement","src":"21458:37:25"}]},"documentation":{"id":5003,"nodeType":"StructuredDocumentation","src":"20722:337:25","text":" @dev Calculates the equivalent amount of USDC tokens for a given amount of Baluni tokens.\n @param amount The amount of Baluni tokens to convert.\n @return shareUSDC The equivalent amount of USDC tokens.\n Requirements:\n - The total supply of Baluni tokens must be greater than zero."},"id":5054,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateBaluniToUSDC","nameLocation":"21074:22:25","nodeType":"FunctionDefinition","parameters":{"id":5006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5005,"mutability":"mutable","name":"amount","nameLocation":"21105:6:25","nodeType":"VariableDeclaration","scope":5054,"src":"21097:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5004,"name":"uint256","nodeType":"ElementaryTypeName","src":"21097:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21096:16:25"},"returnParameters":{"id":5009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5008,"mutability":"mutable","name":"shareUSDC","nameLocation":"21144:9:25","nodeType":"VariableDeclaration","scope":5054,"src":"21136:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5007,"name":"uint256","nodeType":"ElementaryTypeName","src":"21136:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21135:19:25"},"scope":5318,"src":"21065:438:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5135,"nodeType":"Block","src":"22172:636:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5069,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"22191:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22205:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22191:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c20737570706c792063616e6e6f74206265207a65726f","id":5072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22208:29:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_075182a57f83974087c76763cd3bc4eedd97b16a8f6ac226f0c2ef23a69b575b","typeString":"literal_string \"Total supply cannot be zero\""},"value":"Total supply cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_075182a57f83974087c76763cd3bc4eedd97b16a8f6ac226f0c2ef23a69b575b","typeString":"literal_string \"Total supply cannot be zero\""}],"id":5068,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22183:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22183:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5074,"nodeType":"ExpressionStatement","src":"22183:55:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5076,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"22257:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3138","id":5077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22274:2:25","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"22257:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646563696d616c732073686f756c64206265203c3d203138","id":5079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22278:32:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebe7cb95a2dc7ec969883b54c3194e315832305fa1026cbcfb27ede2b2283804","typeString":"literal_string \"Token decimals should be <= 18\""},"value":"Token decimals should be <= 18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebe7cb95a2dc7ec969883b54c3194e315832305fa1026cbcfb27ede2b2283804","typeString":"literal_string \"Token decimals should be <= 18\""}],"id":5075,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22249:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22249:62:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5081,"nodeType":"ExpressionStatement","src":"22249:62:25"},{"assignments":[5083],"declarations":[{"constant":false,"id":5083,"mutability":"mutable","name":"baluniAdjusted","nameLocation":"22330:14:25","nodeType":"VariableDeclaration","scope":5135,"src":"22322:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5082,"name":"uint256","nodeType":"ElementaryTypeName","src":"22322:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5084,"nodeType":"VariableDeclarationStatement","src":"22322:22:25"},{"assignments":[5086],"declarations":[{"constant":false,"id":5086,"mutability":"mutable","name":"amountAdjusted","nameLocation":"22363:14:25","nodeType":"VariableDeclaration","scope":5135,"src":"22355:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5085,"name":"uint256","nodeType":"ElementaryTypeName","src":"22355:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5087,"nodeType":"VariableDeclarationStatement","src":"22355:22:25"},{"assignments":[5089],"declarations":[{"constant":false,"id":5089,"mutability":"mutable","name":"factor","nameLocation":"22396:6:25","nodeType":"VariableDeclaration","scope":5135,"src":"22388:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5088,"name":"uint256","nodeType":"ElementaryTypeName","src":"22388:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5097,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22406:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3138","id":5091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22413:2:25","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5092,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"22418:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22413:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5094,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22412:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22406:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5096,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22405:28:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22388:45:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5098,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"22450:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3138","id":5099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22466:2:25","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"22450:18:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5122,"nodeType":"Block","src":"22593:99:25","statements":[{"expression":{"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5114,"name":"baluniAdjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"22608:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5115,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"22625:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:28:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5117,"nodeType":"ExpressionStatement","src":"22608:28:25"},{"expression":{"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5118,"name":"amountAdjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"22651:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5119,"name":"baluniAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"22668:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22651:29:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5121,"nodeType":"ExpressionStatement","src":"22651:29:25"}]},"id":5123,"nodeType":"IfStatement","src":"22446:246:25","trueBody":{"id":5113,"nodeType":"Block","src":"22470:117:25","statements":[{"expression":{"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5101,"name":"baluniAdjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"22485:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5102,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"22502:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5103,"name":"factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"22516:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22502:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22485:37:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5106,"nodeType":"ExpressionStatement","src":"22485:37:25"},{"expression":{"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5107,"name":"amountAdjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"22537:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5108,"name":"baluniAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"22554:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5109,"name":"factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"22569:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22554:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22537:38:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5112,"nodeType":"ExpressionStatement","src":"22537:38:25"}]}},{"assignments":[5125],"declarations":[{"constant":false,"id":5125,"mutability":"mutable","name":"result","nameLocation":"22712:6:25","nodeType":"VariableDeclaration","scope":5135,"src":"22704:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5124,"name":"uint256","nodeType":"ElementaryTypeName","src":"22704:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5132,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5126,"name":"amountAdjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"22722:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5127,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"22739:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22722:34:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5129,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22721:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5130,"name":"baluniAdjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"22760:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22721:53:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22704:70:25"},{"expression":{"id":5133,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"22794:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5067,"id":5134,"nodeType":"Return","src":"22787:13:25"}]},"documentation":{"id":5055,"nodeType":"StructuredDocumentation","src":"21511:457:25","text":" @dev Calculates the ERC20 share based on the total Baluni supply, total ERC20 balance,\n Baluni amount, and token decimals.\n @param totalBaluni The total supply of Baluni tokens.\n @param totalERC20Balance The total balance of the ERC20 token.\n @param baluniAmount The amount of Baluni tokens.\n @param tokenDecimals The number of decimals for the ERC20 token.\n @return The calculated ERC20 share."},"id":5136,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateERC20Share","nameLocation":"21983:20:25","nodeType":"FunctionDefinition","parameters":{"id":5064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5057,"mutability":"mutable","name":"totalBaluni","nameLocation":"22022:11:25","nodeType":"VariableDeclaration","scope":5136,"src":"22014:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5056,"name":"uint256","nodeType":"ElementaryTypeName","src":"22014:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5059,"mutability":"mutable","name":"totalERC20Balance","nameLocation":"22052:17:25","nodeType":"VariableDeclaration","scope":5136,"src":"22044:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5058,"name":"uint256","nodeType":"ElementaryTypeName","src":"22044:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5061,"mutability":"mutable","name":"baluniAmount","nameLocation":"22088:12:25","nodeType":"VariableDeclaration","scope":5136,"src":"22080:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5060,"name":"uint256","nodeType":"ElementaryTypeName","src":"22080:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5063,"mutability":"mutable","name":"tokenDecimals","nameLocation":"22119:13:25","nodeType":"VariableDeclaration","scope":5136,"src":"22111:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5062,"name":"uint256","nodeType":"ElementaryTypeName","src":"22111:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22003:136:25"},"returnParameters":{"id":5067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5136,"src":"22163:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5065,"name":"uint256","nodeType":"ElementaryTypeName","src":"22163:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22162:9:25"},"scope":5318,"src":"21974:834:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5226,"nodeType":"Block","src":"23060:723:25","statements":[{"assignments":[5143],"declarations":[{"constant":false,"id":5143,"mutability":"mutable","name":"_totalV","nameLocation":"23079:7:25","nodeType":"VariableDeclaration","scope":5226,"src":"23071:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5142,"name":"uint256","nodeType":"ElementaryTypeName","src":"23071:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5145,"initialValue":{"hexValue":"30","id":5144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23089:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23071:19:25"},{"body":{"id":5222,"nodeType":"Block","src":"23149:602:25","statements":[{"assignments":[5159],"declarations":[{"constant":false,"id":5159,"mutability":"mutable","name":"token","nameLocation":"23172:5:25","nodeType":"VariableDeclaration","scope":5222,"src":"23164:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5158,"name":"address","nodeType":"ElementaryTypeName","src":"23164:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5164,"initialValue":{"arguments":[{"id":5162,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"23190:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5160,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"23180:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":5161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23187:2:25","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":3375,"src":"23180:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3252_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$3252_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256) view returns (address)"}},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23180:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"23164:28:25"},{"assignments":[5166],"declarations":[{"constant":false,"id":5166,"mutability":"mutable","name":"balance","nameLocation":"23215:7:25","nodeType":"VariableDeclaration","scope":5222,"src":"23207:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5165,"name":"uint256","nodeType":"ElementaryTypeName","src":"23207:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5176,"initialValue":{"arguments":[{"arguments":[{"id":5173,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"23257:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$5318","typeString":"contract BaluniV1Router"}],"id":5172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23249:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5171,"name":"address","nodeType":"ElementaryTypeName","src":"23249:7:25","typeDescriptions":{}}},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23249:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5168,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"23232:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5167,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"23225:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23225:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23239:9:25","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1917,"src":"23225:23:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23225:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23207:56:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5177,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"23284:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23295:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23284:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5181,"nodeType":"IfStatement","src":"23280:26:25","trueBody":{"id":5180,"nodeType":"Continue","src":"23298:8:25"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5182,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"23327:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5183,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"23336:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23327:18:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5193,"nodeType":"IfStatement","src":"23323:111:25","trueBody":{"id":5192,"nodeType":"Block","src":"23347:87:25","statements":[{"expression":{"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5185,"name":"_totalV","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5143,"src":"23366:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5186,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"23377:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653132","id":5187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23387:4:25","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"23377:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23366:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5190,"nodeType":"ExpressionStatement","src":"23366:25:25"},{"id":5191,"nodeType":"Continue","src":"23410:8:25"}]}},{"assignments":[5195],"declarations":[{"constant":false,"id":5195,"mutability":"mutable","name":"baluniOracle","nameLocation":"23458:12:25","nodeType":"VariableDeclaration","scope":5222,"src":"23450:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5194,"name":"address","nodeType":"ElementaryTypeName","src":"23450:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5199,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5196,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"23473:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23482:15:25","memberName":"getBaluniOracle","nodeType":"MemberAccess","referencedDeclaration":2828,"src":"23473:24:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23473:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"23450:49:25"},{"assignments":[5201],"declarations":[{"constant":false,"id":5201,"mutability":"mutable","name":"tokenBalanceValuation","nameLocation":"23522:21:25","nodeType":"VariableDeclaration","scope":5222,"src":"23514:29:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5200,"name":"uint256","nodeType":"ElementaryTypeName","src":"23514:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5210,"initialValue":{"arguments":[{"id":5206,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"23590:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5207,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"23597:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5208,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"23608:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5203,"name":"baluniOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"23562:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5202,"name":"IBaluniV1Oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"23546:15:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Oracle_$2640_$","typeString":"type(contract IBaluniV1Oracle)"}},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23546:29:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$2640","typeString":"contract IBaluniV1Oracle"}},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23576:13:25","memberName":"convertScaled","nodeType":"MemberAccess","referencedDeclaration":2639,"src":"23546:43:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23546:70:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23514:102:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5212,"name":"tokenBalanceValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"23639:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23663:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23639:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e2076616c756174696f6e206973207a65726f","id":5215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23666:25:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_295121eae2e38ce539c65fbd804cefee3e5836ff4e56c455d35a6afed6773125","typeString":"literal_string \"Token valuation is zero\""},"value":"Token valuation is zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_295121eae2e38ce539c65fbd804cefee3e5836ff4e56c455d35a6afed6773125","typeString":"literal_string \"Token valuation is zero\""}],"id":5211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23631:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23631:61:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5217,"nodeType":"ExpressionStatement","src":"23631:61:25"},{"expression":{"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5218,"name":"_totalV","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5143,"src":"23707:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5219,"name":"tokenBalanceValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"23718:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23707:32:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5221,"nodeType":"ExpressionStatement","src":"23707:32:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5150,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"23123:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5151,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"23127:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":5152,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23134:6:25","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":3348,"src":"23127:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3252_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$3252_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"}},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23127:15:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23123:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5223,"initializationExpression":{"assignments":[5147],"declarations":[{"constant":false,"id":5147,"mutability":"mutable","name":"i","nameLocation":"23116:1:25","nodeType":"VariableDeclaration","scope":5223,"src":"23108:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5146,"name":"uint256","nodeType":"ElementaryTypeName","src":"23108:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5149,"initialValue":{"hexValue":"30","id":5148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23120:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23108:13:25"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23144:3:25","subExpression":{"id":5155,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"23144:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5157,"nodeType":"ExpressionStatement","src":"23144:3:25"},"nodeType":"ForStatement","src":"23103:648:25"},{"expression":{"id":5224,"name":"_totalV","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5143,"src":"23768:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5141,"id":5225,"nodeType":"Return","src":"23761:14:25"}]},"documentation":{"id":5137,"nodeType":"StructuredDocumentation","src":"22816:173:25","text":" @dev Calculates the total valuation of the contract by summing up the valuation of each token held.\n @return The total valuation of the contract."},"id":5227,"implemented":true,"kind":"function","modifiers":[],"name":"_totalValuationScaled","nameLocation":"23004:21:25","nodeType":"FunctionDefinition","parameters":{"id":5138,"nodeType":"ParameterList","parameters":[],"src":"23025:2:25"},"returnParameters":{"id":5141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5227,"src":"23051:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5139,"name":"uint256","nodeType":"ElementaryTypeName","src":"23051:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23050:9:25"},"scope":5318,"src":"22995:788:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5262,"nodeType":"Block","src":"24056:230:25","statements":[{"assignments":[5236],"declarations":[{"constant":false,"id":5236,"mutability":"mutable","name":"_BPS_FEE","nameLocation":"24075:8:25","nodeType":"VariableDeclaration","scope":5262,"src":"24067:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5235,"name":"uint256","nodeType":"ElementaryTypeName","src":"24067:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5240,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5237,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"24086:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24095:10:25","memberName":"getBPS_FEE","nodeType":"MemberAccess","referencedDeclaration":2883,"src":"24086:19:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24086:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24067:40:25"},{"assignments":[5242],"declarations":[{"constant":false,"id":5242,"mutability":"mutable","name":"_BPS_BASE","nameLocation":"24126:9:25","nodeType":"VariableDeclaration","scope":5262,"src":"24118:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5241,"name":"uint256","nodeType":"ElementaryTypeName","src":"24118:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5246,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5243,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"24138:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2909","typeString":"contract IBaluniV1Registry"}},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24147:11:25","memberName":"getBPS_BASE","nodeType":"MemberAccess","referencedDeclaration":2893,"src":"24138:20:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24138:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24118:42:25"},{"assignments":[5248],"declarations":[{"constant":false,"id":5248,"mutability":"mutable","name":"amountInWithFee","nameLocation":"24179:15:25","nodeType":"VariableDeclaration","scope":5262,"src":"24171:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5247,"name":"uint256","nodeType":"ElementaryTypeName","src":"24171:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5259,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5249,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"24198:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5250,"name":"_BPS_BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"24209:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"id":5251,"name":"_BPS_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5236,"src":"24222:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5252,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24221:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24209:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5254,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24208:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24198:34:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5256,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24197:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5257,"name":"_BPS_BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"24236:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24197:48:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24171:74:25"},{"expression":{"id":5260,"name":"amountInWithFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"24263:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5234,"id":5261,"nodeType":"Return","src":"24256:22:25"}]},"documentation":{"id":5228,"nodeType":"StructuredDocumentation","src":"23791:173:25","text":" @dev Calculates the net amount after deducting the fee.\n @param _amount The input amount.\n @return The net amount after deducting the fee."},"id":5263,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateNetAmountAfterFee","nameLocation":"23979:27:25","nodeType":"FunctionDefinition","parameters":{"id":5231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5230,"mutability":"mutable","name":"_amount","nameLocation":"24015:7:25","nodeType":"VariableDeclaration","scope":5263,"src":"24007:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5229,"name":"uint256","nodeType":"ElementaryTypeName","src":"24007:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24006:17:25"},"returnParameters":{"id":5234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5263,"src":"24047:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5232,"name":"uint256","nodeType":"ElementaryTypeName","src":"24047:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24046:9:25"},"scope":5318,"src":"23970:316:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5272,"nodeType":"Block","src":"24451:50:25","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5269,"name":"_getInitializedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"24469:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint64_$","typeString":"function () view returns (uint64)"}},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24469:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5268,"id":5271,"nodeType":"Return","src":"24462:31:25"}]},"documentation":{"id":5264,"nodeType":"StructuredDocumentation","src":"24294:98:25","text":" @dev Returns the version of the contract.\n @return The version string."},"functionSelector":"0d8e6e2c","id":5273,"implemented":true,"kind":"function","modifiers":[],"name":"getVersion","nameLocation":"24407:10:25","nodeType":"FunctionDefinition","parameters":{"id":5265,"nodeType":"ParameterList","parameters":[],"src":"24417:2:25"},"returnParameters":{"id":5268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5273,"src":"24443:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5266,"name":"uint64","nodeType":"ElementaryTypeName","src":"24443:6:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"24442:8:25"},"scope":5318,"src":"24398:103:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5284,"nodeType":"Block","src":"24720:41:25","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5280,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"24738:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":5281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24745:6:25","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":3405,"src":"24738:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3252_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$3252_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (address[] memory)"}},"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24738:15:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":5279,"id":5283,"nodeType":"Return","src":"24731:22:25"}]},"documentation":{"id":5274,"nodeType":"StructuredDocumentation","src":"24509:143:25","text":" @dev Returns an array of addresses representing the tokens.\n @return An array of addresses representing the tokens."},"functionSelector":"aa6ca808","id":5285,"implemented":true,"kind":"function","modifiers":[],"name":"getTokens","nameLocation":"24667:9:25","nodeType":"FunctionDefinition","parameters":{"id":5275,"nodeType":"ParameterList","parameters":[],"src":"24676:2:25"},"returnParameters":{"id":5279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5285,"src":"24702:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5276,"name":"address","nodeType":"ElementaryTypeName","src":"24702:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5277,"nodeType":"ArrayTypeName","src":"24702:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"24701:18:25"},"scope":5318,"src":"24658:103:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5300,"nodeType":"Block","src":"24997:63:25","statements":[{"expression":{"arguments":[{"id":5296,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"25037:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},{"id":5297,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"25045:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AddressSet_$3252_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5293,"name":"EnumerableSetUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"25008:24:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnumerableSetUpgradeable_$3539_$","typeString":"type(library EnumerableSetUpgradeable)"}},"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25033:3:25","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3279,"src":"25008:28:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$3252_storage_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"}},"id":5298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25008:44:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5299,"nodeType":"ExpressionStatement","src":"25008:44:25"}]},"documentation":{"id":5286,"nodeType":"StructuredDocumentation","src":"24769:169:25","text":" @dev Adds a token to the `tokens` set.\n Can only be called by the contract owner.\n @param _token The address of the token to be added."},"functionSelector":"d48bfca7","id":5301,"implemented":true,"kind":"function","modifiers":[{"id":5291,"kind":"modifierInvocation","modifierName":{"id":5290,"name":"onlyOwner","nameLocations":["24987:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"24987:9:25"},"nodeType":"ModifierInvocation","src":"24987:9:25"}],"name":"addToken","nameLocation":"24953:8:25","nodeType":"FunctionDefinition","parameters":{"id":5289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5288,"mutability":"mutable","name":"_token","nameLocation":"24970:6:25","nodeType":"VariableDeclaration","scope":5301,"src":"24962:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5287,"name":"address","nodeType":"ElementaryTypeName","src":"24962:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24961:16:25"},"returnParameters":{"id":5292,"nodeType":"ParameterList","parameters":[],"src":"24997:0:25"},"scope":5318,"src":"24944:116:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5316,"nodeType":"Block","src":"25306:66:25","statements":[{"expression":{"arguments":[{"id":5312,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"25349:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3252_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},{"id":5313,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"25357:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AddressSet_$3252_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5309,"name":"EnumerableSetUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"25317:24:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnumerableSetUpgradeable_$3539_$","typeString":"type(library EnumerableSetUpgradeable)"}},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25342:6:25","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":3306,"src":"25317:31:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$3252_storage_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"}},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25317:47:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5315,"nodeType":"ExpressionStatement","src":"25317:47:25"}]},"documentation":{"id":5302,"nodeType":"StructuredDocumentation","src":"25068:176:25","text":" @dev Removes a token from the `tokens` set.\n Can only be called by the contract owner.\n @param _token The address of the token to be removed."},"functionSelector":"5fa7b584","id":5317,"implemented":true,"kind":"function","modifiers":[{"id":5307,"kind":"modifierInvocation","modifierName":{"id":5306,"name":"onlyOwner","nameLocations":["25296:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"25296:9:25"},"nodeType":"ModifierInvocation","src":"25296:9:25"}],"name":"removeToken","nameLocation":"25259:11:25","nodeType":"FunctionDefinition","parameters":{"id":5305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5304,"mutability":"mutable","name":"_token","nameLocation":"25279:6:25","nodeType":"VariableDeclaration","scope":5317,"src":"25271:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5303,"name":"address","nodeType":"ElementaryTypeName","src":"25271:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25270:16:25"},"returnParameters":{"id":5308,"nodeType":"ParameterList","parameters":[],"src":"25306:0:25"},"scope":5318,"src":"25250:122:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5319,"src":"2383:22992:25","usedErrors":[30,35,211,214,475,480,1324,1444,1449,1454,1463,1468,1473,1604,1617,1999,2002],"usedEvents":[41,219,1583,1894,1903,3596,3602,3608,3614]}],"src":"40:25337:25"},"id":25}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"stateVariables":{"UPGRADE_INTERFACE_VERSION":{"details":"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."},"__self":{"custom:oz-upgrades-unsafe-allow":"state-variable-immutable"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport {ContextUpgradeable} from \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport {IERC20Errors} from \\\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\\\";\\nimport {Initializable} from \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\\n    struct ERC20Storage {\\n        mapping(address account => uint256) _balances;\\n\\n        mapping(address account => mapping(address spender => uint256)) _allowances;\\n\\n        uint256 _totalSupply;\\n\\n        string _name;\\n        string _symbol;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ERC20\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\\n\\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\\n        assembly {\\n            $.slot := ERC20StorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        $._name = name_;\\n        $._symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            $._totalSupply += value;\\n        } else {\\n            uint256 fromBalance = $._balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                $._balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                $._totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                $._balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        $._allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\\n    struct ReentrancyGuardStorage {\\n        uint256 _status;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ReentrancyGuard\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\\n\\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\\n        assembly {\\n            $.slot := ReentrancyGuardStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if ($._status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        $._status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        return $._status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.","errors":{"ERC1967InvalidAdmin(address)":[{"details":"The `admin` of the proxy is invalid."}],"ERC1967InvalidBeacon(address)":[{"details":"The `beacon` of the proxy is invalid."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}]},"events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"stateVariables":{"ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b4c6ced6292c72a5df5062c5531f11602e1abc0858cc9574df81da14878fc54a64736f6c63430008190033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xC6 0xCE 0xD6 0x29 0x2C PUSH19 0xA5DF5062C5531F11602E1ABC0858CC9574DF81 0xDA EQ DUP8 DUP16 0xC5 BLOBBASEFEE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"449:6273:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;449:6273:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b4c6ced6292c72a5df5062c5531f11602e1abc0858cc9574df81da14878fc54a64736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xC6 0xCE 0xD6 0x29 0x2C PUSH19 0xA5DF5062C5531F11602E1ABC0858CC9574DF81 0xDA EQ DUP8 DUP16 0xC5 BLOBBASEFEE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"449:6273:8:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17000","executionCost":"96","totalCost":"17096"},"internal":{"_checkNonPayable()":"infinite","_setAdmin(address)":"infinite","_setBeacon(address)":"infinite","_setImplementation(address)":"infinite","changeAdmin(address)":"infinite","getAdmin()":"infinite","getBeacon()":"infinite","getImplementation()":"infinite","upgradeBeaconToAndCall(address,bytes memory)":"infinite","upgradeToAndCall(address,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"AddressInsufficientBalance(address)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201c04349167677d2822c11c2f99ae3d53f9585061fd9b4d0a1134e59d5aae7d6364736f6c63430008190033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR DIV CALLVALUE SWAP2 PUSH8 0x677D2822C11C2F99 0xAE RETURNDATASIZE MSTORE8 0xF9 PC POP PUSH2 0xFD9B 0x4D EXP GT CALLVALUE 0xE5 SWAP14 GAS 0xAE PUSH30 0x6364736F6C63430008190033000000000000000000000000000000000000 ","sourceMap":"195:6066:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201c04349167677d2822c11c2f99ae3d53f9585061fd9b4d0a1134e59d5aae7d6364736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR DIV CALLVALUE SWAP2 PUSH8 0x677D2822C11C2F99 0xAE RETURNDATASIZE MSTORE8 0xF9 PC POP PUSH2 0xFD9B 0x4D EXP GT CALLVALUE 0xE5 SWAP14 GAS 0xAE PUSH30 0x6364736F6C63430008190033000000000000000000000000000000000000 ","sourceMap":"195:6066:12:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17000","executionCost":"96","totalCost":"17096"},"internal":{"_revert(bytes memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202c766a8d534da51e6d89f2a7211a3e2cbb05f0ce6c90a7d619a2d9809239f1ec64736f6c63430008190033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C PUSH23 0x6A8D534DA51E6D89F2A7211A3E2CBB05F0CE6C90A7D619 LOG2 0xD9 DUP1 SWAP3 CODECOPY CALL 0xEC PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"1245:2685:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1245:2685:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202c766a8d534da51e6d89f2a7211a3e2cbb05f0ce6c90a7d619a2d9809239f1ec64736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C PUSH23 0x6A8D534DA51E6D89F2A7211A3E2CBB05F0CE6C90A7D619 LOG2 0xD9 DUP1 SWAP3 CODECOPY CALL 0xEC PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"1245:2685:13:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17000","executionCost":"96","totalCost":"17096"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"IUniswapV3Factory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":true,"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"FeeAmountEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":false,"internalType":"int24","name":"tickSpacing","type":"int24"},{"indexed":false,"internalType":"address","name":"pool","type":"address"}],"name":"PoolCreated","type":"event"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"enableFeeAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"feeAmountTickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"getPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"FeeAmountEnabled(uint24,int24)":{"params":{"fee":"The enabled fee, denominated in hundredths of a bip","tickSpacing":"The minimum number of ticks between initialized ticks for pools created with the given fee"}},"OwnerChanged(address,address)":{"params":{"newOwner":"The owner after the owner was changed","oldOwner":"The owner before the owner was changed"}},"PoolCreated(address,address,uint24,int24,address)":{"params":{"fee":"The fee collected upon every swap in the pool, denominated in hundredths of a bip","pool":"The address of the created pool","tickSpacing":"The minimum number of ticks between initialized ticks","token0":"The first token of the pool by address sort order","token1":"The second token of the pool by address sort order"}}},"kind":"dev","methods":{"createPool(address,address,uint24)":{"details":"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.","params":{"fee":"The desired fee for the pool","tokenA":"One of the two tokens in the desired pool","tokenB":"The other of the two tokens in the desired pool"},"returns":{"pool":"The address of the newly created pool"}},"enableFeeAmount(uint24,int24)":{"details":"Fee amounts may never be removed once enabled","params":{"fee":"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)","tickSpacing":"The spacing between ticks to be enforced for all pools created with the given fee amount"}},"feeAmountTickSpacing(uint24)":{"details":"A fee amount can never be removed, so this value should be hard coded or cached in the calling context","params":{"fee":"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"},"returns":{"_0":"The tick spacing"}},"getPool(address,address,uint24)":{"details":"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order","params":{"fee":"The fee collected upon every swap in the pool, denominated in hundredths of a bip","tokenA":"The contract address of either token0 or token1","tokenB":"The contract address of the other token"},"returns":{"pool":"The pool address"}},"owner()":{"details":"Can be changed by the current owner via setOwner","returns":{"_0":"The address of the factory owner"}},"setOwner(address)":{"details":"Must be called by the current owner","params":{"_owner":"The new owner of the factory"}}},"title":"The interface for the Uniswap V3 Factory","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"createPool(address,address,uint24)":"a1671295","enableFeeAmount(uint24,int24)":"8a7c195f","feeAmountTickSpacing(uint24)":"22afcccb","getPool(address,address,uint24)":"1698ee82","owner()":"8da5cb5b","setOwner(address)":"13af4035"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\\n\",\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"FeeAmountEnabled(uint24,int24)":{"notice":"Emitted when a new fee amount is enabled for pool creation via the factory"},"OwnerChanged(address,address)":{"notice":"Emitted when the owner of the factory is changed"},"PoolCreated(address,address,uint24,int24,address)":{"notice":"Emitted when a pool is created"}},"kind":"user","methods":{"createPool(address,address,uint24)":{"notice":"Creates a pool for the given two tokens and fee"},"enableFeeAmount(uint24,int24)":{"notice":"Enables a fee amount with the given tickSpacing"},"feeAmountTickSpacing(uint24)":{"notice":"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"},"getPool(address,address,uint24)":{"notice":"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"},"owner()":{"notice":"Returns the current owner of the factory"},"setOwner(address)":{"notice":"Updates the owner of the factory"}},"notice":"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees","version":1}}},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"IUniswapV3SwapCallback":{"abi":[{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"uniswapV3SwapCallback(int256,int256,bytes)":{"details":"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.","params":{"amount0Delta":"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.","amount1Delta":"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.","data":"Any data passed through by the caller via the IUniswapV3PoolActions#swap call"}}},"title":"Callback for IUniswapV3PoolActions#swap","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"uniswapV3SwapCallback(int256,int256,bytes)":{"notice":"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."}},"notice":"Any contract that calls IUniswapV3PoolActions#swap must implement this interface","version":1}}},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ISwapRouter":{"abi":[{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactInputParams","name":"params","type":"tuple"}],"name":"exactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactInputSingleParams","name":"params","type":"tuple"}],"name":"exactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactOutputParams","name":"params","type":"tuple"}],"name":"exactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactOutputSingleParams","name":"params","type":"tuple"}],"name":"exactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"exactInput((bytes,address,uint256,uint256,uint256))":{"params":{"params":"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"},"returns":{"amountOut":"The amount of the received token"}},"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":{"params":{"params":"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"},"returns":{"amountOut":"The amount of the received token"}},"exactOutput((bytes,address,uint256,uint256,uint256))":{"params":{"params":"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"},"returns":{"amountIn":"The amount of the input token"}},"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":{"params":{"params":"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"},"returns":{"amountIn":"The amount of the input token"}},"uniswapV3SwapCallback(int256,int256,bytes)":{"details":"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.","params":{"amount0Delta":"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.","amount1Delta":"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.","data":"Any data passed through by the caller via the IUniswapV3PoolActions#swap call"}}},"title":"Router token swapping functionality","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"exactInput((bytes,address,uint256,uint256,uint256))":"c04b8d59","exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"414bf389","exactOutput((bytes,address,uint256,uint256,uint256))":"f28c0498","exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"db3e2198","uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"exactInput((bytes,address,uint256,uint256,uint256))":{"notice":"Swaps `amountIn` of one token for as much as possible of another along the specified path"},"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":{"notice":"Swaps `amountIn` of one token for as much as possible of another token"},"exactOutput((bytes,address,uint256,uint256,uint256))":{"notice":"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"},"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":{"notice":"Swaps as little as possible of one token for `amountOut` of another token"},"uniswapV3SwapCallback(int256,int256,bytes)":{"notice":"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."}},"notice":"Functions for swapping tokens via Uniswap V3","version":1}}},"contracts/interfaces/I1inchSpotAgg.sol":{"I1inchSpotAgg":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"srcToken","type":"address"},{"internalType":"contract IERC20","name":"dstToken","type":"address"},{"internalType":"bool","name":"useWrappers","type":"bool"}],"name":"getRate","outputs":[{"internalType":"uint256","name":"weightedRate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"srcToken","type":"address"},{"internalType":"bool","name":"useWrappers","type":"bool"}],"name":"getRateToEth","outputs":[{"internalType":"uint256","name":"weightedRate","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getRate(address,address,bool)":"802431fb","getRateToEth(address,bool)":"7de4fd10"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"dstToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useWrappers\",\"type\":\"bool\"}],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weightedRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useWrappers\",\"type\":\"bool\"}],\"name\":\"getRateToEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weightedRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/I1inchSpotAgg.sol\":\"I1inchSpotAgg\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Agent.sol":{"IBaluniV1Agent":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct IBaluniV1Agent.Call[]","name":"calls","type":"tuple[]"},{"internalType":"address[]","name":"tokensReturn","type":"address[]"}],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"execute((address,uint256,bytes)[],address[])":"eedc3c50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IBaluniV1Agent.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"tokensReturn\",\"type\":\"address[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Agent.sol\":\"IBaluniV1Agent\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1Agent.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Agent {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1bbf5ddbc4f525451e727d6997e6a20a6238d69232b58b3813760a16e7f60bbe\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1AgentFactory.sol":{"IBaluniV1AgentFactory":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getAgentAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getOrCreateAgent","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAgentAddress(address)":"27d54a92","getOrCreateAgent(address)":"9b76a5cd","getRegistry()":"5ab1bd53"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getAgentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getOrCreateAgent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1AgentFactory.sol\":\"IBaluniV1AgentFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1AgentFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1AgentFactory {\\r\\n    function getAgentAddress(address user) external view returns (address);\\r\\n\\r\\n    function getOrCreateAgent(address user) external returns (address);\\r\\n\\r\\n    function getRegistry() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x7de0683d187e1b0dbbffde17f943b24e1481351949e7b292a9bff33cdc4b3d71\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Oracle.sol":{"IBaluniV1Oracle":{"abi":[{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convert","outputs":[{"internalType":"uint256","name":"valuation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convertScaled","outputs":[{"internalType":"uint256","name":"valuation","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"convert(address,address,uint256)":"248391ff","convertScaled(address,address,uint256)":"b27b5e75"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valuation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convertScaled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valuation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Oracle.sol\":\"IBaluniV1Oracle\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1Oracle.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Oracle {\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256 valuation);\\r\\n\\r\\n    function convertScaled(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) external view returns (uint256 valuation);\\r\\n}\\r\\n\",\"keccak256\":\"0x2bc62f7640b15a1772de630216f6fe6aa7a719cb6cf0255befdde19ec8de785a\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"IBaluniV1Rebalancer":{"abi":[{"inputs":[{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"checkRebalance","outputs":[{"components":[{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"uint256","name":"totalValue","type":"uint256"},{"internalType":"uint256","name":"finalUsdBalance","type":"uint256"},{"internalType":"uint256","name":"overweightVaultsLength","type":"uint256"},{"internalType":"uint256","name":"underweightVaultsLength","type":"uint256"},{"internalType":"uint256","name":"totalActiveWeight","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256[]","name":"overweightVaults","type":"uint256[]"},{"internalType":"uint256[]","name":"overweightAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"underweightVaults","type":"uint256[]"},{"internalType":"uint256[]","name":"underweightAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"}],"internalType":"struct IBaluniV1Rebalancer.RebalanceVars","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convert","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"rebalance","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkRebalance(uint256[],address[],uint256[],uint256,address,address)":"997146f5","convert(address,address,uint256)":"248391ff","rebalance(uint256[],address[],uint256[],uint256,address,address,address)":"f0bf7714"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"checkRebalance\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalUsdBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overweightVaultsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underweightVaultsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalActiveWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"overweightVaults\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"overweightAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underweightVaults\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underweightAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IBaluniV1Rebalancer.RebalanceVars\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Rebalancer.sol\":\"IBaluniV1Rebalancer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n    struct RebalanceVars {\\r\\n        uint256 length;\\r\\n        uint256 totalValue;\\r\\n        uint256 finalUsdBalance;\\r\\n        uint256 overweightVaultsLength;\\r\\n        uint256 underweightVaultsLength;\\r\\n        uint256 totalActiveWeight;\\r\\n        uint256 amountOut;\\r\\n        uint256[] overweightVaults;\\r\\n        uint256[] overweightAmounts;\\r\\n        uint256[] underweightVaults;\\r\\n        uint256[] underweightAmounts;\\r\\n        uint256[] balances;\\r\\n    }\\r\\n\\r\\n    // Functions\\r\\n    function rebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address receiver,\\r\\n        address baseAsset\\r\\n    ) external;\\r\\n\\r\\n    function checkRebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address baseAsset\\r\\n    ) external view returns (RebalanceVars memory);\\r\\n\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x61c44c9208ab5c5638160706c4737e8032440e73054a90378d0b65559653d57a\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Registry.sol":{"IBaluniV1Registry":{"abi":[{"inputs":[],"name":"get1inchSpotAgg","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBPS_BASE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniAgentFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniPoolPeriphery","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniPoolRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniRebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniSwapper","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniVaultRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMAX_BPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStaticOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTreasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUSDC","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUniswapFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUniswapRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWNATIVE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"__1inchSpotAgg","type":"address"}],"name":"set1inchSpotAgg","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"__BPS_FEE","type":"uint256"}],"name":"setBPS_FEE","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniAgentFactory","type":"address"}],"name":"setBaluniAgentFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniOracle","type":"address"}],"name":"setBaluniOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniPoolPeriphery","type":"address"}],"name":"setBaluniPoolPeriphery","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniPoolRegistry","type":"address"}],"name":"setBaluniPoolRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniRebalancer","type":"address"}],"name":"setBaluniRebalancer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniRegistry","type":"address"}],"name":"setBaluniRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniRouter","type":"address"}],"name":"setBaluniRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniSwapper","type":"address"}],"name":"setBaluniSwapper","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniPoolRegistry","type":"address"}],"name":"setBaluniVaultRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_staticOracle","type":"address"}],"name":"setStaticOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_treasury","type":"address"}],"name":"setTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_USDC","type":"address"}],"name":"setUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_uniswapFactory","type":"address"}],"name":"setUniswapFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_uniswapRouter","type":"address"}],"name":"setUniswapRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_WNATIVE","type":"address"}],"name":"setWNATIVE","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the BaluniV1Registry contract.","kind":"dev","methods":{},"title":"IBaluniV1Registry","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"get1inchSpotAgg()":"8e1c3a8a","getBPS_BASE()":"4f4608a2","getBPS_FEE()":"85462d6f","getBaluniAgentFactory()":"f5d2d998","getBaluniOracle()":"bb3ba04c","getBaluniPoolPeriphery()":"1acb6141","getBaluniPoolRegistry()":"32569e02","getBaluniRebalancer()":"cff49d68","getBaluniRegistry()":"c9aba8ae","getBaluniRouter()":"04cc7325","getBaluniSwapper()":"82755ebb","getBaluniVaultRegistry()":"1cc2b00d","getMAX_BPS_FEE()":"9380fb6f","getStaticOracle()":"a5d2236f","getTreasury()":"3b19e84a","getUSDC()":"1bf01e9b","getUniswapFactory()":"3e6dfa36","getUniswapRouter()":"524900b5","getWNATIVE()":"6c9c0078","set1inchSpotAgg(address)":"c08f786b","setBPS_FEE(uint256)":"9e6453f8","setBaluniAgentFactory(address)":"f1dccde7","setBaluniOracle(address)":"f5b84f64","setBaluniPoolPeriphery(address)":"588c5b70","setBaluniPoolRegistry(address)":"f98977a9","setBaluniRebalancer(address)":"0241bffa","setBaluniRegistry(address)":"6c43274c","setBaluniRouter(address)":"400fb668","setBaluniSwapper(address)":"c3f5df5c","setBaluniVaultRegistry(address)":"5055fe98","setStaticOracle(address)":"cc01e9a6","setTreasury(address)":"f0f44260","setUSDC(address)":"b3e089a2","setUniswapFactory(address)":"e04b677f","setUniswapRouter(address)":"bea9849e","setWNATIVE(address)":"b6fe9cc7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"get1inchSpotAgg\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBPS_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniAgentFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniPoolPeriphery\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniPoolRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniRebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniSwapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniVaultRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMAX_BPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStaticOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUSDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUniswapFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUniswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWNATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"__1inchSpotAgg\",\"type\":\"address\"}],\"name\":\"set1inchSpotAgg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__BPS_FEE\",\"type\":\"uint256\"}],\"name\":\"setBPS_FEE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniAgentFactory\",\"type\":\"address\"}],\"name\":\"setBaluniAgentFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniOracle\",\"type\":\"address\"}],\"name\":\"setBaluniOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniPoolPeriphery\",\"type\":\"address\"}],\"name\":\"setBaluniPoolPeriphery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniPoolRegistry\",\"type\":\"address\"}],\"name\":\"setBaluniPoolRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniRebalancer\",\"type\":\"address\"}],\"name\":\"setBaluniRebalancer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniRegistry\",\"type\":\"address\"}],\"name\":\"setBaluniRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniRouter\",\"type\":\"address\"}],\"name\":\"setBaluniRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniSwapper\",\"type\":\"address\"}],\"name\":\"setBaluniSwapper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniPoolRegistry\",\"type\":\"address\"}],\"name\":\"setBaluniVaultRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staticOracle\",\"type\":\"address\"}],\"name\":\"setStaticOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_USDC\",\"type\":\"address\"}],\"name\":\"setUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapFactory\",\"type\":\"address\"}],\"name\":\"setUniswapFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapRouter\",\"type\":\"address\"}],\"name\":\"setUniswapRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_WNATIVE\",\"type\":\"address\"}],\"name\":\"setWNATIVE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the BaluniV1Registry contract.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IBaluniV1Registry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Registry.sol\":\"IBaluniV1Registry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1Registry.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1Registry\\r\\n * @dev Interface for the BaluniV1Registry contract.\\r\\n */\\r\\ninterface IBaluniV1Registry {\\r\\n    function setUniswapFactory(address _uniswapFactory) external;\\r\\n\\r\\n    function setUniswapRouter(address _uniswapRouter) external;\\r\\n\\r\\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\\r\\n\\r\\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\\r\\n\\r\\n    function setBaluniSwapper(address _baluniSwapper) external;\\r\\n\\r\\n    function setBaluniOracle(address _baluniOracle) external;\\r\\n\\r\\n    function setBaluniPoolRegistry(address _baluniPoolRegistry) external;\\r\\n\\r\\n    function setBaluniVaultRegistry(address _baluniPoolRegistry) external;\\r\\n\\r\\n    function setBaluniRebalancer(address _baluniRebalancer) external;\\r\\n\\r\\n    function setBaluniRouter(address _baluniRouter) external;\\r\\n\\r\\n    function setBaluniRegistry(address _baluniRegistry) external;\\r\\n\\r\\n    function setWNATIVE(address _WNATIVE) external;\\r\\n\\r\\n    function setUSDC(address _USDC) external;\\r\\n\\r\\n    function setTreasury(address _treasury) external;\\r\\n\\r\\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\\r\\n\\r\\n    function setBPS_FEE(uint256 __BPS_FEE) external;\\r\\n\\r\\n    function getUniswapFactory() external view returns (address);\\r\\n\\r\\n    function getUniswapRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniSwapper() external view returns (address);\\r\\n\\r\\n    function getBaluniOracle() external view returns (address);\\r\\n\\r\\n    function getBaluniAgentFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolPeriphery() external view returns (address);\\r\\n\\r\\n    function getBaluniVaultRegistry() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolRegistry() external view returns (address);\\r\\n\\r\\n    function getBaluniRebalancer() external view returns (address);\\r\\n\\r\\n    function getBaluniRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniRegistry() external view returns (address);\\r\\n\\r\\n    function getWNATIVE() external view returns (address);\\r\\n\\r\\n    function getUSDC() external view returns (address);\\r\\n\\r\\n    function get1inchSpotAgg() external view returns (address);\\r\\n\\r\\n    function getBPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getMAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getBPS_BASE() external view returns (uint256);\\r\\n\\r\\n    function getTreasury() external view returns (address);\\r\\n\\r\\n    function setStaticOracle(address _staticOracle) external;\\r\\n\\r\\n    function getStaticOracle() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x7e73b74ed81791ac27ab8e6f5877d7d6c969567be86125ee3ce2c77825487127\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Swapper.sol":{"IBaluniV1Swapper":{"abi":[{"inputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"address","name":"token2","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"multiHopSwap","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"singleSwap","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"multiHopSwap(address,address,address,uint256,address)":"5efaaebb","singleSwap(address,address,uint256,address)":"2d6bc8ea"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"multiHopSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"singleSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Swapper.sol\":\"IBaluniV1Swapper\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1Swapper.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Swapper {\\r\\n    function singleSwap(\\r\\n        address token0,\\r\\n        address token1,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256 amountOut);\\r\\n    function multiHopSwap(\\r\\n        address token0,\\r\\n        address token1,\\r\\n        address token2,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256 amountOut);\\r\\n}\\r\\n\",\"keccak256\":\"0x8113df3342115499d21149fa3fe70412cb6bdbf79766870f929b3845e1d2a0fe\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libs/EnumerableSetUpgradeable.sol":{"EnumerableSetUpgradeable":{"abi":[],"devdoc":{"details":"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207f2ac83d6b4bfd8dd91cb3467e3d1a3e7fd6578dbdee4fd500a0cb743f0865e764736f6c63430008190033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x2AC83D6B4BFD8DD91CB3467E3D1A3E7FD6578DBDEE4FD500A0CB743F0865E764 PUSH20 0x6F6C634300081900330000000000000000000000 ","sourceMap":"1265:11794:24:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1265:11794:24;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207f2ac83d6b4bfd8dd91cb3467e3d1a3e7fd6578dbdee4fd500a0cb743f0865e764736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x2AC83D6B4BFD8DD91CB3467E3D1A3E7FD6578DBDEE4FD500A0CB743F0865E764 PUSH20 0x6F6C634300081900330000000000000000000000 ","sourceMap":"1265:11794:24:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17000","executionCost":"96","totalCost":"17096"},"internal":{"_add(struct EnumerableSetUpgradeable.Set storage pointer,bytes32)":"infinite","_at(struct EnumerableSetUpgradeable.Set storage pointer,uint256)":"infinite","_contains(struct EnumerableSetUpgradeable.Set storage pointer,bytes32)":"infinite","_length(struct EnumerableSetUpgradeable.Set storage pointer)":"infinite","_remove(struct EnumerableSetUpgradeable.Set storage pointer,bytes32)":"infinite","_values(struct EnumerableSetUpgradeable.Set storage pointer)":"infinite","add(struct EnumerableSetUpgradeable.AddressSet storage pointer,address)":"infinite","add(struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32)":"infinite","add(struct EnumerableSetUpgradeable.UintSet storage pointer,uint256)":"infinite","at(struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256)":"infinite","at(struct EnumerableSetUpgradeable.Bytes32Set storage pointer,uint256)":"infinite","at(struct EnumerableSetUpgradeable.UintSet storage pointer,uint256)":"infinite","contains(struct EnumerableSetUpgradeable.AddressSet storage pointer,address)":"infinite","contains(struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32)":"infinite","contains(struct EnumerableSetUpgradeable.UintSet storage pointer,uint256)":"infinite","length(struct EnumerableSetUpgradeable.AddressSet storage pointer)":"infinite","length(struct EnumerableSetUpgradeable.Bytes32Set storage pointer)":"infinite","length(struct EnumerableSetUpgradeable.UintSet storage pointer)":"infinite","remove(struct EnumerableSetUpgradeable.AddressSet storage pointer,address)":"infinite","remove(struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32)":"infinite","remove(struct EnumerableSetUpgradeable.UintSet storage pointer,uint256)":"infinite","values(struct EnumerableSetUpgradeable.AddressSet storage pointer)":"infinite","values(struct EnumerableSetUpgradeable.Bytes32Set storage pointer)":"infinite","values(struct EnumerableSetUpgradeable.UintSet storage pointer)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/EnumerableSetUpgradeable.sol\":\"EnumerableSetUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/libs/EnumerableSetUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @dev Library for managing\\r\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\r\\n * types.\\r\\n *\\r\\n * Sets have the following properties:\\r\\n *\\r\\n * - Elements are added, removed, and checked for existence in constant time\\r\\n * (O(1)).\\r\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\r\\n *\\r\\n * ```\\r\\n * contract Example {\\r\\n *     // Add the library methods\\r\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\r\\n *\\r\\n *     // Declare a set state variable\\r\\n *     EnumerableSet.AddressSet private mySet;\\r\\n * }\\r\\n * ```\\r\\n *\\r\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\r\\n * and `uint256` (`UintSet`) are supported.\\r\\n *\\r\\n * [WARNING]\\r\\n * ====\\r\\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\\r\\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\r\\n *\\r\\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\\r\\n * ====\\r\\n */\\r\\nlibrary EnumerableSetUpgradeable {\\r\\n    // To implement this library for multiple types with as little code\\r\\n    // repetition as possible, we write it in terms of a generic Set type with\\r\\n    // bytes32 values.\\r\\n    // The Set implementation uses private functions, and user-facing\\r\\n    // implementations (such as AddressSet) are just wrappers around the\\r\\n    // underlying Set.\\r\\n    // This means that we can only create new EnumerableSets for types that fit\\r\\n    // in bytes32.\\r\\n\\r\\n    struct Set {\\r\\n        // Storage of set values\\r\\n        bytes32[] _values;\\r\\n        // Position of the value in the `values` array, plus 1 because index 0\\r\\n        // means a value is not in the set.\\r\\n        mapping(bytes32 => uint256) _indexes;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Add a value to a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was added to the set, that is if it was not\\r\\n     * already present.\\r\\n     */\\r\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\r\\n        if (!_contains(set, value)) {\\r\\n            set._values.push(value);\\r\\n            // The value is stored at length-1, but we add 1 to all indexes\\r\\n            // and use 0 as a sentinel value\\r\\n            set._indexes[value] = set._values.length;\\r\\n            return true;\\r\\n        } else {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Removes a value from a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was removed from the set, that is if it was\\r\\n     * present.\\r\\n     */\\r\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\r\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\r\\n        uint256 valueIndex = set._indexes[value];\\r\\n\\r\\n        if (valueIndex != 0) {\\r\\n            // Equivalent to contains(set, value)\\r\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\r\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\r\\n            // This modifies the order of the array, as noted in {at}.\\r\\n\\r\\n            uint256 toDeleteIndex = valueIndex - 1;\\r\\n            uint256 lastIndex = set._values.length - 1;\\r\\n\\r\\n            if (lastIndex != toDeleteIndex) {\\r\\n                bytes32 lastValue = set._values[lastIndex];\\r\\n\\r\\n                // Move the last value to the index where the value to delete is\\r\\n                set._values[toDeleteIndex] = lastValue;\\r\\n                // Update the index for the moved value\\r\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\r\\n            }\\r\\n\\r\\n            // Delete the slot where the moved value was stored\\r\\n            set._values.pop();\\r\\n\\r\\n            // Delete the index for the deleted slot\\r\\n            delete set._indexes[value];\\r\\n\\r\\n            return true;\\r\\n        } else {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns true if the value is in the set. O(1).\\r\\n     */\\r\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\r\\n        return set._indexes[value] != 0;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of values on the set. O(1).\\r\\n     */\\r\\n    function _length(Set storage set) private view returns (uint256) {\\r\\n        return set._values.length;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\r\\n     *\\r\\n     * Note that there are no guarantees on the ordering of values inside the\\r\\n     * array, and it may change when more values are added or removed.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `index` must be strictly less than {length}.\\r\\n     */\\r\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\r\\n        return set._values[index];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Return the entire set in an array\\r\\n     *\\r\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\r\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\r\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\r\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\r\\n     */\\r\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\r\\n        return set._values;\\r\\n    }\\r\\n\\r\\n    // Bytes32Set\\r\\n\\r\\n    struct Bytes32Set {\\r\\n        Set _inner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Add a value to a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was added to the set, that is if it was not\\r\\n     * already present.\\r\\n     */\\r\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\r\\n        return _add(set._inner, value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Removes a value from a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was removed from the set, that is if it was\\r\\n     * present.\\r\\n     */\\r\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\r\\n        return _remove(set._inner, value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns true if the value is in the set. O(1).\\r\\n     */\\r\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\r\\n        return _contains(set._inner, value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of values in the set. O(1).\\r\\n     */\\r\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\r\\n        return _length(set._inner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\r\\n     *\\r\\n     * Note that there are no guarantees on the ordering of values inside the\\r\\n     * array, and it may change when more values are added or removed.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `index` must be strictly less than {length}.\\r\\n     */\\r\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\r\\n        return _at(set._inner, index);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Return the entire set in an array\\r\\n     *\\r\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\r\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\r\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\r\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\r\\n     */\\r\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\r\\n        return _values(set._inner);\\r\\n    }\\r\\n\\r\\n    // AddressSet\\r\\n\\r\\n    struct AddressSet {\\r\\n        Set _inner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Add a value to a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was added to the set, that is if it was not\\r\\n     * already present.\\r\\n     */\\r\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\r\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Removes a value from a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was removed from the set, that is if it was\\r\\n     * present.\\r\\n     */\\r\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\r\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns true if the value is in the set. O(1).\\r\\n     */\\r\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\r\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of values in the set. O(1).\\r\\n     */\\r\\n    function length(AddressSet storage set) internal view returns (uint256) {\\r\\n        return _length(set._inner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\r\\n     *\\r\\n     * Note that there are no guarantees on the ordering of values inside the\\r\\n     * array, and it may change when more values are added or removed.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `index` must be strictly less than {length}.\\r\\n     */\\r\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\r\\n        return address(uint160(uint256(_at(set._inner, index))));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Return the entire set in an array\\r\\n     *\\r\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\r\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\r\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\r\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\r\\n     */\\r\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\r\\n        bytes32[] memory store = _values(set._inner);\\r\\n        address[] memory result;\\r\\n\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            result := store\\r\\n        }\\r\\n\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    // UintSet\\r\\n\\r\\n    struct UintSet {\\r\\n        Set _inner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Add a value to a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was added to the set, that is if it was not\\r\\n     * already present.\\r\\n     */\\r\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\r\\n        return _add(set._inner, bytes32(value));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Removes a value from a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was removed from the set, that is if it was\\r\\n     * present.\\r\\n     */\\r\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\r\\n        return _remove(set._inner, bytes32(value));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns true if the value is in the set. O(1).\\r\\n     */\\r\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\r\\n        return _contains(set._inner, bytes32(value));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of values on the set. O(1).\\r\\n     */\\r\\n    function length(UintSet storage set) internal view returns (uint256) {\\r\\n        return _length(set._inner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\r\\n     *\\r\\n     * Note that there are no guarantees on the ordering of values inside the\\r\\n     * array, and it may change when more values are added or removed.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `index` must be strictly less than {length}.\\r\\n     */\\r\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\r\\n        return uint256(_at(set._inner, index));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Return the entire set in an array\\r\\n     *\\r\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\r\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\r\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\r\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\r\\n     */\\r\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\r\\n        bytes32[] memory store = _values(set._inner);\\r\\n        uint256[] memory result;\\r\\n\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            result := store\\r\\n        }\\r\\n\\r\\n        return result;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x0e86a06de431b687eaf963847642f6f5f857bcc08b5ad5334097669d83d46ab9\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/orchestators/BaluniV1Router.sol":{"BaluniV1Router":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"indexed":false,"internalType":"struct IBaluniV1Agent.Call[]","name":"calls","type":"tuple[]"},{"indexed":false,"internalType":"address[]","name":"tokensReturn","type":"address[]"}],"name":"Execute","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"message","type":"string"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Log","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"addToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"burnAmount","type":"uint256"}],"name":"burnERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"burnAmount","type":"uint256"}],"name":"burnUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"totalBaluni","type":"uint256"},{"internalType":"uint256","name":"totalERC20Balance","type":"uint256"},{"internalType":"uint256","name":"baluniAmount","type":"uint256"},{"internalType":"uint256","name":"tokenDecimals","type":"uint256"}],"name":"calculateTokenShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"callRebalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct IBaluniV1Agent.Call[]","name":"calls","type":"tuple[]"},{"internalType":"address[]","name":"tokensReturn","type":"address[]"}],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getAgentAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getUSDCShareValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVersion","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_registry","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"liquidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"liquidateAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"balAmountToMint","type":"uint256"}],"name":"mintWithUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"contract IBaluniV1Registry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_registry","type":"address"},{"internalType":"uint64","name":"version","type":"uint64"}],"name":"reinitialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"removeToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"balAmountToMint","type":"uint256"}],"name":"requiredUSDCtoMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_registry","type":"address"}],"name":"resetContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"token","type":"address"}],"name":"tokenValuation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalValuation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"addToken(address)":{"details":"Adds a token to the `tokens` set. Can only be called by the contract owner.","params":{"_token":"The address of the token to be added."}},"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"burnERC20(uint256)":{"details":"Burns a specified amount of BALUNI tokens from the caller's balance.","params":{"burnAmount":"The amount of BALUNI tokens to burn."}},"burnUSDC(uint256)":{"details":"Burns a specified amount of BAL tokens and performs token swaps on multiple tokens.","params":{"burnAmount":"The amount of BAL tokens to burn."}},"calculateTokenShare(uint256,uint256,uint256,uint256)":{"details":"Calculates the token share based on the total Baluni supply, total ERC20 balance, Baluni amount, and token decimals.","params":{"baluniAmount":"The amount of Baluni tokens.","tokenDecimals":"The number of decimals for the ERC20 token.","totalBaluni":"The total supply of Baluni tokens.","totalERC20Balance":"The total balance of the ERC20 token."},"returns":{"_0":"The calculated token share."}},"callRebalance(address[],uint256[],address,address,uint256,address)":{"details":"Calls the `rebalance` function of the `rebalancer` contract.","params":{"assets":"An array of addresses representing the assets to rebalance.","limit":"The maximum number of assets to rebalance.","receiver":"The address of the receiver.","sender":"The address of the sender.","weights":"An array of uint256 values representing the weights of the assets."}},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"execute((address,uint256,bytes)[],address[])":{"details":"Executes a series of calls to a BaluniV1Agent contract and handles token returns.","params":{"calls":"An array of IBaluniV1Agent.Call structs representing the calls to be executed.","tokensReturn":"An array of addresses representing the tokens to be returned."}},"getAgentAddress(address)":{"details":"Retrieves the agent address associated with a user.","params":{"_user":"The user's address."},"returns":{"_0":"The agent address."}},"getTokens()":{"details":"Returns an array of addresses representing the tokens.","returns":{"_0":"An array of addresses representing the tokens."}},"getUSDCShareValue(uint256)":{"details":"Calculates the value of a given amount of Baluni tokens in USDC.","params":{"amount":"The amount of Baluni tokens."},"returns":{"_0":"The calculated value of the Baluni tokens in USDC."}},"getVersion()":{"details":"Returns the version of the contract.","returns":{"_0":"The version string."}},"initialize(address)":{"details":"Initializes the BaluniV1Router contract. It sets the initial values for various variables and mints 1 ether to the contract's address. It also sets the USDC token address, WNATIVE token address, oracle address, Uniswap router address, and Uniswap factory address. Finally, it adds the USDC token address to the tokens set."},"liquidate(address)":{"details":"Liquidates the specified token by swapping it for USDC.","params":{"token":"The address of the token to be liquidated."}},"liquidateAll()":{"details":"Liquidates all tokens in the contract. This function iterates through all the tokens in the contract and calls the `liquidate` function for each token. Can only be called by the contract owner."},"mintWithUSDC(uint256)":{"details":"Mints a specified amount of BALUNI tokens in exchange for USDC.","params":{"balAmountToMint":"The amount of BALUNI tokens to mint."}},"name()":{"details":"Returns the name of the token."},"owner()":{"details":"Returns the address of the current owner."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"removeToken(address)":{"details":"Removes a token from the `tokens` set. Can only be called by the contract owner.","params":{"_token":"The address of the token to be removed."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"requiredUSDCtoMint(uint256)":{"details":"Calculates the amount of USDC required to mint a given amount of BAL tokens.","params":{"balAmountToMint":"The amount of BAL tokens to be minted."},"returns":{"_0":"The amount of USDC required to mint the specified amount of BAL tokens."}},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"tokenValuation(uint256,address)":{"details":"Calculates the valuation of a given amount of a specific ERC20 token.","params":{"amount":"The amount of the ERC20 token.","token":"The address of the ERC20 token."},"returns":{"_0":"The calculated valuation of the ERC20 token."}},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"totalValuation()":{"details":"Returns the total valuation of the Baluni ecosystem.","returns":{"_0":"The total valuation of the Baluni ecosystem."}},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unitPrice()":{"details":"Returns the unit price of the token in USDC.","returns":{"_0":"The unit price of the token in USDC."}},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x56A4 PUSH2 0x39 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x3F48 ADD MSTORE DUP2 DUP2 PUSH2 0x3F71 ADD MSTORE PUSH2 0x4121 ADD MSTORE PUSH2 0x56A4 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x277 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71DDCFB8 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0xE73FAA2D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x787 JUMPI DUP1 PUSH4 0xFE0A4DD1 EQ PUSH2 0x7A6 JUMPI DUP1 PUSH4 0xFE330A51 EQ PUSH2 0x7C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x754 JUMPI DUP1 PUSH4 0xEEDC3C50 EQ PUSH2 0x768 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD48BFCA7 GT PUSH2 0xAC JUMPI DUP1 PUSH4 0xD48BFCA7 EQ PUSH2 0x6B3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6D2 JUMPI DUP1 PUSH4 0xE67AD759 EQ PUSH2 0x735 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x675 JUMPI DUP1 PUSH4 0xCDF456E1 EQ PUSH2 0x694 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0x11B JUMPI DUP1 PUSH4 0xAA6CA808 GT PUSH2 0x101 JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x5ED JUMPI DUP1 PUSH4 0xAA95D893 EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x62D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5CE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x71DDCFB8 EQ PUSH2 0x521 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x540 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x55F JUMPI DUP1 PUSH4 0x8F2248BC EQ PUSH2 0x59B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2BDD955A GT PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x52D1902D GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x5FA7B584 GT PUSH2 0x191 JUMPI DUP1 PUSH4 0x5FA7B584 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x50D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x599F69F7 EQ PUSH2 0x47C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1DB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0x3C2066A9 EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x455 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2BDD955A EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0x2F865568 EQ PUSH2 0x407 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x24A JUMPI DUP1 PUSH4 0x23B872DD GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x27D54A92 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x295B9300 EQ PUSH2 0x3D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x1A168DA2 EQ PUSH2 0x35F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xCFC7386 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x2F5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH2 0x7E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x4BBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x2EE CALLDATASIZE PUSH1 0x4 PUSH2 0x4C0C JUMP JUMPDEST PUSH2 0x8D0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x379 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C0C JUMP JUMPDEST PUSH2 0xF1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH2 0x398 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C23 JUMP JUMPDEST PUSH2 0x1470 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BC PUSH2 0x3B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C61 JUMP JUMPDEST PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH2 0x1590 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH2 0x402 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C7C JUMP JUMPDEST PUSH2 0x1599 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x412 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x421 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C61 JUMP JUMPDEST PUSH2 0x16AD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x1A4D JUMP JUMPDEST PUSH2 0x2F3 PUSH2 0x463 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D84 JUMP JUMPDEST PUSH2 0x1AD5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x473 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH2 0x1AF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x487 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x496 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E19 JUMP JUMPDEST PUSH2 0x1B22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x4B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C61 JUMP JUMPDEST PUSH2 0x1CB1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH2 0x4D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C61 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x518 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x1CC3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH2 0x53B CALLDATASIZE PUSH1 0x4 PUSH2 0x4C0C JUMP JUMPDEST PUSH2 0x1CD4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x3BC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x5B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0x1CDE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH2 0x1E14 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH2 0x5E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x1E65 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x601 PUSH2 0x1E72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x4F3F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x619 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH2 0x628 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C0C JUMP JUMPDEST PUSH2 0x1E7D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x638 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x680 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x68F CALLDATASIZE PUSH1 0x4 PUSH2 0x4C61 JUMP JUMPDEST PUSH2 0x1EE4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x3BC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x6CD CALLDATASIZE PUSH1 0x4 PUSH2 0x4C61 JUMP JUMPDEST PUSH2 0x2199 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH2 0x6EC CALLDATASIZE PUSH1 0x4 PUSH2 0x4F51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x740 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x74F CALLDATASIZE PUSH1 0x4 PUSH2 0x4C61 JUMP JUMPDEST PUSH2 0x21AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH2 0x21E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x773 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x782 CALLDATASIZE PUSH1 0x4 PUSH2 0x5015 JUMP JUMPDEST PUSH2 0x21F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x792 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x7A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C61 JUMP JUMPDEST PUSH2 0x2CC9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x7C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C0C JUMP JUMPDEST PUSH2 0x2D1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH2 0x7DF CALLDATASIZE PUSH1 0x4 PUSH2 0x5124 JUMP JUMPDEST PUSH2 0x380D JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP2 PUSH2 0x835 SWAP1 PUSH2 0x5153 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x861 SWAP1 PUSH2 0x5153 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x883 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x88F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x8C4 DUP2 DUP6 DUP6 PUSH2 0x381A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8D8 PUSH2 0x382C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1D8CF425 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x3B19E84A SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x91F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x943 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BF01E9B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x996 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9BA SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x85462D6F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA0D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA31 SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4F4608A2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA84 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA8 SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xAB3 PUSH2 0x38AD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xADE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH2 0xAEC DUP5 DUP11 PUSH2 0x51CB JUMP JUMPDEST PUSH2 0xAF6 SWAP2 SWAP1 PUSH2 0x51E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH4 0x23B872DD CALLER ADDRESS PUSH2 0xB18 PUSH5 0xE8D4A51000 DUP7 PUSH2 0x51E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB81 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0x5201 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBEA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC0E SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC74 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC98 SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 GT PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C2042414C554E4920737570706C792063616E6E6F74206265207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x726F000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD23 PUSH5 0xE8D4A51000 DUP5 PUSH2 0x51E2 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xD72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555344432062616C616E636520697320696E73756666696369656E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH2 0xD81 PUSH5 0xE8D4A51000 DUP5 PUSH2 0x51E2 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xDD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436865636B2074686520746F6B656E20616C6C6F77616E636500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH2 0xDDA CALLER DUP12 PUSH2 0x3B0C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP13 SWAP1 MSTORE PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH0 DUP7 DUP9 PUSH2 0xE25 PUSH5 0xE8D4A51000 DUP8 PUSH2 0x51E2 JUMP JUMPDEST PUSH2 0xE2F SWAP2 SWAP1 PUSH2 0x51CB JUMP JUMPDEST PUSH2 0xE39 SWAP2 SWAP1 PUSH2 0x51E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP SWAP1 DUP11 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE89 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEAD SWAP2 SWAP1 PUSH2 0x5201 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP PUSH2 0xEE1 PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xF17 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF24 PUSH2 0x382C JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xF99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E20616D6F756E74206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1D8CF425 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x3B19E84A SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFE0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1004 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x105C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472656173757279206E6F742073657400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x10D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742042414C00000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH0 PUSH2 0x10E3 DUP4 PUSH2 0x3B7F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0x1135 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4665652063616C63756C6174696F6E206572726F720000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x1143 DUP3 PUSH2 0x5E8 DUP4 DUP7 PUSH2 0x5220 JUMP JUMPDEST POP PUSH0 JUMPDEST PUSH2 0x114F PUSH0 PUSH2 0x3C8E JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1401 JUMPI PUSH0 PUSH2 0x1161 DUP2 DUP4 PUSH2 0x3C97 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH0 PUSH2 0x11E2 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1233 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C20737570706C792069732030000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1277 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x129B SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 PUSH2 0x12B2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS EQ JUMPDEST ISZERO PUSH2 0x12BF JUMPI POP POP POP PUSH2 0x13F9 JUMP JUMPDEST PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12FC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1320 SWAP2 SWAP1 PUSH2 0x5233 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH2 0x1332 DUP5 DUP5 DUP10 DUP6 PUSH2 0x3CA2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0x1384 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53686172652063616C63756C6174696F6E206572726F72000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13CE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13F2 SWAP2 SWAP1 PUSH2 0x5201 JUMP JUMPDEST POP POP POP POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1146 JUMP JUMPDEST POP PUSH2 0x140C CALLER DUP3 PUSH2 0x3DAE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH2 0xEE1 PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST PUSH0 CALLER PUSH2 0x147D DUP6 DUP3 DUP6 PUSH2 0x3DFB JUMP JUMPDEST PUSH2 0x1488 DUP6 DUP6 DUP6 PUSH2 0x3EAE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF5D2D998 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14E7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x150B SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x27D54A9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0x27D54A92 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x156C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x148E SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST PUSH0 PUSH2 0xF17 PUSH2 0x38AD JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15EB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x160F SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0xB27B5E7500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE SWAP2 SWAP3 POP DUP3 AND SWAP1 PUSH4 0xB27B5E75 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1681 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16A5 SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x6C9C007800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x6C9C0078 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x170D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1731 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x82755EBB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1784 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17A8 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17EF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1813 SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP DUP3 ISZERO ISZERO SWAP2 DUP7 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x187F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18A3 SWAP2 SWAP1 PUSH2 0x5201 JUMP JUMPDEST POP DUP1 PUSH2 0x18B0 JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2D6BC8EA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x64 DUP3 ADD MSTORE SWAP1 DUP5 AND SWAP1 PUSH4 0x2D6BC8EA SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1945 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1942 SWAP2 DUP2 ADD SWAP1 PUSH2 0x51A0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1A3E JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x5EFAAEBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x84 DUP3 ADD MSTORE PUSH0 SWAP2 DUP6 AND SWAP1 PUSH4 0x5EFAAEBB SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19C9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19ED SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1A3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75746920486F702053776170204661696C65642C20547279204275726E2829 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A55 PUSH2 0x382C JUMP JUMPDEST PUSH0 PUSH2 0x1A5F PUSH0 PUSH2 0x3C8E JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1AA8 JUMPI PUSH0 PUSH2 0x1A76 DUP2 DUP4 PUSH2 0x3C97 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND SUB PUSH2 0x1A95 JUMPI POP PUSH2 0x1AA0 JUMP JUMPDEST PUSH2 0x1A9E DUP2 PUSH2 0x16AD JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1A63 JUMP JUMPDEST POP POP PUSH2 0x1AD3 PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1ADD PUSH2 0x3F3D JUMP JUMPDEST PUSH2 0x1AE6 DUP3 PUSH2 0x400D JUMP JUMPDEST PUSH2 0x1AF0 DUP3 DUP3 PUSH2 0x4015 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1AFD PUSH2 0x4116 JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x1BF01E9B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x1BF01E9B SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B82 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BA6 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BF9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C1D SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH32 0xF0BF771400000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH4 0xF0BF7714 PUSH2 0x1C77 DUP4 DUP15 DUP15 DUP15 DUP15 DUP13 DUP16 DUP16 DUP14 PUSH1 0x24 DUP10 ADD PUSH2 0x52D8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C8E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CA0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1CB9 PUSH2 0x4178 JUMP JUMPDEST PUSH2 0x1AF0 PUSH0 DUP3 PUSH2 0x41EC JUMP JUMPDEST PUSH2 0x1CCB PUSH2 0x4178 JUMP JUMPDEST PUSH2 0x1AD3 PUSH0 PUSH2 0x4200 JUMP JUMPDEST PUSH0 PUSH2 0x8CA DUP3 PUSH2 0x427D JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1D2C JUMPI POP DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP2 AND LT ISZERO JUMPDEST ISZERO PUSH2 0x1D63 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 SWAP1 SWAP3 AND DUP3 OR OR DUP3 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE DUP2 SLOAD PUSH9 0xFF0000000000000000 NOT AND DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP2 PUSH2 0x835 SWAP1 PUSH2 0x5153 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x8C4 DUP2 DUP6 DUP6 PUSH2 0x3EAE JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF17 PUSH0 PUSH2 0x43B4 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1E87 PUSH2 0x38AD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1EB2 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH2 0x1EC0 DUP5 DUP8 PUSH2 0x51CB JUMP JUMPDEST PUSH2 0x1ECA SWAP2 SWAP1 PUSH2 0x51E2 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EDB PUSH5 0xE8D4A51000 DUP3 PUSH2 0x51E2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x1F2E JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x1F4A JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1F58 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1F8F JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x1FDA JUMPI DUP5 SLOAD PUSH9 0xFF0000000000000000 NOT AND PUSH9 0x10000000000000000 OR DUP6 SSTORE JUMPDEST PUSH2 0x204E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x42616C756E690000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x42414C554E490000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x43C0 JUMP JUMPDEST PUSH2 0x2057 CALLER PUSH2 0x43D2 JUMP JUMPDEST PUSH2 0x205F PUSH2 0x43E3 JUMP JUMPDEST PUSH2 0x2067 PUSH2 0x43F3 JUMP JUMPDEST PUSH2 0x2079 ADDRESS PUSH8 0xDE0B6B3A7640000 PUSH2 0x3B0C JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH32 0x1BF01E9B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH4 0x1BF01E9B SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20F6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x211A SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0x1A3E JUMPI DUP5 SLOAD PUSH9 0xFF0000000000000000 NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x21A1 PUSH2 0x4178 JUMP JUMPDEST PUSH2 0x1AF0 PUSH0 DUP3 PUSH2 0x43FB JUMP JUMPDEST PUSH2 0x21B3 PUSH2 0x4178 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0xF17 PUSH8 0xDE0B6B3A7640000 PUSH2 0x427D JUMP JUMPDEST PUSH2 0x21FC PUSH2 0x382C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xF5D2D99800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xF5D2D998 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x225C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2280 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3E6DFA36 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22D3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22F7 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6C9C0078 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x234A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x236E SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BF01E9B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23C1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23E5 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x243D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4167656E7420666163746F7279206E6F74207365740000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9B76A5CD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x9B76A5CD SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x249B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24BF SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH0 DUP7 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24DC JUMPI PUSH2 0x24DC PUSH2 0x4CAA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2505 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP8 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2523 JUMPI PUSH2 0x2523 PUSH2 0x4CAA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x254C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP9 MLOAD DUP2 LT ISZERO PUSH2 0x264B JUMPI PUSH2 0x257D PUSH0 DUP11 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2570 JUMPI PUSH2 0x2570 PUSH2 0x5387 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x440F JUMP JUMPDEST ISZERO DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2590 JUMPI PUSH2 0x2590 PUSH2 0x5387 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP9 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x25B4 JUMPI PUSH2 0x25B4 PUSH2 0x5387 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2602 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2626 SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2638 JUMPI PUSH2 0x2638 PUSH2 0x5387 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x2551 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0xEEDC3C5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xEEDC3C50 SWAP1 PUSH2 0x2693 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x539B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26BC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 JUMPDEST DUP9 MLOAD DUP2 LT ISZERO PUSH2 0x2C97 JUMPI PUSH0 DUP10 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x26DE JUMPI PUSH2 0x26DE PUSH2 0x5387 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2730 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2754 SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP11 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH2 0xBB8 PUSH1 0x44 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 DUP12 AND SWAP1 PUSH4 0x1698EE82 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27AD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27D1 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH2 0x1F4 PUSH1 0x44 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 DUP13 AND SWAP1 PUSH4 0x1698EE82 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x282A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x284E SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH2 0x1F4 PUSH1 0x44 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 DUP14 AND SWAP1 PUSH4 0x1698EE82 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x28A7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28CB SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP13 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH2 0xBB8 PUSH1 0x44 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 DUP15 AND SWAP1 PUSH4 0x1698EE82 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2924 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2948 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO ISZERO DUP1 PUSH2 0x296A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST DUP1 PUSH2 0x297D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST DUP1 PUSH2 0x2990 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST SWAP1 POP DUP10 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x29A4 JUMPI PUSH2 0x29A4 PUSH2 0x5387 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP1 ISZERO PUSH2 0x29B5 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x29C6 JUMPI PUSH2 0x29C4 PUSH0 DUP9 PUSH2 0x43FB JUMP JUMPDEST POP JUMPDEST PUSH0 DUP10 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x29D9 JUMPI PUSH2 0x29D9 PUSH2 0x5387 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 PUSH2 0x29EC SWAP2 SWAP1 PUSH2 0x5220 JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x2A77 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A3D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A61 SWAP2 SWAP1 PUSH2 0x5201 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x2CA0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1D8CF425 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x3B19E84A SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2ABE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2AE2 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x85462D6F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B35 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B59 SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4F4608A2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BAC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2BD0 SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP DUP13 DUP13 DUP2 MLOAD DUP2 LT PUSH2 0x2BE4 JUMPI PUSH2 0x2BE4 PUSH2 0x5387 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 GT ISZERO PUSH2 0x2C80 JUMPI PUSH0 DUP2 PUSH2 0x2BFF DUP5 DUP8 PUSH2 0x51CB JUMP JUMPDEST PUSH2 0x2C09 SWAP2 SWAP1 PUSH2 0x51E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP SWAP1 DUP14 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C59 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C7D SWAP2 SWAP1 PUSH2 0x5201 JUMP JUMPDEST POP POP JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP10 ADD SWAP9 POP PUSH2 0x26C2 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMPDEST PUSH2 0x1AF0 PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST PUSH2 0x2CD1 PUSH2 0x4178 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2D13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH2 0xEE1 DUP2 PUSH2 0x4200 JUMP JUMPDEST PUSH2 0x2D24 PUSH2 0x382C JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x2D99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E20616D6F756E74206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x3E6DFA3600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x3E6DFA36 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DF9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E1D SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2E75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E6973776170466163746F7279206E6F742073657400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1D8CF425 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x3B19E84A SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2EBC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EE0 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2F38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472656173757279206E6F742073657400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x6C9C007800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x6C9C0078 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F98 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FBC SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3014 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x574E4154495645206E6F74207365740000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH0 PUSH2 0x301E DUP6 PUSH2 0x3B7F JUMP JUMPDEST SWAP1 POP DUP5 DUP2 GT ISZERO PUSH2 0x3070 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4665652063616C63756C6174696F6E206572726F720000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH0 PUSH2 0x307B DUP3 DUP8 PUSH2 0x5220 JUMP JUMPDEST SWAP1 POP PUSH2 0x3087 DUP5 DUP3 PUSH2 0x1E65 JUMP JUMPDEST POP PUSH0 JUMPDEST PUSH2 0x3093 PUSH0 PUSH2 0x3C8E JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x379B JUMPI PUSH0 PUSH2 0x30A5 DUP2 DUP4 PUSH2 0x3C97 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x30FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH0 PUSH2 0x3126 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x3177 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C20737570706C792069732030000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31BB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31DF SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 PUSH2 0x31F6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS EQ JUMPDEST ISZERO PUSH2 0x3203 JUMPI POP POP POP PUSH2 0x3793 JUMP JUMPDEST PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3240 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3264 SWAP2 SWAP1 PUSH2 0x5233 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH2 0x3276 DUP5 DUP5 DUP11 DUP6 PUSH2 0x3CA2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0x32C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53686172652063616C63756C6174696F6E206572726F72000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP7 AND SUB PUSH2 0x335B JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x332C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3350 SWAP2 SWAP1 PUSH2 0x5201 JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0x3793 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x82755EBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x82755EBB SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x33BB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33DF SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3437 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42616C756E6953776170706572206E6F74207365740000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP8 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x349C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34C0 SWAP2 SWAP1 PUSH2 0x5201 JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2D6BC8EA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE CALLER PUSH1 0x64 DUP3 ADD MSTORE SWAP1 DUP3 AND SWAP1 PUSH4 0x2D6BC8EA SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3556 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3553 SWAP2 DUP2 ADD SWAP1 PUSH2 0x51A0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x36C8 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x5EFAAEBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP13 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE CALLER PUSH1 0x84 DUP3 ADD MSTORE PUSH0 SWAP2 DUP4 AND SWAP1 PUSH4 0x5EFAAEBB SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x35DA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x35FE SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x364F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C7469486F7053776170204661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x369D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x36C1 SWAP2 SWAP1 PUSH2 0x5201 JUMP JUMPDEST POP POP PUSH2 0x378C JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x3717 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53776170204661696C6564000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3765 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3789 SWAP2 SWAP1 PUSH2 0x5201 JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x308A JUMP JUMPDEST POP PUSH2 0x37A6 CALLER DUP4 PUSH2 0x3DAE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP PUSH2 0xEE1 PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x1EDB DUP6 DUP6 DUP6 DUP6 PUSH2 0x3CA2 JUMP JUMPDEST PUSH2 0x3827 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x4430 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE ADD PUSH2 0x38A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP1 DUP1 JUMPDEST PUSH2 0x38BA PUSH0 PUSH2 0x3C8E JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x3B06 JUMPI PUSH0 PUSH2 0x38CC DUP2 DUP4 PUSH2 0x3C97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3913 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3937 SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0x3947 JUMPI POP POP PUSH2 0x3AFE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x397F JUMPI PUSH2 0x396C DUP2 PUSH5 0xE8D4A51000 PUSH2 0x51CB JUMP JUMPDEST PUSH2 0x3976 SWAP1 DUP6 PUSH2 0x5446 JUMP JUMPDEST SWAP4 POP POP POP PUSH2 0x3AFE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xBB3BA04C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xBB3BA04C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x39DF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A03 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0xB27B5E7500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0xB27B5E75 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A78 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A9C SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x3AED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E2076616C756174696F6E206973207A65726F000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x3AF7 DUP2 DUP8 PUSH2 0x5446 JUMP JUMPDEST SWAP6 POP POP POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x38B1 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3B4E JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x1AF0 PUSH0 DUP4 DUP4 PUSH2 0x4558 JUMP JUMPDEST PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x85462D6F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3BD1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BF5 SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4F4608A2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C48 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C6C SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH2 0x3C7A DUP5 DUP3 PUSH2 0x5220 JUMP JUMPDEST PUSH2 0x3C84 SWAP1 DUP8 PUSH2 0x51CB JUMP JUMPDEST PUSH2 0x1EDB SWAP2 SWAP1 PUSH2 0x51E2 JUMP JUMPDEST PUSH0 PUSH2 0x8CA DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x148E DUP4 DUP4 PUSH2 0x46BD JUMP JUMPDEST PUSH0 DUP1 DUP6 GT PUSH2 0x3CF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C20737570706C792063616E6E6F74206265207A65726F0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x12 DUP3 GT ISZERO PUSH2 0x3D43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20646563696D616C732073686F756C64206265203C3D2031380000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH2 0x3D51 DUP6 PUSH1 0x12 PUSH2 0x5220 JUMP JUMPDEST PUSH2 0x3D5C SWAP1 PUSH1 0xA PUSH2 0x5539 JUMP JUMPDEST SWAP1 POP PUSH1 0x12 DUP6 LT ISZERO PUSH2 0x3D84 JUMPI PUSH2 0x3D71 DUP2 DUP10 PUSH2 0x51E2 JUMP JUMPDEST SWAP3 POP PUSH2 0x3D7D DUP2 DUP8 PUSH2 0x51E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D8B JUMP JUMPDEST DUP8 SWAP3 POP DUP6 SWAP2 POP JUMPDEST PUSH0 DUP4 PUSH2 0x3D97 DUP10 DUP6 PUSH2 0x51CB JUMP JUMPDEST PUSH2 0x3DA1 SWAP2 SWAP1 PUSH2 0x51E2 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3DF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x1AF0 DUP3 PUSH0 DUP4 PUSH2 0x4558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x3EA8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x3E9A JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x3EA8 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x4430 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3EF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3F32 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x3827 DUP4 DUP4 DUP4 PUSH2 0x4558 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x3FD6 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3FCA PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1AD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEE1 PUSH2 0x4178 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x406F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x406C SWAP2 DUP2 ADD SWAP1 PUSH2 0x51A0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x40B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x410C JUMPI PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x3827 DUP4 DUP4 PUSH2 0x46E3 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1AD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x41AA PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1AD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH0 PUSH2 0x148E DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4738 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x42CF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42F3 SWAP2 SWAP1 PUSH2 0x5233 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH2 0x4321 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x4372 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C20737570706C792063616E6E6F74206265207A65726F0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH0 PUSH2 0x437B PUSH2 0x38AD JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x4388 DUP3 DUP8 PUSH2 0x51CB JUMP JUMPDEST PUSH2 0x4392 SWAP2 SWAP1 PUSH2 0x51E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x439F DUP4 PUSH1 0x12 PUSH2 0x5220 JUMP JUMPDEST PUSH2 0x43AA SWAP1 PUSH1 0xA PUSH2 0x5539 JUMP JUMPDEST PUSH2 0x1EDB SWAP1 DUP6 PUSH2 0x51E2 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x148E DUP4 PUSH2 0x481B JUMP JUMPDEST PUSH2 0x43C8 PUSH2 0x4874 JUMP JUMPDEST PUSH2 0x1AF0 DUP3 DUP3 PUSH2 0x48DB JUMP JUMPDEST PUSH2 0x43DA PUSH2 0x4874 JUMP JUMPDEST PUSH2 0xEE1 DUP2 PUSH2 0x493E JUMP JUMPDEST PUSH2 0x43EB PUSH2 0x4874 JUMP JUMPDEST PUSH2 0x1AD3 PUSH2 0x4946 JUMP JUMPDEST PUSH2 0x1AD3 PUSH2 0x4874 JUMP JUMPDEST PUSH0 PUSH2 0x148E DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x494E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x148E JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x4493 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x44D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0x1A46 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x4549 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x45A5 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x459A SWAP2 SWAP1 PUSH2 0x5446 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x462E SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x4610 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x464C JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x466A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x46AF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x46D2 JUMPI PUSH2 0x46D2 PUSH2 0x5387 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x46EC DUP3 PUSH2 0x499A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x4730 JUMPI PUSH2 0x3827 DUP3 DUP3 PUSH2 0x4A36 JUMP JUMPDEST PUSH2 0x1AF0 PUSH2 0x4A9F JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x4812 JUMPI PUSH0 PUSH2 0x475A PUSH1 0x1 DUP4 PUSH2 0x5220 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH2 0x476D SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x5220 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x47CC JUMPI PUSH0 DUP7 PUSH0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x478B JUMPI PUSH2 0x478B PUSH2 0x5387 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x47AB JUMPI PUSH2 0x47AB PUSH2 0x5387 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x47DD JUMPI PUSH2 0x47DD PUSH2 0x5544 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x8CA JUMP JUMPDEST PUSH0 SWAP2 POP POP PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x4868 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x4854 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1AD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x48E3 PUSH2 0x4874 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x492F DUP5 DUP3 PUSH2 0x559C JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0x3EA8 DUP4 DUP3 PUSH2 0x559C JUMP JUMPDEST PUSH2 0x2CD1 PUSH2 0x4874 JUMP JUMPDEST PUSH2 0x3B59 PUSH2 0x4874 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x4993 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x8CA JUMP JUMPDEST POP PUSH0 PUSH2 0x8CA JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x49E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x4A52 SWAP2 SWAP1 PUSH2 0x5658 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x4A8A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4A8F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1EDB DUP6 DUP4 DUP4 PUSH2 0x4AD7 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x1AD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x4AEC JUMPI PUSH2 0x4AE7 DUP3 PUSH2 0x4B4C JUMP JUMPDEST PUSH2 0x148E JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x4B03 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x4B45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD0B JUMP JUMPDEST POP DUP1 PUSH2 0x148E JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x4B5C JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x148E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4B8E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4BF3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4BFE DUP2 PUSH2 0x4BCE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C1C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4C35 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x4C40 DUP2 PUSH2 0x4BCE JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x4C50 DUP2 PUSH2 0x4BCE JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C71 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x148E DUP2 PUSH2 0x4BCE JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4C8D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4C9F DUP2 PUSH2 0x4BCE JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4CE1 JUMPI PUSH2 0x4CE1 PUSH2 0x4CAA JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4D10 JUMPI PUSH2 0x4D10 PUSH2 0x4CAA JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4D27 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4D41 JUMPI PUSH2 0x4D41 PUSH2 0x4CAA JUMP JUMPDEST PUSH2 0x4D54 PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0x4CE7 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x4D68 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4D95 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4DA0 DUP2 PUSH2 0x4BCE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4DBB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4DC7 DUP6 DUP3 DUP7 ADD PUSH2 0x4D18 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x4DE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4DF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x4E12 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x4E30 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4E47 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4E53 DUP13 DUP4 DUP14 ADD PUSH2 0x4DD1 JUMP JUMPDEST SWAP1 SWAP11 POP SWAP9 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4E6B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E78 DUP12 DUP3 DUP13 ADD PUSH2 0x4DD1 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x4E8C DUP2 PUSH2 0x4BCE JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH2 0x4E9C DUP2 PUSH2 0x4BCE JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH2 0x4EB3 DUP2 PUSH2 0x4BCE JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4ED5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4EE0 DUP2 PUSH2 0x4BCE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x4C9F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4F34 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4F0F JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x148E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4EFC JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4F62 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4F6D DUP2 PUSH2 0x4BCE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4C9F DUP2 PUSH2 0x4BCE JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4F96 JUMPI PUSH2 0x4F96 PUSH2 0x4CAA JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4FAF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x4FC4 PUSH2 0x4FBF DUP4 PUSH2 0x4F7D JUMP JUMPDEST PUSH2 0x4CE7 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x4FE5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x500A JUMPI DUP1 CALLDATALOAD PUSH2 0x4FFD DUP2 PUSH2 0x4BCE JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x4FEA JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5026 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x503D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5050 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x5060 PUSH2 0x4FBF DUP4 PUSH2 0x4F7D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x507E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x5101 JUMPI DUP1 CALLDATALOAD DUP7 DUP2 GT ISZERO PUSH2 0x5098 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP8 ADD PUSH1 0x60 DUP2 DUP14 SUB PUSH1 0x1F NOT ADD DUP2 SGT ISZERO PUSH2 0x50AE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x50B6 PUSH2 0x4CBE JUMP JUMPDEST DUP7 DUP4 ADD CALLDATALOAD PUSH2 0x50C3 DUP2 PUSH2 0x4BCE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD DUP8 DUP3 ADD MSTORE SWAP1 DUP3 ADD CALLDATALOAD SWAP1 DUP9 DUP3 GT ISZERO PUSH2 0x50DF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x50ED DUP15 DUP9 DUP5 DUP7 ADD ADD PUSH2 0x4D18 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE DUP6 MSTORE POP POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x5082 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x5117 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC7 DUP6 DUP3 DUP7 ADD PUSH2 0x4FA0 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x5137 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x5167 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3B06 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5195 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x148E DUP2 PUSH2 0x4BCE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x8CA JUMPI PUSH2 0x8CA PUSH2 0x51B7 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x51FC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5211 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x148E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x8CA JUMPI PUSH2 0x8CA PUSH2 0x51B7 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5243 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x148E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP4 MSTORE PUSH0 PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP3 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4F34 JUMPI DUP2 CALLDATALOAD PUSH2 0x5274 DUP2 PUSH2 0x4BCE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x5261 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x52BF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x5 SHL DUP1 DUP4 PUSH1 0x20 DUP8 ADD CALLDATACOPY SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xE0 DUP1 DUP3 MSTORE DUP11 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x100 DUP5 ADD SWAP1 DUP3 DUP15 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5311 JUMPI DUP2 MLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x52F5 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x5327 DUP2 DUP13 DUP15 PUSH2 0x5253 JUMP JUMPDEST SWAP2 POP POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x533D DUP2 DUP10 DUP12 PUSH2 0x528F JUMP JUMPDEST SWAP2 POP POP DUP6 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x535B PUSH1 0x80 DUP4 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0xC0 DUP4 ADD MSTORE SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP1 DUP4 ADD PUSH1 0x40 DUP5 MSTORE DUP1 DUP7 MLOAD DUP1 DUP4 MSTORE PUSH1 0x60 SWAP3 POP PUSH1 0x60 DUP7 ADD SWAP2 POP PUSH1 0x60 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD PUSH1 0x20 DUP1 DUP11 ADD PUSH0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x5433 JUMPI DUP10 DUP5 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA0 ADD DUP7 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP4 DUP2 ADD MLOAD DUP5 DUP7 ADD MSTORE DUP9 ADD MLOAD DUP9 DUP6 ADD DUP9 SWAP1 MSTORE PUSH2 0x5420 DUP9 DUP7 ADD DUP3 PUSH2 0x4B8E JUMP JUMPDEST SWAP7 DUP5 ADD SWAP7 SWAP5 POP POP SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x53C5 JUMP JUMPDEST POP POP DUP8 DUP3 SUB SWAP1 DUP9 ADD MSTORE PUSH2 0x3DA1 DUP2 DUP10 PUSH2 0x4EFC JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x8CA JUMPI PUSH2 0x8CA PUSH2 0x51B7 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x5493 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x5479 JUMPI PUSH2 0x5479 PUSH2 0x51B7 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x5486 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x545E JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x54A9 JUMPI POP PUSH1 0x1 PUSH2 0x8CA JUMP JUMPDEST DUP2 PUSH2 0x54B5 JUMPI POP PUSH0 PUSH2 0x8CA JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x54CB JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x54D5 JUMPI PUSH2 0x54F1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x8CA JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x54E6 JUMPI PUSH2 0x54E6 PUSH2 0x51B7 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x8CA JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x5514 JUMPI POP DUP2 DUP2 EXP PUSH2 0x8CA JUMP JUMPDEST PUSH2 0x551E DUP4 DUP4 PUSH2 0x5459 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x5531 JUMPI PUSH2 0x5531 PUSH2 0x51B7 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x148E DUP4 DUP4 PUSH2 0x549B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3827 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x557D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A46 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x5589 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x55B6 JUMPI PUSH2 0x55B6 PUSH2 0x4CAA JUMP JUMPDEST PUSH2 0x55CA DUP2 PUSH2 0x55C4 DUP5 SLOAD PUSH2 0x5153 JUMP JUMPDEST DUP5 PUSH2 0x5558 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x55FD JUMPI PUSH0 DUP5 ISZERO PUSH2 0x55E6 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1A3E JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x562B JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x560C JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x5648 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 PUSH3 0x52BFC2 PUSH29 0x2B48F96F2F9C6B6A164639A1E5E27A11BA511B08DE0764271D664736F PUSH13 0x63430008190033000000000000 ","sourceMap":"2383:22992:25:-:0;;;1171:4:2;1128:48;;2383:22992:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@UPGRADE_INTERFACE_VERSION_472":{"entryPoint":null,"id":472,"parameterSlots":0,"returnSlots":0},"@__ERC20_init_698":{"entryPoint":17344,"id":698,"parameterSlots":2,"returnSlots":0},"@__ERC20_init_unchained_726":{"entryPoint":18651,"id":726,"parameterSlots":2,"returnSlots":0},"@__Ownable_init_54":{"entryPoint":17362,"id":54,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_unchained_81":{"entryPoint":18750,"id":81,"parameterSlots":1,"returnSlots":0},"@__ReentrancyGuard_init_1333":{"entryPoint":17379,"id":1333,"parameterSlots":0,"returnSlots":0},"@__ReentrancyGuard_init_unchained_1351":{"entryPoint":18758,"id":1351,"parameterSlots":0,"returnSlots":0},"@__UUPSUpgradeable_init_502":{"entryPoint":17395,"id":502,"parameterSlots":0,"returnSlots":0},"@_add_2993":{"entryPoint":18766,"id":2993,"parameterSlots":2,"returnSlots":1},"@_approve_1130":{"entryPoint":14362,"id":1130,"parameterSlots":3,"returnSlots":0},"@_approve_1198":{"entryPoint":17456,"id":1198,"parameterSlots":4,"returnSlots":0},"@_at_3127":{"entryPoint":18109,"id":3127,"parameterSlots":2,"returnSlots":1},"@_authorizeUpgrade_3700":{"entryPoint":16397,"id":3700,"parameterSlots":1,"returnSlots":0},"@_burn_1112":{"entryPoint":15790,"id":1112,"parameterSlots":2,"returnSlots":0},"@_calculateBaluniToUSDC_5054":{"entryPoint":17021,"id":5054,"parameterSlots":1,"returnSlots":1},"@_calculateERC20Share_5136":{"entryPoint":15522,"id":5136,"parameterSlots":4,"returnSlots":1},"@_calculateNetAmountAfterFee_5263":{"entryPoint":15231,"id":5263,"parameterSlots":1,"returnSlots":1},"@_checkInitializing_370":{"entryPoint":18548,"id":370,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_1871":{"entryPoint":19103,"id":1871,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_578":{"entryPoint":16662,"id":578,"parameterSlots":0,"returnSlots":0},"@_checkOwner_122":{"entryPoint":16760,"id":122,"parameterSlots":0,"returnSlots":0},"@_checkProxy_562":{"entryPoint":16189,"id":562,"parameterSlots":0,"returnSlots":0},"@_contains_3096":{"entryPoint":null,"id":3096,"parameterSlots":2,"returnSlots":1},"@_getERC20Storage_682":{"entryPoint":null,"id":682,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_447":{"entryPoint":null,"id":447,"parameterSlots":0,"returnSlots":1},"@_getInitializedVersion_427":{"entryPoint":null,"id":427,"parameterSlots":0,"returnSlots":1},"@_getOwnableStorage_25":{"entryPoint":null,"id":25,"parameterSlots":0,"returnSlots":1},"@_getReentrancyGuardStorage_1321":{"entryPoint":null,"id":1321,"parameterSlots":0,"returnSlots":1},"@_isInitializing_438":{"entryPoint":null,"id":438,"parameterSlots":0,"returnSlots":1},"@_length_3110":{"entryPoint":null,"id":3110,"parameterSlots":1,"returnSlots":1},"@_mint_1079":{"entryPoint":15116,"id":1079,"parameterSlots":2,"returnSlots":0},"@_msgSender_1275":{"entryPoint":null,"id":1275,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_1403":{"entryPoint":15193,"id":1403,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_1387":{"entryPoint":14380,"id":1387,"parameterSlots":0,"returnSlots":0},"@_remove_3077":{"entryPoint":18232,"id":3077,"parameterSlots":2,"returnSlots":1},"@_revert_2238":{"entryPoint":19276,"id":2238,"parameterSlots":1,"returnSlots":0},"@_setImplementation_1657":{"entryPoint":18842,"id":1657,"parameterSlots":1,"returnSlots":0},"@_spendAllowance_1246":{"entryPoint":15867,"id":1246,"parameterSlots":3,"returnSlots":0},"@_totalValuationScaled_5227":{"entryPoint":14509,"id":5227,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_193":{"entryPoint":16896,"id":193,"parameterSlots":1,"returnSlots":0},"@_transfer_954":{"entryPoint":16046,"id":954,"parameterSlots":3,"returnSlots":0},"@_update_1046":{"entryPoint":17752,"id":1046,"parameterSlots":3,"returnSlots":0},"@_upgradeToAndCallUUPS_629":{"entryPoint":16405,"id":629,"parameterSlots":2,"returnSlots":0},"@_values_3141":{"entryPoint":18459,"id":3141,"parameterSlots":1,"returnSlots":1},"@addToken_5301":{"entryPoint":8601,"id":5301,"parameterSlots":1,"returnSlots":0},"@add_3279":{"entryPoint":17403,"id":3279,"parameterSlots":2,"returnSlots":1},"@allowance_851":{"entryPoint":null,"id":851,"parameterSlots":2,"returnSlots":1},"@approve_875":{"entryPoint":2231,"id":875,"parameterSlots":2,"returnSlots":1},"@at_3375":{"entryPoint":15511,"id":3375,"parameterSlots":2,"returnSlots":1},"@balanceOf_803":{"entryPoint":null,"id":803,"parameterSlots":1,"returnSlots":1},"@baseAsset_3585":{"entryPoint":null,"id":3585,"parameterSlots":0,"returnSlots":0},"@burnERC20_4349":{"entryPoint":3868,"id":4349,"parameterSlots":1,"returnSlots":0},"@burnUSDC_4645":{"entryPoint":11548,"id":4645,"parameterSlots":1,"returnSlots":0},"@calculateTokenShare_4927":{"entryPoint":14349,"id":4927,"parameterSlots":4,"returnSlots":1},"@callRebalance_4873":{"entryPoint":6946,"id":4873,"parameterSlots":8,"returnSlots":0},"@contains_3333":{"entryPoint":17423,"id":3333,"parameterSlots":2,"returnSlots":1},"@decimals_767":{"entryPoint":null,"id":767,"parameterSlots":0,"returnSlots":1},"@execute_4041":{"entryPoint":8692,"id":4041,"parameterSlots":2,"returnSlots":0},"@functionDelegateCall_2158":{"entryPoint":18998,"id":2158,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_2271":{"entryPoint":null,"id":2271,"parameterSlots":1,"returnSlots":1},"@getAgentAddress_4667":{"entryPoint":5269,"id":4667,"parameterSlots":1,"returnSlots":1},"@getImplementation_1630":{"entryPoint":null,"id":1630,"parameterSlots":0,"returnSlots":1},"@getTokens_5285":{"entryPoint":7794,"id":5285,"parameterSlots":0,"returnSlots":1},"@getUSDCShareValue_4976":{"entryPoint":7380,"id":4976,"parameterSlots":1,"returnSlots":1},"@getVersion_5273":{"entryPoint":3812,"id":5273,"parameterSlots":0,"returnSlots":1},"@initialize_3659":{"entryPoint":7908,"id":3659,"parameterSlots":1,"returnSlots":0},"@length_3348":{"entryPoint":15502,"id":3348,"parameterSlots":1,"returnSlots":1},"@liquidateAll_4176":{"entryPoint":6733,"id":4176,"parameterSlots":0,"returnSlots":0},"@liquidate_4135":{"entryPoint":5805,"id":4135,"parameterSlots":1,"returnSlots":0},"@mintWithUSDC_4818":{"entryPoint":2256,"id":4818,"parameterSlots":1,"returnSlots":0},"@name_742":{"entryPoint":2020,"id":742,"parameterSlots":0,"returnSlots":1},"@owner_105":{"entryPoint":null,"id":105,"parameterSlots":0,"returnSlots":1},"@proxiableUUID_520":{"entryPoint":6900,"id":520,"parameterSlots":0,"returnSlots":1},"@registry_3579":{"entryPoint":null,"id":3579,"parameterSlots":0,"returnSlots":0},"@reinitialize_3676":{"entryPoint":7390,"id":3676,"parameterSlots":2,"returnSlots":0},"@removeToken_5317":{"entryPoint":7345,"id":5317,"parameterSlots":1,"returnSlots":0},"@remove_3306":{"entryPoint":16876,"id":3306,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_136":{"entryPoint":7363,"id":136,"parameterSlots":0,"returnSlots":0},"@requiredUSDCtoMint_4905":{"entryPoint":7805,"id":4905,"parameterSlots":1,"returnSlots":1},"@resetContract_3690":{"entryPoint":8619,"id":3690,"parameterSlots":1,"returnSlots":0},"@symbol_758":{"entryPoint":7700,"id":758,"parameterSlots":0,"returnSlots":1},"@tokenValuation_4953":{"entryPoint":5529,"id":4953,"parameterSlots":2,"returnSlots":1},"@totalSupply_783":{"entryPoint":null,"id":783,"parameterSlots":0,"returnSlots":1},"@totalValuation_4963":{"entryPoint":5520,"id":4963,"parameterSlots":0,"returnSlots":1},"@transferFrom_907":{"entryPoint":5232,"id":907,"parameterSlots":3,"returnSlots":1},"@transferOwnership_164":{"entryPoint":11465,"id":164,"parameterSlots":1,"returnSlots":0},"@transfer_827":{"entryPoint":7781,"id":827,"parameterSlots":2,"returnSlots":1},"@unitPrice_3711":{"entryPoint":8674,"id":3711,"parameterSlots":0,"returnSlots":1},"@upgradeToAndCall_1691":{"entryPoint":18147,"id":1691,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_540":{"entryPoint":6869,"id":540,"parameterSlots":2,"returnSlots":0},"@values_3405":{"entryPoint":17332,"id":3405,"parameterSlots":1,"returnSlots":1},"@verifyCallResultFromTarget_2198":{"entryPoint":19159,"id":2198,"parameterSlots":3,"returnSlots":1},"abi_decode_array_address_dyn":{"entryPoint":20384,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_address_dyn_calldata":{"entryPoint":19921,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bytes":{"entryPoint":19736,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":19553,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":20869,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":20305,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":19491,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":19844,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":19426,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint64":{"entryPoint":20164,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_addresst_addresst_uint256t_address":{"entryPoint":19993,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_array$_t_struct$_Call_$2582_memory_ptr_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr":{"entryPoint":20501,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":20993,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":19468,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":20896,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":19580,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256":{"entryPoint":20772,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint8_fromMemory":{"entryPoint":21043,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_array_address_dyn":{"entryPoint":20220,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn_calldata":{"entryPoint":21075,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_uint256_dyn_calldata":{"entryPoint":21135,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":19342,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":22104,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_address__to_t_address_t_address_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_rational_3000_by_1__to_t_address_t_address_t_uint24__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_rational_500_by_1__to_t_address_t_address_t_uint24__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_address__to_t_address_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":20287,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_Call_$2582_memory_ptr_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_struct$_Call_$2582_memory_ptr_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":21403,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr_t_uint256_t_address_t_address_t_address__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address_t_address_t_address__fromStack_reversed":{"entryPoint":21208,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IBaluniV1Registry_$2909__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19388,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_05dde7ba458fa57c690848c203ec960214f35b18f13e857028bd34ad518b5575__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_075182a57f83974087c76763cd3bc4eedd97b16a8f6ac226f0c2ef23a69b575b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_19ae815948d188a4017d21662744b2e39ca52dd9e0c04ca7540cb50ca889bf62__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1ddcc9d8f2a6704234c103a6ef7b2e41a8659f7661115b0460a24c8abe542fd0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277b788f6bc7cefc93f8369ac2f11d44c3d87b9ef59c2dd3a42e3f629340b86f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_295121eae2e38ce539c65fbd804cefee3e5836ff4e56c455d35a6afed6773125__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2d5dedc64e58ec2dfd9d57a4a8363c0fd7692430e9d02e08dba505855fefef17__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3802b739a1b061f89edd5fd7a12d8792298aa749cedf62bac9eac44415882c7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfb1910864572988af91047c2a74bf6c8bc662651e6ced4da8e59a423cae87d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_40edaaaeefde7a606ab22e3c37f33984fb3b1e0058b05ccc31b572de63cd1497__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_69c3c275e229957bd624940053bb5e224e915c9b003c39a1899996718abe87b0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_87d7498470f76c7b536e2b3ec9816474a9844e531fdac32c215159c083e5c40c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bad2ba4e17745a4d4fd221dac6ffa18dd2cdb7d74e252bb930552ebc273a413c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c0699f179d2a1b62cb97d8e7fffb6f849ca18ed4e697b2f010f29e743716b888__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c26370c748e399efe4c5a302d20f1fe22da5300fc60bdab39924790733506945__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e16f85873456a830f1ff99f4c2c493d8a3c64696cfa808146bb8fc6bce2e7570__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebe7cb95a2dc7ec969883b54c3194e315832305fa1026cbcfb27ede2b2283804__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8a54059e31ba8035a6fc0cc512134c3fd2ca3508fc8500195d25c2966df732b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":19687,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_4581":{"entryPoint":19646,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_struct_Call_dyn":{"entryPoint":20349,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":21574,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":20962,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":21593,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":21817,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":21659,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":20939,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":21024,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":21848,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":21916,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":20819,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":20919,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":21828,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":21383,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":19626,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":19406,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:33557:26","nodeType":"YulBlock","src":"0:33557:26","statements":[{"nativeSrc":"6:3:26","nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nativeSrc":"64:298:26","nodeType":"YulBlock","src":"64:298:26","statements":[{"nativeSrc":"74:26:26","nodeType":"YulVariableDeclaration","src":"74:26:26","value":{"arguments":[{"name":"value","nativeSrc":"94:5:26","nodeType":"YulIdentifier","src":"94:5:26"}],"functionName":{"name":"mload","nativeSrc":"88:5:26","nodeType":"YulIdentifier","src":"88:5:26"},"nativeSrc":"88:12:26","nodeType":"YulFunctionCall","src":"88:12:26"},"variables":[{"name":"length","nativeSrc":"78:6:26","nodeType":"YulTypedName","src":"78:6:26","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"116:3:26","nodeType":"YulIdentifier","src":"116:3:26"},{"name":"length","nativeSrc":"121:6:26","nodeType":"YulIdentifier","src":"121:6:26"}],"functionName":{"name":"mstore","nativeSrc":"109:6:26","nodeType":"YulIdentifier","src":"109:6:26"},"nativeSrc":"109:19:26","nodeType":"YulFunctionCall","src":"109:19:26"},"nativeSrc":"109:19:26","nodeType":"YulExpressionStatement","src":"109:19:26"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"147:3:26","nodeType":"YulIdentifier","src":"147:3:26"},{"kind":"number","nativeSrc":"152:4:26","nodeType":"YulLiteral","src":"152:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"143:3:26","nodeType":"YulIdentifier","src":"143:3:26"},"nativeSrc":"143:14:26","nodeType":"YulFunctionCall","src":"143:14:26"},{"arguments":[{"name":"value","nativeSrc":"163:5:26","nodeType":"YulIdentifier","src":"163:5:26"},{"kind":"number","nativeSrc":"170:4:26","nodeType":"YulLiteral","src":"170:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"159:3:26","nodeType":"YulIdentifier","src":"159:3:26"},"nativeSrc":"159:16:26","nodeType":"YulFunctionCall","src":"159:16:26"},{"name":"length","nativeSrc":"177:6:26","nodeType":"YulIdentifier","src":"177:6:26"}],"functionName":{"name":"mcopy","nativeSrc":"137:5:26","nodeType":"YulIdentifier","src":"137:5:26"},"nativeSrc":"137:47:26","nodeType":"YulFunctionCall","src":"137:47:26"},"nativeSrc":"137:47:26","nodeType":"YulExpressionStatement","src":"137:47:26"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"208:3:26","nodeType":"YulIdentifier","src":"208:3:26"},{"name":"length","nativeSrc":"213:6:26","nodeType":"YulIdentifier","src":"213:6:26"}],"functionName":{"name":"add","nativeSrc":"204:3:26","nodeType":"YulIdentifier","src":"204:3:26"},"nativeSrc":"204:16:26","nodeType":"YulFunctionCall","src":"204:16:26"},{"kind":"number","nativeSrc":"222:4:26","nodeType":"YulLiteral","src":"222:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"200:3:26","nodeType":"YulIdentifier","src":"200:3:26"},"nativeSrc":"200:27:26","nodeType":"YulFunctionCall","src":"200:27:26"},{"kind":"number","nativeSrc":"229:1:26","nodeType":"YulLiteral","src":"229:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"193:6:26","nodeType":"YulIdentifier","src":"193:6:26"},"nativeSrc":"193:38:26","nodeType":"YulFunctionCall","src":"193:38:26"},"nativeSrc":"193:38:26","nodeType":"YulExpressionStatement","src":"193:38:26"},{"nativeSrc":"240:116:26","nodeType":"YulAssignment","src":"240:116:26","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"255:3:26","nodeType":"YulIdentifier","src":"255:3:26"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"268:6:26","nodeType":"YulIdentifier","src":"268:6:26"},{"kind":"number","nativeSrc":"276:2:26","nodeType":"YulLiteral","src":"276:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"264:3:26","nodeType":"YulIdentifier","src":"264:3:26"},"nativeSrc":"264:15:26","nodeType":"YulFunctionCall","src":"264:15:26"},{"kind":"number","nativeSrc":"281:66:26","nodeType":"YulLiteral","src":"281:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nativeSrc":"260:3:26","nodeType":"YulIdentifier","src":"260:3:26"},"nativeSrc":"260:88:26","nodeType":"YulFunctionCall","src":"260:88:26"}],"functionName":{"name":"add","nativeSrc":"251:3:26","nodeType":"YulIdentifier","src":"251:3:26"},"nativeSrc":"251:98:26","nodeType":"YulFunctionCall","src":"251:98:26"},{"kind":"number","nativeSrc":"351:4:26","nodeType":"YulLiteral","src":"351:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"247:3:26","nodeType":"YulIdentifier","src":"247:3:26"},"nativeSrc":"247:109:26","nodeType":"YulFunctionCall","src":"247:109:26"},"variableNames":[{"name":"end","nativeSrc":"240:3:26","nodeType":"YulIdentifier","src":"240:3:26"}]}]},"name":"abi_encode_string","nativeSrc":"14:348:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"41:5:26","nodeType":"YulTypedName","src":"41:5:26","type":""},{"name":"pos","nativeSrc":"48:3:26","nodeType":"YulTypedName","src":"48:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"56:3:26","nodeType":"YulTypedName","src":"56:3:26","type":""}],"src":"14:348:26"},{"body":{"nativeSrc":"488:99:26","nodeType":"YulBlock","src":"488:99:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"505:9:26","nodeType":"YulIdentifier","src":"505:9:26"},{"kind":"number","nativeSrc":"516:2:26","nodeType":"YulLiteral","src":"516:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"498:6:26","nodeType":"YulIdentifier","src":"498:6:26"},"nativeSrc":"498:21:26","nodeType":"YulFunctionCall","src":"498:21:26"},"nativeSrc":"498:21:26","nodeType":"YulExpressionStatement","src":"498:21:26"},{"nativeSrc":"528:53:26","nodeType":"YulAssignment","src":"528:53:26","value":{"arguments":[{"name":"value0","nativeSrc":"554:6:26","nodeType":"YulIdentifier","src":"554:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"566:9:26","nodeType":"YulIdentifier","src":"566:9:26"},{"kind":"number","nativeSrc":"577:2:26","nodeType":"YulLiteral","src":"577:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"562:3:26","nodeType":"YulIdentifier","src":"562:3:26"},"nativeSrc":"562:18:26","nodeType":"YulFunctionCall","src":"562:18:26"}],"functionName":{"name":"abi_encode_string","nativeSrc":"536:17:26","nodeType":"YulIdentifier","src":"536:17:26"},"nativeSrc":"536:45:26","nodeType":"YulFunctionCall","src":"536:45:26"},"variableNames":[{"name":"tail","nativeSrc":"528:4:26","nodeType":"YulIdentifier","src":"528:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"367:220:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"457:9:26","nodeType":"YulTypedName","src":"457:9:26","type":""},{"name":"value0","nativeSrc":"468:6:26","nodeType":"YulTypedName","src":"468:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"479:4:26","nodeType":"YulTypedName","src":"479:4:26","type":""}],"src":"367:220:26"},{"body":{"nativeSrc":"637:109:26","nodeType":"YulBlock","src":"637:109:26","statements":[{"body":{"nativeSrc":"724:16:26","nodeType":"YulBlock","src":"724:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"733:1:26","nodeType":"YulLiteral","src":"733:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"736:1:26","nodeType":"YulLiteral","src":"736:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"726:6:26","nodeType":"YulIdentifier","src":"726:6:26"},"nativeSrc":"726:12:26","nodeType":"YulFunctionCall","src":"726:12:26"},"nativeSrc":"726:12:26","nodeType":"YulExpressionStatement","src":"726:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"660:5:26","nodeType":"YulIdentifier","src":"660:5:26"},{"arguments":[{"name":"value","nativeSrc":"671:5:26","nodeType":"YulIdentifier","src":"671:5:26"},{"kind":"number","nativeSrc":"678:42:26","nodeType":"YulLiteral","src":"678:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"667:3:26","nodeType":"YulIdentifier","src":"667:3:26"},"nativeSrc":"667:54:26","nodeType":"YulFunctionCall","src":"667:54:26"}],"functionName":{"name":"eq","nativeSrc":"657:2:26","nodeType":"YulIdentifier","src":"657:2:26"},"nativeSrc":"657:65:26","nodeType":"YulFunctionCall","src":"657:65:26"}],"functionName":{"name":"iszero","nativeSrc":"650:6:26","nodeType":"YulIdentifier","src":"650:6:26"},"nativeSrc":"650:73:26","nodeType":"YulFunctionCall","src":"650:73:26"},"nativeSrc":"647:93:26","nodeType":"YulIf","src":"647:93:26"}]},"name":"validator_revert_address","nativeSrc":"592:154:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"626:5:26","nodeType":"YulTypedName","src":"626:5:26","type":""}],"src":"592:154:26"},{"body":{"nativeSrc":"838:228:26","nodeType":"YulBlock","src":"838:228:26","statements":[{"body":{"nativeSrc":"884:16:26","nodeType":"YulBlock","src":"884:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"893:1:26","nodeType":"YulLiteral","src":"893:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"896:1:26","nodeType":"YulLiteral","src":"896:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"886:6:26","nodeType":"YulIdentifier","src":"886:6:26"},"nativeSrc":"886:12:26","nodeType":"YulFunctionCall","src":"886:12:26"},"nativeSrc":"886:12:26","nodeType":"YulExpressionStatement","src":"886:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"859:7:26","nodeType":"YulIdentifier","src":"859:7:26"},{"name":"headStart","nativeSrc":"868:9:26","nodeType":"YulIdentifier","src":"868:9:26"}],"functionName":{"name":"sub","nativeSrc":"855:3:26","nodeType":"YulIdentifier","src":"855:3:26"},"nativeSrc":"855:23:26","nodeType":"YulFunctionCall","src":"855:23:26"},{"kind":"number","nativeSrc":"880:2:26","nodeType":"YulLiteral","src":"880:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"851:3:26","nodeType":"YulIdentifier","src":"851:3:26"},"nativeSrc":"851:32:26","nodeType":"YulFunctionCall","src":"851:32:26"},"nativeSrc":"848:52:26","nodeType":"YulIf","src":"848:52:26"},{"nativeSrc":"909:36:26","nodeType":"YulVariableDeclaration","src":"909:36:26","value":{"arguments":[{"name":"headStart","nativeSrc":"935:9:26","nodeType":"YulIdentifier","src":"935:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"922:12:26","nodeType":"YulIdentifier","src":"922:12:26"},"nativeSrc":"922:23:26","nodeType":"YulFunctionCall","src":"922:23:26"},"variables":[{"name":"value","nativeSrc":"913:5:26","nodeType":"YulTypedName","src":"913:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"979:5:26","nodeType":"YulIdentifier","src":"979:5:26"}],"functionName":{"name":"validator_revert_address","nativeSrc":"954:24:26","nodeType":"YulIdentifier","src":"954:24:26"},"nativeSrc":"954:31:26","nodeType":"YulFunctionCall","src":"954:31:26"},"nativeSrc":"954:31:26","nodeType":"YulExpressionStatement","src":"954:31:26"},{"nativeSrc":"994:15:26","nodeType":"YulAssignment","src":"994:15:26","value":{"name":"value","nativeSrc":"1004:5:26","nodeType":"YulIdentifier","src":"1004:5:26"},"variableNames":[{"name":"value0","nativeSrc":"994:6:26","nodeType":"YulIdentifier","src":"994:6:26"}]},{"nativeSrc":"1018:42:26","nodeType":"YulAssignment","src":"1018:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1045:9:26","nodeType":"YulIdentifier","src":"1045:9:26"},{"kind":"number","nativeSrc":"1056:2:26","nodeType":"YulLiteral","src":"1056:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1041:3:26","nodeType":"YulIdentifier","src":"1041:3:26"},"nativeSrc":"1041:18:26","nodeType":"YulFunctionCall","src":"1041:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"1028:12:26","nodeType":"YulIdentifier","src":"1028:12:26"},"nativeSrc":"1028:32:26","nodeType":"YulFunctionCall","src":"1028:32:26"},"variableNames":[{"name":"value1","nativeSrc":"1018:6:26","nodeType":"YulIdentifier","src":"1018:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"751:315:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"796:9:26","nodeType":"YulTypedName","src":"796:9:26","type":""},{"name":"dataEnd","nativeSrc":"807:7:26","nodeType":"YulTypedName","src":"807:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"819:6:26","nodeType":"YulTypedName","src":"819:6:26","type":""},{"name":"value1","nativeSrc":"827:6:26","nodeType":"YulTypedName","src":"827:6:26","type":""}],"src":"751:315:26"},{"body":{"nativeSrc":"1166:92:26","nodeType":"YulBlock","src":"1166:92:26","statements":[{"nativeSrc":"1176:26:26","nodeType":"YulAssignment","src":"1176:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1188:9:26","nodeType":"YulIdentifier","src":"1188:9:26"},{"kind":"number","nativeSrc":"1199:2:26","nodeType":"YulLiteral","src":"1199:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1184:3:26","nodeType":"YulIdentifier","src":"1184:3:26"},"nativeSrc":"1184:18:26","nodeType":"YulFunctionCall","src":"1184:18:26"},"variableNames":[{"name":"tail","nativeSrc":"1176:4:26","nodeType":"YulIdentifier","src":"1176:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1218:9:26","nodeType":"YulIdentifier","src":"1218:9:26"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1243:6:26","nodeType":"YulIdentifier","src":"1243:6:26"}],"functionName":{"name":"iszero","nativeSrc":"1236:6:26","nodeType":"YulIdentifier","src":"1236:6:26"},"nativeSrc":"1236:14:26","nodeType":"YulFunctionCall","src":"1236:14:26"}],"functionName":{"name":"iszero","nativeSrc":"1229:6:26","nodeType":"YulIdentifier","src":"1229:6:26"},"nativeSrc":"1229:22:26","nodeType":"YulFunctionCall","src":"1229:22:26"}],"functionName":{"name":"mstore","nativeSrc":"1211:6:26","nodeType":"YulIdentifier","src":"1211:6:26"},"nativeSrc":"1211:41:26","nodeType":"YulFunctionCall","src":"1211:41:26"},"nativeSrc":"1211:41:26","nodeType":"YulExpressionStatement","src":"1211:41:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1071:187:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1135:9:26","nodeType":"YulTypedName","src":"1135:9:26","type":""},{"name":"value0","nativeSrc":"1146:6:26","nodeType":"YulTypedName","src":"1146:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1157:4:26","nodeType":"YulTypedName","src":"1157:4:26","type":""}],"src":"1071:187:26"},{"body":{"nativeSrc":"1333:110:26","nodeType":"YulBlock","src":"1333:110:26","statements":[{"body":{"nativeSrc":"1379:16:26","nodeType":"YulBlock","src":"1379:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1388:1:26","nodeType":"YulLiteral","src":"1388:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1391:1:26","nodeType":"YulLiteral","src":"1391:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1381:6:26","nodeType":"YulIdentifier","src":"1381:6:26"},"nativeSrc":"1381:12:26","nodeType":"YulFunctionCall","src":"1381:12:26"},"nativeSrc":"1381:12:26","nodeType":"YulExpressionStatement","src":"1381:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1354:7:26","nodeType":"YulIdentifier","src":"1354:7:26"},{"name":"headStart","nativeSrc":"1363:9:26","nodeType":"YulIdentifier","src":"1363:9:26"}],"functionName":{"name":"sub","nativeSrc":"1350:3:26","nodeType":"YulIdentifier","src":"1350:3:26"},"nativeSrc":"1350:23:26","nodeType":"YulFunctionCall","src":"1350:23:26"},{"kind":"number","nativeSrc":"1375:2:26","nodeType":"YulLiteral","src":"1375:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1346:3:26","nodeType":"YulIdentifier","src":"1346:3:26"},"nativeSrc":"1346:32:26","nodeType":"YulFunctionCall","src":"1346:32:26"},"nativeSrc":"1343:52:26","nodeType":"YulIf","src":"1343:52:26"},{"nativeSrc":"1404:33:26","nodeType":"YulAssignment","src":"1404:33:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1427:9:26","nodeType":"YulIdentifier","src":"1427:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"1414:12:26","nodeType":"YulIdentifier","src":"1414:12:26"},"nativeSrc":"1414:23:26","nodeType":"YulFunctionCall","src":"1414:23:26"},"variableNames":[{"name":"value0","nativeSrc":"1404:6:26","nodeType":"YulIdentifier","src":"1404:6:26"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"1263:180:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1299:9:26","nodeType":"YulTypedName","src":"1299:9:26","type":""},{"name":"dataEnd","nativeSrc":"1310:7:26","nodeType":"YulTypedName","src":"1310:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1322:6:26","nodeType":"YulTypedName","src":"1322:6:26","type":""}],"src":"1263:180:26"},{"body":{"nativeSrc":"1547:101:26","nodeType":"YulBlock","src":"1547:101:26","statements":[{"nativeSrc":"1557:26:26","nodeType":"YulAssignment","src":"1557:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1569:9:26","nodeType":"YulIdentifier","src":"1569:9:26"},{"kind":"number","nativeSrc":"1580:2:26","nodeType":"YulLiteral","src":"1580:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1565:3:26","nodeType":"YulIdentifier","src":"1565:3:26"},"nativeSrc":"1565:18:26","nodeType":"YulFunctionCall","src":"1565:18:26"},"variableNames":[{"name":"tail","nativeSrc":"1557:4:26","nodeType":"YulIdentifier","src":"1557:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1599:9:26","nodeType":"YulIdentifier","src":"1599:9:26"},{"arguments":[{"name":"value0","nativeSrc":"1614:6:26","nodeType":"YulIdentifier","src":"1614:6:26"},{"kind":"number","nativeSrc":"1622:18:26","nodeType":"YulLiteral","src":"1622:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1610:3:26","nodeType":"YulIdentifier","src":"1610:3:26"},"nativeSrc":"1610:31:26","nodeType":"YulFunctionCall","src":"1610:31:26"}],"functionName":{"name":"mstore","nativeSrc":"1592:6:26","nodeType":"YulIdentifier","src":"1592:6:26"},"nativeSrc":"1592:50:26","nodeType":"YulFunctionCall","src":"1592:50:26"},"nativeSrc":"1592:50:26","nodeType":"YulExpressionStatement","src":"1592:50:26"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"1448:200:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1516:9:26","nodeType":"YulTypedName","src":"1516:9:26","type":""},{"name":"value0","nativeSrc":"1527:6:26","nodeType":"YulTypedName","src":"1527:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1538:4:26","nodeType":"YulTypedName","src":"1538:4:26","type":""}],"src":"1448:200:26"},{"body":{"nativeSrc":"1754:76:26","nodeType":"YulBlock","src":"1754:76:26","statements":[{"nativeSrc":"1764:26:26","nodeType":"YulAssignment","src":"1764:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1776:9:26","nodeType":"YulIdentifier","src":"1776:9:26"},{"kind":"number","nativeSrc":"1787:2:26","nodeType":"YulLiteral","src":"1787:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1772:3:26","nodeType":"YulIdentifier","src":"1772:3:26"},"nativeSrc":"1772:18:26","nodeType":"YulFunctionCall","src":"1772:18:26"},"variableNames":[{"name":"tail","nativeSrc":"1764:4:26","nodeType":"YulIdentifier","src":"1764:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1806:9:26","nodeType":"YulIdentifier","src":"1806:9:26"},{"name":"value0","nativeSrc":"1817:6:26","nodeType":"YulIdentifier","src":"1817:6:26"}],"functionName":{"name":"mstore","nativeSrc":"1799:6:26","nodeType":"YulIdentifier","src":"1799:6:26"},"nativeSrc":"1799:25:26","nodeType":"YulFunctionCall","src":"1799:25:26"},"nativeSrc":"1799:25:26","nodeType":"YulExpressionStatement","src":"1799:25:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1653:177:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1723:9:26","nodeType":"YulTypedName","src":"1723:9:26","type":""},{"name":"value0","nativeSrc":"1734:6:26","nodeType":"YulTypedName","src":"1734:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1745:4:26","nodeType":"YulTypedName","src":"1745:4:26","type":""}],"src":"1653:177:26"},{"body":{"nativeSrc":"1939:352:26","nodeType":"YulBlock","src":"1939:352:26","statements":[{"body":{"nativeSrc":"1985:16:26","nodeType":"YulBlock","src":"1985:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1994:1:26","nodeType":"YulLiteral","src":"1994:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1997:1:26","nodeType":"YulLiteral","src":"1997:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1987:6:26","nodeType":"YulIdentifier","src":"1987:6:26"},"nativeSrc":"1987:12:26","nodeType":"YulFunctionCall","src":"1987:12:26"},"nativeSrc":"1987:12:26","nodeType":"YulExpressionStatement","src":"1987:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1960:7:26","nodeType":"YulIdentifier","src":"1960:7:26"},{"name":"headStart","nativeSrc":"1969:9:26","nodeType":"YulIdentifier","src":"1969:9:26"}],"functionName":{"name":"sub","nativeSrc":"1956:3:26","nodeType":"YulIdentifier","src":"1956:3:26"},"nativeSrc":"1956:23:26","nodeType":"YulFunctionCall","src":"1956:23:26"},{"kind":"number","nativeSrc":"1981:2:26","nodeType":"YulLiteral","src":"1981:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1952:3:26","nodeType":"YulIdentifier","src":"1952:3:26"},"nativeSrc":"1952:32:26","nodeType":"YulFunctionCall","src":"1952:32:26"},"nativeSrc":"1949:52:26","nodeType":"YulIf","src":"1949:52:26"},{"nativeSrc":"2010:36:26","nodeType":"YulVariableDeclaration","src":"2010:36:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2036:9:26","nodeType":"YulIdentifier","src":"2036:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"2023:12:26","nodeType":"YulIdentifier","src":"2023:12:26"},"nativeSrc":"2023:23:26","nodeType":"YulFunctionCall","src":"2023:23:26"},"variables":[{"name":"value","nativeSrc":"2014:5:26","nodeType":"YulTypedName","src":"2014:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2080:5:26","nodeType":"YulIdentifier","src":"2080:5:26"}],"functionName":{"name":"validator_revert_address","nativeSrc":"2055:24:26","nodeType":"YulIdentifier","src":"2055:24:26"},"nativeSrc":"2055:31:26","nodeType":"YulFunctionCall","src":"2055:31:26"},"nativeSrc":"2055:31:26","nodeType":"YulExpressionStatement","src":"2055:31:26"},{"nativeSrc":"2095:15:26","nodeType":"YulAssignment","src":"2095:15:26","value":{"name":"value","nativeSrc":"2105:5:26","nodeType":"YulIdentifier","src":"2105:5:26"},"variableNames":[{"name":"value0","nativeSrc":"2095:6:26","nodeType":"YulIdentifier","src":"2095:6:26"}]},{"nativeSrc":"2119:47:26","nodeType":"YulVariableDeclaration","src":"2119:47:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2151:9:26","nodeType":"YulIdentifier","src":"2151:9:26"},{"kind":"number","nativeSrc":"2162:2:26","nodeType":"YulLiteral","src":"2162:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2147:3:26","nodeType":"YulIdentifier","src":"2147:3:26"},"nativeSrc":"2147:18:26","nodeType":"YulFunctionCall","src":"2147:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"2134:12:26","nodeType":"YulIdentifier","src":"2134:12:26"},"nativeSrc":"2134:32:26","nodeType":"YulFunctionCall","src":"2134:32:26"},"variables":[{"name":"value_1","nativeSrc":"2123:7:26","nodeType":"YulTypedName","src":"2123:7:26","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"2200:7:26","nodeType":"YulIdentifier","src":"2200:7:26"}],"functionName":{"name":"validator_revert_address","nativeSrc":"2175:24:26","nodeType":"YulIdentifier","src":"2175:24:26"},"nativeSrc":"2175:33:26","nodeType":"YulFunctionCall","src":"2175:33:26"},"nativeSrc":"2175:33:26","nodeType":"YulExpressionStatement","src":"2175:33:26"},{"nativeSrc":"2217:17:26","nodeType":"YulAssignment","src":"2217:17:26","value":{"name":"value_1","nativeSrc":"2227:7:26","nodeType":"YulIdentifier","src":"2227:7:26"},"variableNames":[{"name":"value1","nativeSrc":"2217:6:26","nodeType":"YulIdentifier","src":"2217:6:26"}]},{"nativeSrc":"2243:42:26","nodeType":"YulAssignment","src":"2243:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2270:9:26","nodeType":"YulIdentifier","src":"2270:9:26"},{"kind":"number","nativeSrc":"2281:2:26","nodeType":"YulLiteral","src":"2281:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2266:3:26","nodeType":"YulIdentifier","src":"2266:3:26"},"nativeSrc":"2266:18:26","nodeType":"YulFunctionCall","src":"2266:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"2253:12:26","nodeType":"YulIdentifier","src":"2253:12:26"},"nativeSrc":"2253:32:26","nodeType":"YulFunctionCall","src":"2253:32:26"},"variableNames":[{"name":"value2","nativeSrc":"2243:6:26","nodeType":"YulIdentifier","src":"2243:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"1835:456:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1889:9:26","nodeType":"YulTypedName","src":"1889:9:26","type":""},{"name":"dataEnd","nativeSrc":"1900:7:26","nodeType":"YulTypedName","src":"1900:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1912:6:26","nodeType":"YulTypedName","src":"1912:6:26","type":""},{"name":"value1","nativeSrc":"1920:6:26","nodeType":"YulTypedName","src":"1920:6:26","type":""},{"name":"value2","nativeSrc":"1928:6:26","nodeType":"YulTypedName","src":"1928:6:26","type":""}],"src":"1835:456:26"},{"body":{"nativeSrc":"2366:177:26","nodeType":"YulBlock","src":"2366:177:26","statements":[{"body":{"nativeSrc":"2412:16:26","nodeType":"YulBlock","src":"2412:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2421:1:26","nodeType":"YulLiteral","src":"2421:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"2424:1:26","nodeType":"YulLiteral","src":"2424:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2414:6:26","nodeType":"YulIdentifier","src":"2414:6:26"},"nativeSrc":"2414:12:26","nodeType":"YulFunctionCall","src":"2414:12:26"},"nativeSrc":"2414:12:26","nodeType":"YulExpressionStatement","src":"2414:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2387:7:26","nodeType":"YulIdentifier","src":"2387:7:26"},{"name":"headStart","nativeSrc":"2396:9:26","nodeType":"YulIdentifier","src":"2396:9:26"}],"functionName":{"name":"sub","nativeSrc":"2383:3:26","nodeType":"YulIdentifier","src":"2383:3:26"},"nativeSrc":"2383:23:26","nodeType":"YulFunctionCall","src":"2383:23:26"},{"kind":"number","nativeSrc":"2408:2:26","nodeType":"YulLiteral","src":"2408:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2379:3:26","nodeType":"YulIdentifier","src":"2379:3:26"},"nativeSrc":"2379:32:26","nodeType":"YulFunctionCall","src":"2379:32:26"},"nativeSrc":"2376:52:26","nodeType":"YulIf","src":"2376:52:26"},{"nativeSrc":"2437:36:26","nodeType":"YulVariableDeclaration","src":"2437:36:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2463:9:26","nodeType":"YulIdentifier","src":"2463:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"2450:12:26","nodeType":"YulIdentifier","src":"2450:12:26"},"nativeSrc":"2450:23:26","nodeType":"YulFunctionCall","src":"2450:23:26"},"variables":[{"name":"value","nativeSrc":"2441:5:26","nodeType":"YulTypedName","src":"2441:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2507:5:26","nodeType":"YulIdentifier","src":"2507:5:26"}],"functionName":{"name":"validator_revert_address","nativeSrc":"2482:24:26","nodeType":"YulIdentifier","src":"2482:24:26"},"nativeSrc":"2482:31:26","nodeType":"YulFunctionCall","src":"2482:31:26"},"nativeSrc":"2482:31:26","nodeType":"YulExpressionStatement","src":"2482:31:26"},{"nativeSrc":"2522:15:26","nodeType":"YulAssignment","src":"2522:15:26","value":{"name":"value","nativeSrc":"2532:5:26","nodeType":"YulIdentifier","src":"2532:5:26"},"variableNames":[{"name":"value0","nativeSrc":"2522:6:26","nodeType":"YulIdentifier","src":"2522:6:26"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"2296:247:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2332:9:26","nodeType":"YulTypedName","src":"2332:9:26","type":""},{"name":"dataEnd","nativeSrc":"2343:7:26","nodeType":"YulTypedName","src":"2343:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2355:6:26","nodeType":"YulTypedName","src":"2355:6:26","type":""}],"src":"2296:247:26"},{"body":{"nativeSrc":"2592:83:26","nodeType":"YulBlock","src":"2592:83:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2609:3:26","nodeType":"YulIdentifier","src":"2609:3:26"},{"arguments":[{"name":"value","nativeSrc":"2618:5:26","nodeType":"YulIdentifier","src":"2618:5:26"},{"kind":"number","nativeSrc":"2625:42:26","nodeType":"YulLiteral","src":"2625:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2614:3:26","nodeType":"YulIdentifier","src":"2614:3:26"},"nativeSrc":"2614:54:26","nodeType":"YulFunctionCall","src":"2614:54:26"}],"functionName":{"name":"mstore","nativeSrc":"2602:6:26","nodeType":"YulIdentifier","src":"2602:6:26"},"nativeSrc":"2602:67:26","nodeType":"YulFunctionCall","src":"2602:67:26"},"nativeSrc":"2602:67:26","nodeType":"YulExpressionStatement","src":"2602:67:26"}]},"name":"abi_encode_address","nativeSrc":"2548:127:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2576:5:26","nodeType":"YulTypedName","src":"2576:5:26","type":""},{"name":"pos","nativeSrc":"2583:3:26","nodeType":"YulTypedName","src":"2583:3:26","type":""}],"src":"2548:127:26"},{"body":{"nativeSrc":"2781:125:26","nodeType":"YulBlock","src":"2781:125:26","statements":[{"nativeSrc":"2791:26:26","nodeType":"YulAssignment","src":"2791:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2803:9:26","nodeType":"YulIdentifier","src":"2803:9:26"},{"kind":"number","nativeSrc":"2814:2:26","nodeType":"YulLiteral","src":"2814:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2799:3:26","nodeType":"YulIdentifier","src":"2799:3:26"},"nativeSrc":"2799:18:26","nodeType":"YulFunctionCall","src":"2799:18:26"},"variableNames":[{"name":"tail","nativeSrc":"2791:4:26","nodeType":"YulIdentifier","src":"2791:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2833:9:26","nodeType":"YulIdentifier","src":"2833:9:26"},{"arguments":[{"name":"value0","nativeSrc":"2848:6:26","nodeType":"YulIdentifier","src":"2848:6:26"},{"kind":"number","nativeSrc":"2856:42:26","nodeType":"YulLiteral","src":"2856:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2844:3:26","nodeType":"YulIdentifier","src":"2844:3:26"},"nativeSrc":"2844:55:26","nodeType":"YulFunctionCall","src":"2844:55:26"}],"functionName":{"name":"mstore","nativeSrc":"2826:6:26","nodeType":"YulIdentifier","src":"2826:6:26"},"nativeSrc":"2826:74:26","nodeType":"YulFunctionCall","src":"2826:74:26"},"nativeSrc":"2826:74:26","nodeType":"YulExpressionStatement","src":"2826:74:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2680:226:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2750:9:26","nodeType":"YulTypedName","src":"2750:9:26","type":""},{"name":"value0","nativeSrc":"2761:6:26","nodeType":"YulTypedName","src":"2761:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2772:4:26","nodeType":"YulTypedName","src":"2772:4:26","type":""}],"src":"2680:226:26"},{"body":{"nativeSrc":"2998:228:26","nodeType":"YulBlock","src":"2998:228:26","statements":[{"body":{"nativeSrc":"3044:16:26","nodeType":"YulBlock","src":"3044:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3053:1:26","nodeType":"YulLiteral","src":"3053:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3056:1:26","nodeType":"YulLiteral","src":"3056:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3046:6:26","nodeType":"YulIdentifier","src":"3046:6:26"},"nativeSrc":"3046:12:26","nodeType":"YulFunctionCall","src":"3046:12:26"},"nativeSrc":"3046:12:26","nodeType":"YulExpressionStatement","src":"3046:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3019:7:26","nodeType":"YulIdentifier","src":"3019:7:26"},{"name":"headStart","nativeSrc":"3028:9:26","nodeType":"YulIdentifier","src":"3028:9:26"}],"functionName":{"name":"sub","nativeSrc":"3015:3:26","nodeType":"YulIdentifier","src":"3015:3:26"},"nativeSrc":"3015:23:26","nodeType":"YulFunctionCall","src":"3015:23:26"},{"kind":"number","nativeSrc":"3040:2:26","nodeType":"YulLiteral","src":"3040:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3011:3:26","nodeType":"YulIdentifier","src":"3011:3:26"},"nativeSrc":"3011:32:26","nodeType":"YulFunctionCall","src":"3011:32:26"},"nativeSrc":"3008:52:26","nodeType":"YulIf","src":"3008:52:26"},{"nativeSrc":"3069:33:26","nodeType":"YulAssignment","src":"3069:33:26","value":{"arguments":[{"name":"headStart","nativeSrc":"3092:9:26","nodeType":"YulIdentifier","src":"3092:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"3079:12:26","nodeType":"YulIdentifier","src":"3079:12:26"},"nativeSrc":"3079:23:26","nodeType":"YulFunctionCall","src":"3079:23:26"},"variableNames":[{"name":"value0","nativeSrc":"3069:6:26","nodeType":"YulIdentifier","src":"3069:6:26"}]},{"nativeSrc":"3111:45:26","nodeType":"YulVariableDeclaration","src":"3111:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3141:9:26","nodeType":"YulIdentifier","src":"3141:9:26"},{"kind":"number","nativeSrc":"3152:2:26","nodeType":"YulLiteral","src":"3152:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3137:3:26","nodeType":"YulIdentifier","src":"3137:3:26"},"nativeSrc":"3137:18:26","nodeType":"YulFunctionCall","src":"3137:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"3124:12:26","nodeType":"YulIdentifier","src":"3124:12:26"},"nativeSrc":"3124:32:26","nodeType":"YulFunctionCall","src":"3124:32:26"},"variables":[{"name":"value","nativeSrc":"3115:5:26","nodeType":"YulTypedName","src":"3115:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3190:5:26","nodeType":"YulIdentifier","src":"3190:5:26"}],"functionName":{"name":"validator_revert_address","nativeSrc":"3165:24:26","nodeType":"YulIdentifier","src":"3165:24:26"},"nativeSrc":"3165:31:26","nodeType":"YulFunctionCall","src":"3165:31:26"},"nativeSrc":"3165:31:26","nodeType":"YulExpressionStatement","src":"3165:31:26"},{"nativeSrc":"3205:15:26","nodeType":"YulAssignment","src":"3205:15:26","value":{"name":"value","nativeSrc":"3215:5:26","nodeType":"YulIdentifier","src":"3215:5:26"},"variableNames":[{"name":"value1","nativeSrc":"3205:6:26","nodeType":"YulIdentifier","src":"3205:6:26"}]}]},"name":"abi_decode_tuple_t_uint256t_address","nativeSrc":"2911:315:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2956:9:26","nodeType":"YulTypedName","src":"2956:9:26","type":""},{"name":"dataEnd","nativeSrc":"2967:7:26","nodeType":"YulTypedName","src":"2967:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2979:6:26","nodeType":"YulTypedName","src":"2979:6:26","type":""},{"name":"value1","nativeSrc":"2987:6:26","nodeType":"YulTypedName","src":"2987:6:26","type":""}],"src":"2911:315:26"},{"body":{"nativeSrc":"3328:87:26","nodeType":"YulBlock","src":"3328:87:26","statements":[{"nativeSrc":"3338:26:26","nodeType":"YulAssignment","src":"3338:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"3350:9:26","nodeType":"YulIdentifier","src":"3350:9:26"},{"kind":"number","nativeSrc":"3361:2:26","nodeType":"YulLiteral","src":"3361:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3346:3:26","nodeType":"YulIdentifier","src":"3346:3:26"},"nativeSrc":"3346:18:26","nodeType":"YulFunctionCall","src":"3346:18:26"},"variableNames":[{"name":"tail","nativeSrc":"3338:4:26","nodeType":"YulIdentifier","src":"3338:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3380:9:26","nodeType":"YulIdentifier","src":"3380:9:26"},{"arguments":[{"name":"value0","nativeSrc":"3395:6:26","nodeType":"YulIdentifier","src":"3395:6:26"},{"kind":"number","nativeSrc":"3403:4:26","nodeType":"YulLiteral","src":"3403:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"3391:3:26","nodeType":"YulIdentifier","src":"3391:3:26"},"nativeSrc":"3391:17:26","nodeType":"YulFunctionCall","src":"3391:17:26"}],"functionName":{"name":"mstore","nativeSrc":"3373:6:26","nodeType":"YulIdentifier","src":"3373:6:26"},"nativeSrc":"3373:36:26","nodeType":"YulFunctionCall","src":"3373:36:26"},"nativeSrc":"3373:36:26","nodeType":"YulExpressionStatement","src":"3373:36:26"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"3231:184:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3297:9:26","nodeType":"YulTypedName","src":"3297:9:26","type":""},{"name":"value0","nativeSrc":"3308:6:26","nodeType":"YulTypedName","src":"3308:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3319:4:26","nodeType":"YulTypedName","src":"3319:4:26","type":""}],"src":"3231:184:26"},{"body":{"nativeSrc":"3452:152:26","nodeType":"YulBlock","src":"3452:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3469:1:26","nodeType":"YulLiteral","src":"3469:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3472:77:26","nodeType":"YulLiteral","src":"3472:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"3462:6:26","nodeType":"YulIdentifier","src":"3462:6:26"},"nativeSrc":"3462:88:26","nodeType":"YulFunctionCall","src":"3462:88:26"},"nativeSrc":"3462:88:26","nodeType":"YulExpressionStatement","src":"3462:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3566:1:26","nodeType":"YulLiteral","src":"3566:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"3569:4:26","nodeType":"YulLiteral","src":"3569:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"3559:6:26","nodeType":"YulIdentifier","src":"3559:6:26"},"nativeSrc":"3559:15:26","nodeType":"YulFunctionCall","src":"3559:15:26"},"nativeSrc":"3559:15:26","nodeType":"YulExpressionStatement","src":"3559:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3590:1:26","nodeType":"YulLiteral","src":"3590:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3593:4:26","nodeType":"YulLiteral","src":"3593:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3583:6:26","nodeType":"YulIdentifier","src":"3583:6:26"},"nativeSrc":"3583:15:26","nodeType":"YulFunctionCall","src":"3583:15:26"},"nativeSrc":"3583:15:26","nodeType":"YulExpressionStatement","src":"3583:15:26"}]},"name":"panic_error_0x41","nativeSrc":"3420:184:26","nodeType":"YulFunctionDefinition","src":"3420:184:26"},{"body":{"nativeSrc":"3655:207:26","nodeType":"YulBlock","src":"3655:207:26","statements":[{"nativeSrc":"3665:19:26","nodeType":"YulAssignment","src":"3665:19:26","value":{"arguments":[{"kind":"number","nativeSrc":"3681:2:26","nodeType":"YulLiteral","src":"3681:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"3675:5:26","nodeType":"YulIdentifier","src":"3675:5:26"},"nativeSrc":"3675:9:26","nodeType":"YulFunctionCall","src":"3675:9:26"},"variableNames":[{"name":"memPtr","nativeSrc":"3665:6:26","nodeType":"YulIdentifier","src":"3665:6:26"}]},{"nativeSrc":"3693:35:26","nodeType":"YulVariableDeclaration","src":"3693:35:26","value":{"arguments":[{"name":"memPtr","nativeSrc":"3715:6:26","nodeType":"YulIdentifier","src":"3715:6:26"},{"kind":"number","nativeSrc":"3723:4:26","nodeType":"YulLiteral","src":"3723:4:26","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"3711:3:26","nodeType":"YulIdentifier","src":"3711:3:26"},"nativeSrc":"3711:17:26","nodeType":"YulFunctionCall","src":"3711:17:26"},"variables":[{"name":"newFreePtr","nativeSrc":"3697:10:26","nodeType":"YulTypedName","src":"3697:10:26","type":""}]},{"body":{"nativeSrc":"3803:22:26","nodeType":"YulBlock","src":"3803:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3805:16:26","nodeType":"YulIdentifier","src":"3805:16:26"},"nativeSrc":"3805:18:26","nodeType":"YulFunctionCall","src":"3805:18:26"},"nativeSrc":"3805:18:26","nodeType":"YulExpressionStatement","src":"3805:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"3746:10:26","nodeType":"YulIdentifier","src":"3746:10:26"},{"kind":"number","nativeSrc":"3758:18:26","nodeType":"YulLiteral","src":"3758:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3743:2:26","nodeType":"YulIdentifier","src":"3743:2:26"},"nativeSrc":"3743:34:26","nodeType":"YulFunctionCall","src":"3743:34:26"},{"arguments":[{"name":"newFreePtr","nativeSrc":"3782:10:26","nodeType":"YulIdentifier","src":"3782:10:26"},{"name":"memPtr","nativeSrc":"3794:6:26","nodeType":"YulIdentifier","src":"3794:6:26"}],"functionName":{"name":"lt","nativeSrc":"3779:2:26","nodeType":"YulIdentifier","src":"3779:2:26"},"nativeSrc":"3779:22:26","nodeType":"YulFunctionCall","src":"3779:22:26"}],"functionName":{"name":"or","nativeSrc":"3740:2:26","nodeType":"YulIdentifier","src":"3740:2:26"},"nativeSrc":"3740:62:26","nodeType":"YulFunctionCall","src":"3740:62:26"},"nativeSrc":"3737:88:26","nodeType":"YulIf","src":"3737:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3841:2:26","nodeType":"YulLiteral","src":"3841:2:26","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"3845:10:26","nodeType":"YulIdentifier","src":"3845:10:26"}],"functionName":{"name":"mstore","nativeSrc":"3834:6:26","nodeType":"YulIdentifier","src":"3834:6:26"},"nativeSrc":"3834:22:26","nodeType":"YulFunctionCall","src":"3834:22:26"},"nativeSrc":"3834:22:26","nodeType":"YulExpressionStatement","src":"3834:22:26"}]},"name":"allocate_memory_4581","nativeSrc":"3609:253:26","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"3644:6:26","nodeType":"YulTypedName","src":"3644:6:26","type":""}],"src":"3609:253:26"},{"body":{"nativeSrc":"3912:289:26","nodeType":"YulBlock","src":"3912:289:26","statements":[{"nativeSrc":"3922:19:26","nodeType":"YulAssignment","src":"3922:19:26","value":{"arguments":[{"kind":"number","nativeSrc":"3938:2:26","nodeType":"YulLiteral","src":"3938:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"3932:5:26","nodeType":"YulIdentifier","src":"3932:5:26"},"nativeSrc":"3932:9:26","nodeType":"YulFunctionCall","src":"3932:9:26"},"variableNames":[{"name":"memPtr","nativeSrc":"3922:6:26","nodeType":"YulIdentifier","src":"3922:6:26"}]},{"nativeSrc":"3950:117:26","nodeType":"YulVariableDeclaration","src":"3950:117:26","value":{"arguments":[{"name":"memPtr","nativeSrc":"3972:6:26","nodeType":"YulIdentifier","src":"3972:6:26"},{"arguments":[{"arguments":[{"name":"size","nativeSrc":"3988:4:26","nodeType":"YulIdentifier","src":"3988:4:26"},{"kind":"number","nativeSrc":"3994:2:26","nodeType":"YulLiteral","src":"3994:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3984:3:26","nodeType":"YulIdentifier","src":"3984:3:26"},"nativeSrc":"3984:13:26","nodeType":"YulFunctionCall","src":"3984:13:26"},{"kind":"number","nativeSrc":"3999:66:26","nodeType":"YulLiteral","src":"3999:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nativeSrc":"3980:3:26","nodeType":"YulIdentifier","src":"3980:3:26"},"nativeSrc":"3980:86:26","nodeType":"YulFunctionCall","src":"3980:86:26"}],"functionName":{"name":"add","nativeSrc":"3968:3:26","nodeType":"YulIdentifier","src":"3968:3:26"},"nativeSrc":"3968:99:26","nodeType":"YulFunctionCall","src":"3968:99:26"},"variables":[{"name":"newFreePtr","nativeSrc":"3954:10:26","nodeType":"YulTypedName","src":"3954:10:26","type":""}]},{"body":{"nativeSrc":"4142:22:26","nodeType":"YulBlock","src":"4142:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4144:16:26","nodeType":"YulIdentifier","src":"4144:16:26"},"nativeSrc":"4144:18:26","nodeType":"YulFunctionCall","src":"4144:18:26"},"nativeSrc":"4144:18:26","nodeType":"YulExpressionStatement","src":"4144:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"4085:10:26","nodeType":"YulIdentifier","src":"4085:10:26"},{"kind":"number","nativeSrc":"4097:18:26","nodeType":"YulLiteral","src":"4097:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4082:2:26","nodeType":"YulIdentifier","src":"4082:2:26"},"nativeSrc":"4082:34:26","nodeType":"YulFunctionCall","src":"4082:34:26"},{"arguments":[{"name":"newFreePtr","nativeSrc":"4121:10:26","nodeType":"YulIdentifier","src":"4121:10:26"},{"name":"memPtr","nativeSrc":"4133:6:26","nodeType":"YulIdentifier","src":"4133:6:26"}],"functionName":{"name":"lt","nativeSrc":"4118:2:26","nodeType":"YulIdentifier","src":"4118:2:26"},"nativeSrc":"4118:22:26","nodeType":"YulFunctionCall","src":"4118:22:26"}],"functionName":{"name":"or","nativeSrc":"4079:2:26","nodeType":"YulIdentifier","src":"4079:2:26"},"nativeSrc":"4079:62:26","nodeType":"YulFunctionCall","src":"4079:62:26"},"nativeSrc":"4076:88:26","nodeType":"YulIf","src":"4076:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4180:2:26","nodeType":"YulLiteral","src":"4180:2:26","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"4184:10:26","nodeType":"YulIdentifier","src":"4184:10:26"}],"functionName":{"name":"mstore","nativeSrc":"4173:6:26","nodeType":"YulIdentifier","src":"4173:6:26"},"nativeSrc":"4173:22:26","nodeType":"YulFunctionCall","src":"4173:22:26"},"nativeSrc":"4173:22:26","nodeType":"YulExpressionStatement","src":"4173:22:26"}]},"name":"allocate_memory","nativeSrc":"3867:334:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"3892:4:26","nodeType":"YulTypedName","src":"3892:4:26","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"3901:6:26","nodeType":"YulTypedName","src":"3901:6:26","type":""}],"src":"3867:334:26"},{"body":{"nativeSrc":"4258:537:26","nodeType":"YulBlock","src":"4258:537:26","statements":[{"body":{"nativeSrc":"4307:16:26","nodeType":"YulBlock","src":"4307:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4316:1:26","nodeType":"YulLiteral","src":"4316:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"4319:1:26","nodeType":"YulLiteral","src":"4319:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4309:6:26","nodeType":"YulIdentifier","src":"4309:6:26"},"nativeSrc":"4309:12:26","nodeType":"YulFunctionCall","src":"4309:12:26"},"nativeSrc":"4309:12:26","nodeType":"YulExpressionStatement","src":"4309:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"4286:6:26","nodeType":"YulIdentifier","src":"4286:6:26"},{"kind":"number","nativeSrc":"4294:4:26","nodeType":"YulLiteral","src":"4294:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"4282:3:26","nodeType":"YulIdentifier","src":"4282:3:26"},"nativeSrc":"4282:17:26","nodeType":"YulFunctionCall","src":"4282:17:26"},{"name":"end","nativeSrc":"4301:3:26","nodeType":"YulIdentifier","src":"4301:3:26"}],"functionName":{"name":"slt","nativeSrc":"4278:3:26","nodeType":"YulIdentifier","src":"4278:3:26"},"nativeSrc":"4278:27:26","nodeType":"YulFunctionCall","src":"4278:27:26"}],"functionName":{"name":"iszero","nativeSrc":"4271:6:26","nodeType":"YulIdentifier","src":"4271:6:26"},"nativeSrc":"4271:35:26","nodeType":"YulFunctionCall","src":"4271:35:26"},"nativeSrc":"4268:55:26","nodeType":"YulIf","src":"4268:55:26"},{"nativeSrc":"4332:30:26","nodeType":"YulVariableDeclaration","src":"4332:30:26","value":{"arguments":[{"name":"offset","nativeSrc":"4355:6:26","nodeType":"YulIdentifier","src":"4355:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"4342:12:26","nodeType":"YulIdentifier","src":"4342:12:26"},"nativeSrc":"4342:20:26","nodeType":"YulFunctionCall","src":"4342:20:26"},"variables":[{"name":"_1","nativeSrc":"4336:2:26","nodeType":"YulTypedName","src":"4336:2:26","type":""}]},{"body":{"nativeSrc":"4401:22:26","nodeType":"YulBlock","src":"4401:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4403:16:26","nodeType":"YulIdentifier","src":"4403:16:26"},"nativeSrc":"4403:18:26","nodeType":"YulFunctionCall","src":"4403:18:26"},"nativeSrc":"4403:18:26","nodeType":"YulExpressionStatement","src":"4403:18:26"}]},"condition":{"arguments":[{"name":"_1","nativeSrc":"4377:2:26","nodeType":"YulIdentifier","src":"4377:2:26"},{"kind":"number","nativeSrc":"4381:18:26","nodeType":"YulLiteral","src":"4381:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4374:2:26","nodeType":"YulIdentifier","src":"4374:2:26"},"nativeSrc":"4374:26:26","nodeType":"YulFunctionCall","src":"4374:26:26"},"nativeSrc":"4371:52:26","nodeType":"YulIf","src":"4371:52:26"},{"nativeSrc":"4432:129:26","nodeType":"YulVariableDeclaration","src":"4432:129:26","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"4475:2:26","nodeType":"YulIdentifier","src":"4475:2:26"},{"kind":"number","nativeSrc":"4479:4:26","nodeType":"YulLiteral","src":"4479:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"4471:3:26","nodeType":"YulIdentifier","src":"4471:3:26"},"nativeSrc":"4471:13:26","nodeType":"YulFunctionCall","src":"4471:13:26"},{"kind":"number","nativeSrc":"4486:66:26","nodeType":"YulLiteral","src":"4486:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nativeSrc":"4467:3:26","nodeType":"YulIdentifier","src":"4467:3:26"},"nativeSrc":"4467:86:26","nodeType":"YulFunctionCall","src":"4467:86:26"},{"kind":"number","nativeSrc":"4555:4:26","nodeType":"YulLiteral","src":"4555:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4463:3:26","nodeType":"YulIdentifier","src":"4463:3:26"},"nativeSrc":"4463:97:26","nodeType":"YulFunctionCall","src":"4463:97:26"}],"functionName":{"name":"allocate_memory","nativeSrc":"4447:15:26","nodeType":"YulIdentifier","src":"4447:15:26"},"nativeSrc":"4447:114:26","nodeType":"YulFunctionCall","src":"4447:114:26"},"variables":[{"name":"array_1","nativeSrc":"4436:7:26","nodeType":"YulTypedName","src":"4436:7:26","type":""}]},{"expression":{"arguments":[{"name":"array_1","nativeSrc":"4577:7:26","nodeType":"YulIdentifier","src":"4577:7:26"},{"name":"_1","nativeSrc":"4586:2:26","nodeType":"YulIdentifier","src":"4586:2:26"}],"functionName":{"name":"mstore","nativeSrc":"4570:6:26","nodeType":"YulIdentifier","src":"4570:6:26"},"nativeSrc":"4570:19:26","nodeType":"YulFunctionCall","src":"4570:19:26"},"nativeSrc":"4570:19:26","nodeType":"YulExpressionStatement","src":"4570:19:26"},{"body":{"nativeSrc":"4637:16:26","nodeType":"YulBlock","src":"4637:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4646:1:26","nodeType":"YulLiteral","src":"4646:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"4649:1:26","nodeType":"YulLiteral","src":"4649:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4639:6:26","nodeType":"YulIdentifier","src":"4639:6:26"},"nativeSrc":"4639:12:26","nodeType":"YulFunctionCall","src":"4639:12:26"},"nativeSrc":"4639:12:26","nodeType":"YulExpressionStatement","src":"4639:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"4612:6:26","nodeType":"YulIdentifier","src":"4612:6:26"},{"name":"_1","nativeSrc":"4620:2:26","nodeType":"YulIdentifier","src":"4620:2:26"}],"functionName":{"name":"add","nativeSrc":"4608:3:26","nodeType":"YulIdentifier","src":"4608:3:26"},"nativeSrc":"4608:15:26","nodeType":"YulFunctionCall","src":"4608:15:26"},{"kind":"number","nativeSrc":"4625:4:26","nodeType":"YulLiteral","src":"4625:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4604:3:26","nodeType":"YulIdentifier","src":"4604:3:26"},"nativeSrc":"4604:26:26","nodeType":"YulFunctionCall","src":"4604:26:26"},{"name":"end","nativeSrc":"4632:3:26","nodeType":"YulIdentifier","src":"4632:3:26"}],"functionName":{"name":"gt","nativeSrc":"4601:2:26","nodeType":"YulIdentifier","src":"4601:2:26"},"nativeSrc":"4601:35:26","nodeType":"YulFunctionCall","src":"4601:35:26"},"nativeSrc":"4598:55:26","nodeType":"YulIf","src":"4598:55:26"},{"expression":{"arguments":[{"arguments":[{"name":"array_1","nativeSrc":"4679:7:26","nodeType":"YulIdentifier","src":"4679:7:26"},{"kind":"number","nativeSrc":"4688:4:26","nodeType":"YulLiteral","src":"4688:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4675:3:26","nodeType":"YulIdentifier","src":"4675:3:26"},"nativeSrc":"4675:18:26","nodeType":"YulFunctionCall","src":"4675:18:26"},{"arguments":[{"name":"offset","nativeSrc":"4699:6:26","nodeType":"YulIdentifier","src":"4699:6:26"},{"kind":"number","nativeSrc":"4707:4:26","nodeType":"YulLiteral","src":"4707:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4695:3:26","nodeType":"YulIdentifier","src":"4695:3:26"},"nativeSrc":"4695:17:26","nodeType":"YulFunctionCall","src":"4695:17:26"},{"name":"_1","nativeSrc":"4714:2:26","nodeType":"YulIdentifier","src":"4714:2:26"}],"functionName":{"name":"calldatacopy","nativeSrc":"4662:12:26","nodeType":"YulIdentifier","src":"4662:12:26"},"nativeSrc":"4662:55:26","nodeType":"YulFunctionCall","src":"4662:55:26"},"nativeSrc":"4662:55:26","nodeType":"YulExpressionStatement","src":"4662:55:26"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array_1","nativeSrc":"4741:7:26","nodeType":"YulIdentifier","src":"4741:7:26"},{"name":"_1","nativeSrc":"4750:2:26","nodeType":"YulIdentifier","src":"4750:2:26"}],"functionName":{"name":"add","nativeSrc":"4737:3:26","nodeType":"YulIdentifier","src":"4737:3:26"},"nativeSrc":"4737:16:26","nodeType":"YulFunctionCall","src":"4737:16:26"},{"kind":"number","nativeSrc":"4755:4:26","nodeType":"YulLiteral","src":"4755:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4733:3:26","nodeType":"YulIdentifier","src":"4733:3:26"},"nativeSrc":"4733:27:26","nodeType":"YulFunctionCall","src":"4733:27:26"},{"kind":"number","nativeSrc":"4762:1:26","nodeType":"YulLiteral","src":"4762:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4726:6:26","nodeType":"YulIdentifier","src":"4726:6:26"},"nativeSrc":"4726:38:26","nodeType":"YulFunctionCall","src":"4726:38:26"},"nativeSrc":"4726:38:26","nodeType":"YulExpressionStatement","src":"4726:38:26"},{"nativeSrc":"4773:16:26","nodeType":"YulAssignment","src":"4773:16:26","value":{"name":"array_1","nativeSrc":"4782:7:26","nodeType":"YulIdentifier","src":"4782:7:26"},"variableNames":[{"name":"array","nativeSrc":"4773:5:26","nodeType":"YulIdentifier","src":"4773:5:26"}]}]},"name":"abi_decode_bytes","nativeSrc":"4206:589:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4232:6:26","nodeType":"YulTypedName","src":"4232:6:26","type":""},{"name":"end","nativeSrc":"4240:3:26","nodeType":"YulTypedName","src":"4240:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"4248:5:26","nodeType":"YulTypedName","src":"4248:5:26","type":""}],"src":"4206:589:26"},{"body":{"nativeSrc":"4896:359:26","nodeType":"YulBlock","src":"4896:359:26","statements":[{"body":{"nativeSrc":"4942:16:26","nodeType":"YulBlock","src":"4942:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4951:1:26","nodeType":"YulLiteral","src":"4951:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"4954:1:26","nodeType":"YulLiteral","src":"4954:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4944:6:26","nodeType":"YulIdentifier","src":"4944:6:26"},"nativeSrc":"4944:12:26","nodeType":"YulFunctionCall","src":"4944:12:26"},"nativeSrc":"4944:12:26","nodeType":"YulExpressionStatement","src":"4944:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4917:7:26","nodeType":"YulIdentifier","src":"4917:7:26"},{"name":"headStart","nativeSrc":"4926:9:26","nodeType":"YulIdentifier","src":"4926:9:26"}],"functionName":{"name":"sub","nativeSrc":"4913:3:26","nodeType":"YulIdentifier","src":"4913:3:26"},"nativeSrc":"4913:23:26","nodeType":"YulFunctionCall","src":"4913:23:26"},{"kind":"number","nativeSrc":"4938:2:26","nodeType":"YulLiteral","src":"4938:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4909:3:26","nodeType":"YulIdentifier","src":"4909:3:26"},"nativeSrc":"4909:32:26","nodeType":"YulFunctionCall","src":"4909:32:26"},"nativeSrc":"4906:52:26","nodeType":"YulIf","src":"4906:52:26"},{"nativeSrc":"4967:36:26","nodeType":"YulVariableDeclaration","src":"4967:36:26","value":{"arguments":[{"name":"headStart","nativeSrc":"4993:9:26","nodeType":"YulIdentifier","src":"4993:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"4980:12:26","nodeType":"YulIdentifier","src":"4980:12:26"},"nativeSrc":"4980:23:26","nodeType":"YulFunctionCall","src":"4980:23:26"},"variables":[{"name":"value","nativeSrc":"4971:5:26","nodeType":"YulTypedName","src":"4971:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5037:5:26","nodeType":"YulIdentifier","src":"5037:5:26"}],"functionName":{"name":"validator_revert_address","nativeSrc":"5012:24:26","nodeType":"YulIdentifier","src":"5012:24:26"},"nativeSrc":"5012:31:26","nodeType":"YulFunctionCall","src":"5012:31:26"},"nativeSrc":"5012:31:26","nodeType":"YulExpressionStatement","src":"5012:31:26"},{"nativeSrc":"5052:15:26","nodeType":"YulAssignment","src":"5052:15:26","value":{"name":"value","nativeSrc":"5062:5:26","nodeType":"YulIdentifier","src":"5062:5:26"},"variableNames":[{"name":"value0","nativeSrc":"5052:6:26","nodeType":"YulIdentifier","src":"5052:6:26"}]},{"nativeSrc":"5076:46:26","nodeType":"YulVariableDeclaration","src":"5076:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5107:9:26","nodeType":"YulIdentifier","src":"5107:9:26"},{"kind":"number","nativeSrc":"5118:2:26","nodeType":"YulLiteral","src":"5118:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5103:3:26","nodeType":"YulIdentifier","src":"5103:3:26"},"nativeSrc":"5103:18:26","nodeType":"YulFunctionCall","src":"5103:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"5090:12:26","nodeType":"YulIdentifier","src":"5090:12:26"},"nativeSrc":"5090:32:26","nodeType":"YulFunctionCall","src":"5090:32:26"},"variables":[{"name":"offset","nativeSrc":"5080:6:26","nodeType":"YulTypedName","src":"5080:6:26","type":""}]},{"body":{"nativeSrc":"5165:16:26","nodeType":"YulBlock","src":"5165:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5174:1:26","nodeType":"YulLiteral","src":"5174:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"5177:1:26","nodeType":"YulLiteral","src":"5177:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5167:6:26","nodeType":"YulIdentifier","src":"5167:6:26"},"nativeSrc":"5167:12:26","nodeType":"YulFunctionCall","src":"5167:12:26"},"nativeSrc":"5167:12:26","nodeType":"YulExpressionStatement","src":"5167:12:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"5137:6:26","nodeType":"YulIdentifier","src":"5137:6:26"},{"kind":"number","nativeSrc":"5145:18:26","nodeType":"YulLiteral","src":"5145:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5134:2:26","nodeType":"YulIdentifier","src":"5134:2:26"},"nativeSrc":"5134:30:26","nodeType":"YulFunctionCall","src":"5134:30:26"},"nativeSrc":"5131:50:26","nodeType":"YulIf","src":"5131:50:26"},{"nativeSrc":"5190:59:26","nodeType":"YulAssignment","src":"5190:59:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5221:9:26","nodeType":"YulIdentifier","src":"5221:9:26"},{"name":"offset","nativeSrc":"5232:6:26","nodeType":"YulIdentifier","src":"5232:6:26"}],"functionName":{"name":"add","nativeSrc":"5217:3:26","nodeType":"YulIdentifier","src":"5217:3:26"},"nativeSrc":"5217:22:26","nodeType":"YulFunctionCall","src":"5217:22:26"},{"name":"dataEnd","nativeSrc":"5241:7:26","nodeType":"YulIdentifier","src":"5241:7:26"}],"functionName":{"name":"abi_decode_bytes","nativeSrc":"5200:16:26","nodeType":"YulIdentifier","src":"5200:16:26"},"nativeSrc":"5200:49:26","nodeType":"YulFunctionCall","src":"5200:49:26"},"variableNames":[{"name":"value1","nativeSrc":"5190:6:26","nodeType":"YulIdentifier","src":"5190:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"4800:455:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4854:9:26","nodeType":"YulTypedName","src":"4854:9:26","type":""},{"name":"dataEnd","nativeSrc":"4865:7:26","nodeType":"YulTypedName","src":"4865:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4877:6:26","nodeType":"YulTypedName","src":"4877:6:26","type":""},{"name":"value1","nativeSrc":"4885:6:26","nodeType":"YulTypedName","src":"4885:6:26","type":""}],"src":"4800:455:26"},{"body":{"nativeSrc":"5361:76:26","nodeType":"YulBlock","src":"5361:76:26","statements":[{"nativeSrc":"5371:26:26","nodeType":"YulAssignment","src":"5371:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"5383:9:26","nodeType":"YulIdentifier","src":"5383:9:26"},{"kind":"number","nativeSrc":"5394:2:26","nodeType":"YulLiteral","src":"5394:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5379:3:26","nodeType":"YulIdentifier","src":"5379:3:26"},"nativeSrc":"5379:18:26","nodeType":"YulFunctionCall","src":"5379:18:26"},"variableNames":[{"name":"tail","nativeSrc":"5371:4:26","nodeType":"YulIdentifier","src":"5371:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5413:9:26","nodeType":"YulIdentifier","src":"5413:9:26"},{"name":"value0","nativeSrc":"5424:6:26","nodeType":"YulIdentifier","src":"5424:6:26"}],"functionName":{"name":"mstore","nativeSrc":"5406:6:26","nodeType":"YulIdentifier","src":"5406:6:26"},"nativeSrc":"5406:25:26","nodeType":"YulFunctionCall","src":"5406:25:26"},"nativeSrc":"5406:25:26","nodeType":"YulExpressionStatement","src":"5406:25:26"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"5260:177:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5330:9:26","nodeType":"YulTypedName","src":"5330:9:26","type":""},{"name":"value0","nativeSrc":"5341:6:26","nodeType":"YulTypedName","src":"5341:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5352:4:26","nodeType":"YulTypedName","src":"5352:4:26","type":""}],"src":"5260:177:26"},{"body":{"nativeSrc":"5526:283:26","nodeType":"YulBlock","src":"5526:283:26","statements":[{"body":{"nativeSrc":"5575:16:26","nodeType":"YulBlock","src":"5575:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5584:1:26","nodeType":"YulLiteral","src":"5584:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"5587:1:26","nodeType":"YulLiteral","src":"5587:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5577:6:26","nodeType":"YulIdentifier","src":"5577:6:26"},"nativeSrc":"5577:12:26","nodeType":"YulFunctionCall","src":"5577:12:26"},"nativeSrc":"5577:12:26","nodeType":"YulExpressionStatement","src":"5577:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"5554:6:26","nodeType":"YulIdentifier","src":"5554:6:26"},{"kind":"number","nativeSrc":"5562:4:26","nodeType":"YulLiteral","src":"5562:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"5550:3:26","nodeType":"YulIdentifier","src":"5550:3:26"},"nativeSrc":"5550:17:26","nodeType":"YulFunctionCall","src":"5550:17:26"},{"name":"end","nativeSrc":"5569:3:26","nodeType":"YulIdentifier","src":"5569:3:26"}],"functionName":{"name":"slt","nativeSrc":"5546:3:26","nodeType":"YulIdentifier","src":"5546:3:26"},"nativeSrc":"5546:27:26","nodeType":"YulFunctionCall","src":"5546:27:26"}],"functionName":{"name":"iszero","nativeSrc":"5539:6:26","nodeType":"YulIdentifier","src":"5539:6:26"},"nativeSrc":"5539:35:26","nodeType":"YulFunctionCall","src":"5539:35:26"},"nativeSrc":"5536:55:26","nodeType":"YulIf","src":"5536:55:26"},{"nativeSrc":"5600:30:26","nodeType":"YulAssignment","src":"5600:30:26","value":{"arguments":[{"name":"offset","nativeSrc":"5623:6:26","nodeType":"YulIdentifier","src":"5623:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"5610:12:26","nodeType":"YulIdentifier","src":"5610:12:26"},"nativeSrc":"5610:20:26","nodeType":"YulFunctionCall","src":"5610:20:26"},"variableNames":[{"name":"length","nativeSrc":"5600:6:26","nodeType":"YulIdentifier","src":"5600:6:26"}]},{"body":{"nativeSrc":"5673:16:26","nodeType":"YulBlock","src":"5673:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5682:1:26","nodeType":"YulLiteral","src":"5682:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"5685:1:26","nodeType":"YulLiteral","src":"5685:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5675:6:26","nodeType":"YulIdentifier","src":"5675:6:26"},"nativeSrc":"5675:12:26","nodeType":"YulFunctionCall","src":"5675:12:26"},"nativeSrc":"5675:12:26","nodeType":"YulExpressionStatement","src":"5675:12:26"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"5645:6:26","nodeType":"YulIdentifier","src":"5645:6:26"},{"kind":"number","nativeSrc":"5653:18:26","nodeType":"YulLiteral","src":"5653:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5642:2:26","nodeType":"YulIdentifier","src":"5642:2:26"},"nativeSrc":"5642:30:26","nodeType":"YulFunctionCall","src":"5642:30:26"},"nativeSrc":"5639:50:26","nodeType":"YulIf","src":"5639:50:26"},{"nativeSrc":"5698:29:26","nodeType":"YulAssignment","src":"5698:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"5714:6:26","nodeType":"YulIdentifier","src":"5714:6:26"},{"kind":"number","nativeSrc":"5722:4:26","nodeType":"YulLiteral","src":"5722:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5710:3:26","nodeType":"YulIdentifier","src":"5710:3:26"},"nativeSrc":"5710:17:26","nodeType":"YulFunctionCall","src":"5710:17:26"},"variableNames":[{"name":"arrayPos","nativeSrc":"5698:8:26","nodeType":"YulIdentifier","src":"5698:8:26"}]},{"body":{"nativeSrc":"5787:16:26","nodeType":"YulBlock","src":"5787:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5796:1:26","nodeType":"YulLiteral","src":"5796:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"5799:1:26","nodeType":"YulLiteral","src":"5799:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5789:6:26","nodeType":"YulIdentifier","src":"5789:6:26"},"nativeSrc":"5789:12:26","nodeType":"YulFunctionCall","src":"5789:12:26"},"nativeSrc":"5789:12:26","nodeType":"YulExpressionStatement","src":"5789:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"5750:6:26","nodeType":"YulIdentifier","src":"5750:6:26"},{"arguments":[{"kind":"number","nativeSrc":"5762:1:26","nodeType":"YulLiteral","src":"5762:1:26","type":"","value":"5"},{"name":"length","nativeSrc":"5765:6:26","nodeType":"YulIdentifier","src":"5765:6:26"}],"functionName":{"name":"shl","nativeSrc":"5758:3:26","nodeType":"YulIdentifier","src":"5758:3:26"},"nativeSrc":"5758:14:26","nodeType":"YulFunctionCall","src":"5758:14:26"}],"functionName":{"name":"add","nativeSrc":"5746:3:26","nodeType":"YulIdentifier","src":"5746:3:26"},"nativeSrc":"5746:27:26","nodeType":"YulFunctionCall","src":"5746:27:26"},{"kind":"number","nativeSrc":"5775:4:26","nodeType":"YulLiteral","src":"5775:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5742:3:26","nodeType":"YulIdentifier","src":"5742:3:26"},"nativeSrc":"5742:38:26","nodeType":"YulFunctionCall","src":"5742:38:26"},{"name":"end","nativeSrc":"5782:3:26","nodeType":"YulIdentifier","src":"5782:3:26"}],"functionName":{"name":"gt","nativeSrc":"5739:2:26","nodeType":"YulIdentifier","src":"5739:2:26"},"nativeSrc":"5739:47:26","nodeType":"YulFunctionCall","src":"5739:47:26"},"nativeSrc":"5736:67:26","nodeType":"YulIf","src":"5736:67:26"}]},"name":"abi_decode_array_address_dyn_calldata","nativeSrc":"5442:367:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5489:6:26","nodeType":"YulTypedName","src":"5489:6:26","type":""},{"name":"end","nativeSrc":"5497:3:26","nodeType":"YulTypedName","src":"5497:3:26","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"5505:8:26","nodeType":"YulTypedName","src":"5505:8:26","type":""},{"name":"length","nativeSrc":"5515:6:26","nodeType":"YulTypedName","src":"5515:6:26","type":""}],"src":"5442:367:26"},{"body":{"nativeSrc":"6039:1036:26","nodeType":"YulBlock","src":"6039:1036:26","statements":[{"body":{"nativeSrc":"6086:16:26","nodeType":"YulBlock","src":"6086:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6095:1:26","nodeType":"YulLiteral","src":"6095:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"6098:1:26","nodeType":"YulLiteral","src":"6098:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6088:6:26","nodeType":"YulIdentifier","src":"6088:6:26"},"nativeSrc":"6088:12:26","nodeType":"YulFunctionCall","src":"6088:12:26"},"nativeSrc":"6088:12:26","nodeType":"YulExpressionStatement","src":"6088:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6060:7:26","nodeType":"YulIdentifier","src":"6060:7:26"},{"name":"headStart","nativeSrc":"6069:9:26","nodeType":"YulIdentifier","src":"6069:9:26"}],"functionName":{"name":"sub","nativeSrc":"6056:3:26","nodeType":"YulIdentifier","src":"6056:3:26"},"nativeSrc":"6056:23:26","nodeType":"YulFunctionCall","src":"6056:23:26"},{"kind":"number","nativeSrc":"6081:3:26","nodeType":"YulLiteral","src":"6081:3:26","type":"","value":"192"}],"functionName":{"name":"slt","nativeSrc":"6052:3:26","nodeType":"YulIdentifier","src":"6052:3:26"},"nativeSrc":"6052:33:26","nodeType":"YulFunctionCall","src":"6052:33:26"},"nativeSrc":"6049:53:26","nodeType":"YulIf","src":"6049:53:26"},{"nativeSrc":"6111:37:26","nodeType":"YulVariableDeclaration","src":"6111:37:26","value":{"arguments":[{"name":"headStart","nativeSrc":"6138:9:26","nodeType":"YulIdentifier","src":"6138:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"6125:12:26","nodeType":"YulIdentifier","src":"6125:12:26"},"nativeSrc":"6125:23:26","nodeType":"YulFunctionCall","src":"6125:23:26"},"variables":[{"name":"offset","nativeSrc":"6115:6:26","nodeType":"YulTypedName","src":"6115:6:26","type":""}]},{"nativeSrc":"6157:28:26","nodeType":"YulVariableDeclaration","src":"6157:28:26","value":{"kind":"number","nativeSrc":"6167:18:26","nodeType":"YulLiteral","src":"6167:18:26","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"6161:2:26","nodeType":"YulTypedName","src":"6161:2:26","type":""}]},{"body":{"nativeSrc":"6212:16:26","nodeType":"YulBlock","src":"6212:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6221:1:26","nodeType":"YulLiteral","src":"6221:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"6224:1:26","nodeType":"YulLiteral","src":"6224:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6214:6:26","nodeType":"YulIdentifier","src":"6214:6:26"},"nativeSrc":"6214:12:26","nodeType":"YulFunctionCall","src":"6214:12:26"},"nativeSrc":"6214:12:26","nodeType":"YulExpressionStatement","src":"6214:12:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"6200:6:26","nodeType":"YulIdentifier","src":"6200:6:26"},{"name":"_1","nativeSrc":"6208:2:26","nodeType":"YulIdentifier","src":"6208:2:26"}],"functionName":{"name":"gt","nativeSrc":"6197:2:26","nodeType":"YulIdentifier","src":"6197:2:26"},"nativeSrc":"6197:14:26","nodeType":"YulFunctionCall","src":"6197:14:26"},"nativeSrc":"6194:34:26","nodeType":"YulIf","src":"6194:34:26"},{"nativeSrc":"6237:96:26","nodeType":"YulVariableDeclaration","src":"6237:96:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6305:9:26","nodeType":"YulIdentifier","src":"6305:9:26"},{"name":"offset","nativeSrc":"6316:6:26","nodeType":"YulIdentifier","src":"6316:6:26"}],"functionName":{"name":"add","nativeSrc":"6301:3:26","nodeType":"YulIdentifier","src":"6301:3:26"},"nativeSrc":"6301:22:26","nodeType":"YulFunctionCall","src":"6301:22:26"},{"name":"dataEnd","nativeSrc":"6325:7:26","nodeType":"YulIdentifier","src":"6325:7:26"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nativeSrc":"6263:37:26","nodeType":"YulIdentifier","src":"6263:37:26"},"nativeSrc":"6263:70:26","nodeType":"YulFunctionCall","src":"6263:70:26"},"variables":[{"name":"value0_1","nativeSrc":"6241:8:26","nodeType":"YulTypedName","src":"6241:8:26","type":""},{"name":"value1_1","nativeSrc":"6251:8:26","nodeType":"YulTypedName","src":"6251:8:26","type":""}]},{"nativeSrc":"6342:18:26","nodeType":"YulAssignment","src":"6342:18:26","value":{"name":"value0_1","nativeSrc":"6352:8:26","nodeType":"YulIdentifier","src":"6352:8:26"},"variableNames":[{"name":"value0","nativeSrc":"6342:6:26","nodeType":"YulIdentifier","src":"6342:6:26"}]},{"nativeSrc":"6369:18:26","nodeType":"YulAssignment","src":"6369:18:26","value":{"name":"value1_1","nativeSrc":"6379:8:26","nodeType":"YulIdentifier","src":"6379:8:26"},"variableNames":[{"name":"value1","nativeSrc":"6369:6:26","nodeType":"YulIdentifier","src":"6369:6:26"}]},{"nativeSrc":"6396:48:26","nodeType":"YulVariableDeclaration","src":"6396:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6429:9:26","nodeType":"YulIdentifier","src":"6429:9:26"},{"kind":"number","nativeSrc":"6440:2:26","nodeType":"YulLiteral","src":"6440:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6425:3:26","nodeType":"YulIdentifier","src":"6425:3:26"},"nativeSrc":"6425:18:26","nodeType":"YulFunctionCall","src":"6425:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"6412:12:26","nodeType":"YulIdentifier","src":"6412:12:26"},"nativeSrc":"6412:32:26","nodeType":"YulFunctionCall","src":"6412:32:26"},"variables":[{"name":"offset_1","nativeSrc":"6400:8:26","nodeType":"YulTypedName","src":"6400:8:26","type":""}]},{"body":{"nativeSrc":"6473:16:26","nodeType":"YulBlock","src":"6473:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6482:1:26","nodeType":"YulLiteral","src":"6482:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"6485:1:26","nodeType":"YulLiteral","src":"6485:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6475:6:26","nodeType":"YulIdentifier","src":"6475:6:26"},"nativeSrc":"6475:12:26","nodeType":"YulFunctionCall","src":"6475:12:26"},"nativeSrc":"6475:12:26","nodeType":"YulExpressionStatement","src":"6475:12:26"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"6459:8:26","nodeType":"YulIdentifier","src":"6459:8:26"},{"name":"_1","nativeSrc":"6469:2:26","nodeType":"YulIdentifier","src":"6469:2:26"}],"functionName":{"name":"gt","nativeSrc":"6456:2:26","nodeType":"YulIdentifier","src":"6456:2:26"},"nativeSrc":"6456:16:26","nodeType":"YulFunctionCall","src":"6456:16:26"},"nativeSrc":"6453:36:26","nodeType":"YulIf","src":"6453:36:26"},{"nativeSrc":"6498:98:26","nodeType":"YulVariableDeclaration","src":"6498:98:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6566:9:26","nodeType":"YulIdentifier","src":"6566:9:26"},{"name":"offset_1","nativeSrc":"6577:8:26","nodeType":"YulIdentifier","src":"6577:8:26"}],"functionName":{"name":"add","nativeSrc":"6562:3:26","nodeType":"YulIdentifier","src":"6562:3:26"},"nativeSrc":"6562:24:26","nodeType":"YulFunctionCall","src":"6562:24:26"},{"name":"dataEnd","nativeSrc":"6588:7:26","nodeType":"YulIdentifier","src":"6588:7:26"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nativeSrc":"6524:37:26","nodeType":"YulIdentifier","src":"6524:37:26"},"nativeSrc":"6524:72:26","nodeType":"YulFunctionCall","src":"6524:72:26"},"variables":[{"name":"value2_1","nativeSrc":"6502:8:26","nodeType":"YulTypedName","src":"6502:8:26","type":""},{"name":"value3_1","nativeSrc":"6512:8:26","nodeType":"YulTypedName","src":"6512:8:26","type":""}]},{"nativeSrc":"6605:18:26","nodeType":"YulAssignment","src":"6605:18:26","value":{"name":"value2_1","nativeSrc":"6615:8:26","nodeType":"YulIdentifier","src":"6615:8:26"},"variableNames":[{"name":"value2","nativeSrc":"6605:6:26","nodeType":"YulIdentifier","src":"6605:6:26"}]},{"nativeSrc":"6632:18:26","nodeType":"YulAssignment","src":"6632:18:26","value":{"name":"value3_1","nativeSrc":"6642:8:26","nodeType":"YulIdentifier","src":"6642:8:26"},"variableNames":[{"name":"value3","nativeSrc":"6632:6:26","nodeType":"YulIdentifier","src":"6632:6:26"}]},{"nativeSrc":"6659:45:26","nodeType":"YulVariableDeclaration","src":"6659:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6689:9:26","nodeType":"YulIdentifier","src":"6689:9:26"},{"kind":"number","nativeSrc":"6700:2:26","nodeType":"YulLiteral","src":"6700:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6685:3:26","nodeType":"YulIdentifier","src":"6685:3:26"},"nativeSrc":"6685:18:26","nodeType":"YulFunctionCall","src":"6685:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"6672:12:26","nodeType":"YulIdentifier","src":"6672:12:26"},"nativeSrc":"6672:32:26","nodeType":"YulFunctionCall","src":"6672:32:26"},"variables":[{"name":"value","nativeSrc":"6663:5:26","nodeType":"YulTypedName","src":"6663:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6738:5:26","nodeType":"YulIdentifier","src":"6738:5:26"}],"functionName":{"name":"validator_revert_address","nativeSrc":"6713:24:26","nodeType":"YulIdentifier","src":"6713:24:26"},"nativeSrc":"6713:31:26","nodeType":"YulFunctionCall","src":"6713:31:26"},"nativeSrc":"6713:31:26","nodeType":"YulExpressionStatement","src":"6713:31:26"},{"nativeSrc":"6753:15:26","nodeType":"YulAssignment","src":"6753:15:26","value":{"name":"value","nativeSrc":"6763:5:26","nodeType":"YulIdentifier","src":"6763:5:26"},"variableNames":[{"name":"value4","nativeSrc":"6753:6:26","nodeType":"YulIdentifier","src":"6753:6:26"}]},{"nativeSrc":"6777:47:26","nodeType":"YulVariableDeclaration","src":"6777:47:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6809:9:26","nodeType":"YulIdentifier","src":"6809:9:26"},{"kind":"number","nativeSrc":"6820:2:26","nodeType":"YulLiteral","src":"6820:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6805:3:26","nodeType":"YulIdentifier","src":"6805:3:26"},"nativeSrc":"6805:18:26","nodeType":"YulFunctionCall","src":"6805:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"6792:12:26","nodeType":"YulIdentifier","src":"6792:12:26"},"nativeSrc":"6792:32:26","nodeType":"YulFunctionCall","src":"6792:32:26"},"variables":[{"name":"value_1","nativeSrc":"6781:7:26","nodeType":"YulTypedName","src":"6781:7:26","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"6858:7:26","nodeType":"YulIdentifier","src":"6858:7:26"}],"functionName":{"name":"validator_revert_address","nativeSrc":"6833:24:26","nodeType":"YulIdentifier","src":"6833:24:26"},"nativeSrc":"6833:33:26","nodeType":"YulFunctionCall","src":"6833:33:26"},"nativeSrc":"6833:33:26","nodeType":"YulExpressionStatement","src":"6833:33:26"},{"nativeSrc":"6875:17:26","nodeType":"YulAssignment","src":"6875:17:26","value":{"name":"value_1","nativeSrc":"6885:7:26","nodeType":"YulIdentifier","src":"6885:7:26"},"variableNames":[{"name":"value5","nativeSrc":"6875:6:26","nodeType":"YulIdentifier","src":"6875:6:26"}]},{"nativeSrc":"6901:43:26","nodeType":"YulAssignment","src":"6901:43:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6928:9:26","nodeType":"YulIdentifier","src":"6928:9:26"},{"kind":"number","nativeSrc":"6939:3:26","nodeType":"YulLiteral","src":"6939:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6924:3:26","nodeType":"YulIdentifier","src":"6924:3:26"},"nativeSrc":"6924:19:26","nodeType":"YulFunctionCall","src":"6924:19:26"}],"functionName":{"name":"calldataload","nativeSrc":"6911:12:26","nodeType":"YulIdentifier","src":"6911:12:26"},"nativeSrc":"6911:33:26","nodeType":"YulFunctionCall","src":"6911:33:26"},"variableNames":[{"name":"value6","nativeSrc":"6901:6:26","nodeType":"YulIdentifier","src":"6901:6:26"}]},{"nativeSrc":"6953:48:26","nodeType":"YulVariableDeclaration","src":"6953:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6985:9:26","nodeType":"YulIdentifier","src":"6985:9:26"},{"kind":"number","nativeSrc":"6996:3:26","nodeType":"YulLiteral","src":"6996:3:26","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"6981:3:26","nodeType":"YulIdentifier","src":"6981:3:26"},"nativeSrc":"6981:19:26","nodeType":"YulFunctionCall","src":"6981:19:26"}],"functionName":{"name":"calldataload","nativeSrc":"6968:12:26","nodeType":"YulIdentifier","src":"6968:12:26"},"nativeSrc":"6968:33:26","nodeType":"YulFunctionCall","src":"6968:33:26"},"variables":[{"name":"value_2","nativeSrc":"6957:7:26","nodeType":"YulTypedName","src":"6957:7:26","type":""}]},{"expression":{"arguments":[{"name":"value_2","nativeSrc":"7035:7:26","nodeType":"YulIdentifier","src":"7035:7:26"}],"functionName":{"name":"validator_revert_address","nativeSrc":"7010:24:26","nodeType":"YulIdentifier","src":"7010:24:26"},"nativeSrc":"7010:33:26","nodeType":"YulFunctionCall","src":"7010:33:26"},"nativeSrc":"7010:33:26","nodeType":"YulExpressionStatement","src":"7010:33:26"},{"nativeSrc":"7052:17:26","nodeType":"YulAssignment","src":"7052:17:26","value":{"name":"value_2","nativeSrc":"7062:7:26","nodeType":"YulIdentifier","src":"7062:7:26"},"variableNames":[{"name":"value7","nativeSrc":"7052:6:26","nodeType":"YulIdentifier","src":"7052:6:26"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_addresst_addresst_uint256t_address","nativeSrc":"5814:1261:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5949:9:26","nodeType":"YulTypedName","src":"5949:9:26","type":""},{"name":"dataEnd","nativeSrc":"5960:7:26","nodeType":"YulTypedName","src":"5960:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5972:6:26","nodeType":"YulTypedName","src":"5972:6:26","type":""},{"name":"value1","nativeSrc":"5980:6:26","nodeType":"YulTypedName","src":"5980:6:26","type":""},{"name":"value2","nativeSrc":"5988:6:26","nodeType":"YulTypedName","src":"5988:6:26","type":""},{"name":"value3","nativeSrc":"5996:6:26","nodeType":"YulTypedName","src":"5996:6:26","type":""},{"name":"value4","nativeSrc":"6004:6:26","nodeType":"YulTypedName","src":"6004:6:26","type":""},{"name":"value5","nativeSrc":"6012:6:26","nodeType":"YulTypedName","src":"6012:6:26","type":""},{"name":"value6","nativeSrc":"6020:6:26","nodeType":"YulTypedName","src":"6020:6:26","type":""},{"name":"value7","nativeSrc":"6028:6:26","nodeType":"YulTypedName","src":"6028:6:26","type":""}],"src":"5814:1261:26"},{"body":{"nativeSrc":"7207:125:26","nodeType":"YulBlock","src":"7207:125:26","statements":[{"nativeSrc":"7217:26:26","nodeType":"YulAssignment","src":"7217:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"7229:9:26","nodeType":"YulIdentifier","src":"7229:9:26"},{"kind":"number","nativeSrc":"7240:2:26","nodeType":"YulLiteral","src":"7240:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7225:3:26","nodeType":"YulIdentifier","src":"7225:3:26"},"nativeSrc":"7225:18:26","nodeType":"YulFunctionCall","src":"7225:18:26"},"variableNames":[{"name":"tail","nativeSrc":"7217:4:26","nodeType":"YulIdentifier","src":"7217:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7259:9:26","nodeType":"YulIdentifier","src":"7259:9:26"},{"arguments":[{"name":"value0","nativeSrc":"7274:6:26","nodeType":"YulIdentifier","src":"7274:6:26"},{"kind":"number","nativeSrc":"7282:42:26","nodeType":"YulLiteral","src":"7282:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"7270:3:26","nodeType":"YulIdentifier","src":"7270:3:26"},"nativeSrc":"7270:55:26","nodeType":"YulFunctionCall","src":"7270:55:26"}],"functionName":{"name":"mstore","nativeSrc":"7252:6:26","nodeType":"YulIdentifier","src":"7252:6:26"},"nativeSrc":"7252:74:26","nodeType":"YulFunctionCall","src":"7252:74:26"},"nativeSrc":"7252:74:26","nodeType":"YulExpressionStatement","src":"7252:74:26"}]},"name":"abi_encode_tuple_t_contract$_IBaluniV1Registry_$2909__to_t_address__fromStack_reversed","nativeSrc":"7080:252:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7176:9:26","nodeType":"YulTypedName","src":"7176:9:26","type":""},{"name":"value0","nativeSrc":"7187:6:26","nodeType":"YulTypedName","src":"7187:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7198:4:26","nodeType":"YulTypedName","src":"7198:4:26","type":""}],"src":"7080:252:26"},{"body":{"nativeSrc":"7423:341:26","nodeType":"YulBlock","src":"7423:341:26","statements":[{"body":{"nativeSrc":"7469:16:26","nodeType":"YulBlock","src":"7469:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7478:1:26","nodeType":"YulLiteral","src":"7478:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"7481:1:26","nodeType":"YulLiteral","src":"7481:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7471:6:26","nodeType":"YulIdentifier","src":"7471:6:26"},"nativeSrc":"7471:12:26","nodeType":"YulFunctionCall","src":"7471:12:26"},"nativeSrc":"7471:12:26","nodeType":"YulExpressionStatement","src":"7471:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7444:7:26","nodeType":"YulIdentifier","src":"7444:7:26"},{"name":"headStart","nativeSrc":"7453:9:26","nodeType":"YulIdentifier","src":"7453:9:26"}],"functionName":{"name":"sub","nativeSrc":"7440:3:26","nodeType":"YulIdentifier","src":"7440:3:26"},"nativeSrc":"7440:23:26","nodeType":"YulFunctionCall","src":"7440:23:26"},{"kind":"number","nativeSrc":"7465:2:26","nodeType":"YulLiteral","src":"7465:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"7436:3:26","nodeType":"YulIdentifier","src":"7436:3:26"},"nativeSrc":"7436:32:26","nodeType":"YulFunctionCall","src":"7436:32:26"},"nativeSrc":"7433:52:26","nodeType":"YulIf","src":"7433:52:26"},{"nativeSrc":"7494:36:26","nodeType":"YulVariableDeclaration","src":"7494:36:26","value":{"arguments":[{"name":"headStart","nativeSrc":"7520:9:26","nodeType":"YulIdentifier","src":"7520:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"7507:12:26","nodeType":"YulIdentifier","src":"7507:12:26"},"nativeSrc":"7507:23:26","nodeType":"YulFunctionCall","src":"7507:23:26"},"variables":[{"name":"value","nativeSrc":"7498:5:26","nodeType":"YulTypedName","src":"7498:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"7564:5:26","nodeType":"YulIdentifier","src":"7564:5:26"}],"functionName":{"name":"validator_revert_address","nativeSrc":"7539:24:26","nodeType":"YulIdentifier","src":"7539:24:26"},"nativeSrc":"7539:31:26","nodeType":"YulFunctionCall","src":"7539:31:26"},"nativeSrc":"7539:31:26","nodeType":"YulExpressionStatement","src":"7539:31:26"},{"nativeSrc":"7579:15:26","nodeType":"YulAssignment","src":"7579:15:26","value":{"name":"value","nativeSrc":"7589:5:26","nodeType":"YulIdentifier","src":"7589:5:26"},"variableNames":[{"name":"value0","nativeSrc":"7579:6:26","nodeType":"YulIdentifier","src":"7579:6:26"}]},{"nativeSrc":"7603:47:26","nodeType":"YulVariableDeclaration","src":"7603:47:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7635:9:26","nodeType":"YulIdentifier","src":"7635:9:26"},{"kind":"number","nativeSrc":"7646:2:26","nodeType":"YulLiteral","src":"7646:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7631:3:26","nodeType":"YulIdentifier","src":"7631:3:26"},"nativeSrc":"7631:18:26","nodeType":"YulFunctionCall","src":"7631:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"7618:12:26","nodeType":"YulIdentifier","src":"7618:12:26"},"nativeSrc":"7618:32:26","nodeType":"YulFunctionCall","src":"7618:32:26"},"variables":[{"name":"value_1","nativeSrc":"7607:7:26","nodeType":"YulTypedName","src":"7607:7:26","type":""}]},{"body":{"nativeSrc":"7716:16:26","nodeType":"YulBlock","src":"7716:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7725:1:26","nodeType":"YulLiteral","src":"7725:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"7728:1:26","nodeType":"YulLiteral","src":"7728:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7718:6:26","nodeType":"YulIdentifier","src":"7718:6:26"},"nativeSrc":"7718:12:26","nodeType":"YulFunctionCall","src":"7718:12:26"},"nativeSrc":"7718:12:26","nodeType":"YulExpressionStatement","src":"7718:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nativeSrc":"7672:7:26","nodeType":"YulIdentifier","src":"7672:7:26"},{"arguments":[{"name":"value_1","nativeSrc":"7685:7:26","nodeType":"YulIdentifier","src":"7685:7:26"},{"kind":"number","nativeSrc":"7694:18:26","nodeType":"YulLiteral","src":"7694:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"7681:3:26","nodeType":"YulIdentifier","src":"7681:3:26"},"nativeSrc":"7681:32:26","nodeType":"YulFunctionCall","src":"7681:32:26"}],"functionName":{"name":"eq","nativeSrc":"7669:2:26","nodeType":"YulIdentifier","src":"7669:2:26"},"nativeSrc":"7669:45:26","nodeType":"YulFunctionCall","src":"7669:45:26"}],"functionName":{"name":"iszero","nativeSrc":"7662:6:26","nodeType":"YulIdentifier","src":"7662:6:26"},"nativeSrc":"7662:53:26","nodeType":"YulFunctionCall","src":"7662:53:26"},"nativeSrc":"7659:73:26","nodeType":"YulIf","src":"7659:73:26"},{"nativeSrc":"7741:17:26","nodeType":"YulAssignment","src":"7741:17:26","value":{"name":"value_1","nativeSrc":"7751:7:26","nodeType":"YulIdentifier","src":"7751:7:26"},"variableNames":[{"name":"value1","nativeSrc":"7741:6:26","nodeType":"YulIdentifier","src":"7741:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_uint64","nativeSrc":"7337:427:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7381:9:26","nodeType":"YulTypedName","src":"7381:9:26","type":""},{"name":"dataEnd","nativeSrc":"7392:7:26","nodeType":"YulTypedName","src":"7392:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7404:6:26","nodeType":"YulTypedName","src":"7404:6:26","type":""},{"name":"value1","nativeSrc":"7412:6:26","nodeType":"YulTypedName","src":"7412:6:26","type":""}],"src":"7337:427:26"},{"body":{"nativeSrc":"7830:427:26","nodeType":"YulBlock","src":"7830:427:26","statements":[{"nativeSrc":"7840:26:26","nodeType":"YulVariableDeclaration","src":"7840:26:26","value":{"arguments":[{"name":"value","nativeSrc":"7860:5:26","nodeType":"YulIdentifier","src":"7860:5:26"}],"functionName":{"name":"mload","nativeSrc":"7854:5:26","nodeType":"YulIdentifier","src":"7854:5:26"},"nativeSrc":"7854:12:26","nodeType":"YulFunctionCall","src":"7854:12:26"},"variables":[{"name":"length","nativeSrc":"7844:6:26","nodeType":"YulTypedName","src":"7844:6:26","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"7882:3:26","nodeType":"YulIdentifier","src":"7882:3:26"},{"name":"length","nativeSrc":"7887:6:26","nodeType":"YulIdentifier","src":"7887:6:26"}],"functionName":{"name":"mstore","nativeSrc":"7875:6:26","nodeType":"YulIdentifier","src":"7875:6:26"},"nativeSrc":"7875:19:26","nodeType":"YulFunctionCall","src":"7875:19:26"},"nativeSrc":"7875:19:26","nodeType":"YulExpressionStatement","src":"7875:19:26"},{"nativeSrc":"7903:14:26","nodeType":"YulVariableDeclaration","src":"7903:14:26","value":{"kind":"number","nativeSrc":"7913:4:26","nodeType":"YulLiteral","src":"7913:4:26","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"7907:2:26","nodeType":"YulTypedName","src":"7907:2:26","type":""}]},{"nativeSrc":"7926:21:26","nodeType":"YulAssignment","src":"7926:21:26","value":{"arguments":[{"name":"pos","nativeSrc":"7937:3:26","nodeType":"YulIdentifier","src":"7937:3:26"},{"kind":"number","nativeSrc":"7942:4:26","nodeType":"YulLiteral","src":"7942:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7933:3:26","nodeType":"YulIdentifier","src":"7933:3:26"},"nativeSrc":"7933:14:26","nodeType":"YulFunctionCall","src":"7933:14:26"},"variableNames":[{"name":"pos","nativeSrc":"7926:3:26","nodeType":"YulIdentifier","src":"7926:3:26"}]},{"nativeSrc":"7956:30:26","nodeType":"YulVariableDeclaration","src":"7956:30:26","value":{"arguments":[{"name":"value","nativeSrc":"7974:5:26","nodeType":"YulIdentifier","src":"7974:5:26"},{"kind":"number","nativeSrc":"7981:4:26","nodeType":"YulLiteral","src":"7981:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7970:3:26","nodeType":"YulIdentifier","src":"7970:3:26"},"nativeSrc":"7970:16:26","nodeType":"YulFunctionCall","src":"7970:16:26"},"variables":[{"name":"srcPtr","nativeSrc":"7960:6:26","nodeType":"YulTypedName","src":"7960:6:26","type":""}]},{"nativeSrc":"7995:10:26","nodeType":"YulVariableDeclaration","src":"7995:10:26","value":{"kind":"number","nativeSrc":"8004:1:26","nodeType":"YulLiteral","src":"8004:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7999:1:26","nodeType":"YulTypedName","src":"7999:1:26","type":""}]},{"body":{"nativeSrc":"8063:169:26","nodeType":"YulBlock","src":"8063:169:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8084:3:26","nodeType":"YulIdentifier","src":"8084:3:26"},{"arguments":[{"arguments":[{"name":"srcPtr","nativeSrc":"8099:6:26","nodeType":"YulIdentifier","src":"8099:6:26"}],"functionName":{"name":"mload","nativeSrc":"8093:5:26","nodeType":"YulIdentifier","src":"8093:5:26"},"nativeSrc":"8093:13:26","nodeType":"YulFunctionCall","src":"8093:13:26"},{"kind":"number","nativeSrc":"8108:42:26","nodeType":"YulLiteral","src":"8108:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"8089:3:26","nodeType":"YulIdentifier","src":"8089:3:26"},"nativeSrc":"8089:62:26","nodeType":"YulFunctionCall","src":"8089:62:26"}],"functionName":{"name":"mstore","nativeSrc":"8077:6:26","nodeType":"YulIdentifier","src":"8077:6:26"},"nativeSrc":"8077:75:26","nodeType":"YulFunctionCall","src":"8077:75:26"},"nativeSrc":"8077:75:26","nodeType":"YulExpressionStatement","src":"8077:75:26"},{"nativeSrc":"8165:19:26","nodeType":"YulAssignment","src":"8165:19:26","value":{"arguments":[{"name":"pos","nativeSrc":"8176:3:26","nodeType":"YulIdentifier","src":"8176:3:26"},{"name":"_1","nativeSrc":"8181:2:26","nodeType":"YulIdentifier","src":"8181:2:26"}],"functionName":{"name":"add","nativeSrc":"8172:3:26","nodeType":"YulIdentifier","src":"8172:3:26"},"nativeSrc":"8172:12:26","nodeType":"YulFunctionCall","src":"8172:12:26"},"variableNames":[{"name":"pos","nativeSrc":"8165:3:26","nodeType":"YulIdentifier","src":"8165:3:26"}]},{"nativeSrc":"8197:25:26","nodeType":"YulAssignment","src":"8197:25:26","value":{"arguments":[{"name":"srcPtr","nativeSrc":"8211:6:26","nodeType":"YulIdentifier","src":"8211:6:26"},{"name":"_1","nativeSrc":"8219:2:26","nodeType":"YulIdentifier","src":"8219:2:26"}],"functionName":{"name":"add","nativeSrc":"8207:3:26","nodeType":"YulIdentifier","src":"8207:3:26"},"nativeSrc":"8207:15:26","nodeType":"YulFunctionCall","src":"8207:15:26"},"variableNames":[{"name":"srcPtr","nativeSrc":"8197:6:26","nodeType":"YulIdentifier","src":"8197:6:26"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"8025:1:26","nodeType":"YulIdentifier","src":"8025:1:26"},{"name":"length","nativeSrc":"8028:6:26","nodeType":"YulIdentifier","src":"8028:6:26"}],"functionName":{"name":"lt","nativeSrc":"8022:2:26","nodeType":"YulIdentifier","src":"8022:2:26"},"nativeSrc":"8022:13:26","nodeType":"YulFunctionCall","src":"8022:13:26"},"nativeSrc":"8014:218:26","nodeType":"YulForLoop","post":{"nativeSrc":"8036:18:26","nodeType":"YulBlock","src":"8036:18:26","statements":[{"nativeSrc":"8038:14:26","nodeType":"YulAssignment","src":"8038:14:26","value":{"arguments":[{"name":"i","nativeSrc":"8047:1:26","nodeType":"YulIdentifier","src":"8047:1:26"},{"kind":"number","nativeSrc":"8050:1:26","nodeType":"YulLiteral","src":"8050:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8043:3:26","nodeType":"YulIdentifier","src":"8043:3:26"},"nativeSrc":"8043:9:26","nodeType":"YulFunctionCall","src":"8043:9:26"},"variableNames":[{"name":"i","nativeSrc":"8038:1:26","nodeType":"YulIdentifier","src":"8038:1:26"}]}]},"pre":{"nativeSrc":"8018:3:26","nodeType":"YulBlock","src":"8018:3:26","statements":[]},"src":"8014:218:26"},{"nativeSrc":"8241:10:26","nodeType":"YulAssignment","src":"8241:10:26","value":{"name":"pos","nativeSrc":"8248:3:26","nodeType":"YulIdentifier","src":"8248:3:26"},"variableNames":[{"name":"end","nativeSrc":"8241:3:26","nodeType":"YulIdentifier","src":"8241:3:26"}]}]},"name":"abi_encode_array_address_dyn","nativeSrc":"7769:488:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7807:5:26","nodeType":"YulTypedName","src":"7807:5:26","type":""},{"name":"pos","nativeSrc":"7814:3:26","nodeType":"YulTypedName","src":"7814:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7822:3:26","nodeType":"YulTypedName","src":"7822:3:26","type":""}],"src":"7769:488:26"},{"body":{"nativeSrc":"8413:110:26","nodeType":"YulBlock","src":"8413:110:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8430:9:26","nodeType":"YulIdentifier","src":"8430:9:26"},{"kind":"number","nativeSrc":"8441:2:26","nodeType":"YulLiteral","src":"8441:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8423:6:26","nodeType":"YulIdentifier","src":"8423:6:26"},"nativeSrc":"8423:21:26","nodeType":"YulFunctionCall","src":"8423:21:26"},"nativeSrc":"8423:21:26","nodeType":"YulExpressionStatement","src":"8423:21:26"},{"nativeSrc":"8453:64:26","nodeType":"YulAssignment","src":"8453:64:26","value":{"arguments":[{"name":"value0","nativeSrc":"8490:6:26","nodeType":"YulIdentifier","src":"8490:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"8502:9:26","nodeType":"YulIdentifier","src":"8502:9:26"},{"kind":"number","nativeSrc":"8513:2:26","nodeType":"YulLiteral","src":"8513:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8498:3:26","nodeType":"YulIdentifier","src":"8498:3:26"},"nativeSrc":"8498:18:26","nodeType":"YulFunctionCall","src":"8498:18:26"}],"functionName":{"name":"abi_encode_array_address_dyn","nativeSrc":"8461:28:26","nodeType":"YulIdentifier","src":"8461:28:26"},"nativeSrc":"8461:56:26","nodeType":"YulFunctionCall","src":"8461:56:26"},"variableNames":[{"name":"tail","nativeSrc":"8453:4:26","nodeType":"YulIdentifier","src":"8453:4:26"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"8262:261:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8382:9:26","nodeType":"YulTypedName","src":"8382:9:26","type":""},{"name":"value0","nativeSrc":"8393:6:26","nodeType":"YulTypedName","src":"8393:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8404:4:26","nodeType":"YulTypedName","src":"8404:4:26","type":""}],"src":"8262:261:26"},{"body":{"nativeSrc":"8615:301:26","nodeType":"YulBlock","src":"8615:301:26","statements":[{"body":{"nativeSrc":"8661:16:26","nodeType":"YulBlock","src":"8661:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8670:1:26","nodeType":"YulLiteral","src":"8670:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"8673:1:26","nodeType":"YulLiteral","src":"8673:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8663:6:26","nodeType":"YulIdentifier","src":"8663:6:26"},"nativeSrc":"8663:12:26","nodeType":"YulFunctionCall","src":"8663:12:26"},"nativeSrc":"8663:12:26","nodeType":"YulExpressionStatement","src":"8663:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8636:7:26","nodeType":"YulIdentifier","src":"8636:7:26"},{"name":"headStart","nativeSrc":"8645:9:26","nodeType":"YulIdentifier","src":"8645:9:26"}],"functionName":{"name":"sub","nativeSrc":"8632:3:26","nodeType":"YulIdentifier","src":"8632:3:26"},"nativeSrc":"8632:23:26","nodeType":"YulFunctionCall","src":"8632:23:26"},{"kind":"number","nativeSrc":"8657:2:26","nodeType":"YulLiteral","src":"8657:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"8628:3:26","nodeType":"YulIdentifier","src":"8628:3:26"},"nativeSrc":"8628:32:26","nodeType":"YulFunctionCall","src":"8628:32:26"},"nativeSrc":"8625:52:26","nodeType":"YulIf","src":"8625:52:26"},{"nativeSrc":"8686:36:26","nodeType":"YulVariableDeclaration","src":"8686:36:26","value":{"arguments":[{"name":"headStart","nativeSrc":"8712:9:26","nodeType":"YulIdentifier","src":"8712:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"8699:12:26","nodeType":"YulIdentifier","src":"8699:12:26"},"nativeSrc":"8699:23:26","nodeType":"YulFunctionCall","src":"8699:23:26"},"variables":[{"name":"value","nativeSrc":"8690:5:26","nodeType":"YulTypedName","src":"8690:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"8756:5:26","nodeType":"YulIdentifier","src":"8756:5:26"}],"functionName":{"name":"validator_revert_address","nativeSrc":"8731:24:26","nodeType":"YulIdentifier","src":"8731:24:26"},"nativeSrc":"8731:31:26","nodeType":"YulFunctionCall","src":"8731:31:26"},"nativeSrc":"8731:31:26","nodeType":"YulExpressionStatement","src":"8731:31:26"},{"nativeSrc":"8771:15:26","nodeType":"YulAssignment","src":"8771:15:26","value":{"name":"value","nativeSrc":"8781:5:26","nodeType":"YulIdentifier","src":"8781:5:26"},"variableNames":[{"name":"value0","nativeSrc":"8771:6:26","nodeType":"YulIdentifier","src":"8771:6:26"}]},{"nativeSrc":"8795:47:26","nodeType":"YulVariableDeclaration","src":"8795:47:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8827:9:26","nodeType":"YulIdentifier","src":"8827:9:26"},{"kind":"number","nativeSrc":"8838:2:26","nodeType":"YulLiteral","src":"8838:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8823:3:26","nodeType":"YulIdentifier","src":"8823:3:26"},"nativeSrc":"8823:18:26","nodeType":"YulFunctionCall","src":"8823:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"8810:12:26","nodeType":"YulIdentifier","src":"8810:12:26"},"nativeSrc":"8810:32:26","nodeType":"YulFunctionCall","src":"8810:32:26"},"variables":[{"name":"value_1","nativeSrc":"8799:7:26","nodeType":"YulTypedName","src":"8799:7:26","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"8876:7:26","nodeType":"YulIdentifier","src":"8876:7:26"}],"functionName":{"name":"validator_revert_address","nativeSrc":"8851:24:26","nodeType":"YulIdentifier","src":"8851:24:26"},"nativeSrc":"8851:33:26","nodeType":"YulFunctionCall","src":"8851:33:26"},"nativeSrc":"8851:33:26","nodeType":"YulExpressionStatement","src":"8851:33:26"},{"nativeSrc":"8893:17:26","nodeType":"YulAssignment","src":"8893:17:26","value":{"name":"value_1","nativeSrc":"8903:7:26","nodeType":"YulIdentifier","src":"8903:7:26"},"variableNames":[{"name":"value1","nativeSrc":"8893:6:26","nodeType":"YulIdentifier","src":"8893:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"8528:388:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8573:9:26","nodeType":"YulTypedName","src":"8573:9:26","type":""},{"name":"dataEnd","nativeSrc":"8584:7:26","nodeType":"YulTypedName","src":"8584:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8596:6:26","nodeType":"YulTypedName","src":"8596:6:26","type":""},{"name":"value1","nativeSrc":"8604:6:26","nodeType":"YulTypedName","src":"8604:6:26","type":""}],"src":"8528:388:26"},{"body":{"nativeSrc":"8994:114:26","nodeType":"YulBlock","src":"8994:114:26","statements":[{"body":{"nativeSrc":"9038:22:26","nodeType":"YulBlock","src":"9038:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"9040:16:26","nodeType":"YulIdentifier","src":"9040:16:26"},"nativeSrc":"9040:18:26","nodeType":"YulFunctionCall","src":"9040:18:26"},"nativeSrc":"9040:18:26","nodeType":"YulExpressionStatement","src":"9040:18:26"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"9010:6:26","nodeType":"YulIdentifier","src":"9010:6:26"},{"kind":"number","nativeSrc":"9018:18:26","nodeType":"YulLiteral","src":"9018:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9007:2:26","nodeType":"YulIdentifier","src":"9007:2:26"},"nativeSrc":"9007:30:26","nodeType":"YulFunctionCall","src":"9007:30:26"},"nativeSrc":"9004:56:26","nodeType":"YulIf","src":"9004:56:26"},{"nativeSrc":"9069:33:26","nodeType":"YulAssignment","src":"9069:33:26","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9085:1:26","nodeType":"YulLiteral","src":"9085:1:26","type":"","value":"5"},{"name":"length","nativeSrc":"9088:6:26","nodeType":"YulIdentifier","src":"9088:6:26"}],"functionName":{"name":"shl","nativeSrc":"9081:3:26","nodeType":"YulIdentifier","src":"9081:3:26"},"nativeSrc":"9081:14:26","nodeType":"YulFunctionCall","src":"9081:14:26"},{"kind":"number","nativeSrc":"9097:4:26","nodeType":"YulLiteral","src":"9097:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9077:3:26","nodeType":"YulIdentifier","src":"9077:3:26"},"nativeSrc":"9077:25:26","nodeType":"YulFunctionCall","src":"9077:25:26"},"variableNames":[{"name":"size","nativeSrc":"9069:4:26","nodeType":"YulIdentifier","src":"9069:4:26"}]}]},"name":"array_allocation_size_array_struct_Call_dyn","nativeSrc":"8921:187:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"8974:6:26","nodeType":"YulTypedName","src":"8974:6:26","type":""}],"returnVariables":[{"name":"size","nativeSrc":"8985:4:26","nodeType":"YulTypedName","src":"8985:4:26","type":""}],"src":"8921:187:26"},{"body":{"nativeSrc":"9177:683:26","nodeType":"YulBlock","src":"9177:683:26","statements":[{"body":{"nativeSrc":"9226:16:26","nodeType":"YulBlock","src":"9226:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9235:1:26","nodeType":"YulLiteral","src":"9235:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"9238:1:26","nodeType":"YulLiteral","src":"9238:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9228:6:26","nodeType":"YulIdentifier","src":"9228:6:26"},"nativeSrc":"9228:12:26","nodeType":"YulFunctionCall","src":"9228:12:26"},"nativeSrc":"9228:12:26","nodeType":"YulExpressionStatement","src":"9228:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"9205:6:26","nodeType":"YulIdentifier","src":"9205:6:26"},{"kind":"number","nativeSrc":"9213:4:26","nodeType":"YulLiteral","src":"9213:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"9201:3:26","nodeType":"YulIdentifier","src":"9201:3:26"},"nativeSrc":"9201:17:26","nodeType":"YulFunctionCall","src":"9201:17:26"},{"name":"end","nativeSrc":"9220:3:26","nodeType":"YulIdentifier","src":"9220:3:26"}],"functionName":{"name":"slt","nativeSrc":"9197:3:26","nodeType":"YulIdentifier","src":"9197:3:26"},"nativeSrc":"9197:27:26","nodeType":"YulFunctionCall","src":"9197:27:26"}],"functionName":{"name":"iszero","nativeSrc":"9190:6:26","nodeType":"YulIdentifier","src":"9190:6:26"},"nativeSrc":"9190:35:26","nodeType":"YulFunctionCall","src":"9190:35:26"},"nativeSrc":"9187:55:26","nodeType":"YulIf","src":"9187:55:26"},{"nativeSrc":"9251:30:26","nodeType":"YulVariableDeclaration","src":"9251:30:26","value":{"arguments":[{"name":"offset","nativeSrc":"9274:6:26","nodeType":"YulIdentifier","src":"9274:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"9261:12:26","nodeType":"YulIdentifier","src":"9261:12:26"},"nativeSrc":"9261:20:26","nodeType":"YulFunctionCall","src":"9261:20:26"},"variables":[{"name":"_1","nativeSrc":"9255:2:26","nodeType":"YulTypedName","src":"9255:2:26","type":""}]},{"nativeSrc":"9290:14:26","nodeType":"YulVariableDeclaration","src":"9290:14:26","value":{"kind":"number","nativeSrc":"9300:4:26","nodeType":"YulLiteral","src":"9300:4:26","type":"","value":"0x20"},"variables":[{"name":"_2","nativeSrc":"9294:2:26","nodeType":"YulTypedName","src":"9294:2:26","type":""}]},{"nativeSrc":"9313:75:26","nodeType":"YulVariableDeclaration","src":"9313:75:26","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"9384:2:26","nodeType":"YulIdentifier","src":"9384:2:26"}],"functionName":{"name":"array_allocation_size_array_struct_Call_dyn","nativeSrc":"9340:43:26","nodeType":"YulIdentifier","src":"9340:43:26"},"nativeSrc":"9340:47:26","nodeType":"YulFunctionCall","src":"9340:47:26"}],"functionName":{"name":"allocate_memory","nativeSrc":"9324:15:26","nodeType":"YulIdentifier","src":"9324:15:26"},"nativeSrc":"9324:64:26","nodeType":"YulFunctionCall","src":"9324:64:26"},"variables":[{"name":"dst","nativeSrc":"9317:3:26","nodeType":"YulTypedName","src":"9317:3:26","type":""}]},{"nativeSrc":"9397:16:26","nodeType":"YulVariableDeclaration","src":"9397:16:26","value":{"name":"dst","nativeSrc":"9410:3:26","nodeType":"YulIdentifier","src":"9410:3:26"},"variables":[{"name":"dst_1","nativeSrc":"9401:5:26","nodeType":"YulTypedName","src":"9401:5:26","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"9429:3:26","nodeType":"YulIdentifier","src":"9429:3:26"},{"name":"_1","nativeSrc":"9434:2:26","nodeType":"YulIdentifier","src":"9434:2:26"}],"functionName":{"name":"mstore","nativeSrc":"9422:6:26","nodeType":"YulIdentifier","src":"9422:6:26"},"nativeSrc":"9422:15:26","nodeType":"YulFunctionCall","src":"9422:15:26"},"nativeSrc":"9422:15:26","nodeType":"YulExpressionStatement","src":"9422:15:26"},{"nativeSrc":"9446:21:26","nodeType":"YulAssignment","src":"9446:21:26","value":{"arguments":[{"name":"dst","nativeSrc":"9457:3:26","nodeType":"YulIdentifier","src":"9457:3:26"},{"kind":"number","nativeSrc":"9462:4:26","nodeType":"YulLiteral","src":"9462:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9453:3:26","nodeType":"YulIdentifier","src":"9453:3:26"},"nativeSrc":"9453:14:26","nodeType":"YulFunctionCall","src":"9453:14:26"},"variableNames":[{"name":"dst","nativeSrc":"9446:3:26","nodeType":"YulIdentifier","src":"9446:3:26"}]},{"nativeSrc":"9476:48:26","nodeType":"YulVariableDeclaration","src":"9476:48:26","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"9498:6:26","nodeType":"YulIdentifier","src":"9498:6:26"},{"arguments":[{"kind":"number","nativeSrc":"9510:1:26","nodeType":"YulLiteral","src":"9510:1:26","type":"","value":"5"},{"name":"_1","nativeSrc":"9513:2:26","nodeType":"YulIdentifier","src":"9513:2:26"}],"functionName":{"name":"shl","nativeSrc":"9506:3:26","nodeType":"YulIdentifier","src":"9506:3:26"},"nativeSrc":"9506:10:26","nodeType":"YulFunctionCall","src":"9506:10:26"}],"functionName":{"name":"add","nativeSrc":"9494:3:26","nodeType":"YulIdentifier","src":"9494:3:26"},"nativeSrc":"9494:23:26","nodeType":"YulFunctionCall","src":"9494:23:26"},{"kind":"number","nativeSrc":"9519:4:26","nodeType":"YulLiteral","src":"9519:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9490:3:26","nodeType":"YulIdentifier","src":"9490:3:26"},"nativeSrc":"9490:34:26","nodeType":"YulFunctionCall","src":"9490:34:26"},"variables":[{"name":"srcEnd","nativeSrc":"9480:6:26","nodeType":"YulTypedName","src":"9480:6:26","type":""}]},{"body":{"nativeSrc":"9552:16:26","nodeType":"YulBlock","src":"9552:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9561:1:26","nodeType":"YulLiteral","src":"9561:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"9564:1:26","nodeType":"YulLiteral","src":"9564:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9554:6:26","nodeType":"YulIdentifier","src":"9554:6:26"},"nativeSrc":"9554:12:26","nodeType":"YulFunctionCall","src":"9554:12:26"},"nativeSrc":"9554:12:26","nodeType":"YulExpressionStatement","src":"9554:12:26"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"9539:6:26","nodeType":"YulIdentifier","src":"9539:6:26"},{"name":"end","nativeSrc":"9547:3:26","nodeType":"YulIdentifier","src":"9547:3:26"}],"functionName":{"name":"gt","nativeSrc":"9536:2:26","nodeType":"YulIdentifier","src":"9536:2:26"},"nativeSrc":"9536:15:26","nodeType":"YulFunctionCall","src":"9536:15:26"},"nativeSrc":"9533:35:26","nodeType":"YulIf","src":"9533:35:26"},{"nativeSrc":"9577:28:26","nodeType":"YulVariableDeclaration","src":"9577:28:26","value":{"arguments":[{"name":"offset","nativeSrc":"9592:6:26","nodeType":"YulIdentifier","src":"9592:6:26"},{"kind":"number","nativeSrc":"9600:4:26","nodeType":"YulLiteral","src":"9600:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9588:3:26","nodeType":"YulIdentifier","src":"9588:3:26"},"nativeSrc":"9588:17:26","nodeType":"YulFunctionCall","src":"9588:17:26"},"variables":[{"name":"src","nativeSrc":"9581:3:26","nodeType":"YulTypedName","src":"9581:3:26","type":""}]},{"body":{"nativeSrc":"9670:161:26","nodeType":"YulBlock","src":"9670:161:26","statements":[{"nativeSrc":"9684:30:26","nodeType":"YulVariableDeclaration","src":"9684:30:26","value":{"arguments":[{"name":"src","nativeSrc":"9710:3:26","nodeType":"YulIdentifier","src":"9710:3:26"}],"functionName":{"name":"calldataload","nativeSrc":"9697:12:26","nodeType":"YulIdentifier","src":"9697:12:26"},"nativeSrc":"9697:17:26","nodeType":"YulFunctionCall","src":"9697:17:26"},"variables":[{"name":"value","nativeSrc":"9688:5:26","nodeType":"YulTypedName","src":"9688:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9752:5:26","nodeType":"YulIdentifier","src":"9752:5:26"}],"functionName":{"name":"validator_revert_address","nativeSrc":"9727:24:26","nodeType":"YulIdentifier","src":"9727:24:26"},"nativeSrc":"9727:31:26","nodeType":"YulFunctionCall","src":"9727:31:26"},"nativeSrc":"9727:31:26","nodeType":"YulExpressionStatement","src":"9727:31:26"},{"expression":{"arguments":[{"name":"dst","nativeSrc":"9778:3:26","nodeType":"YulIdentifier","src":"9778:3:26"},{"name":"value","nativeSrc":"9783:5:26","nodeType":"YulIdentifier","src":"9783:5:26"}],"functionName":{"name":"mstore","nativeSrc":"9771:6:26","nodeType":"YulIdentifier","src":"9771:6:26"},"nativeSrc":"9771:18:26","nodeType":"YulFunctionCall","src":"9771:18:26"},"nativeSrc":"9771:18:26","nodeType":"YulExpressionStatement","src":"9771:18:26"},{"nativeSrc":"9802:19:26","nodeType":"YulAssignment","src":"9802:19:26","value":{"arguments":[{"name":"dst","nativeSrc":"9813:3:26","nodeType":"YulIdentifier","src":"9813:3:26"},{"name":"_2","nativeSrc":"9818:2:26","nodeType":"YulIdentifier","src":"9818:2:26"}],"functionName":{"name":"add","nativeSrc":"9809:3:26","nodeType":"YulIdentifier","src":"9809:3:26"},"nativeSrc":"9809:12:26","nodeType":"YulFunctionCall","src":"9809:12:26"},"variableNames":[{"name":"dst","nativeSrc":"9802:3:26","nodeType":"YulIdentifier","src":"9802:3:26"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"9625:3:26","nodeType":"YulIdentifier","src":"9625:3:26"},{"name":"srcEnd","nativeSrc":"9630:6:26","nodeType":"YulIdentifier","src":"9630:6:26"}],"functionName":{"name":"lt","nativeSrc":"9622:2:26","nodeType":"YulIdentifier","src":"9622:2:26"},"nativeSrc":"9622:15:26","nodeType":"YulFunctionCall","src":"9622:15:26"},"nativeSrc":"9614:217:26","nodeType":"YulForLoop","post":{"nativeSrc":"9638:23:26","nodeType":"YulBlock","src":"9638:23:26","statements":[{"nativeSrc":"9640:19:26","nodeType":"YulAssignment","src":"9640:19:26","value":{"arguments":[{"name":"src","nativeSrc":"9651:3:26","nodeType":"YulIdentifier","src":"9651:3:26"},{"name":"_2","nativeSrc":"9656:2:26","nodeType":"YulIdentifier","src":"9656:2:26"}],"functionName":{"name":"add","nativeSrc":"9647:3:26","nodeType":"YulIdentifier","src":"9647:3:26"},"nativeSrc":"9647:12:26","nodeType":"YulFunctionCall","src":"9647:12:26"},"variableNames":[{"name":"src","nativeSrc":"9640:3:26","nodeType":"YulIdentifier","src":"9640:3:26"}]}]},"pre":{"nativeSrc":"9618:3:26","nodeType":"YulBlock","src":"9618:3:26","statements":[]},"src":"9614:217:26"},{"nativeSrc":"9840:14:26","nodeType":"YulAssignment","src":"9840:14:26","value":{"name":"dst_1","nativeSrc":"9849:5:26","nodeType":"YulIdentifier","src":"9849:5:26"},"variableNames":[{"name":"array","nativeSrc":"9840:5:26","nodeType":"YulIdentifier","src":"9840:5:26"}]}]},"name":"abi_decode_array_address_dyn","nativeSrc":"9113:747:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9151:6:26","nodeType":"YulTypedName","src":"9151:6:26","type":""},{"name":"end","nativeSrc":"9159:3:26","nodeType":"YulTypedName","src":"9159:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"9167:5:26","nodeType":"YulTypedName","src":"9167:5:26","type":""}],"src":"9113:747:26"},{"body":{"nativeSrc":"10024:1734:26","nodeType":"YulBlock","src":"10024:1734:26","statements":[{"body":{"nativeSrc":"10070:16:26","nodeType":"YulBlock","src":"10070:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10079:1:26","nodeType":"YulLiteral","src":"10079:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"10082:1:26","nodeType":"YulLiteral","src":"10082:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10072:6:26","nodeType":"YulIdentifier","src":"10072:6:26"},"nativeSrc":"10072:12:26","nodeType":"YulFunctionCall","src":"10072:12:26"},"nativeSrc":"10072:12:26","nodeType":"YulExpressionStatement","src":"10072:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10045:7:26","nodeType":"YulIdentifier","src":"10045:7:26"},{"name":"headStart","nativeSrc":"10054:9:26","nodeType":"YulIdentifier","src":"10054:9:26"}],"functionName":{"name":"sub","nativeSrc":"10041:3:26","nodeType":"YulIdentifier","src":"10041:3:26"},"nativeSrc":"10041:23:26","nodeType":"YulFunctionCall","src":"10041:23:26"},{"kind":"number","nativeSrc":"10066:2:26","nodeType":"YulLiteral","src":"10066:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"10037:3:26","nodeType":"YulIdentifier","src":"10037:3:26"},"nativeSrc":"10037:32:26","nodeType":"YulFunctionCall","src":"10037:32:26"},"nativeSrc":"10034:52:26","nodeType":"YulIf","src":"10034:52:26"},{"nativeSrc":"10095:37:26","nodeType":"YulVariableDeclaration","src":"10095:37:26","value":{"arguments":[{"name":"headStart","nativeSrc":"10122:9:26","nodeType":"YulIdentifier","src":"10122:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"10109:12:26","nodeType":"YulIdentifier","src":"10109:12:26"},"nativeSrc":"10109:23:26","nodeType":"YulFunctionCall","src":"10109:23:26"},"variables":[{"name":"offset","nativeSrc":"10099:6:26","nodeType":"YulTypedName","src":"10099:6:26","type":""}]},{"nativeSrc":"10141:28:26","nodeType":"YulVariableDeclaration","src":"10141:28:26","value":{"kind":"number","nativeSrc":"10151:18:26","nodeType":"YulLiteral","src":"10151:18:26","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"10145:2:26","nodeType":"YulTypedName","src":"10145:2:26","type":""}]},{"body":{"nativeSrc":"10196:16:26","nodeType":"YulBlock","src":"10196:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10205:1:26","nodeType":"YulLiteral","src":"10205:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"10208:1:26","nodeType":"YulLiteral","src":"10208:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10198:6:26","nodeType":"YulIdentifier","src":"10198:6:26"},"nativeSrc":"10198:12:26","nodeType":"YulFunctionCall","src":"10198:12:26"},"nativeSrc":"10198:12:26","nodeType":"YulExpressionStatement","src":"10198:12:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"10184:6:26","nodeType":"YulIdentifier","src":"10184:6:26"},{"name":"_1","nativeSrc":"10192:2:26","nodeType":"YulIdentifier","src":"10192:2:26"}],"functionName":{"name":"gt","nativeSrc":"10181:2:26","nodeType":"YulIdentifier","src":"10181:2:26"},"nativeSrc":"10181:14:26","nodeType":"YulFunctionCall","src":"10181:14:26"},"nativeSrc":"10178:34:26","nodeType":"YulIf","src":"10178:34:26"},{"nativeSrc":"10221:32:26","nodeType":"YulVariableDeclaration","src":"10221:32:26","value":{"arguments":[{"name":"headStart","nativeSrc":"10235:9:26","nodeType":"YulIdentifier","src":"10235:9:26"},{"name":"offset","nativeSrc":"10246:6:26","nodeType":"YulIdentifier","src":"10246:6:26"}],"functionName":{"name":"add","nativeSrc":"10231:3:26","nodeType":"YulIdentifier","src":"10231:3:26"},"nativeSrc":"10231:22:26","nodeType":"YulFunctionCall","src":"10231:22:26"},"variables":[{"name":"_2","nativeSrc":"10225:2:26","nodeType":"YulTypedName","src":"10225:2:26","type":""}]},{"body":{"nativeSrc":"10301:16:26","nodeType":"YulBlock","src":"10301:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10310:1:26","nodeType":"YulLiteral","src":"10310:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"10313:1:26","nodeType":"YulLiteral","src":"10313:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10303:6:26","nodeType":"YulIdentifier","src":"10303:6:26"},"nativeSrc":"10303:12:26","nodeType":"YulFunctionCall","src":"10303:12:26"},"nativeSrc":"10303:12:26","nodeType":"YulExpressionStatement","src":"10303:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"10280:2:26","nodeType":"YulIdentifier","src":"10280:2:26"},{"kind":"number","nativeSrc":"10284:4:26","nodeType":"YulLiteral","src":"10284:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"10276:3:26","nodeType":"YulIdentifier","src":"10276:3:26"},"nativeSrc":"10276:13:26","nodeType":"YulFunctionCall","src":"10276:13:26"},{"name":"dataEnd","nativeSrc":"10291:7:26","nodeType":"YulIdentifier","src":"10291:7:26"}],"functionName":{"name":"slt","nativeSrc":"10272:3:26","nodeType":"YulIdentifier","src":"10272:3:26"},"nativeSrc":"10272:27:26","nodeType":"YulFunctionCall","src":"10272:27:26"}],"functionName":{"name":"iszero","nativeSrc":"10265:6:26","nodeType":"YulIdentifier","src":"10265:6:26"},"nativeSrc":"10265:35:26","nodeType":"YulFunctionCall","src":"10265:35:26"},"nativeSrc":"10262:55:26","nodeType":"YulIf","src":"10262:55:26"},{"nativeSrc":"10326:26:26","nodeType":"YulVariableDeclaration","src":"10326:26:26","value":{"arguments":[{"name":"_2","nativeSrc":"10349:2:26","nodeType":"YulIdentifier","src":"10349:2:26"}],"functionName":{"name":"calldataload","nativeSrc":"10336:12:26","nodeType":"YulIdentifier","src":"10336:12:26"},"nativeSrc":"10336:16:26","nodeType":"YulFunctionCall","src":"10336:16:26"},"variables":[{"name":"_3","nativeSrc":"10330:2:26","nodeType":"YulTypedName","src":"10330:2:26","type":""}]},{"nativeSrc":"10361:14:26","nodeType":"YulVariableDeclaration","src":"10361:14:26","value":{"kind":"number","nativeSrc":"10371:4:26","nodeType":"YulLiteral","src":"10371:4:26","type":"","value":"0x20"},"variables":[{"name":"_4","nativeSrc":"10365:2:26","nodeType":"YulTypedName","src":"10365:2:26","type":""}]},{"nativeSrc":"10384:75:26","nodeType":"YulVariableDeclaration","src":"10384:75:26","value":{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"10455:2:26","nodeType":"YulIdentifier","src":"10455:2:26"}],"functionName":{"name":"array_allocation_size_array_struct_Call_dyn","nativeSrc":"10411:43:26","nodeType":"YulIdentifier","src":"10411:43:26"},"nativeSrc":"10411:47:26","nodeType":"YulFunctionCall","src":"10411:47:26"}],"functionName":{"name":"allocate_memory","nativeSrc":"10395:15:26","nodeType":"YulIdentifier","src":"10395:15:26"},"nativeSrc":"10395:64:26","nodeType":"YulFunctionCall","src":"10395:64:26"},"variables":[{"name":"dst","nativeSrc":"10388:3:26","nodeType":"YulTypedName","src":"10388:3:26","type":""}]},{"nativeSrc":"10468:16:26","nodeType":"YulVariableDeclaration","src":"10468:16:26","value":{"name":"dst","nativeSrc":"10481:3:26","nodeType":"YulIdentifier","src":"10481:3:26"},"variables":[{"name":"dst_1","nativeSrc":"10472:5:26","nodeType":"YulTypedName","src":"10472:5:26","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"10500:3:26","nodeType":"YulIdentifier","src":"10500:3:26"},{"name":"_3","nativeSrc":"10505:2:26","nodeType":"YulIdentifier","src":"10505:2:26"}],"functionName":{"name":"mstore","nativeSrc":"10493:6:26","nodeType":"YulIdentifier","src":"10493:6:26"},"nativeSrc":"10493:15:26","nodeType":"YulFunctionCall","src":"10493:15:26"},"nativeSrc":"10493:15:26","nodeType":"YulExpressionStatement","src":"10493:15:26"},{"nativeSrc":"10517:19:26","nodeType":"YulAssignment","src":"10517:19:26","value":{"arguments":[{"name":"dst","nativeSrc":"10528:3:26","nodeType":"YulIdentifier","src":"10528:3:26"},{"name":"_4","nativeSrc":"10533:2:26","nodeType":"YulIdentifier","src":"10533:2:26"}],"functionName":{"name":"add","nativeSrc":"10524:3:26","nodeType":"YulIdentifier","src":"10524:3:26"},"nativeSrc":"10524:12:26","nodeType":"YulFunctionCall","src":"10524:12:26"},"variableNames":[{"name":"dst","nativeSrc":"10517:3:26","nodeType":"YulIdentifier","src":"10517:3:26"}]},{"nativeSrc":"10545:42:26","nodeType":"YulVariableDeclaration","src":"10545:42:26","value":{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"10567:2:26","nodeType":"YulIdentifier","src":"10567:2:26"},{"arguments":[{"kind":"number","nativeSrc":"10575:1:26","nodeType":"YulLiteral","src":"10575:1:26","type":"","value":"5"},{"name":"_3","nativeSrc":"10578:2:26","nodeType":"YulIdentifier","src":"10578:2:26"}],"functionName":{"name":"shl","nativeSrc":"10571:3:26","nodeType":"YulIdentifier","src":"10571:3:26"},"nativeSrc":"10571:10:26","nodeType":"YulFunctionCall","src":"10571:10:26"}],"functionName":{"name":"add","nativeSrc":"10563:3:26","nodeType":"YulIdentifier","src":"10563:3:26"},"nativeSrc":"10563:19:26","nodeType":"YulFunctionCall","src":"10563:19:26"},{"name":"_4","nativeSrc":"10584:2:26","nodeType":"YulIdentifier","src":"10584:2:26"}],"functionName":{"name":"add","nativeSrc":"10559:3:26","nodeType":"YulIdentifier","src":"10559:3:26"},"nativeSrc":"10559:28:26","nodeType":"YulFunctionCall","src":"10559:28:26"},"variables":[{"name":"srcEnd","nativeSrc":"10549:6:26","nodeType":"YulTypedName","src":"10549:6:26","type":""}]},{"body":{"nativeSrc":"10619:16:26","nodeType":"YulBlock","src":"10619:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10628:1:26","nodeType":"YulLiteral","src":"10628:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"10631:1:26","nodeType":"YulLiteral","src":"10631:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10621:6:26","nodeType":"YulIdentifier","src":"10621:6:26"},"nativeSrc":"10621:12:26","nodeType":"YulFunctionCall","src":"10621:12:26"},"nativeSrc":"10621:12:26","nodeType":"YulExpressionStatement","src":"10621:12:26"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"10602:6:26","nodeType":"YulIdentifier","src":"10602:6:26"},{"name":"dataEnd","nativeSrc":"10610:7:26","nodeType":"YulIdentifier","src":"10610:7:26"}],"functionName":{"name":"gt","nativeSrc":"10599:2:26","nodeType":"YulIdentifier","src":"10599:2:26"},"nativeSrc":"10599:19:26","nodeType":"YulFunctionCall","src":"10599:19:26"},"nativeSrc":"10596:39:26","nodeType":"YulIf","src":"10596:39:26"},{"nativeSrc":"10644:22:26","nodeType":"YulVariableDeclaration","src":"10644:22:26","value":{"arguments":[{"name":"_2","nativeSrc":"10659:2:26","nodeType":"YulIdentifier","src":"10659:2:26"},{"name":"_4","nativeSrc":"10663:2:26","nodeType":"YulIdentifier","src":"10663:2:26"}],"functionName":{"name":"add","nativeSrc":"10655:3:26","nodeType":"YulIdentifier","src":"10655:3:26"},"nativeSrc":"10655:11:26","nodeType":"YulFunctionCall","src":"10655:11:26"},"variables":[{"name":"src","nativeSrc":"10648:3:26","nodeType":"YulTypedName","src":"10648:3:26","type":""}]},{"body":{"nativeSrc":"10731:813:26","nodeType":"YulBlock","src":"10731:813:26","statements":[{"nativeSrc":"10745:36:26","nodeType":"YulVariableDeclaration","src":"10745:36:26","value":{"arguments":[{"name":"src","nativeSrc":"10777:3:26","nodeType":"YulIdentifier","src":"10777:3:26"}],"functionName":{"name":"calldataload","nativeSrc":"10764:12:26","nodeType":"YulIdentifier","src":"10764:12:26"},"nativeSrc":"10764:17:26","nodeType":"YulFunctionCall","src":"10764:17:26"},"variables":[{"name":"innerOffset","nativeSrc":"10749:11:26","nodeType":"YulTypedName","src":"10749:11:26","type":""}]},{"body":{"nativeSrc":"10817:16:26","nodeType":"YulBlock","src":"10817:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10826:1:26","nodeType":"YulLiteral","src":"10826:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"10829:1:26","nodeType":"YulLiteral","src":"10829:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10819:6:26","nodeType":"YulIdentifier","src":"10819:6:26"},"nativeSrc":"10819:12:26","nodeType":"YulFunctionCall","src":"10819:12:26"},"nativeSrc":"10819:12:26","nodeType":"YulExpressionStatement","src":"10819:12:26"}]},"condition":{"arguments":[{"name":"innerOffset","nativeSrc":"10800:11:26","nodeType":"YulIdentifier","src":"10800:11:26"},{"name":"_1","nativeSrc":"10813:2:26","nodeType":"YulIdentifier","src":"10813:2:26"}],"functionName":{"name":"gt","nativeSrc":"10797:2:26","nodeType":"YulIdentifier","src":"10797:2:26"},"nativeSrc":"10797:19:26","nodeType":"YulFunctionCall","src":"10797:19:26"},"nativeSrc":"10794:39:26","nodeType":"YulIf","src":"10794:39:26"},{"nativeSrc":"10846:30:26","nodeType":"YulVariableDeclaration","src":"10846:30:26","value":{"arguments":[{"name":"_2","nativeSrc":"10860:2:26","nodeType":"YulIdentifier","src":"10860:2:26"},{"name":"innerOffset","nativeSrc":"10864:11:26","nodeType":"YulIdentifier","src":"10864:11:26"}],"functionName":{"name":"add","nativeSrc":"10856:3:26","nodeType":"YulIdentifier","src":"10856:3:26"},"nativeSrc":"10856:20:26","nodeType":"YulFunctionCall","src":"10856:20:26"},"variables":[{"name":"_5","nativeSrc":"10850:2:26","nodeType":"YulTypedName","src":"10850:2:26","type":""}]},{"nativeSrc":"10889:14:26","nodeType":"YulVariableDeclaration","src":"10889:14:26","value":{"kind":"number","nativeSrc":"10899:4:26","nodeType":"YulLiteral","src":"10899:4:26","type":"","value":"0x60"},"variables":[{"name":"_6","nativeSrc":"10893:2:26","nodeType":"YulTypedName","src":"10893:2:26","type":""}]},{"body":{"nativeSrc":"11018:16:26","nodeType":"YulBlock","src":"11018:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11027:1:26","nodeType":"YulLiteral","src":"11027:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"11030:1:26","nodeType":"YulLiteral","src":"11030:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11020:6:26","nodeType":"YulIdentifier","src":"11020:6:26"},"nativeSrc":"11020:12:26","nodeType":"YulFunctionCall","src":"11020:12:26"},"nativeSrc":"11020:12:26","nodeType":"YulExpressionStatement","src":"11020:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10931:7:26","nodeType":"YulIdentifier","src":"10931:7:26"},{"name":"_5","nativeSrc":"10940:2:26","nodeType":"YulIdentifier","src":"10940:2:26"}],"functionName":{"name":"sub","nativeSrc":"10927:3:26","nodeType":"YulIdentifier","src":"10927:3:26"},"nativeSrc":"10927:16:26","nodeType":"YulFunctionCall","src":"10927:16:26"},{"kind":"number","nativeSrc":"10945:66:26","nodeType":"YulLiteral","src":"10945:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"add","nativeSrc":"10923:3:26","nodeType":"YulIdentifier","src":"10923:3:26"},"nativeSrc":"10923:89:26","nodeType":"YulFunctionCall","src":"10923:89:26"},{"name":"_6","nativeSrc":"11014:2:26","nodeType":"YulIdentifier","src":"11014:2:26"}],"functionName":{"name":"slt","nativeSrc":"10919:3:26","nodeType":"YulIdentifier","src":"10919:3:26"},"nativeSrc":"10919:98:26","nodeType":"YulFunctionCall","src":"10919:98:26"},"nativeSrc":"10916:118:26","nodeType":"YulIf","src":"10916:118:26"},{"nativeSrc":"11047:35:26","nodeType":"YulVariableDeclaration","src":"11047:35:26","value":{"arguments":[],"functionName":{"name":"allocate_memory_4581","nativeSrc":"11060:20:26","nodeType":"YulIdentifier","src":"11060:20:26"},"nativeSrc":"11060:22:26","nodeType":"YulFunctionCall","src":"11060:22:26"},"variables":[{"name":"value","nativeSrc":"11051:5:26","nodeType":"YulTypedName","src":"11051:5:26","type":""}]},{"nativeSrc":"11095:40:26","nodeType":"YulVariableDeclaration","src":"11095:40:26","value":{"arguments":[{"arguments":[{"name":"_5","nativeSrc":"11127:2:26","nodeType":"YulIdentifier","src":"11127:2:26"},{"name":"_4","nativeSrc":"11131:2:26","nodeType":"YulIdentifier","src":"11131:2:26"}],"functionName":{"name":"add","nativeSrc":"11123:3:26","nodeType":"YulIdentifier","src":"11123:3:26"},"nativeSrc":"11123:11:26","nodeType":"YulFunctionCall","src":"11123:11:26"}],"functionName":{"name":"calldataload","nativeSrc":"11110:12:26","nodeType":"YulIdentifier","src":"11110:12:26"},"nativeSrc":"11110:25:26","nodeType":"YulFunctionCall","src":"11110:25:26"},"variables":[{"name":"value_1","nativeSrc":"11099:7:26","nodeType":"YulTypedName","src":"11099:7:26","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"11173:7:26","nodeType":"YulIdentifier","src":"11173:7:26"}],"functionName":{"name":"validator_revert_address","nativeSrc":"11148:24:26","nodeType":"YulIdentifier","src":"11148:24:26"},"nativeSrc":"11148:33:26","nodeType":"YulFunctionCall","src":"11148:33:26"},"nativeSrc":"11148:33:26","nodeType":"YulExpressionStatement","src":"11148:33:26"},{"expression":{"arguments":[{"name":"value","nativeSrc":"11201:5:26","nodeType":"YulIdentifier","src":"11201:5:26"},{"name":"value_1","nativeSrc":"11208:7:26","nodeType":"YulIdentifier","src":"11208:7:26"}],"functionName":{"name":"mstore","nativeSrc":"11194:6:26","nodeType":"YulIdentifier","src":"11194:6:26"},"nativeSrc":"11194:22:26","nodeType":"YulFunctionCall","src":"11194:22:26"},"nativeSrc":"11194:22:26","nodeType":"YulExpressionStatement","src":"11194:22:26"},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11240:5:26","nodeType":"YulIdentifier","src":"11240:5:26"},{"name":"_4","nativeSrc":"11247:2:26","nodeType":"YulIdentifier","src":"11247:2:26"}],"functionName":{"name":"add","nativeSrc":"11236:3:26","nodeType":"YulIdentifier","src":"11236:3:26"},"nativeSrc":"11236:14:26","nodeType":"YulFunctionCall","src":"11236:14:26"},{"arguments":[{"arguments":[{"name":"_5","nativeSrc":"11269:2:26","nodeType":"YulIdentifier","src":"11269:2:26"},{"kind":"number","nativeSrc":"11273:2:26","nodeType":"YulLiteral","src":"11273:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11265:3:26","nodeType":"YulIdentifier","src":"11265:3:26"},"nativeSrc":"11265:11:26","nodeType":"YulFunctionCall","src":"11265:11:26"}],"functionName":{"name":"calldataload","nativeSrc":"11252:12:26","nodeType":"YulIdentifier","src":"11252:12:26"},"nativeSrc":"11252:25:26","nodeType":"YulFunctionCall","src":"11252:25:26"}],"functionName":{"name":"mstore","nativeSrc":"11229:6:26","nodeType":"YulIdentifier","src":"11229:6:26"},"nativeSrc":"11229:49:26","nodeType":"YulFunctionCall","src":"11229:49:26"},"nativeSrc":"11229:49:26","nodeType":"YulExpressionStatement","src":"11229:49:26"},{"nativeSrc":"11291:41:26","nodeType":"YulVariableDeclaration","src":"11291:41:26","value":{"arguments":[{"arguments":[{"name":"_5","nativeSrc":"11324:2:26","nodeType":"YulIdentifier","src":"11324:2:26"},{"name":"_6","nativeSrc":"11328:2:26","nodeType":"YulIdentifier","src":"11328:2:26"}],"functionName":{"name":"add","nativeSrc":"11320:3:26","nodeType":"YulIdentifier","src":"11320:3:26"},"nativeSrc":"11320:11:26","nodeType":"YulFunctionCall","src":"11320:11:26"}],"functionName":{"name":"calldataload","nativeSrc":"11307:12:26","nodeType":"YulIdentifier","src":"11307:12:26"},"nativeSrc":"11307:25:26","nodeType":"YulFunctionCall","src":"11307:25:26"},"variables":[{"name":"offset_1","nativeSrc":"11295:8:26","nodeType":"YulTypedName","src":"11295:8:26","type":""}]},{"body":{"nativeSrc":"11365:16:26","nodeType":"YulBlock","src":"11365:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11374:1:26","nodeType":"YulLiteral","src":"11374:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"11377:1:26","nodeType":"YulLiteral","src":"11377:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11367:6:26","nodeType":"YulIdentifier","src":"11367:6:26"},"nativeSrc":"11367:12:26","nodeType":"YulFunctionCall","src":"11367:12:26"},"nativeSrc":"11367:12:26","nodeType":"YulExpressionStatement","src":"11367:12:26"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"11351:8:26","nodeType":"YulIdentifier","src":"11351:8:26"},{"name":"_1","nativeSrc":"11361:2:26","nodeType":"YulIdentifier","src":"11361:2:26"}],"functionName":{"name":"gt","nativeSrc":"11348:2:26","nodeType":"YulIdentifier","src":"11348:2:26"},"nativeSrc":"11348:16:26","nodeType":"YulFunctionCall","src":"11348:16:26"},"nativeSrc":"11345:36:26","nodeType":"YulIf","src":"11345:36:26"},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11405:5:26","nodeType":"YulIdentifier","src":"11405:5:26"},{"kind":"number","nativeSrc":"11412:2:26","nodeType":"YulLiteral","src":"11412:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11401:3:26","nodeType":"YulIdentifier","src":"11401:3:26"},"nativeSrc":"11401:14:26","nodeType":"YulFunctionCall","src":"11401:14:26"},{"arguments":[{"arguments":[{"arguments":[{"name":"_5","nativeSrc":"11442:2:26","nodeType":"YulIdentifier","src":"11442:2:26"},{"name":"offset_1","nativeSrc":"11446:8:26","nodeType":"YulIdentifier","src":"11446:8:26"}],"functionName":{"name":"add","nativeSrc":"11438:3:26","nodeType":"YulIdentifier","src":"11438:3:26"},"nativeSrc":"11438:17:26","nodeType":"YulFunctionCall","src":"11438:17:26"},{"name":"_4","nativeSrc":"11457:2:26","nodeType":"YulIdentifier","src":"11457:2:26"}],"functionName":{"name":"add","nativeSrc":"11434:3:26","nodeType":"YulIdentifier","src":"11434:3:26"},"nativeSrc":"11434:26:26","nodeType":"YulFunctionCall","src":"11434:26:26"},{"name":"dataEnd","nativeSrc":"11462:7:26","nodeType":"YulIdentifier","src":"11462:7:26"}],"functionName":{"name":"abi_decode_bytes","nativeSrc":"11417:16:26","nodeType":"YulIdentifier","src":"11417:16:26"},"nativeSrc":"11417:53:26","nodeType":"YulFunctionCall","src":"11417:53:26"}],"functionName":{"name":"mstore","nativeSrc":"11394:6:26","nodeType":"YulIdentifier","src":"11394:6:26"},"nativeSrc":"11394:77:26","nodeType":"YulFunctionCall","src":"11394:77:26"},"nativeSrc":"11394:77:26","nodeType":"YulExpressionStatement","src":"11394:77:26"},{"expression":{"arguments":[{"name":"dst","nativeSrc":"11491:3:26","nodeType":"YulIdentifier","src":"11491:3:26"},{"name":"value","nativeSrc":"11496:5:26","nodeType":"YulIdentifier","src":"11496:5:26"}],"functionName":{"name":"mstore","nativeSrc":"11484:6:26","nodeType":"YulIdentifier","src":"11484:6:26"},"nativeSrc":"11484:18:26","nodeType":"YulFunctionCall","src":"11484:18:26"},"nativeSrc":"11484:18:26","nodeType":"YulExpressionStatement","src":"11484:18:26"},{"nativeSrc":"11515:19:26","nodeType":"YulAssignment","src":"11515:19:26","value":{"arguments":[{"name":"dst","nativeSrc":"11526:3:26","nodeType":"YulIdentifier","src":"11526:3:26"},{"name":"_4","nativeSrc":"11531:2:26","nodeType":"YulIdentifier","src":"11531:2:26"}],"functionName":{"name":"add","nativeSrc":"11522:3:26","nodeType":"YulIdentifier","src":"11522:3:26"},"nativeSrc":"11522:12:26","nodeType":"YulFunctionCall","src":"11522:12:26"},"variableNames":[{"name":"dst","nativeSrc":"11515:3:26","nodeType":"YulIdentifier","src":"11515:3:26"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"10686:3:26","nodeType":"YulIdentifier","src":"10686:3:26"},{"name":"srcEnd","nativeSrc":"10691:6:26","nodeType":"YulIdentifier","src":"10691:6:26"}],"functionName":{"name":"lt","nativeSrc":"10683:2:26","nodeType":"YulIdentifier","src":"10683:2:26"},"nativeSrc":"10683:15:26","nodeType":"YulFunctionCall","src":"10683:15:26"},"nativeSrc":"10675:869:26","nodeType":"YulForLoop","post":{"nativeSrc":"10699:23:26","nodeType":"YulBlock","src":"10699:23:26","statements":[{"nativeSrc":"10701:19:26","nodeType":"YulAssignment","src":"10701:19:26","value":{"arguments":[{"name":"src","nativeSrc":"10712:3:26","nodeType":"YulIdentifier","src":"10712:3:26"},{"name":"_4","nativeSrc":"10717:2:26","nodeType":"YulIdentifier","src":"10717:2:26"}],"functionName":{"name":"add","nativeSrc":"10708:3:26","nodeType":"YulIdentifier","src":"10708:3:26"},"nativeSrc":"10708:12:26","nodeType":"YulFunctionCall","src":"10708:12:26"},"variableNames":[{"name":"src","nativeSrc":"10701:3:26","nodeType":"YulIdentifier","src":"10701:3:26"}]}]},"pre":{"nativeSrc":"10679:3:26","nodeType":"YulBlock","src":"10679:3:26","statements":[]},"src":"10675:869:26"},{"nativeSrc":"11553:15:26","nodeType":"YulAssignment","src":"11553:15:26","value":{"name":"dst_1","nativeSrc":"11563:5:26","nodeType":"YulIdentifier","src":"11563:5:26"},"variableNames":[{"name":"value0","nativeSrc":"11553:6:26","nodeType":"YulIdentifier","src":"11553:6:26"}]},{"nativeSrc":"11577:48:26","nodeType":"YulVariableDeclaration","src":"11577:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11610:9:26","nodeType":"YulIdentifier","src":"11610:9:26"},{"name":"_4","nativeSrc":"11621:2:26","nodeType":"YulIdentifier","src":"11621:2:26"}],"functionName":{"name":"add","nativeSrc":"11606:3:26","nodeType":"YulIdentifier","src":"11606:3:26"},"nativeSrc":"11606:18:26","nodeType":"YulFunctionCall","src":"11606:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"11593:12:26","nodeType":"YulIdentifier","src":"11593:12:26"},"nativeSrc":"11593:32:26","nodeType":"YulFunctionCall","src":"11593:32:26"},"variables":[{"name":"offset_2","nativeSrc":"11581:8:26","nodeType":"YulTypedName","src":"11581:8:26","type":""}]},{"body":{"nativeSrc":"11654:16:26","nodeType":"YulBlock","src":"11654:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11663:1:26","nodeType":"YulLiteral","src":"11663:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"11666:1:26","nodeType":"YulLiteral","src":"11666:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11656:6:26","nodeType":"YulIdentifier","src":"11656:6:26"},"nativeSrc":"11656:12:26","nodeType":"YulFunctionCall","src":"11656:12:26"},"nativeSrc":"11656:12:26","nodeType":"YulExpressionStatement","src":"11656:12:26"}]},"condition":{"arguments":[{"name":"offset_2","nativeSrc":"11640:8:26","nodeType":"YulIdentifier","src":"11640:8:26"},{"name":"_1","nativeSrc":"11650:2:26","nodeType":"YulIdentifier","src":"11650:2:26"}],"functionName":{"name":"gt","nativeSrc":"11637:2:26","nodeType":"YulIdentifier","src":"11637:2:26"},"nativeSrc":"11637:16:26","nodeType":"YulFunctionCall","src":"11637:16:26"},"nativeSrc":"11634:36:26","nodeType":"YulIf","src":"11634:36:26"},{"nativeSrc":"11679:73:26","nodeType":"YulAssignment","src":"11679:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11722:9:26","nodeType":"YulIdentifier","src":"11722:9:26"},{"name":"offset_2","nativeSrc":"11733:8:26","nodeType":"YulIdentifier","src":"11733:8:26"}],"functionName":{"name":"add","nativeSrc":"11718:3:26","nodeType":"YulIdentifier","src":"11718:3:26"},"nativeSrc":"11718:24:26","nodeType":"YulFunctionCall","src":"11718:24:26"},{"name":"dataEnd","nativeSrc":"11744:7:26","nodeType":"YulIdentifier","src":"11744:7:26"}],"functionName":{"name":"abi_decode_array_address_dyn","nativeSrc":"11689:28:26","nodeType":"YulIdentifier","src":"11689:28:26"},"nativeSrc":"11689:63:26","nodeType":"YulFunctionCall","src":"11689:63:26"},"variableNames":[{"name":"value1","nativeSrc":"11679:6:26","nodeType":"YulIdentifier","src":"11679:6:26"}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_Call_$2582_memory_ptr_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr","nativeSrc":"9865:1893:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9982:9:26","nodeType":"YulTypedName","src":"9982:9:26","type":""},{"name":"dataEnd","nativeSrc":"9993:7:26","nodeType":"YulTypedName","src":"9993:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10005:6:26","nodeType":"YulTypedName","src":"10005:6:26","type":""},{"name":"value1","nativeSrc":"10013:6:26","nodeType":"YulTypedName","src":"10013:6:26","type":""}],"src":"9865:1893:26"},{"body":{"nativeSrc":"11884:264:26","nodeType":"YulBlock","src":"11884:264:26","statements":[{"body":{"nativeSrc":"11931:16:26","nodeType":"YulBlock","src":"11931:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11940:1:26","nodeType":"YulLiteral","src":"11940:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"11943:1:26","nodeType":"YulLiteral","src":"11943:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11933:6:26","nodeType":"YulIdentifier","src":"11933:6:26"},"nativeSrc":"11933:12:26","nodeType":"YulFunctionCall","src":"11933:12:26"},"nativeSrc":"11933:12:26","nodeType":"YulExpressionStatement","src":"11933:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11905:7:26","nodeType":"YulIdentifier","src":"11905:7:26"},{"name":"headStart","nativeSrc":"11914:9:26","nodeType":"YulIdentifier","src":"11914:9:26"}],"functionName":{"name":"sub","nativeSrc":"11901:3:26","nodeType":"YulIdentifier","src":"11901:3:26"},"nativeSrc":"11901:23:26","nodeType":"YulFunctionCall","src":"11901:23:26"},{"kind":"number","nativeSrc":"11926:3:26","nodeType":"YulLiteral","src":"11926:3:26","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"11897:3:26","nodeType":"YulIdentifier","src":"11897:3:26"},"nativeSrc":"11897:33:26","nodeType":"YulFunctionCall","src":"11897:33:26"},"nativeSrc":"11894:53:26","nodeType":"YulIf","src":"11894:53:26"},{"nativeSrc":"11956:33:26","nodeType":"YulAssignment","src":"11956:33:26","value":{"arguments":[{"name":"headStart","nativeSrc":"11979:9:26","nodeType":"YulIdentifier","src":"11979:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"11966:12:26","nodeType":"YulIdentifier","src":"11966:12:26"},"nativeSrc":"11966:23:26","nodeType":"YulFunctionCall","src":"11966:23:26"},"variableNames":[{"name":"value0","nativeSrc":"11956:6:26","nodeType":"YulIdentifier","src":"11956:6:26"}]},{"nativeSrc":"11998:42:26","nodeType":"YulAssignment","src":"11998:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12025:9:26","nodeType":"YulIdentifier","src":"12025:9:26"},{"kind":"number","nativeSrc":"12036:2:26","nodeType":"YulLiteral","src":"12036:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12021:3:26","nodeType":"YulIdentifier","src":"12021:3:26"},"nativeSrc":"12021:18:26","nodeType":"YulFunctionCall","src":"12021:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"12008:12:26","nodeType":"YulIdentifier","src":"12008:12:26"},"nativeSrc":"12008:32:26","nodeType":"YulFunctionCall","src":"12008:32:26"},"variableNames":[{"name":"value1","nativeSrc":"11998:6:26","nodeType":"YulIdentifier","src":"11998:6:26"}]},{"nativeSrc":"12049:42:26","nodeType":"YulAssignment","src":"12049:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12076:9:26","nodeType":"YulIdentifier","src":"12076:9:26"},{"kind":"number","nativeSrc":"12087:2:26","nodeType":"YulLiteral","src":"12087:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12072:3:26","nodeType":"YulIdentifier","src":"12072:3:26"},"nativeSrc":"12072:18:26","nodeType":"YulFunctionCall","src":"12072:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"12059:12:26","nodeType":"YulIdentifier","src":"12059:12:26"},"nativeSrc":"12059:32:26","nodeType":"YulFunctionCall","src":"12059:32:26"},"variableNames":[{"name":"value2","nativeSrc":"12049:6:26","nodeType":"YulIdentifier","src":"12049:6:26"}]},{"nativeSrc":"12100:42:26","nodeType":"YulAssignment","src":"12100:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12127:9:26","nodeType":"YulIdentifier","src":"12127:9:26"},{"kind":"number","nativeSrc":"12138:2:26","nodeType":"YulLiteral","src":"12138:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12123:3:26","nodeType":"YulIdentifier","src":"12123:3:26"},"nativeSrc":"12123:18:26","nodeType":"YulFunctionCall","src":"12123:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"12110:12:26","nodeType":"YulIdentifier","src":"12110:12:26"},"nativeSrc":"12110:32:26","nodeType":"YulFunctionCall","src":"12110:32:26"},"variableNames":[{"name":"value3","nativeSrc":"12100:6:26","nodeType":"YulIdentifier","src":"12100:6:26"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256","nativeSrc":"11763:385:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11826:9:26","nodeType":"YulTypedName","src":"11826:9:26","type":""},{"name":"dataEnd","nativeSrc":"11837:7:26","nodeType":"YulTypedName","src":"11837:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11849:6:26","nodeType":"YulTypedName","src":"11849:6:26","type":""},{"name":"value1","nativeSrc":"11857:6:26","nodeType":"YulTypedName","src":"11857:6:26","type":""},{"name":"value2","nativeSrc":"11865:6:26","nodeType":"YulTypedName","src":"11865:6:26","type":""},{"name":"value3","nativeSrc":"11873:6:26","nodeType":"YulTypedName","src":"11873:6:26","type":""}],"src":"11763:385:26"},{"body":{"nativeSrc":"12208:382:26","nodeType":"YulBlock","src":"12208:382:26","statements":[{"nativeSrc":"12218:22:26","nodeType":"YulAssignment","src":"12218:22:26","value":{"arguments":[{"kind":"number","nativeSrc":"12232:1:26","nodeType":"YulLiteral","src":"12232:1:26","type":"","value":"1"},{"name":"data","nativeSrc":"12235:4:26","nodeType":"YulIdentifier","src":"12235:4:26"}],"functionName":{"name":"shr","nativeSrc":"12228:3:26","nodeType":"YulIdentifier","src":"12228:3:26"},"nativeSrc":"12228:12:26","nodeType":"YulFunctionCall","src":"12228:12:26"},"variableNames":[{"name":"length","nativeSrc":"12218:6:26","nodeType":"YulIdentifier","src":"12218:6:26"}]},{"nativeSrc":"12249:38:26","nodeType":"YulVariableDeclaration","src":"12249:38:26","value":{"arguments":[{"name":"data","nativeSrc":"12279:4:26","nodeType":"YulIdentifier","src":"12279:4:26"},{"kind":"number","nativeSrc":"12285:1:26","nodeType":"YulLiteral","src":"12285:1:26","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"12275:3:26","nodeType":"YulIdentifier","src":"12275:3:26"},"nativeSrc":"12275:12:26","nodeType":"YulFunctionCall","src":"12275:12:26"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"12253:18:26","nodeType":"YulTypedName","src":"12253:18:26","type":""}]},{"body":{"nativeSrc":"12326:31:26","nodeType":"YulBlock","src":"12326:31:26","statements":[{"nativeSrc":"12328:27:26","nodeType":"YulAssignment","src":"12328:27:26","value":{"arguments":[{"name":"length","nativeSrc":"12342:6:26","nodeType":"YulIdentifier","src":"12342:6:26"},{"kind":"number","nativeSrc":"12350:4:26","nodeType":"YulLiteral","src":"12350:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"12338:3:26","nodeType":"YulIdentifier","src":"12338:3:26"},"nativeSrc":"12338:17:26","nodeType":"YulFunctionCall","src":"12338:17:26"},"variableNames":[{"name":"length","nativeSrc":"12328:6:26","nodeType":"YulIdentifier","src":"12328:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"12306:18:26","nodeType":"YulIdentifier","src":"12306:18:26"}],"functionName":{"name":"iszero","nativeSrc":"12299:6:26","nodeType":"YulIdentifier","src":"12299:6:26"},"nativeSrc":"12299:26:26","nodeType":"YulFunctionCall","src":"12299:26:26"},"nativeSrc":"12296:61:26","nodeType":"YulIf","src":"12296:61:26"},{"body":{"nativeSrc":"12416:168:26","nodeType":"YulBlock","src":"12416:168:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12437:1:26","nodeType":"YulLiteral","src":"12437:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"12440:77:26","nodeType":"YulLiteral","src":"12440:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"12430:6:26","nodeType":"YulIdentifier","src":"12430:6:26"},"nativeSrc":"12430:88:26","nodeType":"YulFunctionCall","src":"12430:88:26"},"nativeSrc":"12430:88:26","nodeType":"YulExpressionStatement","src":"12430:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12538:1:26","nodeType":"YulLiteral","src":"12538:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"12541:4:26","nodeType":"YulLiteral","src":"12541:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"12531:6:26","nodeType":"YulIdentifier","src":"12531:6:26"},"nativeSrc":"12531:15:26","nodeType":"YulFunctionCall","src":"12531:15:26"},"nativeSrc":"12531:15:26","nodeType":"YulExpressionStatement","src":"12531:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12566:1:26","nodeType":"YulLiteral","src":"12566:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"12569:4:26","nodeType":"YulLiteral","src":"12569:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"12559:6:26","nodeType":"YulIdentifier","src":"12559:6:26"},"nativeSrc":"12559:15:26","nodeType":"YulFunctionCall","src":"12559:15:26"},"nativeSrc":"12559:15:26","nodeType":"YulExpressionStatement","src":"12559:15:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"12372:18:26","nodeType":"YulIdentifier","src":"12372:18:26"},{"arguments":[{"name":"length","nativeSrc":"12395:6:26","nodeType":"YulIdentifier","src":"12395:6:26"},{"kind":"number","nativeSrc":"12403:2:26","nodeType":"YulLiteral","src":"12403:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"12392:2:26","nodeType":"YulIdentifier","src":"12392:2:26"},"nativeSrc":"12392:14:26","nodeType":"YulFunctionCall","src":"12392:14:26"}],"functionName":{"name":"eq","nativeSrc":"12369:2:26","nodeType":"YulIdentifier","src":"12369:2:26"},"nativeSrc":"12369:38:26","nodeType":"YulFunctionCall","src":"12369:38:26"},"nativeSrc":"12366:218:26","nodeType":"YulIf","src":"12366:218:26"}]},"name":"extract_byte_array_length","nativeSrc":"12153:437:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"12188:4:26","nodeType":"YulTypedName","src":"12188:4:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"12197:6:26","nodeType":"YulTypedName","src":"12197:6:26","type":""}],"src":"12153:437:26"},{"body":{"nativeSrc":"12676:170:26","nodeType":"YulBlock","src":"12676:170:26","statements":[{"body":{"nativeSrc":"12722:16:26","nodeType":"YulBlock","src":"12722:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12731:1:26","nodeType":"YulLiteral","src":"12731:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"12734:1:26","nodeType":"YulLiteral","src":"12734:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12724:6:26","nodeType":"YulIdentifier","src":"12724:6:26"},"nativeSrc":"12724:12:26","nodeType":"YulFunctionCall","src":"12724:12:26"},"nativeSrc":"12724:12:26","nodeType":"YulExpressionStatement","src":"12724:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12697:7:26","nodeType":"YulIdentifier","src":"12697:7:26"},{"name":"headStart","nativeSrc":"12706:9:26","nodeType":"YulIdentifier","src":"12706:9:26"}],"functionName":{"name":"sub","nativeSrc":"12693:3:26","nodeType":"YulIdentifier","src":"12693:3:26"},"nativeSrc":"12693:23:26","nodeType":"YulFunctionCall","src":"12693:23:26"},{"kind":"number","nativeSrc":"12718:2:26","nodeType":"YulLiteral","src":"12718:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"12689:3:26","nodeType":"YulIdentifier","src":"12689:3:26"},"nativeSrc":"12689:32:26","nodeType":"YulFunctionCall","src":"12689:32:26"},"nativeSrc":"12686:52:26","nodeType":"YulIf","src":"12686:52:26"},{"nativeSrc":"12747:29:26","nodeType":"YulVariableDeclaration","src":"12747:29:26","value":{"arguments":[{"name":"headStart","nativeSrc":"12766:9:26","nodeType":"YulIdentifier","src":"12766:9:26"}],"functionName":{"name":"mload","nativeSrc":"12760:5:26","nodeType":"YulIdentifier","src":"12760:5:26"},"nativeSrc":"12760:16:26","nodeType":"YulFunctionCall","src":"12760:16:26"},"variables":[{"name":"value","nativeSrc":"12751:5:26","nodeType":"YulTypedName","src":"12751:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"12810:5:26","nodeType":"YulIdentifier","src":"12810:5:26"}],"functionName":{"name":"validator_revert_address","nativeSrc":"12785:24:26","nodeType":"YulIdentifier","src":"12785:24:26"},"nativeSrc":"12785:31:26","nodeType":"YulFunctionCall","src":"12785:31:26"},"nativeSrc":"12785:31:26","nodeType":"YulExpressionStatement","src":"12785:31:26"},{"nativeSrc":"12825:15:26","nodeType":"YulAssignment","src":"12825:15:26","value":{"name":"value","nativeSrc":"12835:5:26","nodeType":"YulIdentifier","src":"12835:5:26"},"variableNames":[{"name":"value0","nativeSrc":"12825:6:26","nodeType":"YulIdentifier","src":"12825:6:26"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"12595:251:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12642:9:26","nodeType":"YulTypedName","src":"12642:9:26","type":""},{"name":"dataEnd","nativeSrc":"12653:7:26","nodeType":"YulTypedName","src":"12653:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12665:6:26","nodeType":"YulTypedName","src":"12665:6:26","type":""}],"src":"12595:251:26"},{"body":{"nativeSrc":"12932:103:26","nodeType":"YulBlock","src":"12932:103:26","statements":[{"body":{"nativeSrc":"12978:16:26","nodeType":"YulBlock","src":"12978:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12987:1:26","nodeType":"YulLiteral","src":"12987:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"12990:1:26","nodeType":"YulLiteral","src":"12990:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12980:6:26","nodeType":"YulIdentifier","src":"12980:6:26"},"nativeSrc":"12980:12:26","nodeType":"YulFunctionCall","src":"12980:12:26"},"nativeSrc":"12980:12:26","nodeType":"YulExpressionStatement","src":"12980:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12953:7:26","nodeType":"YulIdentifier","src":"12953:7:26"},{"name":"headStart","nativeSrc":"12962:9:26","nodeType":"YulIdentifier","src":"12962:9:26"}],"functionName":{"name":"sub","nativeSrc":"12949:3:26","nodeType":"YulIdentifier","src":"12949:3:26"},"nativeSrc":"12949:23:26","nodeType":"YulFunctionCall","src":"12949:23:26"},{"kind":"number","nativeSrc":"12974:2:26","nodeType":"YulLiteral","src":"12974:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"12945:3:26","nodeType":"YulIdentifier","src":"12945:3:26"},"nativeSrc":"12945:32:26","nodeType":"YulFunctionCall","src":"12945:32:26"},"nativeSrc":"12942:52:26","nodeType":"YulIf","src":"12942:52:26"},{"nativeSrc":"13003:26:26","nodeType":"YulAssignment","src":"13003:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"13019:9:26","nodeType":"YulIdentifier","src":"13019:9:26"}],"functionName":{"name":"mload","nativeSrc":"13013:5:26","nodeType":"YulIdentifier","src":"13013:5:26"},"nativeSrc":"13013:16:26","nodeType":"YulFunctionCall","src":"13013:16:26"},"variableNames":[{"name":"value0","nativeSrc":"13003:6:26","nodeType":"YulIdentifier","src":"13003:6:26"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"12851:184:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12898:9:26","nodeType":"YulTypedName","src":"12898:9:26","type":""},{"name":"dataEnd","nativeSrc":"12909:7:26","nodeType":"YulTypedName","src":"12909:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12921:6:26","nodeType":"YulTypedName","src":"12921:6:26","type":""}],"src":"12851:184:26"},{"body":{"nativeSrc":"13072:152:26","nodeType":"YulBlock","src":"13072:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13089:1:26","nodeType":"YulLiteral","src":"13089:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"13092:77:26","nodeType":"YulLiteral","src":"13092:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"13082:6:26","nodeType":"YulIdentifier","src":"13082:6:26"},"nativeSrc":"13082:88:26","nodeType":"YulFunctionCall","src":"13082:88:26"},"nativeSrc":"13082:88:26","nodeType":"YulExpressionStatement","src":"13082:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13186:1:26","nodeType":"YulLiteral","src":"13186:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"13189:4:26","nodeType":"YulLiteral","src":"13189:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"13179:6:26","nodeType":"YulIdentifier","src":"13179:6:26"},"nativeSrc":"13179:15:26","nodeType":"YulFunctionCall","src":"13179:15:26"},"nativeSrc":"13179:15:26","nodeType":"YulExpressionStatement","src":"13179:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13210:1:26","nodeType":"YulLiteral","src":"13210:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"13213:4:26","nodeType":"YulLiteral","src":"13213:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13203:6:26","nodeType":"YulIdentifier","src":"13203:6:26"},"nativeSrc":"13203:15:26","nodeType":"YulFunctionCall","src":"13203:15:26"},"nativeSrc":"13203:15:26","nodeType":"YulExpressionStatement","src":"13203:15:26"}]},"name":"panic_error_0x11","nativeSrc":"13040:184:26","nodeType":"YulFunctionDefinition","src":"13040:184:26"},{"body":{"nativeSrc":"13281:116:26","nodeType":"YulBlock","src":"13281:116:26","statements":[{"nativeSrc":"13291:20:26","nodeType":"YulAssignment","src":"13291:20:26","value":{"arguments":[{"name":"x","nativeSrc":"13306:1:26","nodeType":"YulIdentifier","src":"13306:1:26"},{"name":"y","nativeSrc":"13309:1:26","nodeType":"YulIdentifier","src":"13309:1:26"}],"functionName":{"name":"mul","nativeSrc":"13302:3:26","nodeType":"YulIdentifier","src":"13302:3:26"},"nativeSrc":"13302:9:26","nodeType":"YulFunctionCall","src":"13302:9:26"},"variableNames":[{"name":"product","nativeSrc":"13291:7:26","nodeType":"YulIdentifier","src":"13291:7:26"}]},{"body":{"nativeSrc":"13369:22:26","nodeType":"YulBlock","src":"13369:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13371:16:26","nodeType":"YulIdentifier","src":"13371:16:26"},"nativeSrc":"13371:18:26","nodeType":"YulFunctionCall","src":"13371:18:26"},"nativeSrc":"13371:18:26","nodeType":"YulExpressionStatement","src":"13371:18:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"13340:1:26","nodeType":"YulIdentifier","src":"13340:1:26"}],"functionName":{"name":"iszero","nativeSrc":"13333:6:26","nodeType":"YulIdentifier","src":"13333:6:26"},"nativeSrc":"13333:9:26","nodeType":"YulFunctionCall","src":"13333:9:26"},{"arguments":[{"name":"y","nativeSrc":"13347:1:26","nodeType":"YulIdentifier","src":"13347:1:26"},{"arguments":[{"name":"product","nativeSrc":"13354:7:26","nodeType":"YulIdentifier","src":"13354:7:26"},{"name":"x","nativeSrc":"13363:1:26","nodeType":"YulIdentifier","src":"13363:1:26"}],"functionName":{"name":"div","nativeSrc":"13350:3:26","nodeType":"YulIdentifier","src":"13350:3:26"},"nativeSrc":"13350:15:26","nodeType":"YulFunctionCall","src":"13350:15:26"}],"functionName":{"name":"eq","nativeSrc":"13344:2:26","nodeType":"YulIdentifier","src":"13344:2:26"},"nativeSrc":"13344:22:26","nodeType":"YulFunctionCall","src":"13344:22:26"}],"functionName":{"name":"or","nativeSrc":"13330:2:26","nodeType":"YulIdentifier","src":"13330:2:26"},"nativeSrc":"13330:37:26","nodeType":"YulFunctionCall","src":"13330:37:26"}],"functionName":{"name":"iszero","nativeSrc":"13323:6:26","nodeType":"YulIdentifier","src":"13323:6:26"},"nativeSrc":"13323:45:26","nodeType":"YulFunctionCall","src":"13323:45:26"},"nativeSrc":"13320:71:26","nodeType":"YulIf","src":"13320:71:26"}]},"name":"checked_mul_t_uint256","nativeSrc":"13229:168:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13260:1:26","nodeType":"YulTypedName","src":"13260:1:26","type":""},{"name":"y","nativeSrc":"13263:1:26","nodeType":"YulTypedName","src":"13263:1:26","type":""}],"returnVariables":[{"name":"product","nativeSrc":"13269:7:26","nodeType":"YulTypedName","src":"13269:7:26","type":""}],"src":"13229:168:26"},{"body":{"nativeSrc":"13448:228:26","nodeType":"YulBlock","src":"13448:228:26","statements":[{"body":{"nativeSrc":"13479:168:26","nodeType":"YulBlock","src":"13479:168:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13500:1:26","nodeType":"YulLiteral","src":"13500:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"13503:77:26","nodeType":"YulLiteral","src":"13503:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"13493:6:26","nodeType":"YulIdentifier","src":"13493:6:26"},"nativeSrc":"13493:88:26","nodeType":"YulFunctionCall","src":"13493:88:26"},"nativeSrc":"13493:88:26","nodeType":"YulExpressionStatement","src":"13493:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13601:1:26","nodeType":"YulLiteral","src":"13601:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"13604:4:26","nodeType":"YulLiteral","src":"13604:4:26","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"13594:6:26","nodeType":"YulIdentifier","src":"13594:6:26"},"nativeSrc":"13594:15:26","nodeType":"YulFunctionCall","src":"13594:15:26"},"nativeSrc":"13594:15:26","nodeType":"YulExpressionStatement","src":"13594:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13629:1:26","nodeType":"YulLiteral","src":"13629:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"13632:4:26","nodeType":"YulLiteral","src":"13632:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13622:6:26","nodeType":"YulIdentifier","src":"13622:6:26"},"nativeSrc":"13622:15:26","nodeType":"YulFunctionCall","src":"13622:15:26"},"nativeSrc":"13622:15:26","nodeType":"YulExpressionStatement","src":"13622:15:26"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"13468:1:26","nodeType":"YulIdentifier","src":"13468:1:26"}],"functionName":{"name":"iszero","nativeSrc":"13461:6:26","nodeType":"YulIdentifier","src":"13461:6:26"},"nativeSrc":"13461:9:26","nodeType":"YulFunctionCall","src":"13461:9:26"},"nativeSrc":"13458:189:26","nodeType":"YulIf","src":"13458:189:26"},{"nativeSrc":"13656:14:26","nodeType":"YulAssignment","src":"13656:14:26","value":{"arguments":[{"name":"x","nativeSrc":"13665:1:26","nodeType":"YulIdentifier","src":"13665:1:26"},{"name":"y","nativeSrc":"13668:1:26","nodeType":"YulIdentifier","src":"13668:1:26"}],"functionName":{"name":"div","nativeSrc":"13661:3:26","nodeType":"YulIdentifier","src":"13661:3:26"},"nativeSrc":"13661:9:26","nodeType":"YulFunctionCall","src":"13661:9:26"},"variableNames":[{"name":"r","nativeSrc":"13656:1:26","nodeType":"YulIdentifier","src":"13656:1:26"}]}]},"name":"checked_div_t_uint256","nativeSrc":"13402:274:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13433:1:26","nodeType":"YulTypedName","src":"13433:1:26","type":""},{"name":"y","nativeSrc":"13436:1:26","nodeType":"YulTypedName","src":"13436:1:26","type":""}],"returnVariables":[{"name":"r","nativeSrc":"13442:1:26","nodeType":"YulTypedName","src":"13442:1:26","type":""}],"src":"13402:274:26"},{"body":{"nativeSrc":"13838:241:26","nodeType":"YulBlock","src":"13838:241:26","statements":[{"nativeSrc":"13848:26:26","nodeType":"YulAssignment","src":"13848:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"13860:9:26","nodeType":"YulIdentifier","src":"13860:9:26"},{"kind":"number","nativeSrc":"13871:2:26","nodeType":"YulLiteral","src":"13871:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13856:3:26","nodeType":"YulIdentifier","src":"13856:3:26"},"nativeSrc":"13856:18:26","nodeType":"YulFunctionCall","src":"13856:18:26"},"variableNames":[{"name":"tail","nativeSrc":"13848:4:26","nodeType":"YulIdentifier","src":"13848:4:26"}]},{"nativeSrc":"13883:52:26","nodeType":"YulVariableDeclaration","src":"13883:52:26","value":{"kind":"number","nativeSrc":"13893:42:26","nodeType":"YulLiteral","src":"13893:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"13887:2:26","nodeType":"YulTypedName","src":"13887:2:26","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13951:9:26","nodeType":"YulIdentifier","src":"13951:9:26"},{"arguments":[{"name":"value0","nativeSrc":"13966:6:26","nodeType":"YulIdentifier","src":"13966:6:26"},{"name":"_1","nativeSrc":"13974:2:26","nodeType":"YulIdentifier","src":"13974:2:26"}],"functionName":{"name":"and","nativeSrc":"13962:3:26","nodeType":"YulIdentifier","src":"13962:3:26"},"nativeSrc":"13962:15:26","nodeType":"YulFunctionCall","src":"13962:15:26"}],"functionName":{"name":"mstore","nativeSrc":"13944:6:26","nodeType":"YulIdentifier","src":"13944:6:26"},"nativeSrc":"13944:34:26","nodeType":"YulFunctionCall","src":"13944:34:26"},"nativeSrc":"13944:34:26","nodeType":"YulExpressionStatement","src":"13944:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13998:9:26","nodeType":"YulIdentifier","src":"13998:9:26"},{"kind":"number","nativeSrc":"14009:2:26","nodeType":"YulLiteral","src":"14009:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13994:3:26","nodeType":"YulIdentifier","src":"13994:3:26"},"nativeSrc":"13994:18:26","nodeType":"YulFunctionCall","src":"13994:18:26"},{"arguments":[{"name":"value1","nativeSrc":"14018:6:26","nodeType":"YulIdentifier","src":"14018:6:26"},{"name":"_1","nativeSrc":"14026:2:26","nodeType":"YulIdentifier","src":"14026:2:26"}],"functionName":{"name":"and","nativeSrc":"14014:3:26","nodeType":"YulIdentifier","src":"14014:3:26"},"nativeSrc":"14014:15:26","nodeType":"YulFunctionCall","src":"14014:15:26"}],"functionName":{"name":"mstore","nativeSrc":"13987:6:26","nodeType":"YulIdentifier","src":"13987:6:26"},"nativeSrc":"13987:43:26","nodeType":"YulFunctionCall","src":"13987:43:26"},"nativeSrc":"13987:43:26","nodeType":"YulExpressionStatement","src":"13987:43:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14050:9:26","nodeType":"YulIdentifier","src":"14050:9:26"},{"kind":"number","nativeSrc":"14061:2:26","nodeType":"YulLiteral","src":"14061:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14046:3:26","nodeType":"YulIdentifier","src":"14046:3:26"},"nativeSrc":"14046:18:26","nodeType":"YulFunctionCall","src":"14046:18:26"},{"name":"value2","nativeSrc":"14066:6:26","nodeType":"YulIdentifier","src":"14066:6:26"}],"functionName":{"name":"mstore","nativeSrc":"14039:6:26","nodeType":"YulIdentifier","src":"14039:6:26"},"nativeSrc":"14039:34:26","nodeType":"YulFunctionCall","src":"14039:34:26"},"nativeSrc":"14039:34:26","nodeType":"YulExpressionStatement","src":"14039:34:26"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"13681:398:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13791:9:26","nodeType":"YulTypedName","src":"13791:9:26","type":""},{"name":"value2","nativeSrc":"13802:6:26","nodeType":"YulTypedName","src":"13802:6:26","type":""},{"name":"value1","nativeSrc":"13810:6:26","nodeType":"YulTypedName","src":"13810:6:26","type":""},{"name":"value0","nativeSrc":"13818:6:26","nodeType":"YulTypedName","src":"13818:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13829:4:26","nodeType":"YulTypedName","src":"13829:4:26","type":""}],"src":"13681:398:26"},{"body":{"nativeSrc":"14162:199:26","nodeType":"YulBlock","src":"14162:199:26","statements":[{"body":{"nativeSrc":"14208:16:26","nodeType":"YulBlock","src":"14208:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14217:1:26","nodeType":"YulLiteral","src":"14217:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"14220:1:26","nodeType":"YulLiteral","src":"14220:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"14210:6:26","nodeType":"YulIdentifier","src":"14210:6:26"},"nativeSrc":"14210:12:26","nodeType":"YulFunctionCall","src":"14210:12:26"},"nativeSrc":"14210:12:26","nodeType":"YulExpressionStatement","src":"14210:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"14183:7:26","nodeType":"YulIdentifier","src":"14183:7:26"},{"name":"headStart","nativeSrc":"14192:9:26","nodeType":"YulIdentifier","src":"14192:9:26"}],"functionName":{"name":"sub","nativeSrc":"14179:3:26","nodeType":"YulIdentifier","src":"14179:3:26"},"nativeSrc":"14179:23:26","nodeType":"YulFunctionCall","src":"14179:23:26"},{"kind":"number","nativeSrc":"14204:2:26","nodeType":"YulLiteral","src":"14204:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"14175:3:26","nodeType":"YulIdentifier","src":"14175:3:26"},"nativeSrc":"14175:32:26","nodeType":"YulFunctionCall","src":"14175:32:26"},"nativeSrc":"14172:52:26","nodeType":"YulIf","src":"14172:52:26"},{"nativeSrc":"14233:29:26","nodeType":"YulVariableDeclaration","src":"14233:29:26","value":{"arguments":[{"name":"headStart","nativeSrc":"14252:9:26","nodeType":"YulIdentifier","src":"14252:9:26"}],"functionName":{"name":"mload","nativeSrc":"14246:5:26","nodeType":"YulIdentifier","src":"14246:5:26"},"nativeSrc":"14246:16:26","nodeType":"YulFunctionCall","src":"14246:16:26"},"variables":[{"name":"value","nativeSrc":"14237:5:26","nodeType":"YulTypedName","src":"14237:5:26","type":""}]},{"body":{"nativeSrc":"14315:16:26","nodeType":"YulBlock","src":"14315:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14324:1:26","nodeType":"YulLiteral","src":"14324:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"14327:1:26","nodeType":"YulLiteral","src":"14327:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"14317:6:26","nodeType":"YulIdentifier","src":"14317:6:26"},"nativeSrc":"14317:12:26","nodeType":"YulFunctionCall","src":"14317:12:26"},"nativeSrc":"14317:12:26","nodeType":"YulExpressionStatement","src":"14317:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"14284:5:26","nodeType":"YulIdentifier","src":"14284:5:26"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"14305:5:26","nodeType":"YulIdentifier","src":"14305:5:26"}],"functionName":{"name":"iszero","nativeSrc":"14298:6:26","nodeType":"YulIdentifier","src":"14298:6:26"},"nativeSrc":"14298:13:26","nodeType":"YulFunctionCall","src":"14298:13:26"}],"functionName":{"name":"iszero","nativeSrc":"14291:6:26","nodeType":"YulIdentifier","src":"14291:6:26"},"nativeSrc":"14291:21:26","nodeType":"YulFunctionCall","src":"14291:21:26"}],"functionName":{"name":"eq","nativeSrc":"14281:2:26","nodeType":"YulIdentifier","src":"14281:2:26"},"nativeSrc":"14281:32:26","nodeType":"YulFunctionCall","src":"14281:32:26"}],"functionName":{"name":"iszero","nativeSrc":"14274:6:26","nodeType":"YulIdentifier","src":"14274:6:26"},"nativeSrc":"14274:40:26","nodeType":"YulFunctionCall","src":"14274:40:26"},"nativeSrc":"14271:60:26","nodeType":"YulIf","src":"14271:60:26"},{"nativeSrc":"14340:15:26","nodeType":"YulAssignment","src":"14340:15:26","value":{"name":"value","nativeSrc":"14350:5:26","nodeType":"YulIdentifier","src":"14350:5:26"},"variableNames":[{"name":"value0","nativeSrc":"14340:6:26","nodeType":"YulIdentifier","src":"14340:6:26"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"14084:277:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14128:9:26","nodeType":"YulTypedName","src":"14128:9:26","type":""},{"name":"dataEnd","nativeSrc":"14139:7:26","nodeType":"YulTypedName","src":"14139:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"14151:6:26","nodeType":"YulTypedName","src":"14151:6:26","type":""}],"src":"14084:277:26"},{"body":{"nativeSrc":"14495:198:26","nodeType":"YulBlock","src":"14495:198:26","statements":[{"nativeSrc":"14505:26:26","nodeType":"YulAssignment","src":"14505:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"14517:9:26","nodeType":"YulIdentifier","src":"14517:9:26"},{"kind":"number","nativeSrc":"14528:2:26","nodeType":"YulLiteral","src":"14528:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14513:3:26","nodeType":"YulIdentifier","src":"14513:3:26"},"nativeSrc":"14513:18:26","nodeType":"YulFunctionCall","src":"14513:18:26"},"variableNames":[{"name":"tail","nativeSrc":"14505:4:26","nodeType":"YulIdentifier","src":"14505:4:26"}]},{"nativeSrc":"14540:52:26","nodeType":"YulVariableDeclaration","src":"14540:52:26","value":{"kind":"number","nativeSrc":"14550:42:26","nodeType":"YulLiteral","src":"14550:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"14544:2:26","nodeType":"YulTypedName","src":"14544:2:26","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14608:9:26","nodeType":"YulIdentifier","src":"14608:9:26"},{"arguments":[{"name":"value0","nativeSrc":"14623:6:26","nodeType":"YulIdentifier","src":"14623:6:26"},{"name":"_1","nativeSrc":"14631:2:26","nodeType":"YulIdentifier","src":"14631:2:26"}],"functionName":{"name":"and","nativeSrc":"14619:3:26","nodeType":"YulIdentifier","src":"14619:3:26"},"nativeSrc":"14619:15:26","nodeType":"YulFunctionCall","src":"14619:15:26"}],"functionName":{"name":"mstore","nativeSrc":"14601:6:26","nodeType":"YulIdentifier","src":"14601:6:26"},"nativeSrc":"14601:34:26","nodeType":"YulFunctionCall","src":"14601:34:26"},"nativeSrc":"14601:34:26","nodeType":"YulExpressionStatement","src":"14601:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14655:9:26","nodeType":"YulIdentifier","src":"14655:9:26"},{"kind":"number","nativeSrc":"14666:2:26","nodeType":"YulLiteral","src":"14666:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14651:3:26","nodeType":"YulIdentifier","src":"14651:3:26"},"nativeSrc":"14651:18:26","nodeType":"YulFunctionCall","src":"14651:18:26"},{"arguments":[{"name":"value1","nativeSrc":"14675:6:26","nodeType":"YulIdentifier","src":"14675:6:26"},{"name":"_1","nativeSrc":"14683:2:26","nodeType":"YulIdentifier","src":"14683:2:26"}],"functionName":{"name":"and","nativeSrc":"14671:3:26","nodeType":"YulIdentifier","src":"14671:3:26"},"nativeSrc":"14671:15:26","nodeType":"YulFunctionCall","src":"14671:15:26"}],"functionName":{"name":"mstore","nativeSrc":"14644:6:26","nodeType":"YulIdentifier","src":"14644:6:26"},"nativeSrc":"14644:43:26","nodeType":"YulFunctionCall","src":"14644:43:26"},"nativeSrc":"14644:43:26","nodeType":"YulExpressionStatement","src":"14644:43:26"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"14366:327:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14456:9:26","nodeType":"YulTypedName","src":"14456:9:26","type":""},{"name":"value1","nativeSrc":"14467:6:26","nodeType":"YulTypedName","src":"14467:6:26","type":""},{"name":"value0","nativeSrc":"14475:6:26","nodeType":"YulTypedName","src":"14475:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14486:4:26","nodeType":"YulTypedName","src":"14486:4:26","type":""}],"src":"14366:327:26"},{"body":{"nativeSrc":"14872:224:26","nodeType":"YulBlock","src":"14872:224:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14889:9:26","nodeType":"YulIdentifier","src":"14889:9:26"},{"kind":"number","nativeSrc":"14900:2:26","nodeType":"YulLiteral","src":"14900:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"14882:6:26","nodeType":"YulIdentifier","src":"14882:6:26"},"nativeSrc":"14882:21:26","nodeType":"YulFunctionCall","src":"14882:21:26"},"nativeSrc":"14882:21:26","nodeType":"YulExpressionStatement","src":"14882:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14923:9:26","nodeType":"YulIdentifier","src":"14923:9:26"},{"kind":"number","nativeSrc":"14934:2:26","nodeType":"YulLiteral","src":"14934:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14919:3:26","nodeType":"YulIdentifier","src":"14919:3:26"},"nativeSrc":"14919:18:26","nodeType":"YulFunctionCall","src":"14919:18:26"},{"kind":"number","nativeSrc":"14939:2:26","nodeType":"YulLiteral","src":"14939:2:26","type":"","value":"34"}],"functionName":{"name":"mstore","nativeSrc":"14912:6:26","nodeType":"YulIdentifier","src":"14912:6:26"},"nativeSrc":"14912:30:26","nodeType":"YulFunctionCall","src":"14912:30:26"},"nativeSrc":"14912:30:26","nodeType":"YulExpressionStatement","src":"14912:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14962:9:26","nodeType":"YulIdentifier","src":"14962:9:26"},{"kind":"number","nativeSrc":"14973:2:26","nodeType":"YulLiteral","src":"14973:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14958:3:26","nodeType":"YulIdentifier","src":"14958:3:26"},"nativeSrc":"14958:18:26","nodeType":"YulFunctionCall","src":"14958:18:26"},{"hexValue":"546f74616c2042414c554e4920737570706c792063616e6e6f74206265207a65","kind":"string","nativeSrc":"14978:34:26","nodeType":"YulLiteral","src":"14978:34:26","type":"","value":"Total BALUNI supply cannot be ze"}],"functionName":{"name":"mstore","nativeSrc":"14951:6:26","nodeType":"YulIdentifier","src":"14951:6:26"},"nativeSrc":"14951:62:26","nodeType":"YulFunctionCall","src":"14951:62:26"},"nativeSrc":"14951:62:26","nodeType":"YulExpressionStatement","src":"14951:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15033:9:26","nodeType":"YulIdentifier","src":"15033:9:26"},{"kind":"number","nativeSrc":"15044:2:26","nodeType":"YulLiteral","src":"15044:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15029:3:26","nodeType":"YulIdentifier","src":"15029:3:26"},"nativeSrc":"15029:18:26","nodeType":"YulFunctionCall","src":"15029:18:26"},{"hexValue":"726f","kind":"string","nativeSrc":"15049:4:26","nodeType":"YulLiteral","src":"15049:4:26","type":"","value":"ro"}],"functionName":{"name":"mstore","nativeSrc":"15022:6:26","nodeType":"YulIdentifier","src":"15022:6:26"},"nativeSrc":"15022:32:26","nodeType":"YulFunctionCall","src":"15022:32:26"},"nativeSrc":"15022:32:26","nodeType":"YulExpressionStatement","src":"15022:32:26"},{"nativeSrc":"15063:27:26","nodeType":"YulAssignment","src":"15063:27:26","value":{"arguments":[{"name":"headStart","nativeSrc":"15075:9:26","nodeType":"YulIdentifier","src":"15075:9:26"},{"kind":"number","nativeSrc":"15086:3:26","nodeType":"YulLiteral","src":"15086:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"15071:3:26","nodeType":"YulIdentifier","src":"15071:3:26"},"nativeSrc":"15071:19:26","nodeType":"YulFunctionCall","src":"15071:19:26"},"variableNames":[{"name":"tail","nativeSrc":"15063:4:26","nodeType":"YulIdentifier","src":"15063:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_1ddcc9d8f2a6704234c103a6ef7b2e41a8659f7661115b0460a24c8abe542fd0__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14698:398:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14849:9:26","nodeType":"YulTypedName","src":"14849:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14863:4:26","nodeType":"YulTypedName","src":"14863:4:26","type":""}],"src":"14698:398:26"},{"body":{"nativeSrc":"15275:178:26","nodeType":"YulBlock","src":"15275:178:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15292:9:26","nodeType":"YulIdentifier","src":"15292:9:26"},{"kind":"number","nativeSrc":"15303:2:26","nodeType":"YulLiteral","src":"15303:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"15285:6:26","nodeType":"YulIdentifier","src":"15285:6:26"},"nativeSrc":"15285:21:26","nodeType":"YulFunctionCall","src":"15285:21:26"},"nativeSrc":"15285:21:26","nodeType":"YulExpressionStatement","src":"15285:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15326:9:26","nodeType":"YulIdentifier","src":"15326:9:26"},{"kind":"number","nativeSrc":"15337:2:26","nodeType":"YulLiteral","src":"15337:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15322:3:26","nodeType":"YulIdentifier","src":"15322:3:26"},"nativeSrc":"15322:18:26","nodeType":"YulFunctionCall","src":"15322:18:26"},{"kind":"number","nativeSrc":"15342:2:26","nodeType":"YulLiteral","src":"15342:2:26","type":"","value":"28"}],"functionName":{"name":"mstore","nativeSrc":"15315:6:26","nodeType":"YulIdentifier","src":"15315:6:26"},"nativeSrc":"15315:30:26","nodeType":"YulFunctionCall","src":"15315:30:26"},"nativeSrc":"15315:30:26","nodeType":"YulExpressionStatement","src":"15315:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15365:9:26","nodeType":"YulIdentifier","src":"15365:9:26"},{"kind":"number","nativeSrc":"15376:2:26","nodeType":"YulLiteral","src":"15376:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15361:3:26","nodeType":"YulIdentifier","src":"15361:3:26"},"nativeSrc":"15361:18:26","nodeType":"YulFunctionCall","src":"15361:18:26"},{"hexValue":"555344432062616c616e636520697320696e73756666696369656e74","kind":"string","nativeSrc":"15381:30:26","nodeType":"YulLiteral","src":"15381:30:26","type":"","value":"USDC balance is insufficient"}],"functionName":{"name":"mstore","nativeSrc":"15354:6:26","nodeType":"YulIdentifier","src":"15354:6:26"},"nativeSrc":"15354:58:26","nodeType":"YulFunctionCall","src":"15354:58:26"},"nativeSrc":"15354:58:26","nodeType":"YulExpressionStatement","src":"15354:58:26"},{"nativeSrc":"15421:26:26","nodeType":"YulAssignment","src":"15421:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"15433:9:26","nodeType":"YulIdentifier","src":"15433:9:26"},{"kind":"number","nativeSrc":"15444:2:26","nodeType":"YulLiteral","src":"15444:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15429:3:26","nodeType":"YulIdentifier","src":"15429:3:26"},"nativeSrc":"15429:18:26","nodeType":"YulFunctionCall","src":"15429:18:26"},"variableNames":[{"name":"tail","nativeSrc":"15421:4:26","nodeType":"YulIdentifier","src":"15421:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_bad2ba4e17745a4d4fd221dac6ffa18dd2cdb7d74e252bb930552ebc273a413c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15101:352:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15252:9:26","nodeType":"YulTypedName","src":"15252:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15266:4:26","nodeType":"YulTypedName","src":"15266:4:26","type":""}],"src":"15101:352:26"},{"body":{"nativeSrc":"15632:175:26","nodeType":"YulBlock","src":"15632:175:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15649:9:26","nodeType":"YulIdentifier","src":"15649:9:26"},{"kind":"number","nativeSrc":"15660:2:26","nodeType":"YulLiteral","src":"15660:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"15642:6:26","nodeType":"YulIdentifier","src":"15642:6:26"},"nativeSrc":"15642:21:26","nodeType":"YulFunctionCall","src":"15642:21:26"},"nativeSrc":"15642:21:26","nodeType":"YulExpressionStatement","src":"15642:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15683:9:26","nodeType":"YulIdentifier","src":"15683:9:26"},{"kind":"number","nativeSrc":"15694:2:26","nodeType":"YulLiteral","src":"15694:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15679:3:26","nodeType":"YulIdentifier","src":"15679:3:26"},"nativeSrc":"15679:18:26","nodeType":"YulFunctionCall","src":"15679:18:26"},{"kind":"number","nativeSrc":"15699:2:26","nodeType":"YulLiteral","src":"15699:2:26","type":"","value":"25"}],"functionName":{"name":"mstore","nativeSrc":"15672:6:26","nodeType":"YulIdentifier","src":"15672:6:26"},"nativeSrc":"15672:30:26","nodeType":"YulFunctionCall","src":"15672:30:26"},"nativeSrc":"15672:30:26","nodeType":"YulExpressionStatement","src":"15672:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15722:9:26","nodeType":"YulIdentifier","src":"15722:9:26"},{"kind":"number","nativeSrc":"15733:2:26","nodeType":"YulLiteral","src":"15733:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15718:3:26","nodeType":"YulIdentifier","src":"15718:3:26"},"nativeSrc":"15718:18:26","nodeType":"YulFunctionCall","src":"15718:18:26"},{"hexValue":"436865636b2074686520746f6b656e20616c6c6f77616e6365","kind":"string","nativeSrc":"15738:27:26","nodeType":"YulLiteral","src":"15738:27:26","type":"","value":"Check the token allowance"}],"functionName":{"name":"mstore","nativeSrc":"15711:6:26","nodeType":"YulIdentifier","src":"15711:6:26"},"nativeSrc":"15711:55:26","nodeType":"YulFunctionCall","src":"15711:55:26"},"nativeSrc":"15711:55:26","nodeType":"YulExpressionStatement","src":"15711:55:26"},{"nativeSrc":"15775:26:26","nodeType":"YulAssignment","src":"15775:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"15787:9:26","nodeType":"YulIdentifier","src":"15787:9:26"},{"kind":"number","nativeSrc":"15798:2:26","nodeType":"YulLiteral","src":"15798:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15783:3:26","nodeType":"YulIdentifier","src":"15783:3:26"},"nativeSrc":"15783:18:26","nodeType":"YulFunctionCall","src":"15783:18:26"},"variableNames":[{"name":"tail","nativeSrc":"15775:4:26","nodeType":"YulIdentifier","src":"15775:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15458:349:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15609:9:26","nodeType":"YulTypedName","src":"15609:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15623:4:26","nodeType":"YulTypedName","src":"15623:4:26","type":""}],"src":"15458:349:26"},{"body":{"nativeSrc":"15941:168:26","nodeType":"YulBlock","src":"15941:168:26","statements":[{"nativeSrc":"15951:26:26","nodeType":"YulAssignment","src":"15951:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"15963:9:26","nodeType":"YulIdentifier","src":"15963:9:26"},{"kind":"number","nativeSrc":"15974:2:26","nodeType":"YulLiteral","src":"15974:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15959:3:26","nodeType":"YulIdentifier","src":"15959:3:26"},"nativeSrc":"15959:18:26","nodeType":"YulFunctionCall","src":"15959:18:26"},"variableNames":[{"name":"tail","nativeSrc":"15951:4:26","nodeType":"YulIdentifier","src":"15951:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15993:9:26","nodeType":"YulIdentifier","src":"15993:9:26"},{"arguments":[{"name":"value0","nativeSrc":"16008:6:26","nodeType":"YulIdentifier","src":"16008:6:26"},{"kind":"number","nativeSrc":"16016:42:26","nodeType":"YulLiteral","src":"16016:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"16004:3:26","nodeType":"YulIdentifier","src":"16004:3:26"},"nativeSrc":"16004:55:26","nodeType":"YulFunctionCall","src":"16004:55:26"}],"functionName":{"name":"mstore","nativeSrc":"15986:6:26","nodeType":"YulIdentifier","src":"15986:6:26"},"nativeSrc":"15986:74:26","nodeType":"YulFunctionCall","src":"15986:74:26"},"nativeSrc":"15986:74:26","nodeType":"YulExpressionStatement","src":"15986:74:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16080:9:26","nodeType":"YulIdentifier","src":"16080:9:26"},{"kind":"number","nativeSrc":"16091:2:26","nodeType":"YulLiteral","src":"16091:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16076:3:26","nodeType":"YulIdentifier","src":"16076:3:26"},"nativeSrc":"16076:18:26","nodeType":"YulFunctionCall","src":"16076:18:26"},{"name":"value1","nativeSrc":"16096:6:26","nodeType":"YulIdentifier","src":"16096:6:26"}],"functionName":{"name":"mstore","nativeSrc":"16069:6:26","nodeType":"YulIdentifier","src":"16069:6:26"},"nativeSrc":"16069:34:26","nodeType":"YulFunctionCall","src":"16069:34:26"},"nativeSrc":"16069:34:26","nodeType":"YulExpressionStatement","src":"16069:34:26"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"15812:297:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15902:9:26","nodeType":"YulTypedName","src":"15902:9:26","type":""},{"name":"value1","nativeSrc":"15913:6:26","nodeType":"YulTypedName","src":"15913:6:26","type":""},{"name":"value0","nativeSrc":"15921:6:26","nodeType":"YulTypedName","src":"15921:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15932:4:26","nodeType":"YulTypedName","src":"15932:4:26","type":""}],"src":"15812:297:26"},{"body":{"nativeSrc":"16288:224:26","nodeType":"YulBlock","src":"16288:224:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"16305:9:26","nodeType":"YulIdentifier","src":"16305:9:26"},{"kind":"number","nativeSrc":"16316:2:26","nodeType":"YulLiteral","src":"16316:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"16298:6:26","nodeType":"YulIdentifier","src":"16298:6:26"},"nativeSrc":"16298:21:26","nodeType":"YulFunctionCall","src":"16298:21:26"},"nativeSrc":"16298:21:26","nodeType":"YulExpressionStatement","src":"16298:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16339:9:26","nodeType":"YulIdentifier","src":"16339:9:26"},{"kind":"number","nativeSrc":"16350:2:26","nodeType":"YulLiteral","src":"16350:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16335:3:26","nodeType":"YulIdentifier","src":"16335:3:26"},"nativeSrc":"16335:18:26","nodeType":"YulFunctionCall","src":"16335:18:26"},{"kind":"number","nativeSrc":"16355:2:26","nodeType":"YulLiteral","src":"16355:2:26","type":"","value":"34"}],"functionName":{"name":"mstore","nativeSrc":"16328:6:26","nodeType":"YulIdentifier","src":"16328:6:26"},"nativeSrc":"16328:30:26","nodeType":"YulFunctionCall","src":"16328:30:26"},"nativeSrc":"16328:30:26","nodeType":"YulExpressionStatement","src":"16328:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16378:9:26","nodeType":"YulIdentifier","src":"16378:9:26"},{"kind":"number","nativeSrc":"16389:2:26","nodeType":"YulLiteral","src":"16389:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16374:3:26","nodeType":"YulIdentifier","src":"16374:3:26"},"nativeSrc":"16374:18:26","nodeType":"YulFunctionCall","src":"16374:18:26"},{"hexValue":"4275726e20616d6f756e74206d7573742062652067726561746572207468616e","kind":"string","nativeSrc":"16394:34:26","nodeType":"YulLiteral","src":"16394:34:26","type":"","value":"Burn amount must be greater than"}],"functionName":{"name":"mstore","nativeSrc":"16367:6:26","nodeType":"YulIdentifier","src":"16367:6:26"},"nativeSrc":"16367:62:26","nodeType":"YulFunctionCall","src":"16367:62:26"},"nativeSrc":"16367:62:26","nodeType":"YulExpressionStatement","src":"16367:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16449:9:26","nodeType":"YulIdentifier","src":"16449:9:26"},{"kind":"number","nativeSrc":"16460:2:26","nodeType":"YulLiteral","src":"16460:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16445:3:26","nodeType":"YulIdentifier","src":"16445:3:26"},"nativeSrc":"16445:18:26","nodeType":"YulFunctionCall","src":"16445:18:26"},{"hexValue":"2030","kind":"string","nativeSrc":"16465:4:26","nodeType":"YulLiteral","src":"16465:4:26","type":"","value":" 0"}],"functionName":{"name":"mstore","nativeSrc":"16438:6:26","nodeType":"YulIdentifier","src":"16438:6:26"},"nativeSrc":"16438:32:26","nodeType":"YulFunctionCall","src":"16438:32:26"},"nativeSrc":"16438:32:26","nodeType":"YulExpressionStatement","src":"16438:32:26"},{"nativeSrc":"16479:27:26","nodeType":"YulAssignment","src":"16479:27:26","value":{"arguments":[{"name":"headStart","nativeSrc":"16491:9:26","nodeType":"YulIdentifier","src":"16491:9:26"},{"kind":"number","nativeSrc":"16502:3:26","nodeType":"YulLiteral","src":"16502:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"16487:3:26","nodeType":"YulIdentifier","src":"16487:3:26"},"nativeSrc":"16487:19:26","nodeType":"YulFunctionCall","src":"16487:19:26"},"variableNames":[{"name":"tail","nativeSrc":"16479:4:26","nodeType":"YulIdentifier","src":"16479:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_05dde7ba458fa57c690848c203ec960214f35b18f13e857028bd34ad518b5575__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16114:398:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16265:9:26","nodeType":"YulTypedName","src":"16265:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16279:4:26","nodeType":"YulTypedName","src":"16279:4:26","type":""}],"src":"16114:398:26"},{"body":{"nativeSrc":"16691:166:26","nodeType":"YulBlock","src":"16691:166:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"16708:9:26","nodeType":"YulIdentifier","src":"16708:9:26"},{"kind":"number","nativeSrc":"16719:2:26","nodeType":"YulLiteral","src":"16719:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"16701:6:26","nodeType":"YulIdentifier","src":"16701:6:26"},"nativeSrc":"16701:21:26","nodeType":"YulFunctionCall","src":"16701:21:26"},"nativeSrc":"16701:21:26","nodeType":"YulExpressionStatement","src":"16701:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16742:9:26","nodeType":"YulIdentifier","src":"16742:9:26"},{"kind":"number","nativeSrc":"16753:2:26","nodeType":"YulLiteral","src":"16753:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16738:3:26","nodeType":"YulIdentifier","src":"16738:3:26"},"nativeSrc":"16738:18:26","nodeType":"YulFunctionCall","src":"16738:18:26"},{"kind":"number","nativeSrc":"16758:2:26","nodeType":"YulLiteral","src":"16758:2:26","type":"","value":"16"}],"functionName":{"name":"mstore","nativeSrc":"16731:6:26","nodeType":"YulIdentifier","src":"16731:6:26"},"nativeSrc":"16731:30:26","nodeType":"YulFunctionCall","src":"16731:30:26"},"nativeSrc":"16731:30:26","nodeType":"YulExpressionStatement","src":"16731:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16781:9:26","nodeType":"YulIdentifier","src":"16781:9:26"},{"kind":"number","nativeSrc":"16792:2:26","nodeType":"YulLiteral","src":"16792:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16777:3:26","nodeType":"YulIdentifier","src":"16777:3:26"},"nativeSrc":"16777:18:26","nodeType":"YulFunctionCall","src":"16777:18:26"},{"hexValue":"5472656173757279206e6f7420736574","kind":"string","nativeSrc":"16797:18:26","nodeType":"YulLiteral","src":"16797:18:26","type":"","value":"Treasury not set"}],"functionName":{"name":"mstore","nativeSrc":"16770:6:26","nodeType":"YulIdentifier","src":"16770:6:26"},"nativeSrc":"16770:46:26","nodeType":"YulFunctionCall","src":"16770:46:26"},"nativeSrc":"16770:46:26","nodeType":"YulExpressionStatement","src":"16770:46:26"},{"nativeSrc":"16825:26:26","nodeType":"YulAssignment","src":"16825:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"16837:9:26","nodeType":"YulIdentifier","src":"16837:9:26"},{"kind":"number","nativeSrc":"16848:2:26","nodeType":"YulLiteral","src":"16848:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16833:3:26","nodeType":"YulIdentifier","src":"16833:3:26"},"nativeSrc":"16833:18:26","nodeType":"YulFunctionCall","src":"16833:18:26"},"variableNames":[{"name":"tail","nativeSrc":"16825:4:26","nodeType":"YulIdentifier","src":"16825:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_19ae815948d188a4017d21662744b2e39ca52dd9e0c04ca7540cb50ca889bf62__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16517:340:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16668:9:26","nodeType":"YulTypedName","src":"16668:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16682:4:26","nodeType":"YulTypedName","src":"16682:4:26","type":""}],"src":"16517:340:26"},{"body":{"nativeSrc":"17036:166:26","nodeType":"YulBlock","src":"17036:166:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17053:9:26","nodeType":"YulIdentifier","src":"17053:9:26"},{"kind":"number","nativeSrc":"17064:2:26","nodeType":"YulLiteral","src":"17064:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"17046:6:26","nodeType":"YulIdentifier","src":"17046:6:26"},"nativeSrc":"17046:21:26","nodeType":"YulFunctionCall","src":"17046:21:26"},"nativeSrc":"17046:21:26","nodeType":"YulExpressionStatement","src":"17046:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17087:9:26","nodeType":"YulIdentifier","src":"17087:9:26"},{"kind":"number","nativeSrc":"17098:2:26","nodeType":"YulLiteral","src":"17098:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17083:3:26","nodeType":"YulIdentifier","src":"17083:3:26"},"nativeSrc":"17083:18:26","nodeType":"YulFunctionCall","src":"17083:18:26"},{"kind":"number","nativeSrc":"17103:2:26","nodeType":"YulLiteral","src":"17103:2:26","type":"","value":"16"}],"functionName":{"name":"mstore","nativeSrc":"17076:6:26","nodeType":"YulIdentifier","src":"17076:6:26"},"nativeSrc":"17076:30:26","nodeType":"YulFunctionCall","src":"17076:30:26"},"nativeSrc":"17076:30:26","nodeType":"YulExpressionStatement","src":"17076:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17126:9:26","nodeType":"YulIdentifier","src":"17126:9:26"},{"kind":"number","nativeSrc":"17137:2:26","nodeType":"YulLiteral","src":"17137:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17122:3:26","nodeType":"YulIdentifier","src":"17122:3:26"},"nativeSrc":"17122:18:26","nodeType":"YulFunctionCall","src":"17122:18:26"},{"hexValue":"496e73756666696369656e742042414c","kind":"string","nativeSrc":"17142:18:26","nodeType":"YulLiteral","src":"17142:18:26","type":"","value":"Insufficient BAL"}],"functionName":{"name":"mstore","nativeSrc":"17115:6:26","nodeType":"YulIdentifier","src":"17115:6:26"},"nativeSrc":"17115:46:26","nodeType":"YulFunctionCall","src":"17115:46:26"},"nativeSrc":"17115:46:26","nodeType":"YulExpressionStatement","src":"17115:46:26"},{"nativeSrc":"17170:26:26","nodeType":"YulAssignment","src":"17170:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"17182:9:26","nodeType":"YulIdentifier","src":"17182:9:26"},{"kind":"number","nativeSrc":"17193:2:26","nodeType":"YulLiteral","src":"17193:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17178:3:26","nodeType":"YulIdentifier","src":"17178:3:26"},"nativeSrc":"17178:18:26","nodeType":"YulFunctionCall","src":"17178:18:26"},"variableNames":[{"name":"tail","nativeSrc":"17170:4:26","nodeType":"YulIdentifier","src":"17170:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_3802b739a1b061f89edd5fd7a12d8792298aa749cedf62bac9eac44415882c7f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16862:340:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17013:9:26","nodeType":"YulTypedName","src":"17013:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17027:4:26","nodeType":"YulTypedName","src":"17027:4:26","type":""}],"src":"16862:340:26"},{"body":{"nativeSrc":"17381:171:26","nodeType":"YulBlock","src":"17381:171:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17398:9:26","nodeType":"YulIdentifier","src":"17398:9:26"},{"kind":"number","nativeSrc":"17409:2:26","nodeType":"YulLiteral","src":"17409:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"17391:6:26","nodeType":"YulIdentifier","src":"17391:6:26"},"nativeSrc":"17391:21:26","nodeType":"YulFunctionCall","src":"17391:21:26"},"nativeSrc":"17391:21:26","nodeType":"YulExpressionStatement","src":"17391:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17432:9:26","nodeType":"YulIdentifier","src":"17432:9:26"},{"kind":"number","nativeSrc":"17443:2:26","nodeType":"YulLiteral","src":"17443:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17428:3:26","nodeType":"YulIdentifier","src":"17428:3:26"},"nativeSrc":"17428:18:26","nodeType":"YulFunctionCall","src":"17428:18:26"},{"kind":"number","nativeSrc":"17448:2:26","nodeType":"YulLiteral","src":"17448:2:26","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"17421:6:26","nodeType":"YulIdentifier","src":"17421:6:26"},"nativeSrc":"17421:30:26","nodeType":"YulFunctionCall","src":"17421:30:26"},"nativeSrc":"17421:30:26","nodeType":"YulExpressionStatement","src":"17421:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17471:9:26","nodeType":"YulIdentifier","src":"17471:9:26"},{"kind":"number","nativeSrc":"17482:2:26","nodeType":"YulLiteral","src":"17482:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17467:3:26","nodeType":"YulIdentifier","src":"17467:3:26"},"nativeSrc":"17467:18:26","nodeType":"YulFunctionCall","src":"17467:18:26"},{"hexValue":"4665652063616c63756c6174696f6e206572726f72","kind":"string","nativeSrc":"17487:23:26","nodeType":"YulLiteral","src":"17487:23:26","type":"","value":"Fee calculation error"}],"functionName":{"name":"mstore","nativeSrc":"17460:6:26","nodeType":"YulIdentifier","src":"17460:6:26"},"nativeSrc":"17460:51:26","nodeType":"YulFunctionCall","src":"17460:51:26"},"nativeSrc":"17460:51:26","nodeType":"YulExpressionStatement","src":"17460:51:26"},{"nativeSrc":"17520:26:26","nodeType":"YulAssignment","src":"17520:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"17532:9:26","nodeType":"YulIdentifier","src":"17532:9:26"},{"kind":"number","nativeSrc":"17543:2:26","nodeType":"YulLiteral","src":"17543:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17528:3:26","nodeType":"YulIdentifier","src":"17528:3:26"},"nativeSrc":"17528:18:26","nodeType":"YulFunctionCall","src":"17528:18:26"},"variableNames":[{"name":"tail","nativeSrc":"17520:4:26","nodeType":"YulIdentifier","src":"17520:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_2d5dedc64e58ec2dfd9d57a4a8363c0fd7692430e9d02e08dba505855fefef17__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17207:345:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17358:9:26","nodeType":"YulTypedName","src":"17358:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17372:4:26","nodeType":"YulTypedName","src":"17372:4:26","type":""}],"src":"17207:345:26"},{"body":{"nativeSrc":"17606:79:26","nodeType":"YulBlock","src":"17606:79:26","statements":[{"nativeSrc":"17616:17:26","nodeType":"YulAssignment","src":"17616:17:26","value":{"arguments":[{"name":"x","nativeSrc":"17628:1:26","nodeType":"YulIdentifier","src":"17628:1:26"},{"name":"y","nativeSrc":"17631:1:26","nodeType":"YulIdentifier","src":"17631:1:26"}],"functionName":{"name":"sub","nativeSrc":"17624:3:26","nodeType":"YulIdentifier","src":"17624:3:26"},"nativeSrc":"17624:9:26","nodeType":"YulFunctionCall","src":"17624:9:26"},"variableNames":[{"name":"diff","nativeSrc":"17616:4:26","nodeType":"YulIdentifier","src":"17616:4:26"}]},{"body":{"nativeSrc":"17657:22:26","nodeType":"YulBlock","src":"17657:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"17659:16:26","nodeType":"YulIdentifier","src":"17659:16:26"},"nativeSrc":"17659:18:26","nodeType":"YulFunctionCall","src":"17659:18:26"},"nativeSrc":"17659:18:26","nodeType":"YulExpressionStatement","src":"17659:18:26"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"17648:4:26","nodeType":"YulIdentifier","src":"17648:4:26"},{"name":"x","nativeSrc":"17654:1:26","nodeType":"YulIdentifier","src":"17654:1:26"}],"functionName":{"name":"gt","nativeSrc":"17645:2:26","nodeType":"YulIdentifier","src":"17645:2:26"},"nativeSrc":"17645:11:26","nodeType":"YulFunctionCall","src":"17645:11:26"},"nativeSrc":"17642:37:26","nodeType":"YulIf","src":"17642:37:26"}]},"name":"checked_sub_t_uint256","nativeSrc":"17557:128:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"17588:1:26","nodeType":"YulTypedName","src":"17588:1:26","type":""},{"name":"y","nativeSrc":"17591:1:26","nodeType":"YulTypedName","src":"17591:1:26","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"17597:4:26","nodeType":"YulTypedName","src":"17597:4:26","type":""}],"src":"17557:128:26"},{"body":{"nativeSrc":"17864:171:26","nodeType":"YulBlock","src":"17864:171:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17881:9:26","nodeType":"YulIdentifier","src":"17881:9:26"},{"kind":"number","nativeSrc":"17892:2:26","nodeType":"YulLiteral","src":"17892:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"17874:6:26","nodeType":"YulIdentifier","src":"17874:6:26"},"nativeSrc":"17874:21:26","nodeType":"YulFunctionCall","src":"17874:21:26"},"nativeSrc":"17874:21:26","nodeType":"YulExpressionStatement","src":"17874:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17915:9:26","nodeType":"YulIdentifier","src":"17915:9:26"},{"kind":"number","nativeSrc":"17926:2:26","nodeType":"YulLiteral","src":"17926:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17911:3:26","nodeType":"YulIdentifier","src":"17911:3:26"},"nativeSrc":"17911:18:26","nodeType":"YulFunctionCall","src":"17911:18:26"},{"kind":"number","nativeSrc":"17931:2:26","nodeType":"YulLiteral","src":"17931:2:26","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"17904:6:26","nodeType":"YulIdentifier","src":"17904:6:26"},"nativeSrc":"17904:30:26","nodeType":"YulFunctionCall","src":"17904:30:26"},"nativeSrc":"17904:30:26","nodeType":"YulExpressionStatement","src":"17904:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17954:9:26","nodeType":"YulIdentifier","src":"17954:9:26"},{"kind":"number","nativeSrc":"17965:2:26","nodeType":"YulLiteral","src":"17965:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17950:3:26","nodeType":"YulIdentifier","src":"17950:3:26"},"nativeSrc":"17950:18:26","nodeType":"YulFunctionCall","src":"17950:18:26"},{"hexValue":"496e76616c696420746f6b656e2061646472657373","kind":"string","nativeSrc":"17970:23:26","nodeType":"YulLiteral","src":"17970:23:26","type":"","value":"Invalid token address"}],"functionName":{"name":"mstore","nativeSrc":"17943:6:26","nodeType":"YulIdentifier","src":"17943:6:26"},"nativeSrc":"17943:51:26","nodeType":"YulFunctionCall","src":"17943:51:26"},"nativeSrc":"17943:51:26","nodeType":"YulExpressionStatement","src":"17943:51:26"},{"nativeSrc":"18003:26:26","nodeType":"YulAssignment","src":"18003:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"18015:9:26","nodeType":"YulIdentifier","src":"18015:9:26"},{"kind":"number","nativeSrc":"18026:2:26","nodeType":"YulLiteral","src":"18026:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18011:3:26","nodeType":"YulIdentifier","src":"18011:3:26"},"nativeSrc":"18011:18:26","nodeType":"YulFunctionCall","src":"18011:18:26"},"variableNames":[{"name":"tail","nativeSrc":"18003:4:26","nodeType":"YulIdentifier","src":"18003:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17690:345:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17841:9:26","nodeType":"YulTypedName","src":"17841:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17855:4:26","nodeType":"YulTypedName","src":"17855:4:26","type":""}],"src":"17690:345:26"},{"body":{"nativeSrc":"18214:167:26","nodeType":"YulBlock","src":"18214:167:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18231:9:26","nodeType":"YulIdentifier","src":"18231:9:26"},{"kind":"number","nativeSrc":"18242:2:26","nodeType":"YulLiteral","src":"18242:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"18224:6:26","nodeType":"YulIdentifier","src":"18224:6:26"},"nativeSrc":"18224:21:26","nodeType":"YulFunctionCall","src":"18224:21:26"},"nativeSrc":"18224:21:26","nodeType":"YulExpressionStatement","src":"18224:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18265:9:26","nodeType":"YulIdentifier","src":"18265:9:26"},{"kind":"number","nativeSrc":"18276:2:26","nodeType":"YulLiteral","src":"18276:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18261:3:26","nodeType":"YulIdentifier","src":"18261:3:26"},"nativeSrc":"18261:18:26","nodeType":"YulFunctionCall","src":"18261:18:26"},{"kind":"number","nativeSrc":"18281:2:26","nodeType":"YulLiteral","src":"18281:2:26","type":"","value":"17"}],"functionName":{"name":"mstore","nativeSrc":"18254:6:26","nodeType":"YulIdentifier","src":"18254:6:26"},"nativeSrc":"18254:30:26","nodeType":"YulFunctionCall","src":"18254:30:26"},"nativeSrc":"18254:30:26","nodeType":"YulExpressionStatement","src":"18254:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18304:9:26","nodeType":"YulIdentifier","src":"18304:9:26"},{"kind":"number","nativeSrc":"18315:2:26","nodeType":"YulLiteral","src":"18315:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18300:3:26","nodeType":"YulIdentifier","src":"18300:3:26"},"nativeSrc":"18300:18:26","nodeType":"YulFunctionCall","src":"18300:18:26"},{"hexValue":"546f74616c20737570706c792069732030","kind":"string","nativeSrc":"18320:19:26","nodeType":"YulLiteral","src":"18320:19:26","type":"","value":"Total supply is 0"}],"functionName":{"name":"mstore","nativeSrc":"18293:6:26","nodeType":"YulIdentifier","src":"18293:6:26"},"nativeSrc":"18293:47:26","nodeType":"YulFunctionCall","src":"18293:47:26"},"nativeSrc":"18293:47:26","nodeType":"YulExpressionStatement","src":"18293:47:26"},{"nativeSrc":"18349:26:26","nodeType":"YulAssignment","src":"18349:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"18361:9:26","nodeType":"YulIdentifier","src":"18361:9:26"},{"kind":"number","nativeSrc":"18372:2:26","nodeType":"YulLiteral","src":"18372:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18357:3:26","nodeType":"YulIdentifier","src":"18357:3:26"},"nativeSrc":"18357:18:26","nodeType":"YulFunctionCall","src":"18357:18:26"},"variableNames":[{"name":"tail","nativeSrc":"18349:4:26","nodeType":"YulIdentifier","src":"18349:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_e16f85873456a830f1ff99f4c2c493d8a3c64696cfa808146bb8fc6bce2e7570__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18040:341:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18191:9:26","nodeType":"YulTypedName","src":"18191:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18205:4:26","nodeType":"YulTypedName","src":"18205:4:26","type":""}],"src":"18040:341:26"},{"body":{"nativeSrc":"18465:194:26","nodeType":"YulBlock","src":"18465:194:26","statements":[{"body":{"nativeSrc":"18511:16:26","nodeType":"YulBlock","src":"18511:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"18520:1:26","nodeType":"YulLiteral","src":"18520:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"18523:1:26","nodeType":"YulLiteral","src":"18523:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"18513:6:26","nodeType":"YulIdentifier","src":"18513:6:26"},"nativeSrc":"18513:12:26","nodeType":"YulFunctionCall","src":"18513:12:26"},"nativeSrc":"18513:12:26","nodeType":"YulExpressionStatement","src":"18513:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"18486:7:26","nodeType":"YulIdentifier","src":"18486:7:26"},{"name":"headStart","nativeSrc":"18495:9:26","nodeType":"YulIdentifier","src":"18495:9:26"}],"functionName":{"name":"sub","nativeSrc":"18482:3:26","nodeType":"YulIdentifier","src":"18482:3:26"},"nativeSrc":"18482:23:26","nodeType":"YulFunctionCall","src":"18482:23:26"},{"kind":"number","nativeSrc":"18507:2:26","nodeType":"YulLiteral","src":"18507:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"18478:3:26","nodeType":"YulIdentifier","src":"18478:3:26"},"nativeSrc":"18478:32:26","nodeType":"YulFunctionCall","src":"18478:32:26"},"nativeSrc":"18475:52:26","nodeType":"YulIf","src":"18475:52:26"},{"nativeSrc":"18536:29:26","nodeType":"YulVariableDeclaration","src":"18536:29:26","value":{"arguments":[{"name":"headStart","nativeSrc":"18555:9:26","nodeType":"YulIdentifier","src":"18555:9:26"}],"functionName":{"name":"mload","nativeSrc":"18549:5:26","nodeType":"YulIdentifier","src":"18549:5:26"},"nativeSrc":"18549:16:26","nodeType":"YulFunctionCall","src":"18549:16:26"},"variables":[{"name":"value","nativeSrc":"18540:5:26","nodeType":"YulTypedName","src":"18540:5:26","type":""}]},{"body":{"nativeSrc":"18613:16:26","nodeType":"YulBlock","src":"18613:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"18622:1:26","nodeType":"YulLiteral","src":"18622:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"18625:1:26","nodeType":"YulLiteral","src":"18625:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"18615:6:26","nodeType":"YulIdentifier","src":"18615:6:26"},"nativeSrc":"18615:12:26","nodeType":"YulFunctionCall","src":"18615:12:26"},"nativeSrc":"18615:12:26","nodeType":"YulExpressionStatement","src":"18615:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"18587:5:26","nodeType":"YulIdentifier","src":"18587:5:26"},{"arguments":[{"name":"value","nativeSrc":"18598:5:26","nodeType":"YulIdentifier","src":"18598:5:26"},{"kind":"number","nativeSrc":"18605:4:26","nodeType":"YulLiteral","src":"18605:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"18594:3:26","nodeType":"YulIdentifier","src":"18594:3:26"},"nativeSrc":"18594:16:26","nodeType":"YulFunctionCall","src":"18594:16:26"}],"functionName":{"name":"eq","nativeSrc":"18584:2:26","nodeType":"YulIdentifier","src":"18584:2:26"},"nativeSrc":"18584:27:26","nodeType":"YulFunctionCall","src":"18584:27:26"}],"functionName":{"name":"iszero","nativeSrc":"18577:6:26","nodeType":"YulIdentifier","src":"18577:6:26"},"nativeSrc":"18577:35:26","nodeType":"YulFunctionCall","src":"18577:35:26"},"nativeSrc":"18574:55:26","nodeType":"YulIf","src":"18574:55:26"},{"nativeSrc":"18638:15:26","nodeType":"YulAssignment","src":"18638:15:26","value":{"name":"value","nativeSrc":"18648:5:26","nodeType":"YulIdentifier","src":"18648:5:26"},"variableNames":[{"name":"value0","nativeSrc":"18638:6:26","nodeType":"YulIdentifier","src":"18638:6:26"}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nativeSrc":"18386:273:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18431:9:26","nodeType":"YulTypedName","src":"18431:9:26","type":""},{"name":"dataEnd","nativeSrc":"18442:7:26","nodeType":"YulTypedName","src":"18442:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"18454:6:26","nodeType":"YulTypedName","src":"18454:6:26","type":""}],"src":"18386:273:26"},{"body":{"nativeSrc":"18838:173:26","nodeType":"YulBlock","src":"18838:173:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18855:9:26","nodeType":"YulIdentifier","src":"18855:9:26"},{"kind":"number","nativeSrc":"18866:2:26","nodeType":"YulLiteral","src":"18866:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"18848:6:26","nodeType":"YulIdentifier","src":"18848:6:26"},"nativeSrc":"18848:21:26","nodeType":"YulFunctionCall","src":"18848:21:26"},"nativeSrc":"18848:21:26","nodeType":"YulExpressionStatement","src":"18848:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18889:9:26","nodeType":"YulIdentifier","src":"18889:9:26"},{"kind":"number","nativeSrc":"18900:2:26","nodeType":"YulLiteral","src":"18900:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18885:3:26","nodeType":"YulIdentifier","src":"18885:3:26"},"nativeSrc":"18885:18:26","nodeType":"YulFunctionCall","src":"18885:18:26"},{"kind":"number","nativeSrc":"18905:2:26","nodeType":"YulLiteral","src":"18905:2:26","type":"","value":"23"}],"functionName":{"name":"mstore","nativeSrc":"18878:6:26","nodeType":"YulIdentifier","src":"18878:6:26"},"nativeSrc":"18878:30:26","nodeType":"YulFunctionCall","src":"18878:30:26"},"nativeSrc":"18878:30:26","nodeType":"YulExpressionStatement","src":"18878:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18928:9:26","nodeType":"YulIdentifier","src":"18928:9:26"},{"kind":"number","nativeSrc":"18939:2:26","nodeType":"YulLiteral","src":"18939:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18924:3:26","nodeType":"YulIdentifier","src":"18924:3:26"},"nativeSrc":"18924:18:26","nodeType":"YulFunctionCall","src":"18924:18:26"},{"hexValue":"53686172652063616c63756c6174696f6e206572726f72","kind":"string","nativeSrc":"18944:25:26","nodeType":"YulLiteral","src":"18944:25:26","type":"","value":"Share calculation error"}],"functionName":{"name":"mstore","nativeSrc":"18917:6:26","nodeType":"YulIdentifier","src":"18917:6:26"},"nativeSrc":"18917:53:26","nodeType":"YulFunctionCall","src":"18917:53:26"},"nativeSrc":"18917:53:26","nodeType":"YulExpressionStatement","src":"18917:53:26"},{"nativeSrc":"18979:26:26","nodeType":"YulAssignment","src":"18979:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"18991:9:26","nodeType":"YulIdentifier","src":"18991:9:26"},{"kind":"number","nativeSrc":"19002:2:26","nodeType":"YulLiteral","src":"19002:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18987:3:26","nodeType":"YulIdentifier","src":"18987:3:26"},"nativeSrc":"18987:18:26","nodeType":"YulFunctionCall","src":"18987:18:26"},"variableNames":[{"name":"tail","nativeSrc":"18979:4:26","nodeType":"YulIdentifier","src":"18979:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_87d7498470f76c7b536e2b3ec9816474a9844e531fdac32c215159c083e5c40c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18664:347:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18815:9:26","nodeType":"YulTypedName","src":"18815:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18829:4:26","nodeType":"YulTypedName","src":"18829:4:26","type":""}],"src":"18664:347:26"},{"body":{"nativeSrc":"19201:294:26","nodeType":"YulBlock","src":"19201:294:26","statements":[{"nativeSrc":"19211:27:26","nodeType":"YulAssignment","src":"19211:27:26","value":{"arguments":[{"name":"headStart","nativeSrc":"19223:9:26","nodeType":"YulIdentifier","src":"19223:9:26"},{"kind":"number","nativeSrc":"19234:3:26","nodeType":"YulLiteral","src":"19234:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"19219:3:26","nodeType":"YulIdentifier","src":"19219:3:26"},"nativeSrc":"19219:19:26","nodeType":"YulFunctionCall","src":"19219:19:26"},"variableNames":[{"name":"tail","nativeSrc":"19211:4:26","nodeType":"YulIdentifier","src":"19211:4:26"}]},{"nativeSrc":"19247:52:26","nodeType":"YulVariableDeclaration","src":"19247:52:26","value":{"kind":"number","nativeSrc":"19257:42:26","nodeType":"YulLiteral","src":"19257:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"19251:2:26","nodeType":"YulTypedName","src":"19251:2:26","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"19315:9:26","nodeType":"YulIdentifier","src":"19315:9:26"},{"arguments":[{"name":"value0","nativeSrc":"19330:6:26","nodeType":"YulIdentifier","src":"19330:6:26"},{"name":"_1","nativeSrc":"19338:2:26","nodeType":"YulIdentifier","src":"19338:2:26"}],"functionName":{"name":"and","nativeSrc":"19326:3:26","nodeType":"YulIdentifier","src":"19326:3:26"},"nativeSrc":"19326:15:26","nodeType":"YulFunctionCall","src":"19326:15:26"}],"functionName":{"name":"mstore","nativeSrc":"19308:6:26","nodeType":"YulIdentifier","src":"19308:6:26"},"nativeSrc":"19308:34:26","nodeType":"YulFunctionCall","src":"19308:34:26"},"nativeSrc":"19308:34:26","nodeType":"YulExpressionStatement","src":"19308:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19362:9:26","nodeType":"YulIdentifier","src":"19362:9:26"},{"kind":"number","nativeSrc":"19373:2:26","nodeType":"YulLiteral","src":"19373:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19358:3:26","nodeType":"YulIdentifier","src":"19358:3:26"},"nativeSrc":"19358:18:26","nodeType":"YulFunctionCall","src":"19358:18:26"},{"arguments":[{"name":"value1","nativeSrc":"19382:6:26","nodeType":"YulIdentifier","src":"19382:6:26"},{"name":"_1","nativeSrc":"19390:2:26","nodeType":"YulIdentifier","src":"19390:2:26"}],"functionName":{"name":"and","nativeSrc":"19378:3:26","nodeType":"YulIdentifier","src":"19378:3:26"},"nativeSrc":"19378:15:26","nodeType":"YulFunctionCall","src":"19378:15:26"}],"functionName":{"name":"mstore","nativeSrc":"19351:6:26","nodeType":"YulIdentifier","src":"19351:6:26"},"nativeSrc":"19351:43:26","nodeType":"YulFunctionCall","src":"19351:43:26"},"nativeSrc":"19351:43:26","nodeType":"YulExpressionStatement","src":"19351:43:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19414:9:26","nodeType":"YulIdentifier","src":"19414:9:26"},{"kind":"number","nativeSrc":"19425:2:26","nodeType":"YulLiteral","src":"19425:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19410:3:26","nodeType":"YulIdentifier","src":"19410:3:26"},"nativeSrc":"19410:18:26","nodeType":"YulFunctionCall","src":"19410:18:26"},{"name":"value2","nativeSrc":"19430:6:26","nodeType":"YulIdentifier","src":"19430:6:26"}],"functionName":{"name":"mstore","nativeSrc":"19403:6:26","nodeType":"YulIdentifier","src":"19403:6:26"},"nativeSrc":"19403:34:26","nodeType":"YulFunctionCall","src":"19403:34:26"},"nativeSrc":"19403:34:26","nodeType":"YulExpressionStatement","src":"19403:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19457:9:26","nodeType":"YulIdentifier","src":"19457:9:26"},{"kind":"number","nativeSrc":"19468:2:26","nodeType":"YulLiteral","src":"19468:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19453:3:26","nodeType":"YulIdentifier","src":"19453:3:26"},"nativeSrc":"19453:18:26","nodeType":"YulFunctionCall","src":"19453:18:26"},{"arguments":[{"name":"value3","nativeSrc":"19477:6:26","nodeType":"YulIdentifier","src":"19477:6:26"},{"name":"_1","nativeSrc":"19485:2:26","nodeType":"YulIdentifier","src":"19485:2:26"}],"functionName":{"name":"and","nativeSrc":"19473:3:26","nodeType":"YulIdentifier","src":"19473:3:26"},"nativeSrc":"19473:15:26","nodeType":"YulFunctionCall","src":"19473:15:26"}],"functionName":{"name":"mstore","nativeSrc":"19446:6:26","nodeType":"YulIdentifier","src":"19446:6:26"},"nativeSrc":"19446:43:26","nodeType":"YulFunctionCall","src":"19446:43:26"},"nativeSrc":"19446:43:26","nodeType":"YulExpressionStatement","src":"19446:43:26"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_address__to_t_address_t_address_t_uint256_t_address__fromStack_reversed","nativeSrc":"19016:479:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19146:9:26","nodeType":"YulTypedName","src":"19146:9:26","type":""},{"name":"value3","nativeSrc":"19157:6:26","nodeType":"YulTypedName","src":"19157:6:26","type":""},{"name":"value2","nativeSrc":"19165:6:26","nodeType":"YulTypedName","src":"19165:6:26","type":""},{"name":"value1","nativeSrc":"19173:6:26","nodeType":"YulTypedName","src":"19173:6:26","type":""},{"name":"value0","nativeSrc":"19181:6:26","nodeType":"YulTypedName","src":"19181:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19192:4:26","nodeType":"YulTypedName","src":"19192:4:26","type":""}],"src":"19016:479:26"},{"body":{"nativeSrc":"19713:347:26","nodeType":"YulBlock","src":"19713:347:26","statements":[{"nativeSrc":"19723:27:26","nodeType":"YulAssignment","src":"19723:27:26","value":{"arguments":[{"name":"headStart","nativeSrc":"19735:9:26","nodeType":"YulIdentifier","src":"19735:9:26"},{"kind":"number","nativeSrc":"19746:3:26","nodeType":"YulLiteral","src":"19746:3:26","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"19731:3:26","nodeType":"YulIdentifier","src":"19731:3:26"},"nativeSrc":"19731:19:26","nodeType":"YulFunctionCall","src":"19731:19:26"},"variableNames":[{"name":"tail","nativeSrc":"19723:4:26","nodeType":"YulIdentifier","src":"19723:4:26"}]},{"nativeSrc":"19759:52:26","nodeType":"YulVariableDeclaration","src":"19759:52:26","value":{"kind":"number","nativeSrc":"19769:42:26","nodeType":"YulLiteral","src":"19769:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"19763:2:26","nodeType":"YulTypedName","src":"19763:2:26","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"19827:9:26","nodeType":"YulIdentifier","src":"19827:9:26"},{"arguments":[{"name":"value0","nativeSrc":"19842:6:26","nodeType":"YulIdentifier","src":"19842:6:26"},{"name":"_1","nativeSrc":"19850:2:26","nodeType":"YulIdentifier","src":"19850:2:26"}],"functionName":{"name":"and","nativeSrc":"19838:3:26","nodeType":"YulIdentifier","src":"19838:3:26"},"nativeSrc":"19838:15:26","nodeType":"YulFunctionCall","src":"19838:15:26"}],"functionName":{"name":"mstore","nativeSrc":"19820:6:26","nodeType":"YulIdentifier","src":"19820:6:26"},"nativeSrc":"19820:34:26","nodeType":"YulFunctionCall","src":"19820:34:26"},"nativeSrc":"19820:34:26","nodeType":"YulExpressionStatement","src":"19820:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19874:9:26","nodeType":"YulIdentifier","src":"19874:9:26"},{"kind":"number","nativeSrc":"19885:2:26","nodeType":"YulLiteral","src":"19885:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19870:3:26","nodeType":"YulIdentifier","src":"19870:3:26"},"nativeSrc":"19870:18:26","nodeType":"YulFunctionCall","src":"19870:18:26"},{"arguments":[{"name":"value1","nativeSrc":"19894:6:26","nodeType":"YulIdentifier","src":"19894:6:26"},{"name":"_1","nativeSrc":"19902:2:26","nodeType":"YulIdentifier","src":"19902:2:26"}],"functionName":{"name":"and","nativeSrc":"19890:3:26","nodeType":"YulIdentifier","src":"19890:3:26"},"nativeSrc":"19890:15:26","nodeType":"YulFunctionCall","src":"19890:15:26"}],"functionName":{"name":"mstore","nativeSrc":"19863:6:26","nodeType":"YulIdentifier","src":"19863:6:26"},"nativeSrc":"19863:43:26","nodeType":"YulFunctionCall","src":"19863:43:26"},"nativeSrc":"19863:43:26","nodeType":"YulExpressionStatement","src":"19863:43:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19926:9:26","nodeType":"YulIdentifier","src":"19926:9:26"},{"kind":"number","nativeSrc":"19937:2:26","nodeType":"YulLiteral","src":"19937:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19922:3:26","nodeType":"YulIdentifier","src":"19922:3:26"},"nativeSrc":"19922:18:26","nodeType":"YulFunctionCall","src":"19922:18:26"},{"arguments":[{"name":"value2","nativeSrc":"19946:6:26","nodeType":"YulIdentifier","src":"19946:6:26"},{"name":"_1","nativeSrc":"19954:2:26","nodeType":"YulIdentifier","src":"19954:2:26"}],"functionName":{"name":"and","nativeSrc":"19942:3:26","nodeType":"YulIdentifier","src":"19942:3:26"},"nativeSrc":"19942:15:26","nodeType":"YulFunctionCall","src":"19942:15:26"}],"functionName":{"name":"mstore","nativeSrc":"19915:6:26","nodeType":"YulIdentifier","src":"19915:6:26"},"nativeSrc":"19915:43:26","nodeType":"YulFunctionCall","src":"19915:43:26"},"nativeSrc":"19915:43:26","nodeType":"YulExpressionStatement","src":"19915:43:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19978:9:26","nodeType":"YulIdentifier","src":"19978:9:26"},{"kind":"number","nativeSrc":"19989:2:26","nodeType":"YulLiteral","src":"19989:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19974:3:26","nodeType":"YulIdentifier","src":"19974:3:26"},"nativeSrc":"19974:18:26","nodeType":"YulFunctionCall","src":"19974:18:26"},{"name":"value3","nativeSrc":"19994:6:26","nodeType":"YulIdentifier","src":"19994:6:26"}],"functionName":{"name":"mstore","nativeSrc":"19967:6:26","nodeType":"YulIdentifier","src":"19967:6:26"},"nativeSrc":"19967:34:26","nodeType":"YulFunctionCall","src":"19967:34:26"},"nativeSrc":"19967:34:26","nodeType":"YulExpressionStatement","src":"19967:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20021:9:26","nodeType":"YulIdentifier","src":"20021:9:26"},{"kind":"number","nativeSrc":"20032:3:26","nodeType":"YulLiteral","src":"20032:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"20017:3:26","nodeType":"YulIdentifier","src":"20017:3:26"},"nativeSrc":"20017:19:26","nodeType":"YulFunctionCall","src":"20017:19:26"},{"arguments":[{"name":"value4","nativeSrc":"20042:6:26","nodeType":"YulIdentifier","src":"20042:6:26"},{"name":"_1","nativeSrc":"20050:2:26","nodeType":"YulIdentifier","src":"20050:2:26"}],"functionName":{"name":"and","nativeSrc":"20038:3:26","nodeType":"YulIdentifier","src":"20038:3:26"},"nativeSrc":"20038:15:26","nodeType":"YulFunctionCall","src":"20038:15:26"}],"functionName":{"name":"mstore","nativeSrc":"20010:6:26","nodeType":"YulIdentifier","src":"20010:6:26"},"nativeSrc":"20010:44:26","nodeType":"YulFunctionCall","src":"20010:44:26"},"nativeSrc":"20010:44:26","nodeType":"YulExpressionStatement","src":"20010:44:26"}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_address__to_t_address_t_address_t_address_t_uint256_t_address__fromStack_reversed","nativeSrc":"19500:560:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19650:9:26","nodeType":"YulTypedName","src":"19650:9:26","type":""},{"name":"value4","nativeSrc":"19661:6:26","nodeType":"YulTypedName","src":"19661:6:26","type":""},{"name":"value3","nativeSrc":"19669:6:26","nodeType":"YulTypedName","src":"19669:6:26","type":""},{"name":"value2","nativeSrc":"19677:6:26","nodeType":"YulTypedName","src":"19677:6:26","type":""},{"name":"value1","nativeSrc":"19685:6:26","nodeType":"YulTypedName","src":"19685:6:26","type":""},{"name":"value0","nativeSrc":"19693:6:26","nodeType":"YulTypedName","src":"19693:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19704:4:26","nodeType":"YulTypedName","src":"19704:4:26","type":""}],"src":"19500:560:26"},{"body":{"nativeSrc":"20239:182:26","nodeType":"YulBlock","src":"20239:182:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"20256:9:26","nodeType":"YulIdentifier","src":"20256:9:26"},{"kind":"number","nativeSrc":"20267:2:26","nodeType":"YulLiteral","src":"20267:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"20249:6:26","nodeType":"YulIdentifier","src":"20249:6:26"},"nativeSrc":"20249:21:26","nodeType":"YulFunctionCall","src":"20249:21:26"},"nativeSrc":"20249:21:26","nodeType":"YulExpressionStatement","src":"20249:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20290:9:26","nodeType":"YulIdentifier","src":"20290:9:26"},{"kind":"number","nativeSrc":"20301:2:26","nodeType":"YulLiteral","src":"20301:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20286:3:26","nodeType":"YulIdentifier","src":"20286:3:26"},"nativeSrc":"20286:18:26","nodeType":"YulFunctionCall","src":"20286:18:26"},{"kind":"number","nativeSrc":"20306:2:26","nodeType":"YulLiteral","src":"20306:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"20279:6:26","nodeType":"YulIdentifier","src":"20279:6:26"},"nativeSrc":"20279:30:26","nodeType":"YulFunctionCall","src":"20279:30:26"},"nativeSrc":"20279:30:26","nodeType":"YulExpressionStatement","src":"20279:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20329:9:26","nodeType":"YulIdentifier","src":"20329:9:26"},{"kind":"number","nativeSrc":"20340:2:26","nodeType":"YulLiteral","src":"20340:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20325:3:26","nodeType":"YulIdentifier","src":"20325:3:26"},"nativeSrc":"20325:18:26","nodeType":"YulFunctionCall","src":"20325:18:26"},{"hexValue":"4d75746920486f702053776170204661696c65642c20547279204275726e2829","kind":"string","nativeSrc":"20345:34:26","nodeType":"YulLiteral","src":"20345:34:26","type":"","value":"Muti Hop Swap Failed, Try Burn()"}],"functionName":{"name":"mstore","nativeSrc":"20318:6:26","nodeType":"YulIdentifier","src":"20318:6:26"},"nativeSrc":"20318:62:26","nodeType":"YulFunctionCall","src":"20318:62:26"},"nativeSrc":"20318:62:26","nodeType":"YulExpressionStatement","src":"20318:62:26"},{"nativeSrc":"20389:26:26","nodeType":"YulAssignment","src":"20389:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"20401:9:26","nodeType":"YulIdentifier","src":"20401:9:26"},{"kind":"number","nativeSrc":"20412:2:26","nodeType":"YulLiteral","src":"20412:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"20397:3:26","nodeType":"YulIdentifier","src":"20397:3:26"},"nativeSrc":"20397:18:26","nodeType":"YulFunctionCall","src":"20397:18:26"},"variableNames":[{"name":"tail","nativeSrc":"20389:4:26","nodeType":"YulIdentifier","src":"20389:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfb1910864572988af91047c2a74bf6c8bc662651e6ced4da8e59a423cae87d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"20065:356:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20216:9:26","nodeType":"YulTypedName","src":"20216:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20230:4:26","nodeType":"YulTypedName","src":"20230:4:26","type":""}],"src":"20065:356:26"},{"body":{"nativeSrc":"20504:469:26","nodeType":"YulBlock","src":"20504:469:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"20521:3:26","nodeType":"YulIdentifier","src":"20521:3:26"},{"name":"length","nativeSrc":"20526:6:26","nodeType":"YulIdentifier","src":"20526:6:26"}],"functionName":{"name":"mstore","nativeSrc":"20514:6:26","nodeType":"YulIdentifier","src":"20514:6:26"},"nativeSrc":"20514:19:26","nodeType":"YulFunctionCall","src":"20514:19:26"},"nativeSrc":"20514:19:26","nodeType":"YulExpressionStatement","src":"20514:19:26"},{"nativeSrc":"20542:14:26","nodeType":"YulVariableDeclaration","src":"20542:14:26","value":{"kind":"number","nativeSrc":"20552:4:26","nodeType":"YulLiteral","src":"20552:4:26","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"20546:2:26","nodeType":"YulTypedName","src":"20546:2:26","type":""}]},{"nativeSrc":"20565:21:26","nodeType":"YulAssignment","src":"20565:21:26","value":{"arguments":[{"name":"pos","nativeSrc":"20576:3:26","nodeType":"YulIdentifier","src":"20576:3:26"},{"kind":"number","nativeSrc":"20581:4:26","nodeType":"YulLiteral","src":"20581:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"20572:3:26","nodeType":"YulIdentifier","src":"20572:3:26"},"nativeSrc":"20572:14:26","nodeType":"YulFunctionCall","src":"20572:14:26"},"variableNames":[{"name":"pos","nativeSrc":"20565:3:26","nodeType":"YulIdentifier","src":"20565:3:26"}]},{"nativeSrc":"20595:19:26","nodeType":"YulVariableDeclaration","src":"20595:19:26","value":{"name":"value","nativeSrc":"20609:5:26","nodeType":"YulIdentifier","src":"20609:5:26"},"variables":[{"name":"srcPtr","nativeSrc":"20599:6:26","nodeType":"YulTypedName","src":"20599:6:26","type":""}]},{"nativeSrc":"20623:10:26","nodeType":"YulVariableDeclaration","src":"20623:10:26","value":{"kind":"number","nativeSrc":"20632:1:26","nodeType":"YulLiteral","src":"20632:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"20627:1:26","nodeType":"YulTypedName","src":"20627:1:26","type":""}]},{"body":{"nativeSrc":"20691:257:26","nodeType":"YulBlock","src":"20691:257:26","statements":[{"nativeSrc":"20705:35:26","nodeType":"YulVariableDeclaration","src":"20705:35:26","value":{"arguments":[{"name":"srcPtr","nativeSrc":"20733:6:26","nodeType":"YulIdentifier","src":"20733:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"20720:12:26","nodeType":"YulIdentifier","src":"20720:12:26"},"nativeSrc":"20720:20:26","nodeType":"YulFunctionCall","src":"20720:20:26"},"variables":[{"name":"value_1","nativeSrc":"20709:7:26","nodeType":"YulTypedName","src":"20709:7:26","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"20778:7:26","nodeType":"YulIdentifier","src":"20778:7:26"}],"functionName":{"name":"validator_revert_address","nativeSrc":"20753:24:26","nodeType":"YulIdentifier","src":"20753:24:26"},"nativeSrc":"20753:33:26","nodeType":"YulFunctionCall","src":"20753:33:26"},"nativeSrc":"20753:33:26","nodeType":"YulExpressionStatement","src":"20753:33:26"},{"expression":{"arguments":[{"name":"pos","nativeSrc":"20806:3:26","nodeType":"YulIdentifier","src":"20806:3:26"},{"arguments":[{"name":"value_1","nativeSrc":"20815:7:26","nodeType":"YulIdentifier","src":"20815:7:26"},{"kind":"number","nativeSrc":"20824:42:26","nodeType":"YulLiteral","src":"20824:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"20811:3:26","nodeType":"YulIdentifier","src":"20811:3:26"},"nativeSrc":"20811:56:26","nodeType":"YulFunctionCall","src":"20811:56:26"}],"functionName":{"name":"mstore","nativeSrc":"20799:6:26","nodeType":"YulIdentifier","src":"20799:6:26"},"nativeSrc":"20799:69:26","nodeType":"YulFunctionCall","src":"20799:69:26"},"nativeSrc":"20799:69:26","nodeType":"YulExpressionStatement","src":"20799:69:26"},{"nativeSrc":"20881:19:26","nodeType":"YulAssignment","src":"20881:19:26","value":{"arguments":[{"name":"pos","nativeSrc":"20892:3:26","nodeType":"YulIdentifier","src":"20892:3:26"},{"name":"_1","nativeSrc":"20897:2:26","nodeType":"YulIdentifier","src":"20897:2:26"}],"functionName":{"name":"add","nativeSrc":"20888:3:26","nodeType":"YulIdentifier","src":"20888:3:26"},"nativeSrc":"20888:12:26","nodeType":"YulFunctionCall","src":"20888:12:26"},"variableNames":[{"name":"pos","nativeSrc":"20881:3:26","nodeType":"YulIdentifier","src":"20881:3:26"}]},{"nativeSrc":"20913:25:26","nodeType":"YulAssignment","src":"20913:25:26","value":{"arguments":[{"name":"srcPtr","nativeSrc":"20927:6:26","nodeType":"YulIdentifier","src":"20927:6:26"},{"name":"_1","nativeSrc":"20935:2:26","nodeType":"YulIdentifier","src":"20935:2:26"}],"functionName":{"name":"add","nativeSrc":"20923:3:26","nodeType":"YulIdentifier","src":"20923:3:26"},"nativeSrc":"20923:15:26","nodeType":"YulFunctionCall","src":"20923:15:26"},"variableNames":[{"name":"srcPtr","nativeSrc":"20913:6:26","nodeType":"YulIdentifier","src":"20913:6:26"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"20653:1:26","nodeType":"YulIdentifier","src":"20653:1:26"},{"name":"length","nativeSrc":"20656:6:26","nodeType":"YulIdentifier","src":"20656:6:26"}],"functionName":{"name":"lt","nativeSrc":"20650:2:26","nodeType":"YulIdentifier","src":"20650:2:26"},"nativeSrc":"20650:13:26","nodeType":"YulFunctionCall","src":"20650:13:26"},"nativeSrc":"20642:306:26","nodeType":"YulForLoop","post":{"nativeSrc":"20664:18:26","nodeType":"YulBlock","src":"20664:18:26","statements":[{"nativeSrc":"20666:14:26","nodeType":"YulAssignment","src":"20666:14:26","value":{"arguments":[{"name":"i","nativeSrc":"20675:1:26","nodeType":"YulIdentifier","src":"20675:1:26"},{"kind":"number","nativeSrc":"20678:1:26","nodeType":"YulLiteral","src":"20678:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"20671:3:26","nodeType":"YulIdentifier","src":"20671:3:26"},"nativeSrc":"20671:9:26","nodeType":"YulFunctionCall","src":"20671:9:26"},"variableNames":[{"name":"i","nativeSrc":"20666:1:26","nodeType":"YulIdentifier","src":"20666:1:26"}]}]},"pre":{"nativeSrc":"20646:3:26","nodeType":"YulBlock","src":"20646:3:26","statements":[]},"src":"20642:306:26"},{"nativeSrc":"20957:10:26","nodeType":"YulAssignment","src":"20957:10:26","value":{"name":"pos","nativeSrc":"20964:3:26","nodeType":"YulIdentifier","src":"20964:3:26"},"variableNames":[{"name":"end","nativeSrc":"20957:3:26","nodeType":"YulIdentifier","src":"20957:3:26"}]}]},"name":"abi_encode_array_address_dyn_calldata","nativeSrc":"20426:547:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"20473:5:26","nodeType":"YulTypedName","src":"20473:5:26","type":""},{"name":"length","nativeSrc":"20480:6:26","nodeType":"YulTypedName","src":"20480:6:26","type":""},{"name":"pos","nativeSrc":"20488:3:26","nodeType":"YulTypedName","src":"20488:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"20496:3:26","nodeType":"YulTypedName","src":"20496:3:26","type":""}],"src":"20426:547:26"},{"body":{"nativeSrc":"21056:280:26","nodeType":"YulBlock","src":"21056:280:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"21073:3:26","nodeType":"YulIdentifier","src":"21073:3:26"},{"name":"length","nativeSrc":"21078:6:26","nodeType":"YulIdentifier","src":"21078:6:26"}],"functionName":{"name":"mstore","nativeSrc":"21066:6:26","nodeType":"YulIdentifier","src":"21066:6:26"},"nativeSrc":"21066:19:26","nodeType":"YulFunctionCall","src":"21066:19:26"},"nativeSrc":"21066:19:26","nodeType":"YulExpressionStatement","src":"21066:19:26"},{"body":{"nativeSrc":"21176:16:26","nodeType":"YulBlock","src":"21176:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"21185:1:26","nodeType":"YulLiteral","src":"21185:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"21188:1:26","nodeType":"YulLiteral","src":"21188:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"21178:6:26","nodeType":"YulIdentifier","src":"21178:6:26"},"nativeSrc":"21178:12:26","nodeType":"YulFunctionCall","src":"21178:12:26"},"nativeSrc":"21178:12:26","nodeType":"YulExpressionStatement","src":"21178:12:26"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"21100:6:26","nodeType":"YulIdentifier","src":"21100:6:26"},{"kind":"number","nativeSrc":"21108:66:26","nodeType":"YulLiteral","src":"21108:66:26","type":"","value":"0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"21097:2:26","nodeType":"YulIdentifier","src":"21097:2:26"},"nativeSrc":"21097:78:26","nodeType":"YulFunctionCall","src":"21097:78:26"},"nativeSrc":"21094:98:26","nodeType":"YulIf","src":"21094:98:26"},{"nativeSrc":"21201:30:26","nodeType":"YulVariableDeclaration","src":"21201:30:26","value":{"arguments":[{"kind":"number","nativeSrc":"21221:1:26","nodeType":"YulLiteral","src":"21221:1:26","type":"","value":"5"},{"name":"length","nativeSrc":"21224:6:26","nodeType":"YulIdentifier","src":"21224:6:26"}],"functionName":{"name":"shl","nativeSrc":"21217:3:26","nodeType":"YulIdentifier","src":"21217:3:26"},"nativeSrc":"21217:14:26","nodeType":"YulFunctionCall","src":"21217:14:26"},"variables":[{"name":"length_1","nativeSrc":"21205:8:26","nodeType":"YulTypedName","src":"21205:8:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"21257:3:26","nodeType":"YulIdentifier","src":"21257:3:26"},{"kind":"number","nativeSrc":"21262:4:26","nodeType":"YulLiteral","src":"21262:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"21253:3:26","nodeType":"YulIdentifier","src":"21253:3:26"},"nativeSrc":"21253:14:26","nodeType":"YulFunctionCall","src":"21253:14:26"},{"name":"start","nativeSrc":"21269:5:26","nodeType":"YulIdentifier","src":"21269:5:26"},{"name":"length_1","nativeSrc":"21276:8:26","nodeType":"YulIdentifier","src":"21276:8:26"}],"functionName":{"name":"calldatacopy","nativeSrc":"21240:12:26","nodeType":"YulIdentifier","src":"21240:12:26"},"nativeSrc":"21240:45:26","nodeType":"YulFunctionCall","src":"21240:45:26"},"nativeSrc":"21240:45:26","nodeType":"YulExpressionStatement","src":"21240:45:26"},{"nativeSrc":"21294:36:26","nodeType":"YulAssignment","src":"21294:36:26","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"21309:3:26","nodeType":"YulIdentifier","src":"21309:3:26"},{"name":"length_1","nativeSrc":"21314:8:26","nodeType":"YulIdentifier","src":"21314:8:26"}],"functionName":{"name":"add","nativeSrc":"21305:3:26","nodeType":"YulIdentifier","src":"21305:3:26"},"nativeSrc":"21305:18:26","nodeType":"YulFunctionCall","src":"21305:18:26"},{"kind":"number","nativeSrc":"21325:4:26","nodeType":"YulLiteral","src":"21325:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"21301:3:26","nodeType":"YulIdentifier","src":"21301:3:26"},"nativeSrc":"21301:29:26","nodeType":"YulFunctionCall","src":"21301:29:26"},"variableNames":[{"name":"end","nativeSrc":"21294:3:26","nodeType":"YulIdentifier","src":"21294:3:26"}]}]},"name":"abi_encode_array_uint256_dyn_calldata","nativeSrc":"20978:358:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"21025:5:26","nodeType":"YulTypedName","src":"21025:5:26","type":""},{"name":"length","nativeSrc":"21032:6:26","nodeType":"YulTypedName","src":"21032:6:26","type":""},{"name":"pos","nativeSrc":"21040:3:26","nodeType":"YulTypedName","src":"21040:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"21048:3:26","nodeType":"YulTypedName","src":"21048:3:26","type":""}],"src":"20978:358:26"},{"body":{"nativeSrc":"21780:955:26","nodeType":"YulBlock","src":"21780:955:26","statements":[{"nativeSrc":"21790:33:26","nodeType":"YulVariableDeclaration","src":"21790:33:26","value":{"arguments":[{"name":"headStart","nativeSrc":"21808:9:26","nodeType":"YulIdentifier","src":"21808:9:26"},{"kind":"number","nativeSrc":"21819:3:26","nodeType":"YulLiteral","src":"21819:3:26","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"21804:3:26","nodeType":"YulIdentifier","src":"21804:3:26"},"nativeSrc":"21804:19:26","nodeType":"YulFunctionCall","src":"21804:19:26"},"variables":[{"name":"tail_1","nativeSrc":"21794:6:26","nodeType":"YulTypedName","src":"21794:6:26","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"21839:9:26","nodeType":"YulIdentifier","src":"21839:9:26"},{"kind":"number","nativeSrc":"21850:3:26","nodeType":"YulLiteral","src":"21850:3:26","type":"","value":"224"}],"functionName":{"name":"mstore","nativeSrc":"21832:6:26","nodeType":"YulIdentifier","src":"21832:6:26"},"nativeSrc":"21832:22:26","nodeType":"YulFunctionCall","src":"21832:22:26"},"nativeSrc":"21832:22:26","nodeType":"YulExpressionStatement","src":"21832:22:26"},{"nativeSrc":"21863:17:26","nodeType":"YulVariableDeclaration","src":"21863:17:26","value":{"name":"tail_1","nativeSrc":"21874:6:26","nodeType":"YulIdentifier","src":"21874:6:26"},"variables":[{"name":"pos","nativeSrc":"21867:3:26","nodeType":"YulTypedName","src":"21867:3:26","type":""}]},{"nativeSrc":"21889:27:26","nodeType":"YulVariableDeclaration","src":"21889:27:26","value":{"arguments":[{"name":"value0","nativeSrc":"21909:6:26","nodeType":"YulIdentifier","src":"21909:6:26"}],"functionName":{"name":"mload","nativeSrc":"21903:5:26","nodeType":"YulIdentifier","src":"21903:5:26"},"nativeSrc":"21903:13:26","nodeType":"YulFunctionCall","src":"21903:13:26"},"variables":[{"name":"length","nativeSrc":"21893:6:26","nodeType":"YulTypedName","src":"21893:6:26","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nativeSrc":"21932:6:26","nodeType":"YulIdentifier","src":"21932:6:26"},{"name":"length","nativeSrc":"21940:6:26","nodeType":"YulIdentifier","src":"21940:6:26"}],"functionName":{"name":"mstore","nativeSrc":"21925:6:26","nodeType":"YulIdentifier","src":"21925:6:26"},"nativeSrc":"21925:22:26","nodeType":"YulFunctionCall","src":"21925:22:26"},"nativeSrc":"21925:22:26","nodeType":"YulExpressionStatement","src":"21925:22:26"},{"nativeSrc":"21956:26:26","nodeType":"YulAssignment","src":"21956:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"21967:9:26","nodeType":"YulIdentifier","src":"21967:9:26"},{"kind":"number","nativeSrc":"21978:3:26","nodeType":"YulLiteral","src":"21978:3:26","type":"","value":"256"}],"functionName":{"name":"add","nativeSrc":"21963:3:26","nodeType":"YulIdentifier","src":"21963:3:26"},"nativeSrc":"21963:19:26","nodeType":"YulFunctionCall","src":"21963:19:26"},"variableNames":[{"name":"pos","nativeSrc":"21956:3:26","nodeType":"YulIdentifier","src":"21956:3:26"}]},{"nativeSrc":"21991:14:26","nodeType":"YulVariableDeclaration","src":"21991:14:26","value":{"kind":"number","nativeSrc":"22001:4:26","nodeType":"YulLiteral","src":"22001:4:26","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"21995:2:26","nodeType":"YulTypedName","src":"21995:2:26","type":""}]},{"nativeSrc":"22014:31:26","nodeType":"YulVariableDeclaration","src":"22014:31:26","value":{"arguments":[{"name":"value0","nativeSrc":"22032:6:26","nodeType":"YulIdentifier","src":"22032:6:26"},{"kind":"number","nativeSrc":"22040:4:26","nodeType":"YulLiteral","src":"22040:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"22028:3:26","nodeType":"YulIdentifier","src":"22028:3:26"},"nativeSrc":"22028:17:26","nodeType":"YulFunctionCall","src":"22028:17:26"},"variables":[{"name":"srcPtr","nativeSrc":"22018:6:26","nodeType":"YulTypedName","src":"22018:6:26","type":""}]},{"nativeSrc":"22054:10:26","nodeType":"YulVariableDeclaration","src":"22054:10:26","value":{"kind":"number","nativeSrc":"22063:1:26","nodeType":"YulLiteral","src":"22063:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"22058:1:26","nodeType":"YulTypedName","src":"22058:1:26","type":""}]},{"body":{"nativeSrc":"22122:120:26","nodeType":"YulBlock","src":"22122:120:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"22143:3:26","nodeType":"YulIdentifier","src":"22143:3:26"},{"arguments":[{"name":"srcPtr","nativeSrc":"22154:6:26","nodeType":"YulIdentifier","src":"22154:6:26"}],"functionName":{"name":"mload","nativeSrc":"22148:5:26","nodeType":"YulIdentifier","src":"22148:5:26"},"nativeSrc":"22148:13:26","nodeType":"YulFunctionCall","src":"22148:13:26"}],"functionName":{"name":"mstore","nativeSrc":"22136:6:26","nodeType":"YulIdentifier","src":"22136:6:26"},"nativeSrc":"22136:26:26","nodeType":"YulFunctionCall","src":"22136:26:26"},"nativeSrc":"22136:26:26","nodeType":"YulExpressionStatement","src":"22136:26:26"},{"nativeSrc":"22175:19:26","nodeType":"YulAssignment","src":"22175:19:26","value":{"arguments":[{"name":"pos","nativeSrc":"22186:3:26","nodeType":"YulIdentifier","src":"22186:3:26"},{"name":"_1","nativeSrc":"22191:2:26","nodeType":"YulIdentifier","src":"22191:2:26"}],"functionName":{"name":"add","nativeSrc":"22182:3:26","nodeType":"YulIdentifier","src":"22182:3:26"},"nativeSrc":"22182:12:26","nodeType":"YulFunctionCall","src":"22182:12:26"},"variableNames":[{"name":"pos","nativeSrc":"22175:3:26","nodeType":"YulIdentifier","src":"22175:3:26"}]},{"nativeSrc":"22207:25:26","nodeType":"YulAssignment","src":"22207:25:26","value":{"arguments":[{"name":"srcPtr","nativeSrc":"22221:6:26","nodeType":"YulIdentifier","src":"22221:6:26"},{"name":"_1","nativeSrc":"22229:2:26","nodeType":"YulIdentifier","src":"22229:2:26"}],"functionName":{"name":"add","nativeSrc":"22217:3:26","nodeType":"YulIdentifier","src":"22217:3:26"},"nativeSrc":"22217:15:26","nodeType":"YulFunctionCall","src":"22217:15:26"},"variableNames":[{"name":"srcPtr","nativeSrc":"22207:6:26","nodeType":"YulIdentifier","src":"22207:6:26"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"22084:1:26","nodeType":"YulIdentifier","src":"22084:1:26"},{"name":"length","nativeSrc":"22087:6:26","nodeType":"YulIdentifier","src":"22087:6:26"}],"functionName":{"name":"lt","nativeSrc":"22081:2:26","nodeType":"YulIdentifier","src":"22081:2:26"},"nativeSrc":"22081:13:26","nodeType":"YulFunctionCall","src":"22081:13:26"},"nativeSrc":"22073:169:26","nodeType":"YulForLoop","post":{"nativeSrc":"22095:18:26","nodeType":"YulBlock","src":"22095:18:26","statements":[{"nativeSrc":"22097:14:26","nodeType":"YulAssignment","src":"22097:14:26","value":{"arguments":[{"name":"i","nativeSrc":"22106:1:26","nodeType":"YulIdentifier","src":"22106:1:26"},{"kind":"number","nativeSrc":"22109:1:26","nodeType":"YulLiteral","src":"22109:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"22102:3:26","nodeType":"YulIdentifier","src":"22102:3:26"},"nativeSrc":"22102:9:26","nodeType":"YulFunctionCall","src":"22102:9:26"},"variableNames":[{"name":"i","nativeSrc":"22097:1:26","nodeType":"YulIdentifier","src":"22097:1:26"}]}]},"pre":{"nativeSrc":"22077:3:26","nodeType":"YulBlock","src":"22077:3:26","statements":[]},"src":"22073:169:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22262:9:26","nodeType":"YulIdentifier","src":"22262:9:26"},{"kind":"number","nativeSrc":"22273:4:26","nodeType":"YulLiteral","src":"22273:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"22258:3:26","nodeType":"YulIdentifier","src":"22258:3:26"},"nativeSrc":"22258:20:26","nodeType":"YulFunctionCall","src":"22258:20:26"},{"arguments":[{"name":"pos","nativeSrc":"22284:3:26","nodeType":"YulIdentifier","src":"22284:3:26"},{"name":"headStart","nativeSrc":"22289:9:26","nodeType":"YulIdentifier","src":"22289:9:26"}],"functionName":{"name":"sub","nativeSrc":"22280:3:26","nodeType":"YulIdentifier","src":"22280:3:26"},"nativeSrc":"22280:19:26","nodeType":"YulFunctionCall","src":"22280:19:26"}],"functionName":{"name":"mstore","nativeSrc":"22251:6:26","nodeType":"YulIdentifier","src":"22251:6:26"},"nativeSrc":"22251:49:26","nodeType":"YulFunctionCall","src":"22251:49:26"},"nativeSrc":"22251:49:26","nodeType":"YulExpressionStatement","src":"22251:49:26"},{"nativeSrc":"22309:72:26","nodeType":"YulVariableDeclaration","src":"22309:72:26","value":{"arguments":[{"name":"value1","nativeSrc":"22361:6:26","nodeType":"YulIdentifier","src":"22361:6:26"},{"name":"value2","nativeSrc":"22369:6:26","nodeType":"YulIdentifier","src":"22369:6:26"},{"name":"pos","nativeSrc":"22377:3:26","nodeType":"YulIdentifier","src":"22377:3:26"}],"functionName":{"name":"abi_encode_array_address_dyn_calldata","nativeSrc":"22323:37:26","nodeType":"YulIdentifier","src":"22323:37:26"},"nativeSrc":"22323:58:26","nodeType":"YulFunctionCall","src":"22323:58:26"},"variables":[{"name":"tail_2","nativeSrc":"22313:6:26","nodeType":"YulTypedName","src":"22313:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22401:9:26","nodeType":"YulIdentifier","src":"22401:9:26"},{"kind":"number","nativeSrc":"22412:2:26","nodeType":"YulLiteral","src":"22412:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22397:3:26","nodeType":"YulIdentifier","src":"22397:3:26"},"nativeSrc":"22397:18:26","nodeType":"YulFunctionCall","src":"22397:18:26"},{"arguments":[{"name":"tail_2","nativeSrc":"22421:6:26","nodeType":"YulIdentifier","src":"22421:6:26"},{"name":"headStart","nativeSrc":"22429:9:26","nodeType":"YulIdentifier","src":"22429:9:26"}],"functionName":{"name":"sub","nativeSrc":"22417:3:26","nodeType":"YulIdentifier","src":"22417:3:26"},"nativeSrc":"22417:22:26","nodeType":"YulFunctionCall","src":"22417:22:26"}],"functionName":{"name":"mstore","nativeSrc":"22390:6:26","nodeType":"YulIdentifier","src":"22390:6:26"},"nativeSrc":"22390:50:26","nodeType":"YulFunctionCall","src":"22390:50:26"},"nativeSrc":"22390:50:26","nodeType":"YulExpressionStatement","src":"22390:50:26"},{"nativeSrc":"22449:69:26","nodeType":"YulAssignment","src":"22449:69:26","value":{"arguments":[{"name":"value3","nativeSrc":"22495:6:26","nodeType":"YulIdentifier","src":"22495:6:26"},{"name":"value4","nativeSrc":"22503:6:26","nodeType":"YulIdentifier","src":"22503:6:26"},{"name":"tail_2","nativeSrc":"22511:6:26","nodeType":"YulIdentifier","src":"22511:6:26"}],"functionName":{"name":"abi_encode_array_uint256_dyn_calldata","nativeSrc":"22457:37:26","nodeType":"YulIdentifier","src":"22457:37:26"},"nativeSrc":"22457:61:26","nodeType":"YulFunctionCall","src":"22457:61:26"},"variableNames":[{"name":"tail","nativeSrc":"22449:4:26","nodeType":"YulIdentifier","src":"22449:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22538:9:26","nodeType":"YulIdentifier","src":"22538:9:26"},{"kind":"number","nativeSrc":"22549:2:26","nodeType":"YulLiteral","src":"22549:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"22534:3:26","nodeType":"YulIdentifier","src":"22534:3:26"},"nativeSrc":"22534:18:26","nodeType":"YulFunctionCall","src":"22534:18:26"},{"name":"value5","nativeSrc":"22554:6:26","nodeType":"YulIdentifier","src":"22554:6:26"}],"functionName":{"name":"mstore","nativeSrc":"22527:6:26","nodeType":"YulIdentifier","src":"22527:6:26"},"nativeSrc":"22527:34:26","nodeType":"YulFunctionCall","src":"22527:34:26"},"nativeSrc":"22527:34:26","nodeType":"YulExpressionStatement","src":"22527:34:26"},{"expression":{"arguments":[{"name":"value6","nativeSrc":"22589:6:26","nodeType":"YulIdentifier","src":"22589:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"22601:9:26","nodeType":"YulIdentifier","src":"22601:9:26"},{"kind":"number","nativeSrc":"22612:3:26","nodeType":"YulLiteral","src":"22612:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"22597:3:26","nodeType":"YulIdentifier","src":"22597:3:26"},"nativeSrc":"22597:19:26","nodeType":"YulFunctionCall","src":"22597:19:26"}],"functionName":{"name":"abi_encode_address","nativeSrc":"22570:18:26","nodeType":"YulIdentifier","src":"22570:18:26"},"nativeSrc":"22570:47:26","nodeType":"YulFunctionCall","src":"22570:47:26"},"nativeSrc":"22570:47:26","nodeType":"YulExpressionStatement","src":"22570:47:26"},{"expression":{"arguments":[{"name":"value7","nativeSrc":"22645:6:26","nodeType":"YulIdentifier","src":"22645:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"22657:9:26","nodeType":"YulIdentifier","src":"22657:9:26"},{"kind":"number","nativeSrc":"22668:3:26","nodeType":"YulLiteral","src":"22668:3:26","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"22653:3:26","nodeType":"YulIdentifier","src":"22653:3:26"},"nativeSrc":"22653:19:26","nodeType":"YulFunctionCall","src":"22653:19:26"}],"functionName":{"name":"abi_encode_address","nativeSrc":"22626:18:26","nodeType":"YulIdentifier","src":"22626:18:26"},"nativeSrc":"22626:47:26","nodeType":"YulFunctionCall","src":"22626:47:26"},"nativeSrc":"22626:47:26","nodeType":"YulExpressionStatement","src":"22626:47:26"},{"expression":{"arguments":[{"name":"value8","nativeSrc":"22701:6:26","nodeType":"YulIdentifier","src":"22701:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"22713:9:26","nodeType":"YulIdentifier","src":"22713:9:26"},{"kind":"number","nativeSrc":"22724:3:26","nodeType":"YulLiteral","src":"22724:3:26","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"22709:3:26","nodeType":"YulIdentifier","src":"22709:3:26"},"nativeSrc":"22709:19:26","nodeType":"YulFunctionCall","src":"22709:19:26"}],"functionName":{"name":"abi_encode_address","nativeSrc":"22682:18:26","nodeType":"YulIdentifier","src":"22682:18:26"},"nativeSrc":"22682:47:26","nodeType":"YulFunctionCall","src":"22682:47:26"},"nativeSrc":"22682:47:26","nodeType":"YulExpressionStatement","src":"22682:47:26"}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr_t_uint256_t_address_t_address_t_address__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address_t_address_t_address__fromStack_reversed","nativeSrc":"21341:1394:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21685:9:26","nodeType":"YulTypedName","src":"21685:9:26","type":""},{"name":"value8","nativeSrc":"21696:6:26","nodeType":"YulTypedName","src":"21696:6:26","type":""},{"name":"value7","nativeSrc":"21704:6:26","nodeType":"YulTypedName","src":"21704:6:26","type":""},{"name":"value6","nativeSrc":"21712:6:26","nodeType":"YulTypedName","src":"21712:6:26","type":""},{"name":"value5","nativeSrc":"21720:6:26","nodeType":"YulTypedName","src":"21720:6:26","type":""},{"name":"value4","nativeSrc":"21728:6:26","nodeType":"YulTypedName","src":"21728:6:26","type":""},{"name":"value3","nativeSrc":"21736:6:26","nodeType":"YulTypedName","src":"21736:6:26","type":""},{"name":"value2","nativeSrc":"21744:6:26","nodeType":"YulTypedName","src":"21744:6:26","type":""},{"name":"value1","nativeSrc":"21752:6:26","nodeType":"YulTypedName","src":"21752:6:26","type":""},{"name":"value0","nativeSrc":"21760:6:26","nodeType":"YulTypedName","src":"21760:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21771:4:26","nodeType":"YulTypedName","src":"21771:4:26","type":""}],"src":"21341:1394:26"},{"body":{"nativeSrc":"22848:101:26","nodeType":"YulBlock","src":"22848:101:26","statements":[{"nativeSrc":"22858:26:26","nodeType":"YulAssignment","src":"22858:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"22870:9:26","nodeType":"YulIdentifier","src":"22870:9:26"},{"kind":"number","nativeSrc":"22881:2:26","nodeType":"YulLiteral","src":"22881:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22866:3:26","nodeType":"YulIdentifier","src":"22866:3:26"},"nativeSrc":"22866:18:26","nodeType":"YulFunctionCall","src":"22866:18:26"},"variableNames":[{"name":"tail","nativeSrc":"22858:4:26","nodeType":"YulIdentifier","src":"22858:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"22900:9:26","nodeType":"YulIdentifier","src":"22900:9:26"},{"arguments":[{"name":"value0","nativeSrc":"22915:6:26","nodeType":"YulIdentifier","src":"22915:6:26"},{"kind":"number","nativeSrc":"22923:18:26","nodeType":"YulLiteral","src":"22923:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"22911:3:26","nodeType":"YulIdentifier","src":"22911:3:26"},"nativeSrc":"22911:31:26","nodeType":"YulFunctionCall","src":"22911:31:26"}],"functionName":{"name":"mstore","nativeSrc":"22893:6:26","nodeType":"YulIdentifier","src":"22893:6:26"},"nativeSrc":"22893:50:26","nodeType":"YulFunctionCall","src":"22893:50:26"},"nativeSrc":"22893:50:26","nodeType":"YulExpressionStatement","src":"22893:50:26"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"22740:209:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22817:9:26","nodeType":"YulTypedName","src":"22817:9:26","type":""},{"name":"value0","nativeSrc":"22828:6:26","nodeType":"YulTypedName","src":"22828:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22839:4:26","nodeType":"YulTypedName","src":"22839:4:26","type":""}],"src":"22740:209:26"},{"body":{"nativeSrc":"23128:171:26","nodeType":"YulBlock","src":"23128:171:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"23145:9:26","nodeType":"YulIdentifier","src":"23145:9:26"},{"kind":"number","nativeSrc":"23156:2:26","nodeType":"YulLiteral","src":"23156:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"23138:6:26","nodeType":"YulIdentifier","src":"23138:6:26"},"nativeSrc":"23138:21:26","nodeType":"YulFunctionCall","src":"23138:21:26"},"nativeSrc":"23138:21:26","nodeType":"YulExpressionStatement","src":"23138:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23179:9:26","nodeType":"YulIdentifier","src":"23179:9:26"},{"kind":"number","nativeSrc":"23190:2:26","nodeType":"YulLiteral","src":"23190:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23175:3:26","nodeType":"YulIdentifier","src":"23175:3:26"},"nativeSrc":"23175:18:26","nodeType":"YulFunctionCall","src":"23175:18:26"},{"kind":"number","nativeSrc":"23195:2:26","nodeType":"YulLiteral","src":"23195:2:26","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"23168:6:26","nodeType":"YulIdentifier","src":"23168:6:26"},"nativeSrc":"23168:30:26","nodeType":"YulFunctionCall","src":"23168:30:26"},"nativeSrc":"23168:30:26","nodeType":"YulExpressionStatement","src":"23168:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23218:9:26","nodeType":"YulIdentifier","src":"23218:9:26"},{"kind":"number","nativeSrc":"23229:2:26","nodeType":"YulLiteral","src":"23229:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"23214:3:26","nodeType":"YulIdentifier","src":"23214:3:26"},"nativeSrc":"23214:18:26","nodeType":"YulFunctionCall","src":"23214:18:26"},{"hexValue":"4167656e7420666163746f7279206e6f7420736574","kind":"string","nativeSrc":"23234:23:26","nodeType":"YulLiteral","src":"23234:23:26","type":"","value":"Agent factory not set"}],"functionName":{"name":"mstore","nativeSrc":"23207:6:26","nodeType":"YulIdentifier","src":"23207:6:26"},"nativeSrc":"23207:51:26","nodeType":"YulFunctionCall","src":"23207:51:26"},"nativeSrc":"23207:51:26","nodeType":"YulExpressionStatement","src":"23207:51:26"},{"nativeSrc":"23267:26:26","nodeType":"YulAssignment","src":"23267:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"23279:9:26","nodeType":"YulIdentifier","src":"23279:9:26"},{"kind":"number","nativeSrc":"23290:2:26","nodeType":"YulLiteral","src":"23290:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"23275:3:26","nodeType":"YulIdentifier","src":"23275:3:26"},"nativeSrc":"23275:18:26","nodeType":"YulFunctionCall","src":"23275:18:26"},"variableNames":[{"name":"tail","nativeSrc":"23267:4:26","nodeType":"YulIdentifier","src":"23267:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_c0699f179d2a1b62cb97d8e7fffb6f849ca18ed4e697b2f010f29e743716b888__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"22954:345:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23105:9:26","nodeType":"YulTypedName","src":"23105:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23119:4:26","nodeType":"YulTypedName","src":"23119:4:26","type":""}],"src":"22954:345:26"},{"body":{"nativeSrc":"23336:152:26","nodeType":"YulBlock","src":"23336:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"23353:1:26","nodeType":"YulLiteral","src":"23353:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"23356:77:26","nodeType":"YulLiteral","src":"23356:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"23346:6:26","nodeType":"YulIdentifier","src":"23346:6:26"},"nativeSrc":"23346:88:26","nodeType":"YulFunctionCall","src":"23346:88:26"},"nativeSrc":"23346:88:26","nodeType":"YulExpressionStatement","src":"23346:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"23450:1:26","nodeType":"YulLiteral","src":"23450:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"23453:4:26","nodeType":"YulLiteral","src":"23453:4:26","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"23443:6:26","nodeType":"YulIdentifier","src":"23443:6:26"},"nativeSrc":"23443:15:26","nodeType":"YulFunctionCall","src":"23443:15:26"},"nativeSrc":"23443:15:26","nodeType":"YulExpressionStatement","src":"23443:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"23474:1:26","nodeType":"YulLiteral","src":"23474:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"23477:4:26","nodeType":"YulLiteral","src":"23477:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"23467:6:26","nodeType":"YulIdentifier","src":"23467:6:26"},"nativeSrc":"23467:15:26","nodeType":"YulFunctionCall","src":"23467:15:26"},"nativeSrc":"23467:15:26","nodeType":"YulExpressionStatement","src":"23467:15:26"}]},"name":"panic_error_0x32","nativeSrc":"23304:184:26","nodeType":"YulFunctionDefinition","src":"23304:184:26"},{"body":{"nativeSrc":"23766:1110:26","nodeType":"YulBlock","src":"23766:1110:26","statements":[{"nativeSrc":"23776:12:26","nodeType":"YulVariableDeclaration","src":"23776:12:26","value":{"kind":"number","nativeSrc":"23786:2:26","nodeType":"YulLiteral","src":"23786:2:26","type":"","value":"64"},"variables":[{"name":"_1","nativeSrc":"23780:2:26","nodeType":"YulTypedName","src":"23780:2:26","type":""}]},{"nativeSrc":"23797:32:26","nodeType":"YulVariableDeclaration","src":"23797:32:26","value":{"arguments":[{"name":"headStart","nativeSrc":"23815:9:26","nodeType":"YulIdentifier","src":"23815:9:26"},{"kind":"number","nativeSrc":"23826:2:26","nodeType":"YulLiteral","src":"23826:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"23811:3:26","nodeType":"YulIdentifier","src":"23811:3:26"},"nativeSrc":"23811:18:26","nodeType":"YulFunctionCall","src":"23811:18:26"},"variables":[{"name":"tail_1","nativeSrc":"23801:6:26","nodeType":"YulTypedName","src":"23801:6:26","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"23845:9:26","nodeType":"YulIdentifier","src":"23845:9:26"},{"kind":"number","nativeSrc":"23856:2:26","nodeType":"YulLiteral","src":"23856:2:26","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"23838:6:26","nodeType":"YulIdentifier","src":"23838:6:26"},"nativeSrc":"23838:21:26","nodeType":"YulFunctionCall","src":"23838:21:26"},"nativeSrc":"23838:21:26","nodeType":"YulExpressionStatement","src":"23838:21:26"},{"nativeSrc":"23868:17:26","nodeType":"YulVariableDeclaration","src":"23868:17:26","value":{"name":"tail_1","nativeSrc":"23879:6:26","nodeType":"YulIdentifier","src":"23879:6:26"},"variables":[{"name":"pos","nativeSrc":"23872:3:26","nodeType":"YulTypedName","src":"23872:3:26","type":""}]},{"nativeSrc":"23894:27:26","nodeType":"YulVariableDeclaration","src":"23894:27:26","value":{"arguments":[{"name":"value0","nativeSrc":"23914:6:26","nodeType":"YulIdentifier","src":"23914:6:26"}],"functionName":{"name":"mload","nativeSrc":"23908:5:26","nodeType":"YulIdentifier","src":"23908:5:26"},"nativeSrc":"23908:13:26","nodeType":"YulFunctionCall","src":"23908:13:26"},"variables":[{"name":"length","nativeSrc":"23898:6:26","nodeType":"YulTypedName","src":"23898:6:26","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nativeSrc":"23937:6:26","nodeType":"YulIdentifier","src":"23937:6:26"},{"name":"length","nativeSrc":"23945:6:26","nodeType":"YulIdentifier","src":"23945:6:26"}],"functionName":{"name":"mstore","nativeSrc":"23930:6:26","nodeType":"YulIdentifier","src":"23930:6:26"},"nativeSrc":"23930:22:26","nodeType":"YulFunctionCall","src":"23930:22:26"},"nativeSrc":"23930:22:26","nodeType":"YulExpressionStatement","src":"23930:22:26"},{"nativeSrc":"23961:12:26","nodeType":"YulVariableDeclaration","src":"23961:12:26","value":{"kind":"number","nativeSrc":"23971:2:26","nodeType":"YulLiteral","src":"23971:2:26","type":"","value":"96"},"variables":[{"name":"_2","nativeSrc":"23965:2:26","nodeType":"YulTypedName","src":"23965:2:26","type":""}]},{"nativeSrc":"23982:25:26","nodeType":"YulAssignment","src":"23982:25:26","value":{"arguments":[{"name":"headStart","nativeSrc":"23993:9:26","nodeType":"YulIdentifier","src":"23993:9:26"},{"kind":"number","nativeSrc":"24004:2:26","nodeType":"YulLiteral","src":"24004:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"23989:3:26","nodeType":"YulIdentifier","src":"23989:3:26"},"nativeSrc":"23989:18:26","nodeType":"YulFunctionCall","src":"23989:18:26"},"variableNames":[{"name":"pos","nativeSrc":"23982:3:26","nodeType":"YulIdentifier","src":"23982:3:26"}]},{"nativeSrc":"24016:53:26","nodeType":"YulVariableDeclaration","src":"24016:53:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24038:9:26","nodeType":"YulIdentifier","src":"24038:9:26"},{"arguments":[{"kind":"number","nativeSrc":"24053:1:26","nodeType":"YulLiteral","src":"24053:1:26","type":"","value":"5"},{"name":"length","nativeSrc":"24056:6:26","nodeType":"YulIdentifier","src":"24056:6:26"}],"functionName":{"name":"shl","nativeSrc":"24049:3:26","nodeType":"YulIdentifier","src":"24049:3:26"},"nativeSrc":"24049:14:26","nodeType":"YulFunctionCall","src":"24049:14:26"}],"functionName":{"name":"add","nativeSrc":"24034:3:26","nodeType":"YulIdentifier","src":"24034:3:26"},"nativeSrc":"24034:30:26","nodeType":"YulFunctionCall","src":"24034:30:26"},{"kind":"number","nativeSrc":"24066:2:26","nodeType":"YulLiteral","src":"24066:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"24030:3:26","nodeType":"YulIdentifier","src":"24030:3:26"},"nativeSrc":"24030:39:26","nodeType":"YulFunctionCall","src":"24030:39:26"},"variables":[{"name":"tail_2","nativeSrc":"24020:6:26","nodeType":"YulTypedName","src":"24020:6:26","type":""}]},{"nativeSrc":"24078:14:26","nodeType":"YulVariableDeclaration","src":"24078:14:26","value":{"kind":"number","nativeSrc":"24088:4:26","nodeType":"YulLiteral","src":"24088:4:26","type":"","value":"0x20"},"variables":[{"name":"_3","nativeSrc":"24082:2:26","nodeType":"YulTypedName","src":"24082:2:26","type":""}]},{"nativeSrc":"24101:29:26","nodeType":"YulVariableDeclaration","src":"24101:29:26","value":{"arguments":[{"name":"value0","nativeSrc":"24119:6:26","nodeType":"YulIdentifier","src":"24119:6:26"},{"name":"_3","nativeSrc":"24127:2:26","nodeType":"YulIdentifier","src":"24127:2:26"}],"functionName":{"name":"add","nativeSrc":"24115:3:26","nodeType":"YulIdentifier","src":"24115:3:26"},"nativeSrc":"24115:15:26","nodeType":"YulFunctionCall","src":"24115:15:26"},"variables":[{"name":"srcPtr","nativeSrc":"24105:6:26","nodeType":"YulTypedName","src":"24105:6:26","type":""}]},{"nativeSrc":"24139:10:26","nodeType":"YulVariableDeclaration","src":"24139:10:26","value":{"kind":"number","nativeSrc":"24148:1:26","nodeType":"YulLiteral","src":"24148:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"24143:1:26","nodeType":"YulTypedName","src":"24143:1:26","type":""}]},{"body":{"nativeSrc":"24207:543:26","nodeType":"YulBlock","src":"24207:543:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"24228:3:26","nodeType":"YulIdentifier","src":"24228:3:26"},{"arguments":[{"arguments":[{"name":"tail_2","nativeSrc":"24241:6:26","nodeType":"YulIdentifier","src":"24241:6:26"},{"name":"headStart","nativeSrc":"24249:9:26","nodeType":"YulIdentifier","src":"24249:9:26"}],"functionName":{"name":"sub","nativeSrc":"24237:3:26","nodeType":"YulIdentifier","src":"24237:3:26"},"nativeSrc":"24237:22:26","nodeType":"YulFunctionCall","src":"24237:22:26"},{"kind":"number","nativeSrc":"24261:66:26","nodeType":"YulLiteral","src":"24261:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0"}],"functionName":{"name":"add","nativeSrc":"24233:3:26","nodeType":"YulIdentifier","src":"24233:3:26"},"nativeSrc":"24233:95:26","nodeType":"YulFunctionCall","src":"24233:95:26"}],"functionName":{"name":"mstore","nativeSrc":"24221:6:26","nodeType":"YulIdentifier","src":"24221:6:26"},"nativeSrc":"24221:108:26","nodeType":"YulFunctionCall","src":"24221:108:26"},"nativeSrc":"24221:108:26","nodeType":"YulExpressionStatement","src":"24221:108:26"},{"nativeSrc":"24342:23:26","nodeType":"YulVariableDeclaration","src":"24342:23:26","value":{"arguments":[{"name":"srcPtr","nativeSrc":"24358:6:26","nodeType":"YulIdentifier","src":"24358:6:26"}],"functionName":{"name":"mload","nativeSrc":"24352:5:26","nodeType":"YulIdentifier","src":"24352:5:26"},"nativeSrc":"24352:13:26","nodeType":"YulFunctionCall","src":"24352:13:26"},"variables":[{"name":"_4","nativeSrc":"24346:2:26","nodeType":"YulTypedName","src":"24346:2:26","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nativeSrc":"24385:6:26","nodeType":"YulIdentifier","src":"24385:6:26"},{"arguments":[{"arguments":[{"name":"_4","nativeSrc":"24403:2:26","nodeType":"YulIdentifier","src":"24403:2:26"}],"functionName":{"name":"mload","nativeSrc":"24397:5:26","nodeType":"YulIdentifier","src":"24397:5:26"},"nativeSrc":"24397:9:26","nodeType":"YulFunctionCall","src":"24397:9:26"},{"kind":"number","nativeSrc":"24408:42:26","nodeType":"YulLiteral","src":"24408:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"24393:3:26","nodeType":"YulIdentifier","src":"24393:3:26"},"nativeSrc":"24393:58:26","nodeType":"YulFunctionCall","src":"24393:58:26"}],"functionName":{"name":"mstore","nativeSrc":"24378:6:26","nodeType":"YulIdentifier","src":"24378:6:26"},"nativeSrc":"24378:74:26","nodeType":"YulFunctionCall","src":"24378:74:26"},"nativeSrc":"24378:74:26","nodeType":"YulExpressionStatement","src":"24378:74:26"},{"expression":{"arguments":[{"arguments":[{"name":"tail_2","nativeSrc":"24476:6:26","nodeType":"YulIdentifier","src":"24476:6:26"},{"name":"_3","nativeSrc":"24484:2:26","nodeType":"YulIdentifier","src":"24484:2:26"}],"functionName":{"name":"add","nativeSrc":"24472:3:26","nodeType":"YulIdentifier","src":"24472:3:26"},"nativeSrc":"24472:15:26","nodeType":"YulFunctionCall","src":"24472:15:26"},{"arguments":[{"arguments":[{"name":"_4","nativeSrc":"24499:2:26","nodeType":"YulIdentifier","src":"24499:2:26"},{"name":"_3","nativeSrc":"24503:2:26","nodeType":"YulIdentifier","src":"24503:2:26"}],"functionName":{"name":"add","nativeSrc":"24495:3:26","nodeType":"YulIdentifier","src":"24495:3:26"},"nativeSrc":"24495:11:26","nodeType":"YulFunctionCall","src":"24495:11:26"}],"functionName":{"name":"mload","nativeSrc":"24489:5:26","nodeType":"YulIdentifier","src":"24489:5:26"},"nativeSrc":"24489:18:26","nodeType":"YulFunctionCall","src":"24489:18:26"}],"functionName":{"name":"mstore","nativeSrc":"24465:6:26","nodeType":"YulIdentifier","src":"24465:6:26"},"nativeSrc":"24465:43:26","nodeType":"YulFunctionCall","src":"24465:43:26"},"nativeSrc":"24465:43:26","nodeType":"YulExpressionStatement","src":"24465:43:26"},{"nativeSrc":"24521:38:26","nodeType":"YulVariableDeclaration","src":"24521:38:26","value":{"arguments":[{"arguments":[{"name":"_4","nativeSrc":"24551:2:26","nodeType":"YulIdentifier","src":"24551:2:26"},{"name":"_1","nativeSrc":"24555:2:26","nodeType":"YulIdentifier","src":"24555:2:26"}],"functionName":{"name":"add","nativeSrc":"24547:3:26","nodeType":"YulIdentifier","src":"24547:3:26"},"nativeSrc":"24547:11:26","nodeType":"YulFunctionCall","src":"24547:11:26"}],"functionName":{"name":"mload","nativeSrc":"24541:5:26","nodeType":"YulIdentifier","src":"24541:5:26"},"nativeSrc":"24541:18:26","nodeType":"YulFunctionCall","src":"24541:18:26"},"variables":[{"name":"memberValue0","nativeSrc":"24525:12:26","nodeType":"YulTypedName","src":"24525:12:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"tail_2","nativeSrc":"24583:6:26","nodeType":"YulIdentifier","src":"24583:6:26"},{"name":"_1","nativeSrc":"24591:2:26","nodeType":"YulIdentifier","src":"24591:2:26"}],"functionName":{"name":"add","nativeSrc":"24579:3:26","nodeType":"YulIdentifier","src":"24579:3:26"},"nativeSrc":"24579:15:26","nodeType":"YulFunctionCall","src":"24579:15:26"},{"name":"_2","nativeSrc":"24596:2:26","nodeType":"YulIdentifier","src":"24596:2:26"}],"functionName":{"name":"mstore","nativeSrc":"24572:6:26","nodeType":"YulIdentifier","src":"24572:6:26"},"nativeSrc":"24572:27:26","nodeType":"YulFunctionCall","src":"24572:27:26"},"nativeSrc":"24572:27:26","nodeType":"YulExpressionStatement","src":"24572:27:26"},{"nativeSrc":"24612:58:26","nodeType":"YulAssignment","src":"24612:58:26","value":{"arguments":[{"name":"memberValue0","nativeSrc":"24640:12:26","nodeType":"YulIdentifier","src":"24640:12:26"},{"arguments":[{"name":"tail_2","nativeSrc":"24658:6:26","nodeType":"YulIdentifier","src":"24658:6:26"},{"name":"_2","nativeSrc":"24666:2:26","nodeType":"YulIdentifier","src":"24666:2:26"}],"functionName":{"name":"add","nativeSrc":"24654:3:26","nodeType":"YulIdentifier","src":"24654:3:26"},"nativeSrc":"24654:15:26","nodeType":"YulFunctionCall","src":"24654:15:26"}],"functionName":{"name":"abi_encode_string","nativeSrc":"24622:17:26","nodeType":"YulIdentifier","src":"24622:17:26"},"nativeSrc":"24622:48:26","nodeType":"YulFunctionCall","src":"24622:48:26"},"variableNames":[{"name":"tail_2","nativeSrc":"24612:6:26","nodeType":"YulIdentifier","src":"24612:6:26"}]},{"nativeSrc":"24683:25:26","nodeType":"YulAssignment","src":"24683:25:26","value":{"arguments":[{"name":"srcPtr","nativeSrc":"24697:6:26","nodeType":"YulIdentifier","src":"24697:6:26"},{"name":"_3","nativeSrc":"24705:2:26","nodeType":"YulIdentifier","src":"24705:2:26"}],"functionName":{"name":"add","nativeSrc":"24693:3:26","nodeType":"YulIdentifier","src":"24693:3:26"},"nativeSrc":"24693:15:26","nodeType":"YulFunctionCall","src":"24693:15:26"},"variableNames":[{"name":"srcPtr","nativeSrc":"24683:6:26","nodeType":"YulIdentifier","src":"24683:6:26"}]},{"nativeSrc":"24721:19:26","nodeType":"YulAssignment","src":"24721:19:26","value":{"arguments":[{"name":"pos","nativeSrc":"24732:3:26","nodeType":"YulIdentifier","src":"24732:3:26"},{"name":"_3","nativeSrc":"24737:2:26","nodeType":"YulIdentifier","src":"24737:2:26"}],"functionName":{"name":"add","nativeSrc":"24728:3:26","nodeType":"YulIdentifier","src":"24728:3:26"},"nativeSrc":"24728:12:26","nodeType":"YulFunctionCall","src":"24728:12:26"},"variableNames":[{"name":"pos","nativeSrc":"24721:3:26","nodeType":"YulIdentifier","src":"24721:3:26"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"24169:1:26","nodeType":"YulIdentifier","src":"24169:1:26"},{"name":"length","nativeSrc":"24172:6:26","nodeType":"YulIdentifier","src":"24172:6:26"}],"functionName":{"name":"lt","nativeSrc":"24166:2:26","nodeType":"YulIdentifier","src":"24166:2:26"},"nativeSrc":"24166:13:26","nodeType":"YulFunctionCall","src":"24166:13:26"},"nativeSrc":"24158:592:26","nodeType":"YulForLoop","post":{"nativeSrc":"24180:18:26","nodeType":"YulBlock","src":"24180:18:26","statements":[{"nativeSrc":"24182:14:26","nodeType":"YulAssignment","src":"24182:14:26","value":{"arguments":[{"name":"i","nativeSrc":"24191:1:26","nodeType":"YulIdentifier","src":"24191:1:26"},{"kind":"number","nativeSrc":"24194:1:26","nodeType":"YulLiteral","src":"24194:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"24187:3:26","nodeType":"YulIdentifier","src":"24187:3:26"},"nativeSrc":"24187:9:26","nodeType":"YulFunctionCall","src":"24187:9:26"},"variableNames":[{"name":"i","nativeSrc":"24182:1:26","nodeType":"YulIdentifier","src":"24182:1:26"}]}]},"pre":{"nativeSrc":"24162:3:26","nodeType":"YulBlock","src":"24162:3:26","statements":[]},"src":"24158:592:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24770:9:26","nodeType":"YulIdentifier","src":"24770:9:26"},{"name":"_3","nativeSrc":"24781:2:26","nodeType":"YulIdentifier","src":"24781:2:26"}],"functionName":{"name":"add","nativeSrc":"24766:3:26","nodeType":"YulIdentifier","src":"24766:3:26"},"nativeSrc":"24766:18:26","nodeType":"YulFunctionCall","src":"24766:18:26"},{"arguments":[{"name":"tail_2","nativeSrc":"24790:6:26","nodeType":"YulIdentifier","src":"24790:6:26"},{"name":"headStart","nativeSrc":"24798:9:26","nodeType":"YulIdentifier","src":"24798:9:26"}],"functionName":{"name":"sub","nativeSrc":"24786:3:26","nodeType":"YulIdentifier","src":"24786:3:26"},"nativeSrc":"24786:22:26","nodeType":"YulFunctionCall","src":"24786:22:26"}],"functionName":{"name":"mstore","nativeSrc":"24759:6:26","nodeType":"YulIdentifier","src":"24759:6:26"},"nativeSrc":"24759:50:26","nodeType":"YulFunctionCall","src":"24759:50:26"},"nativeSrc":"24759:50:26","nodeType":"YulExpressionStatement","src":"24759:50:26"},{"nativeSrc":"24818:52:26","nodeType":"YulAssignment","src":"24818:52:26","value":{"arguments":[{"name":"value1","nativeSrc":"24855:6:26","nodeType":"YulIdentifier","src":"24855:6:26"},{"name":"tail_2","nativeSrc":"24863:6:26","nodeType":"YulIdentifier","src":"24863:6:26"}],"functionName":{"name":"abi_encode_array_address_dyn","nativeSrc":"24826:28:26","nodeType":"YulIdentifier","src":"24826:28:26"},"nativeSrc":"24826:44:26","nodeType":"YulFunctionCall","src":"24826:44:26"},"variableNames":[{"name":"tail","nativeSrc":"24818:4:26","nodeType":"YulIdentifier","src":"24818:4:26"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_Call_$2582_memory_ptr_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_struct$_Call_$2582_memory_ptr_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"23493:1383:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23727:9:26","nodeType":"YulTypedName","src":"23727:9:26","type":""},{"name":"value1","nativeSrc":"23738:6:26","nodeType":"YulTypedName","src":"23738:6:26","type":""},{"name":"value0","nativeSrc":"23746:6:26","nodeType":"YulTypedName","src":"23746:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23757:4:26","nodeType":"YulTypedName","src":"23757:4:26","type":""}],"src":"23493:1383:26"},{"body":{"nativeSrc":"25048:256:26","nodeType":"YulBlock","src":"25048:256:26","statements":[{"nativeSrc":"25058:26:26","nodeType":"YulAssignment","src":"25058:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"25070:9:26","nodeType":"YulIdentifier","src":"25070:9:26"},{"kind":"number","nativeSrc":"25081:2:26","nodeType":"YulLiteral","src":"25081:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"25066:3:26","nodeType":"YulIdentifier","src":"25066:3:26"},"nativeSrc":"25066:18:26","nodeType":"YulFunctionCall","src":"25066:18:26"},"variableNames":[{"name":"tail","nativeSrc":"25058:4:26","nodeType":"YulIdentifier","src":"25058:4:26"}]},{"nativeSrc":"25093:52:26","nodeType":"YulVariableDeclaration","src":"25093:52:26","value":{"kind":"number","nativeSrc":"25103:42:26","nodeType":"YulLiteral","src":"25103:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"25097:2:26","nodeType":"YulTypedName","src":"25097:2:26","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"25161:9:26","nodeType":"YulIdentifier","src":"25161:9:26"},{"arguments":[{"name":"value0","nativeSrc":"25176:6:26","nodeType":"YulIdentifier","src":"25176:6:26"},{"name":"_1","nativeSrc":"25184:2:26","nodeType":"YulIdentifier","src":"25184:2:26"}],"functionName":{"name":"and","nativeSrc":"25172:3:26","nodeType":"YulIdentifier","src":"25172:3:26"},"nativeSrc":"25172:15:26","nodeType":"YulFunctionCall","src":"25172:15:26"}],"functionName":{"name":"mstore","nativeSrc":"25154:6:26","nodeType":"YulIdentifier","src":"25154:6:26"},"nativeSrc":"25154:34:26","nodeType":"YulFunctionCall","src":"25154:34:26"},"nativeSrc":"25154:34:26","nodeType":"YulExpressionStatement","src":"25154:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25208:9:26","nodeType":"YulIdentifier","src":"25208:9:26"},{"kind":"number","nativeSrc":"25219:2:26","nodeType":"YulLiteral","src":"25219:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25204:3:26","nodeType":"YulIdentifier","src":"25204:3:26"},"nativeSrc":"25204:18:26","nodeType":"YulFunctionCall","src":"25204:18:26"},{"arguments":[{"name":"value1","nativeSrc":"25228:6:26","nodeType":"YulIdentifier","src":"25228:6:26"},{"name":"_1","nativeSrc":"25236:2:26","nodeType":"YulIdentifier","src":"25236:2:26"}],"functionName":{"name":"and","nativeSrc":"25224:3:26","nodeType":"YulIdentifier","src":"25224:3:26"},"nativeSrc":"25224:15:26","nodeType":"YulFunctionCall","src":"25224:15:26"}],"functionName":{"name":"mstore","nativeSrc":"25197:6:26","nodeType":"YulIdentifier","src":"25197:6:26"},"nativeSrc":"25197:43:26","nodeType":"YulFunctionCall","src":"25197:43:26"},"nativeSrc":"25197:43:26","nodeType":"YulExpressionStatement","src":"25197:43:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25260:9:26","nodeType":"YulIdentifier","src":"25260:9:26"},{"kind":"number","nativeSrc":"25271:2:26","nodeType":"YulLiteral","src":"25271:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"25256:3:26","nodeType":"YulIdentifier","src":"25256:3:26"},"nativeSrc":"25256:18:26","nodeType":"YulFunctionCall","src":"25256:18:26"},{"arguments":[{"name":"value2","nativeSrc":"25280:6:26","nodeType":"YulIdentifier","src":"25280:6:26"},{"kind":"number","nativeSrc":"25288:8:26","nodeType":"YulLiteral","src":"25288:8:26","type":"","value":"0xffffff"}],"functionName":{"name":"and","nativeSrc":"25276:3:26","nodeType":"YulIdentifier","src":"25276:3:26"},"nativeSrc":"25276:21:26","nodeType":"YulFunctionCall","src":"25276:21:26"}],"functionName":{"name":"mstore","nativeSrc":"25249:6:26","nodeType":"YulIdentifier","src":"25249:6:26"},"nativeSrc":"25249:49:26","nodeType":"YulFunctionCall","src":"25249:49:26"},"nativeSrc":"25249:49:26","nodeType":"YulExpressionStatement","src":"25249:49:26"}]},"name":"abi_encode_tuple_t_address_t_address_t_rational_3000_by_1__to_t_address_t_address_t_uint24__fromStack_reversed","nativeSrc":"24881:423:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25001:9:26","nodeType":"YulTypedName","src":"25001:9:26","type":""},{"name":"value2","nativeSrc":"25012:6:26","nodeType":"YulTypedName","src":"25012:6:26","type":""},{"name":"value1","nativeSrc":"25020:6:26","nodeType":"YulTypedName","src":"25020:6:26","type":""},{"name":"value0","nativeSrc":"25028:6:26","nodeType":"YulTypedName","src":"25028:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"25039:4:26","nodeType":"YulTypedName","src":"25039:4:26","type":""}],"src":"24881:423:26"},{"body":{"nativeSrc":"25475:256:26","nodeType":"YulBlock","src":"25475:256:26","statements":[{"nativeSrc":"25485:26:26","nodeType":"YulAssignment","src":"25485:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"25497:9:26","nodeType":"YulIdentifier","src":"25497:9:26"},{"kind":"number","nativeSrc":"25508:2:26","nodeType":"YulLiteral","src":"25508:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"25493:3:26","nodeType":"YulIdentifier","src":"25493:3:26"},"nativeSrc":"25493:18:26","nodeType":"YulFunctionCall","src":"25493:18:26"},"variableNames":[{"name":"tail","nativeSrc":"25485:4:26","nodeType":"YulIdentifier","src":"25485:4:26"}]},{"nativeSrc":"25520:52:26","nodeType":"YulVariableDeclaration","src":"25520:52:26","value":{"kind":"number","nativeSrc":"25530:42:26","nodeType":"YulLiteral","src":"25530:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"25524:2:26","nodeType":"YulTypedName","src":"25524:2:26","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"25588:9:26","nodeType":"YulIdentifier","src":"25588:9:26"},{"arguments":[{"name":"value0","nativeSrc":"25603:6:26","nodeType":"YulIdentifier","src":"25603:6:26"},{"name":"_1","nativeSrc":"25611:2:26","nodeType":"YulIdentifier","src":"25611:2:26"}],"functionName":{"name":"and","nativeSrc":"25599:3:26","nodeType":"YulIdentifier","src":"25599:3:26"},"nativeSrc":"25599:15:26","nodeType":"YulFunctionCall","src":"25599:15:26"}],"functionName":{"name":"mstore","nativeSrc":"25581:6:26","nodeType":"YulIdentifier","src":"25581:6:26"},"nativeSrc":"25581:34:26","nodeType":"YulFunctionCall","src":"25581:34:26"},"nativeSrc":"25581:34:26","nodeType":"YulExpressionStatement","src":"25581:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25635:9:26","nodeType":"YulIdentifier","src":"25635:9:26"},{"kind":"number","nativeSrc":"25646:2:26","nodeType":"YulLiteral","src":"25646:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25631:3:26","nodeType":"YulIdentifier","src":"25631:3:26"},"nativeSrc":"25631:18:26","nodeType":"YulFunctionCall","src":"25631:18:26"},{"arguments":[{"name":"value1","nativeSrc":"25655:6:26","nodeType":"YulIdentifier","src":"25655:6:26"},{"name":"_1","nativeSrc":"25663:2:26","nodeType":"YulIdentifier","src":"25663:2:26"}],"functionName":{"name":"and","nativeSrc":"25651:3:26","nodeType":"YulIdentifier","src":"25651:3:26"},"nativeSrc":"25651:15:26","nodeType":"YulFunctionCall","src":"25651:15:26"}],"functionName":{"name":"mstore","nativeSrc":"25624:6:26","nodeType":"YulIdentifier","src":"25624:6:26"},"nativeSrc":"25624:43:26","nodeType":"YulFunctionCall","src":"25624:43:26"},"nativeSrc":"25624:43:26","nodeType":"YulExpressionStatement","src":"25624:43:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25687:9:26","nodeType":"YulIdentifier","src":"25687:9:26"},{"kind":"number","nativeSrc":"25698:2:26","nodeType":"YulLiteral","src":"25698:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"25683:3:26","nodeType":"YulIdentifier","src":"25683:3:26"},"nativeSrc":"25683:18:26","nodeType":"YulFunctionCall","src":"25683:18:26"},{"arguments":[{"name":"value2","nativeSrc":"25707:6:26","nodeType":"YulIdentifier","src":"25707:6:26"},{"kind":"number","nativeSrc":"25715:8:26","nodeType":"YulLiteral","src":"25715:8:26","type":"","value":"0xffffff"}],"functionName":{"name":"and","nativeSrc":"25703:3:26","nodeType":"YulIdentifier","src":"25703:3:26"},"nativeSrc":"25703:21:26","nodeType":"YulFunctionCall","src":"25703:21:26"}],"functionName":{"name":"mstore","nativeSrc":"25676:6:26","nodeType":"YulIdentifier","src":"25676:6:26"},"nativeSrc":"25676:49:26","nodeType":"YulFunctionCall","src":"25676:49:26"},"nativeSrc":"25676:49:26","nodeType":"YulExpressionStatement","src":"25676:49:26"}]},"name":"abi_encode_tuple_t_address_t_address_t_rational_500_by_1__to_t_address_t_address_t_uint24__fromStack_reversed","nativeSrc":"25309:422:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25428:9:26","nodeType":"YulTypedName","src":"25428:9:26","type":""},{"name":"value2","nativeSrc":"25439:6:26","nodeType":"YulTypedName","src":"25439:6:26","type":""},{"name":"value1","nativeSrc":"25447:6:26","nodeType":"YulTypedName","src":"25447:6:26","type":""},{"name":"value0","nativeSrc":"25455:6:26","nodeType":"YulTypedName","src":"25455:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"25466:4:26","nodeType":"YulTypedName","src":"25466:4:26","type":""}],"src":"25309:422:26"},{"body":{"nativeSrc":"25910:172:26","nodeType":"YulBlock","src":"25910:172:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"25927:9:26","nodeType":"YulIdentifier","src":"25927:9:26"},{"kind":"number","nativeSrc":"25938:2:26","nodeType":"YulLiteral","src":"25938:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"25920:6:26","nodeType":"YulIdentifier","src":"25920:6:26"},"nativeSrc":"25920:21:26","nodeType":"YulFunctionCall","src":"25920:21:26"},"nativeSrc":"25920:21:26","nodeType":"YulExpressionStatement","src":"25920:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25961:9:26","nodeType":"YulIdentifier","src":"25961:9:26"},{"kind":"number","nativeSrc":"25972:2:26","nodeType":"YulLiteral","src":"25972:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25957:3:26","nodeType":"YulIdentifier","src":"25957:3:26"},"nativeSrc":"25957:18:26","nodeType":"YulFunctionCall","src":"25957:18:26"},{"kind":"number","nativeSrc":"25977:2:26","nodeType":"YulLiteral","src":"25977:2:26","type":"","value":"22"}],"functionName":{"name":"mstore","nativeSrc":"25950:6:26","nodeType":"YulIdentifier","src":"25950:6:26"},"nativeSrc":"25950:30:26","nodeType":"YulFunctionCall","src":"25950:30:26"},"nativeSrc":"25950:30:26","nodeType":"YulExpressionStatement","src":"25950:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26000:9:26","nodeType":"YulIdentifier","src":"26000:9:26"},{"kind":"number","nativeSrc":"26011:2:26","nodeType":"YulLiteral","src":"26011:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"25996:3:26","nodeType":"YulIdentifier","src":"25996:3:26"},"nativeSrc":"25996:18:26","nodeType":"YulFunctionCall","src":"25996:18:26"},{"hexValue":"556e6973776170466163746f7279206e6f7420736574","kind":"string","nativeSrc":"26016:24:26","nodeType":"YulLiteral","src":"26016:24:26","type":"","value":"UniswapFactory not set"}],"functionName":{"name":"mstore","nativeSrc":"25989:6:26","nodeType":"YulIdentifier","src":"25989:6:26"},"nativeSrc":"25989:52:26","nodeType":"YulFunctionCall","src":"25989:52:26"},"nativeSrc":"25989:52:26","nodeType":"YulExpressionStatement","src":"25989:52:26"},{"nativeSrc":"26050:26:26","nodeType":"YulAssignment","src":"26050:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"26062:9:26","nodeType":"YulIdentifier","src":"26062:9:26"},{"kind":"number","nativeSrc":"26073:2:26","nodeType":"YulLiteral","src":"26073:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"26058:3:26","nodeType":"YulIdentifier","src":"26058:3:26"},"nativeSrc":"26058:18:26","nodeType":"YulFunctionCall","src":"26058:18:26"},"variableNames":[{"name":"tail","nativeSrc":"26050:4:26","nodeType":"YulIdentifier","src":"26050:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_40edaaaeefde7a606ab22e3c37f33984fb3b1e0058b05ccc31b572de63cd1497__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"25736:346:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25887:9:26","nodeType":"YulTypedName","src":"25887:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"25901:4:26","nodeType":"YulTypedName","src":"25901:4:26","type":""}],"src":"25736:346:26"},{"body":{"nativeSrc":"26261:165:26","nodeType":"YulBlock","src":"26261:165:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"26278:9:26","nodeType":"YulIdentifier","src":"26278:9:26"},{"kind":"number","nativeSrc":"26289:2:26","nodeType":"YulLiteral","src":"26289:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"26271:6:26","nodeType":"YulIdentifier","src":"26271:6:26"},"nativeSrc":"26271:21:26","nodeType":"YulFunctionCall","src":"26271:21:26"},"nativeSrc":"26271:21:26","nodeType":"YulExpressionStatement","src":"26271:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26312:9:26","nodeType":"YulIdentifier","src":"26312:9:26"},{"kind":"number","nativeSrc":"26323:2:26","nodeType":"YulLiteral","src":"26323:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26308:3:26","nodeType":"YulIdentifier","src":"26308:3:26"},"nativeSrc":"26308:18:26","nodeType":"YulFunctionCall","src":"26308:18:26"},{"kind":"number","nativeSrc":"26328:2:26","nodeType":"YulLiteral","src":"26328:2:26","type":"","value":"15"}],"functionName":{"name":"mstore","nativeSrc":"26301:6:26","nodeType":"YulIdentifier","src":"26301:6:26"},"nativeSrc":"26301:30:26","nodeType":"YulFunctionCall","src":"26301:30:26"},"nativeSrc":"26301:30:26","nodeType":"YulExpressionStatement","src":"26301:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26351:9:26","nodeType":"YulIdentifier","src":"26351:9:26"},{"kind":"number","nativeSrc":"26362:2:26","nodeType":"YulLiteral","src":"26362:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26347:3:26","nodeType":"YulIdentifier","src":"26347:3:26"},"nativeSrc":"26347:18:26","nodeType":"YulFunctionCall","src":"26347:18:26"},{"hexValue":"574e4154495645206e6f7420736574","kind":"string","nativeSrc":"26367:17:26","nodeType":"YulLiteral","src":"26367:17:26","type":"","value":"WNATIVE not set"}],"functionName":{"name":"mstore","nativeSrc":"26340:6:26","nodeType":"YulIdentifier","src":"26340:6:26"},"nativeSrc":"26340:45:26","nodeType":"YulFunctionCall","src":"26340:45:26"},"nativeSrc":"26340:45:26","nodeType":"YulExpressionStatement","src":"26340:45:26"},{"nativeSrc":"26394:26:26","nodeType":"YulAssignment","src":"26394:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"26406:9:26","nodeType":"YulIdentifier","src":"26406:9:26"},{"kind":"number","nativeSrc":"26417:2:26","nodeType":"YulLiteral","src":"26417:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"26402:3:26","nodeType":"YulIdentifier","src":"26402:3:26"},"nativeSrc":"26402:18:26","nodeType":"YulFunctionCall","src":"26402:18:26"},"variableNames":[{"name":"tail","nativeSrc":"26394:4:26","nodeType":"YulIdentifier","src":"26394:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_277b788f6bc7cefc93f8369ac2f11d44c3d87b9ef59c2dd3a42e3f629340b86f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"26087:339:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26238:9:26","nodeType":"YulTypedName","src":"26238:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26252:4:26","nodeType":"YulTypedName","src":"26252:4:26","type":""}],"src":"26087:339:26"},{"body":{"nativeSrc":"26605:171:26","nodeType":"YulBlock","src":"26605:171:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"26622:9:26","nodeType":"YulIdentifier","src":"26622:9:26"},{"kind":"number","nativeSrc":"26633:2:26","nodeType":"YulLiteral","src":"26633:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"26615:6:26","nodeType":"YulIdentifier","src":"26615:6:26"},"nativeSrc":"26615:21:26","nodeType":"YulFunctionCall","src":"26615:21:26"},"nativeSrc":"26615:21:26","nodeType":"YulExpressionStatement","src":"26615:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26656:9:26","nodeType":"YulIdentifier","src":"26656:9:26"},{"kind":"number","nativeSrc":"26667:2:26","nodeType":"YulLiteral","src":"26667:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26652:3:26","nodeType":"YulIdentifier","src":"26652:3:26"},"nativeSrc":"26652:18:26","nodeType":"YulFunctionCall","src":"26652:18:26"},{"kind":"number","nativeSrc":"26672:2:26","nodeType":"YulLiteral","src":"26672:2:26","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"26645:6:26","nodeType":"YulIdentifier","src":"26645:6:26"},"nativeSrc":"26645:30:26","nodeType":"YulFunctionCall","src":"26645:30:26"},"nativeSrc":"26645:30:26","nodeType":"YulExpressionStatement","src":"26645:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26695:9:26","nodeType":"YulIdentifier","src":"26695:9:26"},{"kind":"number","nativeSrc":"26706:2:26","nodeType":"YulLiteral","src":"26706:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26691:3:26","nodeType":"YulIdentifier","src":"26691:3:26"},"nativeSrc":"26691:18:26","nodeType":"YulFunctionCall","src":"26691:18:26"},{"hexValue":"42616c756e6953776170706572206e6f7420736574","kind":"string","nativeSrc":"26711:23:26","nodeType":"YulLiteral","src":"26711:23:26","type":"","value":"BaluniSwapper not set"}],"functionName":{"name":"mstore","nativeSrc":"26684:6:26","nodeType":"YulIdentifier","src":"26684:6:26"},"nativeSrc":"26684:51:26","nodeType":"YulFunctionCall","src":"26684:51:26"},"nativeSrc":"26684:51:26","nodeType":"YulExpressionStatement","src":"26684:51:26"},{"nativeSrc":"26744:26:26","nodeType":"YulAssignment","src":"26744:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"26756:9:26","nodeType":"YulIdentifier","src":"26756:9:26"},{"kind":"number","nativeSrc":"26767:2:26","nodeType":"YulLiteral","src":"26767:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"26752:3:26","nodeType":"YulIdentifier","src":"26752:3:26"},"nativeSrc":"26752:18:26","nodeType":"YulFunctionCall","src":"26752:18:26"},"variableNames":[{"name":"tail","nativeSrc":"26744:4:26","nodeType":"YulIdentifier","src":"26744:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8a54059e31ba8035a6fc0cc512134c3fd2ca3508fc8500195d25c2966df732b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"26431:345:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26582:9:26","nodeType":"YulTypedName","src":"26582:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26596:4:26","nodeType":"YulTypedName","src":"26596:4:26","type":""}],"src":"26431:345:26"},{"body":{"nativeSrc":"26955:169:26","nodeType":"YulBlock","src":"26955:169:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"26972:9:26","nodeType":"YulIdentifier","src":"26972:9:26"},{"kind":"number","nativeSrc":"26983:2:26","nodeType":"YulLiteral","src":"26983:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"26965:6:26","nodeType":"YulIdentifier","src":"26965:6:26"},"nativeSrc":"26965:21:26","nodeType":"YulFunctionCall","src":"26965:21:26"},"nativeSrc":"26965:21:26","nodeType":"YulExpressionStatement","src":"26965:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27006:9:26","nodeType":"YulIdentifier","src":"27006:9:26"},{"kind":"number","nativeSrc":"27017:2:26","nodeType":"YulLiteral","src":"27017:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27002:3:26","nodeType":"YulIdentifier","src":"27002:3:26"},"nativeSrc":"27002:18:26","nodeType":"YulFunctionCall","src":"27002:18:26"},{"kind":"number","nativeSrc":"27022:2:26","nodeType":"YulLiteral","src":"27022:2:26","type":"","value":"19"}],"functionName":{"name":"mstore","nativeSrc":"26995:6:26","nodeType":"YulIdentifier","src":"26995:6:26"},"nativeSrc":"26995:30:26","nodeType":"YulFunctionCall","src":"26995:30:26"},"nativeSrc":"26995:30:26","nodeType":"YulExpressionStatement","src":"26995:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27045:9:26","nodeType":"YulIdentifier","src":"27045:9:26"},{"kind":"number","nativeSrc":"27056:2:26","nodeType":"YulLiteral","src":"27056:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"27041:3:26","nodeType":"YulIdentifier","src":"27041:3:26"},"nativeSrc":"27041:18:26","nodeType":"YulFunctionCall","src":"27041:18:26"},{"hexValue":"4d756c7469486f7053776170204661696c6564","kind":"string","nativeSrc":"27061:21:26","nodeType":"YulLiteral","src":"27061:21:26","type":"","value":"MultiHopSwap Failed"}],"functionName":{"name":"mstore","nativeSrc":"27034:6:26","nodeType":"YulIdentifier","src":"27034:6:26"},"nativeSrc":"27034:49:26","nodeType":"YulFunctionCall","src":"27034:49:26"},"nativeSrc":"27034:49:26","nodeType":"YulExpressionStatement","src":"27034:49:26"},{"nativeSrc":"27092:26:26","nodeType":"YulAssignment","src":"27092:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"27104:9:26","nodeType":"YulIdentifier","src":"27104:9:26"},{"kind":"number","nativeSrc":"27115:2:26","nodeType":"YulLiteral","src":"27115:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"27100:3:26","nodeType":"YulIdentifier","src":"27100:3:26"},"nativeSrc":"27100:18:26","nodeType":"YulFunctionCall","src":"27100:18:26"},"variableNames":[{"name":"tail","nativeSrc":"27092:4:26","nodeType":"YulIdentifier","src":"27092:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_69c3c275e229957bd624940053bb5e224e915c9b003c39a1899996718abe87b0__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"26781:343:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26932:9:26","nodeType":"YulTypedName","src":"26932:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26946:4:26","nodeType":"YulTypedName","src":"26946:4:26","type":""}],"src":"26781:343:26"},{"body":{"nativeSrc":"27303:161:26","nodeType":"YulBlock","src":"27303:161:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"27320:9:26","nodeType":"YulIdentifier","src":"27320:9:26"},{"kind":"number","nativeSrc":"27331:2:26","nodeType":"YulLiteral","src":"27331:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"27313:6:26","nodeType":"YulIdentifier","src":"27313:6:26"},"nativeSrc":"27313:21:26","nodeType":"YulFunctionCall","src":"27313:21:26"},"nativeSrc":"27313:21:26","nodeType":"YulExpressionStatement","src":"27313:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27354:9:26","nodeType":"YulIdentifier","src":"27354:9:26"},{"kind":"number","nativeSrc":"27365:2:26","nodeType":"YulLiteral","src":"27365:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27350:3:26","nodeType":"YulIdentifier","src":"27350:3:26"},"nativeSrc":"27350:18:26","nodeType":"YulFunctionCall","src":"27350:18:26"},{"kind":"number","nativeSrc":"27370:2:26","nodeType":"YulLiteral","src":"27370:2:26","type":"","value":"11"}],"functionName":{"name":"mstore","nativeSrc":"27343:6:26","nodeType":"YulIdentifier","src":"27343:6:26"},"nativeSrc":"27343:30:26","nodeType":"YulFunctionCall","src":"27343:30:26"},"nativeSrc":"27343:30:26","nodeType":"YulExpressionStatement","src":"27343:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27393:9:26","nodeType":"YulIdentifier","src":"27393:9:26"},{"kind":"number","nativeSrc":"27404:2:26","nodeType":"YulLiteral","src":"27404:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"27389:3:26","nodeType":"YulIdentifier","src":"27389:3:26"},"nativeSrc":"27389:18:26","nodeType":"YulFunctionCall","src":"27389:18:26"},{"hexValue":"53776170204661696c6564","kind":"string","nativeSrc":"27409:13:26","nodeType":"YulLiteral","src":"27409:13:26","type":"","value":"Swap Failed"}],"functionName":{"name":"mstore","nativeSrc":"27382:6:26","nodeType":"YulIdentifier","src":"27382:6:26"},"nativeSrc":"27382:41:26","nodeType":"YulFunctionCall","src":"27382:41:26"},"nativeSrc":"27382:41:26","nodeType":"YulExpressionStatement","src":"27382:41:26"},{"nativeSrc":"27432:26:26","nodeType":"YulAssignment","src":"27432:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"27444:9:26","nodeType":"YulIdentifier","src":"27444:9:26"},{"kind":"number","nativeSrc":"27455:2:26","nodeType":"YulLiteral","src":"27455:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"27440:3:26","nodeType":"YulIdentifier","src":"27440:3:26"},"nativeSrc":"27440:18:26","nodeType":"YulFunctionCall","src":"27440:18:26"},"variableNames":[{"name":"tail","nativeSrc":"27432:4:26","nodeType":"YulIdentifier","src":"27432:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_c26370c748e399efe4c5a302d20f1fe22da5300fc60bdab39924790733506945__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"27129:335:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27280:9:26","nodeType":"YulTypedName","src":"27280:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27294:4:26","nodeType":"YulTypedName","src":"27294:4:26","type":""}],"src":"27129:335:26"},{"body":{"nativeSrc":"27517:77:26","nodeType":"YulBlock","src":"27517:77:26","statements":[{"nativeSrc":"27527:16:26","nodeType":"YulAssignment","src":"27527:16:26","value":{"arguments":[{"name":"x","nativeSrc":"27538:1:26","nodeType":"YulIdentifier","src":"27538:1:26"},{"name":"y","nativeSrc":"27541:1:26","nodeType":"YulIdentifier","src":"27541:1:26"}],"functionName":{"name":"add","nativeSrc":"27534:3:26","nodeType":"YulIdentifier","src":"27534:3:26"},"nativeSrc":"27534:9:26","nodeType":"YulFunctionCall","src":"27534:9:26"},"variableNames":[{"name":"sum","nativeSrc":"27527:3:26","nodeType":"YulIdentifier","src":"27527:3:26"}]},{"body":{"nativeSrc":"27566:22:26","nodeType":"YulBlock","src":"27566:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"27568:16:26","nodeType":"YulIdentifier","src":"27568:16:26"},"nativeSrc":"27568:18:26","nodeType":"YulFunctionCall","src":"27568:18:26"},"nativeSrc":"27568:18:26","nodeType":"YulExpressionStatement","src":"27568:18:26"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"27558:1:26","nodeType":"YulIdentifier","src":"27558:1:26"},{"name":"sum","nativeSrc":"27561:3:26","nodeType":"YulIdentifier","src":"27561:3:26"}],"functionName":{"name":"gt","nativeSrc":"27555:2:26","nodeType":"YulIdentifier","src":"27555:2:26"},"nativeSrc":"27555:10:26","nodeType":"YulFunctionCall","src":"27555:10:26"},"nativeSrc":"27552:36:26","nodeType":"YulIf","src":"27552:36:26"}]},"name":"checked_add_t_uint256","nativeSrc":"27469:125:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"27500:1:26","nodeType":"YulTypedName","src":"27500:1:26","type":""},{"name":"y","nativeSrc":"27503:1:26","nodeType":"YulTypedName","src":"27503:1:26","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"27509:3:26","nodeType":"YulTypedName","src":"27509:3:26","type":""}],"src":"27469:125:26"},{"body":{"nativeSrc":"27773:173:26","nodeType":"YulBlock","src":"27773:173:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"27790:9:26","nodeType":"YulIdentifier","src":"27790:9:26"},{"kind":"number","nativeSrc":"27801:2:26","nodeType":"YulLiteral","src":"27801:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"27783:6:26","nodeType":"YulIdentifier","src":"27783:6:26"},"nativeSrc":"27783:21:26","nodeType":"YulFunctionCall","src":"27783:21:26"},"nativeSrc":"27783:21:26","nodeType":"YulExpressionStatement","src":"27783:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27824:9:26","nodeType":"YulIdentifier","src":"27824:9:26"},{"kind":"number","nativeSrc":"27835:2:26","nodeType":"YulLiteral","src":"27835:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27820:3:26","nodeType":"YulIdentifier","src":"27820:3:26"},"nativeSrc":"27820:18:26","nodeType":"YulFunctionCall","src":"27820:18:26"},{"kind":"number","nativeSrc":"27840:2:26","nodeType":"YulLiteral","src":"27840:2:26","type":"","value":"23"}],"functionName":{"name":"mstore","nativeSrc":"27813:6:26","nodeType":"YulIdentifier","src":"27813:6:26"},"nativeSrc":"27813:30:26","nodeType":"YulFunctionCall","src":"27813:30:26"},"nativeSrc":"27813:30:26","nodeType":"YulExpressionStatement","src":"27813:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27863:9:26","nodeType":"YulIdentifier","src":"27863:9:26"},{"kind":"number","nativeSrc":"27874:2:26","nodeType":"YulLiteral","src":"27874:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"27859:3:26","nodeType":"YulIdentifier","src":"27859:3:26"},"nativeSrc":"27859:18:26","nodeType":"YulFunctionCall","src":"27859:18:26"},{"hexValue":"546f6b656e2076616c756174696f6e206973207a65726f","kind":"string","nativeSrc":"27879:25:26","nodeType":"YulLiteral","src":"27879:25:26","type":"","value":"Token valuation is zero"}],"functionName":{"name":"mstore","nativeSrc":"27852:6:26","nodeType":"YulIdentifier","src":"27852:6:26"},"nativeSrc":"27852:53:26","nodeType":"YulFunctionCall","src":"27852:53:26"},"nativeSrc":"27852:53:26","nodeType":"YulExpressionStatement","src":"27852:53:26"},{"nativeSrc":"27914:26:26","nodeType":"YulAssignment","src":"27914:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"27926:9:26","nodeType":"YulIdentifier","src":"27926:9:26"},{"kind":"number","nativeSrc":"27937:2:26","nodeType":"YulLiteral","src":"27937:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"27922:3:26","nodeType":"YulIdentifier","src":"27922:3:26"},"nativeSrc":"27922:18:26","nodeType":"YulFunctionCall","src":"27922:18:26"},"variableNames":[{"name":"tail","nativeSrc":"27914:4:26","nodeType":"YulIdentifier","src":"27914:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_295121eae2e38ce539c65fbd804cefee3e5836ff4e56c455d35a6afed6773125__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"27599:347:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27750:9:26","nodeType":"YulTypedName","src":"27750:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27764:4:26","nodeType":"YulTypedName","src":"27764:4:26","type":""}],"src":"27599:347:26"},{"body":{"nativeSrc":"28125:177:26","nodeType":"YulBlock","src":"28125:177:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"28142:9:26","nodeType":"YulIdentifier","src":"28142:9:26"},{"kind":"number","nativeSrc":"28153:2:26","nodeType":"YulLiteral","src":"28153:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"28135:6:26","nodeType":"YulIdentifier","src":"28135:6:26"},"nativeSrc":"28135:21:26","nodeType":"YulFunctionCall","src":"28135:21:26"},"nativeSrc":"28135:21:26","nodeType":"YulExpressionStatement","src":"28135:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28176:9:26","nodeType":"YulIdentifier","src":"28176:9:26"},{"kind":"number","nativeSrc":"28187:2:26","nodeType":"YulLiteral","src":"28187:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28172:3:26","nodeType":"YulIdentifier","src":"28172:3:26"},"nativeSrc":"28172:18:26","nodeType":"YulFunctionCall","src":"28172:18:26"},{"kind":"number","nativeSrc":"28192:2:26","nodeType":"YulLiteral","src":"28192:2:26","type":"","value":"27"}],"functionName":{"name":"mstore","nativeSrc":"28165:6:26","nodeType":"YulIdentifier","src":"28165:6:26"},"nativeSrc":"28165:30:26","nodeType":"YulFunctionCall","src":"28165:30:26"},"nativeSrc":"28165:30:26","nodeType":"YulExpressionStatement","src":"28165:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28215:9:26","nodeType":"YulIdentifier","src":"28215:9:26"},{"kind":"number","nativeSrc":"28226:2:26","nodeType":"YulLiteral","src":"28226:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"28211:3:26","nodeType":"YulIdentifier","src":"28211:3:26"},"nativeSrc":"28211:18:26","nodeType":"YulFunctionCall","src":"28211:18:26"},{"hexValue":"546f74616c20737570706c792063616e6e6f74206265207a65726f","kind":"string","nativeSrc":"28231:29:26","nodeType":"YulLiteral","src":"28231:29:26","type":"","value":"Total supply cannot be zero"}],"functionName":{"name":"mstore","nativeSrc":"28204:6:26","nodeType":"YulIdentifier","src":"28204:6:26"},"nativeSrc":"28204:57:26","nodeType":"YulFunctionCall","src":"28204:57:26"},"nativeSrc":"28204:57:26","nodeType":"YulExpressionStatement","src":"28204:57:26"},{"nativeSrc":"28270:26:26","nodeType":"YulAssignment","src":"28270:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"28282:9:26","nodeType":"YulIdentifier","src":"28282:9:26"},{"kind":"number","nativeSrc":"28293:2:26","nodeType":"YulLiteral","src":"28293:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"28278:3:26","nodeType":"YulIdentifier","src":"28278:3:26"},"nativeSrc":"28278:18:26","nodeType":"YulFunctionCall","src":"28278:18:26"},"variableNames":[{"name":"tail","nativeSrc":"28270:4:26","nodeType":"YulIdentifier","src":"28270:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_075182a57f83974087c76763cd3bc4eedd97b16a8f6ac226f0c2ef23a69b575b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"27951:351:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"28102:9:26","nodeType":"YulTypedName","src":"28102:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"28116:4:26","nodeType":"YulTypedName","src":"28116:4:26","type":""}],"src":"27951:351:26"},{"body":{"nativeSrc":"28481:180:26","nodeType":"YulBlock","src":"28481:180:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"28498:9:26","nodeType":"YulIdentifier","src":"28498:9:26"},{"kind":"number","nativeSrc":"28509:2:26","nodeType":"YulLiteral","src":"28509:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"28491:6:26","nodeType":"YulIdentifier","src":"28491:6:26"},"nativeSrc":"28491:21:26","nodeType":"YulFunctionCall","src":"28491:21:26"},"nativeSrc":"28491:21:26","nodeType":"YulExpressionStatement","src":"28491:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28532:9:26","nodeType":"YulIdentifier","src":"28532:9:26"},{"kind":"number","nativeSrc":"28543:2:26","nodeType":"YulLiteral","src":"28543:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28528:3:26","nodeType":"YulIdentifier","src":"28528:3:26"},"nativeSrc":"28528:18:26","nodeType":"YulFunctionCall","src":"28528:18:26"},{"kind":"number","nativeSrc":"28548:2:26","nodeType":"YulLiteral","src":"28548:2:26","type":"","value":"30"}],"functionName":{"name":"mstore","nativeSrc":"28521:6:26","nodeType":"YulIdentifier","src":"28521:6:26"},"nativeSrc":"28521:30:26","nodeType":"YulFunctionCall","src":"28521:30:26"},"nativeSrc":"28521:30:26","nodeType":"YulExpressionStatement","src":"28521:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28571:9:26","nodeType":"YulIdentifier","src":"28571:9:26"},{"kind":"number","nativeSrc":"28582:2:26","nodeType":"YulLiteral","src":"28582:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"28567:3:26","nodeType":"YulIdentifier","src":"28567:3:26"},"nativeSrc":"28567:18:26","nodeType":"YulFunctionCall","src":"28567:18:26"},{"hexValue":"546f6b656e20646563696d616c732073686f756c64206265203c3d203138","kind":"string","nativeSrc":"28587:32:26","nodeType":"YulLiteral","src":"28587:32:26","type":"","value":"Token decimals should be <= 18"}],"functionName":{"name":"mstore","nativeSrc":"28560:6:26","nodeType":"YulIdentifier","src":"28560:6:26"},"nativeSrc":"28560:60:26","nodeType":"YulFunctionCall","src":"28560:60:26"},"nativeSrc":"28560:60:26","nodeType":"YulExpressionStatement","src":"28560:60:26"},{"nativeSrc":"28629:26:26","nodeType":"YulAssignment","src":"28629:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"28641:9:26","nodeType":"YulIdentifier","src":"28641:9:26"},{"kind":"number","nativeSrc":"28652:2:26","nodeType":"YulLiteral","src":"28652:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"28637:3:26","nodeType":"YulIdentifier","src":"28637:3:26"},"nativeSrc":"28637:18:26","nodeType":"YulFunctionCall","src":"28637:18:26"},"variableNames":[{"name":"tail","nativeSrc":"28629:4:26","nodeType":"YulIdentifier","src":"28629:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebe7cb95a2dc7ec969883b54c3194e315832305fa1026cbcfb27ede2b2283804__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"28307:354:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"28458:9:26","nodeType":"YulTypedName","src":"28458:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"28472:4:26","nodeType":"YulTypedName","src":"28472:4:26","type":""}],"src":"28307:354:26"},{"body":{"nativeSrc":"28730:412:26","nodeType":"YulBlock","src":"28730:412:26","statements":[{"nativeSrc":"28740:16:26","nodeType":"YulVariableDeclaration","src":"28740:16:26","value":{"kind":"number","nativeSrc":"28755:1:26","nodeType":"YulLiteral","src":"28755:1:26","type":"","value":"1"},"variables":[{"name":"power_1","nativeSrc":"28744:7:26","nodeType":"YulTypedName","src":"28744:7:26","type":""}]},{"nativeSrc":"28765:10:26","nodeType":"YulAssignment","src":"28765:10:26","value":{"kind":"number","nativeSrc":"28774:1:26","nodeType":"YulLiteral","src":"28774:1:26","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"28765:5:26","nodeType":"YulIdentifier","src":"28765:5:26"}]},{"nativeSrc":"28784:13:26","nodeType":"YulAssignment","src":"28784:13:26","value":{"name":"_base","nativeSrc":"28792:5:26","nodeType":"YulIdentifier","src":"28792:5:26"},"variableNames":[{"name":"base","nativeSrc":"28784:4:26","nodeType":"YulIdentifier","src":"28784:4:26"}]},{"body":{"nativeSrc":"28848:288:26","nodeType":"YulBlock","src":"28848:288:26","statements":[{"body":{"nativeSrc":"28953:22:26","nodeType":"YulBlock","src":"28953:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"28955:16:26","nodeType":"YulIdentifier","src":"28955:16:26"},"nativeSrc":"28955:18:26","nodeType":"YulFunctionCall","src":"28955:18:26"},"nativeSrc":"28955:18:26","nodeType":"YulExpressionStatement","src":"28955:18:26"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"28868:4:26","nodeType":"YulIdentifier","src":"28868:4:26"},{"arguments":[{"kind":"number","nativeSrc":"28878:66:26","nodeType":"YulLiteral","src":"28878:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"base","nativeSrc":"28946:4:26","nodeType":"YulIdentifier","src":"28946:4:26"}],"functionName":{"name":"div","nativeSrc":"28874:3:26","nodeType":"YulIdentifier","src":"28874:3:26"},"nativeSrc":"28874:77:26","nodeType":"YulFunctionCall","src":"28874:77:26"}],"functionName":{"name":"gt","nativeSrc":"28865:2:26","nodeType":"YulIdentifier","src":"28865:2:26"},"nativeSrc":"28865:87:26","nodeType":"YulFunctionCall","src":"28865:87:26"},"nativeSrc":"28862:113:26","nodeType":"YulIf","src":"28862:113:26"},{"body":{"nativeSrc":"29014:29:26","nodeType":"YulBlock","src":"29014:29:26","statements":[{"nativeSrc":"29016:25:26","nodeType":"YulAssignment","src":"29016:25:26","value":{"arguments":[{"name":"power","nativeSrc":"29029:5:26","nodeType":"YulIdentifier","src":"29029:5:26"},{"name":"base","nativeSrc":"29036:4:26","nodeType":"YulIdentifier","src":"29036:4:26"}],"functionName":{"name":"mul","nativeSrc":"29025:3:26","nodeType":"YulIdentifier","src":"29025:3:26"},"nativeSrc":"29025:16:26","nodeType":"YulFunctionCall","src":"29025:16:26"},"variableNames":[{"name":"power","nativeSrc":"29016:5:26","nodeType":"YulIdentifier","src":"29016:5:26"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"28995:8:26","nodeType":"YulIdentifier","src":"28995:8:26"},{"name":"power_1","nativeSrc":"29005:7:26","nodeType":"YulIdentifier","src":"29005:7:26"}],"functionName":{"name":"and","nativeSrc":"28991:3:26","nodeType":"YulIdentifier","src":"28991:3:26"},"nativeSrc":"28991:22:26","nodeType":"YulFunctionCall","src":"28991:22:26"},"nativeSrc":"28988:55:26","nodeType":"YulIf","src":"28988:55:26"},{"nativeSrc":"29056:23:26","nodeType":"YulAssignment","src":"29056:23:26","value":{"arguments":[{"name":"base","nativeSrc":"29068:4:26","nodeType":"YulIdentifier","src":"29068:4:26"},{"name":"base","nativeSrc":"29074:4:26","nodeType":"YulIdentifier","src":"29074:4:26"}],"functionName":{"name":"mul","nativeSrc":"29064:3:26","nodeType":"YulIdentifier","src":"29064:3:26"},"nativeSrc":"29064:15:26","nodeType":"YulFunctionCall","src":"29064:15:26"},"variableNames":[{"name":"base","nativeSrc":"29056:4:26","nodeType":"YulIdentifier","src":"29056:4:26"}]},{"nativeSrc":"29092:34:26","nodeType":"YulAssignment","src":"29092:34:26","value":{"arguments":[{"name":"power_1","nativeSrc":"29108:7:26","nodeType":"YulIdentifier","src":"29108:7:26"},{"name":"exponent","nativeSrc":"29117:8:26","nodeType":"YulIdentifier","src":"29117:8:26"}],"functionName":{"name":"shr","nativeSrc":"29104:3:26","nodeType":"YulIdentifier","src":"29104:3:26"},"nativeSrc":"29104:22:26","nodeType":"YulFunctionCall","src":"29104:22:26"},"variableNames":[{"name":"exponent","nativeSrc":"29092:8:26","nodeType":"YulIdentifier","src":"29092:8:26"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"28817:8:26","nodeType":"YulIdentifier","src":"28817:8:26"},{"name":"power_1","nativeSrc":"28827:7:26","nodeType":"YulIdentifier","src":"28827:7:26"}],"functionName":{"name":"gt","nativeSrc":"28814:2:26","nodeType":"YulIdentifier","src":"28814:2:26"},"nativeSrc":"28814:21:26","nodeType":"YulFunctionCall","src":"28814:21:26"},"nativeSrc":"28806:330:26","nodeType":"YulForLoop","post":{"nativeSrc":"28836:3:26","nodeType":"YulBlock","src":"28836:3:26","statements":[]},"pre":{"nativeSrc":"28810:3:26","nodeType":"YulBlock","src":"28810:3:26","statements":[]},"src":"28806:330:26"}]},"name":"checked_exp_helper","nativeSrc":"28666:476:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nativeSrc":"28694:5:26","nodeType":"YulTypedName","src":"28694:5:26","type":""},{"name":"exponent","nativeSrc":"28701:8:26","nodeType":"YulTypedName","src":"28701:8:26","type":""}],"returnVariables":[{"name":"power","nativeSrc":"28714:5:26","nodeType":"YulTypedName","src":"28714:5:26","type":""},{"name":"base","nativeSrc":"28721:4:26","nodeType":"YulTypedName","src":"28721:4:26","type":""}],"src":"28666:476:26"},{"body":{"nativeSrc":"29206:807:26","nodeType":"YulBlock","src":"29206:807:26","statements":[{"body":{"nativeSrc":"29244:52:26","nodeType":"YulBlock","src":"29244:52:26","statements":[{"nativeSrc":"29258:10:26","nodeType":"YulAssignment","src":"29258:10:26","value":{"kind":"number","nativeSrc":"29267:1:26","nodeType":"YulLiteral","src":"29267:1:26","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"29258:5:26","nodeType":"YulIdentifier","src":"29258:5:26"}]},{"nativeSrc":"29281:5:26","nodeType":"YulLeave","src":"29281:5:26"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"29226:8:26","nodeType":"YulIdentifier","src":"29226:8:26"}],"functionName":{"name":"iszero","nativeSrc":"29219:6:26","nodeType":"YulIdentifier","src":"29219:6:26"},"nativeSrc":"29219:16:26","nodeType":"YulFunctionCall","src":"29219:16:26"},"nativeSrc":"29216:80:26","nodeType":"YulIf","src":"29216:80:26"},{"body":{"nativeSrc":"29329:52:26","nodeType":"YulBlock","src":"29329:52:26","statements":[{"nativeSrc":"29343:10:26","nodeType":"YulAssignment","src":"29343:10:26","value":{"kind":"number","nativeSrc":"29352:1:26","nodeType":"YulLiteral","src":"29352:1:26","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"29343:5:26","nodeType":"YulIdentifier","src":"29343:5:26"}]},{"nativeSrc":"29366:5:26","nodeType":"YulLeave","src":"29366:5:26"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"29315:4:26","nodeType":"YulIdentifier","src":"29315:4:26"}],"functionName":{"name":"iszero","nativeSrc":"29308:6:26","nodeType":"YulIdentifier","src":"29308:6:26"},"nativeSrc":"29308:12:26","nodeType":"YulFunctionCall","src":"29308:12:26"},"nativeSrc":"29305:76:26","nodeType":"YulIf","src":"29305:76:26"},{"cases":[{"body":{"nativeSrc":"29417:52:26","nodeType":"YulBlock","src":"29417:52:26","statements":[{"nativeSrc":"29431:10:26","nodeType":"YulAssignment","src":"29431:10:26","value":{"kind":"number","nativeSrc":"29440:1:26","nodeType":"YulLiteral","src":"29440:1:26","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"29431:5:26","nodeType":"YulIdentifier","src":"29431:5:26"}]},{"nativeSrc":"29454:5:26","nodeType":"YulLeave","src":"29454:5:26"}]},"nativeSrc":"29410:59:26","nodeType":"YulCase","src":"29410:59:26","value":{"kind":"number","nativeSrc":"29415:1:26","nodeType":"YulLiteral","src":"29415:1:26","type":"","value":"1"}},{"body":{"nativeSrc":"29485:123:26","nodeType":"YulBlock","src":"29485:123:26","statements":[{"body":{"nativeSrc":"29520:22:26","nodeType":"YulBlock","src":"29520:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"29522:16:26","nodeType":"YulIdentifier","src":"29522:16:26"},"nativeSrc":"29522:18:26","nodeType":"YulFunctionCall","src":"29522:18:26"},"nativeSrc":"29522:18:26","nodeType":"YulExpressionStatement","src":"29522:18:26"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"29505:8:26","nodeType":"YulIdentifier","src":"29505:8:26"},{"kind":"number","nativeSrc":"29515:3:26","nodeType":"YulLiteral","src":"29515:3:26","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"29502:2:26","nodeType":"YulIdentifier","src":"29502:2:26"},"nativeSrc":"29502:17:26","nodeType":"YulFunctionCall","src":"29502:17:26"},"nativeSrc":"29499:43:26","nodeType":"YulIf","src":"29499:43:26"},{"nativeSrc":"29555:25:26","nodeType":"YulAssignment","src":"29555:25:26","value":{"arguments":[{"name":"exponent","nativeSrc":"29568:8:26","nodeType":"YulIdentifier","src":"29568:8:26"},{"kind":"number","nativeSrc":"29578:1:26","nodeType":"YulLiteral","src":"29578:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"29564:3:26","nodeType":"YulIdentifier","src":"29564:3:26"},"nativeSrc":"29564:16:26","nodeType":"YulFunctionCall","src":"29564:16:26"},"variableNames":[{"name":"power","nativeSrc":"29555:5:26","nodeType":"YulIdentifier","src":"29555:5:26"}]},{"nativeSrc":"29593:5:26","nodeType":"YulLeave","src":"29593:5:26"}]},"nativeSrc":"29478:130:26","nodeType":"YulCase","src":"29478:130:26","value":{"kind":"number","nativeSrc":"29483:1:26","nodeType":"YulLiteral","src":"29483:1:26","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"29397:4:26","nodeType":"YulIdentifier","src":"29397:4:26"},"nativeSrc":"29390:218:26","nodeType":"YulSwitch","src":"29390:218:26"},{"body":{"nativeSrc":"29706:70:26","nodeType":"YulBlock","src":"29706:70:26","statements":[{"nativeSrc":"29720:28:26","nodeType":"YulAssignment","src":"29720:28:26","value":{"arguments":[{"name":"base","nativeSrc":"29733:4:26","nodeType":"YulIdentifier","src":"29733:4:26"},{"name":"exponent","nativeSrc":"29739:8:26","nodeType":"YulIdentifier","src":"29739:8:26"}],"functionName":{"name":"exp","nativeSrc":"29729:3:26","nodeType":"YulIdentifier","src":"29729:3:26"},"nativeSrc":"29729:19:26","nodeType":"YulFunctionCall","src":"29729:19:26"},"variableNames":[{"name":"power","nativeSrc":"29720:5:26","nodeType":"YulIdentifier","src":"29720:5:26"}]},{"nativeSrc":"29761:5:26","nodeType":"YulLeave","src":"29761:5:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"29630:4:26","nodeType":"YulIdentifier","src":"29630:4:26"},{"kind":"number","nativeSrc":"29636:2:26","nodeType":"YulLiteral","src":"29636:2:26","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"29627:2:26","nodeType":"YulIdentifier","src":"29627:2:26"},"nativeSrc":"29627:12:26","nodeType":"YulFunctionCall","src":"29627:12:26"},{"arguments":[{"name":"exponent","nativeSrc":"29644:8:26","nodeType":"YulIdentifier","src":"29644:8:26"},{"kind":"number","nativeSrc":"29654:2:26","nodeType":"YulLiteral","src":"29654:2:26","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"29641:2:26","nodeType":"YulIdentifier","src":"29641:2:26"},"nativeSrc":"29641:16:26","nodeType":"YulFunctionCall","src":"29641:16:26"}],"functionName":{"name":"and","nativeSrc":"29623:3:26","nodeType":"YulIdentifier","src":"29623:3:26"},"nativeSrc":"29623:35:26","nodeType":"YulFunctionCall","src":"29623:35:26"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"29667:4:26","nodeType":"YulIdentifier","src":"29667:4:26"},{"kind":"number","nativeSrc":"29673:3:26","nodeType":"YulLiteral","src":"29673:3:26","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"29664:2:26","nodeType":"YulIdentifier","src":"29664:2:26"},"nativeSrc":"29664:13:26","nodeType":"YulFunctionCall","src":"29664:13:26"},{"arguments":[{"name":"exponent","nativeSrc":"29682:8:26","nodeType":"YulIdentifier","src":"29682:8:26"},{"kind":"number","nativeSrc":"29692:2:26","nodeType":"YulLiteral","src":"29692:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"29679:2:26","nodeType":"YulIdentifier","src":"29679:2:26"},"nativeSrc":"29679:16:26","nodeType":"YulFunctionCall","src":"29679:16:26"}],"functionName":{"name":"and","nativeSrc":"29660:3:26","nodeType":"YulIdentifier","src":"29660:3:26"},"nativeSrc":"29660:36:26","nodeType":"YulFunctionCall","src":"29660:36:26"}],"functionName":{"name":"or","nativeSrc":"29620:2:26","nodeType":"YulIdentifier","src":"29620:2:26"},"nativeSrc":"29620:77:26","nodeType":"YulFunctionCall","src":"29620:77:26"},"nativeSrc":"29617:159:26","nodeType":"YulIf","src":"29617:159:26"},{"nativeSrc":"29785:57:26","nodeType":"YulVariableDeclaration","src":"29785:57:26","value":{"arguments":[{"name":"base","nativeSrc":"29827:4:26","nodeType":"YulIdentifier","src":"29827:4:26"},{"name":"exponent","nativeSrc":"29833:8:26","nodeType":"YulIdentifier","src":"29833:8:26"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"29808:18:26","nodeType":"YulIdentifier","src":"29808:18:26"},"nativeSrc":"29808:34:26","nodeType":"YulFunctionCall","src":"29808:34:26"},"variables":[{"name":"power_1","nativeSrc":"29789:7:26","nodeType":"YulTypedName","src":"29789:7:26","type":""},{"name":"base_1","nativeSrc":"29798:6:26","nodeType":"YulTypedName","src":"29798:6:26","type":""}]},{"body":{"nativeSrc":"29947:22:26","nodeType":"YulBlock","src":"29947:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"29949:16:26","nodeType":"YulIdentifier","src":"29949:16:26"},"nativeSrc":"29949:18:26","nodeType":"YulFunctionCall","src":"29949:18:26"},"nativeSrc":"29949:18:26","nodeType":"YulExpressionStatement","src":"29949:18:26"}]},"condition":{"arguments":[{"name":"power_1","nativeSrc":"29857:7:26","nodeType":"YulIdentifier","src":"29857:7:26"},{"arguments":[{"kind":"number","nativeSrc":"29870:66:26","nodeType":"YulLiteral","src":"29870:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"base_1","nativeSrc":"29938:6:26","nodeType":"YulIdentifier","src":"29938:6:26"}],"functionName":{"name":"div","nativeSrc":"29866:3:26","nodeType":"YulIdentifier","src":"29866:3:26"},"nativeSrc":"29866:79:26","nodeType":"YulFunctionCall","src":"29866:79:26"}],"functionName":{"name":"gt","nativeSrc":"29854:2:26","nodeType":"YulIdentifier","src":"29854:2:26"},"nativeSrc":"29854:92:26","nodeType":"YulFunctionCall","src":"29854:92:26"},"nativeSrc":"29851:118:26","nodeType":"YulIf","src":"29851:118:26"},{"nativeSrc":"29978:29:26","nodeType":"YulAssignment","src":"29978:29:26","value":{"arguments":[{"name":"power_1","nativeSrc":"29991:7:26","nodeType":"YulIdentifier","src":"29991:7:26"},{"name":"base_1","nativeSrc":"30000:6:26","nodeType":"YulIdentifier","src":"30000:6:26"}],"functionName":{"name":"mul","nativeSrc":"29987:3:26","nodeType":"YulIdentifier","src":"29987:3:26"},"nativeSrc":"29987:20:26","nodeType":"YulFunctionCall","src":"29987:20:26"},"variableNames":[{"name":"power","nativeSrc":"29978:5:26","nodeType":"YulIdentifier","src":"29978:5:26"}]}]},"name":"checked_exp_unsigned","nativeSrc":"29147:866:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"29177:4:26","nodeType":"YulTypedName","src":"29177:4:26","type":""},{"name":"exponent","nativeSrc":"29183:8:26","nodeType":"YulTypedName","src":"29183:8:26","type":""}],"returnVariables":[{"name":"power","nativeSrc":"29196:5:26","nodeType":"YulTypedName","src":"29196:5:26","type":""}],"src":"29147:866:26"},{"body":{"nativeSrc":"30088:61:26","nodeType":"YulBlock","src":"30088:61:26","statements":[{"nativeSrc":"30098:45:26","nodeType":"YulAssignment","src":"30098:45:26","value":{"arguments":[{"name":"base","nativeSrc":"30128:4:26","nodeType":"YulIdentifier","src":"30128:4:26"},{"name":"exponent","nativeSrc":"30134:8:26","nodeType":"YulIdentifier","src":"30134:8:26"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"30107:20:26","nodeType":"YulIdentifier","src":"30107:20:26"},"nativeSrc":"30107:36:26","nodeType":"YulFunctionCall","src":"30107:36:26"},"variableNames":[{"name":"power","nativeSrc":"30098:5:26","nodeType":"YulIdentifier","src":"30098:5:26"}]}]},"name":"checked_exp_t_uint256_t_uint256","nativeSrc":"30018:131:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"30059:4:26","nodeType":"YulTypedName","src":"30059:4:26","type":""},{"name":"exponent","nativeSrc":"30065:8:26","nodeType":"YulTypedName","src":"30065:8:26","type":""}],"returnVariables":[{"name":"power","nativeSrc":"30078:5:26","nodeType":"YulTypedName","src":"30078:5:26","type":""}],"src":"30018:131:26"},{"body":{"nativeSrc":"30311:211:26","nodeType":"YulBlock","src":"30311:211:26","statements":[{"nativeSrc":"30321:26:26","nodeType":"YulAssignment","src":"30321:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"30333:9:26","nodeType":"YulIdentifier","src":"30333:9:26"},{"kind":"number","nativeSrc":"30344:2:26","nodeType":"YulLiteral","src":"30344:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"30329:3:26","nodeType":"YulIdentifier","src":"30329:3:26"},"nativeSrc":"30329:18:26","nodeType":"YulFunctionCall","src":"30329:18:26"},"variableNames":[{"name":"tail","nativeSrc":"30321:4:26","nodeType":"YulIdentifier","src":"30321:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"30363:9:26","nodeType":"YulIdentifier","src":"30363:9:26"},{"arguments":[{"name":"value0","nativeSrc":"30378:6:26","nodeType":"YulIdentifier","src":"30378:6:26"},{"kind":"number","nativeSrc":"30386:42:26","nodeType":"YulLiteral","src":"30386:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"30374:3:26","nodeType":"YulIdentifier","src":"30374:3:26"},"nativeSrc":"30374:55:26","nodeType":"YulFunctionCall","src":"30374:55:26"}],"functionName":{"name":"mstore","nativeSrc":"30356:6:26","nodeType":"YulIdentifier","src":"30356:6:26"},"nativeSrc":"30356:74:26","nodeType":"YulFunctionCall","src":"30356:74:26"},"nativeSrc":"30356:74:26","nodeType":"YulExpressionStatement","src":"30356:74:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"30450:9:26","nodeType":"YulIdentifier","src":"30450:9:26"},{"kind":"number","nativeSrc":"30461:2:26","nodeType":"YulLiteral","src":"30461:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"30446:3:26","nodeType":"YulIdentifier","src":"30446:3:26"},"nativeSrc":"30446:18:26","nodeType":"YulFunctionCall","src":"30446:18:26"},{"name":"value1","nativeSrc":"30466:6:26","nodeType":"YulIdentifier","src":"30466:6:26"}],"functionName":{"name":"mstore","nativeSrc":"30439:6:26","nodeType":"YulIdentifier","src":"30439:6:26"},"nativeSrc":"30439:34:26","nodeType":"YulFunctionCall","src":"30439:34:26"},"nativeSrc":"30439:34:26","nodeType":"YulExpressionStatement","src":"30439:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"30493:9:26","nodeType":"YulIdentifier","src":"30493:9:26"},{"kind":"number","nativeSrc":"30504:2:26","nodeType":"YulLiteral","src":"30504:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"30489:3:26","nodeType":"YulIdentifier","src":"30489:3:26"},"nativeSrc":"30489:18:26","nodeType":"YulFunctionCall","src":"30489:18:26"},{"name":"value2","nativeSrc":"30509:6:26","nodeType":"YulIdentifier","src":"30509:6:26"}],"functionName":{"name":"mstore","nativeSrc":"30482:6:26","nodeType":"YulIdentifier","src":"30482:6:26"},"nativeSrc":"30482:34:26","nodeType":"YulFunctionCall","src":"30482:34:26"},"nativeSrc":"30482:34:26","nodeType":"YulExpressionStatement","src":"30482:34:26"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"30154:368:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"30264:9:26","nodeType":"YulTypedName","src":"30264:9:26","type":""},{"name":"value2","nativeSrc":"30275:6:26","nodeType":"YulTypedName","src":"30275:6:26","type":""},{"name":"value1","nativeSrc":"30283:6:26","nodeType":"YulTypedName","src":"30283:6:26","type":""},{"name":"value0","nativeSrc":"30291:6:26","nodeType":"YulTypedName","src":"30291:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"30302:4:26","nodeType":"YulTypedName","src":"30302:4:26","type":""}],"src":"30154:368:26"},{"body":{"nativeSrc":"30608:103:26","nodeType":"YulBlock","src":"30608:103:26","statements":[{"body":{"nativeSrc":"30654:16:26","nodeType":"YulBlock","src":"30654:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"30663:1:26","nodeType":"YulLiteral","src":"30663:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"30666:1:26","nodeType":"YulLiteral","src":"30666:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"30656:6:26","nodeType":"YulIdentifier","src":"30656:6:26"},"nativeSrc":"30656:12:26","nodeType":"YulFunctionCall","src":"30656:12:26"},"nativeSrc":"30656:12:26","nodeType":"YulExpressionStatement","src":"30656:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"30629:7:26","nodeType":"YulIdentifier","src":"30629:7:26"},{"name":"headStart","nativeSrc":"30638:9:26","nodeType":"YulIdentifier","src":"30638:9:26"}],"functionName":{"name":"sub","nativeSrc":"30625:3:26","nodeType":"YulIdentifier","src":"30625:3:26"},"nativeSrc":"30625:23:26","nodeType":"YulFunctionCall","src":"30625:23:26"},{"kind":"number","nativeSrc":"30650:2:26","nodeType":"YulLiteral","src":"30650:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"30621:3:26","nodeType":"YulIdentifier","src":"30621:3:26"},"nativeSrc":"30621:32:26","nodeType":"YulFunctionCall","src":"30621:32:26"},"nativeSrc":"30618:52:26","nodeType":"YulIf","src":"30618:52:26"},{"nativeSrc":"30679:26:26","nodeType":"YulAssignment","src":"30679:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"30695:9:26","nodeType":"YulIdentifier","src":"30695:9:26"}],"functionName":{"name":"mload","nativeSrc":"30689:5:26","nodeType":"YulIdentifier","src":"30689:5:26"},"nativeSrc":"30689:16:26","nodeType":"YulFunctionCall","src":"30689:16:26"},"variableNames":[{"name":"value0","nativeSrc":"30679:6:26","nodeType":"YulIdentifier","src":"30679:6:26"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"30527:184:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"30574:9:26","nodeType":"YulTypedName","src":"30574:9:26","type":""},{"name":"dataEnd","nativeSrc":"30585:7:26","nodeType":"YulTypedName","src":"30585:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"30597:6:26","nodeType":"YulTypedName","src":"30597:6:26","type":""}],"src":"30527:184:26"},{"body":{"nativeSrc":"30748:152:26","nodeType":"YulBlock","src":"30748:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"30765:1:26","nodeType":"YulLiteral","src":"30765:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"30768:77:26","nodeType":"YulLiteral","src":"30768:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"30758:6:26","nodeType":"YulIdentifier","src":"30758:6:26"},"nativeSrc":"30758:88:26","nodeType":"YulFunctionCall","src":"30758:88:26"},"nativeSrc":"30758:88:26","nodeType":"YulExpressionStatement","src":"30758:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"30862:1:26","nodeType":"YulLiteral","src":"30862:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"30865:4:26","nodeType":"YulLiteral","src":"30865:4:26","type":"","value":"0x31"}],"functionName":{"name":"mstore","nativeSrc":"30855:6:26","nodeType":"YulIdentifier","src":"30855:6:26"},"nativeSrc":"30855:15:26","nodeType":"YulFunctionCall","src":"30855:15:26"},"nativeSrc":"30855:15:26","nodeType":"YulExpressionStatement","src":"30855:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"30886:1:26","nodeType":"YulLiteral","src":"30886:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"30889:4:26","nodeType":"YulLiteral","src":"30889:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"30879:6:26","nodeType":"YulIdentifier","src":"30879:6:26"},"nativeSrc":"30879:15:26","nodeType":"YulFunctionCall","src":"30879:15:26"},"nativeSrc":"30879:15:26","nodeType":"YulExpressionStatement","src":"30879:15:26"}]},"name":"panic_error_0x31","nativeSrc":"30716:184:26","nodeType":"YulFunctionDefinition","src":"30716:184:26"},{"body":{"nativeSrc":"30961:65:26","nodeType":"YulBlock","src":"30961:65:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"30978:1:26","nodeType":"YulLiteral","src":"30978:1:26","type":"","value":"0"},{"name":"ptr","nativeSrc":"30981:3:26","nodeType":"YulIdentifier","src":"30981:3:26"}],"functionName":{"name":"mstore","nativeSrc":"30971:6:26","nodeType":"YulIdentifier","src":"30971:6:26"},"nativeSrc":"30971:14:26","nodeType":"YulFunctionCall","src":"30971:14:26"},"nativeSrc":"30971:14:26","nodeType":"YulExpressionStatement","src":"30971:14:26"},{"nativeSrc":"30994:26:26","nodeType":"YulAssignment","src":"30994:26:26","value":{"arguments":[{"kind":"number","nativeSrc":"31012:1:26","nodeType":"YulLiteral","src":"31012:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"31015:4:26","nodeType":"YulLiteral","src":"31015:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"31002:9:26","nodeType":"YulIdentifier","src":"31002:9:26"},"nativeSrc":"31002:18:26","nodeType":"YulFunctionCall","src":"31002:18:26"},"variableNames":[{"name":"data","nativeSrc":"30994:4:26","nodeType":"YulIdentifier","src":"30994:4:26"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"30905:121:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"30944:3:26","nodeType":"YulTypedName","src":"30944:3:26","type":""}],"returnVariables":[{"name":"data","nativeSrc":"30952:4:26","nodeType":"YulTypedName","src":"30952:4:26","type":""}],"src":"30905:121:26"},{"body":{"nativeSrc":"31112:437:26","nodeType":"YulBlock","src":"31112:437:26","statements":[{"body":{"nativeSrc":"31145:398:26","nodeType":"YulBlock","src":"31145:398:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"31166:1:26","nodeType":"YulLiteral","src":"31166:1:26","type":"","value":"0"},{"name":"array","nativeSrc":"31169:5:26","nodeType":"YulIdentifier","src":"31169:5:26"}],"functionName":{"name":"mstore","nativeSrc":"31159:6:26","nodeType":"YulIdentifier","src":"31159:6:26"},"nativeSrc":"31159:16:26","nodeType":"YulFunctionCall","src":"31159:16:26"},"nativeSrc":"31159:16:26","nodeType":"YulExpressionStatement","src":"31159:16:26"},{"nativeSrc":"31188:30:26","nodeType":"YulVariableDeclaration","src":"31188:30:26","value":{"arguments":[{"kind":"number","nativeSrc":"31210:1:26","nodeType":"YulLiteral","src":"31210:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"31213:4:26","nodeType":"YulLiteral","src":"31213:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"31200:9:26","nodeType":"YulIdentifier","src":"31200:9:26"},"nativeSrc":"31200:18:26","nodeType":"YulFunctionCall","src":"31200:18:26"},"variables":[{"name":"data","nativeSrc":"31192:4:26","nodeType":"YulTypedName","src":"31192:4:26","type":""}]},{"nativeSrc":"31231:57:26","nodeType":"YulVariableDeclaration","src":"31231:57:26","value":{"arguments":[{"name":"data","nativeSrc":"31254:4:26","nodeType":"YulIdentifier","src":"31254:4:26"},{"arguments":[{"kind":"number","nativeSrc":"31264:1:26","nodeType":"YulLiteral","src":"31264:1:26","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"31271:10:26","nodeType":"YulIdentifier","src":"31271:10:26"},{"kind":"number","nativeSrc":"31283:2:26","nodeType":"YulLiteral","src":"31283:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"31267:3:26","nodeType":"YulIdentifier","src":"31267:3:26"},"nativeSrc":"31267:19:26","nodeType":"YulFunctionCall","src":"31267:19:26"}],"functionName":{"name":"shr","nativeSrc":"31260:3:26","nodeType":"YulIdentifier","src":"31260:3:26"},"nativeSrc":"31260:27:26","nodeType":"YulFunctionCall","src":"31260:27:26"}],"functionName":{"name":"add","nativeSrc":"31250:3:26","nodeType":"YulIdentifier","src":"31250:3:26"},"nativeSrc":"31250:38:26","nodeType":"YulFunctionCall","src":"31250:38:26"},"variables":[{"name":"deleteStart","nativeSrc":"31235:11:26","nodeType":"YulTypedName","src":"31235:11:26","type":""}]},{"body":{"nativeSrc":"31325:23:26","nodeType":"YulBlock","src":"31325:23:26","statements":[{"nativeSrc":"31327:19:26","nodeType":"YulAssignment","src":"31327:19:26","value":{"name":"data","nativeSrc":"31342:4:26","nodeType":"YulIdentifier","src":"31342:4:26"},"variableNames":[{"name":"deleteStart","nativeSrc":"31327:11:26","nodeType":"YulIdentifier","src":"31327:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"31307:10:26","nodeType":"YulIdentifier","src":"31307:10:26"},{"kind":"number","nativeSrc":"31319:4:26","nodeType":"YulLiteral","src":"31319:4:26","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"31304:2:26","nodeType":"YulIdentifier","src":"31304:2:26"},"nativeSrc":"31304:20:26","nodeType":"YulFunctionCall","src":"31304:20:26"},"nativeSrc":"31301:47:26","nodeType":"YulIf","src":"31301:47:26"},{"nativeSrc":"31361:41:26","nodeType":"YulVariableDeclaration","src":"31361:41:26","value":{"arguments":[{"name":"data","nativeSrc":"31375:4:26","nodeType":"YulIdentifier","src":"31375:4:26"},{"arguments":[{"kind":"number","nativeSrc":"31385:1:26","nodeType":"YulLiteral","src":"31385:1:26","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"31392:3:26","nodeType":"YulIdentifier","src":"31392:3:26"},{"kind":"number","nativeSrc":"31397:2:26","nodeType":"YulLiteral","src":"31397:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"31388:3:26","nodeType":"YulIdentifier","src":"31388:3:26"},"nativeSrc":"31388:12:26","nodeType":"YulFunctionCall","src":"31388:12:26"}],"functionName":{"name":"shr","nativeSrc":"31381:3:26","nodeType":"YulIdentifier","src":"31381:3:26"},"nativeSrc":"31381:20:26","nodeType":"YulFunctionCall","src":"31381:20:26"}],"functionName":{"name":"add","nativeSrc":"31371:3:26","nodeType":"YulIdentifier","src":"31371:3:26"},"nativeSrc":"31371:31:26","nodeType":"YulFunctionCall","src":"31371:31:26"},"variables":[{"name":"_1","nativeSrc":"31365:2:26","nodeType":"YulTypedName","src":"31365:2:26","type":""}]},{"nativeSrc":"31415:24:26","nodeType":"YulVariableDeclaration","src":"31415:24:26","value":{"name":"deleteStart","nativeSrc":"31428:11:26","nodeType":"YulIdentifier","src":"31428:11:26"},"variables":[{"name":"start","nativeSrc":"31419:5:26","nodeType":"YulTypedName","src":"31419:5:26","type":""}]},{"body":{"nativeSrc":"31513:20:26","nodeType":"YulBlock","src":"31513:20:26","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"31522:5:26","nodeType":"YulIdentifier","src":"31522:5:26"},{"kind":"number","nativeSrc":"31529:1:26","nodeType":"YulLiteral","src":"31529:1:26","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"31515:6:26","nodeType":"YulIdentifier","src":"31515:6:26"},"nativeSrc":"31515:16:26","nodeType":"YulFunctionCall","src":"31515:16:26"},"nativeSrc":"31515:16:26","nodeType":"YulExpressionStatement","src":"31515:16:26"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"31463:5:26","nodeType":"YulIdentifier","src":"31463:5:26"},{"name":"_1","nativeSrc":"31470:2:26","nodeType":"YulIdentifier","src":"31470:2:26"}],"functionName":{"name":"lt","nativeSrc":"31460:2:26","nodeType":"YulIdentifier","src":"31460:2:26"},"nativeSrc":"31460:13:26","nodeType":"YulFunctionCall","src":"31460:13:26"},"nativeSrc":"31452:81:26","nodeType":"YulForLoop","post":{"nativeSrc":"31474:26:26","nodeType":"YulBlock","src":"31474:26:26","statements":[{"nativeSrc":"31476:22:26","nodeType":"YulAssignment","src":"31476:22:26","value":{"arguments":[{"name":"start","nativeSrc":"31489:5:26","nodeType":"YulIdentifier","src":"31489:5:26"},{"kind":"number","nativeSrc":"31496:1:26","nodeType":"YulLiteral","src":"31496:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"31485:3:26","nodeType":"YulIdentifier","src":"31485:3:26"},"nativeSrc":"31485:13:26","nodeType":"YulFunctionCall","src":"31485:13:26"},"variableNames":[{"name":"start","nativeSrc":"31476:5:26","nodeType":"YulIdentifier","src":"31476:5:26"}]}]},"pre":{"nativeSrc":"31456:3:26","nodeType":"YulBlock","src":"31456:3:26","statements":[]},"src":"31452:81:26"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"31128:3:26","nodeType":"YulIdentifier","src":"31128:3:26"},{"kind":"number","nativeSrc":"31133:2:26","nodeType":"YulLiteral","src":"31133:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"31125:2:26","nodeType":"YulIdentifier","src":"31125:2:26"},"nativeSrc":"31125:11:26","nodeType":"YulFunctionCall","src":"31125:11:26"},"nativeSrc":"31122:421:26","nodeType":"YulIf","src":"31122:421:26"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"31031:518:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"31084:5:26","nodeType":"YulTypedName","src":"31084:5:26","type":""},{"name":"len","nativeSrc":"31091:3:26","nodeType":"YulTypedName","src":"31091:3:26","type":""},{"name":"startIndex","nativeSrc":"31096:10:26","nodeType":"YulTypedName","src":"31096:10:26","type":""}],"src":"31031:518:26"},{"body":{"nativeSrc":"31639:141:26","nodeType":"YulBlock","src":"31639:141:26","statements":[{"nativeSrc":"31649:125:26","nodeType":"YulAssignment","src":"31649:125:26","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"31664:4:26","nodeType":"YulIdentifier","src":"31664:4:26"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"31682:1:26","nodeType":"YulLiteral","src":"31682:1:26","type":"","value":"3"},{"name":"len","nativeSrc":"31685:3:26","nodeType":"YulIdentifier","src":"31685:3:26"}],"functionName":{"name":"shl","nativeSrc":"31678:3:26","nodeType":"YulIdentifier","src":"31678:3:26"},"nativeSrc":"31678:11:26","nodeType":"YulFunctionCall","src":"31678:11:26"},{"kind":"number","nativeSrc":"31691:66:26","nodeType":"YulLiteral","src":"31691:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nativeSrc":"31674:3:26","nodeType":"YulIdentifier","src":"31674:3:26"},"nativeSrc":"31674:84:26","nodeType":"YulFunctionCall","src":"31674:84:26"}],"functionName":{"name":"not","nativeSrc":"31670:3:26","nodeType":"YulIdentifier","src":"31670:3:26"},"nativeSrc":"31670:89:26","nodeType":"YulFunctionCall","src":"31670:89:26"}],"functionName":{"name":"and","nativeSrc":"31660:3:26","nodeType":"YulIdentifier","src":"31660:3:26"},"nativeSrc":"31660:100:26","nodeType":"YulFunctionCall","src":"31660:100:26"},{"arguments":[{"kind":"number","nativeSrc":"31766:1:26","nodeType":"YulLiteral","src":"31766:1:26","type":"","value":"1"},{"name":"len","nativeSrc":"31769:3:26","nodeType":"YulIdentifier","src":"31769:3:26"}],"functionName":{"name":"shl","nativeSrc":"31762:3:26","nodeType":"YulIdentifier","src":"31762:3:26"},"nativeSrc":"31762:11:26","nodeType":"YulFunctionCall","src":"31762:11:26"}],"functionName":{"name":"or","nativeSrc":"31657:2:26","nodeType":"YulIdentifier","src":"31657:2:26"},"nativeSrc":"31657:117:26","nodeType":"YulFunctionCall","src":"31657:117:26"},"variableNames":[{"name":"used","nativeSrc":"31649:4:26","nodeType":"YulIdentifier","src":"31649:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"31554:226:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"31616:4:26","nodeType":"YulTypedName","src":"31616:4:26","type":""},{"name":"len","nativeSrc":"31622:3:26","nodeType":"YulTypedName","src":"31622:3:26","type":""}],"returnVariables":[{"name":"used","nativeSrc":"31630:4:26","nodeType":"YulTypedName","src":"31630:4:26","type":""}],"src":"31554:226:26"},{"body":{"nativeSrc":"31881:1368:26","nodeType":"YulBlock","src":"31881:1368:26","statements":[{"nativeSrc":"31891:24:26","nodeType":"YulVariableDeclaration","src":"31891:24:26","value":{"arguments":[{"name":"src","nativeSrc":"31911:3:26","nodeType":"YulIdentifier","src":"31911:3:26"}],"functionName":{"name":"mload","nativeSrc":"31905:5:26","nodeType":"YulIdentifier","src":"31905:5:26"},"nativeSrc":"31905:10:26","nodeType":"YulFunctionCall","src":"31905:10:26"},"variables":[{"name":"newLen","nativeSrc":"31895:6:26","nodeType":"YulTypedName","src":"31895:6:26","type":""}]},{"body":{"nativeSrc":"31958:22:26","nodeType":"YulBlock","src":"31958:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"31960:16:26","nodeType":"YulIdentifier","src":"31960:16:26"},"nativeSrc":"31960:18:26","nodeType":"YulFunctionCall","src":"31960:18:26"},"nativeSrc":"31960:18:26","nodeType":"YulExpressionStatement","src":"31960:18:26"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"31930:6:26","nodeType":"YulIdentifier","src":"31930:6:26"},{"kind":"number","nativeSrc":"31938:18:26","nodeType":"YulLiteral","src":"31938:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"31927:2:26","nodeType":"YulIdentifier","src":"31927:2:26"},"nativeSrc":"31927:30:26","nodeType":"YulFunctionCall","src":"31927:30:26"},"nativeSrc":"31924:56:26","nodeType":"YulIf","src":"31924:56:26"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"32033:4:26","nodeType":"YulIdentifier","src":"32033:4:26"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"32071:4:26","nodeType":"YulIdentifier","src":"32071:4:26"}],"functionName":{"name":"sload","nativeSrc":"32065:5:26","nodeType":"YulIdentifier","src":"32065:5:26"},"nativeSrc":"32065:11:26","nodeType":"YulFunctionCall","src":"32065:11:26"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"32039:25:26","nodeType":"YulIdentifier","src":"32039:25:26"},"nativeSrc":"32039:38:26","nodeType":"YulFunctionCall","src":"32039:38:26"},{"name":"newLen","nativeSrc":"32079:6:26","nodeType":"YulIdentifier","src":"32079:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"31989:43:26","nodeType":"YulIdentifier","src":"31989:43:26"},"nativeSrc":"31989:97:26","nodeType":"YulFunctionCall","src":"31989:97:26"},"nativeSrc":"31989:97:26","nodeType":"YulExpressionStatement","src":"31989:97:26"},{"nativeSrc":"32095:18:26","nodeType":"YulVariableDeclaration","src":"32095:18:26","value":{"kind":"number","nativeSrc":"32112:1:26","nodeType":"YulLiteral","src":"32112:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"32099:9:26","nodeType":"YulTypedName","src":"32099:9:26","type":""}]},{"nativeSrc":"32122:23:26","nodeType":"YulVariableDeclaration","src":"32122:23:26","value":{"kind":"number","nativeSrc":"32141:4:26","nodeType":"YulLiteral","src":"32141:4:26","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nativeSrc":"32126:11:26","nodeType":"YulTypedName","src":"32126:11:26","type":""}]},{"nativeSrc":"32154:17:26","nodeType":"YulAssignment","src":"32154:17:26","value":{"kind":"number","nativeSrc":"32167:4:26","nodeType":"YulLiteral","src":"32167:4:26","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"32154:9:26","nodeType":"YulIdentifier","src":"32154:9:26"}]},{"cases":[{"body":{"nativeSrc":"32217:775:26","nodeType":"YulBlock","src":"32217:775:26","statements":[{"nativeSrc":"32231:94:26","nodeType":"YulVariableDeclaration","src":"32231:94:26","value":{"arguments":[{"name":"newLen","nativeSrc":"32250:6:26","nodeType":"YulIdentifier","src":"32250:6:26"},{"kind":"number","nativeSrc":"32258:66:26","nodeType":"YulLiteral","src":"32258:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nativeSrc":"32246:3:26","nodeType":"YulIdentifier","src":"32246:3:26"},"nativeSrc":"32246:79:26","nodeType":"YulFunctionCall","src":"32246:79:26"},"variables":[{"name":"loopEnd","nativeSrc":"32235:7:26","nodeType":"YulTypedName","src":"32235:7:26","type":""}]},{"nativeSrc":"32338:49:26","nodeType":"YulVariableDeclaration","src":"32338:49:26","value":{"arguments":[{"name":"slot","nativeSrc":"32382:4:26","nodeType":"YulIdentifier","src":"32382:4:26"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"32352:29:26","nodeType":"YulIdentifier","src":"32352:29:26"},"nativeSrc":"32352:35:26","nodeType":"YulFunctionCall","src":"32352:35:26"},"variables":[{"name":"dstPtr","nativeSrc":"32342:6:26","nodeType":"YulTypedName","src":"32342:6:26","type":""}]},{"nativeSrc":"32400:10:26","nodeType":"YulVariableDeclaration","src":"32400:10:26","value":{"kind":"number","nativeSrc":"32409:1:26","nodeType":"YulLiteral","src":"32409:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"32404:1:26","nodeType":"YulTypedName","src":"32404:1:26","type":""}]},{"body":{"nativeSrc":"32487:172:26","nodeType":"YulBlock","src":"32487:172:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"32512:6:26","nodeType":"YulIdentifier","src":"32512:6:26"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"32530:3:26","nodeType":"YulIdentifier","src":"32530:3:26"},{"name":"srcOffset","nativeSrc":"32535:9:26","nodeType":"YulIdentifier","src":"32535:9:26"}],"functionName":{"name":"add","nativeSrc":"32526:3:26","nodeType":"YulIdentifier","src":"32526:3:26"},"nativeSrc":"32526:19:26","nodeType":"YulFunctionCall","src":"32526:19:26"}],"functionName":{"name":"mload","nativeSrc":"32520:5:26","nodeType":"YulIdentifier","src":"32520:5:26"},"nativeSrc":"32520:26:26","nodeType":"YulFunctionCall","src":"32520:26:26"}],"functionName":{"name":"sstore","nativeSrc":"32505:6:26","nodeType":"YulIdentifier","src":"32505:6:26"},"nativeSrc":"32505:42:26","nodeType":"YulFunctionCall","src":"32505:42:26"},"nativeSrc":"32505:42:26","nodeType":"YulExpressionStatement","src":"32505:42:26"},{"nativeSrc":"32564:24:26","nodeType":"YulAssignment","src":"32564:24:26","value":{"arguments":[{"name":"dstPtr","nativeSrc":"32578:6:26","nodeType":"YulIdentifier","src":"32578:6:26"},{"kind":"number","nativeSrc":"32586:1:26","nodeType":"YulLiteral","src":"32586:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"32574:3:26","nodeType":"YulIdentifier","src":"32574:3:26"},"nativeSrc":"32574:14:26","nodeType":"YulFunctionCall","src":"32574:14:26"},"variableNames":[{"name":"dstPtr","nativeSrc":"32564:6:26","nodeType":"YulIdentifier","src":"32564:6:26"}]},{"nativeSrc":"32605:40:26","nodeType":"YulAssignment","src":"32605:40:26","value":{"arguments":[{"name":"srcOffset","nativeSrc":"32622:9:26","nodeType":"YulIdentifier","src":"32622:9:26"},{"name":"srcOffset_1","nativeSrc":"32633:11:26","nodeType":"YulIdentifier","src":"32633:11:26"}],"functionName":{"name":"add","nativeSrc":"32618:3:26","nodeType":"YulIdentifier","src":"32618:3:26"},"nativeSrc":"32618:27:26","nodeType":"YulFunctionCall","src":"32618:27:26"},"variableNames":[{"name":"srcOffset","nativeSrc":"32605:9:26","nodeType":"YulIdentifier","src":"32605:9:26"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"32434:1:26","nodeType":"YulIdentifier","src":"32434:1:26"},{"name":"loopEnd","nativeSrc":"32437:7:26","nodeType":"YulIdentifier","src":"32437:7:26"}],"functionName":{"name":"lt","nativeSrc":"32431:2:26","nodeType":"YulIdentifier","src":"32431:2:26"},"nativeSrc":"32431:14:26","nodeType":"YulFunctionCall","src":"32431:14:26"},"nativeSrc":"32423:236:26","nodeType":"YulForLoop","post":{"nativeSrc":"32446:28:26","nodeType":"YulBlock","src":"32446:28:26","statements":[{"nativeSrc":"32448:24:26","nodeType":"YulAssignment","src":"32448:24:26","value":{"arguments":[{"name":"i","nativeSrc":"32457:1:26","nodeType":"YulIdentifier","src":"32457:1:26"},{"name":"srcOffset_1","nativeSrc":"32460:11:26","nodeType":"YulIdentifier","src":"32460:11:26"}],"functionName":{"name":"add","nativeSrc":"32453:3:26","nodeType":"YulIdentifier","src":"32453:3:26"},"nativeSrc":"32453:19:26","nodeType":"YulFunctionCall","src":"32453:19:26"},"variableNames":[{"name":"i","nativeSrc":"32448:1:26","nodeType":"YulIdentifier","src":"32448:1:26"}]}]},"pre":{"nativeSrc":"32427:3:26","nodeType":"YulBlock","src":"32427:3:26","statements":[]},"src":"32423:236:26"},{"body":{"nativeSrc":"32707:226:26","nodeType":"YulBlock","src":"32707:226:26","statements":[{"nativeSrc":"32725:43:26","nodeType":"YulVariableDeclaration","src":"32725:43:26","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"32752:3:26","nodeType":"YulIdentifier","src":"32752:3:26"},{"name":"srcOffset","nativeSrc":"32757:9:26","nodeType":"YulIdentifier","src":"32757:9:26"}],"functionName":{"name":"add","nativeSrc":"32748:3:26","nodeType":"YulIdentifier","src":"32748:3:26"},"nativeSrc":"32748:19:26","nodeType":"YulFunctionCall","src":"32748:19:26"}],"functionName":{"name":"mload","nativeSrc":"32742:5:26","nodeType":"YulIdentifier","src":"32742:5:26"},"nativeSrc":"32742:26:26","nodeType":"YulFunctionCall","src":"32742:26:26"},"variables":[{"name":"lastValue","nativeSrc":"32729:9:26","nodeType":"YulTypedName","src":"32729:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"32792:6:26","nodeType":"YulIdentifier","src":"32792:6:26"},{"arguments":[{"name":"lastValue","nativeSrc":"32804:9:26","nodeType":"YulIdentifier","src":"32804:9:26"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"32831:1:26","nodeType":"YulLiteral","src":"32831:1:26","type":"","value":"3"},{"name":"newLen","nativeSrc":"32834:6:26","nodeType":"YulIdentifier","src":"32834:6:26"}],"functionName":{"name":"shl","nativeSrc":"32827:3:26","nodeType":"YulIdentifier","src":"32827:3:26"},"nativeSrc":"32827:14:26","nodeType":"YulFunctionCall","src":"32827:14:26"},{"kind":"number","nativeSrc":"32843:3:26","nodeType":"YulLiteral","src":"32843:3:26","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"32823:3:26","nodeType":"YulIdentifier","src":"32823:3:26"},"nativeSrc":"32823:24:26","nodeType":"YulFunctionCall","src":"32823:24:26"},{"kind":"number","nativeSrc":"32849:66:26","nodeType":"YulLiteral","src":"32849:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nativeSrc":"32819:3:26","nodeType":"YulIdentifier","src":"32819:3:26"},"nativeSrc":"32819:97:26","nodeType":"YulFunctionCall","src":"32819:97:26"}],"functionName":{"name":"not","nativeSrc":"32815:3:26","nodeType":"YulIdentifier","src":"32815:3:26"},"nativeSrc":"32815:102:26","nodeType":"YulFunctionCall","src":"32815:102:26"}],"functionName":{"name":"and","nativeSrc":"32800:3:26","nodeType":"YulIdentifier","src":"32800:3:26"},"nativeSrc":"32800:118:26","nodeType":"YulFunctionCall","src":"32800:118:26"}],"functionName":{"name":"sstore","nativeSrc":"32785:6:26","nodeType":"YulIdentifier","src":"32785:6:26"},"nativeSrc":"32785:134:26","nodeType":"YulFunctionCall","src":"32785:134:26"},"nativeSrc":"32785:134:26","nodeType":"YulExpressionStatement","src":"32785:134:26"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"32678:7:26","nodeType":"YulIdentifier","src":"32678:7:26"},{"name":"newLen","nativeSrc":"32687:6:26","nodeType":"YulIdentifier","src":"32687:6:26"}],"functionName":{"name":"lt","nativeSrc":"32675:2:26","nodeType":"YulIdentifier","src":"32675:2:26"},"nativeSrc":"32675:19:26","nodeType":"YulFunctionCall","src":"32675:19:26"},"nativeSrc":"32672:261:26","nodeType":"YulIf","src":"32672:261:26"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"32953:4:26","nodeType":"YulIdentifier","src":"32953:4:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"32967:1:26","nodeType":"YulLiteral","src":"32967:1:26","type":"","value":"1"},{"name":"newLen","nativeSrc":"32970:6:26","nodeType":"YulIdentifier","src":"32970:6:26"}],"functionName":{"name":"shl","nativeSrc":"32963:3:26","nodeType":"YulIdentifier","src":"32963:3:26"},"nativeSrc":"32963:14:26","nodeType":"YulFunctionCall","src":"32963:14:26"},{"kind":"number","nativeSrc":"32979:1:26","nodeType":"YulLiteral","src":"32979:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"32959:3:26","nodeType":"YulIdentifier","src":"32959:3:26"},"nativeSrc":"32959:22:26","nodeType":"YulFunctionCall","src":"32959:22:26"}],"functionName":{"name":"sstore","nativeSrc":"32946:6:26","nodeType":"YulIdentifier","src":"32946:6:26"},"nativeSrc":"32946:36:26","nodeType":"YulFunctionCall","src":"32946:36:26"},"nativeSrc":"32946:36:26","nodeType":"YulExpressionStatement","src":"32946:36:26"}]},"nativeSrc":"32210:782:26","nodeType":"YulCase","src":"32210:782:26","value":{"kind":"number","nativeSrc":"32215:1:26","nodeType":"YulLiteral","src":"32215:1:26","type":"","value":"1"}},{"body":{"nativeSrc":"33009:234:26","nodeType":"YulBlock","src":"33009:234:26","statements":[{"nativeSrc":"33023:14:26","nodeType":"YulVariableDeclaration","src":"33023:14:26","value":{"kind":"number","nativeSrc":"33036:1:26","nodeType":"YulLiteral","src":"33036:1:26","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"33027:5:26","nodeType":"YulTypedName","src":"33027:5:26","type":""}]},{"body":{"nativeSrc":"33072:67:26","nodeType":"YulBlock","src":"33072:67:26","statements":[{"nativeSrc":"33090:35:26","nodeType":"YulAssignment","src":"33090:35:26","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"33109:3:26","nodeType":"YulIdentifier","src":"33109:3:26"},{"name":"srcOffset","nativeSrc":"33114:9:26","nodeType":"YulIdentifier","src":"33114:9:26"}],"functionName":{"name":"add","nativeSrc":"33105:3:26","nodeType":"YulIdentifier","src":"33105:3:26"},"nativeSrc":"33105:19:26","nodeType":"YulFunctionCall","src":"33105:19:26"}],"functionName":{"name":"mload","nativeSrc":"33099:5:26","nodeType":"YulIdentifier","src":"33099:5:26"},"nativeSrc":"33099:26:26","nodeType":"YulFunctionCall","src":"33099:26:26"},"variableNames":[{"name":"value","nativeSrc":"33090:5:26","nodeType":"YulIdentifier","src":"33090:5:26"}]}]},"condition":{"name":"newLen","nativeSrc":"33053:6:26","nodeType":"YulIdentifier","src":"33053:6:26"},"nativeSrc":"33050:89:26","nodeType":"YulIf","src":"33050:89:26"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"33159:4:26","nodeType":"YulIdentifier","src":"33159:4:26"},{"arguments":[{"name":"value","nativeSrc":"33218:5:26","nodeType":"YulIdentifier","src":"33218:5:26"},{"name":"newLen","nativeSrc":"33225:6:26","nodeType":"YulIdentifier","src":"33225:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"33165:52:26","nodeType":"YulIdentifier","src":"33165:52:26"},"nativeSrc":"33165:67:26","nodeType":"YulFunctionCall","src":"33165:67:26"}],"functionName":{"name":"sstore","nativeSrc":"33152:6:26","nodeType":"YulIdentifier","src":"33152:6:26"},"nativeSrc":"33152:81:26","nodeType":"YulFunctionCall","src":"33152:81:26"},"nativeSrc":"33152:81:26","nodeType":"YulExpressionStatement","src":"33152:81:26"}]},"nativeSrc":"33001:242:26","nodeType":"YulCase","src":"33001:242:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"32190:6:26","nodeType":"YulIdentifier","src":"32190:6:26"},{"kind":"number","nativeSrc":"32198:2:26","nodeType":"YulLiteral","src":"32198:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"32187:2:26","nodeType":"YulIdentifier","src":"32187:2:26"},"nativeSrc":"32187:14:26","nodeType":"YulFunctionCall","src":"32187:14:26"},"nativeSrc":"32180:1063:26","nodeType":"YulSwitch","src":"32180:1063:26"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"31785:1464:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"31866:4:26","nodeType":"YulTypedName","src":"31866:4:26","type":""},{"name":"src","nativeSrc":"31872:3:26","nodeType":"YulTypedName","src":"31872:3:26","type":""}],"src":"31785:1464:26"},{"body":{"nativeSrc":"33391:164:26","nodeType":"YulBlock","src":"33391:164:26","statements":[{"nativeSrc":"33401:27:26","nodeType":"YulVariableDeclaration","src":"33401:27:26","value":{"arguments":[{"name":"value0","nativeSrc":"33421:6:26","nodeType":"YulIdentifier","src":"33421:6:26"}],"functionName":{"name":"mload","nativeSrc":"33415:5:26","nodeType":"YulIdentifier","src":"33415:5:26"},"nativeSrc":"33415:13:26","nodeType":"YulFunctionCall","src":"33415:13:26"},"variables":[{"name":"length","nativeSrc":"33405:6:26","nodeType":"YulTypedName","src":"33405:6:26","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"33443:3:26","nodeType":"YulIdentifier","src":"33443:3:26"},{"arguments":[{"name":"value0","nativeSrc":"33452:6:26","nodeType":"YulIdentifier","src":"33452:6:26"},{"kind":"number","nativeSrc":"33460:4:26","nodeType":"YulLiteral","src":"33460:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"33448:3:26","nodeType":"YulIdentifier","src":"33448:3:26"},"nativeSrc":"33448:17:26","nodeType":"YulFunctionCall","src":"33448:17:26"},{"name":"length","nativeSrc":"33467:6:26","nodeType":"YulIdentifier","src":"33467:6:26"}],"functionName":{"name":"mcopy","nativeSrc":"33437:5:26","nodeType":"YulIdentifier","src":"33437:5:26"},"nativeSrc":"33437:37:26","nodeType":"YulFunctionCall","src":"33437:37:26"},"nativeSrc":"33437:37:26","nodeType":"YulExpressionStatement","src":"33437:37:26"},{"nativeSrc":"33483:26:26","nodeType":"YulVariableDeclaration","src":"33483:26:26","value":{"arguments":[{"name":"pos","nativeSrc":"33497:3:26","nodeType":"YulIdentifier","src":"33497:3:26"},{"name":"length","nativeSrc":"33502:6:26","nodeType":"YulIdentifier","src":"33502:6:26"}],"functionName":{"name":"add","nativeSrc":"33493:3:26","nodeType":"YulIdentifier","src":"33493:3:26"},"nativeSrc":"33493:16:26","nodeType":"YulFunctionCall","src":"33493:16:26"},"variables":[{"name":"_1","nativeSrc":"33487:2:26","nodeType":"YulTypedName","src":"33487:2:26","type":""}]},{"expression":{"arguments":[{"name":"_1","nativeSrc":"33525:2:26","nodeType":"YulIdentifier","src":"33525:2:26"},{"kind":"number","nativeSrc":"33529:1:26","nodeType":"YulLiteral","src":"33529:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"33518:6:26","nodeType":"YulIdentifier","src":"33518:6:26"},"nativeSrc":"33518:13:26","nodeType":"YulFunctionCall","src":"33518:13:26"},"nativeSrc":"33518:13:26","nodeType":"YulExpressionStatement","src":"33518:13:26"},{"nativeSrc":"33540:9:26","nodeType":"YulAssignment","src":"33540:9:26","value":{"name":"_1","nativeSrc":"33547:2:26","nodeType":"YulIdentifier","src":"33547:2:26"},"variableNames":[{"name":"end","nativeSrc":"33540:3:26","nodeType":"YulIdentifier","src":"33540:3:26"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"33254:301:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"33367:3:26","nodeType":"YulTypedName","src":"33367:3:26","type":""},{"name":"value0","nativeSrc":"33372:6:26","nodeType":"YulTypedName","src":"33372:6:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"33383:3:26","nodeType":"YulTypedName","src":"33383:3:26","type":""}],"src":"33254:301:26"}]},"contents":"{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_4581() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x60)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_addresst_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value4 := value\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value5 := value_1\n        value6 := calldataload(add(headStart, 128))\n        let value_2 := calldataload(add(headStart, 160))\n        validator_revert_address(value_2)\n        value7 := value_2\n    }\n    function abi_encode_tuple_t_contract$_IBaluniV1Registry_$2909__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_uint64(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, 0xffffffffffffffff))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_address_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function array_allocation_size_array_struct_Call_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_struct_Call_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, _1)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_struct$_Call_$2582_memory_ptr_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_struct_Call_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, _1) { revert(0, 0) }\n            let _5 := add(_2, innerOffset)\n            let _6 := 0x60\n            if slt(add(sub(dataEnd, _5), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), _6) { revert(0, 0) }\n            let value := allocate_memory_4581()\n            let value_1 := calldataload(add(_5, _4))\n            validator_revert_address(value_1)\n            mstore(value, value_1)\n            mstore(add(value, _4), calldataload(add(_5, 64)))\n            let offset_1 := calldataload(add(_5, _6))\n            if gt(offset_1, _1) { revert(0, 0) }\n            mstore(add(value, 64), abi_decode_bytes(add(add(_5, offset_1), _4), dataEnd))\n            mstore(dst, value)\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_2 := calldataload(add(headStart, _4))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value1 := abi_decode_array_address_dyn(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_1ddcc9d8f2a6704234c103a6ef7b2e41a8659f7661115b0460a24c8abe542fd0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Total BALUNI supply cannot be ze\")\n        mstore(add(headStart, 96), \"ro\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bad2ba4e17745a4d4fd221dac6ffa18dd2cdb7d74e252bb930552ebc273a413c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"USDC balance is insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Check the token allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_05dde7ba458fa57c690848c203ec960214f35b18f13e857028bd34ad518b5575__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Burn amount must be greater than\")\n        mstore(add(headStart, 96), \" 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_19ae815948d188a4017d21662744b2e39ca52dd9e0c04ca7540cb50ca889bf62__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Treasury not set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3802b739a1b061f89edd5fd7a12d8792298aa749cedf62bac9eac44415882c7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Insufficient BAL\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2d5dedc64e58ec2dfd9d57a4a8363c0fd7692430e9d02e08dba505855fefef17__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Fee calculation error\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid token address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e16f85873456a830f1ff99f4c2c493d8a3c64696cfa808146bb8fc6bce2e7570__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Total supply is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_87d7498470f76c7b536e2b3ec9816474a9844e531fdac32c215159c083e5c40c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Share calculation error\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_address__to_t_address_t_address_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_address__to_t_address_t_address_t_address_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_3bfb1910864572988af91047c2a74bf6c8bc662651e6ced4da8e59a423cae87d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Muti Hop Swap Failed, Try Burn()\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_array_address_dyn_calldata(value, length, pos) -> end\n    {\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, 0x20)\n        let srcPtr := value\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let value_1 := calldataload(srcPtr)\n            validator_revert_address(value_1)\n            mstore(pos, and(value_1, 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_array_uint256_dyn_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        if gt(length, 0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { revert(0, 0) }\n        let length_1 := shl(5, length)\n        calldatacopy(add(pos, 0x20), start, length_1)\n        end := add(add(pos, length_1), 0x20)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr_t_uint256_t_address_t_address_t_address__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address_t_address_t_address__fromStack_reversed(headStart, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 224)\n        mstore(headStart, 224)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 256)\n        let _1 := 0x20\n        let srcPtr := add(value0, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, 0x20), sub(pos, headStart))\n        let tail_2 := abi_encode_array_address_dyn_calldata(value1, value2, pos)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        tail := abi_encode_array_uint256_dyn_calldata(value3, value4, tail_2)\n        mstore(add(headStart, 96), value5)\n        abi_encode_address(value6, add(headStart, 128))\n        abi_encode_address(value7, add(headStart, 160))\n        abi_encode_address(value8, add(headStart, 192))\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_c0699f179d2a1b62cb97d8e7fffb6f849ca18ed4e697b2f010f29e743716b888__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Agent factory not set\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Call_$2582_memory_ptr_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_struct$_Call_$2582_memory_ptr_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let _1 := 64\n        let tail_1 := add(headStart, 64)\n        mstore(headStart, 64)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 96\n        pos := add(headStart, 96)\n        let tail_2 := add(add(headStart, shl(5, length)), 96)\n        let _3 := 0x20\n        let srcPtr := add(value0, _3)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0))\n            let _4 := mload(srcPtr)\n            mstore(tail_2, and(mload(_4), 0xffffffffffffffffffffffffffffffffffffffff))\n            mstore(add(tail_2, _3), mload(add(_4, _3)))\n            let memberValue0 := mload(add(_4, _1))\n            mstore(add(tail_2, _1), _2)\n            tail_2 := abi_encode_string(memberValue0, add(tail_2, _2))\n            srcPtr := add(srcPtr, _3)\n            pos := add(pos, _3)\n        }\n        mstore(add(headStart, _3), sub(tail_2, headStart))\n        tail := abi_encode_array_address_dyn(value1, tail_2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_rational_3000_by_1__to_t_address_t_address_t_uint24__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_rational_500_by_1__to_t_address_t_address_t_uint24__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_40edaaaeefde7a606ab22e3c37f33984fb3b1e0058b05ccc31b572de63cd1497__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"UniswapFactory not set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_277b788f6bc7cefc93f8369ac2f11d44c3d87b9ef59c2dd3a42e3f629340b86f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"WNATIVE not set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8a54059e31ba8035a6fc0cc512134c3fd2ca3508fc8500195d25c2966df732b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"BaluniSwapper not set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_69c3c275e229957bd624940053bb5e224e915c9b003c39a1899996718abe87b0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"MultiHopSwap Failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c26370c748e399efe4c5a302d20f1fe22da5300fc60bdab39924790733506945__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Swap Failed\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_295121eae2e38ce539c65fbd804cefee3e5836ff4e56c455d35a6afed6773125__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Token valuation is zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_075182a57f83974087c76763cd3bc4eedd97b16a8f6ac226f0c2ef23a69b575b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Total supply cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebe7cb95a2dc7ec969883b54c3194e315832305fa1026cbcfb27ede2b2283804__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Token decimals should be <= 18\")\n        tail := add(headStart, 96)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"468":[{"length":32,"start":16200},{"length":32,"start":16241},{"length":32,"start":16673}]},"linkReferences":{},"object":"608060405260043610610277575f3560e01c806371ddcfb81161014b578063c4d66de8116100c6578063e73faa2d1161007c578063f2fde38b11610062578063f2fde38b14610787578063fe0a4dd1146107a6578063fe330a51146107c5575f80fd5b8063e73faa2d14610754578063eedc3c5014610768575f80fd5b8063d48bfca7116100ac578063d48bfca7146106b3578063dd62ed3e146106d2578063e67ad75914610735575f80fd5b8063c4d66de814610675578063cdf456e114610694575f80fd5b806395d89b411161011b578063aa6ca80811610101578063aa6ca808146105ed578063aa95d8931461060e578063ad3cb1cc1461062d575f80fd5b806395d89b41146105ba578063a9059cbb146105ce575f80fd5b806371ddcfb8146105215780637b103999146105405780638da5cb5b1461055f5780638f2248bc1461059b575f80fd5b80632bdd955a116101f557806352d1902d116101ab5780635fa7b584116101915780635fa7b5841461049b57806370a08231146104ba578063715018a61461050d575f80fd5b806352d1902d14610468578063599f69f71461047c575f80fd5b8063313ce567116101db578063313ce567146104265780633c2066a9146104415780634f1ef28614610455575f80fd5b80632bdd955a146103e85780632f86556814610407575f80fd5b806318160ddd1161024a57806323b872dd1161023057806323b872dd1461037e57806327d54a921461039d578063295b9300146103d4575f80fd5b806318160ddd146103225780631a168da21461035f575f80fd5b806306fdde031461027b578063095ea7b3146102a55780630cfc7386146102d45780630d8e6e2c146102f5575b5f80fd5b348015610286575f80fd5b5061028f6107e4565b60405161029c9190614bbc565b60405180910390f35b3480156102b0575f80fd5b506102c46102bf366004614be2565b6108b7565b604051901515815260200161029c565b3480156102df575f80fd5b506102f36102ee366004614c0c565b6108d0565b005b348015610300575f80fd5b50610309610ee4565b60405167ffffffffffffffff909116815260200161029c565b34801561032d575f80fd5b507f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b60405190815260200161029c565b34801561036a575f80fd5b506102f3610379366004614c0c565b610f1c565b348015610389575f80fd5b506102c4610398366004614c23565b611470565b3480156103a8575f80fd5b506103bc6103b7366004614c61565b611495565b6040516001600160a01b03909116815260200161029c565b3480156103df575f80fd5b50610351611590565b3480156103f3575f80fd5b50610351610402366004614c7c565b611599565b348015610412575f80fd5b506102f3610421366004614c61565b6116ad565b348015610431575f80fd5b506040516012815260200161029c565b34801561044c575f80fd5b506102f3611a4d565b6102f3610463366004614d84565b611ad5565b348015610473575f80fd5b50610351611af4565b348015610487575f80fd5b506102f3610496366004614e19565b611b22565b3480156104a6575f80fd5b506102f36104b5366004614c61565b611cb1565b3480156104c5575f80fd5b506103516104d4366004614c61565b6001600160a01b03165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00602052604090205490565b348015610518575f80fd5b506102f3611cc3565b34801561052c575f80fd5b5061035161053b366004614c0c565b611cd4565b34801561054b575f80fd5b506002546103bc906001600160a01b031681565b34801561056a575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166103bc565b3480156105a6575f80fd5b506102f36105b5366004614ec4565b611cde565b3480156105c5575f80fd5b5061028f611e14565b3480156105d9575f80fd5b506102c46105e8366004614be2565b611e65565b3480156105f8575f80fd5b50610601611e72565b60405161029c9190614f3f565b348015610619575f80fd5b50610351610628366004614c0c565b611e7d565b348015610638575f80fd5b5061028f6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b348015610680575f80fd5b506102f361068f366004614c61565b611ee4565b34801561069f575f80fd5b506003546103bc906001600160a01b031681565b3480156106be575f80fd5b506102f36106cd366004614c61565b612199565b3480156106dd575f80fd5b506103516106ec366004614f51565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b348015610740575f80fd5b506102f361074f366004614c61565b6121ab565b34801561075f575f80fd5b506103516121e2565b348015610773575f80fd5b506102f3610782366004615015565b6121f4565b348015610792575f80fd5b506102f36107a1366004614c61565b612cc9565b3480156107b1575f80fd5b506102f36107c0366004614c0c565b612d1c565b3480156107d0575f80fd5b506103516107df366004615124565b61380d565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060917f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace009161083590615153565b80601f016020809104026020016040519081016040528092919081815260200182805461086190615153565b80156108ac5780601f10610883576101008083540402835291602001916108ac565b820191905f5260205f20905b81548152906001019060200180831161088f57829003601f168201915b505050505091505090565b5f336108c481858561381a565b60019150505b92915050565b6108d861382c565b60025460408051631d8cf42560e11b815290515f926001600160a01b031691633b19e84a9160048083019260209291908290030181865afa15801561091f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109439190615185565b90505f60025f9054906101000a90046001600160a01b03166001600160a01b0316631bf01e9b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610996573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109ba9190615185565b90505f60025f9054906101000a90046001600160a01b03166001600160a01b03166385462d6f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a0d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a3191906151a0565b90505f60025f9054906101000a90046001600160a01b03166001600160a01b0316634f4608a26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a84573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610aa891906151a0565b90505f610ab36138ad565b90505f610ade7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490565b90505f81610aec848a6151cb565b610af691906151e2565b90506001600160a01b0386166323b872dd3330610b1864e8d4a51000866151e2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303815f875af1158015610b81573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ba59190615201565b506040516370a0823160e01b81523360048201525f906001600160a01b038816906370a0823190602401602060405180830381865afa158015610bea573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c0e91906151a0565b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523360048201523060248201529091505f906001600160a01b0389169063dd62ed3e90604401602060405180830381865afa158015610c74573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c9891906151a0565b90505f8411610d145760405162461bcd60e51b815260206004820152602260248201527f546f74616c2042414c554e4920737570706c792063616e6e6f74206265207a6560448201527f726f00000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610d2364e8d4a51000846151e2565b821015610d725760405162461bcd60e51b815260206004820152601c60248201527f555344432062616c616e636520697320696e73756666696369656e74000000006044820152606401610d0b565b610d8164e8d4a51000846151e2565b811015610dd05760405162461bcd60e51b815260206004820152601960248201527f436865636b2074686520746f6b656e20616c6c6f77616e6365000000000000006044820152606401610d0b565b610dda338b613b0c565b60408051338152602081018c90527f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885910160405180910390a15f8688610e2564e8d4a51000876151e2565b610e2f91906151cb565b610e3991906151e2565b60405163a9059cbb60e01b81526001600160a01b038c8116600483015260248201839052919250908a169063a9059cbb906044016020604051808303815f875af1158015610e89573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ead9190615201565b5050505050505050505050610ee160017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b50565b5f610f177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005467ffffffffffffffff1690565b905090565b610f2461382c565b5f8111610f995760405162461bcd60e51b815260206004820152602260248201527f4275726e20616d6f756e74206d7573742062652067726561746572207468616e60448201527f20300000000000000000000000000000000000000000000000000000000000006064820152608401610d0b565b60025460408051631d8cf42560e11b815290515f926001600160a01b031691633b19e84a9160048083019260209291908290030181865afa158015610fe0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110049190615185565b90506001600160a01b03811661105c5760405162461bcd60e51b815260206004820152601060248201527f5472656173757279206e6f7420736574000000000000000000000000000000006044820152606401610d0b565b335f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0060205260409020548211156110d95760405162461bcd60e51b815260206004820152601060248201527f496e73756666696369656e742042414c000000000000000000000000000000006044820152606401610d0b565b5f6110e383613b7f565b9050828111156111355760405162461bcd60e51b815260206004820152601560248201527f4665652063616c63756c6174696f6e206572726f7200000000000000000000006044820152606401610d0b565b611143826105e88386615220565b505f5b61114f5f613c8e565b811015611401575f6111618183613c97565b90506001600160a01b0381166111b95760405162461bcd60e51b815260206004820152601560248201527f496e76616c696420746f6b656e206164647265737300000000000000000000006044820152606401610d0b565b5f6111e27f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490565b90505f81116112335760405162461bcd60e51b815260206004820152601160248201527f546f74616c20737570706c7920697320300000000000000000000000000000006044820152606401610d0b565b6040516370a0823160e01b81523060048201525f906001600160a01b038416906370a0823190602401602060405180830381865afa158015611277573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061129b91906151a0565b90508015806112b257506001600160a01b03831630145b156112bf575050506113f9565b5f836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112fc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113209190615233565b60ff1690505f61133284848985613ca2565b9050828111156113845760405162461bcd60e51b815260206004820152601760248201527f53686172652063616c63756c6174696f6e206572726f720000000000000000006044820152606401610d0b565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0386169063a9059cbb906044016020604051808303815f875af11580156113ce573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113f29190615201565b5050505050505b600101611146565b5061140c3382613dae565b60408051338152602081018390527fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5910160405180910390a15050610ee160017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b5f3361147d858285613dfb565b611488858585613eae565b60019150505b9392505050565b5f8060025f9054906101000a90046001600160a01b03166001600160a01b031663f5d2d9986040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114e7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061150b9190615185565b6040517f27d54a920000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152919250908216906327d54a9290602401602060405180830381865afa15801561156c573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061148e9190615185565b5f610f176138ad565b5f8060025f9054906101000a90046001600160a01b03166001600160a01b031663bb3ba04c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115eb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061160f9190615185565b6003546040517fb27b5e750000000000000000000000000000000000000000000000000000000081526001600160a01b03868116600483015291821660248201526044810187905291925082169063b27b5e7590606401602060405180830381865afa158015611681573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116a591906151a0565b949350505050565b600254604080517f6c9c007800000000000000000000000000000000000000000000000000000000815290515f926001600160a01b031691636c9c00789160048083019260209291908290030181865afa15801561170d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117319190615185565b90505f60025f9054906101000a90046001600160a01b03166001600160a01b03166382755ebb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611784573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117a89190615185565b6040516370a0823160e01b81523060048201529091505f906001600160a01b038516906370a0823190602401602060405180830381865afa1580156117ef573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061181391906151a0565b6040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b038481166004830152602482018390529192508215159186169063095ea7b3906044016020604051808303815f875af115801561187f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118a39190615201565b50806118b0575050505050565b6003546040517f2d6bc8ea0000000000000000000000000000000000000000000000000000000081526001600160a01b03878116600483015291821660248201526044810184905230606482015290841690632d6bc8ea906084016020604051808303815f875af1925050508015611945575060408051601f3d908101601f19168201909252611942918101906151a0565b60015b611a3e576003546040517f5efaaebb0000000000000000000000000000000000000000000000000000000081526001600160a01b03878116600483015286811660248301529182166044820152606481018490523060848201525f91851690635efaaebb9060a4016020604051808303815f875af11580156119c9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119ed91906151a0565b90505f8111611a3e5760405162461bcd60e51b815260206004820181905260248201527f4d75746920486f702053776170204661696c65642c20547279204275726e28296044820152606401610d0b565b505050505050565b5050505050565b611a5561382c565b5f611a5f5f613c8e565b90505f5b81811015611aa8575f611a768183613c97565b6003549091506001600160a01b0390811690821603611a955750611aa0565b611a9e816116ad565b505b600101611a63565b5050611ad360017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b565b611add613f3d565b611ae68261400d565b611af08282614015565b5050565b5f611afd614116565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b600254604080517f1bf01e9b00000000000000000000000000000000000000000000000000000000815290515f926001600160a01b031691631bf01e9b9160048083019260209291908290030181865afa158015611b82573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ba69190615185565b90505f60025f9054906101000a90046001600160a01b03166001600160a01b031663cff49d686040518163ffffffff1660e01b8152600401602060405180830381865afa158015611bf9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c1d9190615185565b604080515f815260208101918290527ff0bf7714000000000000000000000000000000000000000000000000000000009091529091506001600160a01b03821663f0bf7714611c77838e8e8e8e8c8f8f8d602489016152d8565b5f604051808303815f87803b158015611c8e575f80fd5b505af1158015611ca0573d5f803e3d5ffd5b505050505050505050505050505050565b611cb9614178565b611af05f826141ec565b611ccb614178565b611ad35f614200565b5f6108ca8261427d565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805482919068010000000000000000900460ff1680611d2c5750805467ffffffffffffffff808416911610155b15611d63576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80546801000000000000000067ffffffffffffffff84167fffffffffffffffffffffffffffffffffffffffffffffff00000000000000000090921682171782556002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038716179055815468ff0000000000000000191682556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a150505050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060917f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace009161083590615153565b5f336108c4818585613eae565b6060610f175f6143b4565b5f80611e876138ad565b90505f611eb27f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490565b90505f81611ec084876151cb565b611eca91906151e2565b9050611edb64e8d4a51000826151e2565b95945050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff165f81158015611f2e5750825b90505f8267ffffffffffffffff166001148015611f4a5750303b155b905081158015611f58575080155b15611f8f576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001660011785558315611fda57845468ff00000000000000001916680100000000000000001785555b61204e6040518060400160405280600681526020017f42616c756e6900000000000000000000000000000000000000000000000000008152506040518060400160405280600681526020017f42414c554e4900000000000000000000000000000000000000000000000000008152506143c0565b612057336143d2565b61205f6143e3565b6120676143f3565b61207930670de0b6b3a7640000613b0c565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038816908117909155604080517f1bf01e9b0000000000000000000000000000000000000000000000000000000081529051631bf01e9b916004808201926020929091908290030181865afa1580156120f6573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061211a9190615185565b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03929092169190911790558315611a3e57845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a1505050505050565b6121a1614178565b611af05f826143fb565b6121b3614178565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b5f610f17670de0b6b3a764000061427d565b6121fc61382c565b600254604080517ff5d2d99800000000000000000000000000000000000000000000000000000000815290515f926001600160a01b03169163f5d2d9989160048083019260209291908290030181865afa15801561225c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906122809190615185565b90505f60025f9054906101000a90046001600160a01b03166001600160a01b0316633e6dfa366040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122d3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906122f79190615185565b90505f60025f9054906101000a90046001600160a01b03166001600160a01b0316636c9c00786040518163ffffffff1660e01b8152600401602060405180830381865afa15801561234a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061236e9190615185565b90505f60025f9054906101000a90046001600160a01b03166001600160a01b0316631bf01e9b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156123c1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906123e59190615185565b90506001600160a01b03841661243d5760405162461bcd60e51b815260206004820152601560248201527f4167656e7420666163746f7279206e6f742073657400000000000000000000006044820152606401610d0b565b6040517f9b76a5cd0000000000000000000000000000000000000000000000000000000081523360048201525f906001600160a01b03861690639b76a5cd906024016020604051808303815f875af115801561249b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906124bf9190615185565b90505f865167ffffffffffffffff8111156124dc576124dc614caa565b604051908082528060200260200182016040528015612505578160200160208202803683370190505b5090505f875167ffffffffffffffff81111561252357612523614caa565b60405190808252806020026020018201604052801561254c578160200160208202803683370190505b5090505f5b885181101561264b5761257d5f8a838151811061257057612570615387565b602002602001015161440f565b1583828151811061259057612590615387565b6020026020010190151590811515815250508881815181106125b4576125b4615387565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015612602573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061262691906151a0565b82828151811061263857612638615387565b6020908102919091010152600101612551565b506040517feedc3c500000000000000000000000000000000000000000000000000000000081526001600160a01b0384169063eedc3c5090612693908c908c9060040161539b565b5f604051808303815f87803b1580156126aa575f80fd5b505af11580156126bc573d5f803e3d5ffd5b505050505f5b8851811015612c97575f8982815181106126de576126de615387565b60209081029190910101516040516370a0823160e01b81523060048201529091505f906001600160a01b038316906370a0823190602401602060405180830381865afa158015612730573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061275491906151a0565b604051630b4c774160e11b81526001600160a01b0384811660048301528a81166024830152610bb860448301529192505f918b1690631698ee8290606401602060405180830381865afa1580156127ad573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906127d19190615185565b604051630b4c774160e11b81526001600160a01b0385811660048301528b811660248301526101f460448301529192505f918c1690631698ee8290606401602060405180830381865afa15801561282a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061284e9190615185565b604051630b4c774160e11b81526001600160a01b0386811660048301528b811660248301526101f460448301529192505f918d1690631698ee8290606401602060405180830381865afa1580156128a7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906128cb9190615185565b604051630b4c774160e11b81526001600160a01b0387811660048301528c81166024830152610bb860448301529192505f918e1690631698ee8290606401602060405180830381865afa158015612924573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906129489190615185565b90505f6001600160a01b03851615158061296a57506001600160a01b03841615155b8061297d57506001600160a01b03821615155b8061299057506001600160a01b03831615155b90508988815181106129a4576129a4615387565b602002602001015180156129b55750805b156129c6576129c45f886143fb565b505b5f8989815181106129d9576129d9615387565b6020026020010151876129ec9190615220565b905081612a775760405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0389169063a9059cbb906044016020604051808303815f875af1158015612a3d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612a619190615201565b5050505050505050505050505050505050612ca0565b60025460408051631d8cf42560e11b815290515f926001600160a01b031691633b19e84a9160048083019260209291908290030181865afa158015612abe573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612ae29190615185565b90505f60025f9054906101000a90046001600160a01b03166001600160a01b03166385462d6f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612b35573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612b5991906151a0565b90505f60025f9054906101000a90046001600160a01b03166001600160a01b0316634f4608a26040518163ffffffff1660e01b8152600401602060405180830381865afa158015612bac573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612bd091906151a0565b90508c8c81518110612be457612be4615387565b60200260200101518a1115612c80575f81612bff84876151cb565b612c0991906151e2565b60405163a9059cbb60e01b81526001600160a01b03868116600483015260248201839052919250908d169063a9059cbb906044016020604051808303815f875af1158015612c59573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612c7d9190615201565b50505b5050600190990198506126c2975050505050505050565b50505050505050505b611af060017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b612cd1614178565b6001600160a01b038116612d13576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f6004820152602401610d0b565b610ee181614200565b612d2461382c565b5f8111612d995760405162461bcd60e51b815260206004820152602260248201527f4275726e20616d6f756e74206d7573742062652067726561746572207468616e60448201527f20300000000000000000000000000000000000000000000000000000000000006064820152608401610d0b565b600254604080517f3e6dfa3600000000000000000000000000000000000000000000000000000000815290515f926001600160a01b031691633e6dfa369160048083019260209291908290030181865afa158015612df9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612e1d9190615185565b90506001600160a01b038116612e755760405162461bcd60e51b815260206004820152601660248201527f556e6973776170466163746f7279206e6f7420736574000000000000000000006044820152606401610d0b565b60025460408051631d8cf42560e11b815290515f926001600160a01b031691633b19e84a9160048083019260209291908290030181865afa158015612ebc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612ee09190615185565b90506001600160a01b038116612f385760405162461bcd60e51b815260206004820152601060248201527f5472656173757279206e6f7420736574000000000000000000000000000000006044820152606401610d0b565b600254604080517f6c9c007800000000000000000000000000000000000000000000000000000000815290515f926001600160a01b031691636c9c00789160048083019260209291908290030181865afa158015612f98573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612fbc9190615185565b90506001600160a01b0381166130145760405162461bcd60e51b815260206004820152600f60248201527f574e4154495645206e6f742073657400000000000000000000000000000000006044820152606401610d0b565b5f61301e85613b7f565b9050848111156130705760405162461bcd60e51b815260206004820152601560248201527f4665652063616c63756c6174696f6e206572726f7200000000000000000000006044820152606401610d0b565b5f61307b8287615220565b90506130878482611e65565b505f5b6130935f613c8e565b81101561379b575f6130a58183613c97565b90506001600160a01b0381166130fd5760405162461bcd60e51b815260206004820152601560248201527f496e76616c696420746f6b656e206164647265737300000000000000000000006044820152606401610d0b565b5f6131267f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490565b90505f81116131775760405162461bcd60e51b815260206004820152601160248201527f546f74616c20737570706c7920697320300000000000000000000000000000006044820152606401610d0b565b6040516370a0823160e01b81523060048201525f906001600160a01b038416906370a0823190602401602060405180830381865afa1580156131bb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906131df91906151a0565b90508015806131f657506001600160a01b03831630145b1561320357505050613793565b5f836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613240573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906132649190615233565b60ff1690505f61327684848a85613ca2565b9050828111156132c85760405162461bcd60e51b815260206004820152601760248201527f53686172652063616c63756c6174696f6e206572726f720000000000000000006044820152606401610d0b565b6003546001600160a01b039081169086160361335b5760035460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303815f875af115801561332c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906133509190615201565b505050505050613793565b600254604080517f82755ebb00000000000000000000000000000000000000000000000000000000815290515f926001600160a01b0316916382755ebb9160048083019260209291908290030181865afa1580156133bb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906133df9190615185565b90506001600160a01b0381166134375760405162461bcd60e51b815260206004820152601560248201527f42616c756e6953776170706572206e6f742073657400000000000000000000006044820152606401610d0b565b6040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b0382811660048301526024820184905287169063095ea7b3906044016020604051808303815f875af115801561349c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906134c09190615201565b506003546040517f2d6bc8ea0000000000000000000000000000000000000000000000000000000081526001600160a01b03888116600483015291821660248201526044810184905233606482015290821690632d6bc8ea906084016020604051808303815f875af1925050508015613556575060408051601f3d908101601f19168201909252613553918101906151a0565b60015b6136c8576003546040517f5efaaebb0000000000000000000000000000000000000000000000000000000081526001600160a01b0388811660048301528c811660248301529182166044820152606481018490523360848201525f91831690635efaaebb9060a4016020604051808303815f875af11580156135da573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906135fe91906151a0565b90505f811161364f5760405162461bcd60e51b815260206004820152601360248201527f4d756c7469486f7053776170204661696c6564000000000000000000000000006044820152606401610d0b565b60035460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303815f875af115801561369d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906136c19190615201565b505061378c565b5f81116137175760405162461bcd60e51b815260206004820152600b60248201527f53776170204661696c65640000000000000000000000000000000000000000006044820152606401610d0b565b60035460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303815f875af1158015613765573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906137899190615201565b50505b5050505050505b60010161308a565b506137a63383613dae565b60408051338152602081018490527fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5910160405180910390a15050505050610ee160017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b5f611edb85858585613ca2565b6138278383836001614430565b505050565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0080547ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016138a7576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60029055565b5f80805b6138ba5f613c8e565b811015613b06575f6138cc8183613c97565b6040516370a0823160e01b81523060048201529091505f906001600160a01b038316906370a0823190602401602060405180830381865afa158015613913573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061393791906151a0565b9050805f03613947575050613afe565b6003546001600160a01b039081169083160361397f5761396c8164e8d4a510006151cb565b6139769085615446565b93505050613afe565b600254604080517fbb3ba04c00000000000000000000000000000000000000000000000000000000815290515f926001600160a01b03169163bb3ba04c9160048083019260209291908290030181865afa1580156139df573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613a039190615185565b6003546040517fb27b5e750000000000000000000000000000000000000000000000000000000081526001600160a01b0386811660048301529182166024820152604481018590529192505f919083169063b27b5e7590606401602060405180830381865afa158015613a78573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613a9c91906151a0565b90505f8111613aed5760405162461bcd60e51b815260206004820152601760248201527f546f6b656e2076616c756174696f6e206973207a65726f0000000000000000006044820152606401610d0b565b613af78187615446565b9550505050505b6001016138b1565b50919050565b6001600160a01b038216613b4e576040517fec442f050000000000000000000000000000000000000000000000000000000081525f6004820152602401610d0b565b611af05f8383614558565b60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b5f8060025f9054906101000a90046001600160a01b03166001600160a01b03166385462d6f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613bd1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613bf591906151a0565b90505f60025f9054906101000a90046001600160a01b03166001600160a01b0316634f4608a26040518163ffffffff1660e01b8152600401602060405180830381865afa158015613c48573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613c6c91906151a0565b90505f81613c7a8482615220565b613c8490876151cb565b611edb91906151e2565b5f6108ca825490565b5f61148e83836146bd565b5f808511613cf25760405162461bcd60e51b815260206004820152601b60248201527f546f74616c20737570706c792063616e6e6f74206265207a65726f00000000006044820152606401610d0b565b6012821115613d435760405162461bcd60e51b815260206004820152601e60248201527f546f6b656e20646563696d616c732073686f756c64206265203c3d20313800006044820152606401610d0b565b5f8080613d51856012615220565b613d5c90600a615539565b90506012851015613d8457613d7181896151e2565b9250613d7d81876151e2565b9150613d8b565b8792508591505b5f83613d9789856151cb565b613da191906151e2565b9998505050505050505050565b6001600160a01b038216613df0576040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f6004820152602401610d0b565b611af0825f83614558565b6001600160a01b038381165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0160209081526040808320938616835292905220545f198114613ea85781811015613e9a576040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526001600160a01b03841660048201526024810182905260448101839052606401610d0b565b613ea884848484035f614430565b50505050565b6001600160a01b038316613ef0576040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f6004820152602401610d0b565b6001600160a01b038216613f32576040517fec442f050000000000000000000000000000000000000000000000000000000081525f6004820152602401610d0b565b613827838383614558565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480613fd657507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316613fca7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614155b15611ad3576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ee1614178565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561406f575060408051601f3d908101601f1916820190925261406c918101906151a0565b60015b6140b0576040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526001600160a01b0383166004820152602401610d0b565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc811461410c576040517faa1d49a400000000000000000000000000000000000000000000000000000000815260048101829052602401610d0b565b61382783836146e3565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611ad3576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336141aa7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614611ad3576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610d0b565b5f61148e836001600160a01b038416614738565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300805473ffffffffffffffffffffffffffffffffffffffff1981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f8060035f9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156142cf573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906142f39190615233565b60ff1690505f6143217f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490565b90505f81116143725760405162461bcd60e51b815260206004820152601b60248201527f546f74616c20737570706c792063616e6e6f74206265207a65726f00000000006044820152606401610d0b565b5f61437b6138ad565b90508161438882876151cb565b61439291906151e2565b935061439f836012615220565b6143aa90600a615539565b611edb90856151e2565b60605f61148e8361481b565b6143c8614874565b611af082826148db565b6143da614874565b610ee18161493e565b6143eb614874565b611ad3614946565b611ad3614874565b5f61148e836001600160a01b03841661494e565b6001600160a01b0381165f908152600183016020526040812054151561148e565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace006001600160a01b038516614493576040517fe602df050000000000000000000000000000000000000000000000000000000081525f6004820152602401610d0b565b6001600160a01b0384166144d5576040517f94280d620000000000000000000000000000000000000000000000000000000081525f6004820152602401610d0b565b6001600160a01b038086165f90815260018301602090815260408083209388168352929052208390558115611a4657836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161454991815260200190565b60405180910390a35050505050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace006001600160a01b0384166145a55781816002015f82825461459a9190615446565b9091555061462e9050565b6001600160a01b0384165f9081526020829052604090205482811015614610576040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b03861660048201526024810182905260448101849052606401610d0b565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b03831661464c57600281018054839003905561466a565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516146af91815260200190565b60405180910390a350505050565b5f825f0182815481106146d2576146d2615387565b905f5260205f200154905092915050565b6146ec8261499a565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115614730576138278282614a36565b611af0614a9f565b5f8181526001830160205260408120548015614812575f61475a600183615220565b85549091505f9061476d90600190615220565b90508181146147cc575f865f01828154811061478b5761478b615387565b905f5260205f200154905080875f0184815481106147ab576147ab615387565b5f918252602080832090910192909255918252600188019052604090208390555b85548690806147dd576147dd615544565b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f9055600193505050506108ca565b5f9150506108ca565b6060815f0180548060200260200160405190810160405280929190818152602001828054801561486857602002820191905f5260205f20905b815481526020019060010190808311614854575b50505050509050919050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16611ad3576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6148e3614874565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0361492f848261559c565b5060048101613ea8838261559c565b612cd1614874565b613b59614874565b5f81815260018301602052604081205461499357508154600181810184555f8481526020808220909301849055845484825282860190935260409020919091556108ca565b505f6108ca565b806001600160a01b03163b5f036149e8576040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526001600160a01b0382166004820152602401610d0b565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60605f80846001600160a01b031684604051614a529190615658565b5f60405180830381855af49150503d805f8114614a8a576040519150601f19603f3d011682016040523d82523d5f602084013e614a8f565b606091505b5091509150611edb858383614ad7565b3415611ad3576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082614aec57614ae782614b4c565b61148e565b8151158015614b0357506001600160a01b0384163b155b15614b45576040517f9996b3150000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401610d0b565b508061148e565b805115614b5c5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f61148e6020830184614b8e565b6001600160a01b0381168114610ee1575f80fd5b5f8060408385031215614bf3575f80fd5b8235614bfe81614bce565b946020939093013593505050565b5f60208284031215614c1c575f80fd5b5035919050565b5f805f60608486031215614c35575f80fd5b8335614c4081614bce565b92506020840135614c5081614bce565b929592945050506040919091013590565b5f60208284031215614c71575f80fd5b813561148e81614bce565b5f8060408385031215614c8d575f80fd5b823591506020830135614c9f81614bce565b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b6040516060810167ffffffffffffffff81118282101715614ce157614ce1614caa565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715614d1057614d10614caa565b604052919050565b5f82601f830112614d27575f80fd5b813567ffffffffffffffff811115614d4157614d41614caa565b614d546020601f19601f84011601614ce7565b818152846020838601011115614d68575f80fd5b816020850160208301375f918101602001919091529392505050565b5f8060408385031215614d95575f80fd5b8235614da081614bce565b9150602083013567ffffffffffffffff811115614dbb575f80fd5b614dc785828601614d18565b9150509250929050565b5f8083601f840112614de1575f80fd5b50813567ffffffffffffffff811115614df8575f80fd5b6020830191508360208260051b8501011115614e12575f80fd5b9250929050565b5f805f805f805f8060c0898b031215614e30575f80fd5b883567ffffffffffffffff80821115614e47575f80fd5b614e538c838d01614dd1565b909a50985060208b0135915080821115614e6b575f80fd5b50614e788b828c01614dd1565b9097509550506040890135614e8c81614bce565b93506060890135614e9c81614bce565b92506080890135915060a0890135614eb381614bce565b809150509295985092959890939650565b5f8060408385031215614ed5575f80fd5b8235614ee081614bce565b9150602083013567ffffffffffffffff81168114614c9f575f80fd5b5f815180845260208085019450602084015f5b83811015614f345781516001600160a01b031687529582019590820190600101614f0f565b509495945050505050565b602081525f61148e6020830184614efc565b5f8060408385031215614f62575f80fd5b8235614f6d81614bce565b91506020830135614c9f81614bce565b5f67ffffffffffffffff821115614f9657614f96614caa565b5060051b60200190565b5f82601f830112614faf575f80fd5b81356020614fc4614fbf83614f7d565b614ce7565b8083825260208201915060208460051b870101935086841115614fe5575f80fd5b602086015b8481101561500a578035614ffd81614bce565b8352918301918301614fea565b509695505050505050565b5f8060408385031215615026575f80fd5b823567ffffffffffffffff8082111561503d575f80fd5b818501915085601f830112615050575f80fd5b81356020615060614fbf83614f7d565b82815260059290921b8401810191818101908984111561507e575f80fd5b8286015b8481101561510157803586811115615098575f80fd5b87016060818d03601f19018113156150ae575f80fd5b6150b6614cbe565b868301356150c381614bce565b81526040830135878201529082013590888211156150df575f80fd5b6150ed8e8884860101614d18565b604082015285525050918301918301615082565b5096505086013592505080821115615117575f80fd5b50614dc785828601614fa0565b5f805f8060808587031215615137575f80fd5b5050823594602084013594506040840135936060013592509050565b600181811c9082168061516757607f821691505b602082108103613b0657634e487b7160e01b5f52602260045260245ffd5b5f60208284031215615195575f80fd5b815161148e81614bce565b5f602082840312156151b0575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176108ca576108ca6151b7565b5f826151fc57634e487b7160e01b5f52601260045260245ffd5b500490565b5f60208284031215615211575f80fd5b8151801515811461148e575f80fd5b818103818111156108ca576108ca6151b7565b5f60208284031215615243575f80fd5b815160ff8116811461148e575f80fd5b8183525f60208085019450825f5b85811015614f3457813561527481614bce565b6001600160a01b031687529582019590820190600101615261565b8183525f7f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156152bf575f80fd5b8260051b80836020870137939093016020019392505050565b60e08082528a519082018190525f90602090610100840190828e01845b82811015615311578151845292840192908401906001016152f5565b5050508381036020850152615327818c8e615253565b915050828103604084015261533d81898b61528f565b91505085606083015261535b60808301866001600160a01b03169052565b6001600160a01b03841660a08301526001600160a01b03831660c08301529a9950505050505050505050565b634e487b7160e01b5f52603260045260245ffd5b5f6040808301604084528086518083526060925060608601915060608160051b8701016020808a015f5b84811015615433578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0018652815180516001600160a01b03168552838101518486015288015188850188905261542088860182614b8e565b96840196945050908201906001016153c5565b505087820390880152613da18189614efc565b808201808211156108ca576108ca6151b7565b600181815b8085111561549357815f1904821115615479576154796151b7565b8085161561548657918102915b93841c939080029061545e565b509250929050565b5f826154a9575060016108ca565b816154b557505f6108ca565b81600181146154cb57600281146154d5576154f1565b60019150506108ca565b60ff8411156154e6576154e66151b7565b50506001821b6108ca565b5060208310610133831016604e8410600b8410161715615514575081810a6108ca565b61551e8383615459565b805f1904821115615531576155316151b7565b029392505050565b5f61148e838361549b565b634e487b7160e01b5f52603160045260245ffd5b601f82111561382757805f5260205f20601f840160051c8101602085101561557d5750805b601f840160051c820191505b81811015611a46575f8155600101615589565b815167ffffffffffffffff8111156155b6576155b6614caa565b6155ca816155c48454615153565b84615558565b602080601f8311600181146155fd575f84156155e65750858301515b5f19600386901b1c1916600185901b178555611a3e565b5f85815260208120601f198616915b8281101561562b5788860151825594840194600190910190840161560c565b508582101561564857878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b5f82518060208501845e5f92019182525091905056fea2646970667358221220b56252bfc27c02b48f96f2f9c6b6a164639a1e5e27a11ba511b08de0764271d664736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x277 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71DDCFB8 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0xE73FAA2D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x787 JUMPI DUP1 PUSH4 0xFE0A4DD1 EQ PUSH2 0x7A6 JUMPI DUP1 PUSH4 0xFE330A51 EQ PUSH2 0x7C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x754 JUMPI DUP1 PUSH4 0xEEDC3C50 EQ PUSH2 0x768 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD48BFCA7 GT PUSH2 0xAC JUMPI DUP1 PUSH4 0xD48BFCA7 EQ PUSH2 0x6B3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6D2 JUMPI DUP1 PUSH4 0xE67AD759 EQ PUSH2 0x735 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x675 JUMPI DUP1 PUSH4 0xCDF456E1 EQ PUSH2 0x694 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0x11B JUMPI DUP1 PUSH4 0xAA6CA808 GT PUSH2 0x101 JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x5ED JUMPI DUP1 PUSH4 0xAA95D893 EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x62D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5CE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x71DDCFB8 EQ PUSH2 0x521 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x540 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x55F JUMPI DUP1 PUSH4 0x8F2248BC EQ PUSH2 0x59B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2BDD955A GT PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x52D1902D GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x5FA7B584 GT PUSH2 0x191 JUMPI DUP1 PUSH4 0x5FA7B584 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x50D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x599F69F7 EQ PUSH2 0x47C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1DB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0x3C2066A9 EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x455 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2BDD955A EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0x2F865568 EQ PUSH2 0x407 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x24A JUMPI DUP1 PUSH4 0x23B872DD GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x27D54A92 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x295B9300 EQ PUSH2 0x3D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x1A168DA2 EQ PUSH2 0x35F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xCFC7386 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x2F5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH2 0x7E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x4BBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x2EE CALLDATASIZE PUSH1 0x4 PUSH2 0x4C0C JUMP JUMPDEST PUSH2 0x8D0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x379 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C0C JUMP JUMPDEST PUSH2 0xF1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH2 0x398 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C23 JUMP JUMPDEST PUSH2 0x1470 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BC PUSH2 0x3B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C61 JUMP JUMPDEST PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH2 0x1590 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH2 0x402 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C7C JUMP JUMPDEST PUSH2 0x1599 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x412 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x421 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C61 JUMP JUMPDEST PUSH2 0x16AD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x1A4D JUMP JUMPDEST PUSH2 0x2F3 PUSH2 0x463 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D84 JUMP JUMPDEST PUSH2 0x1AD5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x473 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH2 0x1AF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x487 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x496 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E19 JUMP JUMPDEST PUSH2 0x1B22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x4B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C61 JUMP JUMPDEST PUSH2 0x1CB1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH2 0x4D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C61 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x518 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x1CC3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH2 0x53B CALLDATASIZE PUSH1 0x4 PUSH2 0x4C0C JUMP JUMPDEST PUSH2 0x1CD4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x3BC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x5B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0x1CDE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH2 0x1E14 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH2 0x5E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x1E65 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x601 PUSH2 0x1E72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x4F3F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x619 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH2 0x628 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C0C JUMP JUMPDEST PUSH2 0x1E7D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x638 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x680 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x68F CALLDATASIZE PUSH1 0x4 PUSH2 0x4C61 JUMP JUMPDEST PUSH2 0x1EE4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x3BC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x6CD CALLDATASIZE PUSH1 0x4 PUSH2 0x4C61 JUMP JUMPDEST PUSH2 0x2199 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH2 0x6EC CALLDATASIZE PUSH1 0x4 PUSH2 0x4F51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x740 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x74F CALLDATASIZE PUSH1 0x4 PUSH2 0x4C61 JUMP JUMPDEST PUSH2 0x21AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH2 0x21E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x773 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x782 CALLDATASIZE PUSH1 0x4 PUSH2 0x5015 JUMP JUMPDEST PUSH2 0x21F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x792 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x7A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C61 JUMP JUMPDEST PUSH2 0x2CC9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x7C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C0C JUMP JUMPDEST PUSH2 0x2D1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH2 0x7DF CALLDATASIZE PUSH1 0x4 PUSH2 0x5124 JUMP JUMPDEST PUSH2 0x380D JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP2 PUSH2 0x835 SWAP1 PUSH2 0x5153 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x861 SWAP1 PUSH2 0x5153 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x883 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x88F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x8C4 DUP2 DUP6 DUP6 PUSH2 0x381A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8D8 PUSH2 0x382C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1D8CF425 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x3B19E84A SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x91F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x943 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BF01E9B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x996 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9BA SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x85462D6F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA0D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA31 SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4F4608A2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA84 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA8 SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xAB3 PUSH2 0x38AD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xADE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH2 0xAEC DUP5 DUP11 PUSH2 0x51CB JUMP JUMPDEST PUSH2 0xAF6 SWAP2 SWAP1 PUSH2 0x51E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH4 0x23B872DD CALLER ADDRESS PUSH2 0xB18 PUSH5 0xE8D4A51000 DUP7 PUSH2 0x51E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB81 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0x5201 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBEA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC0E SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC74 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC98 SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 GT PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C2042414C554E4920737570706C792063616E6E6F74206265207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x726F000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD23 PUSH5 0xE8D4A51000 DUP5 PUSH2 0x51E2 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xD72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555344432062616C616E636520697320696E73756666696369656E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH2 0xD81 PUSH5 0xE8D4A51000 DUP5 PUSH2 0x51E2 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xDD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436865636B2074686520746F6B656E20616C6C6F77616E636500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH2 0xDDA CALLER DUP12 PUSH2 0x3B0C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP13 SWAP1 MSTORE PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH0 DUP7 DUP9 PUSH2 0xE25 PUSH5 0xE8D4A51000 DUP8 PUSH2 0x51E2 JUMP JUMPDEST PUSH2 0xE2F SWAP2 SWAP1 PUSH2 0x51CB JUMP JUMPDEST PUSH2 0xE39 SWAP2 SWAP1 PUSH2 0x51E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP SWAP1 DUP11 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE89 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEAD SWAP2 SWAP1 PUSH2 0x5201 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP PUSH2 0xEE1 PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xF17 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF24 PUSH2 0x382C JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xF99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E20616D6F756E74206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1D8CF425 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x3B19E84A SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFE0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1004 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x105C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472656173757279206E6F742073657400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x10D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742042414C00000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH0 PUSH2 0x10E3 DUP4 PUSH2 0x3B7F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0x1135 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4665652063616C63756C6174696F6E206572726F720000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x1143 DUP3 PUSH2 0x5E8 DUP4 DUP7 PUSH2 0x5220 JUMP JUMPDEST POP PUSH0 JUMPDEST PUSH2 0x114F PUSH0 PUSH2 0x3C8E JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1401 JUMPI PUSH0 PUSH2 0x1161 DUP2 DUP4 PUSH2 0x3C97 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH0 PUSH2 0x11E2 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1233 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C20737570706C792069732030000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1277 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x129B SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 PUSH2 0x12B2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS EQ JUMPDEST ISZERO PUSH2 0x12BF JUMPI POP POP POP PUSH2 0x13F9 JUMP JUMPDEST PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12FC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1320 SWAP2 SWAP1 PUSH2 0x5233 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH2 0x1332 DUP5 DUP5 DUP10 DUP6 PUSH2 0x3CA2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0x1384 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53686172652063616C63756C6174696F6E206572726F72000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13CE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13F2 SWAP2 SWAP1 PUSH2 0x5201 JUMP JUMPDEST POP POP POP POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1146 JUMP JUMPDEST POP PUSH2 0x140C CALLER DUP3 PUSH2 0x3DAE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH2 0xEE1 PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST PUSH0 CALLER PUSH2 0x147D DUP6 DUP3 DUP6 PUSH2 0x3DFB JUMP JUMPDEST PUSH2 0x1488 DUP6 DUP6 DUP6 PUSH2 0x3EAE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF5D2D998 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14E7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x150B SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x27D54A9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0x27D54A92 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x156C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x148E SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST PUSH0 PUSH2 0xF17 PUSH2 0x38AD JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15EB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x160F SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0xB27B5E7500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE SWAP2 SWAP3 POP DUP3 AND SWAP1 PUSH4 0xB27B5E75 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1681 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16A5 SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x6C9C007800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x6C9C0078 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x170D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1731 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x82755EBB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1784 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17A8 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17EF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1813 SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP DUP3 ISZERO ISZERO SWAP2 DUP7 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x187F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18A3 SWAP2 SWAP1 PUSH2 0x5201 JUMP JUMPDEST POP DUP1 PUSH2 0x18B0 JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2D6BC8EA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x64 DUP3 ADD MSTORE SWAP1 DUP5 AND SWAP1 PUSH4 0x2D6BC8EA SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1945 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1942 SWAP2 DUP2 ADD SWAP1 PUSH2 0x51A0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1A3E JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x5EFAAEBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x84 DUP3 ADD MSTORE PUSH0 SWAP2 DUP6 AND SWAP1 PUSH4 0x5EFAAEBB SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19C9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19ED SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1A3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75746920486F702053776170204661696C65642C20547279204275726E2829 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A55 PUSH2 0x382C JUMP JUMPDEST PUSH0 PUSH2 0x1A5F PUSH0 PUSH2 0x3C8E JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1AA8 JUMPI PUSH0 PUSH2 0x1A76 DUP2 DUP4 PUSH2 0x3C97 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND SUB PUSH2 0x1A95 JUMPI POP PUSH2 0x1AA0 JUMP JUMPDEST PUSH2 0x1A9E DUP2 PUSH2 0x16AD JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1A63 JUMP JUMPDEST POP POP PUSH2 0x1AD3 PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1ADD PUSH2 0x3F3D JUMP JUMPDEST PUSH2 0x1AE6 DUP3 PUSH2 0x400D JUMP JUMPDEST PUSH2 0x1AF0 DUP3 DUP3 PUSH2 0x4015 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1AFD PUSH2 0x4116 JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x1BF01E9B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x1BF01E9B SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B82 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BA6 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BF9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C1D SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH32 0xF0BF771400000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH4 0xF0BF7714 PUSH2 0x1C77 DUP4 DUP15 DUP15 DUP15 DUP15 DUP13 DUP16 DUP16 DUP14 PUSH1 0x24 DUP10 ADD PUSH2 0x52D8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C8E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CA0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1CB9 PUSH2 0x4178 JUMP JUMPDEST PUSH2 0x1AF0 PUSH0 DUP3 PUSH2 0x41EC JUMP JUMPDEST PUSH2 0x1CCB PUSH2 0x4178 JUMP JUMPDEST PUSH2 0x1AD3 PUSH0 PUSH2 0x4200 JUMP JUMPDEST PUSH0 PUSH2 0x8CA DUP3 PUSH2 0x427D JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1D2C JUMPI POP DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP2 AND LT ISZERO JUMPDEST ISZERO PUSH2 0x1D63 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 SWAP1 SWAP3 AND DUP3 OR OR DUP3 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE DUP2 SLOAD PUSH9 0xFF0000000000000000 NOT AND DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP2 PUSH2 0x835 SWAP1 PUSH2 0x5153 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x8C4 DUP2 DUP6 DUP6 PUSH2 0x3EAE JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF17 PUSH0 PUSH2 0x43B4 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1E87 PUSH2 0x38AD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1EB2 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH2 0x1EC0 DUP5 DUP8 PUSH2 0x51CB JUMP JUMPDEST PUSH2 0x1ECA SWAP2 SWAP1 PUSH2 0x51E2 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EDB PUSH5 0xE8D4A51000 DUP3 PUSH2 0x51E2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x1F2E JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x1F4A JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1F58 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1F8F JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x1FDA JUMPI DUP5 SLOAD PUSH9 0xFF0000000000000000 NOT AND PUSH9 0x10000000000000000 OR DUP6 SSTORE JUMPDEST PUSH2 0x204E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x42616C756E690000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x42414C554E490000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x43C0 JUMP JUMPDEST PUSH2 0x2057 CALLER PUSH2 0x43D2 JUMP JUMPDEST PUSH2 0x205F PUSH2 0x43E3 JUMP JUMPDEST PUSH2 0x2067 PUSH2 0x43F3 JUMP JUMPDEST PUSH2 0x2079 ADDRESS PUSH8 0xDE0B6B3A7640000 PUSH2 0x3B0C JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH32 0x1BF01E9B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH4 0x1BF01E9B SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20F6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x211A SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0x1A3E JUMPI DUP5 SLOAD PUSH9 0xFF0000000000000000 NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x21A1 PUSH2 0x4178 JUMP JUMPDEST PUSH2 0x1AF0 PUSH0 DUP3 PUSH2 0x43FB JUMP JUMPDEST PUSH2 0x21B3 PUSH2 0x4178 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0xF17 PUSH8 0xDE0B6B3A7640000 PUSH2 0x427D JUMP JUMPDEST PUSH2 0x21FC PUSH2 0x382C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xF5D2D99800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xF5D2D998 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x225C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2280 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3E6DFA36 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22D3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22F7 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6C9C0078 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x234A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x236E SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BF01E9B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23C1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23E5 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x243D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4167656E7420666163746F7279206E6F74207365740000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9B76A5CD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x9B76A5CD SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x249B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24BF SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH0 DUP7 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24DC JUMPI PUSH2 0x24DC PUSH2 0x4CAA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2505 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP8 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2523 JUMPI PUSH2 0x2523 PUSH2 0x4CAA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x254C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP9 MLOAD DUP2 LT ISZERO PUSH2 0x264B JUMPI PUSH2 0x257D PUSH0 DUP11 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2570 JUMPI PUSH2 0x2570 PUSH2 0x5387 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x440F JUMP JUMPDEST ISZERO DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2590 JUMPI PUSH2 0x2590 PUSH2 0x5387 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP9 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x25B4 JUMPI PUSH2 0x25B4 PUSH2 0x5387 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2602 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2626 SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2638 JUMPI PUSH2 0x2638 PUSH2 0x5387 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x2551 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0xEEDC3C5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xEEDC3C50 SWAP1 PUSH2 0x2693 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x539B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26BC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 JUMPDEST DUP9 MLOAD DUP2 LT ISZERO PUSH2 0x2C97 JUMPI PUSH0 DUP10 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x26DE JUMPI PUSH2 0x26DE PUSH2 0x5387 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2730 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2754 SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP11 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH2 0xBB8 PUSH1 0x44 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 DUP12 AND SWAP1 PUSH4 0x1698EE82 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27AD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27D1 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH2 0x1F4 PUSH1 0x44 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 DUP13 AND SWAP1 PUSH4 0x1698EE82 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x282A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x284E SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH2 0x1F4 PUSH1 0x44 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 DUP14 AND SWAP1 PUSH4 0x1698EE82 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x28A7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28CB SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP13 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH2 0xBB8 PUSH1 0x44 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 DUP15 AND SWAP1 PUSH4 0x1698EE82 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2924 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2948 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO ISZERO DUP1 PUSH2 0x296A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST DUP1 PUSH2 0x297D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST DUP1 PUSH2 0x2990 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST SWAP1 POP DUP10 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x29A4 JUMPI PUSH2 0x29A4 PUSH2 0x5387 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP1 ISZERO PUSH2 0x29B5 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x29C6 JUMPI PUSH2 0x29C4 PUSH0 DUP9 PUSH2 0x43FB JUMP JUMPDEST POP JUMPDEST PUSH0 DUP10 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x29D9 JUMPI PUSH2 0x29D9 PUSH2 0x5387 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 PUSH2 0x29EC SWAP2 SWAP1 PUSH2 0x5220 JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x2A77 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A3D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A61 SWAP2 SWAP1 PUSH2 0x5201 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x2CA0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1D8CF425 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x3B19E84A SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2ABE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2AE2 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x85462D6F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B35 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B59 SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4F4608A2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BAC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2BD0 SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP DUP13 DUP13 DUP2 MLOAD DUP2 LT PUSH2 0x2BE4 JUMPI PUSH2 0x2BE4 PUSH2 0x5387 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 GT ISZERO PUSH2 0x2C80 JUMPI PUSH0 DUP2 PUSH2 0x2BFF DUP5 DUP8 PUSH2 0x51CB JUMP JUMPDEST PUSH2 0x2C09 SWAP2 SWAP1 PUSH2 0x51E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP SWAP1 DUP14 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C59 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C7D SWAP2 SWAP1 PUSH2 0x5201 JUMP JUMPDEST POP POP JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP10 ADD SWAP9 POP PUSH2 0x26C2 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMPDEST PUSH2 0x1AF0 PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST PUSH2 0x2CD1 PUSH2 0x4178 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2D13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH2 0xEE1 DUP2 PUSH2 0x4200 JUMP JUMPDEST PUSH2 0x2D24 PUSH2 0x382C JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x2D99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E20616D6F756E74206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x3E6DFA3600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x3E6DFA36 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DF9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E1D SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2E75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E6973776170466163746F7279206E6F742073657400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1D8CF425 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x3B19E84A SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2EBC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EE0 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2F38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472656173757279206E6F742073657400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x6C9C007800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x6C9C0078 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F98 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FBC SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3014 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x574E4154495645206E6F74207365740000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH0 PUSH2 0x301E DUP6 PUSH2 0x3B7F JUMP JUMPDEST SWAP1 POP DUP5 DUP2 GT ISZERO PUSH2 0x3070 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4665652063616C63756C6174696F6E206572726F720000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH0 PUSH2 0x307B DUP3 DUP8 PUSH2 0x5220 JUMP JUMPDEST SWAP1 POP PUSH2 0x3087 DUP5 DUP3 PUSH2 0x1E65 JUMP JUMPDEST POP PUSH0 JUMPDEST PUSH2 0x3093 PUSH0 PUSH2 0x3C8E JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x379B JUMPI PUSH0 PUSH2 0x30A5 DUP2 DUP4 PUSH2 0x3C97 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x30FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH0 PUSH2 0x3126 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x3177 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C20737570706C792069732030000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31BB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31DF SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 PUSH2 0x31F6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS EQ JUMPDEST ISZERO PUSH2 0x3203 JUMPI POP POP POP PUSH2 0x3793 JUMP JUMPDEST PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3240 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3264 SWAP2 SWAP1 PUSH2 0x5233 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH2 0x3276 DUP5 DUP5 DUP11 DUP6 PUSH2 0x3CA2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0x32C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53686172652063616C63756C6174696F6E206572726F72000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP7 AND SUB PUSH2 0x335B JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x332C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3350 SWAP2 SWAP1 PUSH2 0x5201 JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0x3793 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x82755EBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x82755EBB SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x33BB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33DF SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3437 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42616C756E6953776170706572206E6F74207365740000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP8 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x349C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34C0 SWAP2 SWAP1 PUSH2 0x5201 JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2D6BC8EA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE CALLER PUSH1 0x64 DUP3 ADD MSTORE SWAP1 DUP3 AND SWAP1 PUSH4 0x2D6BC8EA SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3556 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3553 SWAP2 DUP2 ADD SWAP1 PUSH2 0x51A0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x36C8 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x5EFAAEBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP13 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE CALLER PUSH1 0x84 DUP3 ADD MSTORE PUSH0 SWAP2 DUP4 AND SWAP1 PUSH4 0x5EFAAEBB SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x35DA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x35FE SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x364F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C7469486F7053776170204661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x369D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x36C1 SWAP2 SWAP1 PUSH2 0x5201 JUMP JUMPDEST POP POP PUSH2 0x378C JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x3717 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53776170204661696C6564000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3765 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3789 SWAP2 SWAP1 PUSH2 0x5201 JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x308A JUMP JUMPDEST POP PUSH2 0x37A6 CALLER DUP4 PUSH2 0x3DAE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP PUSH2 0xEE1 PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x1EDB DUP6 DUP6 DUP6 DUP6 PUSH2 0x3CA2 JUMP JUMPDEST PUSH2 0x3827 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x4430 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE ADD PUSH2 0x38A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP1 DUP1 JUMPDEST PUSH2 0x38BA PUSH0 PUSH2 0x3C8E JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x3B06 JUMPI PUSH0 PUSH2 0x38CC DUP2 DUP4 PUSH2 0x3C97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3913 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3937 SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0x3947 JUMPI POP POP PUSH2 0x3AFE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x397F JUMPI PUSH2 0x396C DUP2 PUSH5 0xE8D4A51000 PUSH2 0x51CB JUMP JUMPDEST PUSH2 0x3976 SWAP1 DUP6 PUSH2 0x5446 JUMP JUMPDEST SWAP4 POP POP POP PUSH2 0x3AFE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xBB3BA04C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xBB3BA04C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x39DF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A03 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0xB27B5E7500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0xB27B5E75 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A78 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A9C SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x3AED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E2076616C756174696F6E206973207A65726F000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x3AF7 DUP2 DUP8 PUSH2 0x5446 JUMP JUMPDEST SWAP6 POP POP POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x38B1 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3B4E JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x1AF0 PUSH0 DUP4 DUP4 PUSH2 0x4558 JUMP JUMPDEST PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x85462D6F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3BD1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BF5 SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4F4608A2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C48 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C6C SWAP2 SWAP1 PUSH2 0x51A0 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH2 0x3C7A DUP5 DUP3 PUSH2 0x5220 JUMP JUMPDEST PUSH2 0x3C84 SWAP1 DUP8 PUSH2 0x51CB JUMP JUMPDEST PUSH2 0x1EDB SWAP2 SWAP1 PUSH2 0x51E2 JUMP JUMPDEST PUSH0 PUSH2 0x8CA DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x148E DUP4 DUP4 PUSH2 0x46BD JUMP JUMPDEST PUSH0 DUP1 DUP6 GT PUSH2 0x3CF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C20737570706C792063616E6E6F74206265207A65726F0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x12 DUP3 GT ISZERO PUSH2 0x3D43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20646563696D616C732073686F756C64206265203C3D2031380000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH2 0x3D51 DUP6 PUSH1 0x12 PUSH2 0x5220 JUMP JUMPDEST PUSH2 0x3D5C SWAP1 PUSH1 0xA PUSH2 0x5539 JUMP JUMPDEST SWAP1 POP PUSH1 0x12 DUP6 LT ISZERO PUSH2 0x3D84 JUMPI PUSH2 0x3D71 DUP2 DUP10 PUSH2 0x51E2 JUMP JUMPDEST SWAP3 POP PUSH2 0x3D7D DUP2 DUP8 PUSH2 0x51E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D8B JUMP JUMPDEST DUP8 SWAP3 POP DUP6 SWAP2 POP JUMPDEST PUSH0 DUP4 PUSH2 0x3D97 DUP10 DUP6 PUSH2 0x51CB JUMP JUMPDEST PUSH2 0x3DA1 SWAP2 SWAP1 PUSH2 0x51E2 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3DF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x1AF0 DUP3 PUSH0 DUP4 PUSH2 0x4558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x3EA8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x3E9A JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x3EA8 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x4430 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3EF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3F32 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x3827 DUP4 DUP4 DUP4 PUSH2 0x4558 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x3FD6 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3FCA PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1AD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEE1 PUSH2 0x4178 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x406F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x406C SWAP2 DUP2 ADD SWAP1 PUSH2 0x51A0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x40B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x410C JUMPI PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x3827 DUP4 DUP4 PUSH2 0x46E3 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1AD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x41AA PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1AD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH0 PUSH2 0x148E DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4738 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x42CF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42F3 SWAP2 SWAP1 PUSH2 0x5233 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH2 0x4321 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x4372 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C20737570706C792063616E6E6F74206265207A65726F0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH0 PUSH2 0x437B PUSH2 0x38AD JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x4388 DUP3 DUP8 PUSH2 0x51CB JUMP JUMPDEST PUSH2 0x4392 SWAP2 SWAP1 PUSH2 0x51E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x439F DUP4 PUSH1 0x12 PUSH2 0x5220 JUMP JUMPDEST PUSH2 0x43AA SWAP1 PUSH1 0xA PUSH2 0x5539 JUMP JUMPDEST PUSH2 0x1EDB SWAP1 DUP6 PUSH2 0x51E2 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x148E DUP4 PUSH2 0x481B JUMP JUMPDEST PUSH2 0x43C8 PUSH2 0x4874 JUMP JUMPDEST PUSH2 0x1AF0 DUP3 DUP3 PUSH2 0x48DB JUMP JUMPDEST PUSH2 0x43DA PUSH2 0x4874 JUMP JUMPDEST PUSH2 0xEE1 DUP2 PUSH2 0x493E JUMP JUMPDEST PUSH2 0x43EB PUSH2 0x4874 JUMP JUMPDEST PUSH2 0x1AD3 PUSH2 0x4946 JUMP JUMPDEST PUSH2 0x1AD3 PUSH2 0x4874 JUMP JUMPDEST PUSH0 PUSH2 0x148E DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x494E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x148E JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x4493 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x44D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0x1A46 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x4549 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x45A5 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x459A SWAP2 SWAP1 PUSH2 0x5446 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x462E SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x4610 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x464C JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x466A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x46AF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x46D2 JUMPI PUSH2 0x46D2 PUSH2 0x5387 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x46EC DUP3 PUSH2 0x499A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x4730 JUMPI PUSH2 0x3827 DUP3 DUP3 PUSH2 0x4A36 JUMP JUMPDEST PUSH2 0x1AF0 PUSH2 0x4A9F JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x4812 JUMPI PUSH0 PUSH2 0x475A PUSH1 0x1 DUP4 PUSH2 0x5220 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH2 0x476D SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x5220 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x47CC JUMPI PUSH0 DUP7 PUSH0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x478B JUMPI PUSH2 0x478B PUSH2 0x5387 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x47AB JUMPI PUSH2 0x47AB PUSH2 0x5387 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x47DD JUMPI PUSH2 0x47DD PUSH2 0x5544 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x8CA JUMP JUMPDEST PUSH0 SWAP2 POP POP PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x4868 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x4854 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1AD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x48E3 PUSH2 0x4874 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x492F DUP5 DUP3 PUSH2 0x559C JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0x3EA8 DUP4 DUP3 PUSH2 0x559C JUMP JUMPDEST PUSH2 0x2CD1 PUSH2 0x4874 JUMP JUMPDEST PUSH2 0x3B59 PUSH2 0x4874 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x4993 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x8CA JUMP JUMPDEST POP PUSH0 PUSH2 0x8CA JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x49E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD0B JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x4A52 SWAP2 SWAP1 PUSH2 0x5658 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x4A8A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4A8F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1EDB DUP6 DUP4 DUP4 PUSH2 0x4AD7 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x1AD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x4AEC JUMPI PUSH2 0x4AE7 DUP3 PUSH2 0x4B4C JUMP JUMPDEST PUSH2 0x148E JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x4B03 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x4B45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD0B JUMP JUMPDEST POP DUP1 PUSH2 0x148E JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x4B5C JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x148E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4B8E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4BF3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4BFE DUP2 PUSH2 0x4BCE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C1C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4C35 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x4C40 DUP2 PUSH2 0x4BCE JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x4C50 DUP2 PUSH2 0x4BCE JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C71 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x148E DUP2 PUSH2 0x4BCE JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4C8D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4C9F DUP2 PUSH2 0x4BCE JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4CE1 JUMPI PUSH2 0x4CE1 PUSH2 0x4CAA JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4D10 JUMPI PUSH2 0x4D10 PUSH2 0x4CAA JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4D27 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4D41 JUMPI PUSH2 0x4D41 PUSH2 0x4CAA JUMP JUMPDEST PUSH2 0x4D54 PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0x4CE7 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x4D68 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4D95 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4DA0 DUP2 PUSH2 0x4BCE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4DBB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4DC7 DUP6 DUP3 DUP7 ADD PUSH2 0x4D18 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x4DE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4DF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x4E12 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x4E30 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4E47 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4E53 DUP13 DUP4 DUP14 ADD PUSH2 0x4DD1 JUMP JUMPDEST SWAP1 SWAP11 POP SWAP9 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4E6B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E78 DUP12 DUP3 DUP13 ADD PUSH2 0x4DD1 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x4E8C DUP2 PUSH2 0x4BCE JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH2 0x4E9C DUP2 PUSH2 0x4BCE JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH2 0x4EB3 DUP2 PUSH2 0x4BCE JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4ED5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4EE0 DUP2 PUSH2 0x4BCE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x4C9F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4F34 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4F0F JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x148E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4EFC JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4F62 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4F6D DUP2 PUSH2 0x4BCE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4C9F DUP2 PUSH2 0x4BCE JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4F96 JUMPI PUSH2 0x4F96 PUSH2 0x4CAA JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4FAF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x4FC4 PUSH2 0x4FBF DUP4 PUSH2 0x4F7D JUMP JUMPDEST PUSH2 0x4CE7 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x4FE5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x500A JUMPI DUP1 CALLDATALOAD PUSH2 0x4FFD DUP2 PUSH2 0x4BCE JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x4FEA JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5026 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x503D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5050 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x5060 PUSH2 0x4FBF DUP4 PUSH2 0x4F7D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x507E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x5101 JUMPI DUP1 CALLDATALOAD DUP7 DUP2 GT ISZERO PUSH2 0x5098 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP8 ADD PUSH1 0x60 DUP2 DUP14 SUB PUSH1 0x1F NOT ADD DUP2 SGT ISZERO PUSH2 0x50AE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x50B6 PUSH2 0x4CBE JUMP JUMPDEST DUP7 DUP4 ADD CALLDATALOAD PUSH2 0x50C3 DUP2 PUSH2 0x4BCE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD DUP8 DUP3 ADD MSTORE SWAP1 DUP3 ADD CALLDATALOAD SWAP1 DUP9 DUP3 GT ISZERO PUSH2 0x50DF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x50ED DUP15 DUP9 DUP5 DUP7 ADD ADD PUSH2 0x4D18 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE DUP6 MSTORE POP POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x5082 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x5117 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC7 DUP6 DUP3 DUP7 ADD PUSH2 0x4FA0 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x5137 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x5167 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3B06 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5195 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x148E DUP2 PUSH2 0x4BCE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x8CA JUMPI PUSH2 0x8CA PUSH2 0x51B7 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x51FC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5211 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x148E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x8CA JUMPI PUSH2 0x8CA PUSH2 0x51B7 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5243 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x148E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP4 MSTORE PUSH0 PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP3 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4F34 JUMPI DUP2 CALLDATALOAD PUSH2 0x5274 DUP2 PUSH2 0x4BCE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x5261 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x52BF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x5 SHL DUP1 DUP4 PUSH1 0x20 DUP8 ADD CALLDATACOPY SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xE0 DUP1 DUP3 MSTORE DUP11 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x100 DUP5 ADD SWAP1 DUP3 DUP15 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5311 JUMPI DUP2 MLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x52F5 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x5327 DUP2 DUP13 DUP15 PUSH2 0x5253 JUMP JUMPDEST SWAP2 POP POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x533D DUP2 DUP10 DUP12 PUSH2 0x528F JUMP JUMPDEST SWAP2 POP POP DUP6 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x535B PUSH1 0x80 DUP4 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0xC0 DUP4 ADD MSTORE SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP1 DUP4 ADD PUSH1 0x40 DUP5 MSTORE DUP1 DUP7 MLOAD DUP1 DUP4 MSTORE PUSH1 0x60 SWAP3 POP PUSH1 0x60 DUP7 ADD SWAP2 POP PUSH1 0x60 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD PUSH1 0x20 DUP1 DUP11 ADD PUSH0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x5433 JUMPI DUP10 DUP5 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA0 ADD DUP7 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP4 DUP2 ADD MLOAD DUP5 DUP7 ADD MSTORE DUP9 ADD MLOAD DUP9 DUP6 ADD DUP9 SWAP1 MSTORE PUSH2 0x5420 DUP9 DUP7 ADD DUP3 PUSH2 0x4B8E JUMP JUMPDEST SWAP7 DUP5 ADD SWAP7 SWAP5 POP POP SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x53C5 JUMP JUMPDEST POP POP DUP8 DUP3 SUB SWAP1 DUP9 ADD MSTORE PUSH2 0x3DA1 DUP2 DUP10 PUSH2 0x4EFC JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x8CA JUMPI PUSH2 0x8CA PUSH2 0x51B7 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x5493 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x5479 JUMPI PUSH2 0x5479 PUSH2 0x51B7 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x5486 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x545E JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x54A9 JUMPI POP PUSH1 0x1 PUSH2 0x8CA JUMP JUMPDEST DUP2 PUSH2 0x54B5 JUMPI POP PUSH0 PUSH2 0x8CA JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x54CB JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x54D5 JUMPI PUSH2 0x54F1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x8CA JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x54E6 JUMPI PUSH2 0x54E6 PUSH2 0x51B7 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x8CA JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x5514 JUMPI POP DUP2 DUP2 EXP PUSH2 0x8CA JUMP JUMPDEST PUSH2 0x551E DUP4 DUP4 PUSH2 0x5459 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x5531 JUMPI PUSH2 0x5531 PUSH2 0x51B7 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x148E DUP4 DUP4 PUSH2 0x549B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3827 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x557D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A46 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x5589 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x55B6 JUMPI PUSH2 0x55B6 PUSH2 0x4CAA JUMP JUMPDEST PUSH2 0x55CA DUP2 PUSH2 0x55C4 DUP5 SLOAD PUSH2 0x5153 JUMP JUMPDEST DUP5 PUSH2 0x5558 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x55FD JUMPI PUSH0 DUP5 ISZERO PUSH2 0x55E6 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1A3E JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x562B JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x560C JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x5648 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 PUSH3 0x52BFC2 PUSH29 0x2B48F96F2F9C6B6A164639A1E5E27A11BA511B08DE0764271D664736F PUSH13 0x63430008190033000000000000 ","sourceMap":"2383:22992:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5505:186;;;;;;;;;;-1:-1:-1;5505:186:3;;;;;:::i;:::-;;:::i;:::-;;;1236:14:26;;1229:22;1211:41;;1199:2;1184:18;5505:186:3;1071:187:26;15576:1163:25;;;;;;;;;;-1:-1:-1;15576:1163:25;;;;;:::i;:::-;;:::i;:::-;;24398:103;;;;;;;;;;;;;:::i;:::-;;;1622:18:26;1610:31;;;1592:50;;1580:2;1565:18;24398:103:25;1448:200:26;4191:152:3;;;;;;;;;;-1:-1:-1;4322:14:3;;4191:152;;;1799:25:26;;;1787:2;1772:18;4191:152:3;1653:177:26;10618:1405:25;;;;;;;;;;-1:-1:-1;10618:1405:25;;;;;:::i;:::-;;:::i;6251:244:3:-;;;;;;;;;;-1:-1:-1;6251:244:3;;;;;:::i;:::-;;:::i;15183:222:25:-;;;;;;;;;;-1:-1:-1;15183:222:25;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2844:55:26;;;2826:74;;2814:2;2799:18;15183:222:25;2680:226:26;19717:107:25;;;;;;;;;;;;;:::i;19322:242::-;;;;;;;;;;-1:-1:-1;19322:242:25;;;;;:::i;:::-;;:::i;8407:920::-;;;;;;;;;;-1:-1:-1;8407:920:25;;;;;:::i;:::-;;:::i;4049:82:3:-;;;;;;;;;;-1:-1:-1;4049:82:3;;4122:2;3373:36:26;;3361:2;3346:18;4049:82:3;3231:184:26;9576:275:25;;;;;;;;;;;;;:::i;4158:214:2:-;;;;;;:::i;:::-;;:::i;3705:134::-;;;;;;;;;;;;;:::i;17177:501:25:-;;;;;;;;;;-1:-1:-1;17177:501:25;;;;;:::i;:::-;;:::i;25250:122::-;;;;;;;;;;-1:-1:-1;25250:122:25;;;;;:::i;:::-;;:::i;4401:171:3:-;;;;;;;;;;-1:-1:-1;4401:171:3;;;;;:::i;:::-;-1:-1:-1;;;;;4545:20:3;4466:7;4545:20;;;2359;4545;;;;;;;4401:171;3155:101:0;;;;;;;;;;;;;:::i;20046:131:25:-;;;;;;;;;;-1:-1:-1;20046:131:25;;;;;:::i;:::-;;:::i;2693:33::-;;;;;;;;;;-1:-1:-1;2693:33:25;;;;-1:-1:-1;;;;;2693:33:25;;;2441:144:0;;;;;;;;;;-1:-1:-1;1313:22:0;2570:8;-1:-1:-1;;;;;2570:8:0;2441:144;;3810:223:25;;;;;;;;;;-1:-1:-1;3810:223:25;;;;;:::i;:::-;;:::i;3268:148:3:-;;;;;;;;;;;;;:::i;4767:178::-;;;;;;;;;;-1:-1:-1;4767:178:3;;;;;:::i;:::-;;:::i;24658:103:25:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;17952:327::-;;;;;;;;;;-1:-1:-1;17952:327:25;;;;;:::i;:::-;;:::i;1819:58:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3453:349:25;;;;;;;;;;-1:-1:-1;3453:349:25;;;;;:::i;:::-;;:::i;2814:24::-;;;;;;;;;;-1:-1:-1;2814:24:25;;;;-1:-1:-1;;;;;2814:24:25;;;24944:116;;;;;;;;;;-1:-1:-1;24944:116:25;;;;;:::i;:::-;;:::i;5003:195:3:-;;;;;;;;;;-1:-1:-1;5003:195:3;;;;;:::i;:::-;-1:-1:-1;;;;;5162:20:3;;;5083:7;5162:20;;;:13;:20;;;;;;;;:29;;;;;;;;;;;;;5003:195;4041:117:25;;;;;;;;;;-1:-1:-1;4041:117:25;;;;;:::i;:::-;;:::i;4647:105::-;;;;;;;;;;;;;:::i;5381:2491::-;;;;;;;;;;-1:-1:-1;5381:2491:25;;;;;:::i;:::-;;:::i;3405:215:0:-;;;;;;;;;;-1:-1:-1;3405:215:0;;;;;:::i;:::-;;:::i;12206:2810:25:-;;;;;;;;;;-1:-1:-1;12206:2810:25;;;;;:::i;:::-;;:::i;18742:304::-;;;;;;;;;;-1:-1:-1;18742:304:25;;;;;:::i;:::-;;:::i;3011:144:3:-;3141:7;3134:14;;3056:13;;2359:20;;3134:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144;:::o;5505:186::-;5578:4;966:10:4;5632:31:3;966:10:4;5648:7:3;5657:5;5632:8;:31::i;:::-;5680:4;5673:11;;;5505:186;;;;;:::o;15576:1163:25:-;3251:21:5;:19;:21::i;:::-;15673:8:25::1;::::0;:22:::1;::::0;;-1:-1:-1;;;15673:22:25;;;;15654:16:::1;::::0;-1:-1:-1;;;;;15673:8:25::1;::::0;:20:::1;::::0;:22:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:8;:22:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15654:41;;15706:12;15721:8;;;;;;;;;-1:-1:-1::0;;;;;15721:8:25::1;-1:-1:-1::0;;;;;15721:16:25::1;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15706:33;;15750:16;15769:8;;;;;;;;;-1:-1:-1::0;;;;;15769:8:25::1;-1:-1:-1::0;;;;;15769:19:25::1;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15750:40;;15801:17;15821:8;;;;;;;;;-1:-1:-1::0;;;;;15821:8:25::1;-1:-1:-1::0;;;;;15821:20:25::1;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15801:42;;15854:25;15882:23;:21;:23::i;:::-;15854:51;;15916:22;15941:13;4322:14:3::0;;;4191:152;15941:13:25::1;15916:38:::0;-1:-1:-1;15965:20:25::1;15916:38:::0;15989:35:::1;16007:17:::0;15989:15;:35:::1;:::i;:::-;15988:54;;;;:::i;:::-;15965:77:::0;-1:-1:-1;;;;;;16053:25:25;::::1;;16079:10;16099:4;16106:19;16121:4;15965:77:::0;16106:19:::1;:::i;:::-;16053:73;::::0;;::::1;::::0;;;;;;-1:-1:-1;;;;;13962:15:26;;;16053:73:25::1;::::0;::::1;13944:34:26::0;14014:15;;;;13994:18;;;13987:43;14046:18;;;14039:34;13856:18;;16053:73:25::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;16155:34:25::1;::::0;-1:-1:-1;;;16155:34:25;;16178:10:::1;16155:34;::::0;::::1;2826:74:26::0;16137:15:25::1;::::0;-1:-1:-1;;;;;16155:22:25;::::1;::::0;::::1;::::0;2799:18:26;;16155:34:25::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16218:49;::::0;;;;16241:10:::1;16218:49;::::0;::::1;14601:34:26::0;16261:4:25::1;14651:18:26::0;;;14644:43;16137:52:25;;-1:-1:-1;16200:15:25::1;::::0;-1:-1:-1;;;;;16218:22:25;::::1;::::0;::::1;::::0;14513:18:26;;16218:49:25::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16200:67;;16305:1;16288:14;:18;16280:65;;;::::0;-1:-1:-1;;;16280:65:25;;14900:2:26;16280:65:25::1;::::0;::::1;14882:21:26::0;14939:2;14919:18;;;14912:30;14978:34;14958:18;;;14951:62;15049:4;15029:18;;;15022:32;15071:19;;16280:65:25::1;;;;;;;;;16375:19;16390:4;16375:12:::0;:19:::1;:::i;:::-;16364:7;:30;;16356:71;;;::::0;-1:-1:-1;;;16356:71:25;;15303:2:26;16356:71:25::1;::::0;::::1;15285:21:26::0;15342:2;15322:18;;;15315:30;15381;15361:18;;;15354:58;15429:18;;16356:71:25::1;15101:352:26::0;16356:71:25::1;16457:19;16472:4;16457:12:::0;:19:::1;:::i;:::-;16446:7;:30;;16438:68;;;::::0;-1:-1:-1;;;16438:68:25;;15660:2:26;16438:68:25::1;::::0;::::1;15642:21:26::0;15699:2;15679:18;;;15672:30;15738:27;15718:18;;;15711:55;15783:18;;16438:68:25::1;15458:349:26::0;16438:68:25::1;16519:34;16525:10;16537:15;16519:5;:34::i;:::-;16569:33;::::0;;16574:10:::1;15986:74:26::0;;16091:2;16076:18;;16069:34;;;16569:33:25::1;::::0;15959:18:26;16569:33:25::1;;;;;;;16615:11;16666:9:::0;16654:8;16631:19:::1;16646:4;16631:12:::0;:19:::1;:::i;:::-;16630:32;;;;:::i;:::-;16629:46;;;;:::i;:::-;16686:45;::::0;-1:-1:-1;;;16686:45:25;;-1:-1:-1;;;;;16004:55:26;;;16686:45:25::1;::::0;::::1;15986:74:26::0;16076:18;;;16069:34;;;16615:60:25;;-1:-1:-1;16686:30:25;;::::1;::::0;::::1;::::0;15959:18:26;;16686:45:25::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;15643:1096;;;;;;;;;;3293:20:5::0;1805:1;2388:30;3969:23;3716:283;3293:20;15576:1163:25;:::o;24398:103::-;24443:6;24469:24;8870:21:1;8325:39;;;;8243:128;24469:24:25;24462:31;;24398:103;:::o;10618:1405::-;3251:21:5;:19;:21::i;:::-;10711:1:25::1;10698:10;:14;10690:61;;;::::0;-1:-1:-1;;;10690:61:25;;16316:2:26;10690:61:25::1;::::0;::::1;16298:21:26::0;16355:2;16335:18;;;16328:30;16394:34;16374:18;;;16367:62;16465:4;16445:18;;;16438:32;16487:19;;10690:61:25::1;16114:398:26::0;10690:61:25::1;10781:8;::::0;:22:::1;::::0;;-1:-1:-1;;;10781:22:25;;;;10762:16:::1;::::0;-1:-1:-1;;;;;10781:8:25::1;::::0;:20:::1;::::0;:22:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:8;:22:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10762:41:::0;-1:-1:-1;;;;;;10822:22:25;::::1;10814:51;;;::::0;-1:-1:-1;;;10814:51:25;;16719:2:26;10814:51:25::1;::::0;::::1;16701:21:26::0;16758:2;16738:18;;;16731:30;16797:18;16777;;;16770:46;16833:18;;10814:51:25::1;16517:340:26::0;10814:51:25::1;10894:10;4466:7:3::0;4545:20;;;2359;4545;;;;;;10909:10:25;-1:-1:-1;10884:35:25::1;10876:64;;;::::0;-1:-1:-1;;;10876:64:25;;17064:2:26;10876:64:25::1;::::0;::::1;17046:21:26::0;17103:2;17083:18;;;17076:30;17142:18;17122;;;17115:46;17178:18;;10876:64:25::1;16862:340:26::0;10876:64:25::1;10951:26;10980:39;11008:10;10980:27;:39::i;:::-;10951:68;;11060:10;11038:18;:32;;11030:66;;;::::0;-1:-1:-1;;;11030:66:25;;17409:2:26;11030:66:25::1;::::0;::::1;17391:21:26::0;17448:2;17428:18;;;17421:30;17487:23;17467:18;;;17460:51;17528:18;;11030:66:25::1;17207:345:26::0;11030:66:25::1;11107:51;11116:8:::0;11126:31:::1;11139:18:::0;11126:10;:31:::1;:::i;11107:51::-;;11176:9;11171:745;11191:15;:6;:13;:15::i;:::-;11187:1;:19;11171:745;;;11228:13;11244:12;11228:13:::0;11254:1;11244:9:::1;:12::i;:::-;11228:28:::0;-1:-1:-1;;;;;;11279:19:25;::::1;11271:53;;;::::0;-1:-1:-1;;;11271:53:25;;17892:2:26;11271:53:25::1;::::0;::::1;17874:21:26::0;17931:2;17911:18;;;17904:30;17970:23;17950:18;;;17943:51;18011:18;;11271:53:25::1;17690:345:26::0;11271:53:25::1;11339:19;11361:13;4322:14:3::0;;;4191:152;11361:13:25::1;11339:35;;11411:1;11397:11;:15;11389:45;;;::::0;-1:-1:-1;;;11389:45:25;;18242:2:26;11389:45:25::1;::::0;::::1;18224:21:26::0;18281:2;18261:18;;;18254:30;18320:19;18300:18;;;18293:47;18357:18;;11389:45:25::1;18040:341:26::0;11389:45:25::1;11477:38;::::0;-1:-1:-1;;;11477:38:25;;11509:4:::1;11477:38;::::0;::::1;2826:74:26::0;11449:25:25::1;::::0;-1:-1:-1;;;;;11477:23:25;::::1;::::0;::::1;::::0;2799:18:26;;11477:38:25::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11449:66:::0;-1:-1:-1;11534:22:25;;;:48:::1;;-1:-1:-1::0;;;;;;11560:22:25;::::1;11577:4;11560:22;11534:48;11530:62;;;11584:8;;;;;11530:62;11607:16;11641:5;-1:-1:-1::0;;;;;11626:30:25::1;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11607:51;;;;11673:13;11689:82;11710:11;11723:17;11742:18;11762:8;11689:20;:82::i;:::-;11673:98;;11803:17;11794:5;:26;;11786:62;;;::::0;-1:-1:-1;;;11786:62:25;;18866:2:26;11786:62:25::1;::::0;::::1;18848:21:26::0;18905:2;18885:18;;;18878:30;18944:25;18924:18;;;18917:53;18987:18;;11786:62:25::1;18664:347:26::0;11786:62:25::1;11863:41;::::0;-1:-1:-1;;;11863:41:25;;11886:10:::1;11863:41;::::0;::::1;15986:74:26::0;16076:18;;;16069:34;;;-1:-1:-1;;;;;11863:22:25;::::1;::::0;::::1;::::0;15959:18:26;;11863:41:25::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11213:703;;;;;11171:745;11208:3;;11171:745;;;;11926:37;11932:10;11944:18;11926:5;:37::i;:::-;11979:36;::::0;;11984:10:::1;15986:74:26::0;;16091:2;16076:18;;16069:34;;;11979:36:25::1;::::0;15959:18:26;11979:36:25::1;;;;;;;10679:1344;;3293:20:5::0;1805:1;2388:30;3969:23;3716:283;6251:244:3;6338:4;966:10:4;6394:37:3;6410:4;966:10:4;6425:5:3;6394:15;:37::i;:::-;6441:26;6451:4;6457:2;6461:5;6441:9;:26::i;:::-;6484:4;6477:11;;;6251:244;;;;;;:::o;15183:222:25:-;15246:7;15266:20;15289:8;;;;;;;;;-1:-1:-1;;;;;15289:8:25;-1:-1:-1;;;;;15289:30:25;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15339:58;;;;;-1:-1:-1;;;;;2844:55:26;;;15339:58:25;;;2826:74:26;15266:55:25;;-1:-1:-1;15339:51:25;;;;;;2799:18:26;;15339:58:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;19717:107::-;19766:7;19793:23;:21;:23::i;19322:242::-;19400:7;19420:20;19443:8;;;;;;;;;-1:-1:-1;;;;;19443:8:25;-1:-1:-1;;;;;19443:24:25;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19538:9;;19487:69;;;;;-1:-1:-1;;;;;13962:15:26;;;19487:69:25;;;13944:34:26;19538:9:25;;;13994:18:26;;;13987:43;14046:18;;;14039:34;;;19420:49:25;;-1:-1:-1;19487:43:25;;;;;13856:18:26;;19487:69:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19480:76;19322:242;-1:-1:-1;;;;19322:242:25:o;8407:920::-;8477:8;;:21;;;;;;;;8459:15;;-1:-1:-1;;;;;8477:8:25;;:19;;:21;;;;;;;;;;;;;;:8;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8459:39;;8509:21;8533:8;;;;;;;;;-1:-1:-1;;;;;8533:8:25;-1:-1:-1;;;;;8533:25:25;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8601:38;;-1:-1:-1;;;8601:38:25;;8633:4;8601:38;;;2826:74:26;8509:51:25;;-1:-1:-1;8573:25:25;;-1:-1:-1;;;;;8601:23:25;;;;;2799:18:26;;8601:38:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8701:55;;;;;-1:-1:-1;;;;;16004:55:26;;;8701::25;;;15986:74:26;16076:18;;;16069:34;;;8573:66:25;;-1:-1:-1;8669:21:25;;;;8701;;;;;15959:18:26;;8701:55:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8774:11;8769:25;;8787:7;;;;8407:920;:::o;8769:25::-;8860:9;;8810:94;;;;;-1:-1:-1;;;;;19326:15:26;;;8810:94:25;;;19308:34:26;8860:9:25;;;19358:18:26;;;19351:43;19410:18;;;19403:34;;;8898:4:25;19453:18:26;;;19446:43;8810:42:25;;;;;;19219:19:26;;8810:94:25;;;;;;;;;;;;;;;;;;;-1:-1:-1;8810:94:25;;;;;;;;-1:-1:-1;;8810:94:25;;;;;;;;;;;;:::i;:::-;;;8806:514;;9111:9;;8989:214;;;;;-1:-1:-1;;;;;19838:15:26;;;8989:214:25;;;19820:34:26;19890:15;;;19870:18;;;19863:43;9111:9:25;;;19922:18:26;;;19915:43;19974:18;;;19967:34;;;9183:4:25;20017:19:26;;;20010:44;8960:26:25;;8989:44;;;;;19731:19:26;;8989:214:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8960:243;;9249:1;9228:18;:22;9220:67;;;;-1:-1:-1;;;9220:67:25;;20267:2:26;9220:67:25;;;20249:21:26;;;20286:18;;;20279:30;20345:34;20325:18;;;20318:62;20397:18;;9220:67:25;20065:356:26;9220:67:25;9302:7;;;;;8407:920;:::o;8806:514::-;8448:879;;;;8407:920;:::o;9576:275::-;3251:21:5;:19;:21::i;:::-;9631:14:25::1;9648:15;:6;:13;:15::i;:::-;9631:32;;9679:9;9674:170;9698:6;9694:1;:10;9674:170;;;9726:13;9742:12;9726:13:::0;9752:1;9742:9:::1;:12::i;:::-;9782:9;::::0;9726:28;;-1:-1:-1;;;;;;9782:9:25;;::::1;9773:18:::0;;::::1;::::0;9769:32:::1;;9793:8;;;9769:32;9816:16;9826:5;9816:9;:16::i;:::-;9711:133;9674:170;9706:3;;9674:170;;;;9620:231;3293:20:5::0;1805:1;2388:30;3969:23;3716:283;3293:20;9576:275:25:o;4158:214:2:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;1327:66:8::1;3705:134:2::0;:::o;17177:501:25:-;17425:8;;:18;;;;;;;;17410:12;;-1:-1:-1;;;;;17425:8:25;;:16;;:18;;;;;;;;;;;;;;:8;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17410:33;;17454:18;17475:8;;;;;;;;;-1:-1:-1;;;;;17475:8:25;-1:-1:-1;;;;;17475:28:25;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17544:16;;;17516:25;17544:16;;;;;;;;;17571:99;;;;17454:51;;-1:-1:-1;;;;;;17571:41:25;;;:99;17544:16;17623:6;;17631:7;;17640:5;17647:6;17655:8;17665:4;17571:99;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17399:279;;;17177:501;;;;;;;;:::o;25250:122::-;2334:13:0;:11;:13::i;:::-;25317:47:25::1;25349:6;25357;25317:31;:47::i;3155:101:0:-:0;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;20046:131:25:-:0;20112:7;20139:30;20162:6;20139:22;:30::i;3810:223::-;8870:21:1;6431:15;;3888:7:25;;8870:21:1;6431:15;;;;;;:44;;-1:-1:-1;6450:14:1;;:25;;;;:14;;:25;;6431:44;6427:105;;;6498:23;;;;;;;;;;;;;;6427:105;6541:24;;6575:22;6541:24;;;6575:22;;;;;;;;;3986:8:25::1;:39:::0;;-1:-1:-1;;3986:39:25::1;-1:-1:-1::0;;;;;3986:39:25;::::1;;::::0;;6618:23:1;;-1:-1:-1;;6618:23:1;;;6656:20;;1592:50:26;;;6656:20:1;;1580:2:26;1565:18;6656:20:1;;;;;;;6291:392;3810:223:25;;;:::o;3268:148:3:-;3400:9;3393:16;;3315:13;;2359:20;;3393:16;;;:::i;4767:178::-;4836:4;966:10:4;4890:27:3;966:10:4;4907:2:3;4911:5;4890:9;:27::i;24658:103:25:-;24702:16;24738:15;:6;:13;:15::i;17952:327::-;18026:7;18046:25;18074:23;:21;:23::i;:::-;18046:51;;18108:22;18133:13;4322:14:3;;;4191:152;18133:13:25;18108:38;-1:-1:-1;18157:20:25;18108:38;18181:35;18199:17;18181:15;:35;:::i;:::-;18180:54;;;;:::i;:::-;18157:77;-1:-1:-1;18252:19:25;18267:4;18157:77;18252:19;:::i;:::-;18245:26;17952:327;-1:-1:-1;;;;;17952:327:25:o;3453:349::-;8870:21:1;4302:15;;;;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:1;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4951:18;;;;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;5013:22:1;;;;;4979:67;3522:32:25::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;::::0;:12:::1;:32::i;:::-;3565:26;3580:10;3565:14;:26::i;:::-;3602:24;:22;:24::i;:::-;3637;:22;:24::i;:::-;3672:29;3686:4;3693:7;3672:5;:29::i;:::-;3714:8;:39:::0;;-1:-1:-1;;3714:39:25::1;-1:-1:-1::0;;;;;3714:39:25;::::1;::::0;;::::1;::::0;;;3776:18:::1;::::0;;;;;;;:16:::1;::::0;:18:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;3714:39;3776:18:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3764:9;:30:::0;;-1:-1:-1;;3764:30:25::1;-1:-1:-1::0;;;;;3764:30:25;;;::::1;::::0;;;::::1;::::0;;5066:101:1;;;;5100:23;;-1:-1:-1;;5100:23:1;;;5142:14;;-1:-1:-1;1592:50:26;;5142:14:1;;1580:2:26;1565:18;5142:14:1;;;;;;;4092:1081;;;;;3453:349:25;:::o;24944:116::-;2334:13:0;:11;:13::i;:::-;25008:44:25::1;25037:6;25045;25008:28;:44::i;4041:117::-:0;2334:13:0;:11;:13::i;:::-;4111:8:25::1;:39:::0;;-1:-1:-1;;4111:39:25::1;-1:-1:-1::0;;;;;4111:39:25;;;::::1;::::0;;;::::1;::::0;;4041:117::o;4647:105::-;4689:7;4716:28;4739:4;4716:22;:28::i;5381:2491::-;3251:21:5;:19;:21::i;:::-;5521:8:25::1;::::0;:32:::1;::::0;;;;;;;5498:20:::1;::::0;-1:-1:-1;;;;;5521:8:25::1;::::0;:30:::1;::::0;:32:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:8;:32:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5498:55;;5564:22;5589:8;;;;;;;;;-1:-1:-1::0;;;;;5589:8:25::1;-1:-1:-1::0;;;;;5589:26:25::1;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5564:53;;5628:15;5646:8;;;;;;;;;-1:-1:-1::0;;;;;5646:8:25::1;-1:-1:-1::0;;;;;5646:19:25::1;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5628:39;;5678:12;5693:8;;;;;;;;;-1:-1:-1::0;;;;;5693:8:25::1;-1:-1:-1::0;;;;;5693:16:25::1;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5678:33:::0;-1:-1:-1;;;;;;5732:35:25;::::1;5724:69;;;::::0;-1:-1:-1;;;5724:69:25;;23156:2:26;5724:69:25::1;::::0;::::1;23138:21:26::0;23195:2;23175:18;;;23168:30;23234:23;23214:18;;;23207:51;23275:18;;5724:69:25::1;22954:345:26::0;5724:69:25::1;5820:64;::::0;;;;5873:10:::1;5820:64;::::0;::::1;2826:74:26::0;5804:13:25::1;::::0;-1:-1:-1;;;;;5820:52:25;::::1;::::0;::::1;::::0;2799:18:26;;5820:64:25::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5804:80;;5895:24;5933:12;:19;5922:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;5922:31:25::1;;5895:58;;5964:30;6011:12;:19;5997:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;5997:34:25::1;;5964:67;;6049:9;6044:234;6068:12;:19;6064:1;:23;6044:234;;;6126:58;6160:6;6168:12;6181:1;6168:15;;;;;;;;:::i;:::-;;;;;;;6126:33;:58::i;:::-;6125:59;6109:10;6120:1;6109:13;;;;;;;;:::i;:::-;;;;;;:75;;;;;;;;;::::0;::::1;6225:12;6238:1;6225:15;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;6218:48:::1;::::0;-1:-1:-1;;;6218:48:25;;6260:4:::1;6218:48;::::0;::::1;2826:74:26::0;-1:-1:-1;;;;;6218:33:25;;::::1;::::0;::::1;::::0;2799:18:26;;6218:48:25::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6199:13;6213:1;6199:16;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:67;6089:3:::1;;6044:234;;;-1:-1:-1::0;6290:50:25::1;::::0;;;;-1:-1:-1;;;;;6290:29:25;::::1;::::0;::::1;::::0;:50:::1;::::0;6320:5;;6327:12;;6290:50:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6358:9;6353:1512;6377:12;:19;6373:1;:23;6353:1512;;;6418:13;6434:12;6447:1;6434:15;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;6482:38:::1;::::0;-1:-1:-1;;;6482:38:25;;6514:4:::1;6482:38;::::0;::::1;2826:74:26::0;6434:15:25;;-1:-1:-1;6464:15:25::1;::::0;-1:-1:-1;;;;;6482:23:25;::::1;::::0;::::1;::::0;2799:18:26;;6482:38:25::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6560:72;::::0;-1:-1:-1;;;6560:72:25;;-1:-1:-1;;;;;25172:15:26;;;6560:72:25::1;::::0;::::1;25154:34:26::0;25224:15;;;25204:18;;;25197:43;6627:4:25::1;25256:18:26::0;;;25249:49;6464:56:25;;-1:-1:-1;6535:22:25::1;::::0;6560:41;::::1;::::0;::::1;::::0;25066:18:26;;6560:72:25::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6671:71;::::0;-1:-1:-1;;;6671:71:25;;-1:-1:-1;;;;;25172:15:26;;;6671:71:25::1;::::0;::::1;25154:34:26::0;25224:15;;;25204:18;;;25197:43;6738:3:25::1;25256:18:26::0;;;25249:49;6535:97:25;;-1:-1:-1;6647:21:25::1;::::0;6671:41;::::1;::::0;::::1;::::0;25066:18:26;;6671:71:25::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6779:68;::::0;-1:-1:-1;;;6779:68:25;;-1:-1:-1;;;;;25172:15:26;;;6779:68:25::1;::::0;::::1;25154:34:26::0;25224:15;;;25204:18;;;25197:43;6843:3:25::1;25256:18:26::0;;;25249:49;6647:95:25;;-1:-1:-1;6757:19:25::1;::::0;6779:41;::::1;::::0;::::1;::::0;25066:18:26;;6779:68:25::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6885:69;::::0;-1:-1:-1;;;6885:69:25;;-1:-1:-1;;;;;25172:15:26;;;6885:69:25::1;::::0;::::1;25154:34:26::0;25224:15;;;25204:18;;;25197:43;6949:4:25::1;25256:18:26::0;;;25249:49;6757:90:25;;-1:-1:-1;6862:20:25::1;::::0;6885:41;::::1;::::0;::::1;::::0;25066:18:26;;6885:69:25::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6862:92:::0;-1:-1:-1;6969:14:25::1;-1:-1:-1::0;;;;;6986:28:25;::::1;::::0;::::1;::::0;:76:::1;;-1:-1:-1::0;;;;;;7035:27:25;::::1;::::0;::::1;6986:76;:123;;;-1:-1:-1::0;;;;;;7083:26:25;::::1;::::0;::::1;6986:123;:169;;;-1:-1:-1::0;;;;;;7130:25:25;::::1;::::0;::::1;6986:169;6969:186;;7176:10;7187:1;7176:13;;;;;;;;:::i;:::-;;;;;;;:26;;;;;7193:9;7176:26;7172:110;;;7223:43;7252:6;7260:5;7223:28;:43::i;:::-;;7172:110;7298:22;7333:13;7347:1;7333:16;;;;;;;;:::i;:::-;;;;;;;7323:7;:26;;;;:::i;:::-;7298:51;;7371:9;7366:126;;7401:50;::::0;-1:-1:-1;;;7401:50:25;;7424:10:::1;7401:50;::::0;::::1;15986:74:26::0;16076:18;;;16069:34;;;-1:-1:-1;;;;;7401:22:25;::::1;::::0;::::1;::::0;15959:18:26;;7401:50:25::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7470:7;;;;;;;;;;;;;;;;;;7366:126;7527:8;::::0;:22:::1;::::0;;-1:-1:-1;;;7527:22:25;;;;7508:16:::1;::::0;-1:-1:-1;;;;;7527:8:25::1;::::0;:20:::1;::::0;:22:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:8;:22:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7508:41;;7564:16;7583:8;;;;;;;;;-1:-1:-1::0;;;;;7583:8:25::1;-1:-1:-1::0;;;;;7583:19:25::1;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7564:40;;7619:17;7639:8;;;;;;;;;-1:-1:-1::0;;;;;7639:8:25::1;-1:-1:-1::0;;;;;7639:20:25::1;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7619:42;;7692:13;7706:1;7692:16;;;;;;;;:::i;:::-;;;;;;;7682:7;:26;7678:176;;;7729:11;7773:9:::0;7744:25:::1;7761:8:::0;7744:14;:25:::1;:::i;:::-;7743:39;;;;:::i;:::-;7801:37;::::0;-1:-1:-1;;;7801:37:25;;-1:-1:-1;;;;;16004:55:26;;;7801:37:25::1;::::0;::::1;15986:74:26::0;16076:18;;;16069:34;;;7729:53:25;;-1:-1:-1;7801:22:25;;::::1;::::0;::::1;::::0;15959:18:26;;7801:37:25::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7710:144;7678:176;-1:-1:-1::0;;6398:3:25::1;::::0;;::::1;::::0;-1:-1:-1;6353:1512:25::1;::::0;-1:-1:-1;;;;;;;;6353:1512:25::1;;;5487:2385;;;;;;;3282:1:5;3293:20:::0;1805:1;2388:30;3969:23;3716:283;3405:215:0;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:0;::::1;3485:91;;3534:31;::::0;::::1;::::0;;3562:1:::1;3534:31;::::0;::::1;2826:74:26::0;2799:18;;3534:31:0::1;2680:226:26::0;3485:91:0::1;3585:28;3604:8;3585:18;:28::i;12206:2810:25:-:0;3251:21:5;:19;:21::i;:::-;12296:1:25::1;12283:10;:14;12275:61;;;::::0;-1:-1:-1;;;12275:61:25;;16316:2:26;12275:61:25::1;::::0;::::1;16298:21:26::0;16355:2;16335:18;;;16328:30;16394:34;16374:18;;;16367:62;16465:4;16445:18;;;16438:32;16487:19;;12275:61:25::1;16114:398:26::0;12275:61:25::1;12372:8;::::0;:28:::1;::::0;;;;;;;12347:22:::1;::::0;-1:-1:-1;;;;;12372:8:25::1;::::0;:26:::1;::::0;:28:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:8;:28:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12347:53:::0;-1:-1:-1;;;;;;12419:28:25;::::1;12411:63;;;::::0;-1:-1:-1;;;12411:63:25;;25938:2:26;12411:63:25::1;::::0;::::1;25920:21:26::0;25977:2;25957:18;;;25950:30;26016:24;25996:18;;;25989:52;26058:18;;12411:63:25::1;25736:346:26::0;12411:63:25::1;12504:8;::::0;:22:::1;::::0;;-1:-1:-1;;;12504:22:25;;;;12485:16:::1;::::0;-1:-1:-1;;;;;12504:8:25::1;::::0;:20:::1;::::0;:22:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:8;:22:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12485:41:::0;-1:-1:-1;;;;;;12545:22:25;::::1;12537:51;;;::::0;-1:-1:-1;;;12537:51:25;;16719:2:26;12537:51:25::1;::::0;::::1;16701:21:26::0;16758:2;16738:18;;;16731:30;16797:18;16777;;;16770:46;16833:18;;12537:51:25::1;16517:340:26::0;12537:51:25::1;12617:8;::::0;:21:::1;::::0;;;;;;;12599:15:::1;::::0;-1:-1:-1;;;;;12617:8:25::1;::::0;:19:::1;::::0;:21:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:8;:21:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12599:39:::0;-1:-1:-1;;;;;;12657:21:25;::::1;12649:49;;;::::0;-1:-1:-1;;;12649:49:25;;26289:2:26;12649:49:25::1;::::0;::::1;26271:21:26::0;26328:2;26308:18;;;26301:30;26367:17;26347:18;;;26340:45;26402:18;;12649:49:25::1;26087:339:26::0;12649:49:25::1;12711:26;12740:39;12768:10;12740:27;:39::i;:::-;12711:68;;12820:10;12798:18;:32;;12790:66;;;::::0;-1:-1:-1;;;12790:66:25;;17409:2:26;12790:66:25::1;::::0;::::1;17391:21:26::0;17448:2;17428:18;;;17421:30;17487:23;17467:18;;;17460:51;17528:18;;12790:66:25::1;17207:345:26::0;12790:66:25::1;12869:21;12893:31;12906:18:::0;12893:10;:31:::1;:::i;:::-;12869:55;;12937:36;12946:8;12956:16;12937:8;:36::i;:::-;;12991:9;12986:1921;13006:15;:6;:13;:15::i;:::-;13002:1;:19;12986:1921;;;13043:13;13059:12;13043:13:::0;13069:1;13059:9:::1;:12::i;:::-;13043:28:::0;-1:-1:-1;;;;;;13094:19:25;::::1;13086:53;;;::::0;-1:-1:-1;;;13086:53:25;;17892:2:26;13086:53:25::1;::::0;::::1;17874:21:26::0;17931:2;17911:18;;;17904:30;17970:23;17950:18;;;17943:51;18011:18;;13086:53:25::1;17690:345:26::0;13086:53:25::1;13156:19;13178:13;4322:14:3::0;;;4191:152;13178:13:25::1;13156:35;;13228:1;13214:11;:15;13206:45;;;::::0;-1:-1:-1;;;13206:45:25;;18242:2:26;13206:45:25::1;::::0;::::1;18224:21:26::0;18281:2;18261:18;;;18254:30;18320:19;18300:18;;;18293:47;18357:18;;13206:45:25::1;18040:341:26::0;13206:45:25::1;13296:38;::::0;-1:-1:-1;;;13296:38:25;;13328:4:::1;13296:38;::::0;::::1;2826:74:26::0;13268:25:25::1;::::0;-1:-1:-1;;;;;13296:23:25;::::1;::::0;::::1;::::0;2799:18:26;;13296:38:25::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13268:66:::0;-1:-1:-1;13355:22:25;;;:48:::1;;-1:-1:-1::0;;;;;;13381:22:25;::::1;13398:4;13381:22;13355:48;13351:62;;;13405:8;;;;;13351:62;13430:16;13464:5;-1:-1:-1::0;;;;;13449:30:25::1;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13430:51;;;;13498:23;13524:165;13563:11;13593:17;13629:18;13666:8;13524:20;:165::i;:::-;13498:191;;13733:17;13714:15;:36;;13706:72;;;::::0;-1:-1:-1;;;13706:72:25;;18866:2:26;13706:72:25::1;::::0;::::1;18848:21:26::0;18905:2;18885:18;;;18878:30;18944:25;18924:18;;;18917:53;18987:18;;13706:72:25::1;18664:347:26::0;13706:72:25::1;13808:9;::::0;-1:-1:-1;;;;;13808:9:25;;::::1;13799:18:::0;;::::1;::::0;13795:141:::1;;13845:9;::::0;13838:55:::1;::::0;-1:-1:-1;;;13838:55:25;;13865:10:::1;13838:55;::::0;::::1;15986:74:26::0;16076:18;;;16069:34;;;-1:-1:-1;;;;;13845:9:25;;::::1;::::0;13838:26:::1;::::0;15959:18:26;;13838:55:25::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13912:8;;;;;;;13795:141;13976:8;::::0;:27:::1;::::0;;;;;;;13952:21:::1;::::0;-1:-1:-1;;;;;13976:8:25::1;::::0;:25:::1;::::0;:27:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:8;:27:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13952:51:::0;-1:-1:-1;;;;;;14026:27:25;::::1;14018:61;;;::::0;-1:-1:-1;;;14018:61:25;;26633:2:26;14018:61:25::1;::::0;::::1;26615:21:26::0;26672:2;26652:18;;;26645:30;26711:23;26691:18;;;26684:51;26752:18;;14018:61:25::1;26431:345:26::0;14018:61:25::1;14096:53;::::0;;;;-1:-1:-1;;;;;16004:55:26;;;14096:53:25::1;::::0;::::1;15986:74:26::0;16076:18;;;16069:34;;;14096:21:25;::::1;::::0;::::1;::::0;15959:18:26;;14096:53:25::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;14220:9:25::1;::::0;14170:89:::1;::::0;;;;-1:-1:-1;;;;;19326:15:26;;;14170:89:25::1;::::0;::::1;19308:34:26::0;14220:9:25;;::::1;19358:18:26::0;;;19351:43;19410:18;;;19403:34;;;14248:10:25::1;19453:18:26::0;;;19446:43;14170:42:25;;::::1;::::0;::::1;::::0;19219:19:26;;14170:89:25::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;14170:89:25::1;::::0;;::::1;;::::0;;::::1;-1:-1:-1::0;;14170:89:25::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;;;14166:730;;14643:9;::::0;14509:233:::1;::::0;;;;-1:-1:-1;;;;;19838:15:26;;;14509:233:25::1;::::0;::::1;19820:34:26::0;19890:15;;;19870:18;;;19863:43;14643:9:25;;::::1;19922:18:26::0;;;19915:43;19974:18;;;19967:34;;;14713:10:25::1;20017:19:26::0;;;20010:44;14486:20:25::1;::::0;14509:44;::::1;::::0;::::1;::::0;19731:19:26;;14509:233:25::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14486:256;;14784:1;14769:12;:16;14761:48;;;::::0;-1:-1:-1;;;14761:48:25;;26983:2:26;14761:48:25::1;::::0;::::1;26965:21:26::0;27022:2;27002:18;;;26995:30;27061:21;27041:18;;;27034:49;27100:18;;14761:48:25::1;26781:343:26::0;14761:48:25::1;14835:9;::::0;14828:52:::1;::::0;-1:-1:-1;;;14828:52:25;;14855:10:::1;14828:52;::::0;::::1;15986:74:26::0;16076:18;;;16069:34;;;-1:-1:-1;;;;;14835:9:25;;::::1;::::0;14828:26:::1;::::0;15959:18:26;;14828:52:25::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14467:429;14166:730;;;14359:1;14347:9;:13;14339:37;;;::::0;-1:-1:-1;;;14339:37:25;;27331:2:26;14339:37:25::1;::::0;::::1;27313:21:26::0;27370:2;27350:18;;;27343:30;27409:13;27389:18;;;27382:41;27440:18;;14339:37:25::1;27129:335:26::0;14339:37:25::1;14402:9;::::0;14395:49:::1;::::0;-1:-1:-1;;;14395:49:25;;14422:10:::1;14395:49;::::0;::::1;15986:74:26::0;16076:18;;;16069:34;;;-1:-1:-1;;;;;14402:9:25;;::::1;::::0;14395:26:::1;::::0;15959:18:26;;14395:49:25::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14260:200;14166:730;13028:1879;;;;;;12986:1921;13023:3;;12986:1921;;;;14919:37;14925:10;14937:18;14919:5;:37::i;:::-;14972:36;::::0;;14977:10:::1;15986:74:26::0;;16091:2;16076:18;;16069:34;;;14972:36:25::1;::::0;15959:18:26;14972:36:25::1;;;;;;;12264:2752;;;;;3293:20:5::0;1805:1;2388:30;3969:23;3716:283;18742:304:25;18930:7;18957:81;18978:11;18991:17;19010:12;19024:13;18957:20;:81::i;10264:128:3:-;10348:37;10357:5;10364:7;10373:5;10380:4;10348:8;:37::i;:::-;10264:128;;;:::o;3326:384:5:-;2388:30;3526:9;;:20;;3522:88;;3569:30;;;;;;;;;;;;;;3522:88;1847:1;3684:19;;3326:384::o;22995:788:25:-;23051:7;;;23103:648;23127:15;:6;:13;:15::i;:::-;23123:1;:19;23103:648;;;23164:13;23180:12;23164:13;23190:1;23180:9;:12::i;:::-;23225:38;;-1:-1:-1;;;23225:38:25;;23257:4;23225:38;;;2826:74:26;23164:28:25;;-1:-1:-1;23207:15:25;;-1:-1:-1;;;;;23225:23:25;;;;;2799:18:26;;23225:38:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23207:56;;23284:7;23295:1;23284:12;23280:26;;23298:8;;;;23280:26;23336:9;;-1:-1:-1;;;;;23336:9:25;;;23327:18;;;;23323:111;;23377:14;:7;23387:4;23377:14;:::i;:::-;23366:25;;;;:::i;:::-;;;23410:8;;;;23323:111;23473:8;;:26;;;;;;;;23450:20;;-1:-1:-1;;;;;23473:8:25;;:24;;:26;;;;;;;;;;;;;;:8;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23597:9;;23546:70;;;;;-1:-1:-1;;;;;13962:15:26;;;23546:70:25;;;13944:34:26;23597:9:25;;;13994:18:26;;;13987:43;14046:18;;;14039:34;;;23450:49:25;;-1:-1:-1;23514:29:25;;23546:43;;;;;;13856:18:26;;23546:70:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23514:102;;23663:1;23639:21;:25;23631:61;;;;-1:-1:-1;;;23631:61:25;;27801:2:26;23631:61:25;;;27783:21:26;27840:2;27820:18;;;27813:30;27879:25;27859:18;;;27852:53;27922:18;;23631:61:25;27599:347:26;23631:61:25;23707:32;23718:21;23707:32;;:::i;:::-;;;23149:602;;;;23103:648;23144:3;;23103:648;;;-1:-1:-1;23768:7:25;22995:788;-1:-1:-1;22995:788:25:o;8996:208:3:-;-1:-1:-1;;;;;9066:21:3;;9062:91;;9110:32;;;;;9139:1;9110:32;;;2826:74:26;2799:18;;9110:32:3;2680:226:26;9062:91:3;9162:35;9178:1;9182:7;9191:5;9162:7;:35::i;3716:283:5:-;1805:1;2388:30;3969:23;3716:283::o;23970:316:25:-;24047:7;24067:16;24086:8;;;;;;;;;-1:-1:-1;;;;;24086:8:25;-1:-1:-1;;;;;24086:19:25;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24067:40;;24118:17;24138:8;;;;;;;;;-1:-1:-1;;;;;24138:8:25;-1:-1:-1;;;;;24138:20:25;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24118:42;-1:-1:-1;24171:23:25;24118:42;24209:22;24222:8;24118:42;24209:22;:::i;:::-;24198:34;;:7;:34;:::i;:::-;24197:48;;;;:::i;9095:117:24:-;9158:7;9185:19;9193:3;4579:18;;4496:109;9566:158;9640:7;9691:22;9695:3;9707:5;9691:3;:22::i;21974:834:25:-;22163:7;22205:1;22191:11;:15;22183:55;;;;-1:-1:-1;;;22183:55:25;;28153:2:26;22183:55:25;;;28135:21:26;28192:2;28172:18;;;28165:30;28231:29;28211:18;;;28204:57;28278:18;;22183:55:25;27951:351:26;22183:55:25;22274:2;22257:13;:19;;22249:62;;;;-1:-1:-1;;;22249:62:25;;28509:2:26;22249:62:25;;;28491:21:26;28548:2;28528:18;;;28521:30;28587:32;28567:18;;;28560:60;28637:18;;22249:62:25;28307:354:26;22249:62:25;22322:22;;;22413:18;22418:13;22413:2;:18;:::i;:::-;22406:26;;:2;:26;:::i;:::-;22388:45;;22466:2;22450:13;:18;22446:246;;;22502:20;22516:6;22502:11;:20;:::i;:::-;22485:37;-1:-1:-1;22554:21:25;22569:6;22554:12;:21;:::i;:::-;22537:38;;22446:246;;;22625:11;22608:28;;22668:12;22651:29;;22446:246;22704:14;22760;22722:34;22739:17;22722:14;:34;:::i;:::-;22721:53;;;;:::i;:::-;22704:70;21974:834;-1:-1:-1;;;;;;;;;21974:834:25:o;9522:206:3:-;-1:-1:-1;;;;;9592:21:3;;9588:89;;9636:30;;;;;9663:1;9636:30;;;2826:74:26;2799:18;;9636:30:3;2680:226:26;9588:89:3;9686:35;9694:7;9711:1;9715:5;9686:7;:35::i;11993:477::-;-1:-1:-1;;;;;5162:20:3;;;12092:24;5162:20;;;:13;:20;;;;;;;;:29;;;;;;;;;;-1:-1:-1;;12158:37:3;;12154:310;;12234:5;12215:16;:24;12211:130;;;12266:60;;;;;-1:-1:-1;;;;;30374:55:26;;12266:60:3;;;30356:74:26;30446:18;;;30439:34;;;30489:18;;;30482:34;;;30329:18;;12266:60:3;30154:368:26;12211:130:3;12382:57;12391:5;12398:7;12426:5;12407:16;:24;12433:5;12382:8;:57::i;:::-;12082:388;11993:477;;;:::o;6868:300::-;-1:-1:-1;;;;;6951:18:3;;6947:86;;6992:30;;;;;7019:1;6992:30;;;2826:74:26;2799:18;;6992:30:3;2680:226:26;6947:86:3;-1:-1:-1;;;;;7046:16:3;;7042:86;;7085:32;;;;;7114:1;7085:32;;;2826:74:26;2799:18;;7085:32:3;2680:226:26;7042:86:3;7137:24;7145:4;7151:2;7155:5;7137:7;:24::i;4599:312:2:-;4679:4;-1:-1:-1;;;;;4688:6:2;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:2;:32;1327:66:8;2035:53;-1:-1:-1;;;;;2035:53:8;;1957:138;4749:32:2;-1:-1:-1;;;;;4749:42:2;;;4671:120;4654:251;;;4865:29;;;;;;;;;;;;;;4426:84:25;2334:13:0;:11;:13::i;6052:538:2:-;6169:17;-1:-1:-1;;;;;6151:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:2;;;;;;;;-1:-1:-1;;6151:52:2;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;;;;-1:-1:-1;;;;;2844:55:26;;6513:60:2;;;2826:74:26;2799:18;;6513:60:2;2680:226:26;6147:437:2;1327:66:8;6245:40:2;;6241:120;;6312:34;;;;;;;;1799:25:26;;;1772:18;;6312:34:2;1653:177:26;6241:120:2;6374:54;6404:17;6423:4;6374:29;:54::i;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:2;5094:23;;5090:145;;5195:29;;;;;;;;;;;;;;2658:162:0;966:10:4;2717:7:0;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:0;;2713:101;;2763:40;;;;;966:10:4;2763:40:0;;;2826:74:26;2799:18;;2763:40:0;2680:226:26;8598:158:24;8671:4;8695:53;8703:3;-1:-1:-1;;;;;8723:23:24;;8695:7;:53::i;3774:248:0:-;1313:22;3923:8;;-1:-1:-1;;3941:19:0;;-1:-1:-1;;;;;3941:19:0;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;21065:438:25:-;21136:17;21166:19;21203:9;;;;;;;;;-1:-1:-1;;;;;21203:9:25;-1:-1:-1;;;;;21188:34:25;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21166:58;;;;21235:19;21257:13;4322:14:3;;;4191:152;21257:13:25;21235:35;;21303:1;21289:11;:15;21281:55;;;;-1:-1:-1;;;21281:55:25;;28153:2:26;21281:55:25;;;28135:21:26;28192:2;28172:18;;;28165:30;28231:29;28211:18;;;28204:57;28278:18;;21281:55:25;27951:351:26;21281:55:25;21347:17;21367:23;:21;:23::i;:::-;21347:43;-1:-1:-1;21436:11:25;21414:18;21347:43;21414:6;:18;:::i;:::-;21413:34;;;;:::i;:::-;21401:46;-1:-1:-1;21478:16:25;21483:11;21478:2;:16;:::i;:::-;21471:24;;:2;:24;:::i;:::-;21458:37;;;;:::i;10274:310:24:-;10337:16;10366:22;10391:19;10399:3;10391:7;:19::i;2577:147:3:-;6931:20:1;:18;:20::i;:::-;2679:38:3::1;2702:5;2709:7;2679:22;:38::i;1847:127:0:-:0;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;2540:111:5:-:0;6931:20:1;:18;:20::i;:::-;2610:34:5::1;:32;:34::i;2968:67:2:-:0;6931:20:1;:18;:20::i;8270:152:24:-;8340:4;8364:50;8369:3;-1:-1:-1;;;;;8389:23:24;;8364:4;:50::i;8842:167::-;-1:-1:-1;;;;;8976:23:24;;8922:4;4378:19;;;:12;;;:19;;;;;;:24;;8946:55;4281:129;11224:487:3;2359:20;-1:-1:-1;;;;;11389:19:3;;11385:89;;11431:32;;;;;11460:1;11431:32;;;2826:74:26;2799:18;;11431:32:3;2680:226:26;11385:89:3;-1:-1:-1;;;;;11487:21:3;;11483:90;;11531:31;;;;;11559:1;11531:31;;;2826:74:26;2799:18;;11531:31:3;2680:226:26;11483:90:3;-1:-1:-1;;;;;11582:20:3;;;;;;;:13;;;:20;;;;;;;;:29;;;;;;;;;:37;;;11629:76;;;;11679:7;-1:-1:-1;;;;;11663:31:3;11672:5;-1:-1:-1;;;;;11663:31:3;;11688:5;11663:31;;;;1799:25:26;;1787:2;1772:18;;1653:177;11663:31:3;;;;;;;;11322:389;11224:487;;;;:::o;7483:1170::-;2359:20;-1:-1:-1;;;;;7625:18:3;;7621:546;;7779:5;7761:1;:14;;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;7621:546:3;;-1:-1:-1;7621:546:3;;-1:-1:-1;;;;;7837:17:3;;7815:19;7837:17;;;;;;;;;;;7872:19;;;7868:115;;;7918:50;;;;;-1:-1:-1;;;;;30374:55:26;;7918:50:3;;;30356:74:26;30446:18;;;30439:34;;;30489:18;;;30482:34;;;30329:18;;7918:50:3;30154:368:26;7868:115:3;-1:-1:-1;;;;;8103:17:3;;:11;:17;;;;;;;;;;8123:19;;;;8103:39;;7621:546;-1:-1:-1;;;;;8181:16:3;;8177:429;;8344:14;;;:23;;;;;;;8177:429;;;-1:-1:-1;;;;;8557:15:3;;:11;:15;;;;;;;;;;:24;;;;;;8177:429;8636:2;-1:-1:-1;;;;;8621:25:3;8630:4;-1:-1:-1;;;;;8621:25:3;;8640:5;8621:25;;;;1799::26;;1787:2;1772:18;;1653:177;8621:25:3;;;;;;;;7558:1095;7483:1170;;;:::o;4959:120:24:-;5026:7;5053:3;:11;;5065:5;5053:18;;;;;;;;:::i;:::-;;;;;;;;;5046:25;;4959:120;;;;:::o;2779:335:8:-;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:8;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;2775:1420:24:-;2841:4;2980:19;;;:12;;;:19;;;;;;3016:15;;3012:1176;;3391:21;3415:14;3428:1;3415:10;:14;:::i;:::-;3464:18;;3391:38;;-1:-1:-1;3444:17:24;;3464:22;;3485:1;;3464:22;:::i;:::-;3444:42;;3520:13;3507:9;:26;3503:405;;3554:17;3574:3;:11;;3586:9;3574:22;;;;;;;;:::i;:::-;;;;;;;;;3554:42;;3728:9;3699:3;:11;;3711:13;3699:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3813:23;;;:12;;;:23;;;;;:36;;;3503:405;3989:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4084:3;:12;;:19;4097:5;4084:19;;;;;;;;;;;4077:26;;;4127:4;4120:11;;;;;;;3012:1176;4171:5;4164:12;;;;;5629:111;5685:16;5721:3;:11;;5714:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5629:111;;;:::o;7084:141:1:-;8870:21;8560:40;;;;;;7146:73;;7191:17;;;;;;;;;;;;;;2730:216:3;6931:20:1;:18;:20::i;:::-;2359::3;2895:7;:15:::1;2905:5:::0;2895:7;:15:::1;:::i;:::-;-1:-1:-1::0;2920:9:3::1;::::0;::::1;:19;2932:7:::0;2920:9;:19:::1;:::i;1980:235:0:-:0;6931:20:1;:18;:20::i;2657:183:5:-;6931:20:1;:18;:20::i;2185:414:24:-;2248:4;4378:19;;;:12;;;:19;;;;;;2265:327;;-1:-1:-1;2308:23:24;;;;;;;;:11;:23;;;;;;;;;;;;;2491:18;;2469:19;;;:12;;;:19;;;;;;:40;;;;2524:11;;2265:327;-1:-1:-1;2575:5:24;2568:12;;2186:281:8;2263:17;-1:-1:-1;;;;;2263:29:8;;2296:1;2263:34;2259:119;;2320:47;;;;;-1:-1:-1;;;;;2844:55:26;;2320:47:8;;;2826:74:26;2799:18;;2320:47:8;2680:226:26;2259:119:8;1327:66;2387:73;;-1:-1:-1;;2387:73:8;-1:-1:-1;;;;;2387:73:8;;;;;;;;;;2186:281::o;4106:253:12:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:12;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;6598:122:8:-;6648:9;:13;6644:70;;6684:19;;;;;;;;;;;;;;4625:582:12;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:12;;;:23;5045:49;5041:119;;;5121:24;;;;;-1:-1:-1;;;;;2844:55:26;;5121:24:12;;;2826:74:26;2799:18;;5121:24:12;2680:226:26;5041:119:12;-1:-1:-1;5180:10:12;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;14:348:26;56:3;94:5;88:12;121:6;116:3;109:19;177:6;170:4;163:5;159:16;152:4;147:3;143:14;137:47;229:1;222:4;213:6;208:3;204:16;200:27;193:38;351:4;-1:-1:-1;;276:2:26;268:6;264:15;260:88;255:3;251:98;247:109;240:116;;;14:348;;;;:::o;367:220::-;516:2;505:9;498:21;479:4;536:45;577:2;566:9;562:18;554:6;536:45;:::i;592:154::-;-1:-1:-1;;;;;671:5:26;667:54;660:5;657:65;647:93;;736:1;733;726:12;751:315;819:6;827;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:31;979:5;954:31;:::i;:::-;1004:5;1056:2;1041:18;;;;1028:32;;-1:-1:-1;;;751:315:26:o;1263:180::-;1322:6;1375:2;1363:9;1354:7;1350:23;1346:32;1343:52;;;1391:1;1388;1381:12;1343:52;-1:-1:-1;1414:23:26;;1263:180;-1:-1:-1;1263:180:26:o;1835:456::-;1912:6;1920;1928;1981:2;1969:9;1960:7;1956:23;1952:32;1949:52;;;1997:1;1994;1987:12;1949:52;2036:9;2023:23;2055:31;2080:5;2055:31;:::i;:::-;2105:5;-1:-1:-1;2162:2:26;2147:18;;2134:32;2175:33;2134:32;2175:33;:::i;:::-;1835:456;;2227:7;;-1:-1:-1;;;2281:2:26;2266:18;;;;2253:32;;1835:456::o;2296:247::-;2355:6;2408:2;2396:9;2387:7;2383:23;2379:32;2376:52;;;2424:1;2421;2414:12;2376:52;2463:9;2450:23;2482:31;2507:5;2482:31;:::i;2911:315::-;2979:6;2987;3040:2;3028:9;3019:7;3015:23;3011:32;3008:52;;;3056:1;3053;3046:12;3008:52;3092:9;3079:23;3069:33;;3152:2;3141:9;3137:18;3124:32;3165:31;3190:5;3165:31;:::i;:::-;3215:5;3205:15;;;2911:315;;;;;:::o;3420:184::-;-1:-1:-1;;;3469:1:26;3462:88;3569:4;3566:1;3559:15;3593:4;3590:1;3583:15;3609:253;3681:2;3675:9;3723:4;3711:17;;3758:18;3743:34;;3779:22;;;3740:62;3737:88;;;3805:18;;:::i;:::-;3841:2;3834:22;3609:253;:::o;3867:334::-;3938:2;3932:9;3994:2;3984:13;;-1:-1:-1;;3980:86:26;3968:99;;4097:18;4082:34;;4118:22;;;4079:62;4076:88;;;4144:18;;:::i;:::-;4180:2;4173:22;3867:334;;-1:-1:-1;3867:334:26:o;4206:589::-;4248:5;4301:3;4294:4;4286:6;4282:17;4278:27;4268:55;;4319:1;4316;4309:12;4268:55;4355:6;4342:20;4381:18;4377:2;4374:26;4371:52;;;4403:18;;:::i;:::-;4447:114;4555:4;-1:-1:-1;;4479:4:26;4475:2;4471:13;4467:86;4463:97;4447:114;:::i;:::-;4586:2;4577:7;4570:19;4632:3;4625:4;4620:2;4612:6;4608:15;4604:26;4601:35;4598:55;;;4649:1;4646;4639:12;4598:55;4714:2;4707:4;4699:6;4695:17;4688:4;4679:7;4675:18;4662:55;4762:1;4737:16;;;4755:4;4733:27;4726:38;;;;4741:7;4206:589;-1:-1:-1;;;4206:589:26:o;4800:455::-;4877:6;4885;4938:2;4926:9;4917:7;4913:23;4909:32;4906:52;;;4954:1;4951;4944:12;4906:52;4993:9;4980:23;5012:31;5037:5;5012:31;:::i;:::-;5062:5;-1:-1:-1;5118:2:26;5103:18;;5090:32;5145:18;5134:30;;5131:50;;;5177:1;5174;5167:12;5131:50;5200:49;5241:7;5232:6;5221:9;5217:22;5200:49;:::i;:::-;5190:59;;;4800:455;;;;;:::o;5442:367::-;5505:8;5515:6;5569:3;5562:4;5554:6;5550:17;5546:27;5536:55;;5587:1;5584;5577:12;5536:55;-1:-1:-1;5610:20:26;;5653:18;5642:30;;5639:50;;;5685:1;5682;5675:12;5639:50;5722:4;5714:6;5710:17;5698:29;;5782:3;5775:4;5765:6;5762:1;5758:14;5750:6;5746:27;5742:38;5739:47;5736:67;;;5799:1;5796;5789:12;5736:67;5442:367;;;;;:::o;5814:1261::-;5972:6;5980;5988;5996;6004;6012;6020;6028;6081:3;6069:9;6060:7;6056:23;6052:33;6049:53;;;6098:1;6095;6088:12;6049:53;6138:9;6125:23;6167:18;6208:2;6200:6;6197:14;6194:34;;;6224:1;6221;6214:12;6194:34;6263:70;6325:7;6316:6;6305:9;6301:22;6263:70;:::i;:::-;6352:8;;-1:-1:-1;6237:96:26;-1:-1:-1;6440:2:26;6425:18;;6412:32;;-1:-1:-1;6456:16:26;;;6453:36;;;6485:1;6482;6475:12;6453:36;;6524:72;6588:7;6577:8;6566:9;6562:24;6524:72;:::i;:::-;6615:8;;-1:-1:-1;6498:98:26;-1:-1:-1;;6700:2:26;6685:18;;6672:32;6713:31;6672:32;6713:31;:::i;:::-;6763:5;-1:-1:-1;6820:2:26;6805:18;;6792:32;6833:33;6792:32;6833:33;:::i;:::-;6885:7;-1:-1:-1;6939:3:26;6924:19;;6911:33;;-1:-1:-1;6996:3:26;6981:19;;6968:33;7010;6968;7010;:::i;:::-;7062:7;7052:17;;;5814:1261;;;;;;;;;;;:::o;7337:427::-;7404:6;7412;7465:2;7453:9;7444:7;7440:23;7436:32;7433:52;;;7481:1;7478;7471:12;7433:52;7520:9;7507:23;7539:31;7564:5;7539:31;:::i;:::-;7589:5;-1:-1:-1;7646:2:26;7631:18;;7618:32;7694:18;7681:32;;7669:45;;7659:73;;7728:1;7725;7718:12;7769:488;7822:3;7860:5;7854:12;7887:6;7882:3;7875:19;7913:4;7942;7937:3;7933:14;7926:21;;7981:4;7974:5;7970:16;8004:1;8014:218;8028:6;8025:1;8022:13;8014:218;;;8093:13;;-1:-1:-1;;;;;8089:62:26;8077:75;;8172:12;;;;8207:15;;;;8050:1;8043:9;8014:218;;;-1:-1:-1;8248:3:26;;7769:488;-1:-1:-1;;;;;7769:488:26:o;8262:261::-;8441:2;8430:9;8423:21;8404:4;8461:56;8513:2;8502:9;8498:18;8490:6;8461:56;:::i;8528:388::-;8596:6;8604;8657:2;8645:9;8636:7;8632:23;8628:32;8625:52;;;8673:1;8670;8663:12;8625:52;8712:9;8699:23;8731:31;8756:5;8731:31;:::i;:::-;8781:5;-1:-1:-1;8838:2:26;8823:18;;8810:32;8851:33;8810:32;8851:33;:::i;8921:187::-;8985:4;9018:18;9010:6;9007:30;9004:56;;;9040:18;;:::i;:::-;-1:-1:-1;9085:1:26;9081:14;9097:4;9077:25;;8921:187::o;9113:747::-;9167:5;9220:3;9213:4;9205:6;9201:17;9197:27;9187:55;;9238:1;9235;9228:12;9187:55;9274:6;9261:20;9300:4;9324:64;9340:47;9384:2;9340:47;:::i;:::-;9324:64;:::i;:::-;9410:3;9434:2;9429:3;9422:15;9462:4;9457:3;9453:14;9446:21;;9519:4;9513:2;9510:1;9506:10;9498:6;9494:23;9490:34;9476:48;;9547:3;9539:6;9536:15;9533:35;;;9564:1;9561;9554:12;9533:35;9600:4;9592:6;9588:17;9614:217;9630:6;9625:3;9622:15;9614:217;;;9710:3;9697:17;9727:31;9752:5;9727:31;:::i;:::-;9771:18;;9809:12;;;;9647;;9614:217;;;-1:-1:-1;9849:5:26;9113:747;-1:-1:-1;;;;;;9113:747:26:o;9865:1893::-;10005:6;10013;10066:2;10054:9;10045:7;10041:23;10037:32;10034:52;;;10082:1;10079;10072:12;10034:52;10122:9;10109:23;10151:18;10192:2;10184:6;10181:14;10178:34;;;10208:1;10205;10198:12;10178:34;10246:6;10235:9;10231:22;10221:32;;10291:7;10284:4;10280:2;10276:13;10272:27;10262:55;;10313:1;10310;10303:12;10262:55;10349:2;10336:16;10371:4;10395:64;10411:47;10455:2;10411:47;:::i;10395:64::-;10493:15;;;10575:1;10571:10;;;;10563:19;;10559:28;;;10524:12;;;;10599:19;;;10596:39;;;10631:1;10628;10621:12;10596:39;10663:2;10659;10655:11;10675:869;10691:6;10686:3;10683:15;10675:869;;;10777:3;10764:17;10813:2;10800:11;10797:19;10794:39;;;10829:1;10826;10819:12;10794:39;10856:20;;10899:4;10927:16;;;-1:-1:-1;;10923:89:26;10919:98;-1:-1:-1;10916:118:26;;;11030:1;11027;11020:12;10916:118;11060:22;;:::i;:::-;11131:2;11127;11123:11;11110:25;11148:33;11173:7;11148:33;:::i;:::-;11194:22;;11273:2;11265:11;;11252:25;11236:14;;;11229:49;11320:11;;;11307:25;;11348:16;;;11345:36;;;11377:1;11374;11367:12;11345:36;11417:53;11462:7;11457:2;11446:8;11442:2;11438:17;11434:26;11417:53;:::i;:::-;11412:2;11401:14;;11394:77;11484:18;;-1:-1:-1;;11522:12:26;;;;10708;;10675:869;;;-1:-1:-1;11563:5:26;-1:-1:-1;;11606:18:26;;11593:32;;-1:-1:-1;;11637:16:26;;;11634:36;;;11666:1;11663;11656:12;11634:36;;11689:63;11744:7;11733:8;11722:9;11718:24;11689:63;:::i;11763:385::-;11849:6;11857;11865;11873;11926:3;11914:9;11905:7;11901:23;11897:33;11894:53;;;11943:1;11940;11933:12;11894:53;-1:-1:-1;;11966:23:26;;;12036:2;12021:18;;12008:32;;-1:-1:-1;12087:2:26;12072:18;;12059:32;;12138:2;12123:18;12110:32;;-1:-1:-1;11763:385:26;-1:-1:-1;11763:385:26:o;12153:437::-;12232:1;12228:12;;;;12275;;;12296:61;;12350:4;12342:6;12338:17;12328:27;;12296:61;12403:2;12395:6;12392:14;12372:18;12369:38;12366:218;;-1:-1:-1;;;12437:1:26;12430:88;12541:4;12538:1;12531:15;12569:4;12566:1;12559:15;12595:251;12665:6;12718:2;12706:9;12697:7;12693:23;12689:32;12686:52;;;12734:1;12731;12724:12;12686:52;12766:9;12760:16;12785:31;12810:5;12785:31;:::i;12851:184::-;12921:6;12974:2;12962:9;12953:7;12949:23;12945:32;12942:52;;;12990:1;12987;12980:12;12942:52;-1:-1:-1;13013:16:26;;12851:184;-1:-1:-1;12851:184:26:o;13040:::-;-1:-1:-1;;;13089:1:26;13082:88;13189:4;13186:1;13179:15;13213:4;13210:1;13203:15;13229:168;13302:9;;;13333;;13350:15;;;13344:22;;13330:37;13320:71;;13371:18;;:::i;13402:274::-;13442:1;13468;13458:189;;-1:-1:-1;;;13500:1:26;13493:88;13604:4;13601:1;13594:15;13632:4;13629:1;13622:15;13458:189;-1:-1:-1;13661:9:26;;13402:274::o;14084:277::-;14151:6;14204:2;14192:9;14183:7;14179:23;14175:32;14172:52;;;14220:1;14217;14210:12;14172:52;14252:9;14246:16;14305:5;14298:13;14291:21;14284:5;14281:32;14271:60;;14327:1;14324;14317:12;17557:128;17624:9;;;17645:11;;;17642:37;;;17659:18;;:::i;18386:273::-;18454:6;18507:2;18495:9;18486:7;18482:23;18478:32;18475:52;;;18523:1;18520;18513:12;18475:52;18555:9;18549:16;18605:4;18598:5;18594:16;18587:5;18584:27;18574:55;;18625:1;18622;18615:12;20426:547;20526:6;20521:3;20514:19;20496:3;20552:4;20581;20576:3;20572:14;20565:21;;20609:5;20632:1;20642:306;20656:6;20653:1;20650:13;20642:306;;;20733:6;20720:20;20753:33;20778:7;20753:33;:::i;:::-;-1:-1:-1;;;;;20811:56:26;20799:69;;20888:12;;;;20923:15;;;;20678:1;20671:9;20642:306;;20978:358;21078:6;21073:3;21066:19;21048:3;21108:66;21100:6;21097:78;21094:98;;;21188:1;21185;21178:12;21094:98;21224:6;21221:1;21217:14;21276:8;21269:5;21262:4;21257:3;21253:14;21240:45;21305:18;;;;21325:4;21301:29;;20978:358;-1:-1:-1;;;20978:358:26:o;21341:1394::-;21819:3;21832:22;;;21903:13;;21804:19;;;21925:22;;;21771:4;;22001;;21978:3;21963:19;;;22028:17;;;21771:4;22073:169;22087:6;22084:1;22081:13;22073:169;;;22148:13;;22136:26;;22182:12;;;;22217:15;;;;22109:1;22102:9;22073:169;;;22077:3;;;22289:9;22284:3;22280:19;22273:4;22262:9;22258:20;22251:49;22323:58;22377:3;22369:6;22361;22323:58;:::i;:::-;22309:72;;;22429:9;22421:6;22417:22;22412:2;22401:9;22397:18;22390:50;22457:61;22511:6;22503;22495;22457:61;:::i;:::-;22449:69;;;22554:6;22549:2;22538:9;22534:18;22527:34;22570:47;22612:3;22601:9;22597:19;22589:6;-1:-1:-1;;;;;2614:54:26;2602:67;;2548:127;22570:47;-1:-1:-1;;;;;2614:54:26;;22668:3;22653:19;;2602:67;-1:-1:-1;;;;;2614:54:26;;22724:3;22709:19;;2602:67;21341:1394;;;;;;;;;;;;:::o;23304:184::-;-1:-1:-1;;;23353:1:26;23346:88;23453:4;23450:1;23443:15;23477:4;23474:1;23467:15;23493:1383;23757:4;23786:2;23826;23815:9;23811:18;23856:2;23845:9;23838:21;23879:6;23914;23908:13;23945:6;23937;23930:22;23971:2;23961:12;;24004:2;23993:9;23989:18;23982:25;;24066:2;24056:6;24053:1;24049:14;24038:9;24034:30;24030:39;24088:4;24127:2;24119:6;24115:15;24148:1;24158:592;24172:6;24169:1;24166:13;24158:592;;;24237:22;;;24261:66;24233:95;24221:108;;24352:13;;24397:9;;-1:-1:-1;;;;;24393:58:26;24378:74;;24495:11;;;24489:18;24472:15;;;24465:43;24547:11;;24541:18;24579:15;;;24572:27;;;24622:48;24654:15;;;24541:18;24622:48;:::i;:::-;24728:12;;;;24612:58;-1:-1:-1;;24693:15:26;;;;24194:1;24187:9;24158:592;;;-1:-1:-1;;24786:22:26;;;24766:18;;;24759:50;24826:44;24790:6;24855;24826:44;:::i;27469:125::-;27534:9;;;27555:10;;;27552:36;;;27568:18;;:::i;28666:476::-;28755:1;28792:5;28755:1;28806:330;28827:7;28817:8;28814:21;28806:330;;;28946:4;-1:-1:-1;;28874:77:26;28868:4;28865:87;28862:113;;;28955:18;;:::i;:::-;29005:7;28995:8;28991:22;28988:55;;;29025:16;;;;28988:55;29104:22;;;;29064:15;;;;28806:330;;;28810:3;28666:476;;;;;:::o;29147:866::-;29196:5;29226:8;29216:80;;-1:-1:-1;29267:1:26;29281:5;;29216:80;29315:4;29305:76;;-1:-1:-1;29352:1:26;29366:5;;29305:76;29397:4;29415:1;29410:59;;;;29483:1;29478:130;;;;29390:218;;29410:59;29440:1;29431:10;;29454:5;;;29478:130;29515:3;29505:8;29502:17;29499:43;;;29522:18;;:::i;:::-;-1:-1:-1;;29578:1:26;29564:16;;29593:5;;29390:218;;29692:2;29682:8;29679:16;29673:3;29667:4;29664:13;29660:36;29654:2;29644:8;29641:16;29636:2;29630:4;29627:12;29623:35;29620:77;29617:159;;;-1:-1:-1;29729:19:26;;;29761:5;;29617:159;29808:34;29833:8;29827:4;29808:34;:::i;:::-;29938:6;-1:-1:-1;;29866:79:26;29857:7;29854:92;29851:118;;;29949:18;;:::i;:::-;29987:20;;29147:866;-1:-1:-1;;;29147:866:26:o;30018:131::-;30078:5;30107:36;30134:8;30128:4;30107:36;:::i;30716:184::-;-1:-1:-1;;;30765:1:26;30758:88;30865:4;30862:1;30855:15;30889:4;30886:1;30879:15;31031:518;31133:2;31128:3;31125:11;31122:421;;;31169:5;31166:1;31159:16;31213:4;31210:1;31200:18;31283:2;31271:10;31267:19;31264:1;31260:27;31254:4;31250:38;31319:4;31307:10;31304:20;31301:47;;;-1:-1:-1;31342:4:26;31301:47;31397:2;31392:3;31388:12;31385:1;31381:20;31375:4;31371:31;31361:41;;31452:81;31470:2;31463:5;31460:13;31452:81;;;31529:1;31515:16;;31496:1;31485:13;31452:81;;31785:1464;31911:3;31905:10;31938:18;31930:6;31927:30;31924:56;;;31960:18;;:::i;:::-;31989:97;32079:6;32039:38;32071:4;32065:11;32039:38;:::i;:::-;32033:4;31989:97;:::i;:::-;32141:4;;32198:2;32187:14;;32215:1;32210:782;;;;33036:1;33053:6;33050:89;;;-1:-1:-1;33105:19:26;;;33099:26;33050:89;-1:-1:-1;;31682:1:26;31678:11;;;31674:84;31670:89;31660:100;31766:1;31762:11;;;31657:117;33152:81;;32180:1063;;32210:782;30978:1;30971:14;;;31015:4;31002:18;;-1:-1:-1;;32246:79:26;;;32423:236;32437:7;32434:1;32431:14;32423:236;;;32526:19;;;32520:26;32505:42;;32618:27;;;;32586:1;32574:14;;;;32453:19;;32423:236;;;32427:3;32687:6;32678:7;32675:19;32672:261;;;32748:19;;;32742:26;-1:-1:-1;;32831:1:26;32827:14;;;32843:3;32823:24;32819:97;32815:102;32800:118;32785:134;;32672:261;-1:-1:-1;;;;;32979:1:26;32963:14;;;32959:22;32946:36;;-1:-1:-1;31785:1464:26:o;33254:301::-;33383:3;33421:6;33415:13;33467:6;33460:4;33452:6;33448:17;33443:3;33437:37;33529:1;33493:16;;33518:13;;;-1:-1:-1;33493:16:26;33254:301;-1:-1:-1;33254:301:26:o"},"gasEstimates":{"creation":{"codeDepositCost":"4436000","executionCost":"infinite","totalCost":"infinite"},"external":{"UPGRADE_INTERFACE_VERSION()":"infinite","addToken(address)":"infinite","allowance(address,address)":"infinite","approve(address,uint256)":"24786","balanceOf(address)":"2617","baseAsset()":"2426","burnERC20(uint256)":"infinite","burnUSDC(uint256)":"infinite","calculateTokenShare(uint256,uint256,uint256,uint256)":"infinite","callRebalance(address[],uint256[],address,address,uint256,address)":"infinite","decimals()":"244","execute((address,uint256,bytes)[],address[])":"infinite","getAgentAddress(address)":"infinite","getTokens()":"infinite","getUSDCShareValue(uint256)":"infinite","getVersion()":"2456","initialize(address)":"infinite","liquidate(address)":"infinite","liquidateAll()":"infinite","mintWithUSDC(uint256)":"infinite","name()":"infinite","owner()":"2420","proxiableUUID()":"infinite","registry()":"2404","reinitialize(address,uint64)":"78522","removeToken(address)":"infinite","renounceOwnership()":"infinite","requiredUSDCtoMint(uint256)":"infinite","resetContract(address)":"26859","symbol()":"infinite","tokenValuation(uint256,address)":"infinite","totalSupply()":"2349","totalValuation()":"infinite","transfer(address,uint256)":"51305","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"infinite","unitPrice()":"infinite","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite","_calculateBaluniToUSDC(uint256)":"infinite","_calculateERC20Share(uint256,uint256,uint256,uint256)":"infinite","_calculateERC20ValuationScaled(uint256,address)":"infinite","_calculateNetAmountAfterFee(uint256)":"infinite","_totalValuationScaled()":"infinite"}},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","addToken(address)":"d48bfca7","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","baseAsset()":"cdf456e1","burnERC20(uint256)":"1a168da2","burnUSDC(uint256)":"fe0a4dd1","calculateTokenShare(uint256,uint256,uint256,uint256)":"fe330a51","callRebalance(address[],uint256[],address,address,uint256,address)":"599f69f7","decimals()":"313ce567","execute((address,uint256,bytes)[],address[])":"eedc3c50","getAgentAddress(address)":"27d54a92","getTokens()":"aa6ca808","getUSDCShareValue(uint256)":"71ddcfb8","getVersion()":"0d8e6e2c","initialize(address)":"c4d66de8","liquidate(address)":"2f865568","liquidateAll()":"3c2066a9","mintWithUSDC(uint256)":"0cfc7386","name()":"06fdde03","owner()":"8da5cb5b","proxiableUUID()":"52d1902d","registry()":"7b103999","reinitialize(address,uint64)":"8f2248bc","removeToken(address)":"5fa7b584","renounceOwnership()":"715018a6","requiredUSDCtoMint(uint256)":"aa95d893","resetContract(address)":"e67ad759","symbol()":"95d89b41","tokenValuation(uint256,address)":"2bdd955a","totalSupply()":"18160ddd","totalValuation()":"295b9300","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unitPrice()":"e73faa2d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct IBaluniV1Agent.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokensReturn\",\"type\":\"address[]\"}],\"name\":\"Execute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"burnERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"burnUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBaluni\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalERC20Balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baluniAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenDecimals\",\"type\":\"uint256\"}],\"name\":\"calculateTokenShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"callRebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IBaluniV1Agent.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"tokensReturn\",\"type\":\"address[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getAgentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getUSDCShareValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidateAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balAmountToMint\",\"type\":\"uint256\"}],\"name\":\"mintWithUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IBaluniV1Registry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balAmountToMint\",\"type\":\"uint256\"}],\"name\":\"requiredUSDCtoMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"resetContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"tokenValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"addToken(address)\":{\"details\":\"Adds a token to the `tokens` set. Can only be called by the contract owner.\",\"params\":{\"_token\":\"The address of the token to be added.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burnERC20(uint256)\":{\"details\":\"Burns a specified amount of BALUNI tokens from the caller's balance.\",\"params\":{\"burnAmount\":\"The amount of BALUNI tokens to burn.\"}},\"burnUSDC(uint256)\":{\"details\":\"Burns a specified amount of BAL tokens and performs token swaps on multiple tokens.\",\"params\":{\"burnAmount\":\"The amount of BAL tokens to burn.\"}},\"calculateTokenShare(uint256,uint256,uint256,uint256)\":{\"details\":\"Calculates the token share based on the total Baluni supply, total ERC20 balance, Baluni amount, and token decimals.\",\"params\":{\"baluniAmount\":\"The amount of Baluni tokens.\",\"tokenDecimals\":\"The number of decimals for the ERC20 token.\",\"totalBaluni\":\"The total supply of Baluni tokens.\",\"totalERC20Balance\":\"The total balance of the ERC20 token.\"},\"returns\":{\"_0\":\"The calculated token share.\"}},\"callRebalance(address[],uint256[],address,address,uint256,address)\":{\"details\":\"Calls the `rebalance` function of the `rebalancer` contract.\",\"params\":{\"assets\":\"An array of addresses representing the assets to rebalance.\",\"limit\":\"The maximum number of assets to rebalance.\",\"receiver\":\"The address of the receiver.\",\"sender\":\"The address of the sender.\",\"weights\":\"An array of uint256 values representing the weights of the assets.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"execute((address,uint256,bytes)[],address[])\":{\"details\":\"Executes a series of calls to a BaluniV1Agent contract and handles token returns.\",\"params\":{\"calls\":\"An array of IBaluniV1Agent.Call structs representing the calls to be executed.\",\"tokensReturn\":\"An array of addresses representing the tokens to be returned.\"}},\"getAgentAddress(address)\":{\"details\":\"Retrieves the agent address associated with a user.\",\"params\":{\"_user\":\"The user's address.\"},\"returns\":{\"_0\":\"The agent address.\"}},\"getTokens()\":{\"details\":\"Returns an array of addresses representing the tokens.\",\"returns\":{\"_0\":\"An array of addresses representing the tokens.\"}},\"getUSDCShareValue(uint256)\":{\"details\":\"Calculates the value of a given amount of Baluni tokens in USDC.\",\"params\":{\"amount\":\"The amount of Baluni tokens.\"},\"returns\":{\"_0\":\"The calculated value of the Baluni tokens in USDC.\"}},\"getVersion()\":{\"details\":\"Returns the version of the contract.\",\"returns\":{\"_0\":\"The version string.\"}},\"initialize(address)\":{\"details\":\"Initializes the BaluniV1Router contract. It sets the initial values for various variables and mints 1 ether to the contract's address. It also sets the USDC token address, WNATIVE token address, oracle address, Uniswap router address, and Uniswap factory address. Finally, it adds the USDC token address to the tokens set.\"},\"liquidate(address)\":{\"details\":\"Liquidates the specified token by swapping it for USDC.\",\"params\":{\"token\":\"The address of the token to be liquidated.\"}},\"liquidateAll()\":{\"details\":\"Liquidates all tokens in the contract. This function iterates through all the tokens in the contract and calls the `liquidate` function for each token. Can only be called by the contract owner.\"},\"mintWithUSDC(uint256)\":{\"details\":\"Mints a specified amount of BALUNI tokens in exchange for USDC.\",\"params\":{\"balAmountToMint\":\"The amount of BALUNI tokens to mint.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"removeToken(address)\":{\"details\":\"Removes a token from the `tokens` set. Can only be called by the contract owner.\",\"params\":{\"_token\":\"The address of the token to be removed.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"requiredUSDCtoMint(uint256)\":{\"details\":\"Calculates the amount of USDC required to mint a given amount of BAL tokens.\",\"params\":{\"balAmountToMint\":\"The amount of BAL tokens to be minted.\"},\"returns\":{\"_0\":\"The amount of USDC required to mint the specified amount of BAL tokens.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"tokenValuation(uint256,address)\":{\"details\":\"Calculates the valuation of a given amount of a specific ERC20 token.\",\"params\":{\"amount\":\"The amount of the ERC20 token.\",\"token\":\"The address of the ERC20 token.\"},\"returns\":{\"_0\":\"The calculated valuation of the ERC20 token.\"}},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"totalValuation()\":{\"details\":\"Returns the total valuation of the Baluni ecosystem.\",\"returns\":{\"_0\":\"The total valuation of the Baluni ecosystem.\"}},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unitPrice()\":{\"details\":\"Returns the unit price of the token in USDC.\",\"returns\":{\"_0\":\"The unit price of the token in USDC.\"}},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burnERC20(uint256)\":{\"notice\":\"This function requires the caller to have a balance of at least `burnAmount` BAL tokens.The function also checks the USDC balance before burning the tokens.After burning the tokens, the function transfers a proportional share of each ERC20 token held by the contract to the caller.The share is calculated based on the total supply of BAL tokens, the balance of each ERC20 token, and the decimals of each token.Finally, the function emits a `Burn` event with the caller's address and the amount of tokens burned.\"},\"execute((address,uint256,bytes)[],address[])\":{\"notice\":\"This function requires the agentFactory to be set and creates a new agent if necessary.If a token is new and a Uniswap pool exists for it, the token is added to the tokens set.If no Uniswap pool exists for a token, the token balance is transferred back to the caller.\"},\"liquidate(address)\":{\"notice\":\"The contract must have sufficient approval to spend the specified token.If a pool exists for the token and USDC on Uniswap, a direct swap is performed.If no pool exists, a multi-hop swap is performed through the WNATIVE token.If the swap fails, the `burn` function should be called to handle the failed swap.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/orchestators/BaluniV1Router.sol\":\"BaluniV1Router\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport {ContextUpgradeable} from \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport {IERC20Errors} from \\\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\\\";\\nimport {Initializable} from \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\\n    struct ERC20Storage {\\n        mapping(address account => uint256) _balances;\\n\\n        mapping(address account => mapping(address spender => uint256)) _allowances;\\n\\n        uint256 _totalSupply;\\n\\n        string _name;\\n        string _symbol;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ERC20\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\\n\\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\\n        assembly {\\n            $.slot := ERC20StorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        $._name = name_;\\n        $._symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            $._totalSupply += value;\\n        } else {\\n            uint256 fromBalance = $._balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                $._balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                $._totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                $._balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        $._allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\\n    struct ReentrancyGuardStorage {\\n        uint256 _status;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ReentrancyGuard\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\\n\\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\\n        assembly {\\n            $.slot := ReentrancyGuardStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if ($._status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        $._status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        return $._status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\\n\",\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Agent.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Agent {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1bbf5ddbc4f525451e727d6997e6a20a6238d69232b58b3813760a16e7f60bbe\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1AgentFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1AgentFactory {\\r\\n    function getAgentAddress(address user) external view returns (address);\\r\\n\\r\\n    function getOrCreateAgent(address user) external returns (address);\\r\\n\\r\\n    function getRegistry() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x7de0683d187e1b0dbbffde17f943b24e1481351949e7b292a9bff33cdc4b3d71\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Oracle.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Oracle {\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256 valuation);\\r\\n\\r\\n    function convertScaled(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) external view returns (uint256 valuation);\\r\\n}\\r\\n\",\"keccak256\":\"0x2bc62f7640b15a1772de630216f6fe6aa7a719cb6cf0255befdde19ec8de785a\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n    struct RebalanceVars {\\r\\n        uint256 length;\\r\\n        uint256 totalValue;\\r\\n        uint256 finalUsdBalance;\\r\\n        uint256 overweightVaultsLength;\\r\\n        uint256 underweightVaultsLength;\\r\\n        uint256 totalActiveWeight;\\r\\n        uint256 amountOut;\\r\\n        uint256[] overweightVaults;\\r\\n        uint256[] overweightAmounts;\\r\\n        uint256[] underweightVaults;\\r\\n        uint256[] underweightAmounts;\\r\\n        uint256[] balances;\\r\\n    }\\r\\n\\r\\n    // Functions\\r\\n    function rebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address receiver,\\r\\n        address baseAsset\\r\\n    ) external;\\r\\n\\r\\n    function checkRebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address baseAsset\\r\\n    ) external view returns (RebalanceVars memory);\\r\\n\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x61c44c9208ab5c5638160706c4737e8032440e73054a90378d0b65559653d57a\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Registry.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1Registry\\r\\n * @dev Interface for the BaluniV1Registry contract.\\r\\n */\\r\\ninterface IBaluniV1Registry {\\r\\n    function setUniswapFactory(address _uniswapFactory) external;\\r\\n\\r\\n    function setUniswapRouter(address _uniswapRouter) external;\\r\\n\\r\\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\\r\\n\\r\\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\\r\\n\\r\\n    function setBaluniSwapper(address _baluniSwapper) external;\\r\\n\\r\\n    function setBaluniOracle(address _baluniOracle) external;\\r\\n\\r\\n    function setBaluniPoolRegistry(address _baluniPoolRegistry) external;\\r\\n\\r\\n    function setBaluniVaultRegistry(address _baluniPoolRegistry) external;\\r\\n\\r\\n    function setBaluniRebalancer(address _baluniRebalancer) external;\\r\\n\\r\\n    function setBaluniRouter(address _baluniRouter) external;\\r\\n\\r\\n    function setBaluniRegistry(address _baluniRegistry) external;\\r\\n\\r\\n    function setWNATIVE(address _WNATIVE) external;\\r\\n\\r\\n    function setUSDC(address _USDC) external;\\r\\n\\r\\n    function setTreasury(address _treasury) external;\\r\\n\\r\\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\\r\\n\\r\\n    function setBPS_FEE(uint256 __BPS_FEE) external;\\r\\n\\r\\n    function getUniswapFactory() external view returns (address);\\r\\n\\r\\n    function getUniswapRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniSwapper() external view returns (address);\\r\\n\\r\\n    function getBaluniOracle() external view returns (address);\\r\\n\\r\\n    function getBaluniAgentFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolPeriphery() external view returns (address);\\r\\n\\r\\n    function getBaluniVaultRegistry() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolRegistry() external view returns (address);\\r\\n\\r\\n    function getBaluniRebalancer() external view returns (address);\\r\\n\\r\\n    function getBaluniRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniRegistry() external view returns (address);\\r\\n\\r\\n    function getWNATIVE() external view returns (address);\\r\\n\\r\\n    function getUSDC() external view returns (address);\\r\\n\\r\\n    function get1inchSpotAgg() external view returns (address);\\r\\n\\r\\n    function getBPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getMAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getBPS_BASE() external view returns (uint256);\\r\\n\\r\\n    function getTreasury() external view returns (address);\\r\\n\\r\\n    function setStaticOracle(address _staticOracle) external;\\r\\n\\r\\n    function getStaticOracle() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x7e73b74ed81791ac27ab8e6f5877d7d6c969567be86125ee3ce2c77825487127\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Swapper.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Swapper {\\r\\n    function singleSwap(\\r\\n        address token0,\\r\\n        address token1,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256 amountOut);\\r\\n    function multiHopSwap(\\r\\n        address token0,\\r\\n        address token1,\\r\\n        address token2,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256 amountOut);\\r\\n}\\r\\n\",\"keccak256\":\"0x8113df3342115499d21149fa3fe70412cb6bdbf79766870f929b3845e1d2a0fe\",\"license\":\"GNU AGPLv3\"},\"contracts/libs/EnumerableSetUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @dev Library for managing\\r\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\r\\n * types.\\r\\n *\\r\\n * Sets have the following properties:\\r\\n *\\r\\n * - Elements are added, removed, and checked for existence in constant time\\r\\n * (O(1)).\\r\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\r\\n *\\r\\n * ```\\r\\n * contract Example {\\r\\n *     // Add the library methods\\r\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\r\\n *\\r\\n *     // Declare a set state variable\\r\\n *     EnumerableSet.AddressSet private mySet;\\r\\n * }\\r\\n * ```\\r\\n *\\r\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\r\\n * and `uint256` (`UintSet`) are supported.\\r\\n *\\r\\n * [WARNING]\\r\\n * ====\\r\\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\\r\\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\r\\n *\\r\\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\\r\\n * ====\\r\\n */\\r\\nlibrary EnumerableSetUpgradeable {\\r\\n    // To implement this library for multiple types with as little code\\r\\n    // repetition as possible, we write it in terms of a generic Set type with\\r\\n    // bytes32 values.\\r\\n    // The Set implementation uses private functions, and user-facing\\r\\n    // implementations (such as AddressSet) are just wrappers around the\\r\\n    // underlying Set.\\r\\n    // This means that we can only create new EnumerableSets for types that fit\\r\\n    // in bytes32.\\r\\n\\r\\n    struct Set {\\r\\n        // Storage of set values\\r\\n        bytes32[] _values;\\r\\n        // Position of the value in the `values` array, plus 1 because index 0\\r\\n        // means a value is not in the set.\\r\\n        mapping(bytes32 => uint256) _indexes;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Add a value to a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was added to the set, that is if it was not\\r\\n     * already present.\\r\\n     */\\r\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\r\\n        if (!_contains(set, value)) {\\r\\n            set._values.push(value);\\r\\n            // The value is stored at length-1, but we add 1 to all indexes\\r\\n            // and use 0 as a sentinel value\\r\\n            set._indexes[value] = set._values.length;\\r\\n            return true;\\r\\n        } else {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Removes a value from a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was removed from the set, that is if it was\\r\\n     * present.\\r\\n     */\\r\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\r\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\r\\n        uint256 valueIndex = set._indexes[value];\\r\\n\\r\\n        if (valueIndex != 0) {\\r\\n            // Equivalent to contains(set, value)\\r\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\r\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\r\\n            // This modifies the order of the array, as noted in {at}.\\r\\n\\r\\n            uint256 toDeleteIndex = valueIndex - 1;\\r\\n            uint256 lastIndex = set._values.length - 1;\\r\\n\\r\\n            if (lastIndex != toDeleteIndex) {\\r\\n                bytes32 lastValue = set._values[lastIndex];\\r\\n\\r\\n                // Move the last value to the index where the value to delete is\\r\\n                set._values[toDeleteIndex] = lastValue;\\r\\n                // Update the index for the moved value\\r\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\r\\n            }\\r\\n\\r\\n            // Delete the slot where the moved value was stored\\r\\n            set._values.pop();\\r\\n\\r\\n            // Delete the index for the deleted slot\\r\\n            delete set._indexes[value];\\r\\n\\r\\n            return true;\\r\\n        } else {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns true if the value is in the set. O(1).\\r\\n     */\\r\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\r\\n        return set._indexes[value] != 0;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of values on the set. O(1).\\r\\n     */\\r\\n    function _length(Set storage set) private view returns (uint256) {\\r\\n        return set._values.length;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\r\\n     *\\r\\n     * Note that there are no guarantees on the ordering of values inside the\\r\\n     * array, and it may change when more values are added or removed.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `index` must be strictly less than {length}.\\r\\n     */\\r\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\r\\n        return set._values[index];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Return the entire set in an array\\r\\n     *\\r\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\r\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\r\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\r\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\r\\n     */\\r\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\r\\n        return set._values;\\r\\n    }\\r\\n\\r\\n    // Bytes32Set\\r\\n\\r\\n    struct Bytes32Set {\\r\\n        Set _inner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Add a value to a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was added to the set, that is if it was not\\r\\n     * already present.\\r\\n     */\\r\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\r\\n        return _add(set._inner, value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Removes a value from a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was removed from the set, that is if it was\\r\\n     * present.\\r\\n     */\\r\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\r\\n        return _remove(set._inner, value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns true if the value is in the set. O(1).\\r\\n     */\\r\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\r\\n        return _contains(set._inner, value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of values in the set. O(1).\\r\\n     */\\r\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\r\\n        return _length(set._inner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\r\\n     *\\r\\n     * Note that there are no guarantees on the ordering of values inside the\\r\\n     * array, and it may change when more values are added or removed.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `index` must be strictly less than {length}.\\r\\n     */\\r\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\r\\n        return _at(set._inner, index);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Return the entire set in an array\\r\\n     *\\r\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\r\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\r\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\r\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\r\\n     */\\r\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\r\\n        return _values(set._inner);\\r\\n    }\\r\\n\\r\\n    // AddressSet\\r\\n\\r\\n    struct AddressSet {\\r\\n        Set _inner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Add a value to a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was added to the set, that is if it was not\\r\\n     * already present.\\r\\n     */\\r\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\r\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Removes a value from a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was removed from the set, that is if it was\\r\\n     * present.\\r\\n     */\\r\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\r\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns true if the value is in the set. O(1).\\r\\n     */\\r\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\r\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of values in the set. O(1).\\r\\n     */\\r\\n    function length(AddressSet storage set) internal view returns (uint256) {\\r\\n        return _length(set._inner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\r\\n     *\\r\\n     * Note that there are no guarantees on the ordering of values inside the\\r\\n     * array, and it may change when more values are added or removed.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `index` must be strictly less than {length}.\\r\\n     */\\r\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\r\\n        return address(uint160(uint256(_at(set._inner, index))));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Return the entire set in an array\\r\\n     *\\r\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\r\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\r\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\r\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\r\\n     */\\r\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\r\\n        bytes32[] memory store = _values(set._inner);\\r\\n        address[] memory result;\\r\\n\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            result := store\\r\\n        }\\r\\n\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    // UintSet\\r\\n\\r\\n    struct UintSet {\\r\\n        Set _inner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Add a value to a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was added to the set, that is if it was not\\r\\n     * already present.\\r\\n     */\\r\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\r\\n        return _add(set._inner, bytes32(value));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Removes a value from a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was removed from the set, that is if it was\\r\\n     * present.\\r\\n     */\\r\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\r\\n        return _remove(set._inner, bytes32(value));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns true if the value is in the set. O(1).\\r\\n     */\\r\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\r\\n        return _contains(set._inner, bytes32(value));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of values on the set. O(1).\\r\\n     */\\r\\n    function length(UintSet storage set) internal view returns (uint256) {\\r\\n        return _length(set._inner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\r\\n     *\\r\\n     * Note that there are no guarantees on the ordering of values inside the\\r\\n     * array, and it may change when more values are added or removed.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `index` must be strictly less than {length}.\\r\\n     */\\r\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\r\\n        return uint256(_at(set._inner, index));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Return the entire set in an array\\r\\n     *\\r\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\r\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\r\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\r\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\r\\n     */\\r\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\r\\n        bytes32[] memory store = _values(set._inner);\\r\\n        uint256[] memory result;\\r\\n\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            result := store\\r\\n        }\\r\\n\\r\\n        return result;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x0e86a06de431b687eaf963847642f6f5f857bcc08b5ad5334097669d83d46ab9\",\"license\":\"MIT\"},\"contracts/orchestators/BaluniV1Router.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\\r\\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\\r\\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\r\\n\\r\\nimport '../interfaces/IBaluniV1Agent.sol';\\r\\nimport '../interfaces/IBaluniV1AgentFactory.sol';\\r\\nimport '../interfaces/IBaluniV1Rebalancer.sol';\\r\\nimport '../interfaces/I1inchSpotAgg.sol';\\r\\nimport '../interfaces/IBaluniV1Oracle.sol';\\r\\nimport '../libs/EnumerableSetUpgradeable.sol';\\r\\nimport '../interfaces/IBaluniV1Swapper.sol';\\r\\nimport '../interfaces/IBaluniV1Registry.sol';\\r\\n\\r\\ncontract BaluniV1Router is\\r\\n    Initializable,\\r\\n    ERC20Upgradeable,\\r\\n    OwnableUpgradeable,\\r\\n    ReentrancyGuardUpgradeable,\\r\\n    UUPSUpgradeable\\r\\n{\\r\\n    struct Call {\\r\\n        address to;\\r\\n        uint256 value;\\r\\n        bytes data;\\r\\n    }\\r\\n\\r\\n    EnumerableSetUpgradeable.AddressSet private tokens;\\r\\n\\r\\n    IBaluniV1Registry public registry;\\r\\n\\r\\n    using EnumerableSetUpgradeable for EnumerableSetUpgradeable.AddressSet;\\r\\n\\r\\n    address public baseAsset;\\r\\n\\r\\n    event Execute(address user, IBaluniV1Agent.Call[] calls, address[] tokensReturn);\\r\\n    event Burn(address user, uint256 value);\\r\\n    event Mint(address user, uint256 value);\\r\\n    event Log(string message, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the BaluniV1Router contract.\\r\\n     * It sets the initial values for various variables and mints 1 ether to the contract's address.\\r\\n     * It also sets the USDC token address, WNATIVE token address, oracle address, Uniswap router address, and Uniswap factory address.\\r\\n     * Finally, it adds the USDC token address to the tokens set.\\r\\n     */\\r\\n    function initialize(address _registry) public initializer {\\r\\n        __ERC20_init('Baluni', 'BALUNI');\\r\\n        __Ownable_init(msg.sender);\\r\\n        __ReentrancyGuard_init();\\r\\n        __UUPSUpgradeable_init();\\r\\n        _mint(address(this), 1 ether);\\r\\n\\r\\n        registry = IBaluniV1Registry(_registry);\\r\\n        baseAsset = registry.getUSDC();\\r\\n    }\\r\\n\\r\\n    function reinitialize(address _registry, uint64 version) public reinitializer(version) {\\r\\n        // __UUPSUpgradeable_init();\\r\\n        // __Ownable_init(msg.sender);\\r\\n        registry = IBaluniV1Registry(_registry);\\r\\n    }\\r\\n\\r\\n    function resetContract(address _registry) public onlyOwner {\\r\\n        registry = IBaluniV1Registry(_registry);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to authorize an upgrade to a new implementation contract.\\r\\n     * @param newImplementation The address of the new implementation contract.\\r\\n     * @notice This function can only be called by the contract owner.\\r\\n     */\\r\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the unit price of the token in USDC.\\r\\n     * @return The unit price of the token in USDC.\\r\\n     */\\r\\n    function unitPrice() public view returns (uint256) {\\r\\n        return _calculateBaluniToUSDC(1e18);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Executes a series of calls to a BaluniV1Agent contract and handles token returns.\\r\\n     * @param calls An array of IBaluniV1Agent.Call structs representing the calls to be executed.\\r\\n     * @param tokensReturn An array of addresses representing the tokens to be returned.\\r\\n     * @notice This function requires the agentFactory to be set and creates a new agent if necessary.\\r\\n     * @notice If a token is new and a Uniswap pool exists for it, the token is added to the tokens set.\\r\\n     * @notice If no Uniswap pool exists for a token, the token balance is transferred back to the caller.\\r\\n     */\\r\\n    function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external nonReentrant {\\r\\n        address agentFactory = registry.getBaluniAgentFactory();\\r\\n        address uniswapFactory = registry.getUniswapFactory();\\r\\n        address WNATIVE = registry.getWNATIVE();\\r\\n        address USDC = registry.getUSDC();\\r\\n\\r\\n        require(address(agentFactory) != address(0), 'Agent factory not set');\\r\\n        address agent = IBaluniV1AgentFactory(agentFactory).getOrCreateAgent(msg.sender);\\r\\n        bool[] memory isTokenNew = new bool[](tokensReturn.length);\\r\\n        uint256[] memory tokenBalances = new uint256[](tokensReturn.length);\\r\\n\\r\\n        for (uint256 i = 0; i < tokensReturn.length; i++) {\\r\\n            isTokenNew[i] = !EnumerableSetUpgradeable.contains(tokens, tokensReturn[i]);\\r\\n            tokenBalances[i] = IERC20(tokensReturn[i]).balanceOf(address(this));\\r\\n        }\\r\\n\\r\\n        IBaluniV1Agent(agent).execute(calls, tokensReturn);\\r\\n\\r\\n        for (uint256 i = 0; i < tokensReturn.length; i++) {\\r\\n            address token = tokensReturn[i];\\r\\n            uint256 balance = IERC20(token).balanceOf(address(this));\\r\\n            address poolNative3000 = IUniswapV3Factory(uniswapFactory).getPool(token, address(WNATIVE), 3000);\\r\\n            address poolNative500 = IUniswapV3Factory(uniswapFactory).getPool(token, address(WNATIVE), 500);\\r\\n            address poolUSDC500 = IUniswapV3Factory(uniswapFactory).getPool(token, address(USDC), 500);\\r\\n            address poolUSDC3000 = IUniswapV3Factory(uniswapFactory).getPool(token, address(USDC), 3000);\\r\\n            bool poolExist = poolNative3000 != address(0) ||\\r\\n                poolNative500 != address(0) ||\\r\\n                poolUSDC3000 != address(0) ||\\r\\n                poolUSDC500 != address(0);\\r\\n\\r\\n            if (isTokenNew[i] && poolExist) {\\r\\n                EnumerableSetUpgradeable.add(tokens, token);\\r\\n            }\\r\\n\\r\\n            uint256 amountReceived = balance - tokenBalances[i];\\r\\n\\r\\n            if (!poolExist) {\\r\\n                IERC20(token).transfer(msg.sender, amountReceived);\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            address treasury = registry.getTreasury();\\r\\n            uint256 _BPS_FEE = registry.getBPS_FEE();\\r\\n            uint256 _BPS_BASE = registry.getBPS_BASE();\\r\\n\\r\\n            if (balance > tokenBalances[i]) {\\r\\n                uint256 fee = (amountReceived * _BPS_FEE) / _BPS_BASE;\\r\\n                IERC20(token).transfer(treasury, fee);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Liquidates the specified token by swapping it for USDC.\\r\\n     * @param token The address of the token to be liquidated.\\r\\n     * @notice The contract must have sufficient approval to spend the specified token.\\r\\n     * @notice If a pool exists for the token and USDC on Uniswap, a direct swap is performed.\\r\\n     * @notice If no pool exists, a multi-hop swap is performed through the WNATIVE token.\\r\\n     * @notice If the swap fails, the `burn` function should be called to handle the failed swap.\\r\\n     */\\r\\n    function liquidate(address token) public {\\r\\n        address WNATIVE = registry.getWNATIVE();\\r\\n        address baluniSwapper = registry.getBaluniSwapper();\\r\\n\\r\\n        uint256 totalERC20Balance = IERC20(token).balanceOf(address(this));\\r\\n        bool haveBalance = totalERC20Balance > 0;\\r\\n        IERC20(token).approve(baluniSwapper, totalERC20Balance);\\r\\n\\r\\n        if (!haveBalance) return;\\r\\n\\r\\n        try IBaluniV1Swapper(baluniSwapper).singleSwap(token, baseAsset, totalERC20Balance, address(this)) {\\r\\n            return;\\r\\n        } catch {\\r\\n            uint256 multiHopSwapResult = IBaluniV1Swapper(baluniSwapper).multiHopSwap(\\r\\n                token,\\r\\n                address(WNATIVE),\\r\\n                baseAsset,\\r\\n                totalERC20Balance,\\r\\n                address(this)\\r\\n            );\\r\\n\\r\\n            require(multiHopSwapResult > 0, 'Muti Hop Swap Failed, Try Burn()');\\r\\n            return;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Liquidates all tokens in the contract.\\r\\n     * This function iterates through all the tokens in the contract and calls the `liquidate` function for each token.\\r\\n     * Can only be called by the contract owner.\\r\\n     */\\r\\n    function liquidateAll() public nonReentrant {\\r\\n        uint256 length = tokens.length();\\r\\n        for (uint256 i = 0; i < length; i++) {\\r\\n            address token = tokens.at(i);\\r\\n            if (token == baseAsset) continue;\\r\\n            liquidate(token);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Burns a specified amount of BALUNI tokens from the caller's balance.\\r\\n     * @param burnAmount The amount of BALUNI tokens to burn.\\r\\n     * @notice This function requires the caller to have a balance of at least `burnAmount` BAL tokens.\\r\\n     * @notice The function also checks the USDC balance before burning the tokens.\\r\\n     * @notice After burning the tokens, the function transfers a proportional share of each ERC20 token held by the contract to the caller.\\r\\n     * @notice The share is calculated based on the total supply of BAL tokens, the balance of each ERC20 token, and the decimals of each token.\\r\\n     * @notice Finally, the function emits a `Burn` event with the caller's address and the amount of tokens burned.\\r\\n     */\\r\\n    function burnERC20(uint256 burnAmount) external nonReentrant {\\r\\n        require(burnAmount > 0, 'Burn amount must be greater than 0');\\r\\n        address treasury = registry.getTreasury();\\r\\n        require(treasury != address(0), 'Treasury not set');\\r\\n        require(balanceOf(msg.sender) >= burnAmount, 'Insufficient BAL');\\r\\n        uint256 burnAmountAfterFee = _calculateNetAmountAfterFee(burnAmount);\\r\\n        require(burnAmountAfterFee <= burnAmount, 'Fee calculation error');\\r\\n        transfer(treasury, burnAmount - burnAmountAfterFee);\\r\\n\\r\\n        for (uint256 i; i < tokens.length(); i++) {\\r\\n            address token = tokens.at(i);\\r\\n            require(token != address(0), 'Invalid token address');\\r\\n            uint256 totalBaluni = totalSupply();\\r\\n            require(totalBaluni > 0, 'Total supply is 0');\\r\\n            uint256 totalERC20Balance = IERC20(token).balanceOf(address(this));\\r\\n            if (totalERC20Balance == 0 || token == address(this)) continue;\\r\\n            uint256 decimals = IERC20Metadata(token).decimals();\\r\\n            uint256 share = _calculateERC20Share(totalBaluni, totalERC20Balance, burnAmountAfterFee, decimals);\\r\\n            require(share <= totalERC20Balance, 'Share calculation error');\\r\\n            IERC20(token).transfer(msg.sender, share);\\r\\n        }\\r\\n        _burn(msg.sender, burnAmountAfterFee);\\r\\n        emit Burn(msg.sender, burnAmountAfterFee);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Burns a specified amount of BAL tokens and performs token swaps on multiple tokens.\\r\\n     * @param burnAmount The amount of BAL tokens to burn.\\r\\n     */\\r\\n    function burnUSDC(uint256 burnAmount) public nonReentrant {\\r\\n        require(burnAmount > 0, 'Burn amount must be greater than 0');\\r\\n        address uniswapFactory = registry.getUniswapFactory();\\r\\n        require(uniswapFactory != address(0), 'UniswapFactory not set');\\r\\n        address treasury = registry.getTreasury();\\r\\n        require(treasury != address(0), 'Treasury not set');\\r\\n        address WNATIVE = registry.getWNATIVE();\\r\\n        require(WNATIVE != address(0), 'WNATIVE not set');\\r\\n\\r\\n        uint256 burnAmountAfterFee = _calculateNetAmountAfterFee(burnAmount);\\r\\n        require(burnAmountAfterFee <= burnAmount, 'Fee calculation error');\\r\\n\\r\\n        uint burnAmountToSend = burnAmount - burnAmountAfterFee;\\r\\n\\r\\n        transfer(treasury, burnAmountToSend);\\r\\n\\r\\n        for (uint256 i; i < tokens.length(); i++) {\\r\\n            address token = tokens.at(i);\\r\\n            require(token != address(0), 'Invalid token address');\\r\\n\\r\\n            uint256 totalBaluni = totalSupply();\\r\\n            require(totalBaluni > 0, 'Total supply is 0');\\r\\n\\r\\n            uint256 totalERC20Balance = IERC20(token).balanceOf(address(this));\\r\\n\\r\\n            if (totalERC20Balance == 0 || token == address(this)) continue;\\r\\n\\r\\n            uint256 decimals = IERC20Metadata(token).decimals();\\r\\n\\r\\n            uint256 burnAmountToken = _calculateERC20Share(\\r\\n                totalBaluni,\\r\\n                totalERC20Balance,\\r\\n                burnAmountAfterFee,\\r\\n                decimals\\r\\n            );\\r\\n\\r\\n            require(burnAmountToken <= totalERC20Balance, 'Share calculation error');\\r\\n\\r\\n            if (token == baseAsset) {\\r\\n                IERC20(baseAsset).transfer(msg.sender, burnAmountToken);\\r\\n                continue;\\r\\n            }\\r\\n\\r\\n            address baluniSwapper = registry.getBaluniSwapper();\\r\\n            require(baluniSwapper != address(0), 'BaluniSwapper not set');\\r\\n\\r\\n            IERC20(token).approve(baluniSwapper, burnAmountToken);\\r\\n\\r\\n            try IBaluniV1Swapper(baluniSwapper).singleSwap(token, baseAsset, burnAmountToken, msg.sender) returns (\\r\\n                uint256 amountOut\\r\\n            ) {\\r\\n                require(amountOut > 0, 'Swap Failed');\\r\\n                IERC20(baseAsset).transfer(msg.sender, amountOut);\\r\\n            } catch {\\r\\n                uint256 amountOutHop = IBaluniV1Swapper(baluniSwapper).multiHopSwap(\\r\\n                    token,\\r\\n                    address(WNATIVE),\\r\\n                    baseAsset,\\r\\n                    burnAmountToken,\\r\\n                    msg.sender\\r\\n                );\\r\\n                require(amountOutHop > 0, 'MultiHopSwap Failed');\\r\\n                IERC20(baseAsset).transfer(msg.sender, amountOutHop);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _burn(msg.sender, burnAmountAfterFee);\\r\\n        emit Burn(msg.sender, burnAmountAfterFee);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the agent address associated with a user.\\r\\n     * @param _user The user's address.\\r\\n     * @return The agent address.\\r\\n     */\\r\\n    function getAgentAddress(address _user) external view returns (address) {\\r\\n        address agentFactory = registry.getBaluniAgentFactory();\\r\\n        return IBaluniV1AgentFactory(agentFactory).getAgentAddress(_user);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Mints a specified amount of BALUNI tokens in exchange for USDC.\\r\\n     * @param balAmountToMint The amount of BALUNI tokens to mint.\\r\\n     */\\r\\n    function mintWithUSDC(uint256 balAmountToMint) public nonReentrant {\\r\\n        address treasury = registry.getTreasury();\\r\\n        address USDC = registry.getUSDC();\\r\\n        uint256 _BPS_FEE = registry.getBPS_FEE();\\r\\n        uint256 _BPS_BASE = registry.getBPS_BASE();\\r\\n        uint256 totalUSDValuation = _totalValuationScaled();\\r\\n        uint256 totalBalSupply = totalSupply();\\r\\n        uint256 usdcRequired = (balAmountToMint * totalUSDValuation) / totalBalSupply;\\r\\n        IERC20(USDC).transferFrom(msg.sender, address(this), usdcRequired / 1e12);\\r\\n        uint256 balance = IERC20(USDC).balanceOf(msg.sender);\\r\\n        uint256 allowed = IERC20(USDC).allowance(msg.sender, address(this));\\r\\n\\r\\n        require(totalBalSupply > 0, 'Total BALUNI supply cannot be zero');\\r\\n        require(balance >= usdcRequired / 1e12, 'USDC balance is insufficient');\\r\\n        require(allowed >= usdcRequired / 1e12, 'Check the token allowance');\\r\\n\\r\\n        _mint(msg.sender, balAmountToMint);\\r\\n        emit Mint(msg.sender, balAmountToMint);\\r\\n\\r\\n        uint256 fee = ((usdcRequired / 1e12) * _BPS_FEE) / _BPS_BASE;\\r\\n        IERC20(address(USDC)).transfer(treasury, fee);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calls the `rebalance` function of the `rebalancer` contract.\\r\\n     * @param assets An array of addresses representing the assets to rebalance.\\r\\n     * @param weights An array of uint256 values representing the weights of the assets.\\r\\n     * @param sender The address of the sender.\\r\\n     * @param receiver The address of the receiver.\\r\\n     * @param limit The maximum number of assets to rebalance.\\r\\n     */\\r\\n    function callRebalance(\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        address sender,\\r\\n        address receiver,\\r\\n        uint256 limit,\\r\\n        address /* baseAsset */\\r\\n    ) external {\\r\\n        address USDC = registry.getUSDC();\\r\\n        address rebalancer = registry.getBaluniRebalancer();\\r\\n        uint256[] memory balances = new uint256[](0);\\r\\n        IBaluniV1Rebalancer(rebalancer).rebalance(balances, assets, weights, limit, sender, receiver, USDC);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the amount of USDC required to mint a given amount of BAL tokens.\\r\\n     * @param balAmountToMint The amount of BAL tokens to be minted.\\r\\n     * @return The amount of USDC required to mint the specified amount of BAL tokens.\\r\\n     */\\r\\n    function requiredUSDCtoMint(uint256 balAmountToMint) public view returns (uint256) {\\r\\n        uint256 totalUSDValuation = _totalValuationScaled();\\r\\n        uint256 totalBalSupply = totalSupply();\\r\\n        uint256 usdcRequired = (balAmountToMint * totalUSDValuation) / totalBalSupply;\\r\\n        return usdcRequired / 1e12;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the token share based on the total Baluni supply, total ERC20 balance, Baluni amount, and token decimals.\\r\\n     * @param totalBaluni The total supply of Baluni tokens.\\r\\n     * @param totalERC20Balance The total balance of the ERC20 token.\\r\\n     * @param baluniAmount The amount of Baluni tokens.\\r\\n     * @param tokenDecimals The number of decimals for the ERC20 token.\\r\\n     * @return The calculated token share.\\r\\n     */\\r\\n    function calculateTokenShare(\\r\\n        uint256 totalBaluni,\\r\\n        uint256 totalERC20Balance,\\r\\n        uint256 baluniAmount,\\r\\n        uint256 tokenDecimals\\r\\n    ) external pure returns (uint256) {\\r\\n        return _calculateERC20Share(totalBaluni, totalERC20Balance, baluniAmount, tokenDecimals);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the valuation of a given amount of a specific ERC20 token.\\r\\n     * @param amount The amount of the ERC20 token.\\r\\n     * @param token The address of the ERC20 token.\\r\\n     * @return The calculated valuation of the ERC20 token.\\r\\n     */\\r\\n    function tokenValuation(uint256 amount, address token) external view returns (uint256) {\\r\\n        address baluniOracle = registry.getBaluniOracle();\\r\\n        return IBaluniV1Oracle(baluniOracle).convertScaled(token, baseAsset, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the total valuation of the Baluni ecosystem.\\r\\n     * @return The total valuation of the Baluni ecosystem.\\r\\n     */\\r\\n    function totalValuation() external view returns (uint256) {\\r\\n        return _totalValuationScaled();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the value of a given amount of Baluni tokens in USDC.\\r\\n     * @param amount The amount of Baluni tokens.\\r\\n     * @return The calculated value of the Baluni tokens in USDC.\\r\\n     */\\r\\n    function getUSDCShareValue(uint256 amount) external view returns (uint256) {\\r\\n        return _calculateBaluniToUSDC(amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the valuation of an ERC20 token based on the amount and token address.\\r\\n     * @param amount The amount of the token.\\r\\n     * @param token The address of the token.\\r\\n     * @return valuation The valuation of the token.\\r\\n     */\\r\\n    function _calculateERC20ValuationScaled(uint256 amount, address token) internal view returns (uint256 valuation) {\\r\\n        address baluniOracle = registry.getBaluniOracle();\\r\\n        return IBaluniV1Oracle(baluniOracle).convertScaled(token, baseAsset, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the equivalent amount of USDC tokens for a given amount of Baluni tokens.\\r\\n     * @param amount The amount of Baluni tokens to convert.\\r\\n     * @return shareUSDC The equivalent amount of USDC tokens.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - The total supply of Baluni tokens must be greater than zero.\\r\\n     */\\r\\n    function _calculateBaluniToUSDC(uint256 amount) internal view returns (uint256 shareUSDC) {\\r\\n        uint256 baseDecimal = IERC20Metadata(baseAsset).decimals();\\r\\n        uint256 totalBaluni = totalSupply();\\r\\n        require(totalBaluni > 0, 'Total supply cannot be zero');\\r\\n        uint256 totalUSDC = _totalValuationScaled();\\r\\n        shareUSDC = (amount * totalUSDC) / totalBaluni;\\r\\n        shareUSDC /= 10 ** (18 - baseDecimal);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the ERC20 share based on the total Baluni supply, total ERC20 balance,\\r\\n     * Baluni amount, and token decimals.\\r\\n     * @param totalBaluni The total supply of Baluni tokens.\\r\\n     * @param totalERC20Balance The total balance of the ERC20 token.\\r\\n     * @param baluniAmount The amount of Baluni tokens.\\r\\n     * @param tokenDecimals The number of decimals for the ERC20 token.\\r\\n     * @return The calculated ERC20 share.\\r\\n     */\\r\\n    function _calculateERC20Share(\\r\\n        uint256 totalBaluni,\\r\\n        uint256 totalERC20Balance,\\r\\n        uint256 baluniAmount,\\r\\n        uint256 tokenDecimals\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(totalBaluni > 0, 'Total supply cannot be zero');\\r\\n        require(tokenDecimals <= 18, 'Token decimals should be <= 18');\\r\\n        uint256 baluniAdjusted;\\r\\n        uint256 amountAdjusted;\\r\\n        uint256 factor = (10 ** (18 - tokenDecimals));\\r\\n\\r\\n        if (tokenDecimals < 18) {\\r\\n            baluniAdjusted = totalBaluni / factor;\\r\\n            amountAdjusted = baluniAmount / factor;\\r\\n        } else {\\r\\n            baluniAdjusted = totalBaluni;\\r\\n            amountAdjusted = baluniAmount;\\r\\n        }\\r\\n\\r\\n        uint256 result = (amountAdjusted * totalERC20Balance) / baluniAdjusted;\\r\\n\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the total valuation of the contract by summing up the valuation of each token held.\\r\\n     * @return The total valuation of the contract.\\r\\n     */\\r\\n    function _totalValuationScaled() internal view returns (uint256) {\\r\\n        uint256 _totalV = 0;\\r\\n\\r\\n        for (uint256 i = 0; i < tokens.length(); i++) {\\r\\n            address token = tokens.at(i);\\r\\n            uint256 balance = IERC20(token).balanceOf(address(this));\\r\\n\\r\\n            if (balance == 0) continue;\\r\\n\\r\\n            if (token == baseAsset) {\\r\\n                _totalV += balance * 1e12;\\r\\n                continue;\\r\\n            }\\r\\n\\r\\n            address baluniOracle = registry.getBaluniOracle();\\r\\n            uint256 tokenBalanceValuation = IBaluniV1Oracle(baluniOracle).convertScaled(token, baseAsset, balance);\\r\\n            require(tokenBalanceValuation > 0, 'Token valuation is zero');\\r\\n            _totalV += tokenBalanceValuation;\\r\\n        }\\r\\n        return _totalV;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the net amount after deducting the fee.\\r\\n     * @param _amount The input amount.\\r\\n     * @return The net amount after deducting the fee.\\r\\n     */\\r\\n    function _calculateNetAmountAfterFee(uint256 _amount) internal view returns (uint256) {\\r\\n        uint256 _BPS_FEE = registry.getBPS_FEE();\\r\\n        uint256 _BPS_BASE = registry.getBPS_BASE();\\r\\n        uint256 amountInWithFee = (_amount * (_BPS_BASE - (_BPS_FEE))) / _BPS_BASE;\\r\\n        return amountInWithFee;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the version of the contract.\\r\\n     * @return The version string.\\r\\n     */\\r\\n    function getVersion() external view returns (uint64) {\\r\\n        return _getInitializedVersion();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of addresses representing the tokens.\\r\\n     * @return An array of addresses representing the tokens.\\r\\n     */\\r\\n    function getTokens() external view returns (address[] memory) {\\r\\n        return tokens.values();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Adds a token to the `tokens` set.\\r\\n     * Can only be called by the contract owner.\\r\\n     * @param _token The address of the token to be added.\\r\\n     */\\r\\n    function addToken(address _token) external onlyOwner {\\r\\n        EnumerableSetUpgradeable.add(tokens, _token);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Removes a token from the `tokens` set.\\r\\n     * Can only be called by the contract owner.\\r\\n     * @param _token The address of the token to be removed.\\r\\n     */\\r\\n    function removeToken(address _token) external onlyOwner {\\r\\n        EnumerableSetUpgradeable.remove(tokens, _token);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xbc637078f2deda2a3b3bc3f971c2124b77d809c3c77630f48672d0a20c8c7c06\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3576,"contract":"contracts/orchestators/BaluniV1Router.sol:BaluniV1Router","label":"tokens","offset":0,"slot":"0","type":"t_struct(AddressSet)3252_storage"},{"astId":3579,"contract":"contracts/orchestators/BaluniV1Router.sol:BaluniV1Router","label":"registry","offset":0,"slot":"2","type":"t_contract(IBaluniV1Registry)2909"},{"astId":3585,"contract":"contracts/orchestators/BaluniV1Router.sol:BaluniV1Router","label":"baseAsset","offset":0,"slot":"3","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(IBaluniV1Registry)2909":{"encoding":"inplace","label":"contract IBaluniV1Registry","numberOfBytes":"20"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(AddressSet)3252_storage":{"encoding":"inplace","label":"struct EnumerableSetUpgradeable.AddressSet","members":[{"astId":3251,"contract":"contracts/orchestators/BaluniV1Router.sol:BaluniV1Router","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)2951_storage"}],"numberOfBytes":"64"},"t_struct(Set)2951_storage":{"encoding":"inplace","label":"struct EnumerableSetUpgradeable.Set","members":[{"astId":2946,"contract":"contracts/orchestators/BaluniV1Router.sol:BaluniV1Router","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":2950,"contract":"contracts/orchestators/BaluniV1Router.sol:BaluniV1Router","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"burnERC20(uint256)":{"notice":"This function requires the caller to have a balance of at least `burnAmount` BAL tokens.The function also checks the USDC balance before burning the tokens.After burning the tokens, the function transfers a proportional share of each ERC20 token held by the contract to the caller.The share is calculated based on the total supply of BAL tokens, the balance of each ERC20 token, and the decimals of each token.Finally, the function emits a `Burn` event with the caller's address and the amount of tokens burned."},"execute((address,uint256,bytes)[],address[])":{"notice":"This function requires the agentFactory to be set and creates a new agent if necessary.If a token is new and a Uniswap pool exists for it, the token is added to the tokens set.If no Uniswap pool exists for a token, the token balance is transferred back to the caller."},"liquidate(address)":{"notice":"The contract must have sufficient approval to spend the specified token.If a pool exists for the token and USDC on Uniswap, a direct swap is performed.If no pool exists, a multi-hop swap is performed through the WNATIVE token.If the swap fails, the `burn` function should be called to handle the failed swap."}},"version":1}}}}}}