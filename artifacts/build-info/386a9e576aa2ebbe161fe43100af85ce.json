{"id":"386a9e576aa2ebbe161fe43100af85ce","_format":"hh-sol-build-info-1","solcVersion":"0.8.25","solcLongVersion":"0.8.25+commit.b61c2a91","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\n    struct ReentrancyGuardStorage {\n        uint256 _status;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ReentrancyGuard\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\n\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\n        assembly {\n            $.slot := ReentrancyGuardStorageLocation\n        }\n    }\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if ($._status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        $._status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        return $._status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title The interface for the Uniswap V3 Factory\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\ninterface IUniswapV3Factory {\n    /// @notice Emitted when the owner of the factory is changed\n    /// @param oldOwner The owner before the owner was changed\n    /// @param newOwner The owner after the owner was changed\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\n\n    /// @notice Emitted when a pool is created\n    /// @param token0 The first token of the pool by address sort order\n    /// @param token1 The second token of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param pool The address of the created pool\n    event PoolCreated(\n        address indexed token0,\n        address indexed token1,\n        uint24 indexed fee,\n        int24 tickSpacing,\n        address pool\n    );\n\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\n    /// @param fee The enabled fee, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\n\n    /// @notice Returns the current owner of the factory\n    /// @dev Can be changed by the current owner via setOwner\n    /// @return The address of the factory owner\n    function owner() external view returns (address);\n\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n    /// @return The tick spacing\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\n\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The pool address\n    function getPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external view returns (address pool);\n\n    /// @notice Creates a pool for the given two tokens and fee\n    /// @param tokenA One of the two tokens in the desired pool\n    /// @param tokenB The other of the two tokens in the desired pool\n    /// @param fee The desired fee for the pool\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n    /// are invalid.\n    /// @return pool The address of the newly created pool\n    function createPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external returns (address pool);\n\n    /// @notice Updates the owner of the factory\n    /// @dev Must be called by the current owner\n    /// @param _owner The new owner of the factory\n    function setOwner(address _owner) external;\n\n    /// @notice Enables a fee amount with the given tickSpacing\n    /// @dev Fee amounts may never be removed once enabled\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"},"contracts/BaluniV1Router.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\n/**\r\n *  __                  __                      __\r\n * /  |                /  |                    /  |\r\n * $$ |____    ______  $$ | __    __  _______  $$/\r\n * $$      \\  /      \\ $$ |/  |  /  |/       \\ /  |\r\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\r\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\r\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\__$$ |$$ |  $$ |$$ |\r\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\r\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\r\n *\r\n *\r\n *                  ,-\"\"\"\"-.\r\n *                ,'      _ `.\r\n *               /       )_)  \\\r\n *              :              :\r\n *              \\              /\r\n *               \\            /\r\n *                `.        ,'\r\n *                  `.    ,'\r\n *                    `.,'\r\n *                     /\\`.   ,-._\r\n *                         `-'    \\__\r\n *                              .\r\n *               s                \\\r\n *                                \\\\\r\n *                                 \\\\\r\n *                                  >\\/7\r\n *                              _.-(6'  \\\r\n *                             (=___._/` \\\r\n *                                  )  \\ |\r\n *                                 /   / |\r\n *                                /    > /\r\n *                               j    < _\\\r\n *                           _.-' :      ``.\r\n *                           \\ r=._\\        `.\r\n */\r\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\r\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\r\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol';\r\n\r\nimport './interfaces/IBaluniV1AgentFactory.sol';\r\nimport './interfaces/IBaluniV1Rebalancer.sol';\r\nimport './libs/EnumerableSetUpgradeable.sol';\r\nimport './BaluniV1Uniswapper.sol';\r\n\r\ncontract BaluniV1Router is\r\n    Initializable,\r\n    ERC20Upgradeable,\r\n    OwnableUpgradeable,\r\n    ReentrancyGuardUpgradeable,\r\n    UUPSUpgradeable,\r\n    BaluniV1Uniswapper\r\n{\r\n    struct Call {\r\n        address to;\r\n        uint256 value;\r\n        bytes data;\r\n    }\r\n\r\n    uint256 public _MAX_BPS_FEE;\r\n    uint256 public _BPS_FEE;\r\n    uint256 public _BPS_BASE;\r\n\r\n    EnumerableSetUpgradeable.AddressSet private tokens;\r\n    address public USDC;\r\n    address public WNATIVE;\r\n    address public oracle;\r\n    address public agentFactory;\r\n    address public rebalancer;\r\n    address public treasury;\r\n    address private uniswapRouter;\r\n    address private uniswapFactory;\r\n\r\n    using EnumerableSetUpgradeable for EnumerableSetUpgradeable.AddressSet;\r\n\r\n    event Execute(address user, IBaluniV1Agent.Call[] calls, address[] tokensReturn);\r\n    event Burn(address user, uint256 value);\r\n    event Mint(address user, uint256 value);\r\n    event ChangeBpsFee(uint256 newFee);\r\n    event ChangeRewardPool(address pool);\r\n    event Log(string message, uint256 value);\r\n\r\n    /**\r\n     * @dev Initializes the BaluniV1Router contract.\r\n     * It sets the initial values for various variables and mints 1 ether to the contract's address.\r\n     * It also sets the USDC token address, WNATIVE token address, oracle address, Uniswap router address, and Uniswap factory address.\r\n     * Finally, it adds the USDC token address to the tokens set.\r\n     */\r\n    function initialize(\r\n        address _usdc,\r\n        address _wnative,\r\n        address _1inchSpotAgg,\r\n        address _uniRouter,\r\n        address _uniFactory,\r\n        address _rebalancer\r\n    ) public initializer {\r\n        __ERC20_init('Baluni', 'BALUNI');\r\n        __Ownable_init(msg.sender);\r\n        __ReentrancyGuard_init();\r\n        __UUPSUpgradeable_init();\r\n        _mint(address(this), 1 ether);\r\n\r\n        _MAX_BPS_FEE = 500;\r\n        _BPS_FEE = 30; // 0.3%.\r\n        _BPS_BASE = 10000;\r\n        USDC = _usdc;\r\n        WNATIVE = _wnative;\r\n        oracle = _1inchSpotAgg; // 1inch Spot Aggregator\r\n        uniswapRouter = _uniRouter;\r\n        uniswapFactory = _uniFactory;\r\n        EnumerableSetUpgradeable.add(tokens, address(USDC));\r\n        rebalancer = _rebalancer;\r\n        treasury = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @dev Reinitializes the BaluniV1Router contract with the specified parameters.\r\n     * @param _usdc The address of the USDC token contract.\r\n     * @param _wnative The address of the WNative token contract.\r\n     * @param _1inchSpotAgg The address of the 1inch Spot Aggregator oracle contract.\r\n     * @param _uniRouter The address of the Uniswap router contract.\r\n     * @param _uniFactory The address of the Uniswap factory contract.\r\n     * @param version The version of the contract.\r\n     */\r\n    function reinitialize(\r\n        address _usdc,\r\n        address _wnative,\r\n        address _1inchSpotAgg,\r\n        address _uniRouter,\r\n        address _uniFactory,\r\n        address _rebalancer,\r\n        uint64 version\r\n    ) public reinitializer(version) {\r\n        // __UUPSUpgradeable_init();\r\n        // __Ownable_init(msg.sender);\r\n        _MAX_BPS_FEE = 500;\r\n        _BPS_FEE = 30; // 0.3%.\r\n        _BPS_BASE = 10000;\r\n        USDC = _usdc;\r\n        WNATIVE = _wnative;\r\n        oracle = _1inchSpotAgg; // 1inch Spot Aggregator\r\n        uniswapRouter = _uniRouter;\r\n        uniswapFactory = _uniFactory;\r\n        EnumerableSetUpgradeable.add(tokens, address(USDC));\r\n        rebalancer = _rebalancer;\r\n        treasury = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to authorize an upgrade to a new implementation contract.\r\n     * @param newImplementation The address of the new implementation contract.\r\n     * @notice This function can only be called by the contract owner.\r\n     */\r\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\r\n\r\n    /**\r\n     * @dev Returns the unit price of the token in USDC.\r\n     * @return The unit price of the token in USDC.\r\n     */\r\n    function unitPrice() public view returns (uint256) {\r\n        return _calculateBaluniToUSDC(1e18);\r\n    }\r\n\r\n    /**\r\n     * @dev Changes the basis points fee for the contract.\r\n     * @param _newFee The new basis points fee to be set.\r\n     */\r\n    function changeBpsFee(uint256 _newFee) external onlyOwner {\r\n        _BPS_FEE = _newFee;\r\n        emit ChangeBpsFee(_newFee);\r\n    }\r\n\r\n    /**\r\n     * @dev Changes the treasury address.\r\n     * Can only be called by the contract owner.\r\n     * @param _newTreasury The new treasury address.\r\n     */\r\n    function changeTreasury(address _newTreasury) external onlyOwner {\r\n        treasury = _newTreasury;\r\n    }\r\n\r\n    /**\r\n     * @dev Changes the address of the rebalancer contract.\r\n     * Can only be called by the contract owner.\r\n     *\r\n     * @param _newRebalancer The new address of the rebalancer contract.\r\n     */\r\n    function changeRebalancer(address _newRebalancer) external onlyOwner {\r\n        rebalancer = _newRebalancer;\r\n    }\r\n\r\n    /**\r\n     * @dev Changes the address of the agent factory contract.\r\n     * Can only be called by the contract owner.\r\n     * @param _agentFactory The new address of the agent factory contract.\r\n     */\r\n    function changeAgentFactory(address _agentFactory) external onlyOwner {\r\n        agentFactory = _agentFactory;\r\n    }\r\n\r\n    /**\r\n     * @dev Executes a series of calls to a BaluniV1Agent contract and handles token returns.\r\n     * @param calls An array of IBaluniV1Agent.Call structs representing the calls to be executed.\r\n     * @param tokensReturn An array of addresses representing the tokens to be returned.\r\n     * @notice This function requires the agentFactory to be set and creates a new agent if necessary.\r\n     * @notice If a token is new and a Uniswap pool exists for it, the token is added to the tokens set.\r\n     * @notice If no Uniswap pool exists for a token, the token balance is transferred back to the caller.\r\n     */\r\n    function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external nonReentrant {\r\n        require(address(agentFactory) != address(0), 'Agent factory not set');\r\n        address agent = IBaluniV1AgentFactory(agentFactory).getOrCreateAgent(msg.sender);\r\n        bool[] memory isTokenNew = new bool[](tokensReturn.length);\r\n        uint256[] memory tokenBalances = new uint256[](tokensReturn.length);\r\n\r\n        for (uint256 i = 0; i < tokensReturn.length; i++) {\r\n            isTokenNew[i] = !EnumerableSetUpgradeable.contains(tokens, tokensReturn[i]);\r\n            tokenBalances[i] = IERC20(tokensReturn[i]).balanceOf(address(this));\r\n        }\r\n\r\n        IBaluniV1Agent(agent).execute(calls, tokensReturn);\r\n\r\n        for (uint256 i = 0; i < tokensReturn.length; i++) {\r\n            address token = tokensReturn[i];\r\n            uint256 balance = IERC20(token).balanceOf(address(this));\r\n            address poolNative3000 = IUniswapV3Factory(uniswapFactory).getPool(token, address(WNATIVE), 3000);\r\n            address poolNative500 = IUniswapV3Factory(uniswapFactory).getPool(token, address(WNATIVE), 500);\r\n            address poolUSDC500 = IUniswapV3Factory(uniswapFactory).getPool(token, address(USDC), 500);\r\n            address poolUSDC3000 = IUniswapV3Factory(uniswapFactory).getPool(token, address(USDC), 3000);\r\n            bool poolExist = poolNative3000 != address(0) ||\r\n                poolNative500 != address(0) ||\r\n                poolUSDC3000 != address(0) ||\r\n                poolUSDC500 != address(0);\r\n\r\n            if (isTokenNew[i] && poolExist) {\r\n                EnumerableSetUpgradeable.add(tokens, token);\r\n            }\r\n\r\n            uint256 amountReceived = balance - tokenBalances[i];\r\n\r\n            if (!poolExist) {\r\n                IERC20(token).transfer(msg.sender, amountReceived);\r\n                return;\r\n            }\r\n\r\n            if (balance > tokenBalances[i]) {\r\n                uint256 fee = (amountReceived * _BPS_FEE) / _BPS_BASE;\r\n                IERC20(tokensReturn[i]).transfer(treasury, fee);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Liquidates the specified token by swapping it for USDC.\r\n     * @param token The address of the token to be liquidated.\r\n     * @notice The contract must have sufficient approval to spend the specified token.\r\n     * @notice If a pool exists for the token and USDC on Uniswap, a direct swap is performed.\r\n     * @notice If no pool exists, a multi-hop swap is performed through the WNATIVE token.\r\n     * @notice If the swap fails, the `burn` function should be called to handle the failed swap.\r\n     */\r\n    function liquidate(address token) public {\r\n        uint256 totalERC20Balance = IERC20(token).balanceOf(address(this));\r\n        address pool = IUniswapV3Factory(uniswapFactory).getPool(token, address(USDC), 3000);\r\n        secureApproval(token, address(uniswapRouter), totalERC20Balance);\r\n        bool haveBalance = totalERC20Balance > 0;\r\n        if (pool != address(0) && haveBalance) {\r\n            uint256 singleSwapResult = _singleSwap(token, address(USDC), totalERC20Balance, address(this));\r\n            require(singleSwapResult > 0, 'Swap Failed, Try Burn()');\r\n        } else if (pool == address(0) && haveBalance) {\r\n            uint256 amountOutHop = _multiHopSwap(\r\n                token,\r\n                address(WNATIVE),\r\n                address(USDC),\r\n                totalERC20Balance,\r\n                address(this)\r\n            );\r\n            require(amountOutHop > 0, 'Swap Failed, Try Burn()');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Liquidates all tokens in the contract.\r\n     * This function iterates through all the tokens in the contract and calls the `liquidate` function for each token.\r\n     * Can only be called by the contract owner.\r\n     */\r\n    function liquidateAll() public nonReentrant {\r\n        uint256 length = tokens.length();\r\n        for (uint256 i = 0; i < length; i++) {\r\n            address token = tokens.at(i);\r\n            liquidate(token);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Burns a specified amount of BALUNI tokens from the caller's balance.\r\n     * @param burnAmount The amount of BALUNI tokens to burn.\r\n     * @notice This function requires the caller to have a balance of at least `burnAmount` BAL tokens.\r\n     * @notice The function also checks the USDC balance before burning the tokens.\r\n     * @notice After burning the tokens, the function transfers a proportional share of each ERC20 token held by the contract to the caller.\r\n     * @notice The share is calculated based on the total supply of BAL tokens, the balance of each ERC20 token, and the decimals of each token.\r\n     * @notice Finally, the function emits a `Burn` event with the caller's address and the amount of tokens burned.\r\n     */\r\n    function burnERC20(uint256 burnAmount) external nonReentrant {\r\n        require(balanceOf(msg.sender) >= burnAmount, 'Insufficient BAL');\r\n\r\n        for (uint256 i; i < tokens.length(); i++) {\r\n            address token = tokens.at(i);\r\n            uint256 totalBaluni = totalSupply();\r\n            uint256 totalERC20Balance = IERC20(token).balanceOf(address(this));\r\n\r\n            if (totalERC20Balance == 0 || token == address(this)) continue;\r\n\r\n            uint256 decimals = IERC20Metadata(token).decimals();\r\n            uint256 share = _calculateERC20Share(totalBaluni, totalERC20Balance, burnAmount, decimals);\r\n            uint256 amountAfterFee = _calculateNetAmountAfterFee(share);\r\n            IERC20(token).transfer(msg.sender, amountAfterFee);\r\n            IERC20(token).transfer(treasury, share - amountAfterFee);\r\n        }\r\n        _burn(msg.sender, burnAmount);\r\n        emit Burn(msg.sender, burnAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Burns a specified amount of BAL tokens and performs token swaps on multiple tokens.\r\n     * @param burnAmount The amount of BAL tokens to burn.\r\n     */\r\n    function burnUSDC(uint256 burnAmount) public nonReentrant {\r\n        require(burnAmount > 0, 'Insufficient BAL');\r\n\r\n        for (uint256 i; i < tokens.length(); i++) {\r\n            address token = tokens.at(i);\r\n            uint256 totalBaluni = totalSupply();\r\n            uint256 totalERC20Balance = IERC20(token).balanceOf(address(this));\r\n\r\n            if (totalERC20Balance > 0 == false) continue;\r\n\r\n            if (token == address(this)) continue;\r\n\r\n            uint256 decimals = IERC20Metadata(token).decimals();\r\n            uint256 burnAmountToken = _calculateERC20Share(totalBaluni, totalERC20Balance, burnAmount, decimals);\r\n\r\n            if (token == address(USDC)) {\r\n                IERC20(USDC).transfer(msg.sender, burnAmountToken);\r\n                continue;\r\n            }\r\n\r\n            address pool = IUniswapV3Factory(uniswapFactory).getPool(token, address(USDC), 3000);\r\n            secureApproval(token, address(uniswapRouter), burnAmountToken);\r\n\r\n            if (pool != address(0)) {\r\n                uint256 amountOut = _singleSwap(token, address(USDC), burnAmountToken, address(this));\r\n                uint256 amountAfterFee = _calculateNetAmountAfterFee(amountOut);\r\n                IERC20(address(USDC)).transfer(msg.sender, amountAfterFee);\r\n                IERC20(address(USDC)).transfer(treasury, amountOut - amountAfterFee);\r\n                require(amountOut > 0, 'Swap Failed, Try Burn()');\r\n            } else {\r\n                uint256 amountOutHop = _multiHopSwap(\r\n                    token,\r\n                    address(WNATIVE),\r\n                    address(USDC),\r\n                    burnAmountToken,\r\n                    msg.sender\r\n                );\r\n                uint256 amountAfterFee = _calculateNetAmountAfterFee(amountOutHop);\r\n                IERC20(address(USDC)).transfer(msg.sender, amountAfterFee);\r\n                IERC20(address(USDC)).transfer(treasury, amountOutHop - amountAfterFee);\r\n                require(amountOutHop > 0, 'Swap Failed, Try Burn()');\r\n            }\r\n        }\r\n        _burn(msg.sender, burnAmount);\r\n        emit Burn(msg.sender, burnAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the agent address associated with a user.\r\n     * @param _user The user's address.\r\n     * @return The agent address.\r\n     */\r\n    function getAgentAddress(address _user) external view returns (address) {\r\n        return IBaluniV1AgentFactory(agentFactory).getAgentAddress(_user);\r\n    }\r\n\r\n    /**\r\n     * @dev Mints a specified amount of BALUNI tokens in exchange for USDC.\r\n     * @param balAmountToMint The amount of BALUNI tokens to mint.\r\n     */\r\n    function mintWithUSDC(uint256 balAmountToMint) public nonReentrant {\r\n        uint256 totalUSDValuation = _totalValuation();\r\n        uint256 totalBalSupply = totalSupply();\r\n        uint256 usdcRequired = (balAmountToMint * totalUSDValuation) / totalBalSupply;\r\n        IERC20(USDC).transferFrom(msg.sender, address(this), usdcRequired / 1e12);\r\n        uint256 balance = IERC20(USDC).balanceOf(msg.sender);\r\n        uint256 allowed = IERC20(USDC).allowance(msg.sender, address(this));\r\n        require(totalBalSupply > 0, 'Total BALUNI supply cannot be zero');\r\n        require(balance >= usdcRequired / 1e12, 'USDC balance is insufficient');\r\n        require(allowed >= usdcRequired / 1e12, 'Check the token allowance');\r\n\r\n        _mint(msg.sender, balAmountToMint);\r\n        emit Mint(msg.sender, balAmountToMint);\r\n\r\n        uint256 fee = ((usdcRequired / 1e12) * _BPS_FEE) / _BPS_BASE;\r\n        IERC20(address(USDC)).transfer(treasury, fee);\r\n    }\r\n\r\n    /**\r\n     * @dev Calls the `rebalance` function of the `rebalancer` contract.\r\n     * @param assets An array of addresses representing the assets to rebalance.\r\n     * @param weights An array of uint256 values representing the weights of the assets.\r\n     * @param sender The address of the sender.\r\n     * @param receiver The address of the receiver.\r\n     * @param limit The maximum number of assets to rebalance.\r\n     */\r\n    function callRebalance(\r\n        address[] calldata assets,\r\n        uint256[] calldata weights,\r\n        address sender,\r\n        address receiver,\r\n        uint256 limit,\r\n        address /* baseAsset */\r\n    ) external {\r\n        uint256[] memory balances = new uint256[](0);\r\n        IBaluniV1Rebalancer(rebalancer).rebalance(balances, assets, weights, limit, sender, receiver, USDC);\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the amount of USDC required to mint a given amount of BAL tokens.\r\n     * @param balAmountToMint The amount of BAL tokens to be minted.\r\n     * @return The amount of USDC required to mint the specified amount of BAL tokens.\r\n     */\r\n    function requiredUSDCtoMint(uint256 balAmountToMint) public view returns (uint256) {\r\n        uint256 totalUSDValuation = _totalValuation();\r\n        uint256 totalBalSupply = totalSupply();\r\n        uint256 usdcRequired = (balAmountToMint * totalUSDValuation) / totalBalSupply;\r\n        return usdcRequired / 1e12;\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the token share based on the total Baluni supply, total ERC20 balance, Baluni amount, and token decimals.\r\n     * @param totalBaluni The total supply of Baluni tokens.\r\n     * @param totalERC20Balance The total balance of the ERC20 token.\r\n     * @param baluniAmount The amount of Baluni tokens.\r\n     * @param tokenDecimals The number of decimals for the ERC20 token.\r\n     * @return The calculated token share.\r\n     */\r\n    function calculateTokenShare(\r\n        uint256 totalBaluni,\r\n        uint256 totalERC20Balance,\r\n        uint256 baluniAmount,\r\n        uint256 tokenDecimals\r\n    ) external pure returns (uint256) {\r\n        return _calculateERC20Share(totalBaluni, totalERC20Balance, baluniAmount, tokenDecimals);\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the valuation of a given amount of a specific ERC20 token.\r\n     * @param amount The amount of the ERC20 token.\r\n     * @param token The address of the ERC20 token.\r\n     * @return The calculated valuation of the ERC20 token.\r\n     */\r\n    function tokenValuation(uint256 amount, address token) external view returns (uint256) {\r\n        return _calculateERC20Valuation(amount, token);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total valuation of the Baluni ecosystem.\r\n     * @return The total valuation of the Baluni ecosystem.\r\n     */\r\n    function totalValuation() external view returns (uint256) {\r\n        return _totalValuation();\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the value of a given amount of Baluni tokens in USDC.\r\n     * @param amount The amount of Baluni tokens.\r\n     * @return The calculated value of the Baluni tokens in USDC.\r\n     */\r\n    function getUSDCShareValue(uint256 amount) external view returns (uint256) {\r\n        return _calculateBaluniToUSDC(amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the valuation of an ERC20 token based on the amount and token address.\r\n     * @param amount The amount of the token.\r\n     * @param token The address of the token.\r\n     * @return valuation The valuation of the token.\r\n     */\r\n    function _calculateERC20Valuation(uint256 amount, address token) internal view returns (uint256 valuation) {\r\n        uint256 rate;\r\n        uint8 tokenDecimal = IERC20Metadata(token).decimals();\r\n        uint8 usdcDecimal = IERC20Metadata(address(USDC)).decimals();\r\n\r\n        if (token == address(USDC)) return amount * 1e12;\r\n\r\n        try I1inchSpotAgg(oracle).getRate(IERC20(token), IERC20(USDC), false) returns (uint256 _rate) {\r\n            rate = _rate;\r\n        } catch {\r\n            return 0;\r\n        }\r\n\r\n        if (tokenDecimal == usdcDecimal) return ((amount * 1e12) * (rate)) / 1e18;\r\n\r\n        uint256 factor = (10 ** (tokenDecimal - usdcDecimal));\r\n\r\n        if (tokenDecimal < 18) return ((amount * factor) * (rate * factor)) / 1e18;\r\n\r\n        return ((amount) * (rate * factor)) / 1e18;\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the equivalent amount of USDC tokens for a given amount of Baluni tokens.\r\n     * @param amount The amount of Baluni tokens to convert.\r\n     * @return shareUSDC The equivalent amount of USDC tokens.\r\n     *\r\n     * Requirements:\r\n     * - The total supply of Baluni tokens must be greater than zero.\r\n     */\r\n    function _calculateBaluniToUSDC(uint256 amount) internal view returns (uint256 shareUSDC) {\r\n        uint256 totalBaluni = totalSupply();\r\n        require(totalBaluni > 0, 'Total supply cannot be zero');\r\n        uint256 totalUSDC = _totalValuation();\r\n        shareUSDC = (amount * totalUSDC) / totalBaluni;\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the ERC20 share based on the total Baluni supply, total ERC20 balance,\r\n     * Baluni amount, and token decimals.\r\n     * @param totalBaluni The total supply of Baluni tokens.\r\n     * @param totalERC20Balance The total balance of the ERC20 token.\r\n     * @param baluniAmount The amount of Baluni tokens.\r\n     * @param tokenDecimals The number of decimals for the ERC20 token.\r\n     * @return The calculated ERC20 share.\r\n     */\r\n    function _calculateERC20Share(\r\n        uint256 totalBaluni,\r\n        uint256 totalERC20Balance,\r\n        uint256 baluniAmount,\r\n        uint256 tokenDecimals\r\n    ) internal pure returns (uint256) {\r\n        require(totalBaluni > 0, 'Total supply cannot be zero');\r\n        require(tokenDecimals <= 18, 'Token decimals should be <= 18');\r\n        uint256 baluniAdjusted;\r\n        uint256 amountAdjusted;\r\n\r\n        if (tokenDecimals < 18) {\r\n            baluniAdjusted = totalBaluni / (10 ** (18 - tokenDecimals));\r\n            amountAdjusted = baluniAmount / (10 ** (18 - tokenDecimals));\r\n        } else {\r\n            baluniAdjusted = totalBaluni;\r\n            amountAdjusted = baluniAmount;\r\n        }\r\n\r\n        uint256 result = (amountAdjusted * totalERC20Balance) / baluniAdjusted;\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the total valuation of the contract by summing up the valuation of each token held.\r\n     * @return The total valuation of the contract.\r\n     */\r\n    function _totalValuation() internal view returns (uint256) {\r\n        uint256 _totalV;\r\n\r\n        for (uint256 i; i < tokens.length(); i++) {\r\n            address token = tokens.at(i);\r\n            uint256 balance = IERC20(token).balanceOf(address(this));\r\n            uint256 tokenBalanceValuation = _calculateERC20Valuation(balance, token);\r\n            _totalV += tokenBalanceValuation;\r\n        }\r\n\r\n        return _totalV;\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the net amount after deducting the fee.\r\n     * @param _amount The input amount.\r\n     * @return The net amount after deducting the fee.\r\n     */\r\n    function _calculateNetAmountAfterFee(uint256 _amount) internal view returns (uint256) {\r\n        uint256 amountInWithFee = (_amount * (_BPS_BASE - (_BPS_FEE))) / _BPS_BASE;\r\n        return amountInWithFee;\r\n    }\r\n\r\n    /**\r\n     * @dev Resizes an array to the specified size.\r\n     * @param arr The array to be resized.\r\n     * @param size The new size of the array.\r\n     * @return The resized array.\r\n     */\r\n    function _resize(uint256[] memory arr, uint256 size) internal pure returns (uint256[] memory) {\r\n        uint256[] memory ret = new uint256[](size);\r\n        for (uint256 i; i < size; i++) {\r\n            ret[i] = arr[i];\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the version of the contract.\r\n     * @return The version string.\r\n     */\r\n    function getVersion() external view returns (uint64) {\r\n        return _getInitializedVersion();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an array of addresses representing the tokens.\r\n     * @return An array of addresses representing the tokens.\r\n     */\r\n    function getTokens() external view returns (address[] memory) {\r\n        return tokens.values();\r\n    }\r\n}\r\n"},"contracts/BaluniV1Uniswapper.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\n/**\r\n *  __                  __                      __\r\n * /  |                /  |                    /  |\r\n * $$ |____    ______  $$ | __    __  _______  $$/\r\n * $$      \\  /      \\ $$ |/  |  /  |/       \\ /  |\r\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\r\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\r\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\__$$ |$$ |  $$ |$$ |\r\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\r\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\r\n *\r\n *\r\n *                  ,-\"\"\"\"-.\r\n *                ,'      _ `.\r\n *               /       )_)  \\\r\n *              :              :\r\n *              \\              /\r\n *               \\            /\r\n *                `.        ,'\r\n *                  `.    ,'\r\n *                    `.,'\r\n *                     /\\`.   ,-._\r\n *                         `-'    \\__\r\n *                              .\r\n *               s                \\\r\n *                                \\\\\r\n *                                 \\\\\r\n *                                  >\\/7\r\n *                              _.-(6'  \\\r\n *                             (=___._/` \\\r\n *                                  )  \\ |\r\n *                                 /   / |\r\n *                                /    > /\r\n *                               j    < _\\\r\n *                           _.-' :      ``.\r\n *                           \\ r=._\\        `.\r\n */\r\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\r\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\r\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\r\n\r\nabstract contract BaluniV1Uniswapper {\r\n    address private uniswapRouter;\r\n    address private uniswapFactory;\r\n\r\n    /**\r\n     * @dev Executes a single swap between two tokens using Uniswap.\r\n     * @param token0 The address of the token to be swapped.\r\n     * @param token1 The address of the token to be received.\r\n     * @param amount The amount of token0 to be swapped.\r\n     * @param receiver The address that will receive the swapped tokens.\r\n     * @return amountOut The amount of token1 received from the swap.\r\n     *\r\n     * The function requires that the caller has a sufficient balance of token0 and that the amount to be swapped is greater than 0.\r\n     * Also, the caller must have approved this contract to spend the amount of token0.\r\n     * The function transfers the amount of token0 to be swapped from the caller to this contract, then performs the swap using Uniswap.\r\n     * The swapped tokens are sent to the receiver's address.\r\n     * The function returns the amount of token1 received from the swap.\r\n     */\r\n    function singleSwap(\r\n        address token0,\r\n        address token1,\r\n        uint256 amount,\r\n        address receiver\r\n    ) external returns (uint256 amountOut) {\r\n        require(msg.sender != address(this), 'Wrong sender');\r\n        require(amount > 0, 'Amount is 0');\r\n        require(IERC20(token0).balanceOf(msg.sender) >= amount, 'Insufficient Balance');\r\n        IERC20(token0).transferFrom(msg.sender, address(this), amount);\r\n        secureApproval(token0, address(uniswapRouter), amount);\r\n        return _singleSwap(token0, token1, amount, receiver);\r\n    }\r\n\r\n    /**\r\n     * @dev Executes a multi-hop swap between three tokens using Uniswap.\r\n     * @param token0 The address of the token to be swapped.\r\n     * @param token1 The address of the intermediate token to be used for the swap.\r\n     * @param token2 The address of the final token to be received.\r\n     * @param amount The amount of token0 to be swapped.\r\n     * @param receiver The address that will receive the swapped tokens.\r\n     * @return amountOut The amount of token2 received from the swap.\r\n     *\r\n     * The function requires that the caller has a sufficient balance of token0 and that the amount to be swapped is greater than 0.\r\n     * Also, the caller must have approved this contract to spend the amount of token0.\r\n     * The function transfers the amount of token0 to be swapped from the caller to this contract, then performs the swap using Uniswap.\r\n     * The swapped tokens are sent to the receiver's address.\r\n     * The function returns the amount of token2 received from the swap.\r\n     */\r\n    function multiHopSwap(\r\n        address token0,\r\n        address token1,\r\n        address token2,\r\n        uint256 amount,\r\n        address receiver\r\n    ) external returns (uint256 amountOut) {\r\n        require(msg.sender != address(this), 'Wrong sender');\r\n        require(amount > 0, 'Amount is 0');\r\n        require(IERC20(token0).balanceOf(msg.sender) >= amount, 'Insufficient Balance');\r\n        IERC20(token0).transferFrom(msg.sender, address(this), amount);\r\n        secureApproval(token0, address(uniswapRouter), amount);\r\n        return _multiHopSwap(token0, token1, token2, amount, receiver);\r\n    }\r\n\r\n    /**\r\n     * @dev Executes a single swap on Uniswap.\r\n     * @param token0 The address of the input token.\r\n     * @param token1 The address of the output token.\r\n     * @param tokenBalance The amount of input token to be swapped.\r\n     * @param receiver The address that will receive the swapped tokens.\r\n     * @return amountOut The amount of output tokens received.\r\n     */\r\n    function _singleSwap(\r\n        address token0,\r\n        address token1,\r\n        uint256 tokenBalance,\r\n        address receiver\r\n    ) internal returns (uint256 amountOut) {\r\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({\r\n            tokenIn: token0,\r\n            tokenOut: token1,\r\n            fee: 3000,\r\n            recipient: address(receiver),\r\n            deadline: block.timestamp,\r\n            amountIn: tokenBalance,\r\n            amountOutMinimum: 0,\r\n            sqrtPriceLimitX96: 0\r\n        });\r\n\r\n        return ISwapRouter(uniswapRouter).exactInputSingle(params);\r\n    }\r\n\r\n    /**\r\n     * @dev Executes a multi-hop swap using the Uniswap router.\r\n     * @param token0 The address of the first token in the swap path.\r\n     * @param token1 The address of the second token in the swap path.\r\n     * @param token2 The address of the third token in the swap path.\r\n     * @param tokenBalance The amount of tokens to be swapped.\r\n     * @param receiver The address that will receive the swapped tokens.\r\n     * @return amountOut The amount of tokens received after the swap.\r\n     */\r\n    function _multiHopSwap(\r\n        address token0,\r\n        address token1,\r\n        address token2,\r\n        uint256 tokenBalance,\r\n        address receiver\r\n    ) internal returns (uint256 amountOut) {\r\n        ISwapRouter.ExactInputParams memory params = ISwapRouter.ExactInputParams({\r\n            path: abi.encodePacked(token0, uint24(3000), token1, uint24(3000), token2),\r\n            recipient: address(receiver),\r\n            deadline: block.timestamp,\r\n            amountIn: tokenBalance,\r\n            amountOutMinimum: 0\r\n        });\r\n        return ISwapRouter(uniswapRouter).exactInput(params);\r\n    }\r\n\r\n    /**\r\n     * @dev Ensures that the contract has the necessary approval for a token to be spent by a spender.\r\n     * If the current allowance is not equal to the desired amount, it updates the allowance accordingly.\r\n     * @param token The address of the token to be approved.\r\n     * @param spender The address of the spender.\r\n     * @param amount The desired allowance amount.\r\n     * @notice This function is internal and should not be called directly.\r\n     */\r\n    function secureApproval(address token, address spender, uint256 amount) internal {\r\n        IERC20 _token = IERC20(token);\r\n        // check allowance thena pprove\r\n        if (_token.allowance(address(this), spender) < amount) {\r\n            _token.approve(spender, 0);\r\n            _token.approve(spender, amount);\r\n        }\r\n    }\r\n}\r\n"},"contracts/interfaces/I1inchSpotAgg.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\n\r\ninterface I1inchSpotAgg {\r\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\r\n\r\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Agent.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1Agent {\r\n  struct Call {\r\n    address to;\r\n    uint256 value;\r\n    bytes data;\r\n  }\r\n\r\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\r\n}\r\n"},"contracts/interfaces/IBaluniV1AgentFactory.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1AgentFactory {\r\n  function getAgentAddress(address user) external view returns (address);\r\n\r\n  function getOrCreateAgent(address user) external returns (address);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\nimport './IBaluniV1Router.sol';\r\n\r\ninterface IBaluniV1Rebalancer {\r\n  struct RebalanceVars {\r\n    uint256 length;\r\n    uint256 totalValue;\r\n    uint256 finalUsdBalance;\r\n    uint256 overweightVaultsLength;\r\n    uint256 underweightVaultsLength;\r\n    uint256 totalActiveWeight;\r\n    uint256 amountOut;\r\n    uint256[] overweightVaults;\r\n    uint256[] overweightAmounts;\r\n    uint256[] underweightVaults;\r\n    uint256[] underweightAmounts;\r\n    uint256[] balances;\r\n  }\r\n\r\n  // Variables\r\n  function baluniRouter() external view returns (address);\r\n\r\n  function USDC() external view returns (address);\r\n\r\n  function WNATIVE() external view returns (address);\r\n\r\n  function uniswapRouter() external view returns (address);\r\n\r\n  function uniswapFactory() external view returns (address);\r\n\r\n  function _1InchSpotAgg() external view returns (address);\r\n\r\n  function treasury() external view returns (address);\r\n\r\n  // Functions\r\n  function rebalance(\r\n    uint256[] memory balances,\r\n    address[] calldata assets,\r\n    uint256[] calldata weights,\r\n    uint256 limit,\r\n    address sender,\r\n    address receiver,\r\n    address baseAsset\r\n  ) external;\r\n\r\n  function checkRebalance(\r\n    uint256[] memory balances,\r\n    address[] calldata assets,\r\n    uint256[] calldata weights,\r\n    uint256 limit,\r\n    address sender,\r\n    address baseAsset\r\n  ) external view returns (RebalanceVars memory);\r\n\r\n  function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Router.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\r\nimport './I1inchSpotAgg.sol';\r\nimport './IBaluniV1Agent.sol';\r\n\r\ninterface IBaluniV1Router {\r\n  struct Call {\r\n    address to;\r\n    uint256 value;\r\n    bytes data;\r\n  }\r\n\r\n  // Variables\r\n  function _MAX_BPS_FEE() external view returns (uint256);\r\n\r\n  function _BPS_FEE() external view returns (uint256);\r\n\r\n  function _BPS_BASE() external view returns (uint256);\r\n\r\n  function getTokens() external view returns (address[] memory);\r\n\r\n  function USDC() external view returns (IERC20);\r\n\r\n  function WNATIVE() external view returns (address);\r\n\r\n  function oracle() external view returns (address);\r\n\r\n  function uniswapRouter() external view returns (address);\r\n\r\n  function uniswapFactory() external view returns (address);\r\n\r\n  function agentFactory() external view returns (address);\r\n\r\n  function marketOracle() external view returns (address);\r\n\r\n  function rebalancer() external view returns (address);\r\n\r\n  function treasury() external view returns (address);\r\n\r\n  // Functions\r\n  function initialize(\r\n    address _usdc,\r\n    address _wnative,\r\n    address _1inchSpotAgg,\r\n    address _uniRouter,\r\n    address _uniFactory,\r\n    address _rebalancer\r\n  ) external;\r\n\r\n  function reinitialize(\r\n    address _usdc,\r\n    address _wnative,\r\n    address _1inchSpotAgg,\r\n    address _uniRouter,\r\n    address _uniFactory,\r\n    address _rebalancer,\r\n    uint64 version\r\n  ) external;\r\n\r\n  function initializeMarketOracle(address _marketOracle) external;\r\n\r\n  function changeMarketOracle(address _marketOracle) external;\r\n\r\n  function changeBpsFee(uint256 _newFee) external;\r\n\r\n  function changeTreasury(address _newTreasury) external;\r\n\r\n  function changeRebalancer(address _newRebalancer) external;\r\n\r\n  function changeAgentFactory(address _agentFactory) external;\r\n\r\n  function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external;\r\n\r\n  function liquidate(address token) external;\r\n\r\n  function liquidateAll() external;\r\n\r\n  function burnERC20(uint256 burnAmount) external;\r\n\r\n  function burnUSDC(uint256 burnAmount) external;\r\n\r\n  function getAgentAddress(address _user) external view returns (address);\r\n\r\n  function mintWithUSDC(uint256 balAmountToMint) external;\r\n\r\n  function callRebalance(\r\n    address[] calldata assets,\r\n    uint256[] calldata weights,\r\n    address sender,\r\n    address receiver,\r\n    uint256 limit,\r\n    address baseAsset\r\n  ) external;\r\n\r\n  function requiredUSDCtoMint(uint256 balAmountToMint) external view returns (uint256);\r\n\r\n  function calculateTokenShare(\r\n    uint256 totalBaluni,\r\n    uint256 totalERC20Balance,\r\n    uint256 baluniAmount,\r\n    uint256 tokenDecimals\r\n  ) external pure returns (uint256);\r\n\r\n  function tokenValuation(uint256 amount, address token) external view returns (uint256);\r\n\r\n  function totalValuation() external view returns (uint256);\r\n\r\n  function getUSDCShareValue(uint256 amount) external view returns (uint256);\r\n\r\n  function fetchMarketPrices() external view returns (uint256, uint256);\r\n\r\n  function getVersion() external view returns (uint64);\r\n\r\n  function unitPrice() external view returns (uint256);\r\n  \r\n}\r\n"},"contracts/libs/EnumerableSetUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Library for managing\r\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\r\n * types.\r\n *\r\n * Sets have the following properties:\r\n *\r\n * - Elements are added, removed, and checked for existence in constant time\r\n * (O(1)).\r\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\r\n *\r\n * ```\r\n * contract Example {\r\n *     // Add the library methods\r\n *     using EnumerableSet for EnumerableSet.AddressSet;\r\n *\r\n *     // Declare a set state variable\r\n *     EnumerableSet.AddressSet private mySet;\r\n * }\r\n * ```\r\n *\r\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\r\n * and `uint256` (`UintSet`) are supported.\r\n *\r\n * [WARNING]\r\n * ====\r\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\r\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\r\n *\r\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\r\n * ====\r\n */\r\nlibrary EnumerableSetUpgradeable {\r\n    // To implement this library for multiple types with as little code\r\n    // repetition as possible, we write it in terms of a generic Set type with\r\n    // bytes32 values.\r\n    // The Set implementation uses private functions, and user-facing\r\n    // implementations (such as AddressSet) are just wrappers around the\r\n    // underlying Set.\r\n    // This means that we can only create new EnumerableSets for types that fit\r\n    // in bytes32.\r\n\r\n    struct Set {\r\n        // Storage of set values\r\n        bytes32[] _values;\r\n        // Position of the value in the `values` array, plus 1 because index 0\r\n        // means a value is not in the set.\r\n        mapping(bytes32 => uint256) _indexes;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function _add(Set storage set, bytes32 value) private returns (bool) {\r\n        if (!_contains(set, value)) {\r\n            set._values.push(value);\r\n            // The value is stored at length-1, but we add 1 to all indexes\r\n            // and use 0 as a sentinel value\r\n            set._indexes[value] = set._values.length;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\r\n        // We read and store the value's index to prevent multiple reads from the same storage slot\r\n        uint256 valueIndex = set._indexes[value];\r\n\r\n        if (valueIndex != 0) {\r\n            // Equivalent to contains(set, value)\r\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\r\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\r\n            // This modifies the order of the array, as noted in {at}.\r\n\r\n            uint256 toDeleteIndex = valueIndex - 1;\r\n            uint256 lastIndex = set._values.length - 1;\r\n\r\n            if (lastIndex != toDeleteIndex) {\r\n                bytes32 lastValue = set._values[lastIndex];\r\n\r\n                // Move the last value to the index where the value to delete is\r\n                set._values[toDeleteIndex] = lastValue;\r\n                // Update the index for the moved value\r\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\r\n            }\r\n\r\n            // Delete the slot where the moved value was stored\r\n            set._values.pop();\r\n\r\n            // Delete the index for the deleted slot\r\n            delete set._indexes[value];\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\r\n        return set._indexes[value] != 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function _length(Set storage set) private view returns (uint256) {\r\n        return set._values.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\r\n        return set._values[index];\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function _values(Set storage set) private view returns (bytes32[] memory) {\r\n        return set._values;\r\n    }\r\n\r\n    // Bytes32Set\r\n\r\n    struct Bytes32Set {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\r\n        return _add(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\r\n        return _remove(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\r\n        return _contains(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(Bytes32Set storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\r\n        return _at(set._inner, index);\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\r\n        return _values(set._inner);\r\n    }\r\n\r\n    // AddressSet\r\n\r\n    struct AddressSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(AddressSet storage set, address value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(AddressSet storage set, address value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(AddressSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\r\n        return address(uint160(uint256(_at(set._inner, index))));\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(AddressSet storage set) internal view returns (address[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        address[] memory result;\r\n\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // UintSet\r\n\r\n    struct UintSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function length(UintSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\r\n        return uint256(_at(set._inner, index));\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        uint256[] memory result;\r\n\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"cancun","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates","devdoc","userdoc"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1293],"Initializable":[448],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":1294,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":449,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,1293,448],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nativeSrc":"1289:56:0","nodeType":"YulBlock","src":"1289:56:0","statements":[{"nativeSrc":"1303:32:0","nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:0","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:0","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[448]},"id":449,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":448,"linearizedBaseContracts":[448],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":448,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":448,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":269,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6357:20:1"},"referencedDeclaration":205,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":448,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7826:20:1"},"referencedDeclaration":205,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":448,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":448,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":448,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nativeSrc":"8846:55:1","nodeType":"YulBlock","src":"8846:55:1","statements":[{"nativeSrc":"8860:31:1","nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:1","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:1","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":443,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":208,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":445,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":447,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":442,"nodeType":"UserDefinedTypeName","pathNode":{"id":441,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"8795:20:1"},"referencedDeclaration":205,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":448,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":449,"src":"2349:6560:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[1872],"IERC1822Proxiable":[1432],"Initializable":[448],"UUPSUpgradeable":[630]},"id":631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":450,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":1433,"src":"141:88:2","symbolAliases":[{"foreign":{"id":451,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":1873,"src":"230:84:2","symbolAliases":[{"foreign":{"id":453,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":449,"src":"315:50:2","symbolAliases":[{"foreign":{"id":455,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":458,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1023:13:2"},"id":459,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":460,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":1432,"src":"1038:17:2"},"id":461,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":630,"linearizedBaseContracts":[630,1432,448],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":468,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":630,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":466,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":472,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":630,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":470,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":475,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":480,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":480,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":487,"nodeType":"Block","src":"2643:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2653:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2653:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"2653:13:2"},{"id":486,"nodeType":"PlaceholderStatement","src":"2676:1:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2124:493:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":488,"name":"onlyProxy","nameLocation":"2631:9:2","nodeType":"ModifierDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"2640:2:2"},"src":"2622:62:2","virtual":false,"visibility":"internal"},{"body":{"id":495,"nodeType":"Block","src":"2914:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":491,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"2924:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2924:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"2924:20:2"},{"id":494,"nodeType":"PlaceholderStatement","src":"2954:1:2"}]},"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"2690:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":496,"name":"notDelegated","nameLocation":"2899:12:2","nodeType":"ModifierDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"2911:2:2"},"src":"2890:72:2","virtual":false,"visibility":"internal"},{"body":{"id":501,"nodeType":"Block","src":"3028:7:2","statements":[]},"id":502,"implemented":true,"kind":"function","modifiers":[{"id":499,"kind":"modifierInvocation","modifierName":{"id":498,"name":"onlyInitializing","nameLocations":["3011:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3011:16:2"},"nodeType":"ModifierInvocation","src":"3011:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2977:22:2","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"2999:2:2"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"3028:0:2"},"scope":630,"src":"2968:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":507,"nodeType":"Block","src":"3111:7:2","statements":[]},"id":508,"implemented":true,"kind":"function","modifiers":[{"id":505,"kind":"modifierInvocation","modifierName":{"id":504,"name":"onlyInitializing","nameLocations":["3094:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3094:16:2"},"nodeType":"ModifierInvocation","src":"3094:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3050:32:2","nodeType":"FunctionDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"3082:2:2"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"3111:0:2"},"scope":630,"src":"3041:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1431],"body":{"id":519,"nodeType":"Block","src":"3783:56:2","statements":[{"expression":{"expression":{"id":516,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"3800:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1872_$","typeString":"type(library ERC1967Utils)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3813:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":1599,"src":"3800:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":515,"id":518,"nodeType":"Return","src":"3793:39:2"}]},"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"3123:577:2","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":520,"implemented":true,"kind":"function","modifiers":[{"id":512,"kind":"modifierInvocation","modifierName":{"id":511,"name":"notDelegated","nameLocations":["3752:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":496,"src":"3752:12:2"},"nodeType":"ModifierInvocation","src":"3752:12:2"}],"name":"proxiableUUID","nameLocation":"3714:13:2","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"3727:2:2"},"returnParameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":520,"src":"3774:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3774:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3773:9:2"},"scope":630,"src":"3705:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":539,"nodeType":"Block","src":"4263:109:2","statements":[{"expression":{"arguments":[{"id":531,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4291:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":530,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4273:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4273:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"4273:36:2"},{"expression":{"arguments":[{"id":535,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4341:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"4360:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":534,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4319:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"4319:46:2"}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"3845:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":540,"implemented":true,"kind":"function","modifiers":[{"id":528,"kind":"modifierInvocation","modifierName":{"id":527,"name":"onlyProxy","nameLocations":["4253:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":488,"src":"4253:9:2"},"nodeType":"ModifierInvocation","src":"4253:9:2"}],"name":"upgradeToAndCall","nameLocation":"4167:16:2","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"newImplementation","nameLocation":"4192:17:2","nodeType":"VariableDeclaration","scope":540,"src":"4184:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"4184:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"data","nameLocation":"4224:4:2","nodeType":"VariableDeclaration","scope":540,"src":"4211:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":524,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4183:46:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"4263:0:2"},"scope":630,"src":"4158:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":561,"nodeType":"Block","src":"4644:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":546,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4679:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4671:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:2","typeDescriptions":{}}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4671:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":548,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4688:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4671:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":550,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"4749:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1872_$","typeString":"type(library ERC1967Utils)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4762:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":1630,"src":"4749:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4749:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":553,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4785:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4749:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4671:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":560,"nodeType":"IfStatement","src":"4654:251:2","trueBody":{"id":559,"nodeType":"Block","src":"4844:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":556,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"4865:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4865:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"RevertStatement","src":"4858:36:2"}]}}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"4378:216:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."},"id":562,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4608:11:2","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"4619:2:2"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"4644:0:2"},"scope":630,"src":"4599:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":577,"nodeType":"Block","src":"5080:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":568,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5102:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5094:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"5094:7:2","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":570,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"5111:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5094:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":576,"nodeType":"IfStatement","src":"5090:145:2","trueBody":{"id":575,"nodeType":"Block","src":"5119:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":572,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"5195:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5195:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":574,"nodeType":"RevertStatement","src":"5188:36:2"}]}}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"4917:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":578,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5037:18:2","nodeType":"FunctionDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"5055:2:2"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[],"src":"5080:0:2"},"scope":630,"src":"5028:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"5247:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":584,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5633:17:2","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"newImplementation","nameLocation":"5659:17:2","nodeType":"VariableDeclaration","scope":584,"src":"5651:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:27:2"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"5694:0:2"},"scope":630,"src":"5624:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"6137:453:2","statements":[{"clauses":[{"block":{"id":617,"nodeType":"Block","src":"6227:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":600,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6245:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":601,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"6253:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1872_$","typeString":"type(library ERC1967Utils)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6266:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":1599,"src":"6253:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6245:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":609,"nodeType":"IfStatement","src":"6241:120:2","trueBody":{"id":608,"nodeType":"Block","src":"6287:74:2","statements":[{"errorCall":{"arguments":[{"id":605,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6341:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":604,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"6312:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6312:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"RevertStatement","src":"6305:41:2"}]}},{"expression":{"arguments":[{"id":613,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6404:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"6423:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":610,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"6374:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1872_$","typeString":"type(library ERC1967Utils)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6387:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":1691,"src":"6374:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":616,"nodeType":"ExpressionStatement","src":"6374:54:2"}]},"errorName":"","id":618,"nodeType":"TryCatchClause","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"slot","nameLocation":"6221:4:2","nodeType":"VariableDeclaration","scope":618,"src":"6213:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6213:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6212:14:2"},"src":"6204:235:2"},{"block":{"id":625,"nodeType":"Block","src":"6446:138:2","statements":[{"errorCall":{"arguments":[{"id":622,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6555:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":619,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"6513:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1872_$","typeString":"type(library ERC1967Utils)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6526:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":1604,"src":"6513:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6513:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":624,"nodeType":"RevertStatement","src":"6506:67:2"}]},"errorName":"","id":626,"nodeType":"TryCatchClause","src":"6440:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":593,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6169:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":592,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"6151:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$1432_$","typeString":"type(contract IERC1822Proxiable)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$1432","typeString":"contract IERC1822Proxiable"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6188:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":1431,"src":"6151:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":627,"nodeType":"TryStatement","src":"6147:437:2"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"5701:346:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."},"id":629,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6061:21:2","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"newImplementation","nameLocation":"6091:17:2","nodeType":"VariableDeclaration","scope":629,"src":"6083:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"6083:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"data","nameLocation":"6123:4:2","nodeType":"VariableDeclaration","scope":629,"src":"6110:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"6110:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6082:46:2"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[],"src":"6137:0:2"},"scope":630,"src":"6052:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":631,"src":"986:5606:2","usedErrors":[211,214,475,480,1604,1617,1999,2002],"usedEvents":[219,1583]}],"src":"115:6478:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1293],"ERC20Upgradeable":[1247],"IERC20":[1960],"IERC20Errors":[1474],"IERC20Metadata":[1986],"Initializable":[448]},"id":1248,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":632,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":1961,"src":"131:70:3","symbolAliases":[{"foreign":{"id":633,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":636,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":1987,"src":"202:97:3","symbolAliases":[{"foreign":{"id":635,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"210:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":638,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":1294,"src":"300:70:3","symbolAliases":[{"foreign":{"id":637,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"308:18:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":1570,"src":"371:83:3","symbolAliases":[{"foreign":{"id":639,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"379:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":642,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":449,"src":"455:66:3","symbolAliases":[{"foreign":{"id":641,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"463:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":644,"name":"Initializable","nameLocations":["1614:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1614:13:3"},"id":645,"nodeType":"InheritanceSpecifier","src":"1614:13:3"},{"baseName":{"id":646,"name":"ContextUpgradeable","nameLocations":["1629:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"1629:18:3"},"id":647,"nodeType":"InheritanceSpecifier","src":"1629:18:3"},{"baseName":{"id":648,"name":"IERC20","nameLocations":["1649:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":1960,"src":"1649:6:3"},"id":649,"nodeType":"InheritanceSpecifier","src":"1649:6:3"},{"baseName":{"id":650,"name":"IERC20Metadata","nameLocations":["1657:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":1986,"src":"1657:14:3"},"id":651,"nodeType":"InheritanceSpecifier","src":"1657:14:3"},{"baseName":{"id":652,"name":"IERC20Errors","nameLocations":["1673:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1474,"src":"1673:12:3"},"id":653,"nodeType":"InheritanceSpecifier","src":"1673:12:3"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"523:1052:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1247,"linearizedBaseContracts":[1247,1474,1986,1960,1293,448],"name":"ERC20Upgradeable","nameLocation":"1594:16:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Upgradeable.ERC20Storage","documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"1692:63:3","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC20"},"id":671,"members":[{"constant":false,"id":658,"mutability":"mutable","name":"_balances","nameLocation":"1826:9:3","nodeType":"VariableDeclaration","scope":671,"src":"1790:45:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":657,"keyName":"account","keyNameLocation":"1806:7:3","keyType":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"1798:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1790:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":656,"name":"uint256","nodeType":"ElementaryTypeName","src":"1817:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":664,"mutability":"mutable","name":"_allowances","nameLocation":"1910:11:3","nodeType":"VariableDeclaration","scope":671,"src":"1846:75:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":663,"keyName":"account","keyNameLocation":"1862:7:3","keyType":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"1854:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1846:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":662,"keyName":"spender","keyNameLocation":"1889:7:3","keyType":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1873:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"1900:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":666,"mutability":"mutable","name":"_totalSupply","nameLocation":"1940:12:3","nodeType":"VariableDeclaration","scope":671,"src":"1932:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"1932:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":668,"mutability":"mutable","name":"_name","nameLocation":"1970:5:3","nodeType":"VariableDeclaration","scope":671,"src":"1963:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":667,"name":"string","nodeType":"ElementaryTypeName","src":"1963:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":670,"mutability":"mutable","name":"_symbol","nameLocation":"1992:7:3","nodeType":"VariableDeclaration","scope":671,"src":"1985:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":669,"name":"string","nodeType":"ElementaryTypeName","src":"1985:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ERC20Storage","nameLocation":"1767:12:3","nodeType":"StructDefinition","scope":1247,"src":"1760:246:3","visibility":"public"},{"constant":true,"id":674,"mutability":"constant","name":"ERC20StorageLocation","nameLocation":"2146:20:3","nodeType":"VariableDeclaration","scope":1247,"src":"2121:114:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":672,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2121:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2169:66:3","typeDescriptions":{"typeIdentifier":"t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1","typeString":"int_const 3743...(69 digits omitted)...2592"},"value":"0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"},"visibility":"private"},{"body":{"id":681,"nodeType":"Block","src":"2316:79:3","statements":[{"AST":{"nativeSrc":"2335:54:3","nodeType":"YulBlock","src":"2335:54:3","statements":[{"nativeSrc":"2349:30:3","nodeType":"YulAssignment","src":"2349:30:3","value":{"name":"ERC20StorageLocation","nativeSrc":"2359:20:3","nodeType":"YulIdentifier","src":"2359:20:3"},"variableNames":[{"name":"$.slot","nativeSrc":"2349:6:3","nodeType":"YulIdentifier","src":"2349:6:3"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":678,"isOffset":false,"isSlot":true,"src":"2349:6:3","suffix":"slot","valueSize":1},{"declaration":674,"isOffset":false,"isSlot":false,"src":"2359:20:3","valueSize":1}],"id":680,"nodeType":"InlineAssembly","src":"2326:63:3"}]},"id":682,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC20Storage","nameLocation":"2251:16:3","nodeType":"FunctionDefinition","parameters":{"id":675,"nodeType":"ParameterList","parameters":[],"src":"2267:2:3"},"returnParameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"$","nameLocation":"2313:1:3","nodeType":"VariableDeclaration","scope":682,"src":"2292:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":677,"nodeType":"UserDefinedTypeName","pathNode":{"id":676,"name":"ERC20Storage","nameLocations":["2292:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"2292:12:3"},"referencedDeclaration":671,"src":"2292:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"src":"2291:24:3"},"scope":1247,"src":"2242:153:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":697,"nodeType":"Block","src":"2669:55:3","statements":[{"expression":{"arguments":[{"id":693,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"2702:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":694,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"2709:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":692,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"2679:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2679:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":696,"nodeType":"ExpressionStatement","src":"2679:38:3"}]},"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"2401:171:3","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":698,"implemented":true,"kind":"function","modifiers":[{"id":690,"kind":"modifierInvocation","modifierName":{"id":689,"name":"onlyInitializing","nameLocations":["2652:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2652:16:3"},"nodeType":"ModifierInvocation","src":"2652:16:3"}],"name":"__ERC20_init","nameLocation":"2586:12:3","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"name_","nameLocation":"2613:5:3","nodeType":"VariableDeclaration","scope":698,"src":"2599:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":684,"name":"string","nodeType":"ElementaryTypeName","src":"2599:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"symbol_","nameLocation":"2634:7:3","nodeType":"VariableDeclaration","scope":698,"src":"2620:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":686,"name":"string","nodeType":"ElementaryTypeName","src":"2620:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2598:44:3"},"returnParameters":{"id":691,"nodeType":"ParameterList","parameters":[],"src":"2669:0:3"},"scope":1247,"src":"2577:147:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":725,"nodeType":"Block","src":"2832:114:3","statements":[{"assignments":[709],"declarations":[{"constant":false,"id":709,"mutability":"mutable","name":"$","nameLocation":"2863:1:3","nodeType":"VariableDeclaration","scope":725,"src":"2842:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":708,"nodeType":"UserDefinedTypeName","pathNode":{"id":707,"name":"ERC20Storage","nameLocations":["2842:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"2842:12:3"},"referencedDeclaration":671,"src":"2842:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":712,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":710,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"2867:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2867:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2842:43:3"},{"expression":{"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":713,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"2895:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2897:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":668,"src":"2895:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":716,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"2905:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2895:15:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":718,"nodeType":"ExpressionStatement","src":"2895:15:3"},{"expression":{"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":719,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"2920:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":721,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2922:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":670,"src":"2920:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":722,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"2932:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2920:19:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":724,"nodeType":"ExpressionStatement","src":"2920:19:3"}]},"id":726,"implemented":true,"kind":"function","modifiers":[{"id":705,"kind":"modifierInvocation","modifierName":{"id":704,"name":"onlyInitializing","nameLocations":["2815:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2815:16:3"},"nodeType":"ModifierInvocation","src":"2815:16:3"}],"name":"__ERC20_init_unchained","nameLocation":"2739:22:3","nodeType":"FunctionDefinition","parameters":{"id":703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"name_","nameLocation":"2776:5:3","nodeType":"VariableDeclaration","scope":726,"src":"2762:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":699,"name":"string","nodeType":"ElementaryTypeName","src":"2762:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"symbol_","nameLocation":"2797:7:3","nodeType":"VariableDeclaration","scope":726,"src":"2783:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":701,"name":"string","nodeType":"ElementaryTypeName","src":"2783:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2761:44:3"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[],"src":"2832:0:3"},"scope":1247,"src":"2730:216:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1973],"body":{"id":741,"nodeType":"Block","src":"3071:84:3","statements":[{"assignments":[734],"declarations":[{"constant":false,"id":734,"mutability":"mutable","name":"$","nameLocation":"3102:1:3","nodeType":"VariableDeclaration","scope":741,"src":"3081:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":733,"nodeType":"UserDefinedTypeName","pathNode":{"id":732,"name":"ERC20Storage","nameLocations":["3081:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"3081:12:3"},"referencedDeclaration":671,"src":"3081:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":737,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":735,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"3106:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3106:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3081:43:3"},{"expression":{"expression":{"id":738,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"3141:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3143:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":668,"src":"3141:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":731,"id":740,"nodeType":"Return","src":"3134:14:3"}]},"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"2952:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":742,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"3020:4:3","nodeType":"FunctionDefinition","parameters":{"id":728,"nodeType":"ParameterList","parameters":[],"src":"3024:2:3"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":742,"src":"3056:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":729,"name":"string","nodeType":"ElementaryTypeName","src":"3056:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3055:15:3"},"scope":1247,"src":"3011:144:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1979],"body":{"id":757,"nodeType":"Block","src":"3330:86:3","statements":[{"assignments":[750],"declarations":[{"constant":false,"id":750,"mutability":"mutable","name":"$","nameLocation":"3361:1:3","nodeType":"VariableDeclaration","scope":757,"src":"3340:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":749,"nodeType":"UserDefinedTypeName","pathNode":{"id":748,"name":"ERC20Storage","nameLocations":["3340:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"3340:12:3"},"referencedDeclaration":671,"src":"3340:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":753,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":751,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"3365:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3340:43:3"},{"expression":{"expression":{"id":754,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"3400:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3402:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":670,"src":"3400:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":747,"id":756,"nodeType":"Return","src":"3393:16:3"}]},"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"3161:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":758,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"3277:6:3","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"3283:2:3"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":758,"src":"3315:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":745,"name":"string","nodeType":"ElementaryTypeName","src":"3315:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3314:15:3"},"scope":1247,"src":"3268:148:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1985],"body":{"id":766,"nodeType":"Block","src":"4105:26:3","statements":[{"expression":{"hexValue":"3138","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4122:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":763,"id":765,"nodeType":"Return","src":"4115:9:3"}]},"documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"3422:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":767,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"4058:8:3","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[],"src":"4066:2:3"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":767,"src":"4098:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":761,"name":"uint8","nodeType":"ElementaryTypeName","src":"4098:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4097:7:3"},"scope":1247,"src":"4049:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1909],"body":{"id":782,"nodeType":"Block","src":"4252:91:3","statements":[{"assignments":[775],"declarations":[{"constant":false,"id":775,"mutability":"mutable","name":"$","nameLocation":"4283:1:3","nodeType":"VariableDeclaration","scope":782,"src":"4262:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":774,"nodeType":"UserDefinedTypeName","pathNode":{"id":773,"name":"ERC20Storage","nameLocations":["4262:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"4262:12:3"},"referencedDeclaration":671,"src":"4262:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":778,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":776,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4287:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4287:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4262:43:3"},{"expression":{"expression":{"id":779,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"4322:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4324:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":666,"src":"4322:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":772,"id":781,"nodeType":"Return","src":"4315:21:3"}]},"documentation":{"id":768,"nodeType":"StructuredDocumentation","src":"4137:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":783,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"4200:11:3","nodeType":"FunctionDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[],"src":"4211:2:3"},"returnParameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":783,"src":"4243:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"4243:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4242:9:3"},"scope":1247,"src":"4191:152:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1917],"body":{"id":802,"nodeType":"Block","src":"4475:97:3","statements":[{"assignments":[793],"declarations":[{"constant":false,"id":793,"mutability":"mutable","name":"$","nameLocation":"4506:1:3","nodeType":"VariableDeclaration","scope":802,"src":"4485:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":792,"nodeType":"UserDefinedTypeName","pathNode":{"id":791,"name":"ERC20Storage","nameLocations":["4485:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"4485:12:3"},"referencedDeclaration":671,"src":"4485:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":796,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":794,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4510:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4510:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4485:43:3"},{"expression":{"baseExpression":{"expression":{"id":797,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"4545:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4547:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":658,"src":"4545:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":800,"indexExpression":{"id":799,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"4557:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4545:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":790,"id":801,"nodeType":"Return","src":"4538:27:3"}]},"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"4349:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":803,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"4410:9:3","nodeType":"FunctionDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"account","nameLocation":"4428:7:3","nodeType":"VariableDeclaration","scope":803,"src":"4420:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"4420:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4419:17:3"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":803,"src":"4466:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"4466:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4465:9:3"},"scope":1247,"src":"4401:171:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1927],"body":{"id":826,"nodeType":"Block","src":"4842:103:3","statements":[{"assignments":[814],"declarations":[{"constant":false,"id":814,"mutability":"mutable","name":"owner","nameLocation":"4860:5:3","nodeType":"VariableDeclaration","scope":826,"src":"4852:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"4852:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":817,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":815,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"4868:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4868:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4852:28:3"},{"expression":{"arguments":[{"id":819,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4900:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":820,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"4907:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"4911:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":818,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"4890:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4890:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":823,"nodeType":"ExpressionStatement","src":"4890:27:3"},{"expression":{"hexValue":"74727565","id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4934:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":812,"id":825,"nodeType":"Return","src":"4927:11:3"}]},"documentation":{"id":804,"nodeType":"StructuredDocumentation","src":"4578:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":827,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4776:8:3","nodeType":"FunctionDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"to","nameLocation":"4793:2:3","nodeType":"VariableDeclaration","scope":827,"src":"4785:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"4785:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"value","nameLocation":"4805:5:3","nodeType":"VariableDeclaration","scope":827,"src":"4797:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"4797:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4784:27:3"},"returnParameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":827,"src":"4836:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":810,"name":"bool","nodeType":"ElementaryTypeName","src":"4836:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4835:6:3"},"scope":1247,"src":"4767:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1937],"body":{"id":850,"nodeType":"Block","src":"5092:106:3","statements":[{"assignments":[839],"declarations":[{"constant":false,"id":839,"mutability":"mutable","name":"$","nameLocation":"5123:1:3","nodeType":"VariableDeclaration","scope":850,"src":"5102:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":838,"nodeType":"UserDefinedTypeName","pathNode":{"id":837,"name":"ERC20Storage","nameLocations":["5102:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"5102:12:3"},"referencedDeclaration":671,"src":"5102:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":842,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":840,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5127:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5127:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5102:43:3"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":843,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"5162:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":844,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5164:11:3","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":664,"src":"5162:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":846,"indexExpression":{"id":845,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"5176:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5162:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":848,"indexExpression":{"id":847,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"5183:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5162:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":836,"id":849,"nodeType":"Return","src":"5155:36:3"}]},"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"4951:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":851,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"5012:9:3","nodeType":"FunctionDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"owner","nameLocation":"5030:5:3","nodeType":"VariableDeclaration","scope":851,"src":"5022:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"5022:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"spender","nameLocation":"5045:7:3","nodeType":"VariableDeclaration","scope":851,"src":"5037:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"5037:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5021:32:3"},"returnParameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":851,"src":"5083:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"5083:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5082:9:3"},"scope":1247,"src":"5003:195:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1947],"body":{"id":874,"nodeType":"Block","src":"5584:107:3","statements":[{"assignments":[862],"declarations":[{"constant":false,"id":862,"mutability":"mutable","name":"owner","nameLocation":"5602:5:3","nodeType":"VariableDeclaration","scope":874,"src":"5594:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"5594:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":865,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":863,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"5610:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5594:28:3"},{"expression":{"arguments":[{"id":867,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"5641:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":868,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"5648:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"5657:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":866,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1130,1198],"referencedDeclaration":1130,"src":"5632:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5632:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":871,"nodeType":"ExpressionStatement","src":"5632:31:3"},{"expression":{"hexValue":"74727565","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5680:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":860,"id":873,"nodeType":"Return","src":"5673:11:3"}]},"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"5204:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":875,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"5514:7:3","nodeType":"FunctionDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"spender","nameLocation":"5530:7:3","nodeType":"VariableDeclaration","scope":875,"src":"5522:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"5522:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"value","nameLocation":"5547:5:3","nodeType":"VariableDeclaration","scope":875,"src":"5539:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":855,"name":"uint256","nodeType":"ElementaryTypeName","src":"5539:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5521:32:3"},"returnParameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":875,"src":"5578:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":858,"name":"bool","nodeType":"ElementaryTypeName","src":"5578:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5577:6:3"},"scope":1247,"src":"5505:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1959],"body":{"id":906,"nodeType":"Block","src":"6344:151:3","statements":[{"assignments":[888],"declarations":[{"constant":false,"id":888,"mutability":"mutable","name":"spender","nameLocation":"6362:7:3","nodeType":"VariableDeclaration","scope":906,"src":"6354:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"6354:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":891,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":889,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"6372:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6372:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6354:30:3"},{"expression":{"arguments":[{"id":893,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"6410:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":894,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"6416:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"6425:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":892,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"6394:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6394:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":897,"nodeType":"ExpressionStatement","src":"6394:37:3"},{"expression":{"arguments":[{"id":899,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"6451:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":900,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"6457:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"6461:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":898,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"6441:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6441:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":903,"nodeType":"ExpressionStatement","src":"6441:26:3"},{"expression":{"hexValue":"74727565","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6484:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":886,"id":905,"nodeType":"Return","src":"6477:11:3"}]},"documentation":{"id":876,"nodeType":"StructuredDocumentation","src":"5697:549:3","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":907,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"6260:12:3","nodeType":"FunctionDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"mutability":"mutable","name":"from","nameLocation":"6281:4:3","nodeType":"VariableDeclaration","scope":907,"src":"6273:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"6273:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":880,"mutability":"mutable","name":"to","nameLocation":"6295:2:3","nodeType":"VariableDeclaration","scope":907,"src":"6287:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"6287:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"value","nameLocation":"6307:5:3","nodeType":"VariableDeclaration","scope":907,"src":"6299:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"6299:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6272:41:3"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":907,"src":"6338:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":884,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6337:6:3"},"scope":1247,"src":"6251:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":953,"nodeType":"Block","src":"6937:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":917,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"6951:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6967:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6959:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"6959:7:3","typeDescriptions":{}}},"id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6959:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6951:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":931,"nodeType":"IfStatement","src":"6947:86:3","trueBody":{"id":930,"nodeType":"Block","src":"6971:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7019:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7011:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":924,"name":"address","nodeType":"ElementaryTypeName","src":"7011:7:3","typeDescriptions":{}}},"id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7011:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":923,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"6992:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6992:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":929,"nodeType":"RevertStatement","src":"6985:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":932,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"7046:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7060:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7052:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":933,"name":"address","nodeType":"ElementaryTypeName","src":"7052:7:3","typeDescriptions":{}}},"id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7052:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7046:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":946,"nodeType":"IfStatement","src":"7042:86:3","trueBody":{"id":945,"nodeType":"Block","src":"7064:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7114:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7106:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"7106:7:3","typeDescriptions":{}}},"id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7106:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":938,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"7085:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7085:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":944,"nodeType":"RevertStatement","src":"7078:39:3"}]}},{"expression":{"arguments":[{"id":948,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"7145:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":949,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"7151:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"7155:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":947,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"7137:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7137:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":952,"nodeType":"ExpressionStatement","src":"7137:24:3"}]},"documentation":{"id":908,"nodeType":"StructuredDocumentation","src":"6501:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":954,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"6877:9:3","nodeType":"FunctionDefinition","parameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"from","nameLocation":"6895:4:3","nodeType":"VariableDeclaration","scope":954,"src":"6887:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"6887:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":912,"mutability":"mutable","name":"to","nameLocation":"6909:2:3","nodeType":"VariableDeclaration","scope":954,"src":"6901:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":911,"name":"address","nodeType":"ElementaryTypeName","src":"6901:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":914,"mutability":"mutable","name":"value","nameLocation":"6921:5:3","nodeType":"VariableDeclaration","scope":954,"src":"6913:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"6913:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6886:41:3"},"returnParameters":{"id":916,"nodeType":"ParameterList","parameters":[],"src":"6937:0:3"},"scope":1247,"src":"6868:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1045,"nodeType":"Block","src":"7558:1095:3","statements":[{"assignments":[966],"declarations":[{"constant":false,"id":966,"mutability":"mutable","name":"$","nameLocation":"7589:1:3","nodeType":"VariableDeclaration","scope":1045,"src":"7568:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":965,"nodeType":"UserDefinedTypeName","pathNode":{"id":964,"name":"ERC20Storage","nameLocations":["7568:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"7568:12:3"},"referencedDeclaration":671,"src":"7568:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":969,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":967,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"7593:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7568:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":970,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"7625:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7641:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7633:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"7633:7:3","typeDescriptions":{}}},"id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7633:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7625:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1012,"nodeType":"Block","src":"7801:366:3","statements":[{"assignments":[984],"declarations":[{"constant":false,"id":984,"mutability":"mutable","name":"fromBalance","nameLocation":"7823:11:3","nodeType":"VariableDeclaration","scope":1012,"src":"7815:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"7815:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":989,"initialValue":{"baseExpression":{"expression":{"id":985,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"7837:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7839:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":658,"src":"7837:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":988,"indexExpression":{"id":987,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"7849:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7837:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7815:39:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":990,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7872:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"7886:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7872:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1000,"nodeType":"IfStatement","src":"7868:115:3","trueBody":{"id":999,"nodeType":"Block","src":"7893:90:3","statements":[{"errorCall":{"arguments":[{"id":994,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"7943:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":995,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7949:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"7962:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":993,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"7918:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7918:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":998,"nodeType":"RevertStatement","src":"7911:57:3"}]}},{"id":1011,"nodeType":"UncheckedBlock","src":"7996:161:3","statements":[{"expression":{"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1001,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"8103:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1004,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8105:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":658,"src":"8103:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1005,"indexExpression":{"id":1003,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"8115:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8103:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1006,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"8123:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8137:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8123:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8103:39:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1010,"nodeType":"ExpressionStatement","src":"8103:39:3"}]}]},"id":1013,"nodeType":"IfStatement","src":"7621:546:3","trueBody":{"id":982,"nodeType":"Block","src":"7645:150:3","statements":[{"expression":{"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":976,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"7761:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7763:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":666,"src":"7761:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"7779:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7761:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":981,"nodeType":"ExpressionStatement","src":"7761:23:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1014,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8181:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8195:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8187:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"8187:7:3","typeDescriptions":{}}},"id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8187:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8181:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1037,"nodeType":"Block","src":"8398:208:3","statements":[{"id":1036,"nodeType":"UncheckedBlock","src":"8412:184:3","statements":[{"expression":{"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1028,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"8557:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8559:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":658,"src":"8557:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1032,"indexExpression":{"id":1030,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8569:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8557:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8576:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8557:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1035,"nodeType":"ExpressionStatement","src":"8557:24:3"}]}]},"id":1038,"nodeType":"IfStatement","src":"8177:429:3","trueBody":{"id":1027,"nodeType":"Block","src":"8199:193:3","statements":[{"id":1026,"nodeType":"UncheckedBlock","src":"8213:169:3","statements":[{"expression":{"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1020,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"8344:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8346:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":666,"src":"8344:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8362:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8344:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1025,"nodeType":"ExpressionStatement","src":"8344:23:3"}]}]}},{"eventCall":{"arguments":[{"id":1040,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"8630:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1041,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8636:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8640:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1039,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"8621:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8621:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1044,"nodeType":"EmitStatement","src":"8616:30:3"}]},"documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"7174:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1046,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"7492:7:3","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"from","nameLocation":"7508:4:3","nodeType":"VariableDeclaration","scope":1046,"src":"7500:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"7500:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"to","nameLocation":"7522:2:3","nodeType":"VariableDeclaration","scope":1046,"src":"7514:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"7514:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"value","nameLocation":"7534:5:3","nodeType":"VariableDeclaration","scope":1046,"src":"7526:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"7526:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7499:41:3"},"returnParameters":{"id":963,"nodeType":"ParameterList","parameters":[],"src":"7558:0:3"},"scope":1247,"src":"7483:1170:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1078,"nodeType":"Block","src":"9052:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1054,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"9066:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9085:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9077:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"9077:7:3","typeDescriptions":{}}},"id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9077:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9066:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1068,"nodeType":"IfStatement","src":"9062:91:3","trueBody":{"id":1067,"nodeType":"Block","src":"9089:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9139:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9131:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"9131:7:3","typeDescriptions":{}}},"id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9131:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1060,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"9110:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9110:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1066,"nodeType":"RevertStatement","src":"9103:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9178:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9170:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"9170:7:3","typeDescriptions":{}}},"id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9170:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1074,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"9182:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"9191:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1069,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"9162:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9162:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"ExpressionStatement","src":"9162:35:3"}]},"documentation":{"id":1047,"nodeType":"StructuredDocumentation","src":"8659:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1079,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9005:5:3","nodeType":"FunctionDefinition","parameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"account","nameLocation":"9019:7:3","nodeType":"VariableDeclaration","scope":1079,"src":"9011:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"9011:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"value","nameLocation":"9036:5:3","nodeType":"VariableDeclaration","scope":1079,"src":"9028:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"9028:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9010:32:3"},"returnParameters":{"id":1053,"nodeType":"ParameterList","parameters":[],"src":"9052:0:3"},"scope":1247,"src":"8996:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1111,"nodeType":"Block","src":"9578:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1087,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"9592:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9611:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9603:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"9603:7:3","typeDescriptions":{}}},"id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9603:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9592:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1101,"nodeType":"IfStatement","src":"9588:89:3","trueBody":{"id":1100,"nodeType":"Block","src":"9615:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9663:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9655:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"9655:7:3","typeDescriptions":{}}},"id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9655:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1093,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"9636:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9636:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1099,"nodeType":"RevertStatement","src":"9629:37:3"}]}},{"expression":{"arguments":[{"id":1103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"9694:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9711:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9703:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"9703:7:3","typeDescriptions":{}}},"id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9703:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"9715:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1102,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"9686:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9686:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1110,"nodeType":"ExpressionStatement","src":"9686:35:3"}]},"documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"9210:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1112,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9531:5:3","nodeType":"FunctionDefinition","parameters":{"id":1085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"account","nameLocation":"9545:7:3","nodeType":"VariableDeclaration","scope":1112,"src":"9537:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1081,"name":"address","nodeType":"ElementaryTypeName","src":"9537:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"value","nameLocation":"9562:5:3","nodeType":"VariableDeclaration","scope":1112,"src":"9554:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1083,"name":"uint256","nodeType":"ElementaryTypeName","src":"9554:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9536:32:3"},"returnParameters":{"id":1086,"nodeType":"ParameterList","parameters":[],"src":"9578:0:3"},"scope":1247,"src":"9522:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1129,"nodeType":"Block","src":"10338:54:3","statements":[{"expression":{"arguments":[{"id":1123,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"10357:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1124,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"10364:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"10373:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10380:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1122,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1130,1198],"referencedDeclaration":1198,"src":"10348:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10348:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1128,"nodeType":"ExpressionStatement","src":"10348:37:3"}]},"documentation":{"id":1113,"nodeType":"StructuredDocumentation","src":"9734:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1130,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10273:8:3","nodeType":"FunctionDefinition","parameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"owner","nameLocation":"10290:5:3","nodeType":"VariableDeclaration","scope":1130,"src":"10282:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"10282:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"spender","nameLocation":"10305:7:3","nodeType":"VariableDeclaration","scope":1130,"src":"10297:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"10297:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"value","nameLocation":"10322:5:3","nodeType":"VariableDeclaration","scope":1130,"src":"10314:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"10314:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10281:47:3"},"returnParameters":{"id":1121,"nodeType":"ParameterList","parameters":[],"src":"10338:0:3"},"scope":1247,"src":"10264:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1197,"nodeType":"Block","src":"11322:389:3","statements":[{"assignments":[1144],"declarations":[{"constant":false,"id":1144,"mutability":"mutable","name":"$","nameLocation":"11353:1:3","nodeType":"VariableDeclaration","scope":1197,"src":"11332:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1143,"nodeType":"UserDefinedTypeName","pathNode":{"id":1142,"name":"ERC20Storage","nameLocations":["11332:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"11332:12:3"},"referencedDeclaration":671,"src":"11332:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1147,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1145,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"11357:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11357:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11332:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1148,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"11389:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11406:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11398:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"11398:7:3","typeDescriptions":{}}},"id":1152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11398:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11389:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1162,"nodeType":"IfStatement","src":"11385:89:3","trueBody":{"id":1161,"nodeType":"Block","src":"11410:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11460:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11452:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"11452:7:3","typeDescriptions":{}}},"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11452:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1154,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"11431:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11431:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1160,"nodeType":"RevertStatement","src":"11424:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1163,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"11487:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11506:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11498:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"11498:7:3","typeDescriptions":{}}},"id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11498:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11487:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1177,"nodeType":"IfStatement","src":"11483:90:3","trueBody":{"id":1176,"nodeType":"Block","src":"11510:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11559:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11551:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1170,"name":"address","nodeType":"ElementaryTypeName","src":"11551:7:3","typeDescriptions":{}}},"id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11551:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1169,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"11531:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11531:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1175,"nodeType":"RevertStatement","src":"11524:38:3"}]}},{"expression":{"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"11582:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11584:11:3","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":664,"src":"11582:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1183,"indexExpression":{"id":1180,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"11596:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11582:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1184,"indexExpression":{"id":1181,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"11603:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11582:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"11614:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11582:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1187,"nodeType":"ExpressionStatement","src":"11582:37:3"},{"condition":{"id":1188,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"11633:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1196,"nodeType":"IfStatement","src":"11629:76:3","trueBody":{"id":1195,"nodeType":"Block","src":"11644:61:3","statements":[{"eventCall":{"arguments":[{"id":1190,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"11672:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1191,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"11679:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"11688:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1189,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"11663:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11663:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1194,"nodeType":"EmitStatement","src":"11658:36:3"}]}}]},"documentation":{"id":1131,"nodeType":"StructuredDocumentation","src":"10398:821:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1198,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"11233:8:3","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"owner","nameLocation":"11250:5:3","nodeType":"VariableDeclaration","scope":1198,"src":"11242:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"11242:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"spender","nameLocation":"11265:7:3","nodeType":"VariableDeclaration","scope":1198,"src":"11257:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"11257:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"value","nameLocation":"11282:5:3","nodeType":"VariableDeclaration","scope":1198,"src":"11274:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1136,"name":"uint256","nodeType":"ElementaryTypeName","src":"11274:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1139,"mutability":"mutable","name":"emitEvent","nameLocation":"11294:9:3","nodeType":"VariableDeclaration","scope":1198,"src":"11289:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1138,"name":"bool","nodeType":"ElementaryTypeName","src":"11289:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11241:63:3"},"returnParameters":{"id":1141,"nodeType":"ParameterList","parameters":[],"src":"11322:0:3"},"scope":1247,"src":"11224:487:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1245,"nodeType":"Block","src":"12082:388:3","statements":[{"assignments":[1209],"declarations":[{"constant":false,"id":1209,"mutability":"mutable","name":"currentAllowance","nameLocation":"12100:16:3","nodeType":"VariableDeclaration","scope":1245,"src":"12092:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1208,"name":"uint256","nodeType":"ElementaryTypeName","src":"12092:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1214,"initialValue":{"arguments":[{"id":1211,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"12129:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1212,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"12136:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1210,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"12119:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12119:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12092:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1215,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12158:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12183:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"12183:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1216,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12178:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12178:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12192:3:3","memberName":"max","nodeType":"MemberAccess","src":"12178:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12158:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1244,"nodeType":"IfStatement","src":"12154:310:3","trueBody":{"id":1243,"nodeType":"Block","src":"12197:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1222,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12215:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"12234:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12215:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1232,"nodeType":"IfStatement","src":"12211:130:3","trueBody":{"id":1231,"nodeType":"Block","src":"12241:100:3","statements":[{"errorCall":{"arguments":[{"id":1226,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"12293:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1227,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12302:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"12320:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1225,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"12266:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12266:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1230,"nodeType":"RevertStatement","src":"12259:67:3"}]}},{"id":1242,"nodeType":"UncheckedBlock","src":"12354:100:3","statements":[{"expression":{"arguments":[{"id":1234,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"12391:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1235,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"12398:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1236,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12407:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"12426:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12407:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12433:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1233,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1130,1198],"referencedDeclaration":1198,"src":"12382:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1241,"nodeType":"ExpressionStatement","src":"12382:57:3"}]}]}}]},"documentation":{"id":1199,"nodeType":"StructuredDocumentation","src":"11717:271:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1246,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"12002:15:3","nodeType":"FunctionDefinition","parameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"owner","nameLocation":"12026:5:3","nodeType":"VariableDeclaration","scope":1246,"src":"12018:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1200,"name":"address","nodeType":"ElementaryTypeName","src":"12018:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1203,"mutability":"mutable","name":"spender","nameLocation":"12041:7:3","nodeType":"VariableDeclaration","scope":1246,"src":"12033:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1202,"name":"address","nodeType":"ElementaryTypeName","src":"12033:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1205,"mutability":"mutable","name":"value","nameLocation":"12058:5:3","nodeType":"VariableDeclaration","scope":1246,"src":"12050:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1204,"name":"uint256","nodeType":"ElementaryTypeName","src":"12050:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12017:47:3"},"returnParameters":{"id":1207,"nodeType":"ParameterList","parameters":[],"src":"12082:0:3"},"scope":1247,"src":"11993:477:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1248,"src":"1576:10896:3","usedErrors":[211,214,1444,1449,1454,1463,1468,1473],"usedEvents":[219,1894,1903]}],"src":"105:12368:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1293],"Initializable":[448]},"id":1294,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1249,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1251,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":449,"src":"126:63:4","symbolAliases":[{"foreign":{"id":1250,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"134:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1253,"name":"Initializable","nameLocations":["728:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"728:13:4"},"id":1254,"nodeType":"InheritanceSpecifier","src":"728:13:4"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"191:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1293,"linearizedBaseContracts":[1293,448],"name":"ContextUpgradeable","nameLocation":"706:18:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":1259,"nodeType":"Block","src":"800:7:4","statements":[]},"id":1260,"implemented":true,"kind":"function","modifiers":[{"id":1257,"kind":"modifierInvocation","modifierName":{"id":1256,"name":"onlyInitializing","nameLocations":["783:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:4"},"nodeType":"ModifierInvocation","src":"783:16:4"}],"name":"__Context_init","nameLocation":"757:14:4","nodeType":"FunctionDefinition","parameters":{"id":1255,"nodeType":"ParameterList","parameters":[],"src":"771:2:4"},"returnParameters":{"id":1258,"nodeType":"ParameterList","parameters":[],"src":"800:0:4"},"scope":1293,"src":"748:59:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1265,"nodeType":"Block","src":"875:7:4","statements":[]},"id":1266,"implemented":true,"kind":"function","modifiers":[{"id":1263,"kind":"modifierInvocation","modifierName":{"id":1262,"name":"onlyInitializing","nameLocations":["858:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:4"},"nodeType":"ModifierInvocation","src":"858:16:4"}],"name":"__Context_init_unchained","nameLocation":"822:24:4","nodeType":"FunctionDefinition","parameters":{"id":1261,"nodeType":"ParameterList","parameters":[],"src":"846:2:4"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[],"src":"875:0:4"},"scope":1293,"src":"813:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1274,"nodeType":"Block","src":"949:34:4","statements":[{"expression":{"expression":{"id":1271,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:4","memberName":"sender","nodeType":"MemberAccess","src":"966:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1270,"id":1273,"nodeType":"Return","src":"959:17:4"}]},"id":1275,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:4","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[],"src":"906:2:4"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1275,"src":"940:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:4"},"scope":1293,"src":"887:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1283,"nodeType":"Block","src":"1056:32:4","statements":[{"expression":{"expression":{"id":1280,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:4","memberName":"data","nodeType":"MemberAccess","src":"1073:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1279,"id":1282,"nodeType":"Return","src":"1066:15:4"}]},"id":1284,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:4","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[],"src":"1006:2:4"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1284,"src":"1040:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1277,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:4"},"scope":1293,"src":"989:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1291,"nodeType":"Block","src":"1166:25:4","statements":[{"expression":{"hexValue":"30","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1288,"id":1290,"nodeType":"Return","src":"1176:8:4"}]},"id":1292,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:4","nodeType":"FunctionDefinition","parameters":{"id":1285,"nodeType":"ParameterList","parameters":[],"src":"1123:2:4"},"returnParameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1292,"src":"1157:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1286,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:4"},"scope":1293,"src":"1094:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1294,"src":"688:505:4","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"Initializable":[448],"ReentrancyGuardUpgradeable":[1422]},"id":1423,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1295,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1297,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1423,"sourceUnit":449,"src":"134:63:5","symbolAliases":[{"foreign":{"id":1296,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"142:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1299,"name":"Initializable","nameLocations":["998:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"998:13:5"},"id":1300,"nodeType":"InheritanceSpecifier","src":"998:13:5"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"199:750:5","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1422,"linearizedBaseContracts":[1422,448],"name":"ReentrancyGuardUpgradeable","nameLocation":"968:26:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1303,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1791:11:5","nodeType":"VariableDeclaration","scope":1422,"src":"1766:40:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"1766:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1805:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1306,"mutability":"constant","name":"ENTERED","nameLocation":"1837:7:5","nodeType":"VariableDeclaration","scope":1422,"src":"1812:36:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1304,"name":"uint256","nodeType":"ElementaryTypeName","src":"1812:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1847:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"canonicalName":"ReentrancyGuardUpgradeable.ReentrancyGuardStorage","documentation":{"id":1307,"nodeType":"StructuredDocumentation","src":"1855:73:5","text":"@custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard"},"id":1310,"members":[{"constant":false,"id":1309,"mutability":"mutable","name":"_status","nameLocation":"1981:7:5","nodeType":"VariableDeclaration","scope":1310,"src":"1973:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1308,"name":"uint256","nodeType":"ElementaryTypeName","src":"1973:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReentrancyGuardStorage","nameLocation":"1940:22:5","nodeType":"StructDefinition","scope":1422,"src":"1933:62:5","visibility":"public"},{"constant":true,"id":1313,"mutability":"constant","name":"ReentrancyGuardStorageLocation","nameLocation":"2145:30:5","nodeType":"VariableDeclaration","scope":1422,"src":"2120:124:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2120:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839623737396231373432326430646639323232333031386233326234643166613436653037313732336436383137653234383664303033626563633535663030","id":1312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2178:66:5","typeDescriptions":{"typeIdentifier":"t_rational_70319816728846589445362000750570655803700195216363692647688146666176345628416_by_1","typeString":"int_const 7031...(69 digits omitted)...8416"},"value":"0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"},"visibility":"private"},{"body":{"id":1320,"nodeType":"Block","src":"2345:89:5","statements":[{"AST":{"nativeSrc":"2364:64:5","nodeType":"YulBlock","src":"2364:64:5","statements":[{"nativeSrc":"2378:40:5","nodeType":"YulAssignment","src":"2378:40:5","value":{"name":"ReentrancyGuardStorageLocation","nativeSrc":"2388:30:5","nodeType":"YulIdentifier","src":"2388:30:5"},"variableNames":[{"name":"$.slot","nativeSrc":"2378:6:5","nodeType":"YulIdentifier","src":"2378:6:5"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":1317,"isOffset":false,"isSlot":true,"src":"2378:6:5","suffix":"slot","valueSize":1},{"declaration":1313,"isOffset":false,"isSlot":false,"src":"2388:30:5","valueSize":1}],"id":1319,"nodeType":"InlineAssembly","src":"2355:73:5"}]},"id":1321,"implemented":true,"kind":"function","modifiers":[],"name":"_getReentrancyGuardStorage","nameLocation":"2260:26:5","nodeType":"FunctionDefinition","parameters":{"id":1314,"nodeType":"ParameterList","parameters":[],"src":"2286:2:5"},"returnParameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"$","nameLocation":"2342:1:5","nodeType":"VariableDeclaration","scope":1321,"src":"2311:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1316,"nodeType":"UserDefinedTypeName","pathNode":{"id":1315,"name":"ReentrancyGuardStorage","nameLocations":["2311:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1310,"src":"2311:22:5"},"referencedDeclaration":1310,"src":"2311:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"src":"2310:34:5"},"scope":1422,"src":"2251:183:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":1322,"nodeType":"StructuredDocumentation","src":"2440:52:5","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1324,"name":"ReentrancyGuardReentrantCall","nameLocation":"2503:28:5","nodeType":"ErrorDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[],"src":"2531:2:5"},"src":"2497:37:5"},{"body":{"id":1332,"nodeType":"Block","src":"2600:51:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1329,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"2610:32:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2610:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1331,"nodeType":"ExpressionStatement","src":"2610:34:5"}]},"id":1333,"implemented":true,"kind":"function","modifiers":[{"id":1327,"kind":"modifierInvocation","modifierName":{"id":1326,"name":"onlyInitializing","nameLocations":["2583:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2583:16:5"},"nodeType":"ModifierInvocation","src":"2583:16:5"}],"name":"__ReentrancyGuard_init","nameLocation":"2549:22:5","nodeType":"FunctionDefinition","parameters":{"id":1325,"nodeType":"ParameterList","parameters":[],"src":"2571:2:5"},"returnParameters":{"id":1328,"nodeType":"ParameterList","parameters":[],"src":"2600:0:5"},"scope":1422,"src":"2540:111:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1350,"nodeType":"Block","src":"2727:113:5","statements":[{"assignments":[1340],"declarations":[{"constant":false,"id":1340,"mutability":"mutable","name":"$","nameLocation":"2768:1:5","nodeType":"VariableDeclaration","scope":1350,"src":"2737:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1339,"nodeType":"UserDefinedTypeName","pathNode":{"id":1338,"name":"ReentrancyGuardStorage","nameLocations":["2737:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1310,"src":"2737:22:5"},"referencedDeclaration":1310,"src":"2737:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1343,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1341,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"2772:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1310_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2772:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2737:63:5"},{"expression":{"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1344,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"2810:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2812:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1309,"src":"2810:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1347,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"2822:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2810:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1349,"nodeType":"ExpressionStatement","src":"2810:23:5"}]},"id":1351,"implemented":true,"kind":"function","modifiers":[{"id":1336,"kind":"modifierInvocation","modifierName":{"id":1335,"name":"onlyInitializing","nameLocations":["2710:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2710:16:5"},"nodeType":"ModifierInvocation","src":"2710:16:5"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"2666:32:5","nodeType":"FunctionDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[],"src":"2698:2:5"},"returnParameters":{"id":1337,"nodeType":"ParameterList","parameters":[],"src":"2727:0:5"},"scope":1422,"src":"2657:183:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1361,"nodeType":"Block","src":"3241:79:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1354,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"3251:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3251:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1356,"nodeType":"ExpressionStatement","src":"3251:21:5"},{"id":1357,"nodeType":"PlaceholderStatement","src":"3282:1:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1358,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"3293:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3293:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1360,"nodeType":"ExpressionStatement","src":"3293:20:5"}]},"documentation":{"id":1352,"nodeType":"StructuredDocumentation","src":"2846:366:5","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1362,"name":"nonReentrant","nameLocation":"3226:12:5","nodeType":"ModifierDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[],"src":"3238:2:5"},"src":"3217:103:5","virtual":false,"visibility":"internal"},{"body":{"id":1386,"nodeType":"Block","src":"3365:345:5","statements":[{"assignments":[1367],"declarations":[{"constant":false,"id":1367,"mutability":"mutable","name":"$","nameLocation":"3406:1:5","nodeType":"VariableDeclaration","scope":1386,"src":"3375:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1366,"nodeType":"UserDefinedTypeName","pathNode":{"id":1365,"name":"ReentrancyGuardStorage","nameLocations":["3375:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1310,"src":"3375:22:5"},"referencedDeclaration":1310,"src":"3375:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1370,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1368,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"3410:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1310_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3375:63:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1371,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"3526:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3528:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1309,"src":"3526:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1373,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"3539:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3526:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1379,"nodeType":"IfStatement","src":"3522:88:5","trueBody":{"id":1378,"nodeType":"Block","src":"3548:62:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1375,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"3569:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3569:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1377,"nodeType":"RevertStatement","src":"3562:37:5"}]}},{"expression":{"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"3684:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1382,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3686:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1309,"src":"3684:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1383,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"3696:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3684:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1385,"nodeType":"ExpressionStatement","src":"3684:19:5"}]},"id":1387,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"3335:19:5","nodeType":"FunctionDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[],"src":"3354:2:5"},"returnParameters":{"id":1364,"nodeType":"ParameterList","parameters":[],"src":"3365:0:5"},"scope":1422,"src":"3326:384:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1402,"nodeType":"Block","src":"3754:245:5","statements":[{"assignments":[1392],"declarations":[{"constant":false,"id":1392,"mutability":"mutable","name":"$","nameLocation":"3795:1:5","nodeType":"VariableDeclaration","scope":1402,"src":"3764:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1391,"nodeType":"UserDefinedTypeName","pathNode":{"id":1390,"name":"ReentrancyGuardStorage","nameLocations":["3764:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1310,"src":"3764:22:5"},"referencedDeclaration":1310,"src":"3764:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1395,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1393,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"3799:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1310_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3799:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3764:63:5"},{"expression":{"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1396,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"3969:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1398,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3971:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1309,"src":"3969:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1399,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"3981:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3969:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1401,"nodeType":"ExpressionStatement","src":"3969:23:5"}]},"id":1403,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"3725:18:5","nodeType":"FunctionDefinition","parameters":{"id":1388,"nodeType":"ParameterList","parameters":[],"src":"3743:2:5"},"returnParameters":{"id":1389,"nodeType":"ParameterList","parameters":[],"src":"3754:0:5"},"scope":1422,"src":"3716:283:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1420,"nodeType":"Block","src":"4242:117:5","statements":[{"assignments":[1411],"declarations":[{"constant":false,"id":1411,"mutability":"mutable","name":"$","nameLocation":"4283:1:5","nodeType":"VariableDeclaration","scope":1420,"src":"4252:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1410,"nodeType":"UserDefinedTypeName","pathNode":{"id":1409,"name":"ReentrancyGuardStorage","nameLocations":["4252:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1310,"src":"4252:22:5"},"referencedDeclaration":1310,"src":"4252:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1414,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1412,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"4287:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1310_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4287:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4252:63:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1415,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"4332:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4334:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1309,"src":"4332:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1417,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"4345:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4332:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1408,"id":1419,"nodeType":"Return","src":"4325:27:5"}]},"documentation":{"id":1404,"nodeType":"StructuredDocumentation","src":"4005:168:5","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1421,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"4187:23:5","nodeType":"FunctionDefinition","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[],"src":"4210:2:5"},"returnParameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1421,"src":"4236:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1406,"name":"bool","nodeType":"ElementaryTypeName","src":"4236:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4235:6:5"},"scope":1422,"src":"4178:181:5","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1423,"src":"950:3411:5","usedErrors":[211,214,1324],"usedEvents":[219]}],"src":"109:4253:5"},"id":5},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[1432]},"id":1433,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1424,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1425,"nodeType":"StructuredDocumentation","src":"139:203:6","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":1432,"linearizedBaseContracts":[1432],"name":"IERC1822Proxiable","nameLocation":"353:17:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1426,"nodeType":"StructuredDocumentation","src":"377:438:6","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":1431,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"829:13:6","nodeType":"FunctionDefinition","parameters":{"id":1427,"nodeType":"ParameterList","parameters":[],"src":"842:2:6"},"returnParameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1431,"src":"868:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1428,"name":"bytes32","nodeType":"ElementaryTypeName","src":"868:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"867:9:6"},"scope":1432,"src":"820:57:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1433,"src":"343:536:6","usedErrors":[],"usedEvents":[]}],"src":"113:767:6"},"id":6},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[1569],"IERC20Errors":[1474],"IERC721Errors":[1522]},"id":1570,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1434,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1435,"nodeType":"StructuredDocumentation","src":"138:139:7","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":1474,"linearizedBaseContracts":[1474],"name":"IERC20Errors","nameLocation":"288:12:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1436,"nodeType":"StructuredDocumentation","src":"307:309:7","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":1444,"name":"ERC20InsufficientBalance","nameLocation":"627:24:7","nodeType":"ErrorDefinition","parameters":{"id":1443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"sender","nameLocation":"660:6:7","nodeType":"VariableDeclaration","scope":1444,"src":"652:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1437,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1440,"mutability":"mutable","name":"balance","nameLocation":"676:7:7","nodeType":"VariableDeclaration","scope":1444,"src":"668:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1439,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1442,"mutability":"mutable","name":"needed","nameLocation":"693:6:7","nodeType":"VariableDeclaration","scope":1444,"src":"685:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1441,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:7"},"src":"621:80:7"},{"documentation":{"id":1445,"nodeType":"StructuredDocumentation","src":"707:152:7","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":1449,"name":"ERC20InvalidSender","nameLocation":"870:18:7","nodeType":"ErrorDefinition","parameters":{"id":1448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1447,"mutability":"mutable","name":"sender","nameLocation":"897:6:7","nodeType":"VariableDeclaration","scope":1449,"src":"889:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1446,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:7"},"src":"864:41:7"},{"documentation":{"id":1450,"nodeType":"StructuredDocumentation","src":"911:159:7","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":1454,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:7","nodeType":"ErrorDefinition","parameters":{"id":1453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1452,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:7","nodeType":"VariableDeclaration","scope":1454,"src":"1102:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1451,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:7"},"src":"1075:45:7"},{"documentation":{"id":1455,"nodeType":"StructuredDocumentation","src":"1126:345:7","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":1463,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:7","nodeType":"ErrorDefinition","parameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"mutability":"mutable","name":"spender","nameLocation":"1517:7:7","nodeType":"VariableDeclaration","scope":1463,"src":"1509:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1456,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1459,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:7","nodeType":"VariableDeclaration","scope":1463,"src":"1526:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1458,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1461,"mutability":"mutable","name":"needed","nameLocation":"1553:6:7","nodeType":"VariableDeclaration","scope":1463,"src":"1545:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1460,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:7"},"src":"1476:85:7"},{"documentation":{"id":1464,"nodeType":"StructuredDocumentation","src":"1567:174:7","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":1468,"name":"ERC20InvalidApprover","nameLocation":"1752:20:7","nodeType":"ErrorDefinition","parameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"approver","nameLocation":"1781:8:7","nodeType":"VariableDeclaration","scope":1468,"src":"1773:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1465,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:7"},"src":"1746:45:7"},{"documentation":{"id":1469,"nodeType":"StructuredDocumentation","src":"1797:195:7","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":1473,"name":"ERC20InvalidSpender","nameLocation":"2003:19:7","nodeType":"ErrorDefinition","parameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1471,"mutability":"mutable","name":"spender","nameLocation":"2031:7:7","nodeType":"VariableDeclaration","scope":1473,"src":"2023:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1470,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:7"},"src":"1997:43:7"}],"scope":1570,"src":"278:1764:7","usedErrors":[1444,1449,1454,1463,1468,1473],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1475,"nodeType":"StructuredDocumentation","src":"2044:141:7","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":1522,"linearizedBaseContracts":[1522],"name":"IERC721Errors","nameLocation":"2196:13:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1476,"nodeType":"StructuredDocumentation","src":"2216:219:7","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":1480,"name":"ERC721InvalidOwner","nameLocation":"2446:18:7","nodeType":"ErrorDefinition","parameters":{"id":1479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1478,"mutability":"mutable","name":"owner","nameLocation":"2473:5:7","nodeType":"VariableDeclaration","scope":1480,"src":"2465:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1477,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:7"},"src":"2440:40:7"},{"documentation":{"id":1481,"nodeType":"StructuredDocumentation","src":"2486:132:7","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":1485,"name":"ERC721NonexistentToken","nameLocation":"2629:22:7","nodeType":"ErrorDefinition","parameters":{"id":1484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1483,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:7","nodeType":"VariableDeclaration","scope":1485,"src":"2652:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1482,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:7"},"src":"2623:46:7"},{"documentation":{"id":1486,"nodeType":"StructuredDocumentation","src":"2675:289:7","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":1494,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:7","nodeType":"ErrorDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"sender","nameLocation":"3004:6:7","nodeType":"VariableDeclaration","scope":1494,"src":"2996:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1490,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:7","nodeType":"VariableDeclaration","scope":1494,"src":"3012:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"owner","nameLocation":"3037:5:7","nodeType":"VariableDeclaration","scope":1494,"src":"3029:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1491,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:7"},"src":"2969:75:7"},{"documentation":{"id":1495,"nodeType":"StructuredDocumentation","src":"3050:152:7","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":1499,"name":"ERC721InvalidSender","nameLocation":"3213:19:7","nodeType":"ErrorDefinition","parameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"sender","nameLocation":"3241:6:7","nodeType":"VariableDeclaration","scope":1499,"src":"3233:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1496,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:7"},"src":"3207:42:7"},{"documentation":{"id":1500,"nodeType":"StructuredDocumentation","src":"3255:159:7","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":1504,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:7","nodeType":"ErrorDefinition","parameters":{"id":1503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1502,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:7","nodeType":"VariableDeclaration","scope":1504,"src":"3447:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1501,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:7"},"src":"3419:46:7"},{"documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"3471:247:7","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":1511,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:7","nodeType":"ErrorDefinition","parameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"operator","nameLocation":"3764:8:7","nodeType":"VariableDeclaration","scope":1511,"src":"3756:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:7","nodeType":"VariableDeclaration","scope":1511,"src":"3774:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:7"},"src":"3723:68:7"},{"documentation":{"id":1512,"nodeType":"StructuredDocumentation","src":"3797:174:7","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":1516,"name":"ERC721InvalidApprover","nameLocation":"3982:21:7","nodeType":"ErrorDefinition","parameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"approver","nameLocation":"4012:8:7","nodeType":"VariableDeclaration","scope":1516,"src":"4004:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1513,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:7"},"src":"3976:46:7"},{"documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"4028:197:7","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":1521,"name":"ERC721InvalidOperator","nameLocation":"4236:21:7","nodeType":"ErrorDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"operator","nameLocation":"4266:8:7","nodeType":"VariableDeclaration","scope":1521,"src":"4258:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1518,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:7"},"src":"4230:46:7"}],"scope":1570,"src":"2186:2092:7","usedErrors":[1480,1485,1494,1499,1504,1511,1516,1521],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"4280:143:7","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":1569,"linearizedBaseContracts":[1569],"name":"IERC1155Errors","nameLocation":"4434:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1524,"nodeType":"StructuredDocumentation","src":"4455:361:7","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":1534,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:7","nodeType":"ErrorDefinition","parameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1526,"mutability":"mutable","name":"sender","nameLocation":"4862:6:7","nodeType":"VariableDeclaration","scope":1534,"src":"4854:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1525,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1528,"mutability":"mutable","name":"balance","nameLocation":"4878:7:7","nodeType":"VariableDeclaration","scope":1534,"src":"4870:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1527,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1530,"mutability":"mutable","name":"needed","nameLocation":"4895:6:7","nodeType":"VariableDeclaration","scope":1534,"src":"4887:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1529,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1532,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:7","nodeType":"VariableDeclaration","scope":1534,"src":"4903:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1531,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:7"},"src":"4821:99:7"},{"documentation":{"id":1535,"nodeType":"StructuredDocumentation","src":"4926:152:7","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":1539,"name":"ERC1155InvalidSender","nameLocation":"5089:20:7","nodeType":"ErrorDefinition","parameters":{"id":1538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1537,"mutability":"mutable","name":"sender","nameLocation":"5118:6:7","nodeType":"VariableDeclaration","scope":1539,"src":"5110:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1536,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:7"},"src":"5083:43:7"},{"documentation":{"id":1540,"nodeType":"StructuredDocumentation","src":"5132:159:7","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":1544,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:7","nodeType":"ErrorDefinition","parameters":{"id":1543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1542,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:7","nodeType":"VariableDeclaration","scope":1544,"src":"5325:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1541,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:7"},"src":"5296:47:7"},{"documentation":{"id":1545,"nodeType":"StructuredDocumentation","src":"5349:256:7","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":1551,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:7","nodeType":"ErrorDefinition","parameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"operator","nameLocation":"5653:8:7","nodeType":"VariableDeclaration","scope":1551,"src":"5645:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1549,"mutability":"mutable","name":"owner","nameLocation":"5671:5:7","nodeType":"VariableDeclaration","scope":1551,"src":"5663:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1548,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:7"},"src":"5610:68:7"},{"documentation":{"id":1552,"nodeType":"StructuredDocumentation","src":"5684:174:7","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":1556,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:7","nodeType":"ErrorDefinition","parameters":{"id":1555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1554,"mutability":"mutable","name":"approver","nameLocation":"5900:8:7","nodeType":"VariableDeclaration","scope":1556,"src":"5892:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1553,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:7"},"src":"5863:47:7"},{"documentation":{"id":1557,"nodeType":"StructuredDocumentation","src":"5916:197:7","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":1561,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:7","nodeType":"ErrorDefinition","parameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"operator","nameLocation":"6155:8:7","nodeType":"VariableDeclaration","scope":1561,"src":"6147:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1558,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:7"},"src":"6118:47:7"},{"documentation":{"id":1562,"nodeType":"StructuredDocumentation","src":"6171:280:7","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":1568,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:7","nodeType":"ErrorDefinition","parameters":{"id":1567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1564,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:7","nodeType":"VariableDeclaration","scope":1568,"src":"6488:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1563,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1566,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:7","nodeType":"VariableDeclaration","scope":1568,"src":"6507:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1565,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:7"},"src":"6456:73:7"}],"scope":1570,"src":"4424:2107:7","usedErrors":[1534,1539,1544,1551,1556,1561,1568],"usedEvents":[]}],"src":"112:6420:7"},"id":7},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[2239],"ERC1967Utils":[1872],"IBeacon":[1882],"StorageSlot":[2349]},"id":1873,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1571,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:8"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":1573,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1873,"sourceUnit":1883,"src":"140:46:8","symbolAliases":[{"foreign":{"id":1572,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"148:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1575,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1873,"sourceUnit":2240,"src":"187:48:8","symbolAliases":[{"foreign":{"id":1574,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"195:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":1577,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1873,"sourceUnit":2350,"src":"236:56:8","symbolAliases":[{"foreign":{"id":1576,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"244:11:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1578,"nodeType":"StructuredDocumentation","src":"294:154:8","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."},"fullyImplemented":true,"id":1872,"linearizedBaseContracts":[1872],"name":"ERC1967Utils","nameLocation":"457:12:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1579,"nodeType":"StructuredDocumentation","src":"660:68:8","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":1583,"name":"Upgraded","nameLocation":"739:8:8","nodeType":"EventDefinition","parameters":{"id":1582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"764:14:8","nodeType":"VariableDeclaration","scope":1583,"src":"748:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1580,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"747:32:8"},"src":"733:47:8"},{"anonymous":false,"documentation":{"id":1584,"nodeType":"StructuredDocumentation","src":"786:67:8","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":1590,"name":"AdminChanged","nameLocation":"864:12:8","nodeType":"EventDefinition","parameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"885:13:8","nodeType":"VariableDeclaration","scope":1590,"src":"877:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1585,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1588,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"908:8:8","nodeType":"VariableDeclaration","scope":1590,"src":"900:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1587,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"876:41:8"},"src":"858:60:8"},{"anonymous":false,"documentation":{"id":1591,"nodeType":"StructuredDocumentation","src":"924:59:8","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":1595,"name":"BeaconUpgraded","nameLocation":"994:14:8","nodeType":"EventDefinition","parameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"1025:6:8","nodeType":"VariableDeclaration","scope":1595,"src":"1009:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1592,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1008:24:8"},"src":"988:45:8"},{"constant":true,"documentation":{"id":1596,"nodeType":"StructuredDocumentation","src":"1039:170:8","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":1599,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"1305:19:8","nodeType":"VariableDeclaration","scope":1872,"src":"1279:114:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1327:66:8","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":1600,"nodeType":"StructuredDocumentation","src":"1400:69:8","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":1604,"name":"ERC1967InvalidImplementation","nameLocation":"1480:28:8","nodeType":"ErrorDefinition","parameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1602,"mutability":"mutable","name":"implementation","nameLocation":"1517:14:8","nodeType":"VariableDeclaration","scope":1604,"src":"1509:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1601,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1508:24:8"},"src":"1474:59:8"},{"documentation":{"id":1605,"nodeType":"StructuredDocumentation","src":"1539:60:8","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":1609,"name":"ERC1967InvalidAdmin","nameLocation":"1610:19:8","nodeType":"ErrorDefinition","parameters":{"id":1608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1607,"mutability":"mutable","name":"admin","nameLocation":"1638:5:8","nodeType":"VariableDeclaration","scope":1609,"src":"1630:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1629:15:8"},"src":"1604:41:8"},{"documentation":{"id":1610,"nodeType":"StructuredDocumentation","src":"1651:61:8","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":1614,"name":"ERC1967InvalidBeacon","nameLocation":"1723:20:8","nodeType":"ErrorDefinition","parameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"beacon","nameLocation":"1752:6:8","nodeType":"VariableDeclaration","scope":1614,"src":"1744:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1611,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1743:16:8"},"src":"1717:43:8"},{"documentation":{"id":1615,"nodeType":"StructuredDocumentation","src":"1766:82:8","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":1617,"name":"ERC1967NonPayable","nameLocation":"1859:17:8","nodeType":"ErrorDefinition","parameters":{"id":1616,"nodeType":"ParameterList","parameters":[],"src":"1876:2:8"},"src":"1853:26:8"},{"body":{"id":1629,"nodeType":"Block","src":"2018:77:8","statements":[{"expression":{"expression":{"arguments":[{"id":1625,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"2062:19:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1623,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"2035:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2349_$","typeString":"type(library StorageSlot)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2047:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2271,"src":"2035:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2245_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2245_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2244,"src":"2035:53:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1622,"id":1628,"nodeType":"Return","src":"2028:60:8"}]},"documentation":{"id":1618,"nodeType":"StructuredDocumentation","src":"1885:67:8","text":" @dev Returns the current implementation address."},"id":1630,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1966:17:8","nodeType":"FunctionDefinition","parameters":{"id":1619,"nodeType":"ParameterList","parameters":[],"src":"1983:2:8"},"returnParameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1630,"src":"2009:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1620,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2008:9:8"},"scope":1872,"src":"1957:138:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1656,"nodeType":"Block","src":"2249:218:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1636,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"2263:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2281:4:8","memberName":"code","nodeType":"MemberAccess","src":"2263:22:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2286:6:8","memberName":"length","nodeType":"MemberAccess","src":"2263:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2263:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1646,"nodeType":"IfStatement","src":"2259:119:8","trueBody":{"id":1645,"nodeType":"Block","src":"2299:79:8","statements":[{"errorCall":{"arguments":[{"id":1642,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"2349:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1641,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"2320:28:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1644,"nodeType":"RevertStatement","src":"2313:54:8"}]}},{"expression":{"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1650,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"2414:19:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1647,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"2387:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2349_$","typeString":"type(library StorageSlot)"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2399:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2271,"src":"2387:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2245_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2387:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2245_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1652,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2435:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2244,"src":"2387:53:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1653,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"2443:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2387:73:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1655,"nodeType":"ExpressionStatement","src":"2387:73:8"}]},"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"2101:80:8","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":1657,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"2195:18:8","nodeType":"FunctionDefinition","parameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"newImplementation","nameLocation":"2222:17:8","nodeType":"VariableDeclaration","scope":1657,"src":"2214:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1632,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2213:27:8"},"returnParameters":{"id":1635,"nodeType":"ParameterList","parameters":[],"src":"2249:0:8"},"scope":1872,"src":"2186:281:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1690,"nodeType":"Block","src":"2860:254:8","statements":[{"expression":{"arguments":[{"id":1666,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2889:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1665,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"2870:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2870:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1668,"nodeType":"ExpressionStatement","src":"2870:37:8"},{"eventCall":{"arguments":[{"id":1670,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2931:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1669,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"2922:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1672,"nodeType":"EmitStatement","src":"2917:32:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1673,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"2964:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:6:8","memberName":"length","nodeType":"MemberAccess","src":"2964:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2964:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1688,"nodeType":"Block","src":"3065:43:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1685,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"3079:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1687,"nodeType":"ExpressionStatement","src":"3079:18:8"}]},"id":1689,"nodeType":"IfStatement","src":"2960:148:8","trueBody":{"id":1684,"nodeType":"Block","src":"2981:78:8","statements":[{"expression":{"arguments":[{"id":1680,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"3024:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1681,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"3043:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1677,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"2995:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2239_$","typeString":"type(library Address)"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:20:8","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2158,"src":"2995:28:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1683,"nodeType":"ExpressionStatement","src":"2995:53:8"}]}}]},"documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"2473:301:8","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":1691,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2788:16:8","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"newImplementation","nameLocation":"2813:17:8","nodeType":"VariableDeclaration","scope":1691,"src":"2805:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1659,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1662,"mutability":"mutable","name":"data","nameLocation":"2845:4:8","nodeType":"VariableDeclaration","scope":1691,"src":"2832:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1661,"name":"bytes","nodeType":"ElementaryTypeName","src":"2832:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2804:46:8"},"returnParameters":{"id":1664,"nodeType":"ParameterList","parameters":[],"src":"2860:0:8"},"scope":1872,"src":"2779:335:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1692,"nodeType":"StructuredDocumentation","src":"3120:145:8","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":1695,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"3361:10:8","nodeType":"VariableDeclaration","scope":1872,"src":"3335:105:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3335:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3374:66:8","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":1707,"nodeType":"Block","src":"3844:68:8","statements":[{"expression":{"expression":{"arguments":[{"id":1703,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"3888:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1701,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"3861:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2349_$","typeString":"type(library StorageSlot)"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3873:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2271,"src":"3861:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2245_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2245_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1705,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3900:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2244,"src":"3861:44:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1700,"id":1706,"nodeType":"Return","src":"3854:51:8"}]},"documentation":{"id":1696,"nodeType":"StructuredDocumentation","src":"3447:340:8","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":1708,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3801:8:8","nodeType":"FunctionDefinition","parameters":{"id":1697,"nodeType":"ParameterList","parameters":[],"src":"3809:2:8"},"returnParameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1708,"src":"3835:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3834:9:8"},"scope":1872,"src":"3792:120:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1738,"nodeType":"Block","src":"4039:172:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1714,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"4053:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4065:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"4065:7:8","typeDescriptions":{}}},"id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4053:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1728,"nodeType":"IfStatement","src":"4049:91:8","trueBody":{"id":1727,"nodeType":"Block","src":"4077:63:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4126:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4118:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1721,"name":"address","nodeType":"ElementaryTypeName","src":"4118:7:8","typeDescriptions":{}}},"id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1720,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"4098:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1726,"nodeType":"RevertStatement","src":"4091:38:8"}]}},{"expression":{"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1732,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"4176:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1729,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"4149:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2349_$","typeString":"type(library StorageSlot)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4161:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2271,"src":"4149:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2245_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4149:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2245_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1734,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4188:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2244,"src":"4149:44:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1735,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"4196:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4149:55:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1737,"nodeType":"ExpressionStatement","src":"4149:55:8"}]},"documentation":{"id":1709,"nodeType":"StructuredDocumentation","src":"3918:71:8","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":1739,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4003:9:8","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1711,"mutability":"mutable","name":"newAdmin","nameLocation":"4021:8:8","nodeType":"VariableDeclaration","scope":1739,"src":"4013:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1710,"name":"address","nodeType":"ElementaryTypeName","src":"4013:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4012:18:8"},"returnParameters":{"id":1713,"nodeType":"ParameterList","parameters":[],"src":"4039:0:8"},"scope":1872,"src":"3994:217:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1755,"nodeType":"Block","src":"4379:85:8","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1746,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"4407:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1748,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"4419:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1745,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"4394:12:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4394:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1750,"nodeType":"EmitStatement","src":"4389:39:8"},{"expression":{"arguments":[{"id":1752,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"4448:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1751,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"4438:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1754,"nodeType":"ExpressionStatement","src":"4438:19:8"}]},"documentation":{"id":1740,"nodeType":"StructuredDocumentation","src":"4217:109:8","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":1756,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"4340:11:8","nodeType":"FunctionDefinition","parameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"newAdmin","nameLocation":"4360:8:8","nodeType":"VariableDeclaration","scope":1756,"src":"4352:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1741,"name":"address","nodeType":"ElementaryTypeName","src":"4352:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4351:18:8"},"returnParameters":{"id":1744,"nodeType":"ParameterList","parameters":[],"src":"4379:0:8"},"scope":1872,"src":"4331:133:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1757,"nodeType":"StructuredDocumentation","src":"4470:201:8","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":1760,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4767:11:8","nodeType":"VariableDeclaration","scope":1872,"src":"4741:106:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4741:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4781:66:8","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":1772,"nodeType":"Block","src":"4963:69:8","statements":[{"expression":{"expression":{"arguments":[{"id":1768,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"5007:11:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1766,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"4980:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2349_$","typeString":"type(library StorageSlot)"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4992:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2271,"src":"4980:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2245_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4980:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2245_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1770,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2244,"src":"4980:45:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1765,"id":1771,"nodeType":"Return","src":"4973:52:8"}]},"documentation":{"id":1761,"nodeType":"StructuredDocumentation","src":"4854:51:8","text":" @dev Returns the current beacon."},"id":1773,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4919:9:8","nodeType":"FunctionDefinition","parameters":{"id":1762,"nodeType":"ParameterList","parameters":[],"src":"4928:2:8"},"returnParameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1773,"src":"4954:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1763,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4953:9:8"},"scope":1872,"src":"4910:122:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1818,"nodeType":"Block","src":"5161:390:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1779,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"5175:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5185:4:8","memberName":"code","nodeType":"MemberAccess","src":"5175:14:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5190:6:8","memberName":"length","nodeType":"MemberAccess","src":"5175:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5200:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5175:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1789,"nodeType":"IfStatement","src":"5171:95:8","trueBody":{"id":1788,"nodeType":"Block","src":"5203:63:8","statements":[{"errorCall":{"arguments":[{"id":1785,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"5245:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1784,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"5224:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5224:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1787,"nodeType":"RevertStatement","src":"5217:38:8"}]}},{"expression":{"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1793,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"5303:11:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1790,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"5276:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2349_$","typeString":"type(library StorageSlot)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5288:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2271,"src":"5276:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2245_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2245_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5316:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2244,"src":"5276:45:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1796,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"5324:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5276:57:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1798,"nodeType":"ExpressionStatement","src":"5276:57:8"},{"assignments":[1800],"declarations":[{"constant":false,"id":1800,"mutability":"mutable","name":"beaconImplementation","nameLocation":"5352:20:8","nodeType":"VariableDeclaration","scope":1818,"src":"5344:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1799,"name":"address","nodeType":"ElementaryTypeName","src":"5344:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1806,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1802,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"5383:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1801,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"5375:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1882_$","typeString":"type(contract IBeacon)"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1882","typeString":"contract IBeacon"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5394:14:8","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1881,"src":"5375:33:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5344:66:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1807,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"5424:20:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5445:4:8","memberName":"code","nodeType":"MemberAccess","src":"5424:25:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5450:6:8","memberName":"length","nodeType":"MemberAccess","src":"5424:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5460:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5424:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1817,"nodeType":"IfStatement","src":"5420:125:8","trueBody":{"id":1816,"nodeType":"Block","src":"5463:82:8","statements":[{"errorCall":{"arguments":[{"id":1813,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"5513:20:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1812,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"5484:28:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1815,"nodeType":"RevertStatement","src":"5477:57:8"}]}}]},"documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"5038:71:8","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":1819,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5123:10:8","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"newBeacon","nameLocation":"5142:9:8","nodeType":"VariableDeclaration","scope":1819,"src":"5134:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1775,"name":"address","nodeType":"ElementaryTypeName","src":"5134:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5133:19:8"},"returnParameters":{"id":1778,"nodeType":"ParameterList","parameters":[],"src":"5161:0:8"},"scope":1872,"src":"5114:437:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1856,"nodeType":"Block","src":"6155:254:8","statements":[{"expression":{"arguments":[{"id":1828,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"6176:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1827,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"6165:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6165:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1830,"nodeType":"ExpressionStatement","src":"6165:21:8"},{"eventCall":{"arguments":[{"id":1832,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"6216:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1831,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"6201:14:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6201:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1834,"nodeType":"EmitStatement","src":"6196:30:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1835,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"6241:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6246:6:8","memberName":"length","nodeType":"MemberAccess","src":"6241:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6255:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6241:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1854,"nodeType":"Block","src":"6360:43:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1851,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"6374:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1853,"nodeType":"ExpressionStatement","src":"6374:18:8"}]},"id":1855,"nodeType":"IfStatement","src":"6237:166:8","trueBody":{"id":1850,"nodeType":"Block","src":"6258:96:8","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1843,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"6309:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1842,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"6301:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1882_$","typeString":"type(contract IBeacon)"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1882","typeString":"contract IBeacon"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6320:14:8","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1881,"src":"6301:33:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1847,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"6338:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1839,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"6272:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2239_$","typeString":"type(library Address)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6280:20:8","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2158,"src":"6272:28:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6272:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1849,"nodeType":"ExpressionStatement","src":"6272:71:8"}]}}]},"documentation":{"id":1820,"nodeType":"StructuredDocumentation","src":"5557:514:8","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":1857,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"6085:22:8","nodeType":"FunctionDefinition","parameters":{"id":1825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"newBeacon","nameLocation":"6116:9:8","nodeType":"VariableDeclaration","scope":1857,"src":"6108:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1821,"name":"address","nodeType":"ElementaryTypeName","src":"6108:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1824,"mutability":"mutable","name":"data","nameLocation":"6140:4:8","nodeType":"VariableDeclaration","scope":1857,"src":"6127:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1823,"name":"bytes","nodeType":"ElementaryTypeName","src":"6127:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:38:8"},"returnParameters":{"id":1826,"nodeType":"ParameterList","parameters":[],"src":"6155:0:8"},"scope":1872,"src":"6076:333:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1870,"nodeType":"Block","src":"6634:86:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1861,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6648:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6652:5:8","memberName":"value","nodeType":"MemberAccess","src":"6648:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6648:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1869,"nodeType":"IfStatement","src":"6644:70:8","trueBody":{"id":1868,"nodeType":"Block","src":"6663:51:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1865,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"6684:17:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1867,"nodeType":"RevertStatement","src":"6677:26:8"}]}}]},"documentation":{"id":1858,"nodeType":"StructuredDocumentation","src":"6415:178:8","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":1871,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6607:16:8","nodeType":"FunctionDefinition","parameters":{"id":1859,"nodeType":"ParameterList","parameters":[],"src":"6623:2:8"},"returnParameters":{"id":1860,"nodeType":"ParameterList","parameters":[],"src":"6634:0:8"},"scope":1872,"src":"6598:122:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1873,"src":"449:6273:8","usedErrors":[1604,1609,1614,1617],"usedEvents":[1583,1590,1595]}],"src":"114:6609:8"},"id":8},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[1882]},"id":1883,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1874,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":1875,"nodeType":"StructuredDocumentation","src":"134:79:9","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":1882,"linearizedBaseContracts":[1882],"name":"IBeacon","nameLocation":"224:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"238:168:9","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":1881,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:9","nodeType":"FunctionDefinition","parameters":{"id":1877,"nodeType":"ParameterList","parameters":[],"src":"434:2:9"},"returnParameters":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1881,"src":"460:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1878,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:9"},"scope":1882,"src":"411:58:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1883,"src":"214:257:9","usedErrors":[],"usedEvents":[]}],"src":"108:364:9"},"id":9},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1960]},"id":1961,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1884,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1885,"nodeType":"StructuredDocumentation","src":"132:70:10","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1960,"linearizedBaseContracts":[1960],"name":"IERC20","nameLocation":"213:6:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1886,"nodeType":"StructuredDocumentation","src":"226:158:10","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1894,"name":"Transfer","nameLocation":"395:8:10","nodeType":"EventDefinition","parameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:10","nodeType":"VariableDeclaration","scope":1894,"src":"404:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1887,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1890,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:10","nodeType":"VariableDeclaration","scope":1894,"src":"426:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1889,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1892,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:10","nodeType":"VariableDeclaration","scope":1894,"src":"446:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1891,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:10"},"src":"389:72:10"},{"anonymous":false,"documentation":{"id":1895,"nodeType":"StructuredDocumentation","src":"467:148:10","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1903,"name":"Approval","nameLocation":"626:8:10","nodeType":"EventDefinition","parameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1897,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:10","nodeType":"VariableDeclaration","scope":1903,"src":"635:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1896,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1899,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:10","nodeType":"VariableDeclaration","scope":1903,"src":"658:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1898,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1901,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:10","nodeType":"VariableDeclaration","scope":1903,"src":"683:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1900,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:10"},"src":"620:78:10"},{"documentation":{"id":1904,"nodeType":"StructuredDocumentation","src":"704:65:10","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1909,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:10","nodeType":"FunctionDefinition","parameters":{"id":1905,"nodeType":"ParameterList","parameters":[],"src":"794:2:10"},"returnParameters":{"id":1908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1909,"src":"820:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1906,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:10"},"scope":1960,"src":"774:55:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1910,"nodeType":"StructuredDocumentation","src":"835:71:10","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1917,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:10","nodeType":"FunctionDefinition","parameters":{"id":1913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"account","nameLocation":"938:7:10","nodeType":"VariableDeclaration","scope":1917,"src":"930:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1911,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:10"},"returnParameters":{"id":1916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1917,"src":"970:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:10"},"scope":1960,"src":"911:68:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1918,"nodeType":"StructuredDocumentation","src":"985:213:10","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1927,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:10","nodeType":"FunctionDefinition","parameters":{"id":1923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"mutability":"mutable","name":"to","nameLocation":"1229:2:10","nodeType":"VariableDeclaration","scope":1927,"src":"1221:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1919,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1922,"mutability":"mutable","name":"value","nameLocation":"1241:5:10","nodeType":"VariableDeclaration","scope":1927,"src":"1233:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1921,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:10"},"returnParameters":{"id":1926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1927,"src":"1266:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1924,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:10"},"scope":1960,"src":"1203:69:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1928,"nodeType":"StructuredDocumentation","src":"1278:264:10","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1937,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:10","nodeType":"FunctionDefinition","parameters":{"id":1933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"owner","nameLocation":"1574:5:10","nodeType":"VariableDeclaration","scope":1937,"src":"1566:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1929,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1932,"mutability":"mutable","name":"spender","nameLocation":"1589:7:10","nodeType":"VariableDeclaration","scope":1937,"src":"1581:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1931,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:10"},"returnParameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1937,"src":"1621:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1934,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:10"},"scope":1960,"src":"1547:83:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1938,"nodeType":"StructuredDocumentation","src":"1636:667:10","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1947,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:10","nodeType":"FunctionDefinition","parameters":{"id":1943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1940,"mutability":"mutable","name":"spender","nameLocation":"2333:7:10","nodeType":"VariableDeclaration","scope":1947,"src":"2325:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1939,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1942,"mutability":"mutable","name":"value","nameLocation":"2350:5:10","nodeType":"VariableDeclaration","scope":1947,"src":"2342:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1941,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:10"},"returnParameters":{"id":1946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1947,"src":"2375:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1944,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:10"},"scope":1960,"src":"2308:73:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1948,"nodeType":"StructuredDocumentation","src":"2387:297:10","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1959,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:10","nodeType":"FunctionDefinition","parameters":{"id":1955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1950,"mutability":"mutable","name":"from","nameLocation":"2719:4:10","nodeType":"VariableDeclaration","scope":1959,"src":"2711:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1949,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1952,"mutability":"mutable","name":"to","nameLocation":"2733:2:10","nodeType":"VariableDeclaration","scope":1959,"src":"2725:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1951,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1954,"mutability":"mutable","name":"value","nameLocation":"2745:5:10","nodeType":"VariableDeclaration","scope":1959,"src":"2737:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1953,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:10"},"returnParameters":{"id":1958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1959,"src":"2770:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1956,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:10"},"scope":1960,"src":"2689:87:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1961,"src":"203:2575:10","usedErrors":[],"usedEvents":[1894,1903]}],"src":"106:2673:10"},"id":10},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1960],"IERC20Metadata":[1986]},"id":1987,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1962,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1964,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1987,"sourceUnit":1961,"src":"151:37:11","symbolAliases":[{"foreign":{"id":1963,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"159:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1966,"name":"IERC20","nameLocations":["305:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":1960,"src":"305:6:11"},"id":1967,"nodeType":"InheritanceSpecifier","src":"305:6:11"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1965,"nodeType":"StructuredDocumentation","src":"190:86:11","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":1986,"linearizedBaseContracts":[1986,1960],"name":"IERC20Metadata","nameLocation":"287:14:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1968,"nodeType":"StructuredDocumentation","src":"318:54:11","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1973,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:11","nodeType":"FunctionDefinition","parameters":{"id":1969,"nodeType":"ParameterList","parameters":[],"src":"390:2:11"},"returnParameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1973,"src":"416:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1970,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:11"},"scope":1986,"src":"377:54:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1974,"nodeType":"StructuredDocumentation","src":"437:56:11","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1979,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:11","nodeType":"FunctionDefinition","parameters":{"id":1975,"nodeType":"ParameterList","parameters":[],"src":"513:2:11"},"returnParameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1979,"src":"539:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1976,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:11"},"scope":1986,"src":"498:56:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1980,"nodeType":"StructuredDocumentation","src":"560:65:11","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1985,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:11","nodeType":"FunctionDefinition","parameters":{"id":1981,"nodeType":"ParameterList","parameters":[],"src":"647:2:11"},"returnParameters":{"id":1984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1985,"src":"673:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1982,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:11"},"scope":1986,"src":"630:50:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1987,"src":"277:405:11","usedErrors":[],"usedEvents":[1894,1903]}],"src":"125:558:11"},"id":11},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2239]},"id":2240,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1988,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1989,"nodeType":"StructuredDocumentation","src":"127:67:12","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2239,"linearizedBaseContracts":[2239],"name":"Address","nameLocation":"203:7:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1990,"nodeType":"StructuredDocumentation","src":"217:94:12","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":1994,"name":"AddressInsufficientBalance","nameLocation":"322:26:12","nodeType":"ErrorDefinition","parameters":{"id":1993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1992,"mutability":"mutable","name":"account","nameLocation":"357:7:12","nodeType":"VariableDeclaration","scope":1994,"src":"349:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1991,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:12"},"src":"316:50:12"},{"documentation":{"id":1995,"nodeType":"StructuredDocumentation","src":"372:75:12","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":1999,"name":"AddressEmptyCode","nameLocation":"458:16:12","nodeType":"ErrorDefinition","parameters":{"id":1998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1997,"mutability":"mutable","name":"target","nameLocation":"483:6:12","nodeType":"VariableDeclaration","scope":1999,"src":"475:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1996,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:12"},"src":"452:39:12"},{"documentation":{"id":2000,"nodeType":"StructuredDocumentation","src":"497:89:12","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":2002,"name":"FailedInnerCall","nameLocation":"597:15:12","nodeType":"ErrorDefinition","parameters":{"id":2001,"nodeType":"ParameterList","parameters":[],"src":"612:2:12"},"src":"591:24:12"},{"body":{"id":2042,"nodeType":"Block","src":"1602:260:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2012,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2239","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2239","typeString":"library Address"}],"id":2011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2010,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:12","typeDescriptions":{}}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:12","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2015,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"1640:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2025,"nodeType":"IfStatement","src":"1612:109:12","trueBody":{"id":2024,"nodeType":"Block","src":"1648:73:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2020,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2239","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2239","typeString":"library Address"}],"id":2019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2018,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:12","typeDescriptions":{}}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2017,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"1669:26:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2023,"nodeType":"RevertStatement","src":"1662:48:12"}]}},{"assignments":[2027,null],"declarations":[{"constant":false,"id":2027,"mutability":"mutable","name":"success","nameLocation":"1737:7:12","nodeType":"VariableDeclaration","scope":2042,"src":"1732:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2026,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2034,"initialValue":{"arguments":[{"hexValue":"","id":2032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2028,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"1750:9:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:12","memberName":"call","nodeType":"MemberAccess","src":"1750:14:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2030,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"1772:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:12"},{"condition":{"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:12","subExpression":{"id":2035,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"1798:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2041,"nodeType":"IfStatement","src":"1793:63:12","trueBody":{"id":2040,"nodeType":"Block","src":"1807:49:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2037,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"1828:15:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2039,"nodeType":"RevertStatement","src":"1821:24:12"}]}}]},"documentation":{"id":2003,"nodeType":"StructuredDocumentation","src":"621:905:12","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2043,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:12","nodeType":"FunctionDefinition","parameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2005,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:12","nodeType":"VariableDeclaration","scope":2043,"src":"1550:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2004,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2007,"mutability":"mutable","name":"amount","nameLocation":"1585:6:12","nodeType":"VariableDeclaration","scope":2043,"src":"1577:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:12"},"returnParameters":{"id":2009,"nodeType":"ParameterList","parameters":[],"src":"1602:0:12"},"scope":2239,"src":"1531:331:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2059,"nodeType":"Block","src":"2794:62:12","statements":[{"expression":{"arguments":[{"id":2054,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"2833:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2055,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"2841:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2053,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"2811:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2052,"id":2058,"nodeType":"Return","src":"2804:45:12"}]},"documentation":{"id":2044,"nodeType":"StructuredDocumentation","src":"1868:832:12","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":2060,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:12","nodeType":"FunctionDefinition","parameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"target","nameLocation":"2735:6:12","nodeType":"VariableDeclaration","scope":2060,"src":"2727:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2045,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2048,"mutability":"mutable","name":"data","nameLocation":"2756:4:12","nodeType":"VariableDeclaration","scope":2060,"src":"2743:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2047,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:12"},"returnParameters":{"id":2052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2060,"src":"2780:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2050,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:12"},"scope":2239,"src":"2705:151:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2105,"nodeType":"Block","src":"3293:279:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2074,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2239","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2239","typeString":"library Address"}],"id":2073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2072,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:12","typeDescriptions":{}}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:12","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"3331:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2087,"nodeType":"IfStatement","src":"3303:108:12","trueBody":{"id":2086,"nodeType":"Block","src":"3338:73:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2082,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2239","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2239","typeString":"library Address"}],"id":2081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2080,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:12","typeDescriptions":{}}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2079,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"3359:26:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2085,"nodeType":"RevertStatement","src":"3352:48:12"}]}},{"assignments":[2089,2091],"declarations":[{"constant":false,"id":2089,"mutability":"mutable","name":"success","nameLocation":"3426:7:12","nodeType":"VariableDeclaration","scope":2105,"src":"3421:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2088,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2091,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:12","nodeType":"VariableDeclaration","scope":2105,"src":"3435:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2090,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2098,"initialValue":{"arguments":[{"id":2096,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"3488:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2092,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"3462:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:12","memberName":"call","nodeType":"MemberAccess","src":"3462:11:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"3481:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:12"},{"expression":{"arguments":[{"id":2100,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"3537:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2101,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"3545:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2102,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"3554:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2099,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"3510:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2071,"id":2104,"nodeType":"Return","src":"3503:62:12"}]},"documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"2862:313:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":2106,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:12","nodeType":"FunctionDefinition","parameters":{"id":2068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"target","nameLocation":"3219:6:12","nodeType":"VariableDeclaration","scope":2106,"src":"3211:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2062,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2065,"mutability":"mutable","name":"data","nameLocation":"3240:4:12","nodeType":"VariableDeclaration","scope":2106,"src":"3227:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2064,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2067,"mutability":"mutable","name":"value","nameLocation":"3254:5:12","nodeType":"VariableDeclaration","scope":2106,"src":"3246:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2066,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:12"},"returnParameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2106,"src":"3279:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2069,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:12"},"scope":2239,"src":"3180:392:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2131,"nodeType":"Block","src":"3811:154:12","statements":[{"assignments":[2117,2119],"declarations":[{"constant":false,"id":2117,"mutability":"mutable","name":"success","nameLocation":"3827:7:12","nodeType":"VariableDeclaration","scope":2131,"src":"3822:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2116,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2119,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:12","nodeType":"VariableDeclaration","scope":2131,"src":"3836:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2118,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2124,"initialValue":{"arguments":[{"id":2122,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"3881:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2120,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"3863:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:12","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:12","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:12"},{"expression":{"arguments":[{"id":2126,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"3930:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2127,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"3938:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2128,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"3947:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2125,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"3903:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2115,"id":2130,"nodeType":"Return","src":"3896:62:12"}]},"documentation":{"id":2107,"nodeType":"StructuredDocumentation","src":"3578:128:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":2132,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:12","nodeType":"FunctionDefinition","parameters":{"id":2112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"target","nameLocation":"3747:6:12","nodeType":"VariableDeclaration","scope":2132,"src":"3739:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2108,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2111,"mutability":"mutable","name":"data","nameLocation":"3768:4:12","nodeType":"VariableDeclaration","scope":2132,"src":"3755:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2110,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:12"},"returnParameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2132,"src":"3797:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2113,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:12"},"scope":2239,"src":"3711:254:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2157,"nodeType":"Block","src":"4203:156:12","statements":[{"assignments":[2143,2145],"declarations":[{"constant":false,"id":2143,"mutability":"mutable","name":"success","nameLocation":"4219:7:12","nodeType":"VariableDeclaration","scope":2157,"src":"4214:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2142,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2145,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:12","nodeType":"VariableDeclaration","scope":2157,"src":"4228:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2144,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2150,"initialValue":{"arguments":[{"id":2148,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"4275:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2146,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"4255:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:12","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:12","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:12"},{"expression":{"arguments":[{"id":2152,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"4324:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2153,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"4332:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2154,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"4341:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2151,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"4297:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2141,"id":2156,"nodeType":"Return","src":"4290:62:12"}]},"documentation":{"id":2133,"nodeType":"StructuredDocumentation","src":"3971:130:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":2158,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:12","nodeType":"FunctionDefinition","parameters":{"id":2138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"target","nameLocation":"4144:6:12","nodeType":"VariableDeclaration","scope":2158,"src":"4136:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2134,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2137,"mutability":"mutable","name":"data","nameLocation":"4165:4:12","nodeType":"VariableDeclaration","scope":2158,"src":"4152:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2136,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:12"},"returnParameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2158,"src":"4189:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2139,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:12"},"scope":2239,"src":"4106:253:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2197,"nodeType":"Block","src":"4783:424:12","statements":[{"condition":{"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:12","subExpression":{"id":2170,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"4798:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2195,"nodeType":"Block","src":"4857:344:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2177,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"5045:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:12","memberName":"length","nodeType":"MemberAccess","src":"5045:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2181,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"5071:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:12","memberName":"code","nodeType":"MemberAccess","src":"5071:11:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:12","memberName":"length","nodeType":"MemberAccess","src":"5071:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2192,"nodeType":"IfStatement","src":"5041:119:12","trueBody":{"id":2191,"nodeType":"Block","src":"5096:64:12","statements":[{"errorCall":{"arguments":[{"id":2188,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"5138:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2187,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"5121:16:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2190,"nodeType":"RevertStatement","src":"5114:31:12"}]}},{"expression":{"id":2193,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"5180:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2169,"id":2194,"nodeType":"Return","src":"5173:17:12"}]},"id":2196,"nodeType":"IfStatement","src":"4793:408:12","trueBody":{"id":2176,"nodeType":"Block","src":"4807:44:12","statements":[{"expression":{"arguments":[{"id":2173,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"4829:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2172,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"4821:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2175,"nodeType":"ExpressionStatement","src":"4821:19:12"}]}}]},"documentation":{"id":2159,"nodeType":"StructuredDocumentation","src":"4365:255:12","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":2198,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:12","nodeType":"FunctionDefinition","parameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"mutability":"mutable","name":"target","nameLocation":"4678:6:12","nodeType":"VariableDeclaration","scope":2198,"src":"4670:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2160,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2163,"mutability":"mutable","name":"success","nameLocation":"4699:7:12","nodeType":"VariableDeclaration","scope":2198,"src":"4694:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2162,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2165,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:12","nodeType":"VariableDeclaration","scope":2198,"src":"4716:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2164,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:12"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2198,"src":"4769:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2167,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:12"},"scope":2239,"src":"4625:582:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2219,"nodeType":"Block","src":"5509:122:12","statements":[{"condition":{"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:12","subExpression":{"id":2208,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"5524:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2217,"nodeType":"Block","src":"5583:42:12","statements":[{"expression":{"id":2215,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"5604:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2207,"id":2216,"nodeType":"Return","src":"5597:17:12"}]},"id":2218,"nodeType":"IfStatement","src":"5519:106:12","trueBody":{"id":2214,"nodeType":"Block","src":"5533:44:12","statements":[{"expression":{"arguments":[{"id":2211,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"5555:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2210,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"5547:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2213,"nodeType":"ExpressionStatement","src":"5547:19:12"}]}}]},"documentation":{"id":2199,"nodeType":"StructuredDocumentation","src":"5213:189:12","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":2220,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:12","nodeType":"FunctionDefinition","parameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"success","nameLocation":"5438:7:12","nodeType":"VariableDeclaration","scope":2220,"src":"5433:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2200,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2203,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:12","nodeType":"VariableDeclaration","scope":2220,"src":"5447:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2202,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:12"},"returnParameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2220,"src":"5495:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2205,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:12"},"scope":2239,"src":"5407:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2237,"nodeType":"Block","src":"5798:461:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2226,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"5874:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:12","memberName":"length","nodeType":"MemberAccess","src":"5874:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2235,"nodeType":"Block","src":"6204:49:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2232,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"6225:15:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2234,"nodeType":"RevertStatement","src":"6218:24:12"}]},"id":2236,"nodeType":"IfStatement","src":"5870:383:12","trueBody":{"id":2231,"nodeType":"Block","src":"5897:301:12","statements":[{"AST":{"nativeSrc":"6055:133:12","nodeType":"YulBlock","src":"6055:133:12","statements":[{"nativeSrc":"6073:40:12","nodeType":"YulVariableDeclaration","src":"6073:40:12","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:12","nodeType":"YulIdentifier","src":"6102:10:12"}],"functionName":{"name":"mload","nativeSrc":"6096:5:12","nodeType":"YulIdentifier","src":"6096:5:12"},"nativeSrc":"6096:17:12","nodeType":"YulFunctionCall","src":"6096:17:12"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:12","nodeType":"YulTypedName","src":"6077:15:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:12","nodeType":"YulLiteral","src":"6141:2:12","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:12","nodeType":"YulIdentifier","src":"6145:10:12"}],"functionName":{"name":"add","nativeSrc":"6137:3:12","nodeType":"YulIdentifier","src":"6137:3:12"},"nativeSrc":"6137:19:12","nodeType":"YulFunctionCall","src":"6137:19:12"},{"name":"returndata_size","nativeSrc":"6158:15:12","nodeType":"YulIdentifier","src":"6158:15:12"}],"functionName":{"name":"revert","nativeSrc":"6130:6:12","nodeType":"YulIdentifier","src":"6130:6:12"},"nativeSrc":"6130:44:12","nodeType":"YulFunctionCall","src":"6130:44:12"},"nativeSrc":"6130:44:12","nodeType":"YulExpressionStatement","src":"6130:44:12"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2223,"isOffset":false,"isSlot":false,"src":"6102:10:12","valueSize":1},{"declaration":2223,"isOffset":false,"isSlot":false,"src":"6145:10:12","valueSize":1}],"id":2230,"nodeType":"InlineAssembly","src":"6046:142:12"}]}}]},"documentation":{"id":2221,"nodeType":"StructuredDocumentation","src":"5637:101:12","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":2238,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:12","nodeType":"FunctionDefinition","parameters":{"id":2224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2223,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:12","nodeType":"VariableDeclaration","scope":2238,"src":"5760:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2222,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:12"},"returnParameters":{"id":2225,"nodeType":"ParameterList","parameters":[],"src":"5798:0:12"},"scope":2239,"src":"5743:516:12","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2240,"src":"195:6066:12","usedErrors":[1994,1999,2002],"usedEvents":[]}],"src":"101:6161:12"},"id":12},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2349]},"id":2350,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2241,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2242,"nodeType":"StructuredDocumentation","src":"219:1025:13","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":2349,"linearizedBaseContracts":[2349],"name":"StorageSlot","nameLocation":"1253:11:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2245,"members":[{"constant":false,"id":2244,"mutability":"mutable","name":"value","nameLocation":"1308:5:13","nodeType":"VariableDeclaration","scope":2245,"src":"1300:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2243,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:13","nodeType":"StructDefinition","scope":2349,"src":"1271:49:13","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2248,"members":[{"constant":false,"id":2247,"mutability":"mutable","name":"value","nameLocation":"1360:5:13","nodeType":"VariableDeclaration","scope":2248,"src":"1355:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2246,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:13","nodeType":"StructDefinition","scope":2349,"src":"1326:46:13","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2251,"members":[{"constant":false,"id":2250,"mutability":"mutable","name":"value","nameLocation":"1415:5:13","nodeType":"VariableDeclaration","scope":2251,"src":"1407:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2249,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:13","nodeType":"StructDefinition","scope":2349,"src":"1378:49:13","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2254,"members":[{"constant":false,"id":2253,"mutability":"mutable","name":"value","nameLocation":"1470:5:13","nodeType":"VariableDeclaration","scope":2254,"src":"1462:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2252,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:13","nodeType":"StructDefinition","scope":2349,"src":"1433:49:13","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2257,"members":[{"constant":false,"id":2256,"mutability":"mutable","name":"value","nameLocation":"1523:5:13","nodeType":"VariableDeclaration","scope":2257,"src":"1516:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2255,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:13","nodeType":"StructDefinition","scope":2349,"src":"1488:47:13","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2260,"members":[{"constant":false,"id":2259,"mutability":"mutable","name":"value","nameLocation":"1574:5:13","nodeType":"VariableDeclaration","scope":2260,"src":"1568:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2258,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:13","nodeType":"StructDefinition","scope":2349,"src":"1541:45:13","visibility":"public"},{"body":{"id":2270,"nodeType":"Block","src":"1768:106:13","statements":[{"AST":{"nativeSrc":"1830:38:13","nodeType":"YulBlock","src":"1830:38:13","statements":[{"nativeSrc":"1844:14:13","nodeType":"YulAssignment","src":"1844:14:13","value":{"name":"slot","nativeSrc":"1854:4:13","nodeType":"YulIdentifier","src":"1854:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:13","nodeType":"YulIdentifier","src":"1844:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2267,"isOffset":false,"isSlot":true,"src":"1844:6:13","suffix":"slot","valueSize":1},{"declaration":2263,"isOffset":false,"isSlot":false,"src":"1854:4:13","valueSize":1}],"id":2269,"nodeType":"InlineAssembly","src":"1821:47:13"}]},"documentation":{"id":2261,"nodeType":"StructuredDocumentation","src":"1592:87:13","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2271,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:13","nodeType":"FunctionDefinition","parameters":{"id":2264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2263,"mutability":"mutable","name":"slot","nameLocation":"1716:4:13","nodeType":"VariableDeclaration","scope":2271,"src":"1708:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:13"},"returnParameters":{"id":2268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"mutability":"mutable","name":"r","nameLocation":"1765:1:13","nodeType":"VariableDeclaration","scope":2271,"src":"1745:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2245_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2266,"nodeType":"UserDefinedTypeName","pathNode":{"id":2265,"name":"AddressSlot","nameLocations":["1745:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2245,"src":"1745:11:13"},"referencedDeclaration":2245,"src":"1745:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2245_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:13"},"scope":2349,"src":"1684:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2281,"nodeType":"Block","src":"2056:106:13","statements":[{"AST":{"nativeSrc":"2118:38:13","nodeType":"YulBlock","src":"2118:38:13","statements":[{"nativeSrc":"2132:14:13","nodeType":"YulAssignment","src":"2132:14:13","value":{"name":"slot","nativeSrc":"2142:4:13","nodeType":"YulIdentifier","src":"2142:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:13","nodeType":"YulIdentifier","src":"2132:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2278,"isOffset":false,"isSlot":true,"src":"2132:6:13","suffix":"slot","valueSize":1},{"declaration":2274,"isOffset":false,"isSlot":false,"src":"2142:4:13","valueSize":1}],"id":2280,"nodeType":"InlineAssembly","src":"2109:47:13"}]},"documentation":{"id":2272,"nodeType":"StructuredDocumentation","src":"1880:87:13","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2282,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:13","nodeType":"FunctionDefinition","parameters":{"id":2275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2274,"mutability":"mutable","name":"slot","nameLocation":"2004:4:13","nodeType":"VariableDeclaration","scope":2282,"src":"1996:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2273,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:13"},"returnParameters":{"id":2279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2278,"mutability":"mutable","name":"r","nameLocation":"2053:1:13","nodeType":"VariableDeclaration","scope":2282,"src":"2033:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2248_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2277,"nodeType":"UserDefinedTypeName","pathNode":{"id":2276,"name":"BooleanSlot","nameLocations":["2033:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2248,"src":"2033:11:13"},"referencedDeclaration":2248,"src":"2033:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2248_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:13"},"scope":2349,"src":"1972:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2292,"nodeType":"Block","src":"2344:106:13","statements":[{"AST":{"nativeSrc":"2406:38:13","nodeType":"YulBlock","src":"2406:38:13","statements":[{"nativeSrc":"2420:14:13","nodeType":"YulAssignment","src":"2420:14:13","value":{"name":"slot","nativeSrc":"2430:4:13","nodeType":"YulIdentifier","src":"2430:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:13","nodeType":"YulIdentifier","src":"2420:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2289,"isOffset":false,"isSlot":true,"src":"2420:6:13","suffix":"slot","valueSize":1},{"declaration":2285,"isOffset":false,"isSlot":false,"src":"2430:4:13","valueSize":1}],"id":2291,"nodeType":"InlineAssembly","src":"2397:47:13"}]},"documentation":{"id":2283,"nodeType":"StructuredDocumentation","src":"2168:87:13","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2293,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:13","nodeType":"FunctionDefinition","parameters":{"id":2286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2285,"mutability":"mutable","name":"slot","nameLocation":"2292:4:13","nodeType":"VariableDeclaration","scope":2293,"src":"2284:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:13"},"returnParameters":{"id":2290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2289,"mutability":"mutable","name":"r","nameLocation":"2341:1:13","nodeType":"VariableDeclaration","scope":2293,"src":"2321:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2251_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2288,"nodeType":"UserDefinedTypeName","pathNode":{"id":2287,"name":"Bytes32Slot","nameLocations":["2321:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2251,"src":"2321:11:13"},"referencedDeclaration":2251,"src":"2321:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2251_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:13"},"scope":2349,"src":"2260:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2303,"nodeType":"Block","src":"2632:106:13","statements":[{"AST":{"nativeSrc":"2694:38:13","nodeType":"YulBlock","src":"2694:38:13","statements":[{"nativeSrc":"2708:14:13","nodeType":"YulAssignment","src":"2708:14:13","value":{"name":"slot","nativeSrc":"2718:4:13","nodeType":"YulIdentifier","src":"2718:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:13","nodeType":"YulIdentifier","src":"2708:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2300,"isOffset":false,"isSlot":true,"src":"2708:6:13","suffix":"slot","valueSize":1},{"declaration":2296,"isOffset":false,"isSlot":false,"src":"2718:4:13","valueSize":1}],"id":2302,"nodeType":"InlineAssembly","src":"2685:47:13"}]},"documentation":{"id":2294,"nodeType":"StructuredDocumentation","src":"2456:87:13","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2304,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:13","nodeType":"FunctionDefinition","parameters":{"id":2297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"mutability":"mutable","name":"slot","nameLocation":"2580:4:13","nodeType":"VariableDeclaration","scope":2304,"src":"2572:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:13"},"returnParameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2300,"mutability":"mutable","name":"r","nameLocation":"2629:1:13","nodeType":"VariableDeclaration","scope":2304,"src":"2609:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2254_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2299,"nodeType":"UserDefinedTypeName","pathNode":{"id":2298,"name":"Uint256Slot","nameLocations":["2609:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2254,"src":"2609:11:13"},"referencedDeclaration":2254,"src":"2609:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2254_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:13"},"scope":2349,"src":"2548:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2314,"nodeType":"Block","src":"2917:106:13","statements":[{"AST":{"nativeSrc":"2979:38:13","nodeType":"YulBlock","src":"2979:38:13","statements":[{"nativeSrc":"2993:14:13","nodeType":"YulAssignment","src":"2993:14:13","value":{"name":"slot","nativeSrc":"3003:4:13","nodeType":"YulIdentifier","src":"3003:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:13","nodeType":"YulIdentifier","src":"2993:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2311,"isOffset":false,"isSlot":true,"src":"2993:6:13","suffix":"slot","valueSize":1},{"declaration":2307,"isOffset":false,"isSlot":false,"src":"3003:4:13","valueSize":1}],"id":2313,"nodeType":"InlineAssembly","src":"2970:47:13"}]},"documentation":{"id":2305,"nodeType":"StructuredDocumentation","src":"2744:86:13","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2315,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:13","nodeType":"FunctionDefinition","parameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2307,"mutability":"mutable","name":"slot","nameLocation":"2866:4:13","nodeType":"VariableDeclaration","scope":2315,"src":"2858:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2306,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:13"},"returnParameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2311,"mutability":"mutable","name":"r","nameLocation":"2914:1:13","nodeType":"VariableDeclaration","scope":2315,"src":"2895:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2257_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2310,"nodeType":"UserDefinedTypeName","pathNode":{"id":2309,"name":"StringSlot","nameLocations":["2895:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2257,"src":"2895:10:13"},"referencedDeclaration":2257,"src":"2895:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2257_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:13"},"scope":2349,"src":"2835:188:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2325,"nodeType":"Block","src":"3225:112:13","statements":[{"AST":{"nativeSrc":"3287:44:13","nodeType":"YulBlock","src":"3287:44:13","statements":[{"nativeSrc":"3301:20:13","nodeType":"YulAssignment","src":"3301:20:13","value":{"name":"store.slot","nativeSrc":"3311:10:13","nodeType":"YulIdentifier","src":"3311:10:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:13","nodeType":"YulIdentifier","src":"3301:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2322,"isOffset":false,"isSlot":true,"src":"3301:6:13","suffix":"slot","valueSize":1},{"declaration":2318,"isOffset":false,"isSlot":true,"src":"3311:10:13","suffix":"slot","valueSize":1}],"id":2324,"nodeType":"InlineAssembly","src":"3278:53:13"}]},"documentation":{"id":2316,"nodeType":"StructuredDocumentation","src":"3029:101:13","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2326,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:13","nodeType":"FunctionDefinition","parameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"store","nameLocation":"3173:5:13","nodeType":"VariableDeclaration","scope":2326,"src":"3158:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2317,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:13"},"returnParameters":{"id":2323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2322,"mutability":"mutable","name":"r","nameLocation":"3222:1:13","nodeType":"VariableDeclaration","scope":2326,"src":"3203:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2257_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2321,"nodeType":"UserDefinedTypeName","pathNode":{"id":2320,"name":"StringSlot","nameLocations":["3203:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2257,"src":"3203:10:13"},"referencedDeclaration":2257,"src":"3203:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2257_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:13"},"scope":2349,"src":"3135:202:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2336,"nodeType":"Block","src":"3513:106:13","statements":[{"AST":{"nativeSrc":"3575:38:13","nodeType":"YulBlock","src":"3575:38:13","statements":[{"nativeSrc":"3589:14:13","nodeType":"YulAssignment","src":"3589:14:13","value":{"name":"slot","nativeSrc":"3599:4:13","nodeType":"YulIdentifier","src":"3599:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:13","nodeType":"YulIdentifier","src":"3589:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2333,"isOffset":false,"isSlot":true,"src":"3589:6:13","suffix":"slot","valueSize":1},{"declaration":2329,"isOffset":false,"isSlot":false,"src":"3599:4:13","valueSize":1}],"id":2335,"nodeType":"InlineAssembly","src":"3566:47:13"}]},"documentation":{"id":2327,"nodeType":"StructuredDocumentation","src":"3343:85:13","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2337,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:13","nodeType":"FunctionDefinition","parameters":{"id":2330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"mutability":"mutable","name":"slot","nameLocation":"3463:4:13","nodeType":"VariableDeclaration","scope":2337,"src":"3455:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:13"},"returnParameters":{"id":2334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2333,"mutability":"mutable","name":"r","nameLocation":"3510:1:13","nodeType":"VariableDeclaration","scope":2337,"src":"3492:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2260_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2332,"nodeType":"UserDefinedTypeName","pathNode":{"id":2331,"name":"BytesSlot","nameLocations":["3492:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":2260,"src":"3492:9:13"},"referencedDeclaration":2260,"src":"3492:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2260_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:13"},"scope":2349,"src":"3433:186:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2347,"nodeType":"Block","src":"3816:112:13","statements":[{"AST":{"nativeSrc":"3878:44:13","nodeType":"YulBlock","src":"3878:44:13","statements":[{"nativeSrc":"3892:20:13","nodeType":"YulAssignment","src":"3892:20:13","value":{"name":"store.slot","nativeSrc":"3902:10:13","nodeType":"YulIdentifier","src":"3902:10:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:13","nodeType":"YulIdentifier","src":"3892:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2344,"isOffset":false,"isSlot":true,"src":"3892:6:13","suffix":"slot","valueSize":1},{"declaration":2340,"isOffset":false,"isSlot":true,"src":"3902:10:13","suffix":"slot","valueSize":1}],"id":2346,"nodeType":"InlineAssembly","src":"3869:53:13"}]},"documentation":{"id":2338,"nodeType":"StructuredDocumentation","src":"3625:99:13","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2348,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:13","nodeType":"FunctionDefinition","parameters":{"id":2341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2340,"mutability":"mutable","name":"store","nameLocation":"3765:5:13","nodeType":"VariableDeclaration","scope":2348,"src":"3751:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2339,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:13"},"returnParameters":{"id":2345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"r","nameLocation":"3813:1:13","nodeType":"VariableDeclaration","scope":2348,"src":"3795:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2260_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2343,"nodeType":"UserDefinedTypeName","pathNode":{"id":2342,"name":"BytesSlot","nameLocations":["3795:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":2260,"src":"3795:9:13"},"referencedDeclaration":2260,"src":"3795:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2260_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:13"},"scope":2349,"src":"3729:199:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2350,"src":"1245:2685:13","usedErrors":[],"usedEvents":[]}],"src":"193:3738:13"},"id":13},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","exportedSymbols":{"IUniswapV3Factory":[2432]},"id":2433,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2351,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3Factory","contractDependencies":[],"contractKind":"interface","documentation":{"id":2352,"nodeType":"StructuredDocumentation","src":"71:163:14","text":"@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"},"fullyImplemented":false,"id":2432,"linearizedBaseContracts":[2432],"name":"IUniswapV3Factory","nameLocation":"244:17:14","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2353,"nodeType":"StructuredDocumentation","src":"268:185:14","text":"@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"},"eventSelector":"b532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c","id":2359,"name":"OwnerChanged","nameLocation":"464:12:14","nodeType":"EventDefinition","parameters":{"id":2358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2355,"indexed":true,"mutability":"mutable","name":"oldOwner","nameLocation":"493:8:14","nodeType":"VariableDeclaration","scope":2359,"src":"477:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2354,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2357,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"519:8:14","nodeType":"VariableDeclaration","scope":2359,"src":"503:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2356,"name":"address","nodeType":"ElementaryTypeName","src":"503:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"476:52:14"},"src":"458:71:14"},{"anonymous":false,"documentation":{"id":2360,"nodeType":"StructuredDocumentation","src":"535:421:14","text":"@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"},"eventSelector":"783cca1c0412dd0d695e784568c96da2e9c22ff989357a2e8b1d9b2b4e6b7118","id":2372,"name":"PoolCreated","nameLocation":"967:11:14","nodeType":"EventDefinition","parameters":{"id":2371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2362,"indexed":true,"mutability":"mutable","name":"token0","nameLocation":"1004:6:14","nodeType":"VariableDeclaration","scope":2372,"src":"988:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2361,"name":"address","nodeType":"ElementaryTypeName","src":"988:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2364,"indexed":true,"mutability":"mutable","name":"token1","nameLocation":"1036:6:14","nodeType":"VariableDeclaration","scope":2372,"src":"1020:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2363,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2366,"indexed":true,"mutability":"mutable","name":"fee","nameLocation":"1067:3:14","nodeType":"VariableDeclaration","scope":2372,"src":"1052:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2365,"name":"uint24","nodeType":"ElementaryTypeName","src":"1052:6:14","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2368,"indexed":false,"mutability":"mutable","name":"tickSpacing","nameLocation":"1086:11:14","nodeType":"VariableDeclaration","scope":2372,"src":"1080:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2367,"name":"int24","nodeType":"ElementaryTypeName","src":"1080:5:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":2370,"indexed":false,"mutability":"mutable","name":"pool","nameLocation":"1115:4:14","nodeType":"VariableDeclaration","scope":2372,"src":"1107:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2369,"name":"address","nodeType":"ElementaryTypeName","src":"1107:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"978:147:14"},"src":"961:165:14"},{"anonymous":false,"documentation":{"id":2373,"nodeType":"StructuredDocumentation","src":"1132:275:14","text":"@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"},"eventSelector":"c66a3fdf07232cdd185febcc6579d408c241b47ae2f9907d84be655141eeaecc","id":2379,"name":"FeeAmountEnabled","nameLocation":"1418:16:14","nodeType":"EventDefinition","parameters":{"id":2378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2375,"indexed":true,"mutability":"mutable","name":"fee","nameLocation":"1450:3:14","nodeType":"VariableDeclaration","scope":2379,"src":"1435:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2374,"name":"uint24","nodeType":"ElementaryTypeName","src":"1435:6:14","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2377,"indexed":true,"mutability":"mutable","name":"tickSpacing","nameLocation":"1469:11:14","nodeType":"VariableDeclaration","scope":2379,"src":"1455:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2376,"name":"int24","nodeType":"ElementaryTypeName","src":"1455:5:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1434:47:14"},"src":"1412:70:14"},{"documentation":{"id":2380,"nodeType":"StructuredDocumentation","src":"1488:163:14","text":"@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"},"functionSelector":"8da5cb5b","id":2385,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1665:5:14","nodeType":"FunctionDefinition","parameters":{"id":2381,"nodeType":"ParameterList","parameters":[],"src":"1670:2:14"},"returnParameters":{"id":2384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2385,"src":"1696:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2382,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1695:9:14"},"scope":2432,"src":"1656:49:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2386,"nodeType":"StructuredDocumentation","src":"1711:348:14","text":"@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"},"functionSelector":"22afcccb","id":2393,"implemented":false,"kind":"function","modifiers":[],"name":"feeAmountTickSpacing","nameLocation":"2073:20:14","nodeType":"FunctionDefinition","parameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2388,"mutability":"mutable","name":"fee","nameLocation":"2101:3:14","nodeType":"VariableDeclaration","scope":2393,"src":"2094:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2387,"name":"uint24","nodeType":"ElementaryTypeName","src":"2094:6:14","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2093:12:14"},"returnParameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2393,"src":"2129:5:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2390,"name":"int24","nodeType":"ElementaryTypeName","src":"2129:5:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"2128:7:14"},"scope":2432,"src":"2064:72:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2394,"nodeType":"StructuredDocumentation","src":"2142:471:14","text":"@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"},"functionSelector":"1698ee82","id":2405,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"2627:7:14","nodeType":"FunctionDefinition","parameters":{"id":2401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"tokenA","nameLocation":"2652:6:14","nodeType":"VariableDeclaration","scope":2405,"src":"2644:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2395,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2398,"mutability":"mutable","name":"tokenB","nameLocation":"2676:6:14","nodeType":"VariableDeclaration","scope":2405,"src":"2668:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2397,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2400,"mutability":"mutable","name":"fee","nameLocation":"2699:3:14","nodeType":"VariableDeclaration","scope":2405,"src":"2692:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2399,"name":"uint24","nodeType":"ElementaryTypeName","src":"2692:6:14","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2634:74:14"},"returnParameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"pool","nameLocation":"2740:4:14","nodeType":"VariableDeclaration","scope":2405,"src":"2732:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2402,"name":"address","nodeType":"ElementaryTypeName","src":"2732:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2731:14:14"},"scope":2432,"src":"2618:128:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2406,"nodeType":"StructuredDocumentation","src":"2752:554:14","text":"@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"},"functionSelector":"a1671295","id":2417,"implemented":false,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"3320:10:14","nodeType":"FunctionDefinition","parameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"mutability":"mutable","name":"tokenA","nameLocation":"3348:6:14","nodeType":"VariableDeclaration","scope":2417,"src":"3340:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2407,"name":"address","nodeType":"ElementaryTypeName","src":"3340:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2410,"mutability":"mutable","name":"tokenB","nameLocation":"3372:6:14","nodeType":"VariableDeclaration","scope":2417,"src":"3364:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2409,"name":"address","nodeType":"ElementaryTypeName","src":"3364:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2412,"mutability":"mutable","name":"fee","nameLocation":"3395:3:14","nodeType":"VariableDeclaration","scope":2417,"src":"3388:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2411,"name":"uint24","nodeType":"ElementaryTypeName","src":"3388:6:14","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3330:74:14"},"returnParameters":{"id":2416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2415,"mutability":"mutable","name":"pool","nameLocation":"3431:4:14","nodeType":"VariableDeclaration","scope":2417,"src":"3423:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2414,"name":"address","nodeType":"ElementaryTypeName","src":"3423:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3422:14:14"},"scope":2432,"src":"3311:126:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2418,"nodeType":"StructuredDocumentation","src":"3443:144:14","text":"@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"},"functionSelector":"13af4035","id":2423,"implemented":false,"kind":"function","modifiers":[],"name":"setOwner","nameLocation":"3601:8:14","nodeType":"FunctionDefinition","parameters":{"id":2421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2420,"mutability":"mutable","name":"_owner","nameLocation":"3618:6:14","nodeType":"VariableDeclaration","scope":2423,"src":"3610:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2419,"name":"address","nodeType":"ElementaryTypeName","src":"3610:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3609:16:14"},"returnParameters":{"id":2422,"nodeType":"ParameterList","parameters":[],"src":"3634:0:14"},"scope":2432,"src":"3592:43:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2424,"nodeType":"StructuredDocumentation","src":"3641:326:14","text":"@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"},"functionSelector":"8a7c195f","id":2431,"implemented":false,"kind":"function","modifiers":[],"name":"enableFeeAmount","nameLocation":"3981:15:14","nodeType":"FunctionDefinition","parameters":{"id":2429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2426,"mutability":"mutable","name":"fee","nameLocation":"4004:3:14","nodeType":"VariableDeclaration","scope":2431,"src":"3997:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2425,"name":"uint24","nodeType":"ElementaryTypeName","src":"3997:6:14","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2428,"mutability":"mutable","name":"tickSpacing","nameLocation":"4015:11:14","nodeType":"VariableDeclaration","scope":2431,"src":"4009:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2427,"name":"int24","nodeType":"ElementaryTypeName","src":"4009:5:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"3996:31:14"},"returnParameters":{"id":2430,"nodeType":"ParameterList","parameters":[],"src":"4036:0:14"},"scope":2432,"src":"3972:65:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2433,"src":"234:3805:14","usedErrors":[],"usedEvents":[2359,2372,2379]}],"src":"45:3995:14"},"id":14},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","exportedSymbols":{"IUniswapV3SwapCallback":[2446]},"id":2447,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2434,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3SwapCallback","contractDependencies":[],"contractKind":"interface","documentation":{"id":2435,"nodeType":"StructuredDocumentation","src":"71:144:15","text":"@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"},"fullyImplemented":false,"id":2446,"linearizedBaseContracts":[2446],"name":"IUniswapV3SwapCallback","nameLocation":"225:22:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2436,"nodeType":"StructuredDocumentation","src":"254:898:15","text":"@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"},"functionSelector":"fa461e33","id":2445,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapV3SwapCallback","nameLocation":"1166:21:15","nodeType":"FunctionDefinition","parameters":{"id":2443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"amount0Delta","nameLocation":"1204:12:15","nodeType":"VariableDeclaration","scope":2445,"src":"1197:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2437,"name":"int256","nodeType":"ElementaryTypeName","src":"1197:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2440,"mutability":"mutable","name":"amount1Delta","nameLocation":"1233:12:15","nodeType":"VariableDeclaration","scope":2445,"src":"1226:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2439,"name":"int256","nodeType":"ElementaryTypeName","src":"1226:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2442,"mutability":"mutable","name":"data","nameLocation":"1270:4:15","nodeType":"VariableDeclaration","scope":2445,"src":"1255:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2441,"name":"bytes","nodeType":"ElementaryTypeName","src":"1255:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1187:93:15"},"returnParameters":{"id":2444,"nodeType":"ParameterList","parameters":[],"src":"1289:0:15"},"scope":2446,"src":"1157:133:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2447,"src":"215:1077:15","usedErrors":[],"usedEvents":[]}],"src":"45:1248:15"},"id":15},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","exportedSymbols":{"ISwapRouter":[2546],"IUniswapV3SwapCallback":[2446]},"id":2547,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2448,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:16"},{"id":2449,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:16"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","file":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","id":2450,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2547,"sourceUnit":2447,"src":"91:83:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2452,"name":"IUniswapV3SwapCallback","nameLocations":["305:22:16"],"nodeType":"IdentifierPath","referencedDeclaration":2446,"src":"305:22:16"},"id":2453,"nodeType":"InheritanceSpecifier","src":"305:22:16"}],"canonicalName":"ISwapRouter","contractDependencies":[],"contractKind":"interface","documentation":{"id":2451,"nodeType":"StructuredDocumentation","src":"176:104:16","text":"@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"},"fullyImplemented":false,"id":2546,"linearizedBaseContracts":[2546,2446],"name":"ISwapRouter","nameLocation":"290:11:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISwapRouter.ExactInputSingleParams","id":2470,"members":[{"constant":false,"id":2455,"mutability":"mutable","name":"tokenIn","nameLocation":"382:7:16","nodeType":"VariableDeclaration","scope":2470,"src":"374:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2454,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2457,"mutability":"mutable","name":"tokenOut","nameLocation":"407:8:16","nodeType":"VariableDeclaration","scope":2470,"src":"399:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2456,"name":"address","nodeType":"ElementaryTypeName","src":"399:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2459,"mutability":"mutable","name":"fee","nameLocation":"432:3:16","nodeType":"VariableDeclaration","scope":2470,"src":"425:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2458,"name":"uint24","nodeType":"ElementaryTypeName","src":"425:6:16","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2461,"mutability":"mutable","name":"recipient","nameLocation":"453:9:16","nodeType":"VariableDeclaration","scope":2470,"src":"445:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2460,"name":"address","nodeType":"ElementaryTypeName","src":"445:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"deadline","nameLocation":"480:8:16","nodeType":"VariableDeclaration","scope":2470,"src":"472:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2465,"mutability":"mutable","name":"amountIn","nameLocation":"506:8:16","nodeType":"VariableDeclaration","scope":2470,"src":"498:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2464,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2467,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"532:16:16","nodeType":"VariableDeclaration","scope":2470,"src":"524:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2466,"name":"uint256","nodeType":"ElementaryTypeName","src":"524:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2469,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"566:17:16","nodeType":"VariableDeclaration","scope":2470,"src":"558:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2468,"name":"uint160","nodeType":"ElementaryTypeName","src":"558:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactInputSingleParams","nameLocation":"341:22:16","nodeType":"StructDefinition","scope":2546,"src":"334:256:16","visibility":"public"},{"documentation":{"id":2471,"nodeType":"StructuredDocumentation","src":"596:250:16","text":"@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"414bf389","id":2479,"implemented":false,"kind":"function","modifiers":[],"name":"exactInputSingle","nameLocation":"860:16:16","nodeType":"FunctionDefinition","parameters":{"id":2475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"params","nameLocation":"909:6:16","nodeType":"VariableDeclaration","scope":2479,"src":"877:38:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2470_calldata_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":2473,"nodeType":"UserDefinedTypeName","pathNode":{"id":2472,"name":"ExactInputSingleParams","nameLocations":["877:22:16"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"877:22:16"},"referencedDeclaration":2470,"src":"877:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2470_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"src":"876:40:16"},"returnParameters":{"id":2478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2477,"mutability":"mutable","name":"amountOut","nameLocation":"951:9:16","nodeType":"VariableDeclaration","scope":2479,"src":"943:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2476,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"942:19:16"},"scope":2546,"src":"851:111:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactInputParams","id":2490,"members":[{"constant":false,"id":2481,"mutability":"mutable","name":"path","nameLocation":"1008:4:16","nodeType":"VariableDeclaration","scope":2490,"src":"1002:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2480,"name":"bytes","nodeType":"ElementaryTypeName","src":"1002:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2483,"mutability":"mutable","name":"recipient","nameLocation":"1030:9:16","nodeType":"VariableDeclaration","scope":2490,"src":"1022:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2482,"name":"address","nodeType":"ElementaryTypeName","src":"1022:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2485,"mutability":"mutable","name":"deadline","nameLocation":"1057:8:16","nodeType":"VariableDeclaration","scope":2490,"src":"1049:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2484,"name":"uint256","nodeType":"ElementaryTypeName","src":"1049:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2487,"mutability":"mutable","name":"amountIn","nameLocation":"1083:8:16","nodeType":"VariableDeclaration","scope":2490,"src":"1075:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2486,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2489,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"1109:16:16","nodeType":"VariableDeclaration","scope":2490,"src":"1101:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2488,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactInputParams","nameLocation":"975:16:16","nodeType":"StructDefinition","scope":2546,"src":"968:164:16","visibility":"public"},{"documentation":{"id":2491,"nodeType":"StructuredDocumentation","src":"1138:273:16","text":"@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"c04b8d59","id":2499,"implemented":false,"kind":"function","modifiers":[],"name":"exactInput","nameLocation":"1425:10:16","nodeType":"FunctionDefinition","parameters":{"id":2495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2494,"mutability":"mutable","name":"params","nameLocation":"1462:6:16","nodeType":"VariableDeclaration","scope":2499,"src":"1436:32:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$2490_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams"},"typeName":{"id":2493,"nodeType":"UserDefinedTypeName","pathNode":{"id":2492,"name":"ExactInputParams","nameLocations":["1436:16:16"],"nodeType":"IdentifierPath","referencedDeclaration":2490,"src":"1436:16:16"},"referencedDeclaration":2490,"src":"1436:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$2490_storage_ptr","typeString":"struct ISwapRouter.ExactInputParams"}},"visibility":"internal"}],"src":"1435:34:16"},"returnParameters":{"id":2498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"amountOut","nameLocation":"1504:9:16","nodeType":"VariableDeclaration","scope":2499,"src":"1496:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2496,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:19:16"},"scope":2546,"src":"1416:99:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputSingleParams","id":2516,"members":[{"constant":false,"id":2501,"mutability":"mutable","name":"tokenIn","nameLocation":"1570:7:16","nodeType":"VariableDeclaration","scope":2516,"src":"1562:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2500,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2503,"mutability":"mutable","name":"tokenOut","nameLocation":"1595:8:16","nodeType":"VariableDeclaration","scope":2516,"src":"1587:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2502,"name":"address","nodeType":"ElementaryTypeName","src":"1587:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2505,"mutability":"mutable","name":"fee","nameLocation":"1620:3:16","nodeType":"VariableDeclaration","scope":2516,"src":"1613:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2504,"name":"uint24","nodeType":"ElementaryTypeName","src":"1613:6:16","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2507,"mutability":"mutable","name":"recipient","nameLocation":"1641:9:16","nodeType":"VariableDeclaration","scope":2516,"src":"1633:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2506,"name":"address","nodeType":"ElementaryTypeName","src":"1633:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2509,"mutability":"mutable","name":"deadline","nameLocation":"1668:8:16","nodeType":"VariableDeclaration","scope":2516,"src":"1660:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2508,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2511,"mutability":"mutable","name":"amountOut","nameLocation":"1694:9:16","nodeType":"VariableDeclaration","scope":2516,"src":"1686:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"1686:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2513,"mutability":"mutable","name":"amountInMaximum","nameLocation":"1721:15:16","nodeType":"VariableDeclaration","scope":2516,"src":"1713:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2512,"name":"uint256","nodeType":"ElementaryTypeName","src":"1713:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2515,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"1754:17:16","nodeType":"VariableDeclaration","scope":2516,"src":"1746:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2514,"name":"uint160","nodeType":"ElementaryTypeName","src":"1746:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactOutputSingleParams","nameLocation":"1528:23:16","nodeType":"StructDefinition","scope":2546,"src":"1521:257:16","visibility":"public"},{"documentation":{"id":2517,"nodeType":"StructuredDocumentation","src":"1784:250:16","text":"@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"db3e2198","id":2525,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutputSingle","nameLocation":"2048:17:16","nodeType":"FunctionDefinition","parameters":{"id":2521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"mutability":"mutable","name":"params","nameLocation":"2099:6:16","nodeType":"VariableDeclaration","scope":2525,"src":"2066:39:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$2516_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"},"typeName":{"id":2519,"nodeType":"UserDefinedTypeName","pathNode":{"id":2518,"name":"ExactOutputSingleParams","nameLocations":["2066:23:16"],"nodeType":"IdentifierPath","referencedDeclaration":2516,"src":"2066:23:16"},"referencedDeclaration":2516,"src":"2066:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$2516_storage_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"}},"visibility":"internal"}],"src":"2065:41:16"},"returnParameters":{"id":2524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2523,"mutability":"mutable","name":"amountIn","nameLocation":"2141:8:16","nodeType":"VariableDeclaration","scope":2525,"src":"2133:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2522,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:18:16"},"scope":2546,"src":"2039:112:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputParams","id":2536,"members":[{"constant":false,"id":2527,"mutability":"mutable","name":"path","nameLocation":"2198:4:16","nodeType":"VariableDeclaration","scope":2536,"src":"2192:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2526,"name":"bytes","nodeType":"ElementaryTypeName","src":"2192:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2529,"mutability":"mutable","name":"recipient","nameLocation":"2220:9:16","nodeType":"VariableDeclaration","scope":2536,"src":"2212:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2528,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2531,"mutability":"mutable","name":"deadline","nameLocation":"2247:8:16","nodeType":"VariableDeclaration","scope":2536,"src":"2239:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2530,"name":"uint256","nodeType":"ElementaryTypeName","src":"2239:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2533,"mutability":"mutable","name":"amountOut","nameLocation":"2273:9:16","nodeType":"VariableDeclaration","scope":2536,"src":"2265:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2532,"name":"uint256","nodeType":"ElementaryTypeName","src":"2265:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2535,"mutability":"mutable","name":"amountInMaximum","nameLocation":"2300:15:16","nodeType":"VariableDeclaration","scope":2536,"src":"2292:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2534,"name":"uint256","nodeType":"ElementaryTypeName","src":"2292:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactOutputParams","nameLocation":"2164:17:16","nodeType":"StructDefinition","scope":2546,"src":"2157:165:16","visibility":"public"},{"documentation":{"id":2537,"nodeType":"StructuredDocumentation","src":"2328:284:16","text":"@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"f28c0498","id":2545,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutput","nameLocation":"2626:11:16","nodeType":"FunctionDefinition","parameters":{"id":2541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"params","nameLocation":"2665:6:16","nodeType":"VariableDeclaration","scope":2545,"src":"2638:33:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$2536_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputParams"},"typeName":{"id":2539,"nodeType":"UserDefinedTypeName","pathNode":{"id":2538,"name":"ExactOutputParams","nameLocations":["2638:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":2536,"src":"2638:17:16"},"referencedDeclaration":2536,"src":"2638:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$2536_storage_ptr","typeString":"struct ISwapRouter.ExactOutputParams"}},"visibility":"internal"}],"src":"2637:35:16"},"returnParameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2543,"mutability":"mutable","name":"amountIn","nameLocation":"2707:8:16","nodeType":"VariableDeclaration","scope":2545,"src":"2699:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2542,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2698:18:16"},"scope":2546,"src":"2617:100:16","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2547,"src":"280:2439:16","usedErrors":[],"usedEvents":[]}],"src":"45:2675:16"},"id":16},"contracts/BaluniV1Router.sol":{"ast":{"absolutePath":"contracts/BaluniV1Router.sol","exportedSymbols":{"BaluniV1Router":[4376],"BaluniV1Uniswapper":[4685],"ContextUpgradeable":[1293],"ERC1967Utils":[1872],"ERC20Upgradeable":[1247],"EnumerableSetUpgradeable":[5727],"I1inchSpotAgg":[4712],"IBaluniV1Agent":[4732],"IBaluniV1AgentFactory":[4749],"IBaluniV1Rebalancer":[4870],"IBaluniV1Router":[5128],"IERC1822Proxiable":[1432],"IERC20":[1960],"IERC20Errors":[1474],"IERC20Metadata":[1986],"ISwapRouter":[2546],"IUniswapV3Factory":[2432],"IUniswapV3SwapCallback":[2446],"Initializable":[448],"OwnableUpgradeable":[194],"ReentrancyGuardUpgradeable":[1422],"UUPSUpgradeable":[630]},"id":4377,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2548,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:17"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":2549,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4377,"sourceUnit":1248,"src":"1468:78:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":2550,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4377,"sourceUnit":195,"src":"1548:75:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","id":2551,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4377,"sourceUnit":1423,"src":"1625:82:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":2552,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4377,"sourceUnit":631,"src":"1709:77:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","file":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","id":2553,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4377,"sourceUnit":2547,"src":"1788:68:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","file":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","id":2554,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4377,"sourceUnit":2433,"src":"1858:69:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":2555,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4377,"sourceUnit":449,"src":"1929:75:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":2556,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4377,"sourceUnit":1248,"src":"2006:78:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1AgentFactory.sol","file":"./interfaces/IBaluniV1AgentFactory.sol","id":2557,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4377,"sourceUnit":4750,"src":"2088:48:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Rebalancer.sol","file":"./interfaces/IBaluniV1Rebalancer.sol","id":2558,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4377,"sourceUnit":4871,"src":"2138:46:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libs/EnumerableSetUpgradeable.sol","file":"./libs/EnumerableSetUpgradeable.sol","id":2559,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4377,"sourceUnit":5728,"src":"2186:45:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/BaluniV1Uniswapper.sol","file":"./BaluniV1Uniswapper.sol","id":2560,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4377,"sourceUnit":4686,"src":"2233:34:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2561,"name":"Initializable","nameLocations":["2303:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"2303:13:17"},"id":2562,"nodeType":"InheritanceSpecifier","src":"2303:13:17"},{"baseName":{"id":2563,"name":"ERC20Upgradeable","nameLocations":["2323:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":1247,"src":"2323:16:17"},"id":2564,"nodeType":"InheritanceSpecifier","src":"2323:16:17"},{"baseName":{"id":2565,"name":"OwnableUpgradeable","nameLocations":["2346:18:17"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"2346:18:17"},"id":2566,"nodeType":"InheritanceSpecifier","src":"2346:18:17"},{"baseName":{"id":2567,"name":"ReentrancyGuardUpgradeable","nameLocations":["2371:26:17"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"2371:26:17"},"id":2568,"nodeType":"InheritanceSpecifier","src":"2371:26:17"},{"baseName":{"id":2569,"name":"UUPSUpgradeable","nameLocations":["2404:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"2404:15:17"},"id":2570,"nodeType":"InheritanceSpecifier","src":"2404:15:17"},{"baseName":{"id":2571,"name":"BaluniV1Uniswapper","nameLocations":["2426:18:17"],"nodeType":"IdentifierPath","referencedDeclaration":4685,"src":"2426:18:17"},"id":2572,"nodeType":"InheritanceSpecifier","src":"2426:18:17"}],"canonicalName":"BaluniV1Router","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4376,"linearizedBaseContracts":[4376,4685,630,1432,1422,194,1247,1474,1986,1960,1293,448],"name":"BaluniV1Router","nameLocation":"2280:14:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"BaluniV1Router.Call","id":2579,"members":[{"constant":false,"id":2574,"mutability":"mutable","name":"to","nameLocation":"2484:2:17","nodeType":"VariableDeclaration","scope":2579,"src":"2476:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2573,"name":"address","nodeType":"ElementaryTypeName","src":"2476:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2576,"mutability":"mutable","name":"value","nameLocation":"2505:5:17","nodeType":"VariableDeclaration","scope":2579,"src":"2497:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2575,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2578,"mutability":"mutable","name":"data","nameLocation":"2527:4:17","nodeType":"VariableDeclaration","scope":2579,"src":"2521:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2577,"name":"bytes","nodeType":"ElementaryTypeName","src":"2521:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Call","nameLocation":"2460:4:17","nodeType":"StructDefinition","scope":4376,"src":"2453:86:17","visibility":"public"},{"constant":false,"functionSelector":"34decfc9","id":2581,"mutability":"mutable","name":"_MAX_BPS_FEE","nameLocation":"2562:12:17","nodeType":"VariableDeclaration","scope":4376,"src":"2547:27:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2580,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"b9f5e617","id":2583,"mutability":"mutable","name":"_BPS_FEE","nameLocation":"2596:8:17","nodeType":"VariableDeclaration","scope":4376,"src":"2581:23:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2582,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"85377188","id":2585,"mutability":"mutable","name":"_BPS_BASE","nameLocation":"2626:9:17","nodeType":"VariableDeclaration","scope":4376,"src":"2611:24:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"2611:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":2588,"mutability":"mutable","name":"tokens","nameLocation":"2688:6:17","nodeType":"VariableDeclaration","scope":4376,"src":"2644:50:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":2587,"nodeType":"UserDefinedTypeName","pathNode":{"id":2586,"name":"EnumerableSetUpgradeable.AddressSet","nameLocations":["2644:24:17","2669:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":5440,"src":"2644:35:17"},"referencedDeclaration":5440,"src":"2644:35:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"private"},{"constant":false,"functionSelector":"89a30271","id":2590,"mutability":"mutable","name":"USDC","nameLocation":"2716:4:17","nodeType":"VariableDeclaration","scope":4376,"src":"2701:19:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2589,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"b381cf40","id":2592,"mutability":"mutable","name":"WNATIVE","nameLocation":"2742:7:17","nodeType":"VariableDeclaration","scope":4376,"src":"2727:22:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2591,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"7dc0d1d0","id":2594,"mutability":"mutable","name":"oracle","nameLocation":"2771:6:17","nodeType":"VariableDeclaration","scope":4376,"src":"2756:21:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2593,"name":"address","nodeType":"ElementaryTypeName","src":"2756:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"7df107ea","id":2596,"mutability":"mutable","name":"agentFactory","nameLocation":"2799:12:17","nodeType":"VariableDeclaration","scope":4376,"src":"2784:27:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2595,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"01d22ccd","id":2598,"mutability":"mutable","name":"rebalancer","nameLocation":"2833:10:17","nodeType":"VariableDeclaration","scope":4376,"src":"2818:25:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2597,"name":"address","nodeType":"ElementaryTypeName","src":"2818:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"61d027b3","id":2600,"mutability":"mutable","name":"treasury","nameLocation":"2865:8:17","nodeType":"VariableDeclaration","scope":4376,"src":"2850:23:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2599,"name":"address","nodeType":"ElementaryTypeName","src":"2850:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":2602,"mutability":"mutable","name":"uniswapRouter","nameLocation":"2896:13:17","nodeType":"VariableDeclaration","scope":4376,"src":"2880:29:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2601,"name":"address","nodeType":"ElementaryTypeName","src":"2880:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2604,"mutability":"mutable","name":"uniswapFactory","nameLocation":"2932:14:17","nodeType":"VariableDeclaration","scope":4376,"src":"2916:30:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2603,"name":"address","nodeType":"ElementaryTypeName","src":"2916:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"global":false,"id":2608,"libraryName":{"id":2605,"name":"EnumerableSetUpgradeable","nameLocations":["2961:24:17"],"nodeType":"IdentifierPath","referencedDeclaration":5727,"src":"2961:24:17"},"nodeType":"UsingForDirective","src":"2955:71:17","typeName":{"id":2607,"nodeType":"UserDefinedTypeName","pathNode":{"id":2606,"name":"EnumerableSetUpgradeable.AddressSet","nameLocations":["2990:24:17","3015:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":5440,"src":"2990:35:17"},"referencedDeclaration":5440,"src":"2990:35:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}}},{"anonymous":false,"eventSelector":"959525f9273812bc5ed0bd375df7492e36027567ab13116ec62673c8d46870c8","id":2619,"name":"Execute","nameLocation":"3040:7:17","nodeType":"EventDefinition","parameters":{"id":2618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2610,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"3056:4:17","nodeType":"VariableDeclaration","scope":2619,"src":"3048:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2609,"name":"address","nodeType":"ElementaryTypeName","src":"3048:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2614,"indexed":false,"mutability":"mutable","name":"calls","nameLocation":"3084:5:17","nodeType":"VariableDeclaration","scope":2619,"src":"3062:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4721_memory_ptr_$dyn_memory_ptr","typeString":"struct IBaluniV1Agent.Call[]"},"typeName":{"baseType":{"id":2612,"nodeType":"UserDefinedTypeName","pathNode":{"id":2611,"name":"IBaluniV1Agent.Call","nameLocations":["3062:14:17","3077:4:17"],"nodeType":"IdentifierPath","referencedDeclaration":4721,"src":"3062:19:17"},"referencedDeclaration":4721,"src":"3062:19:17","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4721_storage_ptr","typeString":"struct IBaluniV1Agent.Call"}},"id":2613,"nodeType":"ArrayTypeName","src":"3062:21:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4721_storage_$dyn_storage_ptr","typeString":"struct IBaluniV1Agent.Call[]"}},"visibility":"internal"},{"constant":false,"id":2617,"indexed":false,"mutability":"mutable","name":"tokensReturn","nameLocation":"3101:12:17","nodeType":"VariableDeclaration","scope":2619,"src":"3091:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2615,"name":"address","nodeType":"ElementaryTypeName","src":"3091:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2616,"nodeType":"ArrayTypeName","src":"3091:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3047:67:17"},"src":"3034:81:17"},{"anonymous":false,"eventSelector":"cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5","id":2625,"name":"Burn","nameLocation":"3127:4:17","nodeType":"EventDefinition","parameters":{"id":2624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2621,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"3140:4:17","nodeType":"VariableDeclaration","scope":2625,"src":"3132:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2620,"name":"address","nodeType":"ElementaryTypeName","src":"3132:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2623,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"3154:5:17","nodeType":"VariableDeclaration","scope":2625,"src":"3146:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2622,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3131:29:17"},"src":"3121:40:17"},{"anonymous":false,"eventSelector":"0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885","id":2631,"name":"Mint","nameLocation":"3173:4:17","nodeType":"EventDefinition","parameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2627,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"3186:4:17","nodeType":"VariableDeclaration","scope":2631,"src":"3178:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2626,"name":"address","nodeType":"ElementaryTypeName","src":"3178:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2629,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"3200:5:17","nodeType":"VariableDeclaration","scope":2631,"src":"3192:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2628,"name":"uint256","nodeType":"ElementaryTypeName","src":"3192:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3177:29:17"},"src":"3167:40:17"},{"anonymous":false,"eventSelector":"bea1b31142ae4b1f4efad240349036d718b7950d246c127768097ccf602fc7e0","id":2635,"name":"ChangeBpsFee","nameLocation":"3219:12:17","nodeType":"EventDefinition","parameters":{"id":2634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2633,"indexed":false,"mutability":"mutable","name":"newFee","nameLocation":"3240:6:17","nodeType":"VariableDeclaration","scope":2635,"src":"3232:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2632,"name":"uint256","nodeType":"ElementaryTypeName","src":"3232:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3231:16:17"},"src":"3213:35:17"},{"anonymous":false,"eventSelector":"2960baf6793bc0b6accc4e85d9eeae1bee7db9b218d2d95905336cda49e740e2","id":2639,"name":"ChangeRewardPool","nameLocation":"3260:16:17","nodeType":"EventDefinition","parameters":{"id":2638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"indexed":false,"mutability":"mutable","name":"pool","nameLocation":"3285:4:17","nodeType":"VariableDeclaration","scope":2639,"src":"3277:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2636,"name":"address","nodeType":"ElementaryTypeName","src":"3277:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3276:14:17"},"src":"3254:37:17"},{"anonymous":false,"eventSelector":"dd970dd9b5bfe707922155b058a407655cb18288b807e2216442bca8ad83d6b5","id":2645,"name":"Log","nameLocation":"3303:3:17","nodeType":"EventDefinition","parameters":{"id":2644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2641,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"3314:7:17","nodeType":"VariableDeclaration","scope":2645,"src":"3307:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2640,"name":"string","nodeType":"ElementaryTypeName","src":"3307:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2643,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"3331:5:17","nodeType":"VariableDeclaration","scope":2645,"src":"3323:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2642,"name":"uint256","nodeType":"ElementaryTypeName","src":"3323:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3306:31:17"},"src":"3297:41:17"},{"body":{"id":2738,"nodeType":"Block","src":"3942:605:17","statements":[{"expression":{"arguments":[{"hexValue":"42616c756e69","id":2664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3966:8:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d434daf865c4172431fe963e09dfffee59bf02a039f2a16ac1512baa0b52f5ad","typeString":"literal_string \"Baluni\""},"value":"Baluni"},{"hexValue":"42414c554e49","id":2665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3976:8:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7dbbcf8e986894bb951b03a039da22e5dd38b473b6e36e83d09344a88817b0fb","typeString":"literal_string \"BALUNI\""},"value":"BALUNI"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d434daf865c4172431fe963e09dfffee59bf02a039f2a16ac1512baa0b52f5ad","typeString":"literal_string \"Baluni\""},{"typeIdentifier":"t_stringliteral_7dbbcf8e986894bb951b03a039da22e5dd38b473b6e36e83d09344a88817b0fb","typeString":"literal_string \"BALUNI\""}],"id":2663,"name":"__ERC20_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"3953:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3953:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2667,"nodeType":"ExpressionStatement","src":"3953:32:17"},{"expression":{"arguments":[{"expression":{"id":2669,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4011:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4015:6:17","memberName":"sender","nodeType":"MemberAccess","src":"4011:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2668,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"3996:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3996:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2672,"nodeType":"ExpressionStatement","src":"3996:26:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2673,"name":"__ReentrancyGuard_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"4033:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4033:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2675,"nodeType":"ExpressionStatement","src":"4033:24:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2676,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"4068:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4068:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2678,"nodeType":"ExpressionStatement","src":"4068:24:17"},{"expression":{"arguments":[{"arguments":[{"id":2682,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4117:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}],"id":2681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4109:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2680,"name":"address","nodeType":"ElementaryTypeName","src":"4109:7:17","typeDescriptions":{}}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4109:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":2684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4124:7:17","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"id":2679,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"4103:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2686,"nodeType":"ExpressionStatement","src":"4103:29:17"},{"expression":{"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2687,"name":"_MAX_BPS_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"4145:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"353030","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4160:3:17","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"src":"4145:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2690,"nodeType":"ExpressionStatement","src":"4145:18:17"},{"expression":{"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2691,"name":"_BPS_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"4174:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3330","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4185:2:17","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"src":"4174:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2694,"nodeType":"ExpressionStatement","src":"4174:13:17"},{"expression":{"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2695,"name":"_BPS_BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"4207:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3130303030","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4219:5:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"4207:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2698,"nodeType":"ExpressionStatement","src":"4207:17:17"},{"expression":{"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2699,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"4235:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2700,"name":"_usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"4242:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4235:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2702,"nodeType":"ExpressionStatement","src":"4235:12:17"},{"expression":{"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2703,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"4258:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2704,"name":"_wnative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"4268:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4258:18:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2706,"nodeType":"ExpressionStatement","src":"4258:18:17"},{"expression":{"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2707,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"4287:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2708,"name":"_1inchSpotAgg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"4296:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4287:22:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2710,"nodeType":"ExpressionStatement","src":"4287:22:17"},{"expression":{"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2711,"name":"uniswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"4345:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2712,"name":"_uniRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"4361:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4345:26:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2714,"nodeType":"ExpressionStatement","src":"4345:26:17"},{"expression":{"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2715,"name":"uniswapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"4382:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2716,"name":"_uniFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"4399:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4382:28:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2718,"nodeType":"ExpressionStatement","src":"4382:28:17"},{"expression":{"arguments":[{"id":2722,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"4450:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},{"arguments":[{"id":2725,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"4466:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4458:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2723,"name":"address","nodeType":"ElementaryTypeName","src":"4458:7:17","typeDescriptions":{}}},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4458:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AddressSet_$5440_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2719,"name":"EnumerableSetUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"4421:24:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnumerableSetUpgradeable_$5727_$","typeString":"type(library EnumerableSetUpgradeable)"}},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4446:3:17","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":5467,"src":"4421:28:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$5440_storage_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4421:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2728,"nodeType":"ExpressionStatement","src":"4421:51:17"},{"expression":{"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2729,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"4483:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2730,"name":"_rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"4496:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4483:24:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2732,"nodeType":"ExpressionStatement","src":"4483:24:17"},{"expression":{"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2733,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"4518:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2734,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4529:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4533:6:17","memberName":"sender","nodeType":"MemberAccess","src":"4529:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4518:21:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2737,"nodeType":"ExpressionStatement","src":"4518:21:17"}]},"documentation":{"id":2646,"nodeType":"StructuredDocumentation","src":"3346:372:17","text":" @dev Initializes the BaluniV1Router contract.\n It sets the initial values for various variables and mints 1 ether to the contract's address.\n It also sets the USDC token address, WNATIVE token address, oracle address, Uniswap router address, and Uniswap factory address.\n Finally, it adds the USDC token address to the tokens set."},"functionSelector":"cc2a9a5b","id":2739,"implemented":true,"kind":"function","modifiers":[{"id":2661,"kind":"modifierInvocation","modifierName":{"id":2660,"name":"initializer","nameLocations":["3930:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"3930:11:17"},"nodeType":"ModifierInvocation","src":"3930:11:17"}],"name":"initialize","nameLocation":"3733:10:17","nodeType":"FunctionDefinition","parameters":{"id":2659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"_usdc","nameLocation":"3762:5:17","nodeType":"VariableDeclaration","scope":2739,"src":"3754:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2647,"name":"address","nodeType":"ElementaryTypeName","src":"3754:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2650,"mutability":"mutable","name":"_wnative","nameLocation":"3786:8:17","nodeType":"VariableDeclaration","scope":2739,"src":"3778:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2649,"name":"address","nodeType":"ElementaryTypeName","src":"3778:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2652,"mutability":"mutable","name":"_1inchSpotAgg","nameLocation":"3813:13:17","nodeType":"VariableDeclaration","scope":2739,"src":"3805:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2651,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2654,"mutability":"mutable","name":"_uniRouter","nameLocation":"3845:10:17","nodeType":"VariableDeclaration","scope":2739,"src":"3837:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2653,"name":"address","nodeType":"ElementaryTypeName","src":"3837:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2656,"mutability":"mutable","name":"_uniFactory","nameLocation":"3874:11:17","nodeType":"VariableDeclaration","scope":2739,"src":"3866:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2655,"name":"address","nodeType":"ElementaryTypeName","src":"3866:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2658,"mutability":"mutable","name":"_rebalancer","nameLocation":"3904:11:17","nodeType":"VariableDeclaration","scope":2739,"src":"3896:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2657,"name":"address","nodeType":"ElementaryTypeName","src":"3896:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3743:179:17"},"returnParameters":{"id":2662,"nodeType":"ParameterList","parameters":[],"src":"3942:0:17"},"scope":4376,"src":"3724:823:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2811,"nodeType":"Block","src":"5324:491:17","statements":[{"expression":{"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2760,"name":"_MAX_BPS_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"5413:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"353030","id":2761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5428:3:17","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"src":"5413:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2763,"nodeType":"ExpressionStatement","src":"5413:18:17"},{"expression":{"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2764,"name":"_BPS_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"5442:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3330","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5453:2:17","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"src":"5442:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2767,"nodeType":"ExpressionStatement","src":"5442:13:17"},{"expression":{"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2768,"name":"_BPS_BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"5475:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3130303030","id":2769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5487:5:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"5475:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2771,"nodeType":"ExpressionStatement","src":"5475:17:17"},{"expression":{"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2772,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"5503:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2773,"name":"_usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"5510:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5503:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2775,"nodeType":"ExpressionStatement","src":"5503:12:17"},{"expression":{"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2776,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"5526:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2777,"name":"_wnative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"5536:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5526:18:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2779,"nodeType":"ExpressionStatement","src":"5526:18:17"},{"expression":{"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2780,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"5555:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2781,"name":"_1inchSpotAgg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"5564:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5555:22:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2783,"nodeType":"ExpressionStatement","src":"5555:22:17"},{"expression":{"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2784,"name":"uniswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"5613:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2785,"name":"_uniRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"5629:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5613:26:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2787,"nodeType":"ExpressionStatement","src":"5613:26:17"},{"expression":{"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2788,"name":"uniswapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"5650:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2789,"name":"_uniFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"5667:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5650:28:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2791,"nodeType":"ExpressionStatement","src":"5650:28:17"},{"expression":{"arguments":[{"id":2795,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"5718:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},{"arguments":[{"id":2798,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"5734:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5726:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2796,"name":"address","nodeType":"ElementaryTypeName","src":"5726:7:17","typeDescriptions":{}}},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5726:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AddressSet_$5440_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2792,"name":"EnumerableSetUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"5689:24:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnumerableSetUpgradeable_$5727_$","typeString":"type(library EnumerableSetUpgradeable)"}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5714:3:17","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":5467,"src":"5689:28:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$5440_storage_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"}},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5689:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2801,"nodeType":"ExpressionStatement","src":"5689:51:17"},{"expression":{"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2802,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"5751:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2803,"name":"_rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"5764:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5751:24:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2805,"nodeType":"ExpressionStatement","src":"5751:24:17"},{"expression":{"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2806,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5786:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2807,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5797:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5801:6:17","memberName":"sender","nodeType":"MemberAccess","src":"5797:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5786:21:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2810,"nodeType":"ExpressionStatement","src":"5786:21:17"}]},"documentation":{"id":2740,"nodeType":"StructuredDocumentation","src":"4555:507:17","text":" @dev Reinitializes the BaluniV1Router contract with the specified parameters.\n @param _usdc The address of the USDC token contract.\n @param _wnative The address of the WNative token contract.\n @param _1inchSpotAgg The address of the 1inch Spot Aggregator oracle contract.\n @param _uniRouter The address of the Uniswap router contract.\n @param _uniFactory The address of the Uniswap factory contract.\n @param version The version of the contract."},"functionSelector":"b0d60ba0","id":2812,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2757,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"5315:7:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":2758,"kind":"modifierInvocation","modifierName":{"id":2756,"name":"reinitializer","nameLocations":["5301:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":349,"src":"5301:13:17"},"nodeType":"ModifierInvocation","src":"5301:22:17"}],"name":"reinitialize","nameLocation":"5077:12:17","nodeType":"FunctionDefinition","parameters":{"id":2755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2742,"mutability":"mutable","name":"_usdc","nameLocation":"5108:5:17","nodeType":"VariableDeclaration","scope":2812,"src":"5100:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2741,"name":"address","nodeType":"ElementaryTypeName","src":"5100:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2744,"mutability":"mutable","name":"_wnative","nameLocation":"5132:8:17","nodeType":"VariableDeclaration","scope":2812,"src":"5124:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2743,"name":"address","nodeType":"ElementaryTypeName","src":"5124:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2746,"mutability":"mutable","name":"_1inchSpotAgg","nameLocation":"5159:13:17","nodeType":"VariableDeclaration","scope":2812,"src":"5151:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2745,"name":"address","nodeType":"ElementaryTypeName","src":"5151:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2748,"mutability":"mutable","name":"_uniRouter","nameLocation":"5191:10:17","nodeType":"VariableDeclaration","scope":2812,"src":"5183:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2747,"name":"address","nodeType":"ElementaryTypeName","src":"5183:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2750,"mutability":"mutable","name":"_uniFactory","nameLocation":"5220:11:17","nodeType":"VariableDeclaration","scope":2812,"src":"5212:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2749,"name":"address","nodeType":"ElementaryTypeName","src":"5212:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2752,"mutability":"mutable","name":"_rebalancer","nameLocation":"5250:11:17","nodeType":"VariableDeclaration","scope":2812,"src":"5242:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2751,"name":"address","nodeType":"ElementaryTypeName","src":"5242:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2754,"mutability":"mutable","name":"version","nameLocation":"5279:7:17","nodeType":"VariableDeclaration","scope":2812,"src":"5272:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2753,"name":"uint64","nodeType":"ElementaryTypeName","src":"5272:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"5089:204:17"},"returnParameters":{"id":2759,"nodeType":"ParameterList","parameters":[],"src":"5324:0:17"},"scope":4376,"src":"5068:747:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[584],"body":{"id":2821,"nodeType":"Block","src":"6165:2:17","statements":[]},"documentation":{"id":2813,"nodeType":"StructuredDocumentation","src":"5823:254:17","text":" @dev Internal function to authorize an upgrade to a new implementation contract.\n @param newImplementation The address of the new implementation contract.\n @notice This function can only be called by the contract owner."},"id":2822,"implemented":true,"kind":"function","modifiers":[{"id":2819,"kind":"modifierInvocation","modifierName":{"id":2818,"name":"onlyOwner","nameLocations":["6155:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"6155:9:17"},"nodeType":"ModifierInvocation","src":"6155:9:17"}],"name":"_authorizeUpgrade","nameLocation":"6092:17:17","nodeType":"FunctionDefinition","overrides":{"id":2817,"nodeType":"OverrideSpecifier","overrides":[],"src":"6146:8:17"},"parameters":{"id":2816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2815,"mutability":"mutable","name":"newImplementation","nameLocation":"6118:17:17","nodeType":"VariableDeclaration","scope":2822,"src":"6110:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2814,"name":"address","nodeType":"ElementaryTypeName","src":"6110:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6109:27:17"},"returnParameters":{"id":2820,"nodeType":"ParameterList","parameters":[],"src":"6165:0:17"},"scope":4376,"src":"6083:84:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2832,"nodeType":"Block","src":"6355:54:17","statements":[{"expression":{"arguments":[{"hexValue":"31653138","id":2829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"id":2828,"name":"_calculateBaluniToUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"6373:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2827,"id":2831,"nodeType":"Return","src":"6366:35:17"}]},"documentation":{"id":2823,"nodeType":"StructuredDocumentation","src":"6175:123:17","text":" @dev Returns the unit price of the token in USDC.\n @return The unit price of the token in USDC."},"functionSelector":"e73faa2d","id":2833,"implemented":true,"kind":"function","modifiers":[],"name":"unitPrice","nameLocation":"6313:9:17","nodeType":"FunctionDefinition","parameters":{"id":2824,"nodeType":"ParameterList","parameters":[],"src":"6322:2:17"},"returnParameters":{"id":2827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2833,"src":"6346:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2825,"name":"uint256","nodeType":"ElementaryTypeName","src":"6346:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6345:9:17"},"scope":4376,"src":"6304:105:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2849,"nodeType":"Block","src":"6612:74:17","statements":[{"expression":{"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2841,"name":"_BPS_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"6623:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2842,"name":"_newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"6634:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6623:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2844,"nodeType":"ExpressionStatement","src":"6623:18:17"},{"eventCall":{"arguments":[{"id":2846,"name":"_newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"6670:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2845,"name":"ChangeBpsFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"6657:12:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6657:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2848,"nodeType":"EmitStatement","src":"6652:26:17"}]},"documentation":{"id":2834,"nodeType":"StructuredDocumentation","src":"6417:131:17","text":" @dev Changes the basis points fee for the contract.\n @param _newFee The new basis points fee to be set."},"functionSelector":"06497cb9","id":2850,"implemented":true,"kind":"function","modifiers":[{"id":2839,"kind":"modifierInvocation","modifierName":{"id":2838,"name":"onlyOwner","nameLocations":["6602:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"6602:9:17"},"nodeType":"ModifierInvocation","src":"6602:9:17"}],"name":"changeBpsFee","nameLocation":"6563:12:17","nodeType":"FunctionDefinition","parameters":{"id":2837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"_newFee","nameLocation":"6584:7:17","nodeType":"VariableDeclaration","scope":2850,"src":"6576:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6575:17:17"},"returnParameters":{"id":2840,"nodeType":"ParameterList","parameters":[],"src":"6612:0:17"},"scope":4376,"src":"6554:132:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2862,"nodeType":"Block","src":"6924:42:17","statements":[{"expression":{"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2858,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"6935:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2859,"name":"_newTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"6946:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6935:23:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2861,"nodeType":"ExpressionStatement","src":"6935:23:17"}]},"documentation":{"id":2851,"nodeType":"StructuredDocumentation","src":"6694:159:17","text":" @dev Changes the treasury address.\n Can only be called by the contract owner.\n @param _newTreasury The new treasury address."},"functionSelector":"b14f2a39","id":2863,"implemented":true,"kind":"function","modifiers":[{"id":2856,"kind":"modifierInvocation","modifierName":{"id":2855,"name":"onlyOwner","nameLocations":["6914:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"6914:9:17"},"nodeType":"ModifierInvocation","src":"6914:9:17"}],"name":"changeTreasury","nameLocation":"6868:14:17","nodeType":"FunctionDefinition","parameters":{"id":2854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"_newTreasury","nameLocation":"6891:12:17","nodeType":"VariableDeclaration","scope":2863,"src":"6883:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2852,"name":"address","nodeType":"ElementaryTypeName","src":"6883:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6882:22:17"},"returnParameters":{"id":2857,"nodeType":"ParameterList","parameters":[],"src":"6924:0:17"},"scope":4376,"src":"6859:107:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2875,"nodeType":"Block","src":"7254:46:17","statements":[{"expression":{"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2871,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"7265:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2872,"name":"_newRebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"7278:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7265:27:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2874,"nodeType":"ExpressionStatement","src":"7265:27:17"}]},"documentation":{"id":2864,"nodeType":"StructuredDocumentation","src":"6974:205:17","text":" @dev Changes the address of the rebalancer contract.\n Can only be called by the contract owner.\n @param _newRebalancer The new address of the rebalancer contract."},"functionSelector":"0918281b","id":2876,"implemented":true,"kind":"function","modifiers":[{"id":2869,"kind":"modifierInvocation","modifierName":{"id":2868,"name":"onlyOwner","nameLocations":["7244:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"7244:9:17"},"nodeType":"ModifierInvocation","src":"7244:9:17"}],"name":"changeRebalancer","nameLocation":"7194:16:17","nodeType":"FunctionDefinition","parameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"mutability":"mutable","name":"_newRebalancer","nameLocation":"7219:14:17","nodeType":"VariableDeclaration","scope":2876,"src":"7211:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2865,"name":"address","nodeType":"ElementaryTypeName","src":"7211:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7210:24:17"},"returnParameters":{"id":2870,"nodeType":"ParameterList","parameters":[],"src":"7254:0:17"},"scope":4376,"src":"7185:115:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2888,"nodeType":"Block","src":"7586:47:17","statements":[{"expression":{"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2884,"name":"agentFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"7597:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2885,"name":"_agentFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"7612:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7597:28:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2887,"nodeType":"ExpressionStatement","src":"7597:28:17"}]},"documentation":{"id":2877,"nodeType":"StructuredDocumentation","src":"7308:202:17","text":" @dev Changes the address of the agent factory contract.\n Can only be called by the contract owner.\n @param _agentFactory The new address of the agent factory contract."},"functionSelector":"0a38abab","id":2889,"implemented":true,"kind":"function","modifiers":[{"id":2882,"kind":"modifierInvocation","modifierName":{"id":2881,"name":"onlyOwner","nameLocations":["7576:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"7576:9:17"},"nodeType":"ModifierInvocation","src":"7576:9:17"}],"name":"changeAgentFactory","nameLocation":"7525:18:17","nodeType":"FunctionDefinition","parameters":{"id":2880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2879,"mutability":"mutable","name":"_agentFactory","nameLocation":"7552:13:17","nodeType":"VariableDeclaration","scope":2889,"src":"7544:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2878,"name":"address","nodeType":"ElementaryTypeName","src":"7544:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7543:23:17"},"returnParameters":{"id":2883,"nodeType":"ParameterList","parameters":[],"src":"7586:0:17"},"scope":4376,"src":"7516:117:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3178,"nodeType":"Block","src":"8368:1999:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2905,"name":"agentFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"8395:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8387:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2903,"name":"address","nodeType":"ElementaryTypeName","src":"8387:7:17","typeDescriptions":{}}},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8387:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8420:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8412:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2907,"name":"address","nodeType":"ElementaryTypeName","src":"8412:7:17","typeDescriptions":{}}},"id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8412:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8387:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4167656e7420666163746f7279206e6f7420736574","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8424:23:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c0699f179d2a1b62cb97d8e7fffb6f849ca18ed4e697b2f010f29e743716b888","typeString":"literal_string \"Agent factory not set\""},"value":"Agent factory not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c0699f179d2a1b62cb97d8e7fffb6f849ca18ed4e697b2f010f29e743716b888","typeString":"literal_string \"Agent factory not set\""}],"id":2902,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8379:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8379:69:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2914,"nodeType":"ExpressionStatement","src":"8379:69:17"},{"assignments":[2916],"declarations":[{"constant":false,"id":2916,"mutability":"mutable","name":"agent","nameLocation":"8467:5:17","nodeType":"VariableDeclaration","scope":3178,"src":"8459:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2915,"name":"address","nodeType":"ElementaryTypeName","src":"8459:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2924,"initialValue":{"arguments":[{"expression":{"id":2921,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8528:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8532:6:17","memberName":"sender","nodeType":"MemberAccess","src":"8528:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2918,"name":"agentFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"8497:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2917,"name":"IBaluniV1AgentFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"8475:21:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1AgentFactory_$4749_$","typeString":"type(contract IBaluniV1AgentFactory)"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8475:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1AgentFactory_$4749","typeString":"contract IBaluniV1AgentFactory"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8511:16:17","memberName":"getOrCreateAgent","nodeType":"MemberAccess","referencedDeclaration":4748,"src":"8475:52:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$_t_address_$","typeString":"function (address) external returns (address)"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8475:64:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8459:80:17"},{"assignments":[2929],"declarations":[{"constant":false,"id":2929,"mutability":"mutable","name":"isTokenNew","nameLocation":"8564:10:17","nodeType":"VariableDeclaration","scope":3178,"src":"8550:24:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":2927,"name":"bool","nodeType":"ElementaryTypeName","src":"8550:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2928,"nodeType":"ArrayTypeName","src":"8550:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"id":2936,"initialValue":{"arguments":[{"expression":{"id":2933,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"8588:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8601:6:17","memberName":"length","nodeType":"MemberAccess","src":"8588:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8577:10:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":2930,"name":"bool","nodeType":"ElementaryTypeName","src":"8581:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2931,"nodeType":"ArrayTypeName","src":"8581:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8577:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8550:58:17"},{"assignments":[2941],"declarations":[{"constant":false,"id":2941,"mutability":"mutable","name":"tokenBalances","nameLocation":"8636:13:17","nodeType":"VariableDeclaration","scope":3178,"src":"8619:30:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2939,"name":"uint256","nodeType":"ElementaryTypeName","src":"8619:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2940,"nodeType":"ArrayTypeName","src":"8619:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2948,"initialValue":{"arguments":[{"expression":{"id":2945,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"8666:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8679:6:17","memberName":"length","nodeType":"MemberAccess","src":"8666:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8652:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2942,"name":"uint256","nodeType":"ElementaryTypeName","src":"8656:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2943,"nodeType":"ArrayTypeName","src":"8656:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8652:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8619:67:17"},{"body":{"id":2989,"nodeType":"Block","src":"8749:184:17","statements":[{"expression":{"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2960,"name":"isTokenNew","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"8764:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":2962,"indexExpression":{"id":2961,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"8775:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8764:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8780:59:17","subExpression":{"arguments":[{"id":2965,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"8815:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},{"baseExpression":{"id":2966,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"8823:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2968,"indexExpression":{"id":2967,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"8836:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8823:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AddressSet_$5440_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2963,"name":"EnumerableSetUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"8781:24:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnumerableSetUpgradeable_$5727_$","typeString":"type(library EnumerableSetUpgradeable)"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8806:8:17","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":5521,"src":"8781:33:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$5440_storage_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) view returns (bool)"}},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8781:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8764:75:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2972,"nodeType":"ExpressionStatement","src":"8764:75:17"},{"expression":{"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2973,"name":"tokenBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"8854:13:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2975,"indexExpression":{"id":2974,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"8868:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8854:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2984,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8915:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}],"id":2983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8907:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2982,"name":"address","nodeType":"ElementaryTypeName","src":"8907:7:17","typeDescriptions":{}}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8907:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":2977,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"8880:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2979,"indexExpression":{"id":2978,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"8893:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8880:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2976,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"8873:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8873:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8897:9:17","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1917,"src":"8873:33:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8873:48:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8854:67:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2988,"nodeType":"ExpressionStatement","src":"8854:67:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2953,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"8719:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2954,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"8723:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8736:6:17","memberName":"length","nodeType":"MemberAccess","src":"8723:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8719:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2990,"initializationExpression":{"assignments":[2950],"declarations":[{"constant":false,"id":2950,"mutability":"mutable","name":"i","nameLocation":"8712:1:17","nodeType":"VariableDeclaration","scope":2990,"src":"8704:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2949,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2952,"initialValue":{"hexValue":"30","id":2951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8716:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8744:3:17","subExpression":{"id":2957,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"8744:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2959,"nodeType":"ExpressionStatement","src":"8744:3:17"},"nodeType":"ForStatement","src":"8699:234:17"},{"expression":{"arguments":[{"id":2995,"name":"calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"8975:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4721_memory_ptr_$dyn_memory_ptr","typeString":"struct IBaluniV1Agent.Call memory[] memory"}},{"id":2996,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"8982:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Call_$4721_memory_ptr_$dyn_memory_ptr","typeString":"struct IBaluniV1Agent.Call memory[] memory"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"expression":{"arguments":[{"id":2992,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"8960:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2991,"name":"IBaluniV1Agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"8945:14:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Agent_$4732_$","typeString":"type(contract IBaluniV1Agent)"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8945:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Agent_$4732","typeString":"contract IBaluniV1Agent"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8967:7:17","memberName":"execute","nodeType":"MemberAccess","referencedDeclaration":4731,"src":"8945:29:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_array$_t_struct$_Call_$4721_memory_ptr_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (struct IBaluniV1Agent.Call memory[] memory,address[] memory) external"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8945:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2998,"nodeType":"ExpressionStatement","src":"8945:50:17"},{"body":{"id":3176,"nodeType":"Block","src":"9058:1302:17","statements":[{"assignments":[3011],"declarations":[{"constant":false,"id":3011,"mutability":"mutable","name":"token","nameLocation":"9081:5:17","nodeType":"VariableDeclaration","scope":3176,"src":"9073:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3010,"name":"address","nodeType":"ElementaryTypeName","src":"9073:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3015,"initialValue":{"baseExpression":{"id":3012,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"9089:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3014,"indexExpression":{"id":3013,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"9102:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9089:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9073:31:17"},{"assignments":[3017],"declarations":[{"constant":false,"id":3017,"mutability":"mutable","name":"balance","nameLocation":"9127:7:17","nodeType":"VariableDeclaration","scope":3176,"src":"9119:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3016,"name":"uint256","nodeType":"ElementaryTypeName","src":"9119:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3027,"initialValue":{"arguments":[{"arguments":[{"id":3024,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9169:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}],"id":3023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9161:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3022,"name":"address","nodeType":"ElementaryTypeName","src":"9161:7:17","typeDescriptions":{}}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9161:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3019,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"9144:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3018,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"9137:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9137:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9151:9:17","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1917,"src":"9137:23:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9137:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9119:56:17"},{"assignments":[3029],"declarations":[{"constant":false,"id":3029,"mutability":"mutable","name":"poolNative3000","nameLocation":"9198:14:17","nodeType":"VariableDeclaration","scope":3176,"src":"9190:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3028,"name":"address","nodeType":"ElementaryTypeName","src":"9190:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3041,"initialValue":{"arguments":[{"id":3034,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"9257:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3037,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"9272:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9264:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3035,"name":"address","nodeType":"ElementaryTypeName","src":"9264:7:17","typeDescriptions":{}}},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9264:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"33303030","id":3039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9282:4:17","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"}],"expression":{"arguments":[{"id":3031,"name":"uniswapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"9233:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3030,"name":"IUniswapV3Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"9215:17:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Factory_$2432_$","typeString":"type(contract IUniswapV3Factory)"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9215:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$2432","typeString":"contract IUniswapV3Factory"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9249:7:17","memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":2405,"src":"9215:41:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$","typeString":"function (address,address,uint24) view external returns (address)"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9215:72:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9190:97:17"},{"assignments":[3043],"declarations":[{"constant":false,"id":3043,"mutability":"mutable","name":"poolNative500","nameLocation":"9310:13:17","nodeType":"VariableDeclaration","scope":3176,"src":"9302:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3042,"name":"address","nodeType":"ElementaryTypeName","src":"9302:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3055,"initialValue":{"arguments":[{"id":3048,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"9368:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3051,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"9383:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9375:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3049,"name":"address","nodeType":"ElementaryTypeName","src":"9375:7:17","typeDescriptions":{}}},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9375:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"353030","id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9393:3:17","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"}],"expression":{"arguments":[{"id":3045,"name":"uniswapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"9344:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3044,"name":"IUniswapV3Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"9326:17:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Factory_$2432_$","typeString":"type(contract IUniswapV3Factory)"}},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9326:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$2432","typeString":"contract IUniswapV3Factory"}},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9360:7:17","memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":2405,"src":"9326:41:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$","typeString":"function (address,address,uint24) view external returns (address)"}},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9326:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9302:95:17"},{"assignments":[3057],"declarations":[{"constant":false,"id":3057,"mutability":"mutable","name":"poolUSDC500","nameLocation":"9420:11:17","nodeType":"VariableDeclaration","scope":3176,"src":"9412:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3056,"name":"address","nodeType":"ElementaryTypeName","src":"9412:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3069,"initialValue":{"arguments":[{"id":3062,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"9476:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3065,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"9491:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9483:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3063,"name":"address","nodeType":"ElementaryTypeName","src":"9483:7:17","typeDescriptions":{}}},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9483:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"353030","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9498:3:17","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"}],"expression":{"arguments":[{"id":3059,"name":"uniswapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"9452:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3058,"name":"IUniswapV3Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"9434:17:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Factory_$2432_$","typeString":"type(contract IUniswapV3Factory)"}},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9434:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$2432","typeString":"contract IUniswapV3Factory"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9468:7:17","memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":2405,"src":"9434:41:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$","typeString":"function (address,address,uint24) view external returns (address)"}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9434:68:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9412:90:17"},{"assignments":[3071],"declarations":[{"constant":false,"id":3071,"mutability":"mutable","name":"poolUSDC3000","nameLocation":"9525:12:17","nodeType":"VariableDeclaration","scope":3176,"src":"9517:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3070,"name":"address","nodeType":"ElementaryTypeName","src":"9517:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3083,"initialValue":{"arguments":[{"id":3076,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"9582:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3079,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"9597:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9589:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3077,"name":"address","nodeType":"ElementaryTypeName","src":"9589:7:17","typeDescriptions":{}}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9589:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"33303030","id":3081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9604:4:17","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"}],"expression":{"arguments":[{"id":3073,"name":"uniswapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"9558:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3072,"name":"IUniswapV3Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"9540:17:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Factory_$2432_$","typeString":"type(contract IUniswapV3Factory)"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9540:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$2432","typeString":"contract IUniswapV3Factory"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9574:7:17","memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":2405,"src":"9540:41:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$","typeString":"function (address,address,uint24) view external returns (address)"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9540:69:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9517:92:17"},{"assignments":[3085],"declarations":[{"constant":false,"id":3085,"mutability":"mutable","name":"poolExist","nameLocation":"9629:9:17","nodeType":"VariableDeclaration","scope":3176,"src":"9624:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3084,"name":"bool","nodeType":"ElementaryTypeName","src":"9624:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3113,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3086,"name":"poolNative3000","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"9641:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9667:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9659:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3087,"name":"address","nodeType":"ElementaryTypeName","src":"9659:7:17","typeDescriptions":{}}},"id":3090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9659:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9641:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3092,"name":"poolNative500","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"9690:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9715:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3093,"name":"address","nodeType":"ElementaryTypeName","src":"9707:7:17","typeDescriptions":{}}},"id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9690:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9641:76:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3099,"name":"poolUSDC3000","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"9738:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9762:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9754:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3100,"name":"address","nodeType":"ElementaryTypeName","src":"9754:7:17","typeDescriptions":{}}},"id":3103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9754:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9738:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9641:123:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3106,"name":"poolUSDC500","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"9785:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9808:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9800:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3107,"name":"address","nodeType":"ElementaryTypeName","src":"9800:7:17","typeDescriptions":{}}},"id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9800:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9785:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9641:169:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9624:186:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3114,"name":"isTokenNew","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"9831:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3116,"indexExpression":{"id":3115,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"9842:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9831:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3117,"name":"poolExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"9848:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9831:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3127,"nodeType":"IfStatement","src":"9827:110:17","trueBody":{"id":3126,"nodeType":"Block","src":"9859:78:17","statements":[{"expression":{"arguments":[{"id":3122,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"9907:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},{"id":3123,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"9915:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AddressSet_$5440_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3119,"name":"EnumerableSetUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"9878:24:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnumerableSetUpgradeable_$5727_$","typeString":"type(library EnumerableSetUpgradeable)"}},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9903:3:17","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":5467,"src":"9878:28:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$5440_storage_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"}},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9878:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3125,"nodeType":"ExpressionStatement","src":"9878:43:17"}]}},{"assignments":[3129],"declarations":[{"constant":false,"id":3129,"mutability":"mutable","name":"amountReceived","nameLocation":"9961:14:17","nodeType":"VariableDeclaration","scope":3176,"src":"9953:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3128,"name":"uint256","nodeType":"ElementaryTypeName","src":"9953:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3135,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3130,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"9978:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":3131,"name":"tokenBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"9988:13:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3133,"indexExpression":{"id":3132,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"10002:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9988:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9978:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9953:51:17"},{"condition":{"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10025:10:17","subExpression":{"id":3136,"name":"poolExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"10026:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3149,"nodeType":"IfStatement","src":"10021:126:17","trueBody":{"id":3148,"nodeType":"Block","src":"10037:110:17","statements":[{"expression":{"arguments":[{"expression":{"id":3142,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10079:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10083:6:17","memberName":"sender","nodeType":"MemberAccess","src":"10079:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3144,"name":"amountReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"10091:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3139,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"10063:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3138,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"10056:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10070:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"10056:22:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3146,"nodeType":"ExpressionStatement","src":"10056:50:17"},{"functionReturnParameters":2901,"id":3147,"nodeType":"Return","src":"10125:7:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3150,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"10167:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"baseExpression":{"id":3151,"name":"tokenBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"10177:13:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3153,"indexExpression":{"id":3152,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"10191:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10177:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10167:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3175,"nodeType":"IfStatement","src":"10163:186:17","trueBody":{"id":3174,"nodeType":"Block","src":"10195:154:17","statements":[{"assignments":[3156],"declarations":[{"constant":false,"id":3156,"mutability":"mutable","name":"fee","nameLocation":"10222:3:17","nodeType":"VariableDeclaration","scope":3174,"src":"10214:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3155,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3163,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3157,"name":"amountReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"10229:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3158,"name":"_BPS_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"10246:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10229:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3160,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10228:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3161,"name":"_BPS_BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"10258:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10228:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10214:53:17"},{"expression":{"arguments":[{"id":3170,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"10319:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3171,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"10329:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":3165,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"10293:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3167,"indexExpression":{"id":3166,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"10306:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10293:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3164,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"10286:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10310:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"10286:32:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3173,"nodeType":"ExpressionStatement","src":"10286:47:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3003,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"9028:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3004,"name":"tokensReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"9032:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9045:6:17","memberName":"length","nodeType":"MemberAccess","src":"9032:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9028:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3177,"initializationExpression":{"assignments":[3000],"declarations":[{"constant":false,"id":3000,"mutability":"mutable","name":"i","nameLocation":"9021:1:17","nodeType":"VariableDeclaration","scope":3177,"src":"9013:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2999,"name":"uint256","nodeType":"ElementaryTypeName","src":"9013:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3002,"initialValue":{"hexValue":"30","id":3001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9025:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9013:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9053:3:17","subExpression":{"id":3007,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"9053:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3009,"nodeType":"ExpressionStatement","src":"9053:3:17"},"nodeType":"ForStatement","src":"9008:1352:17"}]},"documentation":{"id":2890,"nodeType":"StructuredDocumentation","src":"7641:615:17","text":" @dev Executes a series of calls to a BaluniV1Agent contract and handles token returns.\n @param calls An array of IBaluniV1Agent.Call structs representing the calls to be executed.\n @param tokensReturn An array of addresses representing the tokens to be returned.\n @notice This function requires the agentFactory to be set and creates a new agent if necessary.\n @notice If a token is new and a Uniswap pool exists for it, the token is added to the tokens set.\n @notice If no Uniswap pool exists for a token, the token balance is transferred back to the caller."},"functionSelector":"eedc3c50","id":3179,"implemented":true,"kind":"function","modifiers":[{"id":2900,"kind":"modifierInvocation","modifierName":{"id":2899,"name":"nonReentrant","nameLocations":["8355:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"8355:12:17"},"nodeType":"ModifierInvocation","src":"8355:12:17"}],"name":"execute","nameLocation":"8271:7:17","nodeType":"FunctionDefinition","parameters":{"id":2898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2894,"mutability":"mutable","name":"calls","nameLocation":"8308:5:17","nodeType":"VariableDeclaration","scope":3179,"src":"8279:34:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4721_memory_ptr_$dyn_memory_ptr","typeString":"struct IBaluniV1Agent.Call[]"},"typeName":{"baseType":{"id":2892,"nodeType":"UserDefinedTypeName","pathNode":{"id":2891,"name":"IBaluniV1Agent.Call","nameLocations":["8279:14:17","8294:4:17"],"nodeType":"IdentifierPath","referencedDeclaration":4721,"src":"8279:19:17"},"referencedDeclaration":4721,"src":"8279:19:17","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4721_storage_ptr","typeString":"struct IBaluniV1Agent.Call"}},"id":2893,"nodeType":"ArrayTypeName","src":"8279:21:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4721_storage_$dyn_storage_ptr","typeString":"struct IBaluniV1Agent.Call[]"}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"tokensReturn","nameLocation":"8332:12:17","nodeType":"VariableDeclaration","scope":3179,"src":"8315:29:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2895,"name":"address","nodeType":"ElementaryTypeName","src":"8315:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2896,"nodeType":"ArrayTypeName","src":"8315:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"8278:67:17"},"returnParameters":{"id":2901,"nodeType":"ParameterList","parameters":[],"src":"8368:0:17"},"scope":4376,"src":"8262:2105:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3294,"nodeType":"Block","src":"10943:896:17","statements":[{"assignments":[3186],"declarations":[{"constant":false,"id":3186,"mutability":"mutable","name":"totalERC20Balance","nameLocation":"10962:17:17","nodeType":"VariableDeclaration","scope":3294,"src":"10954:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3185,"name":"uint256","nodeType":"ElementaryTypeName","src":"10954:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3196,"initialValue":{"arguments":[{"arguments":[{"id":3193,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11014:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}],"id":3192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11006:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3191,"name":"address","nodeType":"ElementaryTypeName","src":"11006:7:17","typeDescriptions":{}}},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11006:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3188,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"10989:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3187,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"10982:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10982:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10996:9:17","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1917,"src":"10982:23:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10982:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10954:66:17"},{"assignments":[3198],"declarations":[{"constant":false,"id":3198,"mutability":"mutable","name":"pool","nameLocation":"11039:4:17","nodeType":"VariableDeclaration","scope":3294,"src":"11031:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3197,"name":"address","nodeType":"ElementaryTypeName","src":"11031:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3210,"initialValue":{"arguments":[{"id":3203,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"11088:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3206,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"11103:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11095:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3204,"name":"address","nodeType":"ElementaryTypeName","src":"11095:7:17","typeDescriptions":{}}},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11095:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"33303030","id":3208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11110:4:17","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"}],"expression":{"arguments":[{"id":3200,"name":"uniswapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"11064:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3199,"name":"IUniswapV3Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"11046:17:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Factory_$2432_$","typeString":"type(contract IUniswapV3Factory)"}},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11046:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$2432","typeString":"contract IUniswapV3Factory"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11080:7:17","memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":2405,"src":"11046:41:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$","typeString":"function (address,address,uint24) view external returns (address)"}},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11046:69:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11031:84:17"},{"expression":{"arguments":[{"id":3212,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"11141:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3215,"name":"uniswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"11156:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11148:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3213,"name":"address","nodeType":"ElementaryTypeName","src":"11148:7:17","typeDescriptions":{}}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11148:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3217,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"11172:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3211,"name":"secureApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"11126:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11126:64:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3219,"nodeType":"ExpressionStatement","src":"11126:64:17"},{"assignments":[3221],"declarations":[{"constant":false,"id":3221,"mutability":"mutable","name":"haveBalance","nameLocation":"11206:11:17","nodeType":"VariableDeclaration","scope":3294,"src":"11201:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3220,"name":"bool","nodeType":"ElementaryTypeName","src":"11201:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3225,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3222,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"11220:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11240:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11220:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"11201:40:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3226,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"11256:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11272:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11264:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3227,"name":"address","nodeType":"ElementaryTypeName","src":"11264:7:17","typeDescriptions":{}}},"id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11256:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3232,"name":"haveBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"11278:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11256:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3257,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"11493:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11509:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11501:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3258,"name":"address","nodeType":"ElementaryTypeName","src":"11501:7:17","typeDescriptions":{}}},"id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11501:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11493:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3263,"name":"haveBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"11515:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11493:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3292,"nodeType":"IfStatement","src":"11489:343:17","trueBody":{"id":3291,"nodeType":"Block","src":"11528:304:17","statements":[{"assignments":[3266],"declarations":[{"constant":false,"id":3266,"mutability":"mutable","name":"amountOutHop","nameLocation":"11551:12:17","nodeType":"VariableDeclaration","scope":3291,"src":"11543:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3265,"name":"uint256","nodeType":"ElementaryTypeName","src":"11543:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3283,"initialValue":{"arguments":[{"id":3268,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"11598:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3271,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"11630:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11622:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3269,"name":"address","nodeType":"ElementaryTypeName","src":"11622:7:17","typeDescriptions":{}}},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11622:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3275,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"11665:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11657:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3273,"name":"address","nodeType":"ElementaryTypeName","src":"11657:7:17","typeDescriptions":{}}},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11657:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3277,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"11689:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3280,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11733:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}],"id":3279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11725:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3278,"name":"address","nodeType":"ElementaryTypeName","src":"11725:7:17","typeDescriptions":{}}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11725:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3267,"name":"_multiHopSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"11566:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,address,uint256,address) returns (uint256)"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11566:187:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11543:210:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3285,"name":"amountOutHop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"11776:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11791:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11776:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53776170204661696c65642c20547279204275726e2829","id":3288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11794:25:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c9fb7880e66db2b9e57bcbd054b51a92e47b36ea36b5f97f97650ad5c3b7ba0","typeString":"literal_string \"Swap Failed, Try Burn()\""},"value":"Swap Failed, Try Burn()"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6c9fb7880e66db2b9e57bcbd054b51a92e47b36ea36b5f97f97650ad5c3b7ba0","typeString":"literal_string \"Swap Failed, Try Burn()\""}],"id":3284,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11768:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11768:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3290,"nodeType":"ExpressionStatement","src":"11768:52:17"}]}},"id":3293,"nodeType":"IfStatement","src":"11252:580:17","trueBody":{"id":3256,"nodeType":"Block","src":"11291:192:17","statements":[{"assignments":[3235],"declarations":[{"constant":false,"id":3235,"mutability":"mutable","name":"singleSwapResult","nameLocation":"11314:16:17","nodeType":"VariableDeclaration","scope":3256,"src":"11306:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3234,"name":"uint256","nodeType":"ElementaryTypeName","src":"11306:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3248,"initialValue":{"arguments":[{"id":3237,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"11345:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3240,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"11360:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11352:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3238,"name":"address","nodeType":"ElementaryTypeName","src":"11352:7:17","typeDescriptions":{}}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11352:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3242,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"11367:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3245,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11394:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}],"id":3244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11386:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3243,"name":"address","nodeType":"ElementaryTypeName","src":"11386:7:17","typeDescriptions":{}}},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11386:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3236,"name":"_singleSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"11333:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) returns (uint256)"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11333:67:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11306:94:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3250,"name":"singleSwapResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"11423:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11442:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11423:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53776170204661696c65642c20547279204275726e2829","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11445:25:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c9fb7880e66db2b9e57bcbd054b51a92e47b36ea36b5f97f97650ad5c3b7ba0","typeString":"literal_string \"Swap Failed, Try Burn()\""},"value":"Swap Failed, Try Burn()"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6c9fb7880e66db2b9e57bcbd054b51a92e47b36ea36b5f97f97650ad5c3b7ba0","typeString":"literal_string \"Swap Failed, Try Burn()\""}],"id":3249,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11415:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11415:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3255,"nodeType":"ExpressionStatement","src":"11415:56:17"}]}}]},"documentation":{"id":3180,"nodeType":"StructuredDocumentation","src":"10375:521:17","text":" @dev Liquidates the specified token by swapping it for USDC.\n @param token The address of the token to be liquidated.\n @notice The contract must have sufficient approval to spend the specified token.\n @notice If a pool exists for the token and USDC on Uniswap, a direct swap is performed.\n @notice If no pool exists, a multi-hop swap is performed through the WNATIVE token.\n @notice If the swap fails, the `burn` function should be called to handle the failed swap."},"functionSelector":"2f865568","id":3295,"implemented":true,"kind":"function","modifiers":[],"name":"liquidate","nameLocation":"10911:9:17","nodeType":"FunctionDefinition","parameters":{"id":3183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3182,"mutability":"mutable","name":"token","nameLocation":"10929:5:17","nodeType":"VariableDeclaration","scope":3295,"src":"10921:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3181,"name":"address","nodeType":"ElementaryTypeName","src":"10921:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10920:15:17"},"returnParameters":{"id":3184,"nodeType":"ParameterList","parameters":[],"src":"10943:0:17"},"scope":4376,"src":"10902:937:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3330,"nodeType":"Block","src":"12132:184:17","statements":[{"assignments":[3302],"declarations":[{"constant":false,"id":3302,"mutability":"mutable","name":"length","nameLocation":"12151:6:17","nodeType":"VariableDeclaration","scope":3330,"src":"12143:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3301,"name":"uint256","nodeType":"ElementaryTypeName","src":"12143:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3306,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3303,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"12160:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":3304,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12167:6:17","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":5536,"src":"12160:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$5440_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$5440_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"}},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12143:32:17"},{"body":{"id":3328,"nodeType":"Block","src":"12223:86:17","statements":[{"assignments":[3318],"declarations":[{"constant":false,"id":3318,"mutability":"mutable","name":"token","nameLocation":"12246:5:17","nodeType":"VariableDeclaration","scope":3328,"src":"12238:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3317,"name":"address","nodeType":"ElementaryTypeName","src":"12238:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3323,"initialValue":{"arguments":[{"id":3321,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"12264:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3319,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"12254:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":3320,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12261:2:17","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":5563,"src":"12254:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$5440_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$5440_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256) view returns (address)"}},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12254:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12238:28:17"},{"expression":{"arguments":[{"id":3325,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"12291:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3324,"name":"liquidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"12281:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12281:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3327,"nodeType":"ExpressionStatement","src":"12281:16:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3311,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"12206:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3312,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"12210:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12206:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3329,"initializationExpression":{"assignments":[3308],"declarations":[{"constant":false,"id":3308,"mutability":"mutable","name":"i","nameLocation":"12199:1:17","nodeType":"VariableDeclaration","scope":3329,"src":"12191:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3307,"name":"uint256","nodeType":"ElementaryTypeName","src":"12191:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3310,"initialValue":{"hexValue":"30","id":3309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12203:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12191:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12218:3:17","subExpression":{"id":3314,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"12218:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3316,"nodeType":"ExpressionStatement","src":"12218:3:17"},"nodeType":"ForStatement","src":"12186:123:17"}]},"documentation":{"id":3296,"nodeType":"StructuredDocumentation","src":"11847:235:17","text":" @dev Liquidates all tokens in the contract.\n This function iterates through all the tokens in the contract and calls the `liquidate` function for each token.\n Can only be called by the contract owner."},"functionSelector":"3c2066a9","id":3331,"implemented":true,"kind":"function","modifiers":[{"id":3299,"kind":"modifierInvocation","modifierName":{"id":3298,"name":"nonReentrant","nameLocations":["12119:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"12119:12:17"},"nodeType":"ModifierInvocation","src":"12119:12:17"}],"name":"liquidateAll","nameLocation":"12097:12:17","nodeType":"FunctionDefinition","parameters":{"id":3297,"nodeType":"ParameterList","parameters":[],"src":"12109:2:17"},"returnParameters":{"id":3300,"nodeType":"ParameterList","parameters":[],"src":"12132:0:17"},"scope":4376,"src":"12088:228:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3452,"nodeType":"Block","src":"13144:869:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3341,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13173:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13177:6:17","memberName":"sender","nodeType":"MemberAccess","src":"13173:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3340,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"13163:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13163:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3344,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"13188:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13163:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742042414c","id":3346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13200:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3802b739a1b061f89edd5fd7a12d8792298aa749cedf62bac9eac44415882c7f","typeString":"literal_string \"Insufficient BAL\""},"value":"Insufficient BAL"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3802b739a1b061f89edd5fd7a12d8792298aa749cedf62bac9eac44415882c7f","typeString":"literal_string \"Insufficient BAL\""}],"id":3339,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13155:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13155:64:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3348,"nodeType":"ExpressionStatement","src":"13155:64:17"},{"body":{"id":3438,"nodeType":"Block","src":"13274:648:17","statements":[{"assignments":[3361],"declarations":[{"constant":false,"id":3361,"mutability":"mutable","name":"token","nameLocation":"13297:5:17","nodeType":"VariableDeclaration","scope":3438,"src":"13289:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3360,"name":"address","nodeType":"ElementaryTypeName","src":"13289:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3366,"initialValue":{"arguments":[{"id":3364,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"13315:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3362,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"13305:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":3363,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13312:2:17","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":5563,"src":"13305:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$5440_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$5440_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256) view returns (address)"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13305:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13289:28:17"},{"assignments":[3368],"declarations":[{"constant":false,"id":3368,"mutability":"mutable","name":"totalBaluni","nameLocation":"13340:11:17","nodeType":"VariableDeclaration","scope":3438,"src":"13332:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3367,"name":"uint256","nodeType":"ElementaryTypeName","src":"13332:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3371,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3369,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"13354:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13354:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13332:35:17"},{"assignments":[3373],"declarations":[{"constant":false,"id":3373,"mutability":"mutable","name":"totalERC20Balance","nameLocation":"13390:17:17","nodeType":"VariableDeclaration","scope":3438,"src":"13382:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3372,"name":"uint256","nodeType":"ElementaryTypeName","src":"13382:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3383,"initialValue":{"arguments":[{"arguments":[{"id":3380,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13442:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}],"id":3379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13434:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3378,"name":"address","nodeType":"ElementaryTypeName","src":"13434:7:17","typeDescriptions":{}}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13434:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3375,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"13417:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3374,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"13410:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13410:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13424:9:17","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1917,"src":"13410:23:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13410:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13382:66:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3384,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"13469:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13490:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13469:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3387,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"13495:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3390,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13512:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}],"id":3389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13504:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3388,"name":"address","nodeType":"ElementaryTypeName","src":"13504:7:17","typeDescriptions":{}}},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13504:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13495:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13469:48:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3395,"nodeType":"IfStatement","src":"13465:62:17","trueBody":{"id":3394,"nodeType":"Continue","src":"13519:8:17"}},{"assignments":[3397],"declarations":[{"constant":false,"id":3397,"mutability":"mutable","name":"decimals","nameLocation":"13552:8:17","nodeType":"VariableDeclaration","scope":3438,"src":"13544:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3396,"name":"uint256","nodeType":"ElementaryTypeName","src":"13544:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3403,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3399,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"13578:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3398,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"13563:14:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1986_$","typeString":"type(contract IERC20Metadata)"}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13563:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1986","typeString":"contract IERC20Metadata"}},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13585:8:17","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1985,"src":"13563:30:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13563:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13544:51:17"},{"assignments":[3405],"declarations":[{"constant":false,"id":3405,"mutability":"mutable","name":"share","nameLocation":"13618:5:17","nodeType":"VariableDeclaration","scope":3438,"src":"13610:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3404,"name":"uint256","nodeType":"ElementaryTypeName","src":"13610:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3412,"initialValue":{"arguments":[{"id":3407,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"13647:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3408,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"13660:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3409,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"13679:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3410,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"13691:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3406,"name":"_calculateERC20Share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"13626:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256) pure returns (uint256)"}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13626:74:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13610:90:17"},{"assignments":[3414],"declarations":[{"constant":false,"id":3414,"mutability":"mutable","name":"amountAfterFee","nameLocation":"13723:14:17","nodeType":"VariableDeclaration","scope":3438,"src":"13715:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3413,"name":"uint256","nodeType":"ElementaryTypeName","src":"13715:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3418,"initialValue":{"arguments":[{"id":3416,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"13768:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3415,"name":"_calculateNetAmountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"13740:27:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13740:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13715:59:17"},{"expression":{"arguments":[{"expression":{"id":3423,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13812:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13816:6:17","memberName":"sender","nodeType":"MemberAccess","src":"13812:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3425,"name":"amountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"13824:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3420,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"13796:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3419,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"13789:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13789:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13803:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"13789:22:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13789:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3427,"nodeType":"ExpressionStatement","src":"13789:50:17"},{"expression":{"arguments":[{"id":3432,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"13877:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3433,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"13887:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3434,"name":"amountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"13895:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13887:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3429,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"13861:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3428,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"13854:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13854:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13868:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"13854:22:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13854:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3437,"nodeType":"ExpressionStatement","src":"13854:56:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3352,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"13248:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3353,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"13252:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":3354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13259:6:17","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":5536,"src":"13252:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$5440_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$5440_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"}},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13252:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13248:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3439,"initializationExpression":{"assignments":[3350],"declarations":[{"constant":false,"id":3350,"mutability":"mutable","name":"i","nameLocation":"13245:1:17","nodeType":"VariableDeclaration","scope":3439,"src":"13237:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3349,"name":"uint256","nodeType":"ElementaryTypeName","src":"13237:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3351,"nodeType":"VariableDeclarationStatement","src":"13237:9:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13269:3:17","subExpression":{"id":3357,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"13269:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3359,"nodeType":"ExpressionStatement","src":"13269:3:17"},"nodeType":"ForStatement","src":"13232:690:17"},{"expression":{"arguments":[{"expression":{"id":3441,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13938:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13942:6:17","memberName":"sender","nodeType":"MemberAccess","src":"13938:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3443,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"13950:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3440,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"13932:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13932:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3445,"nodeType":"ExpressionStatement","src":"13932:29:17"},{"eventCall":{"arguments":[{"expression":{"id":3447,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13982:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13986:6:17","memberName":"sender","nodeType":"MemberAccess","src":"13982:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3449,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"13994:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3446,"name":"Burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"13977:4:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13977:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3451,"nodeType":"EmitStatement","src":"13972:33:17"}]},"documentation":{"id":3332,"nodeType":"StructuredDocumentation","src":"12324:753:17","text":" @dev Burns a specified amount of BALUNI tokens from the caller's balance.\n @param burnAmount The amount of BALUNI tokens to burn.\n @notice This function requires the caller to have a balance of at least `burnAmount` BAL tokens.\n @notice The function also checks the USDC balance before burning the tokens.\n @notice After burning the tokens, the function transfers a proportional share of each ERC20 token held by the contract to the caller.\n @notice The share is calculated based on the total supply of BAL tokens, the balance of each ERC20 token, and the decimals of each token.\n @notice Finally, the function emits a `Burn` event with the caller's address and the amount of tokens burned."},"functionSelector":"1a168da2","id":3453,"implemented":true,"kind":"function","modifiers":[{"id":3337,"kind":"modifierInvocation","modifierName":{"id":3336,"name":"nonReentrant","nameLocations":["13131:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"13131:12:17"},"nodeType":"ModifierInvocation","src":"13131:12:17"}],"name":"burnERC20","nameLocation":"13092:9:17","nodeType":"FunctionDefinition","parameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3334,"mutability":"mutable","name":"burnAmount","nameLocation":"13110:10:17","nodeType":"VariableDeclaration","scope":3453,"src":"13102:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3333,"name":"uint256","nodeType":"ElementaryTypeName","src":"13102:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13101:20:17"},"returnParameters":{"id":3338,"nodeType":"ParameterList","parameters":[],"src":"13144:0:17"},"scope":4376,"src":"13083:930:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3707,"nodeType":"Block","src":"14254:2084:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3462,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"14273:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14286:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14273:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742042414c","id":3465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14289:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3802b739a1b061f89edd5fd7a12d8792298aa749cedf62bac9eac44415882c7f","typeString":"literal_string \"Insufficient BAL\""},"value":"Insufficient BAL"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3802b739a1b061f89edd5fd7a12d8792298aa749cedf62bac9eac44415882c7f","typeString":"literal_string \"Insufficient BAL\""}],"id":3461,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14265:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14265:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3467,"nodeType":"ExpressionStatement","src":"14265:43:17"},{"body":{"id":3693,"nodeType":"Block","src":"14363:1884:17","statements":[{"assignments":[3480],"declarations":[{"constant":false,"id":3480,"mutability":"mutable","name":"token","nameLocation":"14386:5:17","nodeType":"VariableDeclaration","scope":3693,"src":"14378:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3479,"name":"address","nodeType":"ElementaryTypeName","src":"14378:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3485,"initialValue":{"arguments":[{"id":3483,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"14404:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3481,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"14394:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":3482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14401:2:17","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":5563,"src":"14394:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$5440_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$5440_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256) view returns (address)"}},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14394:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14378:28:17"},{"assignments":[3487],"declarations":[{"constant":false,"id":3487,"mutability":"mutable","name":"totalBaluni","nameLocation":"14429:11:17","nodeType":"VariableDeclaration","scope":3693,"src":"14421:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3486,"name":"uint256","nodeType":"ElementaryTypeName","src":"14421:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3490,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3488,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"14443:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14443:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14421:35:17"},{"assignments":[3492],"declarations":[{"constant":false,"id":3492,"mutability":"mutable","name":"totalERC20Balance","nameLocation":"14479:17:17","nodeType":"VariableDeclaration","scope":3693,"src":"14471:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3491,"name":"uint256","nodeType":"ElementaryTypeName","src":"14471:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3502,"initialValue":{"arguments":[{"arguments":[{"id":3499,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14531:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}],"id":3498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14523:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3497,"name":"address","nodeType":"ElementaryTypeName","src":"14523:7:17","typeDescriptions":{}}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14523:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3494,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"14506:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3493,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"14499:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14499:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14513:9:17","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1917,"src":"14499:23:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14499:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14471:66:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3503,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"14558:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14578:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14558:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":3506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14583:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"14558:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3509,"nodeType":"IfStatement","src":"14554:44:17","trueBody":{"id":3508,"nodeType":"Continue","src":"14590:8:17"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3510,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"14619:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3513,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14636:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}],"id":3512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14628:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3511,"name":"address","nodeType":"ElementaryTypeName","src":"14628:7:17","typeDescriptions":{}}},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14628:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14619:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3517,"nodeType":"IfStatement","src":"14615:36:17","trueBody":{"id":3516,"nodeType":"Continue","src":"14643:8:17"}},{"assignments":[3519],"declarations":[{"constant":false,"id":3519,"mutability":"mutable","name":"decimals","nameLocation":"14676:8:17","nodeType":"VariableDeclaration","scope":3693,"src":"14668:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3518,"name":"uint256","nodeType":"ElementaryTypeName","src":"14668:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3525,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3521,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"14702:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3520,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"14687:14:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1986_$","typeString":"type(contract IERC20Metadata)"}},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14687:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1986","typeString":"contract IERC20Metadata"}},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14709:8:17","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1985,"src":"14687:30:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14687:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"14668:51:17"},{"assignments":[3527],"declarations":[{"constant":false,"id":3527,"mutability":"mutable","name":"burnAmountToken","nameLocation":"14742:15:17","nodeType":"VariableDeclaration","scope":3693,"src":"14734:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3526,"name":"uint256","nodeType":"ElementaryTypeName","src":"14734:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3534,"initialValue":{"arguments":[{"id":3529,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"14781:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3530,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"14794:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3531,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"14813:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3532,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"14825:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3528,"name":"_calculateERC20Share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"14760:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256) pure returns (uint256)"}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14760:74:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14734:100:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3535,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"14855:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3538,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"14872:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14864:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3536,"name":"address","nodeType":"ElementaryTypeName","src":"14864:7:17","typeDescriptions":{}}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14864:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14855:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3552,"nodeType":"IfStatement","src":"14851:140:17","trueBody":{"id":3551,"nodeType":"Block","src":"14879:112:17","statements":[{"expression":{"arguments":[{"expression":{"id":3545,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14920:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14924:6:17","memberName":"sender","nodeType":"MemberAccess","src":"14920:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3547,"name":"burnAmountToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"14932:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3542,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"14905:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3541,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"14898:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14898:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"14898:21:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14898:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3549,"nodeType":"ExpressionStatement","src":"14898:50:17"},{"id":3550,"nodeType":"Continue","src":"14967:8:17"}]}},{"assignments":[3554],"declarations":[{"constant":false,"id":3554,"mutability":"mutable","name":"pool","nameLocation":"15015:4:17","nodeType":"VariableDeclaration","scope":3693,"src":"15007:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3553,"name":"address","nodeType":"ElementaryTypeName","src":"15007:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3566,"initialValue":{"arguments":[{"id":3559,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"15064:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3562,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"15079:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15071:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3560,"name":"address","nodeType":"ElementaryTypeName","src":"15071:7:17","typeDescriptions":{}}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15071:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"33303030","id":3564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15086:4:17","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"}],"expression":{"arguments":[{"id":3556,"name":"uniswapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"15040:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3555,"name":"IUniswapV3Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"15022:17:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Factory_$2432_$","typeString":"type(contract IUniswapV3Factory)"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15022:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$2432","typeString":"contract IUniswapV3Factory"}},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15056:7:17","memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":2405,"src":"15022:41:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$","typeString":"function (address,address,uint24) view external returns (address)"}},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15022:69:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15007:84:17"},{"expression":{"arguments":[{"id":3568,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"15121:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3571,"name":"uniswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"15136:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15128:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3569,"name":"address","nodeType":"ElementaryTypeName","src":"15128:7:17","typeDescriptions":{}}},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15128:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3573,"name":"burnAmountToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"15152:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3567,"name":"secureApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"15106:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15106:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3575,"nodeType":"ExpressionStatement","src":"15106:62:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3576,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"15189:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15205:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15197:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3577,"name":"address","nodeType":"ElementaryTypeName","src":"15197:7:17","typeDescriptions":{}}},"id":3580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15197:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15189:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3691,"nodeType":"Block","src":"15649:587:17","statements":[{"assignments":[3637],"declarations":[{"constant":false,"id":3637,"mutability":"mutable","name":"amountOutHop","nameLocation":"15676:12:17","nodeType":"VariableDeclaration","scope":3691,"src":"15668:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3636,"name":"uint256","nodeType":"ElementaryTypeName","src":"15668:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3652,"initialValue":{"arguments":[{"id":3639,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"15727:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3642,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"15763:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15755:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3640,"name":"address","nodeType":"ElementaryTypeName","src":"15755:7:17","typeDescriptions":{}}},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15755:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3646,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"15802:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15794:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3644,"name":"address","nodeType":"ElementaryTypeName","src":"15794:7:17","typeDescriptions":{}}},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15794:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3648,"name":"burnAmountToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"15830:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3649,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15868:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15872:6:17","memberName":"sender","nodeType":"MemberAccess","src":"15868:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3638,"name":"_multiHopSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"15691:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,address,uint256,address) returns (uint256)"}},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15691:206:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15668:229:17"},{"assignments":[3654],"declarations":[{"constant":false,"id":3654,"mutability":"mutable","name":"amountAfterFee","nameLocation":"15924:14:17","nodeType":"VariableDeclaration","scope":3691,"src":"15916:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3653,"name":"uint256","nodeType":"ElementaryTypeName","src":"15916:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3658,"initialValue":{"arguments":[{"id":3656,"name":"amountOutHop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"15969:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3655,"name":"_calculateNetAmountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"15941:27:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15941:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15916:66:17"},{"expression":{"arguments":[{"expression":{"id":3666,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16032:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16036:6:17","memberName":"sender","nodeType":"MemberAccess","src":"16032:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3668,"name":"amountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"16044:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":3662,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"16016:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16008:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3660,"name":"address","nodeType":"ElementaryTypeName","src":"16008:7:17","typeDescriptions":{}}},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16008:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3659,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"16001:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16001:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16023:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"16001:30:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16001:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3670,"nodeType":"ExpressionStatement","src":"16001:58:17"},{"expression":{"arguments":[{"id":3678,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"16109:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3679,"name":"amountOutHop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"16119:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3680,"name":"amountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"16134:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16119:29:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":3674,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"16093:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16085:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3672,"name":"address","nodeType":"ElementaryTypeName","src":"16085:7:17","typeDescriptions":{}}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16085:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3671,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"16078:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16078:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16100:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"16078:30:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16078:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3683,"nodeType":"ExpressionStatement","src":"16078:71:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3685,"name":"amountOutHop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"16176:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16191:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16176:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53776170204661696c65642c20547279204275726e2829","id":3688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16194:25:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c9fb7880e66db2b9e57bcbd054b51a92e47b36ea36b5f97f97650ad5c3b7ba0","typeString":"literal_string \"Swap Failed, Try Burn()\""},"value":"Swap Failed, Try Burn()"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6c9fb7880e66db2b9e57bcbd054b51a92e47b36ea36b5f97f97650ad5c3b7ba0","typeString":"literal_string \"Swap Failed, Try Burn()\""}],"id":3684,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16168:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16168:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3690,"nodeType":"ExpressionStatement","src":"16168:52:17"}]},"id":3692,"nodeType":"IfStatement","src":"15185:1051:17","trueBody":{"id":3635,"nodeType":"Block","src":"15209:434:17","statements":[{"assignments":[3583],"declarations":[{"constant":false,"id":3583,"mutability":"mutable","name":"amountOut","nameLocation":"15236:9:17","nodeType":"VariableDeclaration","scope":3635,"src":"15228:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3582,"name":"uint256","nodeType":"ElementaryTypeName","src":"15228:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3596,"initialValue":{"arguments":[{"id":3585,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"15260:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3588,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"15275:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15267:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3586,"name":"address","nodeType":"ElementaryTypeName","src":"15267:7:17","typeDescriptions":{}}},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15267:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3590,"name":"burnAmountToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"15282:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3593,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15307:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}],"id":3592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15299:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3591,"name":"address","nodeType":"ElementaryTypeName","src":"15299:7:17","typeDescriptions":{}}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15299:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3584,"name":"_singleSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"15248:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) returns (uint256)"}},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15248:65:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15228:85:17"},{"assignments":[3598],"declarations":[{"constant":false,"id":3598,"mutability":"mutable","name":"amountAfterFee","nameLocation":"15340:14:17","nodeType":"VariableDeclaration","scope":3635,"src":"15332:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3597,"name":"uint256","nodeType":"ElementaryTypeName","src":"15332:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3602,"initialValue":{"arguments":[{"id":3600,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"15385:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3599,"name":"_calculateNetAmountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"15357:27:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15357:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15332:63:17"},{"expression":{"arguments":[{"expression":{"id":3610,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15445:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15449:6:17","memberName":"sender","nodeType":"MemberAccess","src":"15445:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3612,"name":"amountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"15457:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":3606,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"15429:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15421:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3604,"name":"address","nodeType":"ElementaryTypeName","src":"15421:7:17","typeDescriptions":{}}},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3603,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"15414:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15414:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15436:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"15414:30:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15414:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3614,"nodeType":"ExpressionStatement","src":"15414:58:17"},{"expression":{"arguments":[{"id":3622,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"15522:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3623,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"15532:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3624,"name":"amountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"15544:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15532:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":3618,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"15506:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15498:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3616,"name":"address","nodeType":"ElementaryTypeName","src":"15498:7:17","typeDescriptions":{}}},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15498:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3615,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"15491:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15491:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15513:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"15491:30:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15491:68:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3627,"nodeType":"ExpressionStatement","src":"15491:68:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3629,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"15586:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15598:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15586:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53776170204661696c65642c20547279204275726e2829","id":3632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15601:25:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c9fb7880e66db2b9e57bcbd054b51a92e47b36ea36b5f97f97650ad5c3b7ba0","typeString":"literal_string \"Swap Failed, Try Burn()\""},"value":"Swap Failed, Try Burn()"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6c9fb7880e66db2b9e57bcbd054b51a92e47b36ea36b5f97f97650ad5c3b7ba0","typeString":"literal_string \"Swap Failed, Try Burn()\""}],"id":3628,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15578:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15578:49:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3634,"nodeType":"ExpressionStatement","src":"15578:49:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3471,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"14337:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3472,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"14341:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":3473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14348:6:17","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":5536,"src":"14341:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$5440_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$5440_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"}},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14341:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14337:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3694,"initializationExpression":{"assignments":[3469],"declarations":[{"constant":false,"id":3469,"mutability":"mutable","name":"i","nameLocation":"14334:1:17","nodeType":"VariableDeclaration","scope":3694,"src":"14326:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3468,"name":"uint256","nodeType":"ElementaryTypeName","src":"14326:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3470,"nodeType":"VariableDeclarationStatement","src":"14326:9:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14358:3:17","subExpression":{"id":3476,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"14358:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3478,"nodeType":"ExpressionStatement","src":"14358:3:17"},"nodeType":"ForStatement","src":"14321:1926:17"},{"expression":{"arguments":[{"expression":{"id":3696,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16263:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16267:6:17","memberName":"sender","nodeType":"MemberAccess","src":"16263:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3698,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"16275:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3695,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"16257:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16257:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3700,"nodeType":"ExpressionStatement","src":"16257:29:17"},{"eventCall":{"arguments":[{"expression":{"id":3702,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16307:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16311:6:17","memberName":"sender","nodeType":"MemberAccess","src":"16307:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3704,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"16319:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3701,"name":"Burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"16302:4:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16302:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3706,"nodeType":"EmitStatement","src":"16297:33:17"}]},"documentation":{"id":3454,"nodeType":"StructuredDocumentation","src":"14021:169:17","text":" @dev Burns a specified amount of BAL tokens and performs token swaps on multiple tokens.\n @param burnAmount The amount of BAL tokens to burn."},"functionSelector":"fe0a4dd1","id":3708,"implemented":true,"kind":"function","modifiers":[{"id":3459,"kind":"modifierInvocation","modifierName":{"id":3458,"name":"nonReentrant","nameLocations":["14241:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"14241:12:17"},"nodeType":"ModifierInvocation","src":"14241:12:17"}],"name":"burnUSDC","nameLocation":"14205:8:17","nodeType":"FunctionDefinition","parameters":{"id":3457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3456,"mutability":"mutable","name":"burnAmount","nameLocation":"14222:10:17","nodeType":"VariableDeclaration","scope":3708,"src":"14214:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3455,"name":"uint256","nodeType":"ElementaryTypeName","src":"14214:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14213:20:17"},"returnParameters":{"id":3460,"nodeType":"ParameterList","parameters":[],"src":"14254:0:17"},"scope":4376,"src":"14196:2142:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3723,"nodeType":"Block","src":"16577:84:17","statements":[{"expression":{"arguments":[{"id":3720,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"16647:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3717,"name":"agentFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"16617:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3716,"name":"IBaluniV1AgentFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"16595:21:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1AgentFactory_$4749_$","typeString":"type(contract IBaluniV1AgentFactory)"}},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16595:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1AgentFactory_$4749","typeString":"contract IBaluniV1AgentFactory"}},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16631:15:17","memberName":"getAgentAddress","nodeType":"MemberAccess","referencedDeclaration":4741,"src":"16595:51:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_address_$","typeString":"function (address) view external returns (address)"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16595:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3715,"id":3722,"nodeType":"Return","src":"16588:65:17"}]},"documentation":{"id":3709,"nodeType":"StructuredDocumentation","src":"16346:153:17","text":" @dev Retrieves the agent address associated with a user.\n @param _user The user's address.\n @return The agent address."},"functionSelector":"27d54a92","id":3724,"implemented":true,"kind":"function","modifiers":[],"name":"getAgentAddress","nameLocation":"16514:15:17","nodeType":"FunctionDefinition","parameters":{"id":3712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3711,"mutability":"mutable","name":"_user","nameLocation":"16538:5:17","nodeType":"VariableDeclaration","scope":3724,"src":"16530:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3710,"name":"address","nodeType":"ElementaryTypeName","src":"16530:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16529:15:17"},"returnParameters":{"id":3715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3724,"src":"16568:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3713,"name":"address","nodeType":"ElementaryTypeName","src":"16568:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16567:9:17"},"scope":4376,"src":"16505:156:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3850,"nodeType":"Block","src":"16899:888:17","statements":[{"assignments":[3733],"declarations":[{"constant":false,"id":3733,"mutability":"mutable","name":"totalUSDValuation","nameLocation":"16918:17:17","nodeType":"VariableDeclaration","scope":3850,"src":"16910:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3732,"name":"uint256","nodeType":"ElementaryTypeName","src":"16910:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3736,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3734,"name":"_totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"16938:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16938:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16910:45:17"},{"assignments":[3738],"declarations":[{"constant":false,"id":3738,"mutability":"mutable","name":"totalBalSupply","nameLocation":"16974:14:17","nodeType":"VariableDeclaration","scope":3850,"src":"16966:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3737,"name":"uint256","nodeType":"ElementaryTypeName","src":"16966:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3741,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3739,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"16991:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16991:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16966:38:17"},{"assignments":[3743],"declarations":[{"constant":false,"id":3743,"mutability":"mutable","name":"usdcRequired","nameLocation":"17023:12:17","nodeType":"VariableDeclaration","scope":3850,"src":"17015:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3742,"name":"uint256","nodeType":"ElementaryTypeName","src":"17015:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3750,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3744,"name":"balAmountToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"17039:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3745,"name":"totalUSDValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"17057:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17039:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3747,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17038:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3748,"name":"totalBalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"17078:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17038:54:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17015:77:17"},{"expression":{"arguments":[{"expression":{"id":3755,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17129:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17133:6:17","memberName":"sender","nodeType":"MemberAccess","src":"17129:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3759,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17149:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}],"id":3758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17141:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3757,"name":"address","nodeType":"ElementaryTypeName","src":"17141:7:17","typeDescriptions":{}}},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17141:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3761,"name":"usdcRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"17156:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653132","id":3762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17171:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"17156:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3752,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"17110:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3751,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"17103:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17103:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17116:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1959,"src":"17103:25:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17103:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3765,"nodeType":"ExpressionStatement","src":"17103:73:17"},{"assignments":[3767],"declarations":[{"constant":false,"id":3767,"mutability":"mutable","name":"balance","nameLocation":"17195:7:17","nodeType":"VariableDeclaration","scope":3850,"src":"17187:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3766,"name":"uint256","nodeType":"ElementaryTypeName","src":"17187:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3775,"initialValue":{"arguments":[{"expression":{"id":3772,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17228:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17232:6:17","memberName":"sender","nodeType":"MemberAccess","src":"17228:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3769,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"17212:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3768,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"17205:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17205:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17218:9:17","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1917,"src":"17205:22:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17205:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17187:52:17"},{"assignments":[3777],"declarations":[{"constant":false,"id":3777,"mutability":"mutable","name":"allowed","nameLocation":"17258:7:17","nodeType":"VariableDeclaration","scope":3850,"src":"17250:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3776,"name":"uint256","nodeType":"ElementaryTypeName","src":"17250:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3789,"initialValue":{"arguments":[{"expression":{"id":3782,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17291:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17295:6:17","memberName":"sender","nodeType":"MemberAccess","src":"17291:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3786,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17311:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}],"id":3785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17303:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3784,"name":"address","nodeType":"ElementaryTypeName","src":"17303:7:17","typeDescriptions":{}}},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17303:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3779,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"17275:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3778,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"17268:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17268:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17281:9:17","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1937,"src":"17268:22:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17268:49:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17250:67:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3791,"name":"totalBalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"17336:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17353:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17336:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c2042414c554e4920737570706c792063616e6e6f74206265207a65726f","id":3794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17356:36:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ddcc9d8f2a6704234c103a6ef7b2e41a8659f7661115b0460a24c8abe542fd0","typeString":"literal_string \"Total BALUNI supply cannot be zero\""},"value":"Total BALUNI supply cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ddcc9d8f2a6704234c103a6ef7b2e41a8659f7661115b0460a24c8abe542fd0","typeString":"literal_string \"Total BALUNI supply cannot be zero\""}],"id":3790,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17328:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17328:65:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3796,"nodeType":"ExpressionStatement","src":"17328:65:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3798,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"17412:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3799,"name":"usdcRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"17423:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653132","id":3800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17438:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"17423:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17412:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"555344432062616c616e636520697320696e73756666696369656e74","id":3803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17444:30:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_bad2ba4e17745a4d4fd221dac6ffa18dd2cdb7d74e252bb930552ebc273a413c","typeString":"literal_string \"USDC balance is insufficient\""},"value":"USDC balance is insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bad2ba4e17745a4d4fd221dac6ffa18dd2cdb7d74e252bb930552ebc273a413c","typeString":"literal_string \"USDC balance is insufficient\""}],"id":3797,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17404:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17404:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3805,"nodeType":"ExpressionStatement","src":"17404:71:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3807,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"17494:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3808,"name":"usdcRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"17505:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653132","id":3809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17520:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"17505:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17494:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b2074686520746f6b656e20616c6c6f77616e6365","id":3812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17526:27:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650","typeString":"literal_string \"Check the token allowance\""},"value":"Check the token allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650","typeString":"literal_string \"Check the token allowance\""}],"id":3806,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17486:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17486:68:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3814,"nodeType":"ExpressionStatement","src":"17486:68:17"},{"expression":{"arguments":[{"expression":{"id":3816,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17573:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17577:6:17","memberName":"sender","nodeType":"MemberAccess","src":"17573:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3818,"name":"balAmountToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"17585:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3815,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"17567:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17567:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3820,"nodeType":"ExpressionStatement","src":"17567:34:17"},{"eventCall":{"arguments":[{"expression":{"id":3822,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17622:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17626:6:17","memberName":"sender","nodeType":"MemberAccess","src":"17622:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3824,"name":"balAmountToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"17634:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3821,"name":"Mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"17617:4:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17617:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3826,"nodeType":"EmitStatement","src":"17612:38:17"},{"assignments":[3828],"declarations":[{"constant":false,"id":3828,"mutability":"mutable","name":"fee","nameLocation":"17671:3:17","nodeType":"VariableDeclaration","scope":3850,"src":"17663:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3827,"name":"uint256","nodeType":"ElementaryTypeName","src":"17663:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3838,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3829,"name":"usdcRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"17679:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653132","id":3830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17694:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"17679:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3832,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17678:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3833,"name":"_BPS_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"17702:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17678:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3835,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17677:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3836,"name":"_BPS_BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"17714:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17677:46:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17663:60:17"},{"expression":{"arguments":[{"id":3846,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"17765:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3847,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"17775:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":3842,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"17749:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17741:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3840,"name":"address","nodeType":"ElementaryTypeName","src":"17741:7:17","typeDescriptions":{}}},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17741:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3839,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"17734:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17734:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17756:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"17734:30:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17734:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3849,"nodeType":"ExpressionStatement","src":"17734:45:17"}]},"documentation":{"id":3725,"nodeType":"StructuredDocumentation","src":"16669:157:17","text":" @dev Mints a specified amount of BALUNI tokens in exchange for USDC.\n @param balAmountToMint The amount of BALUNI tokens to mint."},"functionSelector":"0cfc7386","id":3851,"implemented":true,"kind":"function","modifiers":[{"id":3730,"kind":"modifierInvocation","modifierName":{"id":3729,"name":"nonReentrant","nameLocations":["16886:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"16886:12:17"},"nodeType":"ModifierInvocation","src":"16886:12:17"}],"name":"mintWithUSDC","nameLocation":"16841:12:17","nodeType":"FunctionDefinition","parameters":{"id":3728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3727,"mutability":"mutable","name":"balAmountToMint","nameLocation":"16862:15:17","nodeType":"VariableDeclaration","scope":3851,"src":"16854:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3726,"name":"uint256","nodeType":"ElementaryTypeName","src":"16854:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16853:25:17"},"returnParameters":{"id":3731,"nodeType":"ParameterList","parameters":[],"src":"16899:0:17"},"scope":4376,"src":"16832:955:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3893,"nodeType":"Block","src":"18447:173:17","statements":[{"assignments":[3873],"declarations":[{"constant":false,"id":3873,"mutability":"mutable","name":"balances","nameLocation":"18475:8:17","nodeType":"VariableDeclaration","scope":3893,"src":"18458:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3871,"name":"uint256","nodeType":"ElementaryTypeName","src":"18458:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3872,"nodeType":"ArrayTypeName","src":"18458:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3879,"initialValue":{"arguments":[{"hexValue":"30","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18500:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18486:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3874,"name":"uint256","nodeType":"ElementaryTypeName","src":"18490:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3875,"nodeType":"ArrayTypeName","src":"18490:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18486:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18458:44:17"},{"expression":{"arguments":[{"id":3884,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"18555:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3885,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"18565:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},{"id":3886,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"18573:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},{"id":3887,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"18582:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3888,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"18589:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3889,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"18597:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3890,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"18607:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3881,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"18533:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3880,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"18513:19:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$4870_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18513:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$4870","typeString":"contract IBaluniV1Rebalancer"}},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18545:9:17","memberName":"rebalance","nodeType":"MemberAccess","referencedDeclaration":4837,"src":"18513:41:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256[] memory,address[] memory,uint256[] memory,uint256,address,address,address) external"}},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18513:99:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3892,"nodeType":"ExpressionStatement","src":"18513:99:17"}]},"documentation":{"id":3852,"nodeType":"StructuredDocumentation","src":"17795:424:17","text":" @dev Calls the `rebalance` function of the `rebalancer` contract.\n @param assets An array of addresses representing the assets to rebalance.\n @param weights An array of uint256 values representing the weights of the assets.\n @param sender The address of the sender.\n @param receiver The address of the receiver.\n @param limit The maximum number of assets to rebalance."},"functionSelector":"599f69f7","id":3894,"implemented":true,"kind":"function","modifiers":[],"name":"callRebalance","nameLocation":"18234:13:17","nodeType":"FunctionDefinition","parameters":{"id":3867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3855,"mutability":"mutable","name":"assets","nameLocation":"18277:6:17","nodeType":"VariableDeclaration","scope":3894,"src":"18258:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3853,"name":"address","nodeType":"ElementaryTypeName","src":"18258:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3854,"nodeType":"ArrayTypeName","src":"18258:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3858,"mutability":"mutable","name":"weights","nameLocation":"18313:7:17","nodeType":"VariableDeclaration","scope":3894,"src":"18294:26:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3856,"name":"uint256","nodeType":"ElementaryTypeName","src":"18294:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3857,"nodeType":"ArrayTypeName","src":"18294:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3860,"mutability":"mutable","name":"sender","nameLocation":"18339:6:17","nodeType":"VariableDeclaration","scope":3894,"src":"18331:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3859,"name":"address","nodeType":"ElementaryTypeName","src":"18331:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3862,"mutability":"mutable","name":"receiver","nameLocation":"18364:8:17","nodeType":"VariableDeclaration","scope":3894,"src":"18356:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3861,"name":"address","nodeType":"ElementaryTypeName","src":"18356:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3864,"mutability":"mutable","name":"limit","nameLocation":"18391:5:17","nodeType":"VariableDeclaration","scope":3894,"src":"18383:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3863,"name":"uint256","nodeType":"ElementaryTypeName","src":"18383:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3894,"src":"18407:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3865,"name":"address","nodeType":"ElementaryTypeName","src":"18407:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18247:190:17"},"returnParameters":{"id":3868,"nodeType":"ParameterList","parameters":[],"src":"18447:0:17"},"scope":4376,"src":"18225:395:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3925,"nodeType":"Block","src":"18977:238:17","statements":[{"assignments":[3903],"declarations":[{"constant":false,"id":3903,"mutability":"mutable","name":"totalUSDValuation","nameLocation":"18996:17:17","nodeType":"VariableDeclaration","scope":3925,"src":"18988:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3902,"name":"uint256","nodeType":"ElementaryTypeName","src":"18988:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3906,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3904,"name":"_totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"19016:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19016:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18988:45:17"},{"assignments":[3908],"declarations":[{"constant":false,"id":3908,"mutability":"mutable","name":"totalBalSupply","nameLocation":"19052:14:17","nodeType":"VariableDeclaration","scope":3925,"src":"19044:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3907,"name":"uint256","nodeType":"ElementaryTypeName","src":"19044:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3911,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3909,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"19069:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19069:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19044:38:17"},{"assignments":[3913],"declarations":[{"constant":false,"id":3913,"mutability":"mutable","name":"usdcRequired","nameLocation":"19101:12:17","nodeType":"VariableDeclaration","scope":3925,"src":"19093:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3912,"name":"uint256","nodeType":"ElementaryTypeName","src":"19093:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3920,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3914,"name":"balAmountToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"19117:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3915,"name":"totalUSDValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"19135:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19117:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3917,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19116:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3918,"name":"totalBalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"19156:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19116:54:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19093:77:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3921,"name":"usdcRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"19188:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653132","id":3922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19203:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"19188:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3901,"id":3924,"nodeType":"Return","src":"19181:26:17"}]},"documentation":{"id":3895,"nodeType":"StructuredDocumentation","src":"18628:260:17","text":" @dev Calculates the amount of USDC required to mint a given amount of BAL tokens.\n @param balAmountToMint The amount of BAL tokens to be minted.\n @return The amount of USDC required to mint the specified amount of BAL tokens."},"functionSelector":"aa95d893","id":3926,"implemented":true,"kind":"function","modifiers":[],"name":"requiredUSDCtoMint","nameLocation":"18903:18:17","nodeType":"FunctionDefinition","parameters":{"id":3898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3897,"mutability":"mutable","name":"balAmountToMint","nameLocation":"18930:15:17","nodeType":"VariableDeclaration","scope":3926,"src":"18922:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3896,"name":"uint256","nodeType":"ElementaryTypeName","src":"18922:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18921:25:17"},"returnParameters":{"id":3901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3926,"src":"18968:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3899,"name":"uint256","nodeType":"ElementaryTypeName","src":"18968:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18967:9:17"},"scope":4376,"src":"18894:321:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3947,"nodeType":"Block","src":"19875:107:17","statements":[{"expression":{"arguments":[{"id":3941,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"19914:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3942,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"19927:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3943,"name":"baluniAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"19946:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3944,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"19960:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3940,"name":"_calculateERC20Share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"19893:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256) pure returns (uint256)"}},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19893:81:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3939,"id":3946,"nodeType":"Return","src":"19886:88:17"}]},"documentation":{"id":3927,"nodeType":"StructuredDocumentation","src":"19223:449:17","text":" @dev Calculates the token share based on the total Baluni supply, total ERC20 balance, Baluni amount, and token decimals.\n @param totalBaluni The total supply of Baluni tokens.\n @param totalERC20Balance The total balance of the ERC20 token.\n @param baluniAmount The amount of Baluni tokens.\n @param tokenDecimals The number of decimals for the ERC20 token.\n @return The calculated token share."},"functionSelector":"fe330a51","id":3948,"implemented":true,"kind":"function","modifiers":[],"name":"calculateTokenShare","nameLocation":"19687:19:17","nodeType":"FunctionDefinition","parameters":{"id":3936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3929,"mutability":"mutable","name":"totalBaluni","nameLocation":"19725:11:17","nodeType":"VariableDeclaration","scope":3948,"src":"19717:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3928,"name":"uint256","nodeType":"ElementaryTypeName","src":"19717:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3931,"mutability":"mutable","name":"totalERC20Balance","nameLocation":"19755:17:17","nodeType":"VariableDeclaration","scope":3948,"src":"19747:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3930,"name":"uint256","nodeType":"ElementaryTypeName","src":"19747:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3933,"mutability":"mutable","name":"baluniAmount","nameLocation":"19791:12:17","nodeType":"VariableDeclaration","scope":3948,"src":"19783:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3932,"name":"uint256","nodeType":"ElementaryTypeName","src":"19783:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3935,"mutability":"mutable","name":"tokenDecimals","nameLocation":"19822:13:17","nodeType":"VariableDeclaration","scope":3948,"src":"19814:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3934,"name":"uint256","nodeType":"ElementaryTypeName","src":"19814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19706:136:17"},"returnParameters":{"id":3939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3948,"src":"19866:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3937,"name":"uint256","nodeType":"ElementaryTypeName","src":"19866:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19865:9:17"},"scope":4376,"src":"19678:304:17","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":3963,"nodeType":"Block","src":"20345:65:17","statements":[{"expression":{"arguments":[{"id":3959,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"20388:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3960,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"20396:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3958,"name":"_calculateERC20Valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"20363:24:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) view returns (uint256)"}},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20363:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3957,"id":3962,"nodeType":"Return","src":"20356:46:17"}]},"documentation":{"id":3949,"nodeType":"StructuredDocumentation","src":"19990:262:17","text":" @dev Calculates the valuation of a given amount of a specific ERC20 token.\n @param amount The amount of the ERC20 token.\n @param token The address of the ERC20 token.\n @return The calculated valuation of the ERC20 token."},"functionSelector":"2bdd955a","id":3964,"implemented":true,"kind":"function","modifiers":[],"name":"tokenValuation","nameLocation":"20267:14:17","nodeType":"FunctionDefinition","parameters":{"id":3954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3951,"mutability":"mutable","name":"amount","nameLocation":"20290:6:17","nodeType":"VariableDeclaration","scope":3964,"src":"20282:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3950,"name":"uint256","nodeType":"ElementaryTypeName","src":"20282:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3953,"mutability":"mutable","name":"token","nameLocation":"20306:5:17","nodeType":"VariableDeclaration","scope":3964,"src":"20298:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3952,"name":"address","nodeType":"ElementaryTypeName","src":"20298:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20281:31:17"},"returnParameters":{"id":3957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3964,"src":"20336:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3955,"name":"uint256","nodeType":"ElementaryTypeName","src":"20336:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20335:9:17"},"scope":4376,"src":"20258:152:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3973,"nodeType":"Block","src":"20621:43:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3970,"name":"_totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"20639:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20639:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3969,"id":3972,"nodeType":"Return","src":"20632:24:17"}]},"documentation":{"id":3965,"nodeType":"StructuredDocumentation","src":"20418:139:17","text":" @dev Returns the total valuation of the Baluni ecosystem.\n @return The total valuation of the Baluni ecosystem."},"functionSelector":"295b9300","id":3974,"implemented":true,"kind":"function","modifiers":[],"name":"totalValuation","nameLocation":"20572:14:17","nodeType":"FunctionDefinition","parameters":{"id":3966,"nodeType":"ParameterList","parameters":[],"src":"20586:2:17"},"returnParameters":{"id":3969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3974,"src":"20612:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3967,"name":"uint256","nodeType":"ElementaryTypeName","src":"20612:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20611:9:17"},"scope":4376,"src":"20563:101:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3986,"nodeType":"Block","src":"20961:56:17","statements":[{"expression":{"arguments":[{"id":3983,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"21002:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3982,"name":"_calculateBaluniToUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"20979:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20979:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3981,"id":3985,"nodeType":"Return","src":"20972:37:17"}]},"documentation":{"id":3975,"nodeType":"StructuredDocumentation","src":"20672:208:17","text":" @dev Calculates the value of a given amount of Baluni tokens in USDC.\n @param amount The amount of Baluni tokens.\n @return The calculated value of the Baluni tokens in USDC."},"functionSelector":"71ddcfb8","id":3987,"implemented":true,"kind":"function","modifiers":[],"name":"getUSDCShareValue","nameLocation":"20895:17:17","nodeType":"FunctionDefinition","parameters":{"id":3978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3977,"mutability":"mutable","name":"amount","nameLocation":"20921:6:17","nodeType":"VariableDeclaration","scope":3987,"src":"20913:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3976,"name":"uint256","nodeType":"ElementaryTypeName","src":"20913:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20912:16:17"},"returnParameters":{"id":3981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3987,"src":"20952:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3979,"name":"uint256","nodeType":"ElementaryTypeName","src":"20952:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20951:9:17"},"scope":4376,"src":"20886:131:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4109,"nodeType":"Block","src":"21393:708:17","statements":[{"assignments":[3998],"declarations":[{"constant":false,"id":3998,"mutability":"mutable","name":"rate","nameLocation":"21412:4:17","nodeType":"VariableDeclaration","scope":4109,"src":"21404:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3997,"name":"uint256","nodeType":"ElementaryTypeName","src":"21404:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3999,"nodeType":"VariableDeclarationStatement","src":"21404:12:17"},{"assignments":[4001],"declarations":[{"constant":false,"id":4001,"mutability":"mutable","name":"tokenDecimal","nameLocation":"21433:12:17","nodeType":"VariableDeclaration","scope":4109,"src":"21427:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4000,"name":"uint8","nodeType":"ElementaryTypeName","src":"21427:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4007,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4003,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"21463:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4002,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"21448:14:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1986_$","typeString":"type(contract IERC20Metadata)"}},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21448:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1986","typeString":"contract IERC20Metadata"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21470:8:17","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1985,"src":"21448:30:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21448:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"21427:53:17"},{"assignments":[4009],"declarations":[{"constant":false,"id":4009,"mutability":"mutable","name":"usdcDecimal","nameLocation":"21497:11:17","nodeType":"VariableDeclaration","scope":4109,"src":"21491:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4008,"name":"uint8","nodeType":"ElementaryTypeName","src":"21491:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4018,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[{"id":4013,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"21534:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21526:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4011,"name":"address","nodeType":"ElementaryTypeName","src":"21526:7:17","typeDescriptions":{}}},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21526:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4010,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"21511:14:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1986_$","typeString":"type(contract IERC20Metadata)"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21511:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1986","typeString":"contract IERC20Metadata"}},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21541:8:17","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1985,"src":"21511:38:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21511:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"21491:60:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4019,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"21568:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":4022,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"21585:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21577:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4020,"name":"address","nodeType":"ElementaryTypeName","src":"21577:7:17","typeDescriptions":{}}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21577:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21568:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4029,"nodeType":"IfStatement","src":"21564:48:17","trueBody":{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4025,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"21599:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653132","id":4026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21608:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"21599:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3996,"id":4028,"nodeType":"Return","src":"21592:20:17"}},{"clauses":[{"block":{"id":4049,"nodeType":"Block","src":"21719:39:17","statements":[{"expression":{"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4045,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"21734:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4046,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"21741:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21734:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4048,"nodeType":"ExpressionStatement","src":"21734:12:17"}]},"errorName":"","id":4050,"nodeType":"TryCatchClause","parameters":{"id":4044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4043,"mutability":"mutable","name":"_rate","nameLocation":"21712:5:17","nodeType":"VariableDeclaration","scope":4050,"src":"21704:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4042,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21703:15:17"},"src":"21695:63:17"},{"block":{"id":4053,"nodeType":"Block","src":"21765:35:17","statements":[{"expression":{"hexValue":"30","id":4051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21787:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3996,"id":4052,"nodeType":"Return","src":"21780:8:17"}]},"errorName":"","id":4054,"nodeType":"TryCatchClause","src":"21759:41:17"}],"externalCall":{"arguments":[{"arguments":[{"id":4035,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"21666:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4034,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"21659:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21659:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},{"arguments":[{"id":4038,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"21681:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4037,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"21674:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21674:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},{"hexValue":"66616c7365","id":4040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21688:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":4031,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"21643:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4030,"name":"I1inchSpotAgg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"21629:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_I1inchSpotAgg_$4712_$","typeString":"type(contract I1inchSpotAgg)"}},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21629:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_I1inchSpotAgg_$4712","typeString":"contract I1inchSpotAgg"}},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21651:7:17","memberName":"getRate","nodeType":"MemberAccess","referencedDeclaration":4701,"src":"21629:29:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_contract$_IERC20_$1960_$_t_contract$_IERC20_$1960_$_t_bool_$returns$_t_uint256_$","typeString":"function (contract IERC20,contract IERC20,bool) view external returns (uint256)"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21629:65:17","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4055,"nodeType":"TryStatement","src":"21625:175:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4056,"name":"tokenDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"21816:12:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4057,"name":"usdcDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"21832:11:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"21816:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4070,"nodeType":"IfStatement","src":"21812:73:17","trueBody":{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4059,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"21854:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653132","id":4060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21863:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"21854:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4062,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21853:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"id":4063,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"21872:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4064,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21871:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21853:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4066,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21852:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":4067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21881:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"21852:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3996,"id":4069,"nodeType":"Return","src":"21845:40:17"}},{"assignments":[4072],"declarations":[{"constant":false,"id":4072,"mutability":"mutable","name":"factor","nameLocation":"21906:6:17","nodeType":"VariableDeclaration","scope":4109,"src":"21898:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4071,"name":"uint256","nodeType":"ElementaryTypeName","src":"21898:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4080,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21916:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4074,"name":"tokenDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"21923:12:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4075,"name":"usdcDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"21938:11:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"21923:26:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4077,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21922:28:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"21916:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4079,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21915:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21898:53:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4081,"name":"tokenDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"21968:12:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3138","id":4082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21983:2:17","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"21968:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4097,"nodeType":"IfStatement","src":"21964:74:17","trueBody":{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4084,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"21996:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4085,"name":"factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"22005:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21996:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4087,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21995:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4088,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"22016:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4089,"name":"factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"22023:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22016:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4091,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22015:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21995:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4093,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21994:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":4094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22034:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"21994:44:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3996,"id":4096,"nodeType":"Return","src":"21987:51:17"}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":4098,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"22060:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4099,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22059:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4100,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"22071:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4101,"name":"factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"22078:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22071:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22070:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22059:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4105,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22058:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":4106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22089:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"22058:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3996,"id":4108,"nodeType":"Return","src":"22051:42:17"}]},"documentation":{"id":3988,"nodeType":"StructuredDocumentation","src":"21025:255:17","text":" @dev Calculates the valuation of an ERC20 token based on the amount and token address.\n @param amount The amount of the token.\n @param token The address of the token.\n @return valuation The valuation of the token."},"id":4110,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateERC20Valuation","nameLocation":"21295:24:17","nodeType":"FunctionDefinition","parameters":{"id":3993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3990,"mutability":"mutable","name":"amount","nameLocation":"21328:6:17","nodeType":"VariableDeclaration","scope":4110,"src":"21320:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3989,"name":"uint256","nodeType":"ElementaryTypeName","src":"21320:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3992,"mutability":"mutable","name":"token","nameLocation":"21344:5:17","nodeType":"VariableDeclaration","scope":4110,"src":"21336:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3991,"name":"address","nodeType":"ElementaryTypeName","src":"21336:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21319:31:17"},"returnParameters":{"id":3996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3995,"mutability":"mutable","name":"valuation","nameLocation":"21382:9:17","nodeType":"VariableDeclaration","scope":4110,"src":"21374:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3994,"name":"uint256","nodeType":"ElementaryTypeName","src":"21374:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21373:19:17"},"scope":4376,"src":"21286:815:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4144,"nodeType":"Block","src":"22542:225:17","statements":[{"assignments":[4119],"declarations":[{"constant":false,"id":4119,"mutability":"mutable","name":"totalBaluni","nameLocation":"22561:11:17","nodeType":"VariableDeclaration","scope":4144,"src":"22553:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4118,"name":"uint256","nodeType":"ElementaryTypeName","src":"22553:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4122,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4120,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"22575:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22575:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22553:35:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4124,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"22607:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22621:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22607:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c20737570706c792063616e6e6f74206265207a65726f","id":4127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22624:29:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_075182a57f83974087c76763cd3bc4eedd97b16a8f6ac226f0c2ef23a69b575b","typeString":"literal_string \"Total supply cannot be zero\""},"value":"Total supply cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_075182a57f83974087c76763cd3bc4eedd97b16a8f6ac226f0c2ef23a69b575b","typeString":"literal_string \"Total supply cannot be zero\""}],"id":4123,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22599:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22599:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4129,"nodeType":"ExpressionStatement","src":"22599:55:17"},{"assignments":[4131],"declarations":[{"constant":false,"id":4131,"mutability":"mutable","name":"totalUSDC","nameLocation":"22673:9:17","nodeType":"VariableDeclaration","scope":4144,"src":"22665:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4130,"name":"uint256","nodeType":"ElementaryTypeName","src":"22665:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4134,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4132,"name":"_totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"22685:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22685:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22665:37:17"},{"expression":{"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4135,"name":"shareUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"22713:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4136,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"22726:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4137,"name":"totalUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"22735:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22726:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4139,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22725:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4140,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"22748:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22725:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22713:46:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4143,"nodeType":"ExpressionStatement","src":"22713:46:17"}]},"documentation":{"id":4111,"nodeType":"StructuredDocumentation","src":"22109:337:17","text":" @dev Calculates the equivalent amount of USDC tokens for a given amount of Baluni tokens.\n @param amount The amount of Baluni tokens to convert.\n @return shareUSDC The equivalent amount of USDC tokens.\n Requirements:\n - The total supply of Baluni tokens must be greater than zero."},"id":4145,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateBaluniToUSDC","nameLocation":"22461:22:17","nodeType":"FunctionDefinition","parameters":{"id":4114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4113,"mutability":"mutable","name":"amount","nameLocation":"22492:6:17","nodeType":"VariableDeclaration","scope":4145,"src":"22484:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4112,"name":"uint256","nodeType":"ElementaryTypeName","src":"22484:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22483:16:17"},"returnParameters":{"id":4117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4116,"mutability":"mutable","name":"shareUSDC","nameLocation":"22531:9:17","nodeType":"VariableDeclaration","scope":4145,"src":"22523:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4115,"name":"uint256","nodeType":"ElementaryTypeName","src":"22523:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22522:19:17"},"scope":4376,"src":"22452:315:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4228,"nodeType":"Block","src":"23436:624:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4160,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"23455:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23469:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23455:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c20737570706c792063616e6e6f74206265207a65726f","id":4163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23472:29:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_075182a57f83974087c76763cd3bc4eedd97b16a8f6ac226f0c2ef23a69b575b","typeString":"literal_string \"Total supply cannot be zero\""},"value":"Total supply cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_075182a57f83974087c76763cd3bc4eedd97b16a8f6ac226f0c2ef23a69b575b","typeString":"literal_string \"Total supply cannot be zero\""}],"id":4159,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23447:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23447:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4165,"nodeType":"ExpressionStatement","src":"23447:55:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4167,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"23521:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3138","id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23538:2:17","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"23521:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646563696d616c732073686f756c64206265203c3d203138","id":4170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23542:32:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebe7cb95a2dc7ec969883b54c3194e315832305fa1026cbcfb27ede2b2283804","typeString":"literal_string \"Token decimals should be <= 18\""},"value":"Token decimals should be <= 18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebe7cb95a2dc7ec969883b54c3194e315832305fa1026cbcfb27ede2b2283804","typeString":"literal_string \"Token decimals should be <= 18\""}],"id":4166,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23513:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23513:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4172,"nodeType":"ExpressionStatement","src":"23513:62:17"},{"assignments":[4174],"declarations":[{"constant":false,"id":4174,"mutability":"mutable","name":"baluniAdjusted","nameLocation":"23594:14:17","nodeType":"VariableDeclaration","scope":4228,"src":"23586:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4173,"name":"uint256","nodeType":"ElementaryTypeName","src":"23586:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4175,"nodeType":"VariableDeclarationStatement","src":"23586:22:17"},{"assignments":[4177],"declarations":[{"constant":false,"id":4177,"mutability":"mutable","name":"amountAdjusted","nameLocation":"23627:14:17","nodeType":"VariableDeclaration","scope":4228,"src":"23619:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4176,"name":"uint256","nodeType":"ElementaryTypeName","src":"23619:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4178,"nodeType":"VariableDeclarationStatement","src":"23619:22:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4179,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"23658:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3138","id":4180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23674:2:17","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"23658:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4215,"nodeType":"Block","src":"23845:99:17","statements":[{"expression":{"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4207,"name":"baluniAdjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"23860:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4208,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"23877:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23860:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4210,"nodeType":"ExpressionStatement","src":"23860:28:17"},{"expression":{"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4211,"name":"amountAdjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"23903:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4212,"name":"baluniAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"23920:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23903:29:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4214,"nodeType":"ExpressionStatement","src":"23903:29:17"}]},"id":4216,"nodeType":"IfStatement","src":"23654:290:17","trueBody":{"id":4206,"nodeType":"Block","src":"23678:161:17","statements":[{"expression":{"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4182,"name":"baluniAdjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"23693:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4183,"name":"totalBaluni","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"23710:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23725:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3138","id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23732:2:17","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4186,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"23737:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23732:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4188,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23731:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23725:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4190,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23724:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23710:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23693:59:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4193,"nodeType":"ExpressionStatement","src":"23693:59:17"},{"expression":{"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4194,"name":"amountAdjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"23767:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4195,"name":"baluniAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"23784:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23800:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3138","id":4197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23807:2:17","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4198,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"23812:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23807:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4200,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23806:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23800:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4202,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23799:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23784:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23767:60:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4205,"nodeType":"ExpressionStatement","src":"23767:60:17"}]}},{"assignments":[4218],"declarations":[{"constant":false,"id":4218,"mutability":"mutable","name":"result","nameLocation":"23964:6:17","nodeType":"VariableDeclaration","scope":4228,"src":"23956:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4217,"name":"uint256","nodeType":"ElementaryTypeName","src":"23956:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4225,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4219,"name":"amountAdjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"23974:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4220,"name":"totalERC20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"23991:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23974:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4222,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23973:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4223,"name":"baluniAdjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"24012:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23973:53:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23956:70:17"},{"expression":{"id":4226,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"24046:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4158,"id":4227,"nodeType":"Return","src":"24039:13:17"}]},"documentation":{"id":4146,"nodeType":"StructuredDocumentation","src":"22775:457:17","text":" @dev Calculates the ERC20 share based on the total Baluni supply, total ERC20 balance,\n Baluni amount, and token decimals.\n @param totalBaluni The total supply of Baluni tokens.\n @param totalERC20Balance The total balance of the ERC20 token.\n @param baluniAmount The amount of Baluni tokens.\n @param tokenDecimals The number of decimals for the ERC20 token.\n @return The calculated ERC20 share."},"id":4229,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateERC20Share","nameLocation":"23247:20:17","nodeType":"FunctionDefinition","parameters":{"id":4155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4148,"mutability":"mutable","name":"totalBaluni","nameLocation":"23286:11:17","nodeType":"VariableDeclaration","scope":4229,"src":"23278:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4147,"name":"uint256","nodeType":"ElementaryTypeName","src":"23278:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4150,"mutability":"mutable","name":"totalERC20Balance","nameLocation":"23316:17:17","nodeType":"VariableDeclaration","scope":4229,"src":"23308:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4149,"name":"uint256","nodeType":"ElementaryTypeName","src":"23308:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4152,"mutability":"mutable","name":"baluniAmount","nameLocation":"23352:12:17","nodeType":"VariableDeclaration","scope":4229,"src":"23344:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4151,"name":"uint256","nodeType":"ElementaryTypeName","src":"23344:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4154,"mutability":"mutable","name":"tokenDecimals","nameLocation":"23383:13:17","nodeType":"VariableDeclaration","scope":4229,"src":"23375:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4153,"name":"uint256","nodeType":"ElementaryTypeName","src":"23375:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23267:136:17"},"returnParameters":{"id":4158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4229,"src":"23427:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4156,"name":"uint256","nodeType":"ElementaryTypeName","src":"23427:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23426:9:17"},"scope":4376,"src":"23238:822:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4283,"nodeType":"Block","src":"24306:375:17","statements":[{"assignments":[4236],"declarations":[{"constant":false,"id":4236,"mutability":"mutable","name":"_totalV","nameLocation":"24325:7:17","nodeType":"VariableDeclaration","scope":4283,"src":"24317:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4235,"name":"uint256","nodeType":"ElementaryTypeName","src":"24317:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4237,"nodeType":"VariableDeclarationStatement","src":"24317:15:17"},{"body":{"id":4279,"nodeType":"Block","src":"24387:260:17","statements":[{"assignments":[4250],"declarations":[{"constant":false,"id":4250,"mutability":"mutable","name":"token","nameLocation":"24410:5:17","nodeType":"VariableDeclaration","scope":4279,"src":"24402:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4249,"name":"address","nodeType":"ElementaryTypeName","src":"24402:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4255,"initialValue":{"arguments":[{"id":4253,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"24428:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4251,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"24418:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":4252,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24425:2:17","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":5563,"src":"24418:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$5440_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$5440_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256) view returns (address)"}},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24418:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"24402:28:17"},{"assignments":[4257],"declarations":[{"constant":false,"id":4257,"mutability":"mutable","name":"balance","nameLocation":"24453:7:17","nodeType":"VariableDeclaration","scope":4279,"src":"24445:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4256,"name":"uint256","nodeType":"ElementaryTypeName","src":"24445:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4267,"initialValue":{"arguments":[{"arguments":[{"id":4264,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"24495:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Router_$4376","typeString":"contract BaluniV1Router"}],"id":4263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24487:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4262,"name":"address","nodeType":"ElementaryTypeName","src":"24487:7:17","typeDescriptions":{}}},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24487:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4259,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"24470:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4258,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"24463:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24463:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24477:9:17","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1917,"src":"24463:23:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24463:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24445:56:17"},{"assignments":[4269],"declarations":[{"constant":false,"id":4269,"mutability":"mutable","name":"tokenBalanceValuation","nameLocation":"24524:21:17","nodeType":"VariableDeclaration","scope":4279,"src":"24516:29:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4268,"name":"uint256","nodeType":"ElementaryTypeName","src":"24516:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4274,"initialValue":{"arguments":[{"id":4271,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"24573:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4272,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"24582:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4270,"name":"_calculateERC20Valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"24548:24:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) view returns (uint256)"}},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24548:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24516:72:17"},{"expression":{"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4275,"name":"_totalV","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"24603:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4276,"name":"tokenBalanceValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"24614:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24603:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4278,"nodeType":"ExpressionStatement","src":"24603:32:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4241,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"24361:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4242,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"24365:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":4243,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:17","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":5536,"src":"24365:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$5440_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$5440_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"}},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24365:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24361:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4280,"initializationExpression":{"assignments":[4239],"declarations":[{"constant":false,"id":4239,"mutability":"mutable","name":"i","nameLocation":"24358:1:17","nodeType":"VariableDeclaration","scope":4280,"src":"24350:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4238,"name":"uint256","nodeType":"ElementaryTypeName","src":"24350:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4240,"nodeType":"VariableDeclarationStatement","src":"24350:9:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"24382:3:17","subExpression":{"id":4246,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"24382:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4248,"nodeType":"ExpressionStatement","src":"24382:3:17"},"nodeType":"ForStatement","src":"24345:302:17"},{"expression":{"id":4281,"name":"_totalV","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"24666:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4234,"id":4282,"nodeType":"Return","src":"24659:14:17"}]},"documentation":{"id":4230,"nodeType":"StructuredDocumentation","src":"24068:173:17","text":" @dev Calculates the total valuation of the contract by summing up the valuation of each token held.\n @return The total valuation of the contract."},"id":4284,"implemented":true,"kind":"function","modifiers":[],"name":"_totalValuation","nameLocation":"24256:15:17","nodeType":"FunctionDefinition","parameters":{"id":4231,"nodeType":"ParameterList","parameters":[],"src":"24271:2:17"},"returnParameters":{"id":4234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4284,"src":"24297:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4232,"name":"uint256","nodeType":"ElementaryTypeName","src":"24297:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24296:9:17"},"scope":4376,"src":"24247:434:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4307,"nodeType":"Block","src":"24954:126:17","statements":[{"assignments":[4293],"declarations":[{"constant":false,"id":4293,"mutability":"mutable","name":"amountInWithFee","nameLocation":"24973:15:17","nodeType":"VariableDeclaration","scope":4307,"src":"24965:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4292,"name":"uint256","nodeType":"ElementaryTypeName","src":"24965:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4304,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4294,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"24992:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4295,"name":"_BPS_BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"25003:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"id":4296,"name":"_BPS_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"25016:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4297,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25015:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25003:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4299,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25002:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24992:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4301,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24991:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4302,"name":"_BPS_BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"25030:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:48:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24965:74:17"},{"expression":{"id":4305,"name":"amountInWithFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"25057:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4291,"id":4306,"nodeType":"Return","src":"25050:22:17"}]},"documentation":{"id":4285,"nodeType":"StructuredDocumentation","src":"24689:173:17","text":" @dev Calculates the net amount after deducting the fee.\n @param _amount The input amount.\n @return The net amount after deducting the fee."},"id":4308,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateNetAmountAfterFee","nameLocation":"24877:27:17","nodeType":"FunctionDefinition","parameters":{"id":4288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4287,"mutability":"mutable","name":"_amount","nameLocation":"24913:7:17","nodeType":"VariableDeclaration","scope":4308,"src":"24905:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4286,"name":"uint256","nodeType":"ElementaryTypeName","src":"24905:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24904:17:17"},"returnParameters":{"id":4291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4308,"src":"24945:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4289,"name":"uint256","nodeType":"ElementaryTypeName","src":"24945:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24944:9:17"},"scope":4376,"src":"24868:212:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4352,"nodeType":"Block","src":"25379:165:17","statements":[{"assignments":[4324],"declarations":[{"constant":false,"id":4324,"mutability":"mutable","name":"ret","nameLocation":"25407:3:17","nodeType":"VariableDeclaration","scope":4352,"src":"25390:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4322,"name":"uint256","nodeType":"ElementaryTypeName","src":"25390:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4323,"nodeType":"ArrayTypeName","src":"25390:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4330,"initialValue":{"arguments":[{"id":4328,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"25427:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"25413:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4325,"name":"uint256","nodeType":"ElementaryTypeName","src":"25417:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4326,"nodeType":"ArrayTypeName","src":"25417:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25413:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"25390:42:17"},{"body":{"id":4348,"nodeType":"Block","src":"25474:42:17","statements":[{"expression":{"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4340,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"25489:3:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4342,"indexExpression":{"id":4341,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"25493:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"25489:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4343,"name":"arr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"25498:3:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4345,"indexExpression":{"id":4344,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"25502:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25498:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25489:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4347,"nodeType":"ExpressionStatement","src":"25489:15:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4334,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"25459:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4335,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"25463:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25459:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4349,"initializationExpression":{"assignments":[4332],"declarations":[{"constant":false,"id":4332,"mutability":"mutable","name":"i","nameLocation":"25456:1:17","nodeType":"VariableDeclaration","scope":4349,"src":"25448:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4331,"name":"uint256","nodeType":"ElementaryTypeName","src":"25448:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4333,"nodeType":"VariableDeclarationStatement","src":"25448:9:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"25469:3:17","subExpression":{"id":4337,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"25469:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4339,"nodeType":"ExpressionStatement","src":"25469:3:17"},"nodeType":"ForStatement","src":"25443:73:17"},{"expression":{"id":4350,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"25533:3:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":4319,"id":4351,"nodeType":"Return","src":"25526:10:17"}]},"documentation":{"id":4309,"nodeType":"StructuredDocumentation","src":"25088:191:17","text":" @dev Resizes an array to the specified size.\n @param arr The array to be resized.\n @param size The new size of the array.\n @return The resized array."},"id":4353,"implemented":true,"kind":"function","modifiers":[],"name":"_resize","nameLocation":"25294:7:17","nodeType":"FunctionDefinition","parameters":{"id":4315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4312,"mutability":"mutable","name":"arr","nameLocation":"25319:3:17","nodeType":"VariableDeclaration","scope":4353,"src":"25302:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4310,"name":"uint256","nodeType":"ElementaryTypeName","src":"25302:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4311,"nodeType":"ArrayTypeName","src":"25302:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4314,"mutability":"mutable","name":"size","nameLocation":"25332:4:17","nodeType":"VariableDeclaration","scope":4353,"src":"25324:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4313,"name":"uint256","nodeType":"ElementaryTypeName","src":"25324:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25301:36:17"},"returnParameters":{"id":4319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4353,"src":"25361:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4316,"name":"uint256","nodeType":"ElementaryTypeName","src":"25361:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4317,"nodeType":"ArrayTypeName","src":"25361:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"25360:18:17"},"scope":4376,"src":"25285:259:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4362,"nodeType":"Block","src":"25709:50:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4359,"name":"_getInitializedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"25727:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint64_$","typeString":"function () view returns (uint64)"}},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25727:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4358,"id":4361,"nodeType":"Return","src":"25720:31:17"}]},"documentation":{"id":4354,"nodeType":"StructuredDocumentation","src":"25552:98:17","text":" @dev Returns the version of the contract.\n @return The version string."},"functionSelector":"0d8e6e2c","id":4363,"implemented":true,"kind":"function","modifiers":[],"name":"getVersion","nameLocation":"25665:10:17","nodeType":"FunctionDefinition","parameters":{"id":4355,"nodeType":"ParameterList","parameters":[],"src":"25675:2:17"},"returnParameters":{"id":4358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4363,"src":"25701:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4356,"name":"uint64","nodeType":"ElementaryTypeName","src":"25701:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"25700:8:17"},"scope":4376,"src":"25656:103:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4374,"nodeType":"Block","src":"25978:41:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4370,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"25996:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":4371,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26003:6:17","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":5593,"src":"25996:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$5440_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$5440_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (address[] memory)"}},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25996:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4369,"id":4373,"nodeType":"Return","src":"25989:22:17"}]},"documentation":{"id":4364,"nodeType":"StructuredDocumentation","src":"25767:143:17","text":" @dev Returns an array of addresses representing the tokens.\n @return An array of addresses representing the tokens."},"functionSelector":"aa6ca808","id":4375,"implemented":true,"kind":"function","modifiers":[],"name":"getTokens","nameLocation":"25925:9:17","nodeType":"FunctionDefinition","parameters":{"id":4365,"nodeType":"ParameterList","parameters":[],"src":"25934:2:17"},"returnParameters":{"id":4369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4375,"src":"25960:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4366,"name":"address","nodeType":"ElementaryTypeName","src":"25960:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4367,"nodeType":"ArrayTypeName","src":"25960:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"25959:18:17"},"scope":4376,"src":"25916:103:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4377,"src":"2271:23751:17","usedErrors":[30,35,211,214,475,480,1324,1444,1449,1454,1463,1468,1473,1604,1617,1999,2002],"usedEvents":[41,219,1583,1894,1903,2619,2625,2631,2635,2639,2645]}],"src":"40:25984:17"},"id":17},"contracts/BaluniV1Uniswapper.sol":{"ast":{"absolutePath":"contracts/BaluniV1Uniswapper.sol","exportedSymbols":{"BaluniV1Uniswapper":[4685],"ContextUpgradeable":[1293],"ERC1967Utils":[1872],"ERC20Upgradeable":[1247],"IERC1822Proxiable":[1432],"IERC20":[1960],"IERC20Errors":[1474],"IERC20Metadata":[1986],"ISwapRouter":[2546],"IUniswapV3Factory":[2432],"IUniswapV3SwapCallback":[2446],"Initializable":[448],"OwnableUpgradeable":[194],"ReentrancyGuardUpgradeable":[1422],"UUPSUpgradeable":[630]},"id":4686,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":4378,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:18"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":4379,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4686,"sourceUnit":1248,"src":"1468:78:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":4380,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4686,"sourceUnit":195,"src":"1548:75:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","id":4381,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4686,"sourceUnit":1423,"src":"1625:82:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":4382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4686,"sourceUnit":631,"src":"1709:77:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","file":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","id":4383,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4686,"sourceUnit":2547,"src":"1788:68:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","file":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","id":4384,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4686,"sourceUnit":2433,"src":"1858:69:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":4385,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4686,"sourceUnit":449,"src":"1929:75:18","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"BaluniV1Uniswapper","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4685,"linearizedBaseContracts":[4685],"name":"BaluniV1Uniswapper","nameLocation":"2026:18:18","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4387,"mutability":"mutable","name":"uniswapRouter","nameLocation":"2068:13:18","nodeType":"VariableDeclaration","scope":4685,"src":"2052:29:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4386,"name":"address","nodeType":"ElementaryTypeName","src":"2052:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":4389,"mutability":"mutable","name":"uniswapFactory","nameLocation":"2104:14:18","nodeType":"VariableDeclaration","scope":4685,"src":"2088:30:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4388,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":4463,"nodeType":"Block","src":"3215:407:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4404,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3234:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3238:6:18","memberName":"sender","nodeType":"MemberAccess","src":"3234:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":4408,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3256:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Uniswapper_$4685","typeString":"contract BaluniV1Uniswapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Uniswapper_$4685","typeString":"contract BaluniV1Uniswapper"}],"id":4407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3248:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4406,"name":"address","nodeType":"ElementaryTypeName","src":"3248:7:18","typeDescriptions":{}}},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3248:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3234:27:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57726f6e672073656e646572","id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3263:14:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30","typeString":"literal_string \"Wrong sender\""},"value":"Wrong sender"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30","typeString":"literal_string \"Wrong sender\""}],"id":4403,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3226:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3226:52:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4413,"nodeType":"ExpressionStatement","src":"3226:52:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4415,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"3297:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3306:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3297:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e742069732030","id":4418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3309:13:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_bd1df39dd36f1e6eb64f323d42a553c2ee107dd1993af0ddd848a4eaeb8b679f","typeString":"literal_string \"Amount is 0\""},"value":"Amount is 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bd1df39dd36f1e6eb64f323d42a553c2ee107dd1993af0ddd848a4eaeb8b679f","typeString":"literal_string \"Amount is 0\""}],"id":4414,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3289:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3289:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4420,"nodeType":"ExpressionStatement","src":"3289:34:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":4426,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3367:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3371:6:18","memberName":"sender","nodeType":"MemberAccess","src":"3367:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4423,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"3349:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4422,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"3342:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3342:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3357:9:18","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1917,"src":"3342:24:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3342:36:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4429,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"3382:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3342:46:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742042616c616e6365","id":4431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3390:22:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82","typeString":"literal_string \"Insufficient Balance\""},"value":"Insufficient Balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82","typeString":"literal_string \"Insufficient Balance\""}],"id":4421,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3334:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3334:79:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4433,"nodeType":"ExpressionStatement","src":"3334:79:18"},{"expression":{"arguments":[{"expression":{"id":4438,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3452:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3456:6:18","memberName":"sender","nodeType":"MemberAccess","src":"3452:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4442,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3472:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Uniswapper_$4685","typeString":"contract BaluniV1Uniswapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Uniswapper_$4685","typeString":"contract BaluniV1Uniswapper"}],"id":4441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3464:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4440,"name":"address","nodeType":"ElementaryTypeName","src":"3464:7:18","typeDescriptions":{}}},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3464:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4444,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"3479:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4435,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"3431:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4434,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"3424:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3424:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3439:12:18","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1959,"src":"3424:27:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3424:62:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4446,"nodeType":"ExpressionStatement","src":"3424:62:18"},{"expression":{"arguments":[{"id":4448,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"3512:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4451,"name":"uniswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"3528:13:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3520:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4449,"name":"address","nodeType":"ElementaryTypeName","src":"3520:7:18","typeDescriptions":{}}},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4453,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"3544:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4447,"name":"secureApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"3497:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3497:54:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4455,"nodeType":"ExpressionStatement","src":"3497:54:18"},{"expression":{"arguments":[{"id":4457,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"3581:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4458,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"3589:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4459,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"3597:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4460,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"3605:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4456,"name":"_singleSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"3569:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) returns (uint256)"}},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3569:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4402,"id":4462,"nodeType":"Return","src":"3562:52:18"}]},"documentation":{"id":4390,"nodeType":"StructuredDocumentation","src":"2127:916:18","text":" @dev Executes a single swap between two tokens using Uniswap.\n @param token0 The address of the token to be swapped.\n @param token1 The address of the token to be received.\n @param amount The amount of token0 to be swapped.\n @param receiver The address that will receive the swapped tokens.\n @return amountOut The amount of token1 received from the swap.\n The function requires that the caller has a sufficient balance of token0 and that the amount to be swapped is greater than 0.\n Also, the caller must have approved this contract to spend the amount of token0.\n The function transfers the amount of token0 to be swapped from the caller to this contract, then performs the swap using Uniswap.\n The swapped tokens are sent to the receiver's address.\n The function returns the amount of token1 received from the swap."},"functionSelector":"2d6bc8ea","id":4464,"implemented":true,"kind":"function","modifiers":[],"name":"singleSwap","nameLocation":"3058:10:18","nodeType":"FunctionDefinition","parameters":{"id":4399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4392,"mutability":"mutable","name":"token0","nameLocation":"3087:6:18","nodeType":"VariableDeclaration","scope":4464,"src":"3079:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4391,"name":"address","nodeType":"ElementaryTypeName","src":"3079:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4394,"mutability":"mutable","name":"token1","nameLocation":"3112:6:18","nodeType":"VariableDeclaration","scope":4464,"src":"3104:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4393,"name":"address","nodeType":"ElementaryTypeName","src":"3104:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4396,"mutability":"mutable","name":"amount","nameLocation":"3137:6:18","nodeType":"VariableDeclaration","scope":4464,"src":"3129:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4395,"name":"uint256","nodeType":"ElementaryTypeName","src":"3129:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4398,"mutability":"mutable","name":"receiver","nameLocation":"3162:8:18","nodeType":"VariableDeclaration","scope":4464,"src":"3154:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4397,"name":"address","nodeType":"ElementaryTypeName","src":"3154:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3068:109:18"},"returnParameters":{"id":4402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4401,"mutability":"mutable","name":"amountOut","nameLocation":"3204:9:18","nodeType":"VariableDeclaration","scope":4464,"src":"3196:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4400,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:19:18"},"scope":4685,"src":"3049:573:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4541,"nodeType":"Block","src":"4841:417:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4481,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4860:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4864:6:18","memberName":"sender","nodeType":"MemberAccess","src":"4860:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":4485,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4882:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Uniswapper_$4685","typeString":"contract BaluniV1Uniswapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Uniswapper_$4685","typeString":"contract BaluniV1Uniswapper"}],"id":4484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4874:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4483,"name":"address","nodeType":"ElementaryTypeName","src":"4874:7:18","typeDescriptions":{}}},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4874:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4860:27:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57726f6e672073656e646572","id":4488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4889:14:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30","typeString":"literal_string \"Wrong sender\""},"value":"Wrong sender"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30","typeString":"literal_string \"Wrong sender\""}],"id":4480,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4852:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4852:52:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4490,"nodeType":"ExpressionStatement","src":"4852:52:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4492,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"4923:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4932:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4923:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e742069732030","id":4495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4935:13:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_bd1df39dd36f1e6eb64f323d42a553c2ee107dd1993af0ddd848a4eaeb8b679f","typeString":"literal_string \"Amount is 0\""},"value":"Amount is 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bd1df39dd36f1e6eb64f323d42a553c2ee107dd1993af0ddd848a4eaeb8b679f","typeString":"literal_string \"Amount is 0\""}],"id":4491,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4915:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4915:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4497,"nodeType":"ExpressionStatement","src":"4915:34:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":4503,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4993:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4997:6:18","memberName":"sender","nodeType":"MemberAccess","src":"4993:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4500,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"4975:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4499,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"4968:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4968:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4983:9:18","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1917,"src":"4968:24:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4968:36:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4506,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"5008:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4968:46:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742042616c616e6365","id":4508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5016:22:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82","typeString":"literal_string \"Insufficient Balance\""},"value":"Insufficient Balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82","typeString":"literal_string \"Insufficient Balance\""}],"id":4498,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4960:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4960:79:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4510,"nodeType":"ExpressionStatement","src":"4960:79:18"},{"expression":{"arguments":[{"expression":{"id":4515,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5078:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5082:6:18","memberName":"sender","nodeType":"MemberAccess","src":"5078:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4519,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5098:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Uniswapper_$4685","typeString":"contract BaluniV1Uniswapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Uniswapper_$4685","typeString":"contract BaluniV1Uniswapper"}],"id":4518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5090:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4517,"name":"address","nodeType":"ElementaryTypeName","src":"5090:7:18","typeDescriptions":{}}},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5090:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4521,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"5105:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4512,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"5057:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4511,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"5050:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5050:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5065:12:18","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1959,"src":"5050:27:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5050:62:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4523,"nodeType":"ExpressionStatement","src":"5050:62:18"},{"expression":{"arguments":[{"id":4525,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"5138:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4528,"name":"uniswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"5154:13:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5146:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4526,"name":"address","nodeType":"ElementaryTypeName","src":"5146:7:18","typeDescriptions":{}}},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5146:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4530,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"5170:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4524,"name":"secureApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"5123:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5123:54:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4532,"nodeType":"ExpressionStatement","src":"5123:54:18"},{"expression":{"arguments":[{"id":4534,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"5209:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4535,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"5217:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4536,"name":"token2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"5225:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4537,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"5233:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4538,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"5241:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4533,"name":"_multiHopSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"5195:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,address,uint256,address) returns (uint256)"}},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5195:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4479,"id":4540,"nodeType":"Return","src":"5188:62:18"}]},"documentation":{"id":4465,"nodeType":"StructuredDocumentation","src":"3630:1012:18","text":" @dev Executes a multi-hop swap between three tokens using Uniswap.\n @param token0 The address of the token to be swapped.\n @param token1 The address of the intermediate token to be used for the swap.\n @param token2 The address of the final token to be received.\n @param amount The amount of token0 to be swapped.\n @param receiver The address that will receive the swapped tokens.\n @return amountOut The amount of token2 received from the swap.\n The function requires that the caller has a sufficient balance of token0 and that the amount to be swapped is greater than 0.\n Also, the caller must have approved this contract to spend the amount of token0.\n The function transfers the amount of token0 to be swapped from the caller to this contract, then performs the swap using Uniswap.\n The swapped tokens are sent to the receiver's address.\n The function returns the amount of token2 received from the swap."},"functionSelector":"5efaaebb","id":4542,"implemented":true,"kind":"function","modifiers":[],"name":"multiHopSwap","nameLocation":"4657:12:18","nodeType":"FunctionDefinition","parameters":{"id":4476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4467,"mutability":"mutable","name":"token0","nameLocation":"4688:6:18","nodeType":"VariableDeclaration","scope":4542,"src":"4680:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4466,"name":"address","nodeType":"ElementaryTypeName","src":"4680:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4469,"mutability":"mutable","name":"token1","nameLocation":"4713:6:18","nodeType":"VariableDeclaration","scope":4542,"src":"4705:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4468,"name":"address","nodeType":"ElementaryTypeName","src":"4705:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4471,"mutability":"mutable","name":"token2","nameLocation":"4738:6:18","nodeType":"VariableDeclaration","scope":4542,"src":"4730:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4470,"name":"address","nodeType":"ElementaryTypeName","src":"4730:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4473,"mutability":"mutable","name":"amount","nameLocation":"4763:6:18","nodeType":"VariableDeclaration","scope":4542,"src":"4755:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4472,"name":"uint256","nodeType":"ElementaryTypeName","src":"4755:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4475,"mutability":"mutable","name":"receiver","nameLocation":"4788:8:18","nodeType":"VariableDeclaration","scope":4542,"src":"4780:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4474,"name":"address","nodeType":"ElementaryTypeName","src":"4780:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4669:134:18"},"returnParameters":{"id":4479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4478,"mutability":"mutable","name":"amountOut","nameLocation":"4830:9:18","nodeType":"VariableDeclaration","scope":4542,"src":"4822:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4477,"name":"uint256","nodeType":"ElementaryTypeName","src":"4822:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4821:19:18"},"scope":4685,"src":"4648:610:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4584,"nodeType":"Block","src":"5821:462:18","statements":[{"assignments":[4560],"declarations":[{"constant":false,"id":4560,"mutability":"mutable","name":"params","nameLocation":"5874:6:18","nodeType":"VariableDeclaration","scope":4584,"src":"5832:48:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2470_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":4559,"nodeType":"UserDefinedTypeName","pathNode":{"id":4558,"name":"ISwapRouter.ExactInputSingleParams","nameLocations":["5832:11:18","5844:22:18"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"5832:34:18"},"referencedDeclaration":2470,"src":"5832:34:18","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2470_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"id":4576,"initialValue":{"arguments":[{"id":4563,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"5942:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4564,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"5973:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"33303030","id":4565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5999:4:18","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"},{"arguments":[{"id":4568,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"6037:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6029:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4566,"name":"address","nodeType":"ElementaryTypeName","src":"6029:7:18","typeDescriptions":{}}},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6029:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4570,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6071:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6077:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"6071:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4572,"name":"tokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"6111:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6156:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6191:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":4561,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"5883:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$2546_$","typeString":"type(contract ISwapRouter)"}},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5895:22:18","memberName":"ExactInputSingleParams","nodeType":"MemberAccess","referencedDeclaration":2470,"src":"5883:34:18","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExactInputSingleParams_$2470_storage_ptr_$","typeString":"type(struct ISwapRouter.ExactInputSingleParams storage pointer)"}},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5933:7:18","5963:8:18","5994:3:18","6018:9:18","6061:8:18","6101:8:18","6138:16:18","6172:17:18"],"names":["tokenIn","tokenOut","fee","recipient","deadline","amountIn","amountOutMinimum","sqrtPriceLimitX96"],"nodeType":"FunctionCall","src":"5883:321:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2470_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}},"nodeType":"VariableDeclarationStatement","src":"5832:372:18"},{"expression":{"arguments":[{"id":4581,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"6268:6:18","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2470_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2470_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}],"expression":{"arguments":[{"id":4578,"name":"uniswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"6236:13:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4577,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"6224:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$2546_$","typeString":"type(contract ISwapRouter)"}},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6224:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2546","typeString":"contract ISwapRouter"}},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6251:16:18","memberName":"exactInputSingle","nodeType":"MemberAccess","referencedDeclaration":2479,"src":"6224:43:18","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_ExactInputSingleParams_$2470_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"}},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6224:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4555,"id":4583,"nodeType":"Return","src":"6217:58:18"}]},"documentation":{"id":4543,"nodeType":"StructuredDocumentation","src":"5266:376:18","text":" @dev Executes a single swap on Uniswap.\n @param token0 The address of the input token.\n @param token1 The address of the output token.\n @param tokenBalance The amount of input token to be swapped.\n @param receiver The address that will receive the swapped tokens.\n @return amountOut The amount of output tokens received."},"id":4585,"implemented":true,"kind":"function","modifiers":[],"name":"_singleSwap","nameLocation":"5657:11:18","nodeType":"FunctionDefinition","parameters":{"id":4552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4545,"mutability":"mutable","name":"token0","nameLocation":"5687:6:18","nodeType":"VariableDeclaration","scope":4585,"src":"5679:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4544,"name":"address","nodeType":"ElementaryTypeName","src":"5679:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4547,"mutability":"mutable","name":"token1","nameLocation":"5712:6:18","nodeType":"VariableDeclaration","scope":4585,"src":"5704:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4546,"name":"address","nodeType":"ElementaryTypeName","src":"5704:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4549,"mutability":"mutable","name":"tokenBalance","nameLocation":"5737:12:18","nodeType":"VariableDeclaration","scope":4585,"src":"5729:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4548,"name":"uint256","nodeType":"ElementaryTypeName","src":"5729:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4551,"mutability":"mutable","name":"receiver","nameLocation":"5768:8:18","nodeType":"VariableDeclaration","scope":4585,"src":"5760:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4550,"name":"address","nodeType":"ElementaryTypeName","src":"5760:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5668:115:18"},"returnParameters":{"id":4555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4554,"mutability":"mutable","name":"amountOut","nameLocation":"5810:9:18","nodeType":"VariableDeclaration","scope":4585,"src":"5802:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4553,"name":"uint256","nodeType":"ElementaryTypeName","src":"5802:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5801:19:18"},"scope":4685,"src":"5648:635:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4639,"nodeType":"Block","src":"6998:411:18","statements":[{"assignments":[4605],"declarations":[{"constant":false,"id":4605,"mutability":"mutable","name":"params","nameLocation":"7045:6:18","nodeType":"VariableDeclaration","scope":4639,"src":"7009:42:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$2490_memory_ptr","typeString":"struct ISwapRouter.ExactInputParams"},"typeName":{"id":4604,"nodeType":"UserDefinedTypeName","pathNode":{"id":4603,"name":"ISwapRouter.ExactInputParams","nameLocations":["7009:11:18","7021:16:18"],"nodeType":"IdentifierPath","referencedDeclaration":2490,"src":"7009:28:18"},"referencedDeclaration":2490,"src":"7009:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$2490_storage_ptr","typeString":"struct ISwapRouter.ExactInputParams"}},"visibility":"internal"}],"id":4631,"initialValue":{"arguments":[{"arguments":[{"id":4610,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"7121:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"33303030","id":4613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7136:4:18","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"}],"id":4612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7129:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4611,"name":"uint24","nodeType":"ElementaryTypeName","src":"7129:6:18","typeDescriptions":{}}},"id":4614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7129:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"id":4615,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4590,"src":"7143:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"33303030","id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7158:4:18","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"}],"id":4617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7151:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4616,"name":"uint24","nodeType":"ElementaryTypeName","src":"7151:6:18","typeDescriptions":{}}},"id":4619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"id":4620,"name":"token2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"7165:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4608,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7104:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7108:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"7104:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7104:68:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"id":4624,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"7206:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7198:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4622,"name":"address","nodeType":"ElementaryTypeName","src":"7198:7:18","typeDescriptions":{}}},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7198:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4626,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7240:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7246:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"7240:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4628,"name":"tokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"7280:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":4629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7325:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":4606,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"7054:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$2546_$","typeString":"type(contract ISwapRouter)"}},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7066:16:18","memberName":"ExactInputParams","nodeType":"MemberAccess","referencedDeclaration":2490,"src":"7054:28:18","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExactInputParams_$2490_storage_ptr_$","typeString":"type(struct ISwapRouter.ExactInputParams storage pointer)"}},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7098:4:18","7187:9:18","7230:8:18","7270:8:18","7307:16:18"],"names":["path","recipient","deadline","amountIn","amountOutMinimum"],"nodeType":"FunctionCall","src":"7054:284:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$2490_memory_ptr","typeString":"struct ISwapRouter.ExactInputParams memory"}},"nodeType":"VariableDeclarationStatement","src":"7009:329:18"},{"expression":{"arguments":[{"id":4636,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"7394:6:18","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$2490_memory_ptr","typeString":"struct ISwapRouter.ExactInputParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExactInputParams_$2490_memory_ptr","typeString":"struct ISwapRouter.ExactInputParams memory"}],"expression":{"arguments":[{"id":4633,"name":"uniswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"7368:13:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4632,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"7356:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$2546_$","typeString":"type(contract ISwapRouter)"}},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2546","typeString":"contract ISwapRouter"}},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7383:10:18","memberName":"exactInput","nodeType":"MemberAccess","referencedDeclaration":2499,"src":"7356:37:18","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_ExactInputParams_$2490_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct ISwapRouter.ExactInputParams memory) payable external returns (uint256)"}},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4600,"id":4638,"nodeType":"Return","src":"7349:52:18"}]},"documentation":{"id":4586,"nodeType":"StructuredDocumentation","src":"6291:501:18","text":" @dev Executes a multi-hop swap using the Uniswap router.\n @param token0 The address of the first token in the swap path.\n @param token1 The address of the second token in the swap path.\n @param token2 The address of the third token in the swap path.\n @param tokenBalance The amount of tokens to be swapped.\n @param receiver The address that will receive the swapped tokens.\n @return amountOut The amount of tokens received after the swap."},"id":4640,"implemented":true,"kind":"function","modifiers":[],"name":"_multiHopSwap","nameLocation":"6807:13:18","nodeType":"FunctionDefinition","parameters":{"id":4597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4588,"mutability":"mutable","name":"token0","nameLocation":"6839:6:18","nodeType":"VariableDeclaration","scope":4640,"src":"6831:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4587,"name":"address","nodeType":"ElementaryTypeName","src":"6831:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4590,"mutability":"mutable","name":"token1","nameLocation":"6864:6:18","nodeType":"VariableDeclaration","scope":4640,"src":"6856:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4589,"name":"address","nodeType":"ElementaryTypeName","src":"6856:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4592,"mutability":"mutable","name":"token2","nameLocation":"6889:6:18","nodeType":"VariableDeclaration","scope":4640,"src":"6881:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4591,"name":"address","nodeType":"ElementaryTypeName","src":"6881:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4594,"mutability":"mutable","name":"tokenBalance","nameLocation":"6914:12:18","nodeType":"VariableDeclaration","scope":4640,"src":"6906:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4593,"name":"uint256","nodeType":"ElementaryTypeName","src":"6906:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4596,"mutability":"mutable","name":"receiver","nameLocation":"6945:8:18","nodeType":"VariableDeclaration","scope":4640,"src":"6937:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4595,"name":"address","nodeType":"ElementaryTypeName","src":"6937:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6820:140:18"},"returnParameters":{"id":4600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4599,"mutability":"mutable","name":"amountOut","nameLocation":"6987:9:18","nodeType":"VariableDeclaration","scope":4640,"src":"6979:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4598,"name":"uint256","nodeType":"ElementaryTypeName","src":"6979:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6978:19:18"},"scope":4685,"src":"6798:611:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4683,"nodeType":"Block","src":"7969:253:18","statements":[{"assignments":[4652],"declarations":[{"constant":false,"id":4652,"mutability":"mutable","name":"_token","nameLocation":"7987:6:18","nodeType":"VariableDeclaration","scope":4683,"src":"7980:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"},"typeName":{"id":4651,"nodeType":"UserDefinedTypeName","pathNode":{"id":4650,"name":"IERC20","nameLocations":["7980:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":1960,"src":"7980:6:18"},"referencedDeclaration":1960,"src":"7980:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"visibility":"internal"}],"id":4656,"initialValue":{"arguments":[{"id":4654,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"8003:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4653,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"7996:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1960_$","typeString":"type(contract IERC20)"}},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7996:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"7980:29:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4661,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8090:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Uniswapper_$4685","typeString":"contract BaluniV1Uniswapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Uniswapper_$4685","typeString":"contract BaluniV1Uniswapper"}],"id":4660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8082:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4659,"name":"address","nodeType":"ElementaryTypeName","src":"8082:7:18","typeDescriptions":{}}},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8082:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4663,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"8097:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4657,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"8065:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8072:9:18","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1937,"src":"8065:16:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4665,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"8108:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8065:49:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4682,"nodeType":"IfStatement","src":"8061:154:18","trueBody":{"id":4681,"nodeType":"Block","src":"8116:99:18","statements":[{"expression":{"arguments":[{"id":4670,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"8146:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":4671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8155:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":4667,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"8131:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8138:7:18","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1947,"src":"8131:14:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8131:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4673,"nodeType":"ExpressionStatement","src":"8131:26:18"},{"expression":{"arguments":[{"id":4677,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"8187:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4678,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"8196:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4674,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"8172:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8179:7:18","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1947,"src":"8172:14:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8172:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4680,"nodeType":"ExpressionStatement","src":"8172:31:18"}]}}]},"documentation":{"id":4641,"nodeType":"StructuredDocumentation","src":"7417:465:18","text":" @dev Ensures that the contract has the necessary approval for a token to be spent by a spender.\n If the current allowance is not equal to the desired amount, it updates the allowance accordingly.\n @param token The address of the token to be approved.\n @param spender The address of the spender.\n @param amount The desired allowance amount.\n @notice This function is internal and should not be called directly."},"id":4684,"implemented":true,"kind":"function","modifiers":[],"name":"secureApproval","nameLocation":"7897:14:18","nodeType":"FunctionDefinition","parameters":{"id":4648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4643,"mutability":"mutable","name":"token","nameLocation":"7920:5:18","nodeType":"VariableDeclaration","scope":4684,"src":"7912:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4642,"name":"address","nodeType":"ElementaryTypeName","src":"7912:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4645,"mutability":"mutable","name":"spender","nameLocation":"7935:7:18","nodeType":"VariableDeclaration","scope":4684,"src":"7927:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4644,"name":"address","nodeType":"ElementaryTypeName","src":"7927:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4647,"mutability":"mutable","name":"amount","nameLocation":"7952:6:18","nodeType":"VariableDeclaration","scope":4684,"src":"7944:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4646,"name":"uint256","nodeType":"ElementaryTypeName","src":"7944:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7911:48:18"},"returnParameters":{"id":4649,"nodeType":"ParameterList","parameters":[],"src":"7969:0:18"},"scope":4685,"src":"7888:334:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4686,"src":"2008:6217:18","usedErrors":[],"usedEvents":[]}],"src":"40:8187:18"},"id":18},"contracts/interfaces/I1inchSpotAgg.sol":{"ast":{"absolutePath":"contracts/interfaces/I1inchSpotAgg.sol","exportedSymbols":{"I1inchSpotAgg":[4712],"IERC20":[1960]},"id":4713,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":4687,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:19"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4688,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4713,"sourceUnit":1961,"src":"65:56:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"I1inchSpotAgg","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4712,"linearizedBaseContracts":[4712],"name":"I1inchSpotAgg","nameLocation":"135:13:19","nodeType":"ContractDefinition","nodes":[{"functionSelector":"802431fb","id":4701,"implemented":false,"kind":"function","modifiers":[],"name":"getRate","nameLocation":"163:7:19","nodeType":"FunctionDefinition","parameters":{"id":4697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4691,"mutability":"mutable","name":"srcToken","nameLocation":"178:8:19","nodeType":"VariableDeclaration","scope":4701,"src":"171:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"},"typeName":{"id":4690,"nodeType":"UserDefinedTypeName","pathNode":{"id":4689,"name":"IERC20","nameLocations":["171:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":1960,"src":"171:6:19"},"referencedDeclaration":1960,"src":"171:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4694,"mutability":"mutable","name":"dstToken","nameLocation":"195:8:19","nodeType":"VariableDeclaration","scope":4701,"src":"188:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"},"typeName":{"id":4693,"nodeType":"UserDefinedTypeName","pathNode":{"id":4692,"name":"IERC20","nameLocations":["188:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":1960,"src":"188:6:19"},"referencedDeclaration":1960,"src":"188:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4696,"mutability":"mutable","name":"useWrappers","nameLocation":"210:11:19","nodeType":"VariableDeclaration","scope":4701,"src":"205:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4695,"name":"bool","nodeType":"ElementaryTypeName","src":"205:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"170:52:19"},"returnParameters":{"id":4700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4699,"mutability":"mutable","name":"weightedRate","nameLocation":"254:12:19","nodeType":"VariableDeclaration","scope":4701,"src":"246:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4698,"name":"uint256","nodeType":"ElementaryTypeName","src":"246:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"245:22:19"},"scope":4712,"src":"154:114:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7de4fd10","id":4711,"implemented":false,"kind":"function","modifiers":[],"name":"getRateToEth","nameLocation":"283:12:19","nodeType":"FunctionDefinition","parameters":{"id":4707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4704,"mutability":"mutable","name":"srcToken","nameLocation":"303:8:19","nodeType":"VariableDeclaration","scope":4711,"src":"296:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"},"typeName":{"id":4703,"nodeType":"UserDefinedTypeName","pathNode":{"id":4702,"name":"IERC20","nameLocations":["296:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":1960,"src":"296:6:19"},"referencedDeclaration":1960,"src":"296:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4706,"mutability":"mutable","name":"useWrappers","nameLocation":"318:11:19","nodeType":"VariableDeclaration","scope":4711,"src":"313:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4705,"name":"bool","nodeType":"ElementaryTypeName","src":"313:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"295:35:19"},"returnParameters":{"id":4710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4709,"mutability":"mutable","name":"weightedRate","nameLocation":"362:12:19","nodeType":"VariableDeclaration","scope":4711,"src":"354:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4708,"name":"uint256","nodeType":"ElementaryTypeName","src":"354:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"353:22:19"},"scope":4712,"src":"274:102:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4713,"src":"125:254:19","usedErrors":[],"usedEvents":[]}],"src":"40:341:19"},"id":19},"contracts/interfaces/IBaluniV1Agent.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Agent.sol","exportedSymbols":{"IBaluniV1Agent":[4732]},"id":4733,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":4714,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Agent","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4732,"linearizedBaseContracts":[4732],"name":"IBaluniV1Agent","nameLocation":"77:14:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBaluniV1Agent.Call","id":4721,"members":[{"constant":false,"id":4716,"mutability":"mutable","name":"to","nameLocation":"124:2:20","nodeType":"VariableDeclaration","scope":4721,"src":"116:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4715,"name":"address","nodeType":"ElementaryTypeName","src":"116:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4718,"mutability":"mutable","name":"value","nameLocation":"141:5:20","nodeType":"VariableDeclaration","scope":4721,"src":"133:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4717,"name":"uint256","nodeType":"ElementaryTypeName","src":"133:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4720,"mutability":"mutable","name":"data","nameLocation":"159:4:20","nodeType":"VariableDeclaration","scope":4721,"src":"153:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4719,"name":"bytes","nodeType":"ElementaryTypeName","src":"153:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Call","nameLocation":"104:4:20","nodeType":"StructDefinition","scope":4732,"src":"97:72:20","visibility":"public"},{"functionSelector":"eedc3c50","id":4731,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"184:7:20","nodeType":"FunctionDefinition","parameters":{"id":4729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4725,"mutability":"mutable","name":"calls","nameLocation":"206:5:20","nodeType":"VariableDeclaration","scope":4731,"src":"192:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4721_memory_ptr_$dyn_memory_ptr","typeString":"struct IBaluniV1Agent.Call[]"},"typeName":{"baseType":{"id":4723,"nodeType":"UserDefinedTypeName","pathNode":{"id":4722,"name":"Call","nameLocations":["192:4:20"],"nodeType":"IdentifierPath","referencedDeclaration":4721,"src":"192:4:20"},"referencedDeclaration":4721,"src":"192:4:20","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4721_storage_ptr","typeString":"struct IBaluniV1Agent.Call"}},"id":4724,"nodeType":"ArrayTypeName","src":"192:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4721_storage_$dyn_storage_ptr","typeString":"struct IBaluniV1Agent.Call[]"}},"visibility":"internal"},{"constant":false,"id":4728,"mutability":"mutable","name":"tokensReturn","nameLocation":"230:12:20","nodeType":"VariableDeclaration","scope":4731,"src":"213:29:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4726,"name":"address","nodeType":"ElementaryTypeName","src":"213:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4727,"nodeType":"ArrayTypeName","src":"213:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"191:52:20"},"returnParameters":{"id":4730,"nodeType":"ParameterList","parameters":[],"src":"252:0:20"},"scope":4732,"src":"175:78:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4733,"src":"67:189:20","usedErrors":[],"usedEvents":[]}],"src":"40:218:20"},"id":20},"contracts/interfaces/IBaluniV1AgentFactory.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1AgentFactory.sol","exportedSymbols":{"IBaluniV1AgentFactory":[4749]},"id":4750,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":4734,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:21"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1AgentFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4749,"linearizedBaseContracts":[4749],"name":"IBaluniV1AgentFactory","nameLocation":"77:21:21","nodeType":"ContractDefinition","nodes":[{"functionSelector":"27d54a92","id":4741,"implemented":false,"kind":"function","modifiers":[],"name":"getAgentAddress","nameLocation":"113:15:21","nodeType":"FunctionDefinition","parameters":{"id":4737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4736,"mutability":"mutable","name":"user","nameLocation":"137:4:21","nodeType":"VariableDeclaration","scope":4741,"src":"129:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4735,"name":"address","nodeType":"ElementaryTypeName","src":"129:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"128:14:21"},"returnParameters":{"id":4740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4741,"src":"166:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4738,"name":"address","nodeType":"ElementaryTypeName","src":"166:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"165:9:21"},"scope":4749,"src":"104:71:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9b76a5cd","id":4748,"implemented":false,"kind":"function","modifiers":[],"name":"getOrCreateAgent","nameLocation":"190:16:21","nodeType":"FunctionDefinition","parameters":{"id":4744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4743,"mutability":"mutable","name":"user","nameLocation":"215:4:21","nodeType":"VariableDeclaration","scope":4748,"src":"207:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4742,"name":"address","nodeType":"ElementaryTypeName","src":"207:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"206:14:21"},"returnParameters":{"id":4747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4748,"src":"239:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4745,"name":"address","nodeType":"ElementaryTypeName","src":"239:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"238:9:21"},"scope":4749,"src":"181:67:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4750,"src":"67:184:21","usedErrors":[],"usedEvents":[]}],"src":"40:213:21"},"id":21},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Rebalancer.sol","exportedSymbols":{"I1inchSpotAgg":[4712],"IBaluniV1Agent":[4732],"IBaluniV1Rebalancer":[4870],"IBaluniV1Router":[5128],"IERC20":[1960],"IERC20Metadata":[1986]},"id":4871,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":4751,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:22"},{"absolutePath":"contracts/interfaces/IBaluniV1Router.sol","file":"./IBaluniV1Router.sol","id":4752,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4871,"sourceUnit":5129,"src":"67:31:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Rebalancer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4870,"linearizedBaseContracts":[4870],"name":"IBaluniV1Rebalancer","nameLocation":"112:19:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBaluniV1Rebalancer.RebalanceVars","id":4782,"members":[{"constant":false,"id":4754,"mutability":"mutable","name":"length","nameLocation":"173:6:22","nodeType":"VariableDeclaration","scope":4782,"src":"165:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4753,"name":"uint256","nodeType":"ElementaryTypeName","src":"165:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4756,"mutability":"mutable","name":"totalValue","nameLocation":"194:10:22","nodeType":"VariableDeclaration","scope":4782,"src":"186:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4755,"name":"uint256","nodeType":"ElementaryTypeName","src":"186:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4758,"mutability":"mutable","name":"finalUsdBalance","nameLocation":"219:15:22","nodeType":"VariableDeclaration","scope":4782,"src":"211:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4757,"name":"uint256","nodeType":"ElementaryTypeName","src":"211:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4760,"mutability":"mutable","name":"overweightVaultsLength","nameLocation":"249:22:22","nodeType":"VariableDeclaration","scope":4782,"src":"241:30:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4759,"name":"uint256","nodeType":"ElementaryTypeName","src":"241:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4762,"mutability":"mutable","name":"underweightVaultsLength","nameLocation":"286:23:22","nodeType":"VariableDeclaration","scope":4782,"src":"278:31:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4761,"name":"uint256","nodeType":"ElementaryTypeName","src":"278:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4764,"mutability":"mutable","name":"totalActiveWeight","nameLocation":"324:17:22","nodeType":"VariableDeclaration","scope":4782,"src":"316:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4763,"name":"uint256","nodeType":"ElementaryTypeName","src":"316:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4766,"mutability":"mutable","name":"amountOut","nameLocation":"356:9:22","nodeType":"VariableDeclaration","scope":4782,"src":"348:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4765,"name":"uint256","nodeType":"ElementaryTypeName","src":"348:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4769,"mutability":"mutable","name":"overweightVaults","nameLocation":"382:16:22","nodeType":"VariableDeclaration","scope":4782,"src":"372:26:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4767,"name":"uint256","nodeType":"ElementaryTypeName","src":"372:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4768,"nodeType":"ArrayTypeName","src":"372:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4772,"mutability":"mutable","name":"overweightAmounts","nameLocation":"415:17:22","nodeType":"VariableDeclaration","scope":4782,"src":"405:27:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4770,"name":"uint256","nodeType":"ElementaryTypeName","src":"405:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4771,"nodeType":"ArrayTypeName","src":"405:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4775,"mutability":"mutable","name":"underweightVaults","nameLocation":"449:17:22","nodeType":"VariableDeclaration","scope":4782,"src":"439:27:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4773,"name":"uint256","nodeType":"ElementaryTypeName","src":"439:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4774,"nodeType":"ArrayTypeName","src":"439:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4778,"mutability":"mutable","name":"underweightAmounts","nameLocation":"483:18:22","nodeType":"VariableDeclaration","scope":4782,"src":"473:28:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4776,"name":"uint256","nodeType":"ElementaryTypeName","src":"473:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4777,"nodeType":"ArrayTypeName","src":"473:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4781,"mutability":"mutable","name":"balances","nameLocation":"518:8:22","nodeType":"VariableDeclaration","scope":4782,"src":"508:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4779,"name":"uint256","nodeType":"ElementaryTypeName","src":"508:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4780,"nodeType":"ArrayTypeName","src":"508:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"RebalanceVars","nameLocation":"144:13:22","nodeType":"StructDefinition","scope":4870,"src":"137:395:22","visibility":"public"},{"functionSelector":"39b65140","id":4787,"implemented":false,"kind":"function","modifiers":[],"name":"baluniRouter","nameLocation":"563:12:22","nodeType":"FunctionDefinition","parameters":{"id":4783,"nodeType":"ParameterList","parameters":[],"src":"575:2:22"},"returnParameters":{"id":4786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4787,"src":"601:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4784,"name":"address","nodeType":"ElementaryTypeName","src":"601:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"600:9:22"},"scope":4870,"src":"554:56:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"89a30271","id":4792,"implemented":false,"kind":"function","modifiers":[],"name":"USDC","nameLocation":"625:4:22","nodeType":"FunctionDefinition","parameters":{"id":4788,"nodeType":"ParameterList","parameters":[],"src":"629:2:22"},"returnParameters":{"id":4791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4792,"src":"655:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4789,"name":"address","nodeType":"ElementaryTypeName","src":"655:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"654:9:22"},"scope":4870,"src":"616:48:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b381cf40","id":4797,"implemented":false,"kind":"function","modifiers":[],"name":"WNATIVE","nameLocation":"679:7:22","nodeType":"FunctionDefinition","parameters":{"id":4793,"nodeType":"ParameterList","parameters":[],"src":"686:2:22"},"returnParameters":{"id":4796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4797,"src":"712:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4794,"name":"address","nodeType":"ElementaryTypeName","src":"712:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"711:9:22"},"scope":4870,"src":"670:51:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"735de9f7","id":4802,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapRouter","nameLocation":"736:13:22","nodeType":"FunctionDefinition","parameters":{"id":4798,"nodeType":"ParameterList","parameters":[],"src":"749:2:22"},"returnParameters":{"id":4801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4802,"src":"775:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4799,"name":"address","nodeType":"ElementaryTypeName","src":"775:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"774:9:22"},"scope":4870,"src":"727:57:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8bdb2afa","id":4807,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapFactory","nameLocation":"799:14:22","nodeType":"FunctionDefinition","parameters":{"id":4803,"nodeType":"ParameterList","parameters":[],"src":"813:2:22"},"returnParameters":{"id":4806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4807,"src":"839:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4804,"name":"address","nodeType":"ElementaryTypeName","src":"839:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"838:9:22"},"scope":4870,"src":"790:58:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"eb06b29d","id":4812,"implemented":false,"kind":"function","modifiers":[],"name":"_1InchSpotAgg","nameLocation":"863:13:22","nodeType":"FunctionDefinition","parameters":{"id":4808,"nodeType":"ParameterList","parameters":[],"src":"876:2:22"},"returnParameters":{"id":4811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4812,"src":"902:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4809,"name":"address","nodeType":"ElementaryTypeName","src":"902:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"901:9:22"},"scope":4870,"src":"854:57:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"61d027b3","id":4817,"implemented":false,"kind":"function","modifiers":[],"name":"treasury","nameLocation":"926:8:22","nodeType":"FunctionDefinition","parameters":{"id":4813,"nodeType":"ParameterList","parameters":[],"src":"934:2:22"},"returnParameters":{"id":4816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4817,"src":"960:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4814,"name":"address","nodeType":"ElementaryTypeName","src":"960:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"959:9:22"},"scope":4870,"src":"917:52:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f0bf7714","id":4837,"implemented":false,"kind":"function","modifiers":[],"name":"rebalance","nameLocation":"1000:9:22","nodeType":"FunctionDefinition","parameters":{"id":4835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4820,"mutability":"mutable","name":"balances","nameLocation":"1033:8:22","nodeType":"VariableDeclaration","scope":4837,"src":"1016:25:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4818,"name":"uint256","nodeType":"ElementaryTypeName","src":"1016:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4819,"nodeType":"ArrayTypeName","src":"1016:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4823,"mutability":"mutable","name":"assets","nameLocation":"1067:6:22","nodeType":"VariableDeclaration","scope":4837,"src":"1048:25:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4821,"name":"address","nodeType":"ElementaryTypeName","src":"1048:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4822,"nodeType":"ArrayTypeName","src":"1048:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4826,"mutability":"mutable","name":"weights","nameLocation":"1099:7:22","nodeType":"VariableDeclaration","scope":4837,"src":"1080:26:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4824,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4825,"nodeType":"ArrayTypeName","src":"1080:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4828,"mutability":"mutable","name":"limit","nameLocation":"1121:5:22","nodeType":"VariableDeclaration","scope":4837,"src":"1113:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4827,"name":"uint256","nodeType":"ElementaryTypeName","src":"1113:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4830,"mutability":"mutable","name":"sender","nameLocation":"1141:6:22","nodeType":"VariableDeclaration","scope":4837,"src":"1133:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4829,"name":"address","nodeType":"ElementaryTypeName","src":"1133:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4832,"mutability":"mutable","name":"receiver","nameLocation":"1162:8:22","nodeType":"VariableDeclaration","scope":4837,"src":"1154:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4831,"name":"address","nodeType":"ElementaryTypeName","src":"1154:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4834,"mutability":"mutable","name":"baseAsset","nameLocation":"1185:9:22","nodeType":"VariableDeclaration","scope":4837,"src":"1177:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4833,"name":"address","nodeType":"ElementaryTypeName","src":"1177:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1009:190:22"},"returnParameters":{"id":4836,"nodeType":"ParameterList","parameters":[],"src":"1208:0:22"},"scope":4870,"src":"991:218:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"997146f5","id":4858,"implemented":false,"kind":"function","modifiers":[],"name":"checkRebalance","nameLocation":"1224:14:22","nodeType":"FunctionDefinition","parameters":{"id":4853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4840,"mutability":"mutable","name":"balances","nameLocation":"1262:8:22","nodeType":"VariableDeclaration","scope":4858,"src":"1245:25:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1245:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4839,"nodeType":"ArrayTypeName","src":"1245:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4843,"mutability":"mutable","name":"assets","nameLocation":"1296:6:22","nodeType":"VariableDeclaration","scope":4858,"src":"1277:25:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4841,"name":"address","nodeType":"ElementaryTypeName","src":"1277:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4842,"nodeType":"ArrayTypeName","src":"1277:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4846,"mutability":"mutable","name":"weights","nameLocation":"1328:7:22","nodeType":"VariableDeclaration","scope":4858,"src":"1309:26:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1309:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4845,"nodeType":"ArrayTypeName","src":"1309:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4848,"mutability":"mutable","name":"limit","nameLocation":"1350:5:22","nodeType":"VariableDeclaration","scope":4858,"src":"1342:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4847,"name":"uint256","nodeType":"ElementaryTypeName","src":"1342:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4850,"mutability":"mutable","name":"sender","nameLocation":"1370:6:22","nodeType":"VariableDeclaration","scope":4858,"src":"1362:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4849,"name":"address","nodeType":"ElementaryTypeName","src":"1362:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4852,"mutability":"mutable","name":"baseAsset","nameLocation":"1391:9:22","nodeType":"VariableDeclaration","scope":4858,"src":"1383:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4851,"name":"address","nodeType":"ElementaryTypeName","src":"1383:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1238:167:22"},"returnParameters":{"id":4857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4858,"src":"1429:20:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RebalanceVars_$4782_memory_ptr","typeString":"struct IBaluniV1Rebalancer.RebalanceVars"},"typeName":{"id":4855,"nodeType":"UserDefinedTypeName","pathNode":{"id":4854,"name":"RebalanceVars","nameLocations":["1429:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":4782,"src":"1429:13:22"},"referencedDeclaration":4782,"src":"1429:13:22","typeDescriptions":{"typeIdentifier":"t_struct$_RebalanceVars_$4782_storage_ptr","typeString":"struct IBaluniV1Rebalancer.RebalanceVars"}},"visibility":"internal"}],"src":"1428:22:22"},"scope":4870,"src":"1215:236:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"248391ff","id":4869,"implemented":false,"kind":"function","modifiers":[],"name":"convert","nameLocation":"1466:7:22","nodeType":"FunctionDefinition","parameters":{"id":4865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4860,"mutability":"mutable","name":"fromToken","nameLocation":"1482:9:22","nodeType":"VariableDeclaration","scope":4869,"src":"1474:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4859,"name":"address","nodeType":"ElementaryTypeName","src":"1474:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4862,"mutability":"mutable","name":"toToken","nameLocation":"1501:7:22","nodeType":"VariableDeclaration","scope":4869,"src":"1493:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4861,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4864,"mutability":"mutable","name":"amount","nameLocation":"1518:6:22","nodeType":"VariableDeclaration","scope":4869,"src":"1510:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1510:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1473:52:22"},"returnParameters":{"id":4868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4869,"src":"1549:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4866,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1548:9:22"},"scope":4870,"src":"1457:101:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4871,"src":"102:1459:22","usedErrors":[],"usedEvents":[]}],"src":"40:1523:22"},"id":22},"contracts/interfaces/IBaluniV1Router.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Router.sol","exportedSymbols":{"I1inchSpotAgg":[4712],"IBaluniV1Agent":[4732],"IBaluniV1Router":[5128],"IERC20":[1960],"IERC20Metadata":[1986]},"id":5129,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":4872,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:23"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4873,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5129,"sourceUnit":1961,"src":"67:56:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":4874,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5129,"sourceUnit":1987,"src":"125:75:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/I1inchSpotAgg.sol","file":"./I1inchSpotAgg.sol","id":4875,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5129,"sourceUnit":4713,"src":"202:29:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Agent.sol","file":"./IBaluniV1Agent.sol","id":4876,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5129,"sourceUnit":4733,"src":"233:30:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Router","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5128,"linearizedBaseContracts":[5128],"name":"IBaluniV1Router","nameLocation":"277:15:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBaluniV1Router.Call","id":4883,"members":[{"constant":false,"id":4878,"mutability":"mutable","name":"to","nameLocation":"325:2:23","nodeType":"VariableDeclaration","scope":4883,"src":"317:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4877,"name":"address","nodeType":"ElementaryTypeName","src":"317:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4880,"mutability":"mutable","name":"value","nameLocation":"342:5:23","nodeType":"VariableDeclaration","scope":4883,"src":"334:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4879,"name":"uint256","nodeType":"ElementaryTypeName","src":"334:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4882,"mutability":"mutable","name":"data","nameLocation":"360:4:23","nodeType":"VariableDeclaration","scope":4883,"src":"354:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4881,"name":"bytes","nodeType":"ElementaryTypeName","src":"354:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Call","nameLocation":"305:4:23","nodeType":"StructDefinition","scope":5128,"src":"298:72:23","visibility":"public"},{"functionSelector":"34decfc9","id":4888,"implemented":false,"kind":"function","modifiers":[],"name":"_MAX_BPS_FEE","nameLocation":"401:12:23","nodeType":"FunctionDefinition","parameters":{"id":4884,"nodeType":"ParameterList","parameters":[],"src":"413:2:23"},"returnParameters":{"id":4887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4888,"src":"439:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4885,"name":"uint256","nodeType":"ElementaryTypeName","src":"439:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"438:9:23"},"scope":5128,"src":"392:56:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b9f5e617","id":4893,"implemented":false,"kind":"function","modifiers":[],"name":"_BPS_FEE","nameLocation":"463:8:23","nodeType":"FunctionDefinition","parameters":{"id":4889,"nodeType":"ParameterList","parameters":[],"src":"471:2:23"},"returnParameters":{"id":4892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4893,"src":"497:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4890,"name":"uint256","nodeType":"ElementaryTypeName","src":"497:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"496:9:23"},"scope":5128,"src":"454:52:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"85377188","id":4898,"implemented":false,"kind":"function","modifiers":[],"name":"_BPS_BASE","nameLocation":"521:9:23","nodeType":"FunctionDefinition","parameters":{"id":4894,"nodeType":"ParameterList","parameters":[],"src":"530:2:23"},"returnParameters":{"id":4897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4898,"src":"556:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4895,"name":"uint256","nodeType":"ElementaryTypeName","src":"556:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"555:9:23"},"scope":5128,"src":"512:53:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"aa6ca808","id":4904,"implemented":false,"kind":"function","modifiers":[],"name":"getTokens","nameLocation":"580:9:23","nodeType":"FunctionDefinition","parameters":{"id":4899,"nodeType":"ParameterList","parameters":[],"src":"589:2:23"},"returnParameters":{"id":4903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4904,"src":"615:16:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4900,"name":"address","nodeType":"ElementaryTypeName","src":"615:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4901,"nodeType":"ArrayTypeName","src":"615:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"614:18:23"},"scope":5128,"src":"571:62:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"89a30271","id":4910,"implemented":false,"kind":"function","modifiers":[],"name":"USDC","nameLocation":"648:4:23","nodeType":"FunctionDefinition","parameters":{"id":4905,"nodeType":"ParameterList","parameters":[],"src":"652:2:23"},"returnParameters":{"id":4909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4910,"src":"678:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"},"typeName":{"id":4907,"nodeType":"UserDefinedTypeName","pathNode":{"id":4906,"name":"IERC20","nameLocations":["678:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1960,"src":"678:6:23"},"referencedDeclaration":1960,"src":"678:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1960","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"677:8:23"},"scope":5128,"src":"639:47:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b381cf40","id":4915,"implemented":false,"kind":"function","modifiers":[],"name":"WNATIVE","nameLocation":"701:7:23","nodeType":"FunctionDefinition","parameters":{"id":4911,"nodeType":"ParameterList","parameters":[],"src":"708:2:23"},"returnParameters":{"id":4914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4915,"src":"734:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4912,"name":"address","nodeType":"ElementaryTypeName","src":"734:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"733:9:23"},"scope":5128,"src":"692:51:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7dc0d1d0","id":4920,"implemented":false,"kind":"function","modifiers":[],"name":"oracle","nameLocation":"758:6:23","nodeType":"FunctionDefinition","parameters":{"id":4916,"nodeType":"ParameterList","parameters":[],"src":"764:2:23"},"returnParameters":{"id":4919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4920,"src":"790:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4917,"name":"address","nodeType":"ElementaryTypeName","src":"790:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"789:9:23"},"scope":5128,"src":"749:50:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"735de9f7","id":4925,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapRouter","nameLocation":"814:13:23","nodeType":"FunctionDefinition","parameters":{"id":4921,"nodeType":"ParameterList","parameters":[],"src":"827:2:23"},"returnParameters":{"id":4924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4925,"src":"853:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4922,"name":"address","nodeType":"ElementaryTypeName","src":"853:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"852:9:23"},"scope":5128,"src":"805:57:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8bdb2afa","id":4930,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapFactory","nameLocation":"877:14:23","nodeType":"FunctionDefinition","parameters":{"id":4926,"nodeType":"ParameterList","parameters":[],"src":"891:2:23"},"returnParameters":{"id":4929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4930,"src":"917:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4927,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"916:9:23"},"scope":5128,"src":"868:58:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7df107ea","id":4935,"implemented":false,"kind":"function","modifiers":[],"name":"agentFactory","nameLocation":"941:12:23","nodeType":"FunctionDefinition","parameters":{"id":4931,"nodeType":"ParameterList","parameters":[],"src":"953:2:23"},"returnParameters":{"id":4934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4935,"src":"979:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4932,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"978:9:23"},"scope":5128,"src":"932:56:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"60961528","id":4940,"implemented":false,"kind":"function","modifiers":[],"name":"marketOracle","nameLocation":"1003:12:23","nodeType":"FunctionDefinition","parameters":{"id":4936,"nodeType":"ParameterList","parameters":[],"src":"1015:2:23"},"returnParameters":{"id":4939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4940,"src":"1041:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4937,"name":"address","nodeType":"ElementaryTypeName","src":"1041:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1040:9:23"},"scope":5128,"src":"994:56:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"01d22ccd","id":4945,"implemented":false,"kind":"function","modifiers":[],"name":"rebalancer","nameLocation":"1065:10:23","nodeType":"FunctionDefinition","parameters":{"id":4941,"nodeType":"ParameterList","parameters":[],"src":"1075:2:23"},"returnParameters":{"id":4944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4945,"src":"1101:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4942,"name":"address","nodeType":"ElementaryTypeName","src":"1101:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1100:9:23"},"scope":5128,"src":"1056:54:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"61d027b3","id":4950,"implemented":false,"kind":"function","modifiers":[],"name":"treasury","nameLocation":"1125:8:23","nodeType":"FunctionDefinition","parameters":{"id":4946,"nodeType":"ParameterList","parameters":[],"src":"1133:2:23"},"returnParameters":{"id":4949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4950,"src":"1159:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4947,"name":"address","nodeType":"ElementaryTypeName","src":"1159:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1158:9:23"},"scope":5128,"src":"1116:52:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cc2a9a5b","id":4965,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"1199:10:23","nodeType":"FunctionDefinition","parameters":{"id":4963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4952,"mutability":"mutable","name":"_usdc","nameLocation":"1224:5:23","nodeType":"VariableDeclaration","scope":4965,"src":"1216:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4951,"name":"address","nodeType":"ElementaryTypeName","src":"1216:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4954,"mutability":"mutable","name":"_wnative","nameLocation":"1244:8:23","nodeType":"VariableDeclaration","scope":4965,"src":"1236:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4953,"name":"address","nodeType":"ElementaryTypeName","src":"1236:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4956,"mutability":"mutable","name":"_1inchSpotAgg","nameLocation":"1267:13:23","nodeType":"VariableDeclaration","scope":4965,"src":"1259:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4955,"name":"address","nodeType":"ElementaryTypeName","src":"1259:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4958,"mutability":"mutable","name":"_uniRouter","nameLocation":"1295:10:23","nodeType":"VariableDeclaration","scope":4965,"src":"1287:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4957,"name":"address","nodeType":"ElementaryTypeName","src":"1287:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4960,"mutability":"mutable","name":"_uniFactory","nameLocation":"1320:11:23","nodeType":"VariableDeclaration","scope":4965,"src":"1312:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4959,"name":"address","nodeType":"ElementaryTypeName","src":"1312:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4962,"mutability":"mutable","name":"_rebalancer","nameLocation":"1346:11:23","nodeType":"VariableDeclaration","scope":4965,"src":"1338:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4961,"name":"address","nodeType":"ElementaryTypeName","src":"1338:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1209:153:23"},"returnParameters":{"id":4964,"nodeType":"ParameterList","parameters":[],"src":"1371:0:23"},"scope":5128,"src":"1190:182:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b0d60ba0","id":4982,"implemented":false,"kind":"function","modifiers":[],"name":"reinitialize","nameLocation":"1387:12:23","nodeType":"FunctionDefinition","parameters":{"id":4980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4967,"mutability":"mutable","name":"_usdc","nameLocation":"1414:5:23","nodeType":"VariableDeclaration","scope":4982,"src":"1406:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4966,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4969,"mutability":"mutable","name":"_wnative","nameLocation":"1434:8:23","nodeType":"VariableDeclaration","scope":4982,"src":"1426:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4968,"name":"address","nodeType":"ElementaryTypeName","src":"1426:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4971,"mutability":"mutable","name":"_1inchSpotAgg","nameLocation":"1457:13:23","nodeType":"VariableDeclaration","scope":4982,"src":"1449:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4970,"name":"address","nodeType":"ElementaryTypeName","src":"1449:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4973,"mutability":"mutable","name":"_uniRouter","nameLocation":"1485:10:23","nodeType":"VariableDeclaration","scope":4982,"src":"1477:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4972,"name":"address","nodeType":"ElementaryTypeName","src":"1477:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4975,"mutability":"mutable","name":"_uniFactory","nameLocation":"1510:11:23","nodeType":"VariableDeclaration","scope":4982,"src":"1502:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4974,"name":"address","nodeType":"ElementaryTypeName","src":"1502:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4977,"mutability":"mutable","name":"_rebalancer","nameLocation":"1536:11:23","nodeType":"VariableDeclaration","scope":4982,"src":"1528:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4976,"name":"address","nodeType":"ElementaryTypeName","src":"1528:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4979,"mutability":"mutable","name":"version","nameLocation":"1561:7:23","nodeType":"VariableDeclaration","scope":4982,"src":"1554:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4978,"name":"uint64","nodeType":"ElementaryTypeName","src":"1554:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1399:174:23"},"returnParameters":{"id":4981,"nodeType":"ParameterList","parameters":[],"src":"1582:0:23"},"scope":5128,"src":"1378:205:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"980d24f9","id":4987,"implemented":false,"kind":"function","modifiers":[],"name":"initializeMarketOracle","nameLocation":"1598:22:23","nodeType":"FunctionDefinition","parameters":{"id":4985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4984,"mutability":"mutable","name":"_marketOracle","nameLocation":"1629:13:23","nodeType":"VariableDeclaration","scope":4987,"src":"1621:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4983,"name":"address","nodeType":"ElementaryTypeName","src":"1621:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1620:23:23"},"returnParameters":{"id":4986,"nodeType":"ParameterList","parameters":[],"src":"1652:0:23"},"scope":5128,"src":"1589:64:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"35aa0efa","id":4992,"implemented":false,"kind":"function","modifiers":[],"name":"changeMarketOracle","nameLocation":"1668:18:23","nodeType":"FunctionDefinition","parameters":{"id":4990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4989,"mutability":"mutable","name":"_marketOracle","nameLocation":"1695:13:23","nodeType":"VariableDeclaration","scope":4992,"src":"1687:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4988,"name":"address","nodeType":"ElementaryTypeName","src":"1687:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1686:23:23"},"returnParameters":{"id":4991,"nodeType":"ParameterList","parameters":[],"src":"1718:0:23"},"scope":5128,"src":"1659:60:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"06497cb9","id":4997,"implemented":false,"kind":"function","modifiers":[],"name":"changeBpsFee","nameLocation":"1734:12:23","nodeType":"FunctionDefinition","parameters":{"id":4995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4994,"mutability":"mutable","name":"_newFee","nameLocation":"1755:7:23","nodeType":"VariableDeclaration","scope":4997,"src":"1747:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4993,"name":"uint256","nodeType":"ElementaryTypeName","src":"1747:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1746:17:23"},"returnParameters":{"id":4996,"nodeType":"ParameterList","parameters":[],"src":"1772:0:23"},"scope":5128,"src":"1725:48:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b14f2a39","id":5002,"implemented":false,"kind":"function","modifiers":[],"name":"changeTreasury","nameLocation":"1788:14:23","nodeType":"FunctionDefinition","parameters":{"id":5000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4999,"mutability":"mutable","name":"_newTreasury","nameLocation":"1811:12:23","nodeType":"VariableDeclaration","scope":5002,"src":"1803:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4998,"name":"address","nodeType":"ElementaryTypeName","src":"1803:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1802:22:23"},"returnParameters":{"id":5001,"nodeType":"ParameterList","parameters":[],"src":"1833:0:23"},"scope":5128,"src":"1779:55:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0918281b","id":5007,"implemented":false,"kind":"function","modifiers":[],"name":"changeRebalancer","nameLocation":"1849:16:23","nodeType":"FunctionDefinition","parameters":{"id":5005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5004,"mutability":"mutable","name":"_newRebalancer","nameLocation":"1874:14:23","nodeType":"VariableDeclaration","scope":5007,"src":"1866:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5003,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1865:24:23"},"returnParameters":{"id":5006,"nodeType":"ParameterList","parameters":[],"src":"1898:0:23"},"scope":5128,"src":"1840:59:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0a38abab","id":5012,"implemented":false,"kind":"function","modifiers":[],"name":"changeAgentFactory","nameLocation":"1914:18:23","nodeType":"FunctionDefinition","parameters":{"id":5010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5009,"mutability":"mutable","name":"_agentFactory","nameLocation":"1941:13:23","nodeType":"VariableDeclaration","scope":5012,"src":"1933:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5008,"name":"address","nodeType":"ElementaryTypeName","src":"1933:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1932:23:23"},"returnParameters":{"id":5011,"nodeType":"ParameterList","parameters":[],"src":"1964:0:23"},"scope":5128,"src":"1905:60:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"eedc3c50","id":5022,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"1980:7:23","nodeType":"FunctionDefinition","parameters":{"id":5020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5016,"mutability":"mutable","name":"calls","nameLocation":"2017:5:23","nodeType":"VariableDeclaration","scope":5022,"src":"1988:34:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4721_memory_ptr_$dyn_memory_ptr","typeString":"struct IBaluniV1Agent.Call[]"},"typeName":{"baseType":{"id":5014,"nodeType":"UserDefinedTypeName","pathNode":{"id":5013,"name":"IBaluniV1Agent.Call","nameLocations":["1988:14:23","2003:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":4721,"src":"1988:19:23"},"referencedDeclaration":4721,"src":"1988:19:23","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4721_storage_ptr","typeString":"struct IBaluniV1Agent.Call"}},"id":5015,"nodeType":"ArrayTypeName","src":"1988:21:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4721_storage_$dyn_storage_ptr","typeString":"struct IBaluniV1Agent.Call[]"}},"visibility":"internal"},{"constant":false,"id":5019,"mutability":"mutable","name":"tokensReturn","nameLocation":"2041:12:23","nodeType":"VariableDeclaration","scope":5022,"src":"2024:29:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5017,"name":"address","nodeType":"ElementaryTypeName","src":"2024:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5018,"nodeType":"ArrayTypeName","src":"2024:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1987:67:23"},"returnParameters":{"id":5021,"nodeType":"ParameterList","parameters":[],"src":"2063:0:23"},"scope":5128,"src":"1971:93:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2f865568","id":5027,"implemented":false,"kind":"function","modifiers":[],"name":"liquidate","nameLocation":"2079:9:23","nodeType":"FunctionDefinition","parameters":{"id":5025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5024,"mutability":"mutable","name":"token","nameLocation":"2097:5:23","nodeType":"VariableDeclaration","scope":5027,"src":"2089:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5023,"name":"address","nodeType":"ElementaryTypeName","src":"2089:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2088:15:23"},"returnParameters":{"id":5026,"nodeType":"ParameterList","parameters":[],"src":"2112:0:23"},"scope":5128,"src":"2070:43:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3c2066a9","id":5030,"implemented":false,"kind":"function","modifiers":[],"name":"liquidateAll","nameLocation":"2128:12:23","nodeType":"FunctionDefinition","parameters":{"id":5028,"nodeType":"ParameterList","parameters":[],"src":"2140:2:23"},"returnParameters":{"id":5029,"nodeType":"ParameterList","parameters":[],"src":"2151:0:23"},"scope":5128,"src":"2119:33:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1a168da2","id":5035,"implemented":false,"kind":"function","modifiers":[],"name":"burnERC20","nameLocation":"2167:9:23","nodeType":"FunctionDefinition","parameters":{"id":5033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5032,"mutability":"mutable","name":"burnAmount","nameLocation":"2185:10:23","nodeType":"VariableDeclaration","scope":5035,"src":"2177:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5031,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2176:20:23"},"returnParameters":{"id":5034,"nodeType":"ParameterList","parameters":[],"src":"2205:0:23"},"scope":5128,"src":"2158:48:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fe0a4dd1","id":5040,"implemented":false,"kind":"function","modifiers":[],"name":"burnUSDC","nameLocation":"2221:8:23","nodeType":"FunctionDefinition","parameters":{"id":5038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5037,"mutability":"mutable","name":"burnAmount","nameLocation":"2238:10:23","nodeType":"VariableDeclaration","scope":5040,"src":"2230:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5036,"name":"uint256","nodeType":"ElementaryTypeName","src":"2230:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2229:20:23"},"returnParameters":{"id":5039,"nodeType":"ParameterList","parameters":[],"src":"2258:0:23"},"scope":5128,"src":"2212:47:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"27d54a92","id":5047,"implemented":false,"kind":"function","modifiers":[],"name":"getAgentAddress","nameLocation":"2274:15:23","nodeType":"FunctionDefinition","parameters":{"id":5043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5042,"mutability":"mutable","name":"_user","nameLocation":"2298:5:23","nodeType":"VariableDeclaration","scope":5047,"src":"2290:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5041,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2289:15:23"},"returnParameters":{"id":5046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5047,"src":"2328:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5044,"name":"address","nodeType":"ElementaryTypeName","src":"2328:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2327:9:23"},"scope":5128,"src":"2265:72:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0cfc7386","id":5052,"implemented":false,"kind":"function","modifiers":[],"name":"mintWithUSDC","nameLocation":"2352:12:23","nodeType":"FunctionDefinition","parameters":{"id":5050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5049,"mutability":"mutable","name":"balAmountToMint","nameLocation":"2373:15:23","nodeType":"VariableDeclaration","scope":5052,"src":"2365:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5048,"name":"uint256","nodeType":"ElementaryTypeName","src":"2365:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2364:25:23"},"returnParameters":{"id":5051,"nodeType":"ParameterList","parameters":[],"src":"2398:0:23"},"scope":5128,"src":"2343:56:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"599f69f7","id":5069,"implemented":false,"kind":"function","modifiers":[],"name":"callRebalance","nameLocation":"2414:13:23","nodeType":"FunctionDefinition","parameters":{"id":5067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5055,"mutability":"mutable","name":"assets","nameLocation":"2453:6:23","nodeType":"VariableDeclaration","scope":5069,"src":"2434:25:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5053,"name":"address","nodeType":"ElementaryTypeName","src":"2434:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5054,"nodeType":"ArrayTypeName","src":"2434:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5058,"mutability":"mutable","name":"weights","nameLocation":"2485:7:23","nodeType":"VariableDeclaration","scope":5069,"src":"2466:26:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5056,"name":"uint256","nodeType":"ElementaryTypeName","src":"2466:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5057,"nodeType":"ArrayTypeName","src":"2466:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5060,"mutability":"mutable","name":"sender","nameLocation":"2507:6:23","nodeType":"VariableDeclaration","scope":5069,"src":"2499:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5059,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5062,"mutability":"mutable","name":"receiver","nameLocation":"2528:8:23","nodeType":"VariableDeclaration","scope":5069,"src":"2520:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5061,"name":"address","nodeType":"ElementaryTypeName","src":"2520:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5064,"mutability":"mutable","name":"limit","nameLocation":"2551:5:23","nodeType":"VariableDeclaration","scope":5069,"src":"2543:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5063,"name":"uint256","nodeType":"ElementaryTypeName","src":"2543:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5066,"mutability":"mutable","name":"baseAsset","nameLocation":"2571:9:23","nodeType":"VariableDeclaration","scope":5069,"src":"2563:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5065,"name":"address","nodeType":"ElementaryTypeName","src":"2563:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:158:23"},"returnParameters":{"id":5068,"nodeType":"ParameterList","parameters":[],"src":"2594:0:23"},"scope":5128,"src":"2405:190:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"aa95d893","id":5076,"implemented":false,"kind":"function","modifiers":[],"name":"requiredUSDCtoMint","nameLocation":"2610:18:23","nodeType":"FunctionDefinition","parameters":{"id":5072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5071,"mutability":"mutable","name":"balAmountToMint","nameLocation":"2637:15:23","nodeType":"VariableDeclaration","scope":5076,"src":"2629:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5070,"name":"uint256","nodeType":"ElementaryTypeName","src":"2629:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2628:25:23"},"returnParameters":{"id":5075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5076,"src":"2677:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5073,"name":"uint256","nodeType":"ElementaryTypeName","src":"2677:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:9:23"},"scope":5128,"src":"2601:85:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fe330a51","id":5089,"implemented":false,"kind":"function","modifiers":[],"name":"calculateTokenShare","nameLocation":"2701:19:23","nodeType":"FunctionDefinition","parameters":{"id":5085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5078,"mutability":"mutable","name":"totalBaluni","nameLocation":"2735:11:23","nodeType":"VariableDeclaration","scope":5089,"src":"2727:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5077,"name":"uint256","nodeType":"ElementaryTypeName","src":"2727:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5080,"mutability":"mutable","name":"totalERC20Balance","nameLocation":"2761:17:23","nodeType":"VariableDeclaration","scope":5089,"src":"2753:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5079,"name":"uint256","nodeType":"ElementaryTypeName","src":"2753:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5082,"mutability":"mutable","name":"baluniAmount","nameLocation":"2793:12:23","nodeType":"VariableDeclaration","scope":5089,"src":"2785:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5081,"name":"uint256","nodeType":"ElementaryTypeName","src":"2785:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5084,"mutability":"mutable","name":"tokenDecimals","nameLocation":"2820:13:23","nodeType":"VariableDeclaration","scope":5089,"src":"2812:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5083,"name":"uint256","nodeType":"ElementaryTypeName","src":"2812:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2720:118:23"},"returnParameters":{"id":5088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5089,"src":"2862:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5086,"name":"uint256","nodeType":"ElementaryTypeName","src":"2862:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2861:9:23"},"scope":5128,"src":"2692:179:23","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"2bdd955a","id":5098,"implemented":false,"kind":"function","modifiers":[],"name":"tokenValuation","nameLocation":"2886:14:23","nodeType":"FunctionDefinition","parameters":{"id":5094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5091,"mutability":"mutable","name":"amount","nameLocation":"2909:6:23","nodeType":"VariableDeclaration","scope":5098,"src":"2901:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5090,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5093,"mutability":"mutable","name":"token","nameLocation":"2925:5:23","nodeType":"VariableDeclaration","scope":5098,"src":"2917:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5092,"name":"address","nodeType":"ElementaryTypeName","src":"2917:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2900:31:23"},"returnParameters":{"id":5097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5098,"src":"2955:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5095,"name":"uint256","nodeType":"ElementaryTypeName","src":"2955:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2954:9:23"},"scope":5128,"src":"2877:87:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"295b9300","id":5103,"implemented":false,"kind":"function","modifiers":[],"name":"totalValuation","nameLocation":"2979:14:23","nodeType":"FunctionDefinition","parameters":{"id":5099,"nodeType":"ParameterList","parameters":[],"src":"2993:2:23"},"returnParameters":{"id":5102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5103,"src":"3019:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5100,"name":"uint256","nodeType":"ElementaryTypeName","src":"3019:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3018:9:23"},"scope":5128,"src":"2970:58:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"71ddcfb8","id":5110,"implemented":false,"kind":"function","modifiers":[],"name":"getUSDCShareValue","nameLocation":"3043:17:23","nodeType":"FunctionDefinition","parameters":{"id":5106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5105,"mutability":"mutable","name":"amount","nameLocation":"3069:6:23","nodeType":"VariableDeclaration","scope":5110,"src":"3061:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5104,"name":"uint256","nodeType":"ElementaryTypeName","src":"3061:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3060:16:23"},"returnParameters":{"id":5109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5110,"src":"3100:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5107,"name":"uint256","nodeType":"ElementaryTypeName","src":"3100:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3099:9:23"},"scope":5128,"src":"3034:75:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8d483df1","id":5117,"implemented":false,"kind":"function","modifiers":[],"name":"fetchMarketPrices","nameLocation":"3124:17:23","nodeType":"FunctionDefinition","parameters":{"id":5111,"nodeType":"ParameterList","parameters":[],"src":"3141:2:23"},"returnParameters":{"id":5116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5117,"src":"3167:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5112,"name":"uint256","nodeType":"ElementaryTypeName","src":"3167:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5117,"src":"3176:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5114,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3166:18:23"},"scope":5128,"src":"3115:70:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0d8e6e2c","id":5122,"implemented":false,"kind":"function","modifiers":[],"name":"getVersion","nameLocation":"3200:10:23","nodeType":"FunctionDefinition","parameters":{"id":5118,"nodeType":"ParameterList","parameters":[],"src":"3210:2:23"},"returnParameters":{"id":5121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5122,"src":"3236:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5119,"name":"uint64","nodeType":"ElementaryTypeName","src":"3236:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3235:8:23"},"scope":5128,"src":"3191:53:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e73faa2d","id":5127,"implemented":false,"kind":"function","modifiers":[],"name":"unitPrice","nameLocation":"3259:9:23","nodeType":"FunctionDefinition","parameters":{"id":5123,"nodeType":"ParameterList","parameters":[],"src":"3268:2:23"},"returnParameters":{"id":5126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5127,"src":"3294:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5124,"name":"uint256","nodeType":"ElementaryTypeName","src":"3294:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3293:9:23"},"scope":5128,"src":"3250:53:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5129,"src":"267:3043:23","usedErrors":[],"usedEvents":[]}],"src":"40:3272:23"},"id":23},"contracts/libs/EnumerableSetUpgradeable.sol":{"ast":{"absolutePath":"contracts/libs/EnumerableSetUpgradeable.sol","exportedSymbols":{"EnumerableSetUpgradeable":[5727]},"id":5728,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5130,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:24"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSetUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":5131,"nodeType":"StructuredDocumentation","src":"145:1118:24","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":5727,"linearizedBaseContracts":[5727],"name":"EnumerableSetUpgradeable","nameLocation":"1273:24:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSetUpgradeable.Set","id":5139,"members":[{"constant":false,"id":5134,"mutability":"mutable","name":"_values","nameLocation":"1820:7:24","nodeType":"VariableDeclaration","scope":5139,"src":"1810:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1810:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5133,"nodeType":"ArrayTypeName","src":"1810:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5138,"mutability":"mutable","name":"_indexes","nameLocation":"1991:8:24","nodeType":"VariableDeclaration","scope":5139,"src":"1963:36:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":5137,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1971:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1963:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5136,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1761:3:24","nodeType":"StructDefinition","scope":5727,"src":"1754:253:24","visibility":"public"},{"body":{"id":5180,"nodeType":"Block","src":"2254:345:24","statements":[{"condition":{"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2269:22:24","subExpression":{"arguments":[{"id":5151,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5143,"src":"2280:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},{"id":5152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"2285:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5150,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"2270:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5139_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2270:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5178,"nodeType":"Block","src":"2553:39:24","statements":[{"expression":{"hexValue":"66616c7365","id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2575:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5149,"id":5177,"nodeType":"Return","src":"2568:12:24"}]},"id":5179,"nodeType":"IfStatement","src":"2265:327:24","trueBody":{"id":5175,"nodeType":"Block","src":"2293:254:24","statements":[{"expression":{"arguments":[{"id":5160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"2325:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":5155,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5143,"src":"2308:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2312:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5134,"src":"2308:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2320:4:24","memberName":"push","nodeType":"MemberAccess","src":"2308:16:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2308:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5162,"nodeType":"ExpressionStatement","src":"2308:23:24"},{"expression":{"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":5163,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5143,"src":"2469:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2473:8:24","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":5138,"src":"2469:12:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5167,"indexExpression":{"id":5165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"2482:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2469:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":5168,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5143,"src":"2491:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2495:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5134,"src":"2491:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2503:6:24","memberName":"length","nodeType":"MemberAccess","src":"2491:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2469:40:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5172,"nodeType":"ExpressionStatement","src":"2469:40:24"},{"expression":{"hexValue":"74727565","id":5173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2531:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5149,"id":5174,"nodeType":"Return","src":"2524:11:24"}]}}]},"documentation":{"id":5140,"nodeType":"StructuredDocumentation","src":"2015:164:24","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":5181,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2194:4:24","nodeType":"FunctionDefinition","parameters":{"id":5146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5143,"mutability":"mutable","name":"set","nameLocation":"2211:3:24","nodeType":"VariableDeclaration","scope":5181,"src":"2199:15:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":5142,"nodeType":"UserDefinedTypeName","pathNode":{"id":5141,"name":"Set","nameLocations":["2199:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":5139,"src":"2199:3:24"},"referencedDeclaration":5139,"src":"2199:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":5145,"mutability":"mutable","name":"value","nameLocation":"2224:5:24","nodeType":"VariableDeclaration","scope":5181,"src":"2216:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5144,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2216:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2198:32:24"},"returnParameters":{"id":5149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5181,"src":"2248:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5147,"name":"bool","nodeType":"ElementaryTypeName","src":"2248:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2247:6:24"},"scope":5727,"src":"2185:414:24","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5264,"nodeType":"Block","src":"2847:1348:24","statements":[{"assignments":[5193],"declarations":[{"constant":false,"id":5193,"mutability":"mutable","name":"valueIndex","nameLocation":"2967:10:24","nodeType":"VariableDeclaration","scope":5264,"src":"2959:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5192,"name":"uint256","nodeType":"ElementaryTypeName","src":"2959:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5198,"initialValue":{"baseExpression":{"expression":{"id":5194,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"2980:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2984:8:24","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":5138,"src":"2980:12:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5197,"indexExpression":{"id":5196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"2993:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2980:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2959:40:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5199,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"3016:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3030:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3016:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5262,"nodeType":"Block","src":"4149:39:24","statements":[{"expression":{"hexValue":"66616c7365","id":5260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4171:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5191,"id":5261,"nodeType":"Return","src":"4164:12:24"}]},"id":5263,"nodeType":"IfStatement","src":"3012:1176:24","trueBody":{"id":5259,"nodeType":"Block","src":"3033:1110:24","statements":[{"assignments":[5203],"declarations":[{"constant":false,"id":5203,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3399:13:24","nodeType":"VariableDeclaration","scope":5259,"src":"3391:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5202,"name":"uint256","nodeType":"ElementaryTypeName","src":"3391:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5207,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5204,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"3415:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3428:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3415:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3391:38:24"},{"assignments":[5209],"declarations":[{"constant":false,"id":5209,"mutability":"mutable","name":"lastIndex","nameLocation":"3452:9:24","nodeType":"VariableDeclaration","scope":5259,"src":"3444:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5208,"name":"uint256","nodeType":"ElementaryTypeName","src":"3444:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5215,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":5210,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"3464:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5211,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3468:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5134,"src":"3464:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3476:6:24","memberName":"length","nodeType":"MemberAccess","src":"3464:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3485:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3464:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3444:42:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5216,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"3507:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5217,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"3520:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3507:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5243,"nodeType":"IfStatement","src":"3503:405:24","trueBody":{"id":5242,"nodeType":"Block","src":"3535:373:24","statements":[{"assignments":[5220],"declarations":[{"constant":false,"id":5220,"mutability":"mutable","name":"lastValue","nameLocation":"3562:9:24","nodeType":"VariableDeclaration","scope":5242,"src":"3554:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3554:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5225,"initialValue":{"baseExpression":{"expression":{"id":5221,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"3574:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5222,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3578:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5134,"src":"3574:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5224,"indexExpression":{"id":5223,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"3586:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3574:22:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3554:42:24"},{"expression":{"id":5232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":5226,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"3699:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3703:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5134,"src":"3699:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5230,"indexExpression":{"id":5228,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"3711:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3699:26:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5231,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5220,"src":"3728:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3699:38:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5233,"nodeType":"ExpressionStatement","src":"3699:38:24"},{"expression":{"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":5234,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"3813:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3817:8:24","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":5138,"src":"3813:12:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5238,"indexExpression":{"id":5236,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5220,"src":"3826:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3813:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5239,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"3839:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3813:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5241,"nodeType":"ExpressionStatement","src":"3813:36:24"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":5244,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"3989:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5247,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3993:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5134,"src":"3989:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4001:3:24","memberName":"pop","nodeType":"MemberAccess","src":"3989:15:24","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3989:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5250,"nodeType":"ExpressionStatement","src":"3989:17:24"},{"expression":{"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4077:26:24","subExpression":{"baseExpression":{"expression":{"id":5251,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"4084:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5252,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4088:8:24","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":5138,"src":"4084:12:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5254,"indexExpression":{"id":5253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"4097:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4084:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5256,"nodeType":"ExpressionStatement","src":"4077:26:24"},{"expression":{"hexValue":"74727565","id":5257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4127:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5191,"id":5258,"nodeType":"Return","src":"4120:11:24"}]}}]},"documentation":{"id":5182,"nodeType":"StructuredDocumentation","src":"2607:162:24","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":5265,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2784:7:24","nodeType":"FunctionDefinition","parameters":{"id":5188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5185,"mutability":"mutable","name":"set","nameLocation":"2804:3:24","nodeType":"VariableDeclaration","scope":5265,"src":"2792:15:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":5184,"nodeType":"UserDefinedTypeName","pathNode":{"id":5183,"name":"Set","nameLocations":["2792:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":5139,"src":"2792:3:24"},"referencedDeclaration":5139,"src":"2792:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":5187,"mutability":"mutable","name":"value","nameLocation":"2817:5:24","nodeType":"VariableDeclaration","scope":5265,"src":"2809:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2809:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2791:32:24"},"returnParameters":{"id":5191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5265,"src":"2841:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5189,"name":"bool","nodeType":"ElementaryTypeName","src":"2841:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2840:6:24"},"scope":5727,"src":"2775:1420:24","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5283,"nodeType":"Block","src":"4360:50:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":5276,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5269,"src":"4378:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4382:8:24","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":5138,"src":"4378:12:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5279,"indexExpression":{"id":5278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"4391:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4378:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4401:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4378:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5275,"id":5282,"nodeType":"Return","src":"4371:31:24"}]},"documentation":{"id":5266,"nodeType":"StructuredDocumentation","src":"4203:72:24","text":" @dev Returns true if the value is in the set. O(1)."},"id":5284,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4290:9:24","nodeType":"FunctionDefinition","parameters":{"id":5272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5269,"mutability":"mutable","name":"set","nameLocation":"4312:3:24","nodeType":"VariableDeclaration","scope":5284,"src":"4300:15:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":5268,"nodeType":"UserDefinedTypeName","pathNode":{"id":5267,"name":"Set","nameLocations":["4300:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":5139,"src":"4300:3:24"},"referencedDeclaration":5139,"src":"4300:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":5271,"mutability":"mutable","name":"value","nameLocation":"4325:5:24","nodeType":"VariableDeclaration","scope":5284,"src":"4317:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4317:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4299:32:24"},"returnParameters":{"id":5275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5284,"src":"4354:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5273,"name":"bool","nodeType":"ElementaryTypeName","src":"4354:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4353:6:24"},"scope":5727,"src":"4281:129:24","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5297,"nodeType":"Block","src":"4561:44:24","statements":[{"expression":{"expression":{"expression":{"id":5293,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"4579:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4583:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5134,"src":"4579:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4591:6:24","memberName":"length","nodeType":"MemberAccess","src":"4579:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5292,"id":5296,"nodeType":"Return","src":"4572:25:24"}]},"documentation":{"id":5285,"nodeType":"StructuredDocumentation","src":"4418:72:24","text":" @dev Returns the number of values on the set. O(1)."},"id":5298,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4505:7:24","nodeType":"FunctionDefinition","parameters":{"id":5289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5288,"mutability":"mutable","name":"set","nameLocation":"4525:3:24","nodeType":"VariableDeclaration","scope":5298,"src":"4513:15:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":5287,"nodeType":"UserDefinedTypeName","pathNode":{"id":5286,"name":"Set","nameLocations":["4513:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":5139,"src":"4513:3:24"},"referencedDeclaration":5139,"src":"4513:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"src":"4512:17:24"},"returnParameters":{"id":5292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5298,"src":"4552:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5290,"name":"uint256","nodeType":"ElementaryTypeName","src":"4552:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4551:9:24"},"scope":5727,"src":"4496:109:24","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5314,"nodeType":"Block","src":"5035:44:24","statements":[{"expression":{"baseExpression":{"expression":{"id":5309,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5302,"src":"5053:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5057:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5134,"src":"5053:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5312,"indexExpression":{"id":5311,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"5065:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5053:18:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5308,"id":5313,"nodeType":"Return","src":"5046:25:24"}]},"documentation":{"id":5299,"nodeType":"StructuredDocumentation","src":"4613:340:24","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5315,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4968:3:24","nodeType":"FunctionDefinition","parameters":{"id":5305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5302,"mutability":"mutable","name":"set","nameLocation":"4984:3:24","nodeType":"VariableDeclaration","scope":5315,"src":"4972:15:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":5301,"nodeType":"UserDefinedTypeName","pathNode":{"id":5300,"name":"Set","nameLocations":["4972:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":5139,"src":"4972:3:24"},"referencedDeclaration":5139,"src":"4972:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":5304,"mutability":"mutable","name":"index","nameLocation":"4997:5:24","nodeType":"VariableDeclaration","scope":5315,"src":"4989:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5303,"name":"uint256","nodeType":"ElementaryTypeName","src":"4989:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4971:32:24"},"returnParameters":{"id":5308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5315,"src":"5026:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5306,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5026:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5025:9:24"},"scope":5727,"src":"4959:120:24","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5328,"nodeType":"Block","src":"5703:37:24","statements":[{"expression":{"expression":{"id":5325,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"5721:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5725:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5134,"src":"5721:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":5324,"id":5327,"nodeType":"Return","src":"5714:18:24"}]},"documentation":{"id":5316,"nodeType":"StructuredDocumentation","src":"5087:536:24","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5329,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5638:7:24","nodeType":"FunctionDefinition","parameters":{"id":5320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5319,"mutability":"mutable","name":"set","nameLocation":"5658:3:24","nodeType":"VariableDeclaration","scope":5329,"src":"5646:15:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":5318,"nodeType":"UserDefinedTypeName","pathNode":{"id":5317,"name":"Set","nameLocations":["5646:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":5139,"src":"5646:3:24"},"referencedDeclaration":5139,"src":"5646:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"src":"5645:17:24"},"returnParameters":{"id":5324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5329,"src":"5685:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5321,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5685:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5322,"nodeType":"ArrayTypeName","src":"5685:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5684:18:24"},"scope":5727,"src":"5629:111:24","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSetUpgradeable.Bytes32Set","id":5333,"members":[{"constant":false,"id":5332,"mutability":"mutable","name":"_inner","nameLocation":"5802:6:24","nodeType":"VariableDeclaration","scope":5333,"src":"5798:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":5331,"nodeType":"UserDefinedTypeName","pathNode":{"id":5330,"name":"Set","nameLocations":["5798:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":5139,"src":"5798:3:24"},"referencedDeclaration":5139,"src":"5798:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5776:10:24","nodeType":"StructDefinition","scope":5727,"src":"5769:47:24","visibility":"public"},{"body":{"id":5350,"nodeType":"Block","src":"6070:49:24","statements":[{"expression":{"arguments":[{"expression":{"id":5345,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"6093:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5333_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":5346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6097:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5332,"src":"6093:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":5347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"6105:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5344,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"6088:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$5139_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6088:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5343,"id":5349,"nodeType":"Return","src":"6081:30:24"}]},"documentation":{"id":5334,"nodeType":"StructuredDocumentation","src":"5824:164:24","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":5351,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"6003:3:24","nodeType":"FunctionDefinition","parameters":{"id":5340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5337,"mutability":"mutable","name":"set","nameLocation":"6026:3:24","nodeType":"VariableDeclaration","scope":5351,"src":"6007:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5333_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":5336,"nodeType":"UserDefinedTypeName","pathNode":{"id":5335,"name":"Bytes32Set","nameLocations":["6007:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":5333,"src":"6007:10:24"},"referencedDeclaration":5333,"src":"6007:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5333_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":5339,"mutability":"mutable","name":"value","nameLocation":"6039:5:24","nodeType":"VariableDeclaration","scope":5351,"src":"6031:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6031:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6006:39:24"},"returnParameters":{"id":5343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5351,"src":"6064:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5341,"name":"bool","nodeType":"ElementaryTypeName","src":"6064:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6063:6:24"},"scope":5727,"src":"5994:125:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5368,"nodeType":"Block","src":"6374:52:24","statements":[{"expression":{"arguments":[{"expression":{"id":5363,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"6400:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5333_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":5364,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6404:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5332,"src":"6400:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":5365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5357,"src":"6412:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5362,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"6392:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$5139_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6392:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5361,"id":5367,"nodeType":"Return","src":"6385:33:24"}]},"documentation":{"id":5352,"nodeType":"StructuredDocumentation","src":"6127:162:24","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":5369,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6304:6:24","nodeType":"FunctionDefinition","parameters":{"id":5358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5355,"mutability":"mutable","name":"set","nameLocation":"6330:3:24","nodeType":"VariableDeclaration","scope":5369,"src":"6311:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5333_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":5354,"nodeType":"UserDefinedTypeName","pathNode":{"id":5353,"name":"Bytes32Set","nameLocations":["6311:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":5333,"src":"6311:10:24"},"referencedDeclaration":5333,"src":"6311:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5333_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":5357,"mutability":"mutable","name":"value","nameLocation":"6343:5:24","nodeType":"VariableDeclaration","scope":5369,"src":"6335:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6335:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6310:39:24"},"returnParameters":{"id":5361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5369,"src":"6368:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5359,"name":"bool","nodeType":"ElementaryTypeName","src":"6368:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6367:6:24"},"scope":5727,"src":"6295:131:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5386,"nodeType":"Block","src":"6598:54:24","statements":[{"expression":{"arguments":[{"expression":{"id":5381,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"6626:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5333_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":5382,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6630:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5332,"src":"6626:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":5383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"6638:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5380,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"6616:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5139_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6616:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5379,"id":5385,"nodeType":"Return","src":"6609:35:24"}]},"documentation":{"id":5370,"nodeType":"StructuredDocumentation","src":"6434:72:24","text":" @dev Returns true if the value is in the set. O(1)."},"id":5387,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6521:8:24","nodeType":"FunctionDefinition","parameters":{"id":5376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5373,"mutability":"mutable","name":"set","nameLocation":"6549:3:24","nodeType":"VariableDeclaration","scope":5387,"src":"6530:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5333_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":5372,"nodeType":"UserDefinedTypeName","pathNode":{"id":5371,"name":"Bytes32Set","nameLocations":["6530:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":5333,"src":"6530:10:24"},"referencedDeclaration":5333,"src":"6530:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5333_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":5375,"mutability":"mutable","name":"value","nameLocation":"6562:5:24","nodeType":"VariableDeclaration","scope":5387,"src":"6554:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6554:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6529:39:24"},"returnParameters":{"id":5379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5387,"src":"6592:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5377,"name":"bool","nodeType":"ElementaryTypeName","src":"6592:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6591:6:24"},"scope":5727,"src":"6512:140:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5401,"nodeType":"Block","src":"6810:45:24","statements":[{"expression":{"arguments":[{"expression":{"id":5397,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5391,"src":"6836:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5333_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":5398,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6840:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5332,"src":"6836:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":5396,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"6828:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5139_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6828:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5395,"id":5400,"nodeType":"Return","src":"6821:26:24"}]},"documentation":{"id":5388,"nodeType":"StructuredDocumentation","src":"6660:72:24","text":" @dev Returns the number of values in the set. O(1)."},"id":5402,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6747:6:24","nodeType":"FunctionDefinition","parameters":{"id":5392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5391,"mutability":"mutable","name":"set","nameLocation":"6773:3:24","nodeType":"VariableDeclaration","scope":5402,"src":"6754:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5333_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":5390,"nodeType":"UserDefinedTypeName","pathNode":{"id":5389,"name":"Bytes32Set","nameLocations":["6754:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":5333,"src":"6754:10:24"},"referencedDeclaration":5333,"src":"6754:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5333_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"}],"src":"6753:24:24"},"returnParameters":{"id":5395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5402,"src":"6801:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5393,"name":"uint256","nodeType":"ElementaryTypeName","src":"6801:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6800:9:24"},"scope":5727,"src":"6738:117:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5419,"nodeType":"Block","src":"7292:48:24","statements":[{"expression":{"arguments":[{"expression":{"id":5414,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"7314:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5333_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":5415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7318:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5332,"src":"7314:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":5416,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"7326:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5413,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"7310:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5139_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7310:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5412,"id":5418,"nodeType":"Return","src":"7303:29:24"}]},"documentation":{"id":5403,"nodeType":"StructuredDocumentation","src":"6863:340:24","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5420,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7218:2:24","nodeType":"FunctionDefinition","parameters":{"id":5409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5406,"mutability":"mutable","name":"set","nameLocation":"7240:3:24","nodeType":"VariableDeclaration","scope":5420,"src":"7221:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5333_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":5405,"nodeType":"UserDefinedTypeName","pathNode":{"id":5404,"name":"Bytes32Set","nameLocations":["7221:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":5333,"src":"7221:10:24"},"referencedDeclaration":5333,"src":"7221:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5333_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":5408,"mutability":"mutable","name":"index","nameLocation":"7253:5:24","nodeType":"VariableDeclaration","scope":5420,"src":"7245:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5407,"name":"uint256","nodeType":"ElementaryTypeName","src":"7245:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7220:39:24"},"returnParameters":{"id":5412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5420,"src":"7283:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7283:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7282:9:24"},"scope":5727,"src":"7209:131:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5435,"nodeType":"Block","src":"7971:45:24","statements":[{"expression":{"arguments":[{"expression":{"id":5431,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"7997:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5333_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":5432,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8001:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5332,"src":"7997:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":5430,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"7989:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5139_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7989:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":5429,"id":5434,"nodeType":"Return","src":"7982:26:24"}]},"documentation":{"id":5421,"nodeType":"StructuredDocumentation","src":"7348:536:24","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5436,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7899:6:24","nodeType":"FunctionDefinition","parameters":{"id":5425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5424,"mutability":"mutable","name":"set","nameLocation":"7925:3:24","nodeType":"VariableDeclaration","scope":5436,"src":"7906:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5333_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":5423,"nodeType":"UserDefinedTypeName","pathNode":{"id":5422,"name":"Bytes32Set","nameLocations":["7906:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":5333,"src":"7906:10:24"},"referencedDeclaration":5333,"src":"7906:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5333_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"}],"src":"7905:24:24"},"returnParameters":{"id":5429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5436,"src":"7953:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7953:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5427,"nodeType":"ArrayTypeName","src":"7953:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7952:18:24"},"scope":5727,"src":"7890:126:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSetUpgradeable.AddressSet","id":5440,"members":[{"constant":false,"id":5439,"mutability":"mutable","name":"_inner","nameLocation":"8078:6:24","nodeType":"VariableDeclaration","scope":5440,"src":"8074:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":5438,"nodeType":"UserDefinedTypeName","pathNode":{"id":5437,"name":"Set","nameLocations":["8074:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":5139,"src":"8074:3:24"},"referencedDeclaration":5139,"src":"8074:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8052:10:24","nodeType":"StructDefinition","scope":5727,"src":"8045:47:24","visibility":"public"},{"body":{"id":5466,"nodeType":"Block","src":"8346:76:24","statements":[{"expression":{"arguments":[{"expression":{"id":5452,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"8369:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":5453,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8373:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5439,"src":"8369:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":5460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"8405:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8397:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5458,"name":"uint160","nodeType":"ElementaryTypeName","src":"8397:7:24","typeDescriptions":{}}},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8397:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8389:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5456,"name":"uint256","nodeType":"ElementaryTypeName","src":"8389:7:24","typeDescriptions":{}}},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8389:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8381:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8381:7:24","typeDescriptions":{}}},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8381:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5451,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"8364:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$5139_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8364:50:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5450,"id":5465,"nodeType":"Return","src":"8357:57:24"}]},"documentation":{"id":5441,"nodeType":"StructuredDocumentation","src":"8100:164:24","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":5467,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8279:3:24","nodeType":"FunctionDefinition","parameters":{"id":5447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5444,"mutability":"mutable","name":"set","nameLocation":"8302:3:24","nodeType":"VariableDeclaration","scope":5467,"src":"8283:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":5443,"nodeType":"UserDefinedTypeName","pathNode":{"id":5442,"name":"AddressSet","nameLocations":["8283:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":5440,"src":"8283:10:24"},"referencedDeclaration":5440,"src":"8283:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5446,"mutability":"mutable","name":"value","nameLocation":"8315:5:24","nodeType":"VariableDeclaration","scope":5467,"src":"8307:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5445,"name":"address","nodeType":"ElementaryTypeName","src":"8307:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8282:39:24"},"returnParameters":{"id":5450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5467,"src":"8340:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5448,"name":"bool","nodeType":"ElementaryTypeName","src":"8340:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8339:6:24"},"scope":5727,"src":"8270:152:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5493,"nodeType":"Block","src":"8677:79:24","statements":[{"expression":{"arguments":[{"expression":{"id":5479,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"8703:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":5480,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8707:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5439,"src":"8703:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":5487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"8739:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8731:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5485,"name":"uint160","nodeType":"ElementaryTypeName","src":"8731:7:24","typeDescriptions":{}}},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8731:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8723:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5483,"name":"uint256","nodeType":"ElementaryTypeName","src":"8723:7:24","typeDescriptions":{}}},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8723:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8715:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5481,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8715:7:24","typeDescriptions":{}}},"id":5490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8715:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5478,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"8695:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$5139_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8695:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5477,"id":5492,"nodeType":"Return","src":"8688:60:24"}]},"documentation":{"id":5468,"nodeType":"StructuredDocumentation","src":"8430:162:24","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":5494,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8607:6:24","nodeType":"FunctionDefinition","parameters":{"id":5474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5471,"mutability":"mutable","name":"set","nameLocation":"8633:3:24","nodeType":"VariableDeclaration","scope":5494,"src":"8614:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":5470,"nodeType":"UserDefinedTypeName","pathNode":{"id":5469,"name":"AddressSet","nameLocations":["8614:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":5440,"src":"8614:10:24"},"referencedDeclaration":5440,"src":"8614:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5473,"mutability":"mutable","name":"value","nameLocation":"8646:5:24","nodeType":"VariableDeclaration","scope":5494,"src":"8638:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5472,"name":"address","nodeType":"ElementaryTypeName","src":"8638:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8613:39:24"},"returnParameters":{"id":5477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5494,"src":"8671:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5475,"name":"bool","nodeType":"ElementaryTypeName","src":"8671:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8670:6:24"},"scope":5727,"src":"8598:158:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5520,"nodeType":"Block","src":"8928:81:24","statements":[{"expression":{"arguments":[{"expression":{"id":5506,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"8956:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":5507,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8960:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5439,"src":"8956:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":5514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"8992:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8984:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5512,"name":"uint160","nodeType":"ElementaryTypeName","src":"8984:7:24","typeDescriptions":{}}},"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8984:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8976:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5510,"name":"uint256","nodeType":"ElementaryTypeName","src":"8976:7:24","typeDescriptions":{}}},"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8968:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8968:7:24","typeDescriptions":{}}},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8968:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5505,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"8946:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5139_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":5518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8946:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5504,"id":5519,"nodeType":"Return","src":"8939:62:24"}]},"documentation":{"id":5495,"nodeType":"StructuredDocumentation","src":"8764:72:24","text":" @dev Returns true if the value is in the set. O(1)."},"id":5521,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8851:8:24","nodeType":"FunctionDefinition","parameters":{"id":5501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5498,"mutability":"mutable","name":"set","nameLocation":"8879:3:24","nodeType":"VariableDeclaration","scope":5521,"src":"8860:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":5497,"nodeType":"UserDefinedTypeName","pathNode":{"id":5496,"name":"AddressSet","nameLocations":["8860:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":5440,"src":"8860:10:24"},"referencedDeclaration":5440,"src":"8860:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5500,"mutability":"mutable","name":"value","nameLocation":"8892:5:24","nodeType":"VariableDeclaration","scope":5521,"src":"8884:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5499,"name":"address","nodeType":"ElementaryTypeName","src":"8884:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8859:39:24"},"returnParameters":{"id":5504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5521,"src":"8922:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5502,"name":"bool","nodeType":"ElementaryTypeName","src":"8922:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8921:6:24"},"scope":5727,"src":"8842:167:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5535,"nodeType":"Block","src":"9167:45:24","statements":[{"expression":{"arguments":[{"expression":{"id":5531,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"9193:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":5532,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9197:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5439,"src":"9193:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":5530,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"9185:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5139_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9185:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5529,"id":5534,"nodeType":"Return","src":"9178:26:24"}]},"documentation":{"id":5522,"nodeType":"StructuredDocumentation","src":"9017:72:24","text":" @dev Returns the number of values in the set. O(1)."},"id":5536,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9104:6:24","nodeType":"FunctionDefinition","parameters":{"id":5526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5525,"mutability":"mutable","name":"set","nameLocation":"9130:3:24","nodeType":"VariableDeclaration","scope":5536,"src":"9111:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":5524,"nodeType":"UserDefinedTypeName","pathNode":{"id":5523,"name":"AddressSet","nameLocations":["9111:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":5440,"src":"9111:10:24"},"referencedDeclaration":5440,"src":"9111:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"}],"src":"9110:24:24"},"returnParameters":{"id":5529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5536,"src":"9158:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5527,"name":"uint256","nodeType":"ElementaryTypeName","src":"9158:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9157:9:24"},"scope":5727,"src":"9095:117:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5562,"nodeType":"Block","src":"9649:75:24","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":5554,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"9695:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":5555,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9699:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5439,"src":"9695:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":5556,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"9707:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5553,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"9691:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5139_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9691:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9683:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5551,"name":"uint256","nodeType":"ElementaryTypeName","src":"9683:7:24","typeDescriptions":{}}},"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9683:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9675:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5549,"name":"uint160","nodeType":"ElementaryTypeName","src":"9675:7:24","typeDescriptions":{}}},"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9675:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9667:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5547,"name":"address","nodeType":"ElementaryTypeName","src":"9667:7:24","typeDescriptions":{}}},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9667:49:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5546,"id":5561,"nodeType":"Return","src":"9660:56:24"}]},"documentation":{"id":5537,"nodeType":"StructuredDocumentation","src":"9220:340:24","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5563,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9575:2:24","nodeType":"FunctionDefinition","parameters":{"id":5543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5540,"mutability":"mutable","name":"set","nameLocation":"9597:3:24","nodeType":"VariableDeclaration","scope":5563,"src":"9578:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":5539,"nodeType":"UserDefinedTypeName","pathNode":{"id":5538,"name":"AddressSet","nameLocations":["9578:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":5440,"src":"9578:10:24"},"referencedDeclaration":5440,"src":"9578:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5542,"mutability":"mutable","name":"index","nameLocation":"9610:5:24","nodeType":"VariableDeclaration","scope":5563,"src":"9602:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5541,"name":"uint256","nodeType":"ElementaryTypeName","src":"9602:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9577:39:24"},"returnParameters":{"id":5546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5563,"src":"9640:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5544,"name":"address","nodeType":"ElementaryTypeName","src":"9640:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9639:9:24"},"scope":5727,"src":"9566:158:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5592,"nodeType":"Block","src":"10355:229:24","statements":[{"assignments":[5577],"declarations":[{"constant":false,"id":5577,"mutability":"mutable","name":"store","nameLocation":"10383:5:24","nodeType":"VariableDeclaration","scope":5592,"src":"10366:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5575,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10366:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5576,"nodeType":"ArrayTypeName","src":"10366:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5582,"initialValue":{"arguments":[{"expression":{"id":5579,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"10399:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":5580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10403:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5439,"src":"10399:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":5578,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"10391:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5139_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10391:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10366:44:24"},{"assignments":[5587],"declarations":[{"constant":false,"id":5587,"mutability":"mutable","name":"result","nameLocation":"10438:6:24","nodeType":"VariableDeclaration","scope":5592,"src":"10421:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5585,"name":"address","nodeType":"ElementaryTypeName","src":"10421:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5586,"nodeType":"ArrayTypeName","src":"10421:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5588,"nodeType":"VariableDeclarationStatement","src":"10421:23:24"},{"AST":{"nativeSrc":"10510:41:24","nodeType":"YulBlock","src":"10510:41:24","statements":[{"nativeSrc":"10525:15:24","nodeType":"YulAssignment","src":"10525:15:24","value":{"name":"store","nativeSrc":"10535:5:24","nodeType":"YulIdentifier","src":"10535:5:24"},"variableNames":[{"name":"result","nativeSrc":"10525:6:24","nodeType":"YulIdentifier","src":"10525:6:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":5587,"isOffset":false,"isSlot":false,"src":"10525:6:24","valueSize":1},{"declaration":5577,"isOffset":false,"isSlot":false,"src":"10535:5:24","valueSize":1}],"id":5589,"nodeType":"InlineAssembly","src":"10501:50:24"},{"expression":{"id":5590,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5587,"src":"10570:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":5572,"id":5591,"nodeType":"Return","src":"10563:13:24"}]},"documentation":{"id":5564,"nodeType":"StructuredDocumentation","src":"9732:536:24","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5593,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10283:6:24","nodeType":"FunctionDefinition","parameters":{"id":5568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5567,"mutability":"mutable","name":"set","nameLocation":"10309:3:24","nodeType":"VariableDeclaration","scope":5593,"src":"10290:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":5566,"nodeType":"UserDefinedTypeName","pathNode":{"id":5565,"name":"AddressSet","nameLocations":["10290:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":5440,"src":"10290:10:24"},"referencedDeclaration":5440,"src":"10290:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5440_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"}],"src":"10289:24:24"},"returnParameters":{"id":5572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5593,"src":"10337:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5569,"name":"address","nodeType":"ElementaryTypeName","src":"10337:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5570,"nodeType":"ArrayTypeName","src":"10337:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10336:18:24"},"scope":5727,"src":"10274:310:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSetUpgradeable.UintSet","id":5597,"members":[{"constant":false,"id":5596,"mutability":"mutable","name":"_inner","nameLocation":"10640:6:24","nodeType":"VariableDeclaration","scope":5597,"src":"10636:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":5595,"nodeType":"UserDefinedTypeName","pathNode":{"id":5594,"name":"Set","nameLocations":["10636:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":5139,"src":"10636:3:24"},"referencedDeclaration":5139,"src":"10636:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10617:7:24","nodeType":"StructDefinition","scope":5727,"src":"10610:44:24","visibility":"public"},{"body":{"id":5617,"nodeType":"Block","src":"10905:58:24","statements":[{"expression":{"arguments":[{"expression":{"id":5609,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"10928:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5597_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":5610,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10932:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5596,"src":"10928:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":5613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"10948:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10940:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10940:7:24","typeDescriptions":{}}},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10940:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5608,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"10923:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$5139_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10923:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5607,"id":5616,"nodeType":"Return","src":"10916:39:24"}]},"documentation":{"id":5598,"nodeType":"StructuredDocumentation","src":"10662:164:24","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":5618,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10841:3:24","nodeType":"FunctionDefinition","parameters":{"id":5604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5601,"mutability":"mutable","name":"set","nameLocation":"10861:3:24","nodeType":"VariableDeclaration","scope":5618,"src":"10845:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5597_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":5600,"nodeType":"UserDefinedTypeName","pathNode":{"id":5599,"name":"UintSet","nameLocations":["10845:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":5597,"src":"10845:7:24"},"referencedDeclaration":5597,"src":"10845:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5597_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":5603,"mutability":"mutable","name":"value","nameLocation":"10874:5:24","nodeType":"VariableDeclaration","scope":5618,"src":"10866:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5602,"name":"uint256","nodeType":"ElementaryTypeName","src":"10866:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10844:36:24"},"returnParameters":{"id":5607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5618,"src":"10899:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5605,"name":"bool","nodeType":"ElementaryTypeName","src":"10899:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10898:6:24"},"scope":5727,"src":"10832:131:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5638,"nodeType":"Block","src":"11215:61:24","statements":[{"expression":{"arguments":[{"expression":{"id":5630,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"11241:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5597_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":5631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11245:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5596,"src":"11241:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":5634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"11261:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11253:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11253:7:24","typeDescriptions":{}}},"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11253:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5629,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"11233:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$5139_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11233:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5628,"id":5637,"nodeType":"Return","src":"11226:42:24"}]},"documentation":{"id":5619,"nodeType":"StructuredDocumentation","src":"10971:162:24","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":5639,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11148:6:24","nodeType":"FunctionDefinition","parameters":{"id":5625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5622,"mutability":"mutable","name":"set","nameLocation":"11171:3:24","nodeType":"VariableDeclaration","scope":5639,"src":"11155:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5597_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":5621,"nodeType":"UserDefinedTypeName","pathNode":{"id":5620,"name":"UintSet","nameLocations":["11155:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":5597,"src":"11155:7:24"},"referencedDeclaration":5597,"src":"11155:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5597_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":5624,"mutability":"mutable","name":"value","nameLocation":"11184:5:24","nodeType":"VariableDeclaration","scope":5639,"src":"11176:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5623,"name":"uint256","nodeType":"ElementaryTypeName","src":"11176:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:36:24"},"returnParameters":{"id":5628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5639,"src":"11209:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5626,"name":"bool","nodeType":"ElementaryTypeName","src":"11209:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11208:6:24"},"scope":5727,"src":"11139:137:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5659,"nodeType":"Block","src":"11445:63:24","statements":[{"expression":{"arguments":[{"expression":{"id":5651,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5643,"src":"11473:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5597_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":5652,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11477:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5596,"src":"11473:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":5655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"11493:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11485:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11485:7:24","typeDescriptions":{}}},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11485:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5650,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"11463:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5139_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11463:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5649,"id":5658,"nodeType":"Return","src":"11456:44:24"}]},"documentation":{"id":5640,"nodeType":"StructuredDocumentation","src":"11284:72:24","text":" @dev Returns true if the value is in the set. O(1)."},"id":5660,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11371:8:24","nodeType":"FunctionDefinition","parameters":{"id":5646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5643,"mutability":"mutable","name":"set","nameLocation":"11396:3:24","nodeType":"VariableDeclaration","scope":5660,"src":"11380:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5597_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":5642,"nodeType":"UserDefinedTypeName","pathNode":{"id":5641,"name":"UintSet","nameLocations":["11380:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":5597,"src":"11380:7:24"},"referencedDeclaration":5597,"src":"11380:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5597_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":5645,"mutability":"mutable","name":"value","nameLocation":"11409:5:24","nodeType":"VariableDeclaration","scope":5660,"src":"11401:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5644,"name":"uint256","nodeType":"ElementaryTypeName","src":"11401:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11379:36:24"},"returnParameters":{"id":5649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5660,"src":"11439:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5647,"name":"bool","nodeType":"ElementaryTypeName","src":"11439:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11438:6:24"},"scope":5727,"src":"11362:146:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5674,"nodeType":"Block","src":"11663:45:24","statements":[{"expression":{"arguments":[{"expression":{"id":5670,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"11689:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5597_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":5671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11693:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5596,"src":"11689:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":5669,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"11681:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5139_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11681:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5668,"id":5673,"nodeType":"Return","src":"11674:26:24"}]},"documentation":{"id":5661,"nodeType":"StructuredDocumentation","src":"11516:72:24","text":" @dev Returns the number of values on the set. O(1)."},"id":5675,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11603:6:24","nodeType":"FunctionDefinition","parameters":{"id":5665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5664,"mutability":"mutable","name":"set","nameLocation":"11626:3:24","nodeType":"VariableDeclaration","scope":5675,"src":"11610:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5597_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":5663,"nodeType":"UserDefinedTypeName","pathNode":{"id":5662,"name":"UintSet","nameLocations":["11610:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":5597,"src":"11610:7:24"},"referencedDeclaration":5597,"src":"11610:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5597_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"src":"11609:21:24"},"returnParameters":{"id":5668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5675,"src":"11654:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5666,"name":"uint256","nodeType":"ElementaryTypeName","src":"11654:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11653:9:24"},"scope":5727,"src":"11594:114:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5695,"nodeType":"Block","src":"12142:57:24","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":5689,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"12172:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5597_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":5690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12176:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5596,"src":"12172:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":5691,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"12184:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5688,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"12168:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5139_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12168:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12160:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5686,"name":"uint256","nodeType":"ElementaryTypeName","src":"12160:7:24","typeDescriptions":{}}},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5685,"id":5694,"nodeType":"Return","src":"12153:38:24"}]},"documentation":{"id":5676,"nodeType":"StructuredDocumentation","src":"11716:340:24","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5696,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"12071:2:24","nodeType":"FunctionDefinition","parameters":{"id":5682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5679,"mutability":"mutable","name":"set","nameLocation":"12090:3:24","nodeType":"VariableDeclaration","scope":5696,"src":"12074:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5597_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":5678,"nodeType":"UserDefinedTypeName","pathNode":{"id":5677,"name":"UintSet","nameLocations":["12074:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":5597,"src":"12074:7:24"},"referencedDeclaration":5597,"src":"12074:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5597_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":5681,"mutability":"mutable","name":"index","nameLocation":"12103:5:24","nodeType":"VariableDeclaration","scope":5696,"src":"12095:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5680,"name":"uint256","nodeType":"ElementaryTypeName","src":"12095:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12073:36:24"},"returnParameters":{"id":5685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5696,"src":"12133:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5683,"name":"uint256","nodeType":"ElementaryTypeName","src":"12133:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12132:9:24"},"scope":5727,"src":"12062:137:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5725,"nodeType":"Block","src":"12827:229:24","statements":[{"assignments":[5710],"declarations":[{"constant":false,"id":5710,"mutability":"mutable","name":"store","nameLocation":"12855:5:24","nodeType":"VariableDeclaration","scope":5725,"src":"12838:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12838:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5709,"nodeType":"ArrayTypeName","src":"12838:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5715,"initialValue":{"arguments":[{"expression":{"id":5712,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5700,"src":"12871:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5597_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":5713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12875:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5596,"src":"12871:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5139_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":5711,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"12863:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5139_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":5714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12863:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12838:44:24"},{"assignments":[5720],"declarations":[{"constant":false,"id":5720,"mutability":"mutable","name":"result","nameLocation":"12910:6:24","nodeType":"VariableDeclaration","scope":5725,"src":"12893:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5718,"name":"uint256","nodeType":"ElementaryTypeName","src":"12893:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5719,"nodeType":"ArrayTypeName","src":"12893:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5721,"nodeType":"VariableDeclarationStatement","src":"12893:23:24"},{"AST":{"nativeSrc":"12982:41:24","nodeType":"YulBlock","src":"12982:41:24","statements":[{"nativeSrc":"12997:15:24","nodeType":"YulAssignment","src":"12997:15:24","value":{"name":"store","nativeSrc":"13007:5:24","nodeType":"YulIdentifier","src":"13007:5:24"},"variableNames":[{"name":"result","nativeSrc":"12997:6:24","nodeType":"YulIdentifier","src":"12997:6:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":5720,"isOffset":false,"isSlot":false,"src":"12997:6:24","valueSize":1},{"declaration":5710,"isOffset":false,"isSlot":false,"src":"13007:5:24","valueSize":1}],"id":5722,"nodeType":"InlineAssembly","src":"12973:50:24"},{"expression":{"id":5723,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5720,"src":"13042:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":5705,"id":5724,"nodeType":"Return","src":"13035:13:24"}]},"documentation":{"id":5697,"nodeType":"StructuredDocumentation","src":"12207:536:24","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5726,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12758:6:24","nodeType":"FunctionDefinition","parameters":{"id":5701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5700,"mutability":"mutable","name":"set","nameLocation":"12781:3:24","nodeType":"VariableDeclaration","scope":5726,"src":"12765:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5597_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":5699,"nodeType":"UserDefinedTypeName","pathNode":{"id":5698,"name":"UintSet","nameLocations":["12765:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":5597,"src":"12765:7:24"},"referencedDeclaration":5597,"src":"12765:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5597_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"src":"12764:21:24"},"returnParameters":{"id":5705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5726,"src":"12809:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5702,"name":"uint256","nodeType":"ElementaryTypeName","src":"12809:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5703,"nodeType":"ArrayTypeName","src":"12809:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12808:18:24"},"scope":5727,"src":"12749:307:24","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":5728,"src":"1265:11794:24","usedErrors":[],"usedEvents":[]}],"src":"118:12943:24"},"id":24}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"stateVariables":{"UPGRADE_INTERFACE_VERSION":{"details":"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."},"__self":{"custom:oz-upgrades-unsafe-allow":"state-variable-immutable"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport {ContextUpgradeable} from \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport {IERC20Errors} from \\\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\\\";\\nimport {Initializable} from \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\\n    struct ERC20Storage {\\n        mapping(address account => uint256) _balances;\\n\\n        mapping(address account => mapping(address spender => uint256)) _allowances;\\n\\n        uint256 _totalSupply;\\n\\n        string _name;\\n        string _symbol;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ERC20\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\\n\\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\\n        assembly {\\n            $.slot := ERC20StorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        $._name = name_;\\n        $._symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            $._totalSupply += value;\\n        } else {\\n            uint256 fromBalance = $._balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                $._balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                $._totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                $._balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        $._allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\\n    struct ReentrancyGuardStorage {\\n        uint256 _status;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ReentrancyGuard\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\\n\\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\\n        assembly {\\n            $.slot := ReentrancyGuardStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if ($._status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        $._status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        return $._status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.","errors":{"ERC1967InvalidAdmin(address)":[{"details":"The `admin` of the proxy is invalid."}],"ERC1967InvalidBeacon(address)":[{"details":"The `beacon` of the proxy is invalid."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}]},"events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"stateVariables":{"ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122099005689d8ee280502f7a9ed0831b2aacdc1ae64fd05b81ebd15e0f9d60fce7f64736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 STOP JUMP DUP10 0xD8 0xEE 0x28 SDIV MUL 0xF7 0xA9 0xED ADDMOD BALANCE 0xB2 0xAA 0xCD 0xC1 0xAE PUSH5 0xFD05B81EBD ISZERO 0xE0 0xF9 0xD6 0xF 0xCE PUSH32 0x64736F6C63430008190033000000000000000000000000000000000000000000 ","sourceMap":"449:6273:8:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea264697066735822122099005689d8ee280502f7a9ed0831b2aacdc1ae64fd05b81ebd15e0f9d60fce7f64736f6c63430008190033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 STOP JUMP DUP10 0xD8 0xEE 0x28 SDIV MUL 0xF7 0xA9 0xED ADDMOD BALANCE 0xB2 0xAA 0xCD 0xC1 0xAE PUSH5 0xFD05B81EBD ISZERO 0xE0 0xF9 0xD6 0xF 0xCE PUSH32 0x64736F6C63430008190033000000000000000000000000000000000000000000 ","sourceMap":"449:6273:8:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11400","executionCost":"infinite","totalCost":"infinite"},"internal":{"_checkNonPayable()":"infinite","_setAdmin(address)":"infinite","_setBeacon(address)":"infinite","_setImplementation(address)":"infinite","changeAdmin(address)":"infinite","getAdmin()":"infinite","getBeacon()":"infinite","getImplementation()":"infinite","upgradeBeaconToAndCall(address,bytes memory)":"infinite","upgradeToAndCall(address,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"AddressInsufficientBalance(address)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220e629626646d1d2bc1379505bf1e85b3b108993263cd5a4564554fb4f0d923bfe64736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0x29 PUSH3 0x6646D1 0xD2 0xBC SGT PUSH26 0x505BF1E85B3B108993263CD5A4564554FB4F0D923BFE64736F6C PUSH4 0x43000819 STOP CALLER ","sourceMap":"195:6066:12:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220e629626646d1d2bc1379505bf1e85b3b108993263cd5a4564554fb4f0d923bfe64736f6c63430008190033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0x29 PUSH3 0x6646D1 0xD2 0xBC SGT PUSH26 0x505BF1E85B3B108993263CD5A4564554FB4F0D923BFE64736F6C PUSH4 0x43000819 STOP CALLER ","sourceMap":"195:6066:12:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11400","executionCost":"infinite","totalCost":"infinite"},"internal":{"_revert(bytes memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220369bb9cb24b5a45a41b5d61f09cfcbb3b81fd65fb733bfc24b7c89345473a26464736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE SWAP12 0xB9 0xCB 0x24 0xB5 LOG4 GAS COINBASE 0xB5 0xD6 0x1F MULMOD 0xCF 0xCB 0xB3 0xB8 0x1F 0xD6 PUSH0 0xB7 CALLER 0xBF 0xC2 0x4B PUSH29 0x89345473A26464736F6C63430008190033000000000000000000000000 ","sourceMap":"1245:2685:13:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220369bb9cb24b5a45a41b5d61f09cfcbb3b81fd65fb733bfc24b7c89345473a26464736f6c63430008190033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE SWAP12 0xB9 0xCB 0x24 0xB5 LOG4 GAS COINBASE 0xB5 0xD6 0x1F MULMOD 0xCF 0xCB 0xB3 0xB8 0x1F 0xD6 PUSH0 0xB7 CALLER 0xBF 0xC2 0x4B PUSH29 0x89345473A26464736F6C63430008190033000000000000000000000000 ","sourceMap":"1245:2685:13:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11400","executionCost":"infinite","totalCost":"infinite"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"IUniswapV3Factory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":true,"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"FeeAmountEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":false,"internalType":"int24","name":"tickSpacing","type":"int24"},{"indexed":false,"internalType":"address","name":"pool","type":"address"}],"name":"PoolCreated","type":"event"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"enableFeeAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"feeAmountTickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"getPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"FeeAmountEnabled(uint24,int24)":{"params":{"fee":"The enabled fee, denominated in hundredths of a bip","tickSpacing":"The minimum number of ticks between initialized ticks for pools created with the given fee"}},"OwnerChanged(address,address)":{"params":{"newOwner":"The owner after the owner was changed","oldOwner":"The owner before the owner was changed"}},"PoolCreated(address,address,uint24,int24,address)":{"params":{"fee":"The fee collected upon every swap in the pool, denominated in hundredths of a bip","pool":"The address of the created pool","tickSpacing":"The minimum number of ticks between initialized ticks","token0":"The first token of the pool by address sort order","token1":"The second token of the pool by address sort order"}}},"kind":"dev","methods":{"createPool(address,address,uint24)":{"details":"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.","params":{"fee":"The desired fee for the pool","tokenA":"One of the two tokens in the desired pool","tokenB":"The other of the two tokens in the desired pool"},"returns":{"pool":"The address of the newly created pool"}},"enableFeeAmount(uint24,int24)":{"details":"Fee amounts may never be removed once enabled","params":{"fee":"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)","tickSpacing":"The spacing between ticks to be enforced for all pools created with the given fee amount"}},"feeAmountTickSpacing(uint24)":{"details":"A fee amount can never be removed, so this value should be hard coded or cached in the calling context","params":{"fee":"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"},"returns":{"_0":"The tick spacing"}},"getPool(address,address,uint24)":{"details":"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order","params":{"fee":"The fee collected upon every swap in the pool, denominated in hundredths of a bip","tokenA":"The contract address of either token0 or token1","tokenB":"The contract address of the other token"},"returns":{"pool":"The pool address"}},"owner()":{"details":"Can be changed by the current owner via setOwner","returns":{"_0":"The address of the factory owner"}},"setOwner(address)":{"details":"Must be called by the current owner","params":{"_owner":"The new owner of the factory"}}},"title":"The interface for the Uniswap V3 Factory","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"createPool(address,address,uint24)":"a1671295","enableFeeAmount(uint24,int24)":"8a7c195f","feeAmountTickSpacing(uint24)":"22afcccb","getPool(address,address,uint24)":"1698ee82","owner()":"8da5cb5b","setOwner(address)":"13af4035"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\\n\",\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"FeeAmountEnabled(uint24,int24)":{"notice":"Emitted when a new fee amount is enabled for pool creation via the factory"},"OwnerChanged(address,address)":{"notice":"Emitted when the owner of the factory is changed"},"PoolCreated(address,address,uint24,int24,address)":{"notice":"Emitted when a pool is created"}},"kind":"user","methods":{"createPool(address,address,uint24)":{"notice":"Creates a pool for the given two tokens and fee"},"enableFeeAmount(uint24,int24)":{"notice":"Enables a fee amount with the given tickSpacing"},"feeAmountTickSpacing(uint24)":{"notice":"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"},"getPool(address,address,uint24)":{"notice":"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"},"owner()":{"notice":"Returns the current owner of the factory"},"setOwner(address)":{"notice":"Updates the owner of the factory"}},"notice":"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees","version":1}}},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"IUniswapV3SwapCallback":{"abi":[{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"uniswapV3SwapCallback(int256,int256,bytes)":{"details":"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.","params":{"amount0Delta":"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.","amount1Delta":"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.","data":"Any data passed through by the caller via the IUniswapV3PoolActions#swap call"}}},"title":"Callback for IUniswapV3PoolActions#swap","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"uniswapV3SwapCallback(int256,int256,bytes)":{"notice":"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."}},"notice":"Any contract that calls IUniswapV3PoolActions#swap must implement this interface","version":1}}},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ISwapRouter":{"abi":[{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactInputParams","name":"params","type":"tuple"}],"name":"exactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactInputSingleParams","name":"params","type":"tuple"}],"name":"exactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactOutputParams","name":"params","type":"tuple"}],"name":"exactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactOutputSingleParams","name":"params","type":"tuple"}],"name":"exactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"exactInput((bytes,address,uint256,uint256,uint256))":{"params":{"params":"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"},"returns":{"amountOut":"The amount of the received token"}},"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":{"params":{"params":"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"},"returns":{"amountOut":"The amount of the received token"}},"exactOutput((bytes,address,uint256,uint256,uint256))":{"params":{"params":"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"},"returns":{"amountIn":"The amount of the input token"}},"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":{"params":{"params":"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"},"returns":{"amountIn":"The amount of the input token"}},"uniswapV3SwapCallback(int256,int256,bytes)":{"details":"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.","params":{"amount0Delta":"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.","amount1Delta":"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.","data":"Any data passed through by the caller via the IUniswapV3PoolActions#swap call"}}},"title":"Router token swapping functionality","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"exactInput((bytes,address,uint256,uint256,uint256))":"c04b8d59","exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"414bf389","exactOutput((bytes,address,uint256,uint256,uint256))":"f28c0498","exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"db3e2198","uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"exactInput((bytes,address,uint256,uint256,uint256))":{"notice":"Swaps `amountIn` of one token for as much as possible of another along the specified path"},"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":{"notice":"Swaps `amountIn` of one token for as much as possible of another token"},"exactOutput((bytes,address,uint256,uint256,uint256))":{"notice":"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"},"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":{"notice":"Swaps as little as possible of one token for `amountOut` of another token"},"uniswapV3SwapCallback(int256,int256,bytes)":{"notice":"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."}},"notice":"Functions for swapping tokens via Uniswap V3","version":1}}},"contracts/BaluniV1Router.sol":{"BaluniV1Router":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newFee","type":"uint256"}],"name":"ChangeBpsFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"pool","type":"address"}],"name":"ChangeRewardPool","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"indexed":false,"internalType":"struct IBaluniV1Agent.Call[]","name":"calls","type":"tuple[]"},{"indexed":false,"internalType":"address[]","name":"tokensReturn","type":"address[]"}],"name":"Execute","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"message","type":"string"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Log","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDC","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WNATIVE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_BPS_BASE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_BPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_MAX_BPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"agentFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"burnAmount","type":"uint256"}],"name":"burnERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"burnAmount","type":"uint256"}],"name":"burnUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"totalBaluni","type":"uint256"},{"internalType":"uint256","name":"totalERC20Balance","type":"uint256"},{"internalType":"uint256","name":"baluniAmount","type":"uint256"},{"internalType":"uint256","name":"tokenDecimals","type":"uint256"}],"name":"calculateTokenShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"callRebalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_agentFactory","type":"address"}],"name":"changeAgentFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"changeBpsFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newRebalancer","type":"address"}],"name":"changeRebalancer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newTreasury","type":"address"}],"name":"changeTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct IBaluniV1Agent.Call[]","name":"calls","type":"tuple[]"},{"internalType":"address[]","name":"tokensReturn","type":"address[]"}],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getAgentAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getUSDCShareValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVersion","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_usdc","type":"address"},{"internalType":"address","name":"_wnative","type":"address"},{"internalType":"address","name":"_1inchSpotAgg","type":"address"},{"internalType":"address","name":"_uniRouter","type":"address"},{"internalType":"address","name":"_uniFactory","type":"address"},{"internalType":"address","name":"_rebalancer","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"liquidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"liquidateAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"balAmountToMint","type":"uint256"}],"name":"mintWithUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"address","name":"token2","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"multiHopSwap","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_usdc","type":"address"},{"internalType":"address","name":"_wnative","type":"address"},{"internalType":"address","name":"_1inchSpotAgg","type":"address"},{"internalType":"address","name":"_uniRouter","type":"address"},{"internalType":"address","name":"_uniFactory","type":"address"},{"internalType":"address","name":"_rebalancer","type":"address"},{"internalType":"uint64","name":"version","type":"uint64"}],"name":"reinitialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"balAmountToMint","type":"uint256"}],"name":"requiredUSDCtoMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"singleSwap","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"token","type":"address"}],"name":"tokenValuation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalValuation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"burnERC20(uint256)":{"details":"Burns a specified amount of BALUNI tokens from the caller's balance.","params":{"burnAmount":"The amount of BALUNI tokens to burn."}},"burnUSDC(uint256)":{"details":"Burns a specified amount of BAL tokens and performs token swaps on multiple tokens.","params":{"burnAmount":"The amount of BAL tokens to burn."}},"calculateTokenShare(uint256,uint256,uint256,uint256)":{"details":"Calculates the token share based on the total Baluni supply, total ERC20 balance, Baluni amount, and token decimals.","params":{"baluniAmount":"The amount of Baluni tokens.","tokenDecimals":"The number of decimals for the ERC20 token.","totalBaluni":"The total supply of Baluni tokens.","totalERC20Balance":"The total balance of the ERC20 token."},"returns":{"_0":"The calculated token share."}},"callRebalance(address[],uint256[],address,address,uint256,address)":{"details":"Calls the `rebalance` function of the `rebalancer` contract.","params":{"assets":"An array of addresses representing the assets to rebalance.","limit":"The maximum number of assets to rebalance.","receiver":"The address of the receiver.","sender":"The address of the sender.","weights":"An array of uint256 values representing the weights of the assets."}},"changeAgentFactory(address)":{"details":"Changes the address of the agent factory contract. Can only be called by the contract owner.","params":{"_agentFactory":"The new address of the agent factory contract."}},"changeBpsFee(uint256)":{"details":"Changes the basis points fee for the contract.","params":{"_newFee":"The new basis points fee to be set."}},"changeRebalancer(address)":{"details":"Changes the address of the rebalancer contract. Can only be called by the contract owner.","params":{"_newRebalancer":"The new address of the rebalancer contract."}},"changeTreasury(address)":{"details":"Changes the treasury address. Can only be called by the contract owner.","params":{"_newTreasury":"The new treasury address."}},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"execute((address,uint256,bytes)[],address[])":{"details":"Executes a series of calls to a BaluniV1Agent contract and handles token returns.","params":{"calls":"An array of IBaluniV1Agent.Call structs representing the calls to be executed.","tokensReturn":"An array of addresses representing the tokens to be returned."}},"getAgentAddress(address)":{"details":"Retrieves the agent address associated with a user.","params":{"_user":"The user's address."},"returns":{"_0":"The agent address."}},"getTokens()":{"details":"Returns an array of addresses representing the tokens.","returns":{"_0":"An array of addresses representing the tokens."}},"getUSDCShareValue(uint256)":{"details":"Calculates the value of a given amount of Baluni tokens in USDC.","params":{"amount":"The amount of Baluni tokens."},"returns":{"_0":"The calculated value of the Baluni tokens in USDC."}},"getVersion()":{"details":"Returns the version of the contract.","returns":{"_0":"The version string."}},"initialize(address,address,address,address,address,address)":{"details":"Initializes the BaluniV1Router contract. It sets the initial values for various variables and mints 1 ether to the contract's address. It also sets the USDC token address, WNATIVE token address, oracle address, Uniswap router address, and Uniswap factory address. Finally, it adds the USDC token address to the tokens set."},"liquidate(address)":{"details":"Liquidates the specified token by swapping it for USDC.","params":{"token":"The address of the token to be liquidated."}},"liquidateAll()":{"details":"Liquidates all tokens in the contract. This function iterates through all the tokens in the contract and calls the `liquidate` function for each token. Can only be called by the contract owner."},"mintWithUSDC(uint256)":{"details":"Mints a specified amount of BALUNI tokens in exchange for USDC.","params":{"balAmountToMint":"The amount of BALUNI tokens to mint."}},"multiHopSwap(address,address,address,uint256,address)":{"details":"Executes a multi-hop swap between three tokens using Uniswap.","params":{"amount":"The amount of token0 to be swapped.","receiver":"The address that will receive the swapped tokens.","token0":"The address of the token to be swapped.","token1":"The address of the intermediate token to be used for the swap.","token2":"The address of the final token to be received."},"returns":{"amountOut":"The amount of token2 received from the swap. The function requires that the caller has a sufficient balance of token0 and that the amount to be swapped is greater than 0. Also, the caller must have approved this contract to spend the amount of token0. The function transfers the amount of token0 to be swapped from the caller to this contract, then performs the swap using Uniswap. The swapped tokens are sent to the receiver's address. The function returns the amount of token2 received from the swap."}},"name()":{"details":"Returns the name of the token."},"owner()":{"details":"Returns the address of the current owner."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"reinitialize(address,address,address,address,address,address,uint64)":{"details":"Reinitializes the BaluniV1Router contract with the specified parameters.","params":{"_1inchSpotAgg":"The address of the 1inch Spot Aggregator oracle contract.","_uniFactory":"The address of the Uniswap factory contract.","_uniRouter":"The address of the Uniswap router contract.","_usdc":"The address of the USDC token contract.","_wnative":"The address of the WNative token contract.","version":"The version of the contract."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"requiredUSDCtoMint(uint256)":{"details":"Calculates the amount of USDC required to mint a given amount of BAL tokens.","params":{"balAmountToMint":"The amount of BAL tokens to be minted."},"returns":{"_0":"The amount of USDC required to mint the specified amount of BAL tokens."}},"singleSwap(address,address,uint256,address)":{"details":"Executes a single swap between two tokens using Uniswap.","params":{"amount":"The amount of token0 to be swapped.","receiver":"The address that will receive the swapped tokens.","token0":"The address of the token to be swapped.","token1":"The address of the token to be received."},"returns":{"amountOut":"The amount of token1 received from the swap. The function requires that the caller has a sufficient balance of token0 and that the amount to be swapped is greater than 0. Also, the caller must have approved this contract to spend the amount of token0. The function transfers the amount of token0 to be swapped from the caller to this contract, then performs the swap using Uniswap. The swapped tokens are sent to the receiver's address. The function returns the amount of token1 received from the swap."}},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"tokenValuation(uint256,address)":{"details":"Calculates the valuation of a given amount of a specific ERC20 token.","params":{"amount":"The amount of the ERC20 token.","token":"The address of the ERC20 token."},"returns":{"_0":"The calculated valuation of the ERC20 token."}},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"totalValuation()":{"details":"Returns the total valuation of the Baluni ecosystem.","returns":{"_0":"The total valuation of the Baluni ecosystem."}},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unitPrice()":{"details":"Returns the unit price of the token in USDC.","returns":{"_0":"The unit price of the token in USDC."}},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a0806040523460295730608052613f9e908161002e8239608051818181611887015261192f0152f35b5f80fdfe6080806040526004361015610012575f80fd5b5f905f3560e01c90816301d22ccd146126fd5750806306497cb9146126b157806306fdde03146125eb5780630918281b146125a8578063095ea7b3146125295780630a38abab146124e65780630cfc73861461215c5780630d8e6e2c1461212a57806318160ddd146121015780631a168da214611e8e57806323b872dd14611db057806327d54a9214611d2d578063295b930014611d135780632bdd955a14611ced5780632d6bc8ea14611bc25780632f86556814611ba1578063313ce56714611b8657806334decfc914611b695780633c2066a914611b0a5780634f1ef286146118f157806352d1902d14611875578063599f69f7146116b45780635efaaebb1461157e57806361d027b31461155557806370a0823114611510578063715018a6146114a757806371ddcfb8146114635780637dc0d1d01461143a5780637df107ea1461141157806385377188146113f357806389a30271146113ca5780638da5cb5b1461139557806395d89b41146112b6578063a9059cbb14611284578063aa6ca808146111fa578063aa95d893146111b1578063ad3cb1cc14611167578063b0d60ba014611003578063b14f2a3914610fc3578063b381cf4014610f9a578063b9f5e61714610f7c578063cc2a9a5b1461095e578063dd62ed3e14610916578063e73faa2d146108ae578063eedc3c5014610708578063f2fde38b146106db578063fe0a4dd1146102605763fe330a511461022e575f80fd5b3461025d57608036600319011261025d576020610255606435604435602435600435613576565b604051908152f35b80fd5b503461025d576020908160031936011261025d576004359161028061342a565b61028b831515612990565b815b60055481101561067c576102a081613d01565b90545f80516020613ec9833981519152546040516370a0823160e01b81523060048201526003936024936001600160a01b039391861b1c83169187818681865afa9081156104ce57899161064b575b50801561063d5730831461063d5760405163313ce56760e01b81528881600481875afa908115610632579160ff8c9261033295948d91610605575b501692613576565b6007938888858754168086146105995750905084600e541691606486885416916040519485938492630b4c774160e11b8452896004850152830152610bb860448301525afa9081156104ce579084918a9161056c575b506103988383600d541686613985565b16156104d9576103cf916103b29130918587541690613ad3565b936103ca6103c46004549254836129e8565b86612947565b61295a565b825460405163a9059cbb60e01b8082523360048301526024820184905294918890829060449082908d9089165af180156104ce57610426858a96946104539896948d946104b1575b50541693600c541692886129e8565b6040519485526001600160a01b039092166004850152602484019190915291938492839182906044820190565b03925af180156104a657916104739160019493610479575b501515612acc565b0161028d565b61049890863d881161049f575b610490818361280a565b810190612978565b505f61046b565b503d610486565b6040513d87823e3d90fd5b6104c790893d8b1161049f57610490818361280a565b505f610417565b6040513d8b823e3d90fd5b6104f2916103b291846008541685875416903393613bdd565b825460405163a9059cbb60e01b8082523360048301526024820184905294918890829060449082908d9089165af180156104ce57610426858a96946105489896948d946104b15750541693600c541692886129e8565b03925af180156104a65791610567916001949361047957501515612acc565b610473565b61058c9150893d8b11610592575b610584818361280a565b8101906129f5565b5f610388565b503d61057a565b60405163a9059cbb60e01b8152336004820152602481019590955293975095508694506044935084929091505af180156105fa5790600192916105dd575b50610473565b6105f390843d861161049f57610490818361280a565b505f6105d7565b6040513d86823e3d90fd5b61062591508c8d3d1061062b575b61061d818361280a565b8101906129cf565b5f61032a565b503d610613565b6040513d8c823e3d90fd5b505050505050600190610473565b90508781813d8311610675575b610662818361280a565b8101031261067157515f6102ef565b5f80fd5b503d610658565b827fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca56106c4866106ac8133613624565b60408051338152602081019290925290918291820190565b0390a160015f80516020613f298339815191525580f35b503461025d57602036600319011261025d576107056106f8612744565b6107006133f2565b613381565b80f35b503461025d57604036600319011261025d57600435906001600160401b038083116108aa57366023840112156108aa5782600401359260249161074a856128f8565b91610758604051938461280a565b858352602095848785019160051b8301019136831161080f57858101915b8383106108175750505050823590811161081357366023820112156108135780600401356107a3816128f8565b936107b1604051958661280a565b818552808786019260051b8401019236841161080f5701905b8282106107f857856107e486866107df61342a565b612cbf565b60015f80516020613f298339815191525580f35b868091610804846127c8565b8152019101906107ca565b8680fd5b8380fd5b82358581116108a65782016060908160231982360301126108a2576040519182018281108882111761088f576040526108518982016127c8565b825260448101358b830152606481013587811161088b579161087b8c94928b869536920101612846565b6040820152815201920191610776565b8a80fd5b89634e487b7160e01b5f5260416004525ffd5b8980fd5b8880fd5b5080fd5b503461025d578060031936011261025d575f80516020613ec9833981519152546108d981151561351c565b6108e1613466565b670de0b6b3a76400009080820291820403610902576020916102559161295a565b634e487b7160e01b5f52601160045260245ffd5b503461025d57604036600319011261025d57610930612744565b61094161093b61275a565b91612c5f565b9060018060a01b03165f52602052602060405f2054604051908152f35b503461025d5760c036600319011261025d57610978612744565b61098061275a565b610988612786565b90610991612770565b6109996127b2565b916109a261279c565b905f80516020613f4983398151915254946001600160401b03861680159081610f6c575b6001149081610f62575b159081610f59575b50610f475760016001600160401b03198716175f80516020613f498339815191525560ff8660401c1615610f1b575b604051610a13816127ef565b600681526542616c756e6960d01b602082015260405190610a33826127ef565b600682526542414c554e4960d01b6020830152610a4e613d97565b610a56613d97565b8051906001600160401b038211610f07578190610a805f80516020613e498339815191525461290f565b601f8111610e8c575b50602090601f8311600114610e00578c92610df5575b50508160011b915f199060031b1c1916175f80516020613e49833981519152555b8051906001600160401b038211610de1578190610aea5f80516020613e898339815191525461290f565b601f8111610d66575b50602090601f8311600114610cda578b92610ccf575b50508160011b915f199060031b1c1916175f80516020613e89833981519152555b610b32613d97565b610b3a613d97565b610b4333613381565b610b4b613d97565b610b53613d97565b60015f80516020613f2983398151915255610b6c613d97565b3015610cb7575f80516020613ec9833981519152805492670de0b6b3a7640000988985018095116109025760ff99610c43958c9455305f525f80516020613e6983398151915260205260405f208181540190556040519081525f5f80516020613ee983398151915260203093a36101f4600255601e60035561271060045560018060a01b0397888098818094169a8b9781600754976001600160601b0360a01b9e8f8a1617600755168d6008541617600855168b60095416176009551689600d541617600d551687600e541617600e551617613d36565b501681600b541617600b553390600c541617600c5560401c1615610c645780f35b60ff60401b195f80516020613f4983398151915254165f80516020613f49833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b60405163ec442f0560e01b81525f6004820152602490fd5b015190505f80610b09565b92505f80516020613e898339815191528b525f80516020613f09833981519152908b935b601f1984168510610d4b576001945083601f19811610610d33575b505050811b015f80516020613e8983398151915255610b2a565b01515f1960f88460031b161c191690555f8080610d19565b81810151835560209485019460019093019290910190610cfe565b9091505f80516020613e898339815191528b52601f830160051c5f80516020613f098339815191520160208410610dcd575b908392915b601f820160051c5f80516020613f09833981519152018110610dbf5750610af3565b5f8155849350600101610d9d565b505f80516020613f09833981519152610d98565b634e487b7160e01b8a52604160045260248afd5b015190505f80610a9f565b92505f80516020613e498339815191528c525f80516020613e29833981519152908c935b601f1984168510610e71576001945083601f19811610610e59575b505050811b015f80516020613e4983398151915255610ac0565b01515f1960f88460031b161c191690555f8080610e3f565b81810151835560209485019460019093019290910190610e24565b9091505f80516020613e498339815191528c52601f830160051c5f80516020613e298339815191520160208410610ef3575b908392915b601f820160051c5f80516020613e29833981519152018110610ee55750610a89565b5f8155849350600101610ec3565b505f80516020613e29833981519152610ebe565b634e487b7160e01b8b52604160045260248bfd5b68ffffffffffffffffff19861668010000000000000001175f80516020613f4983398151915255610a07565b60405163f92ee8a960e01b8152600490fd5b9050155f6109d8565b303b1591506109d0565b604088901c60ff161591506109c6565b503461025d578060031936011261025d576020600354604051908152f35b503461025d578060031936011261025d576008546040516001600160a01b039091168152602090f35b503461025d57602036600319011261025d57610fdd612744565b610fe56133f2565b60018060a01b03166001600160601b0360a01b600c541617600c5580f35b503461025d5760e036600319011261025d5761101d612744565b61102561275a565b61102d612786565b611035612770565b9061103e6127b2565b61104661279c565b9260c435936001600160401b03968786168096036108a6575f80516020613f49833981519152948554988760ff8b60401c1691821561115a575b5050610f47578960209861113093600160401b8a7fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29d68ffffffffffffffffff1916171789556101f4600255601e60035561271060045560018060a01b0397888098818094169a8b9781600754976001600160601b0360a01b9e8f8a1617600755168d6008541617600855168b60095416176009551689600d541617600d551687600e541617600e551617613d36565b501681600b541617600b553390600c541617600c5560ff60401b198154169055604051908152a180f35b8b1610159050875f611080565b503461025d578060031936011261025d576111ad604051611187816127ef565b60058152640352e302e360dc1b6020820152604051918291602083526020830190612720565b0390f35b503461025d57602036600319011261025d57602064e8d4a510006111f16111d6613466565b6103ca5f80516020613ec98339815191525491600435612947565b04604051908152f35b503461025d578060031936011261025d57604051600580548083529083526020808301937f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db092915b82821061126d576111ad856112598189038261280a565b6040519182916020835260208301906128bc565b835486529485019460019384019390910190611242565b503461025d57604036600319011261025d576112ab6112a1612744565b60243590336136e1565b602060405160018152f35b503461025d578060031936011261025d576040519080825f80516020613e898339815191529283546112e78161290f565b93848452602095600192876001821691825f1461137157505060011461132b575b5050506113179250038361280a565b6111ad604051928284938452830190612720565b8152859250905f80516020613f098339815191525b85831061135957505061131793508201015f8080611308565b80548389018501528794508693909201918101611340565b93509450505061131794915060ff191682840152151560051b8201015f8080611308565b503461025d578060031936011261025d575f80516020613ea9833981519152546040516001600160a01b039091168152602090f35b503461025d578060031936011261025d576007546040516001600160a01b039091168152602090f35b503461025d578060031936011261025d576020600454604051908152f35b503461025d578060031936011261025d57600a546040516001600160a01b039091168152602090f35b503461025d578060031936011261025d576009546040516001600160a01b039091168152602090f35b503461025d57602036600319011261025d5760206102555f80516020613ec98339815191525461149481151561351c565b6103ca61149f613466565b600435612947565b503461025d578060031936011261025d576114c06133f2565b5f80516020613ea983398151915280546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461025d57602036600319011261025d576020906040906001600160a01b03611538612744565b1681525f80516020613e6983398151915283522054604051908152f35b503461025d578060031936011261025d57600c546040516001600160a01b039091168152602090f35b503461025d5760a036600319011261025d57611598612744565b6115a061275a565b6115a8612786565b606435906115b46127b2565b926115c130331415612a14565b6115cc831515612a4f565b6040516370a0823160e01b8152336004820152602095906001600160a01b0390828216908881602481855afa80156106325787908b90611683575b61161392501015612a89565b6040516323b872dd60e01b815233600482015230602482015260448101879052908890829060649082908d905af180156104ce57916102559899879261166194611666575b50541683613985565b613bdd565b61167c908c8d3d1061049f57610490818361280a565b505f611658565b50508881813d83116116ad575b61169a818361280a565b8101031261067157866116139151611607565b503d611690565b50346106715760031960c036820112610671576001600160401b03600435818111610671576116e790369060040161288c565b602435838111610671576116ff90369060040161288c565b61170a949194612786565b611712612770565b9161171b61279c565b506040519760208901948511898610176118615760408590525f8952600b546007546001600160a01b0391821697911695873b1561067157604051633c2fddc560e21b815260e060048201529a5160e48c018190526101048c01905f5b81811061184b57505060209150838c82030160248d01528281520197905f5b81811061181f575050508887030160448901528086526001600160fb1b038111610671575f96889687958995602095889560051b8095888601376084803560648801526001600160a01b03918216908701521660a485015260c4840152010301925af1801561181457611808575080f35b61181291506127dc565b005b6040513d5f823e3d90fd5b919890919060019060209081906001600160a01b0361183d8e6127c8565b168152019a01929101611797565b8351835260209384019390920191600101611778565b634e487b7160e01b5f52604160045260245ffd5b34610671575f366003190112610671577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036118df5760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60405163703e46dd60e11b8152600490fd5b604036600319011261067157611905612744565b6024356001600160401b03811161067157611924903690600401612846565b906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116308114908115611adc575b506118df576119686133f2565b6040516352d1902d60e01b8152908216916020918281600481875afa5f9181611aad575b506119aa57604051634c9c8ce360e01b815260048101859052602490fd5b9284937f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90818103611a955750823b15611a7c5780546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2835115611a6257505f80848461181296519101845af4903d15611a59573d611a3d8161282b565b90611a4b604051928361280a565b81525f81943d92013e613dc5565b60609250613dc5565b9250505034611a6d57005b63b398979f60e01b8152600490fd5b604051634c9c8ce360e01b815260048101839052602490fd5b60249060405190632a87526960e21b82526004820152fd5b9091508381813d8311611ad5575b611ac5818361280a565b810103126106715751908661198c565b503d611abb565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541614158461195b565b34610671575f36600319011261067157611b2261342a565b6005545f5b818110611b415760015f80516020613f2983398151915255005b80611b63611b50600193613d01565b848060a01b0391549060031b1c16612b18565b01611b27565b34610671575f366003190112610671576020600254604051908152f35b34610671575f36600319011261067157602060405160128152f35b3461067157602036600319011261067157611812611bbd612744565b612b18565b3461067157608036600319011261067157611bdb612744565b611be361275a565b604435611bee612770565b90611bfb30331415612a14565b611c06811515612a4f565b6040516370a0823160e01b81523360048201526020946001600160a01b039491818616908781602481855afa80156118145785905f90611cbc575b611c4d92501015612a89565b6040516323b872dd60e01b815233600482015230602482015260448101859052908790829060649082905f905af180156118145761025596611c9a928692611c9f575b505f541683613985565b613ad3565b611cb5908a3d8c1161049f57610490818361280a565b5089611c90565b50508781813d8311611ce6575b611cd3818361280a565b810103126106715784611c4d9151611c41565b503d611cc9565b34610671576040366003190112610671576020610255611d0b61275a565b600435613787565b34610671575f366003190112610671576020610255613466565b3461067157602036600319011261067157611d46612744565b600a546040516313eaa54960e11b81526001600160a01b03928316600482015291906020908390602490829085165afa908115611814576020925f92611d91575b5060405191168152f35b611da9919250833d851161059257610584818361280a565b9083611d87565b3461067157606036600319011261067157611dc9612744565b611dd161275a565b60443590611dde83612c5f565b335f5260205260405f2054925f198403611dfd575b6112ab93506136e1565b828410611e68576001600160a01b03811615611e50573315611e3857826112ab94611e2783612c5f565b335f526020520360405f2055611df3565b604051634a1406b160e11b81525f6004820152602490fd5b60405163e602df0560e01b81525f6004820152602490fd5b604051637dc7a0d960e11b81523360048201526024810185905260448101849052606490fd5b34610671576020806003193601126106715760043590611eac61342a565b335f525f80516020613e698339815191528152611ecf8260405f20541015612990565b5f5b6005548110156120bc57611ee481613d01565b919060018060a01b03809154600394851b1c16925f80516020613ec983398151915254604051906370a0823160e01b82523060048301528682602481895afa918215611814575f9261208d575b5081158015612084575b6120775760405163313ce56760e01b81529087826004818a5afa801561181457611f8d9360ff8b92611f75955f9161205a57501692613576565b916103ca611f876004549254836129e8565b84612947565b60405163a9059cbb60e01b80825233600483015260248201839052919591929087816044815f875af18015611814576120059789965f93611fd89361203d575b50600c5416936129e8565b6040519485526001600160a01b039092166004850152602484019190915291948592839182906044820190565b03925af191821561181457600192612020575b505b01611ed1565b61203690843d861161049f57610490818361280a565b5084612018565b61205390893d8b1161049f57610490818361280a565b508c611fcd565b61207191508c8d3d1061062b5761061d818361280a565b8d61032a565b505050506001915061201a565b50308614611f3b565b9091508681813d83116120b5575b6120a5818361280a565b8101031261067157519088611f31565b503d61209b565b7fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca56120eb846106ac8133613624565b0390a160015f80516020613f2983398151915255005b34610671575f3660031901126106715760205f80516020613ec983398151915254604051908152f35b34610671575f3660031901126106715760206001600160401b035f80516020613f498339815191525416604051908152f35b34610671576020806003193601126106715760043561217961342a565b612181613466565b906103ca6121a25f80516020613ec983398151915293845492839185612947565b6007546040516323b872dd60e01b815233600482015230602482015264e8d4a5100090920460448301819052936001600160a01b0393909290918790829060649082905f9089165af18015611814576124c9575b506007546040516370a0823160e01b8152336004820152908416918782602481865afa918215611814575f9261249a575b50604051636eb1769f60e11b8152336004820152306024820152928890849060449082905afa928315611814575f9361246b575b501561241b5784116123d6578311612391573315610cb75761230b85937f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968856122ff84886122af612314976123519b54613459565b9055335f525f80516020613e69833981519152885260405f208181540190556040518181525f5f80516020613ee98339815191528a3393a360408051338152602081019290925290918291820190565b0390a160035490612947565b6004549061295a565b90806007541690600c54165f60405180968195829463a9059cbb60e01b84526004840160209093929193604081019460018060a01b031681520152565b03925af1801561181457612373575b60015f80516020613f2983398151915255005b8161238992903d1061049f57610490818361280a565b508080612360565b60405162461bcd60e51b815260048101869052601960248201527f436865636b2074686520746f6b656e20616c6c6f77616e6365000000000000006044820152606490fd5b60405162461bcd60e51b815260048101879052601c60248201527f555344432062616c616e636520697320696e73756666696369656e74000000006044820152606490fd5b60405162461bcd60e51b815260048101889052602260248201527f546f74616c2042414c554e4920737570706c792063616e6e6f74206265207a65604482015261726f60f01b6064820152608490fd5b9092508781813d8311612493575b612483818361280a565b810103126106715751918861225b565b503d612479565b9091508781813d83116124c2575b6124b2818361280a565b8101031261067157519088612227565b503d6124a8565b6124df90873d891161049f57610490818361280a565b50866121f6565b34610671576020366003190112610671576124ff612744565b6125076133f2565b600a80546001600160a01b0319166001600160a01b0392909216919091179055005b3461067157604036600319011261067157612542612744565b602435903315611e50576001600160a01b0316908115611e385761256533612c5f565b825f526020528060405f20556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b34610671576020366003190112610671576125c1612744565b6125c96133f2565b600b80546001600160a01b0319166001600160a01b0392909216919091179055005b34610671575f366003190112610671576040515f80516020613e498339815191528054825f6126198361290f565b92838352602094600191866001821691825f1461268f575050600114612648575b50506113179250038361280a565b8592505f525f80516020613e29833981519152905f915b8583106126775750506113179350820101858061263a565b8054838901850152879450869390920191810161265f565b925093505061131794915060ff191682840152151560051b820101858061263a565b34610671576020366003190112610671577fbea1b31142ae4b1f4efad240349036d718b7950d246c127768097ccf602fc7e060206004356126f06133f2565b80600355604051908152a1005b34610671575f36600319011261067157600b546001600160a01b03168152602090f35b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361067157565b602435906001600160a01b038216820361067157565b606435906001600160a01b038216820361067157565b604435906001600160a01b038216820361067157565b60a435906001600160a01b038216820361067157565b608435906001600160a01b038216820361067157565b35906001600160a01b038216820361067157565b6001600160401b03811161186157604052565b604081019081106001600160401b0382111761186157604052565b90601f801991011681019081106001600160401b0382111761186157604052565b6001600160401b03811161186157601f01601f191660200190565b81601f820112156106715780359061285d8261282b565b9261286b604051948561280a565b8284526020838301011161067157815f926020809301838601378301015290565b9181601f84011215610671578235916001600160401b038311610671576020808501948460051b01011161067157565b9081518082526020808093019301915f5b8281106128db575050505090565b83516001600160a01b0316855293810193928101926001016128cd565b6001600160401b0381116118615760051b60200190565b90600182811c9216801561293d575b602083101461292957565b634e487b7160e01b5f52602260045260245ffd5b91607f169161291e565b8181029291811591840414171561090257565b8115612964570490565b634e487b7160e01b5f52601260045260245ffd5b90816020910312610671575180151581036106715790565b1561299757565b60405162461bcd60e51b815260206004820152601060248201526f125b9cdd59999a58da595b9d0810905360821b6044820152606490fd5b90816020910312610671575160ff811681036106715790565b9190820391821161090257565b9081602091031261067157516001600160a01b03811681036106715790565b15612a1b57565b60405162461bcd60e51b815260206004820152600c60248201526b2bb937b7339039b2b73232b960a11b6044820152606490fd5b15612a5657565b60405162461bcd60e51b815260206004820152600b60248201526a0416d6f756e7420697320360ac1b6044820152606490fd5b15612a9057565b60405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b6044820152606490fd5b15612ad357565b60405162461bcd60e51b815260206004820152601760248201527f53776170204661696c65642c20547279204275726e28290000000000000000006044820152606490fd5b6040516370a0823160e01b8152306004820152906001600160a01b039060208183168185602481845afa948515611814575f95612c30575b508184600e54169160648660075416916040519485938492630b4c774160e11b845260048401526024830152610bb860448301525afa918215611814575f92612c13575b5050612ba58484600d541684613985565b821615831515811580612c0c575b15612bd857505090612bd692612bcf9230926007541690613ad3565b1515612acc565b565b91929181612c04575b50612beb57505050565b612bd692612bcf92826008541630936007541691613bdd565b90505f612be1565b5080612bb3565b612c299250803d1061059257610584818361280a565b5f80612b94565b9094508181813d8311612c58575b612c48818361280a565b810103126106715751935f612b50565b503d612c3e565b6001600160a01b03165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020526040902090565b8051821015612cab5760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b600a546001600160a01b0316929091905f84156133445760205f95602460405180988193639b76a5cd60e01b83523360048401525af1948515611814575f95613323575b50825191612d29612d13846128f8565b93612d21604051958661280a565b8085526128f8565b601f1995908601366020860137845195612d5b612d45886128f8565b97612d53604051998a61280a565b8089526128f8565b013660208801375f5b8551811015612e20576024906001600160a01b03612d828289612c97565b51165f52600660205260405f205415612d9b8288612c97565b5260206001600160a01b03612db0838a612c97565b5116604051938480926370a0823160e01b82523060048301525afa8015611814575f90612ded575b60019250612de6828a612c97565b5201612d64565b506020823d602011612e18575b81612e076020938361280a565b810103126106715760019151612dd8565b3d9150612dfa565b5091959091906001600160a01b0381163b15610671576040518092630eedc3c560e41b8252604482016040600484015281518091526064830190602060648260051b8601019301915f905b8282106132d1575050505091815f81612e9182966003198382030160248401528b6128bc565b03926001600160a01b03165af18015611814576132be575b50845b83518110156132b6576001600160a01b03612ec78286612c97565b5116906040516370a0823160e01b8152306004820152602081602481865afa9081156132ab578891613279575b50600e54600854604051630b4c774160e11b8152600481018690526001600160a01b0391821660248201819052610bb860448301529592909116602082606481845afa91821561324d578b92613258575b5060405195630b4c774160e11b875283600488015260248701526101f46044870152602086606481845afa95861561324d578b9661322c575b5060018060a01b03600754169160405192630b4c774160e11b84528460048501528060248501526101f46044850152602084606481865afa938415613221578d946131ff575b50602090606460405180958193630b4c774160e11b83528960048401526024830152610bb860448301525afa9182156131f4578c926131d3575b506001600160a01b031615801596906131c0575b5085156131ad575b50841561319a575b5061302d8387612c97565b51151580613193575b613184575b61304f613048848a612c97565b51836129e8565b931561311a57506130608288612c97565b5110613071575b6001915001612eac565b602061308661230b6130d79460035490612947565b6001600160a01b036130988489612c97565b51600c5460405163a9059cbb60e01b81526001600160a01b039091166004820152602481019390935291948592919091169082908b9082906044820190565b03925af191821561310f576001926130f0575b50613067565b6131089060203d60201161049f57610490818361280a565b505f6130ea565b6040513d89823e3d90fd5b60405163a9059cbb60e01b8152336004820152602481019490945293979296509194506020935085926044925083915085905af1908115613178575061315d5750565b6131759060203d60201161049f57610490818361280a565b50565b604051903d90823e3d90fd5b61318d81613d36565b5061303b565b5083613036565b6001600160a01b0316151593505f613022565b6001600160a01b0316151594505f61301a565b6001600160a01b0316151595505f613012565b6131ed91925060203d60201161059257610584818361280a565b905f612ffe565b6040513d8e823e3d90fd5b602091945061321a90823d841161059257610584818361280a565b9390612fc4565b6040513d8f823e3d90fd5b61324691965060203d60201161059257610584818361280a565b945f612f7e565b6040513d8d823e3d90fd5b61327291925060203d60201161059257610584818361280a565b905f612f45565b90506020813d6020116132a3575b816132946020938361280a565b8101031261067157515f612ef4565b3d9150613287565b6040513d8a823e3d90fd5b509350505050565b6132c99195506127dc565b5f935f612ea9565b9193600191939550602061331381926063198b820301865288516040606091878060a01b03815116845285810151868501520151918160408201520190612720565b9601920192018694939192612e6b565b61333d91955060203d60201161059257610584818361280a565b935f612d03565b60405162461bcd60e51b81526020600482015260156024820152741059d95b9d08199858dd1bdc9e481b9bdd081cd95d605a1b6044820152606490fd5b6001600160a01b039081169081156133da575f80516020613ea983398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b604051631e4fbdf760e01b81525f6004820152602490fd5b5f80516020613ea9833981519152546001600160a01b0316330361341257565b60405163118cdaa760e01b8152336004820152602490fd5b5f80516020613f2983398151915260028154146134475760029055565b604051633ee5aeb560e01b8152600490fd5b9190820180921161090257565b5f806005545b80821061347857505090565b909161348383613d01565b60018060a01b0391549060031b1c16604080516370a0823160e01b815230600482015260208082602481875afa92831561351357505f926134df575b5050916134d16134d792600194613787565b90613459565b92019061346c565b9080949250813d831161350c575b6134f7818361280a565b810103126106715791516134d16134d76134bf565b503d6134ed565b513d5f823e3d90fd5b1561352357565b60405162461bcd60e51b815260206004820152601b60248201527f546f74616c20737570706c792063616e6e6f74206265207a65726f00000000006044820152606490fd5b604d811161090257600a0a90565b9291909161358584151561351c565b601281116135df5760128110156135d0576012039160128311610902576135c86103ca926135bc6135c26135cd976135bc88613568565b9061295a565b95613568565b612947565b90565b506135cd92916103ca91612947565b60405162461bcd60e51b815260206004820152601e60248201527f546f6b656e20646563696d616c732073686f756c64206265203c3d20313800006044820152606490fd5b91906001600160a01b0383169081156136c957815f525f80516020613e698339815191528060205260405f2054948286106136985750815f80516020613ee9833981519152925f959660209386885284520360408620555f80516020613ec9833981519152818154039055604051908152a3565b60405163391434e360e21b81526001600160a01b039190911660048201526024810186905260448101839052606490fd5b604051634b637e8f60e11b81525f6004820152602490fd5b916001600160a01b038084169283156136c95716928315610cb757825f525f80516020613e698339815191528060205260405f205491838310613754575091806020925f80516020613ee983398151915294865f5284520360405f2055845f5260405f20818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b0391909116600482015260248101929092525060448101829052606490fd5b60405163313ce56760e01b808252600494939192916001600160a01b039081169060209081868981865afa958615611814575f96613966575b5080600754169060405194855282858a81855afa948515611814575f95613947575b508184146139235790606483926009541694604051958693849263802431fb60e01b84528d84015260248301525f60448301525afa9182915f936138f3575b505061383057505f9450505050565b60ff809192169316928084146138c257830360ff81116138af5760ff1694604d861161389c57506012670de0b6b3a76400009495600a0a9310613884576138809261387a91612947565b90612947565b0490565b90826138966138809461387a93612947565b92612947565b601190634e487b7160e01b5f525260245ffd5b601186634e487b7160e01b5f525260245ffd5b50929390915064e8d4a510009182810292818404149015171561389c5750670de0b6b3a76400009161388091612947565b9080929350813d831161391c575b61390b818361280a565b810103126106715751905f80613821565b503d613901565b50505050509192905064e8d4a510009182810292818404149015171561389c575090565b61395f919550833d851161062b5761061d818361280a565b935f6137e2565b61397e919650823d841161062b5761061d818361280a565b945f6137c0565b60408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015260209592949293811692918681604481875afa908115613a98579085915f91613aa2575b50106139dc575b505050505050565b845163095ea7b360e01b91828252831660048201525f602482015286816044815f885af18015613a9857879492613a43979694925f92613a7b575b5086519081526001600160a01b0390921660048301526024820193909352948592839182906044820190565b03925af19081156135135750613a5d575b808080806139d4565b81613a7392903d1061049f57610490818361280a565b505f80613a54565b613a9190873d891161049f57610490818361280a565b505f613a17565b86513d5f823e3d90fd5b809250888092503d8311613acc575b613abb818361280a565b81010312610671578490515f6139cd565b503d613ab1565b9092916040519161010083018381106001600160401b0382111761186157604052600160a01b60019003938480921684528160208501961686526040840192610bb88452826060860192168252608085019042825260a0860190815260c08601915f83528460e08801945f8652815f541697826040519c8d9c8d9c8d63414bf38960e01b9052511660048d0152511660248b01525162ffffff1660448a0152511660648801525160848701525160a48601525160c4850152511660e48301525a925f61010492602095f1908115611814575f91613bae575090565b90506020813d602011613bd5575b81613bc96020938361280a565b81010312610671575190565b3d9150613bbc565b939093929192604051936020956001600160601b0319809360601b16878701528261017760eb1b9182603489015260601b166037870152604b86015260601b16604e8401526042835260808301916001600160401b03928481108482111761186157610120850193841181851017611861575f613cb391879560405286815260a0870160018060a01b03809616815261010060c0890198428a5260e08101968752018381528684541695604051998a988997889663c04b8d5960e01b88528c60048901525160a0602489015260c4880190612720565b94511660448601525160648501525160848401525160a483015203925af1918215611814575f92613ce357505090565b90809250813d8311613cfa575b613bc9818361280a565b503d613cf0565b600554811015612cab5760055f527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001905f90565b805f52600660205260405f2054155f14613d9257600554600160401b81101561186157806001613d699201600555613d01565b81549060031b9083821b915f19901b1916179055600554905f52600660205260405f2055600190565b505f90565b60ff5f80516020613f498339815191525460401c1615613db357565b604051631afcd79f60e31b8152600490fd5b90613dec5750805115613dda57805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580613e1f575b613dfd575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15613df556fe2ae08a8e29253f69ac5d979a101956ab8f8d9d7ded63fa7a83b16fc47648eab052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0352c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace049016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef46a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a2646970667358221220eb12bb3e406bc4b45a050a8cc16a8e13f4d3df152d8077863996d65ca8653c8264736f6c63430008190033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x29 JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH2 0x3F9E SWAP1 DUP2 PUSH2 0x2E DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x1887 ADD MSTORE PUSH2 0x192F ADD MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1D22CCD EQ PUSH2 0x26FD JUMPI POP DUP1 PUSH4 0x6497CB9 EQ PUSH2 0x26B1 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x25EB JUMPI DUP1 PUSH4 0x918281B EQ PUSH2 0x25A8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2529 JUMPI DUP1 PUSH4 0xA38ABAB EQ PUSH2 0x24E6 JUMPI DUP1 PUSH4 0xCFC7386 EQ PUSH2 0x215C JUMPI DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x212A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2101 JUMPI DUP1 PUSH4 0x1A168DA2 EQ PUSH2 0x1E8E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DB0 JUMPI DUP1 PUSH4 0x27D54A92 EQ PUSH2 0x1D2D JUMPI DUP1 PUSH4 0x295B9300 EQ PUSH2 0x1D13 JUMPI DUP1 PUSH4 0x2BDD955A EQ PUSH2 0x1CED JUMPI DUP1 PUSH4 0x2D6BC8EA EQ PUSH2 0x1BC2 JUMPI DUP1 PUSH4 0x2F865568 EQ PUSH2 0x1BA1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B86 JUMPI DUP1 PUSH4 0x34DECFC9 EQ PUSH2 0x1B69 JUMPI DUP1 PUSH4 0x3C2066A9 EQ PUSH2 0x1B0A JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x18F1 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1875 JUMPI DUP1 PUSH4 0x599F69F7 EQ PUSH2 0x16B4 JUMPI DUP1 PUSH4 0x5EFAAEBB EQ PUSH2 0x157E JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x1555 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1510 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x14A7 JUMPI DUP1 PUSH4 0x71DDCFB8 EQ PUSH2 0x1463 JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x143A JUMPI DUP1 PUSH4 0x7DF107EA EQ PUSH2 0x1411 JUMPI DUP1 PUSH4 0x85377188 EQ PUSH2 0x13F3 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x13CA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1395 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x12B6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1284 JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x11FA JUMPI DUP1 PUSH4 0xAA95D893 EQ PUSH2 0x11B1 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x1167 JUMPI DUP1 PUSH4 0xB0D60BA0 EQ PUSH2 0x1003 JUMPI DUP1 PUSH4 0xB14F2A39 EQ PUSH2 0xFC3 JUMPI DUP1 PUSH4 0xB381CF40 EQ PUSH2 0xF9A JUMPI DUP1 PUSH4 0xB9F5E617 EQ PUSH2 0xF7C JUMPI DUP1 PUSH4 0xCC2A9A5B EQ PUSH2 0x95E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x916 JUMPI DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x8AE JUMPI DUP1 PUSH4 0xEEDC3C50 EQ PUSH2 0x708 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6DB JUMPI DUP1 PUSH4 0xFE0A4DD1 EQ PUSH2 0x260 JUMPI PUSH4 0xFE330A51 EQ PUSH2 0x22E JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x25D JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH1 0x20 PUSH2 0x255 PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x3576 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH2 0x280 PUSH2 0x342A JUMP JUMPDEST PUSH2 0x28B DUP4 ISZERO ISZERO PUSH2 0x2990 JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x67C JUMPI PUSH2 0x2A0 DUP2 PUSH2 0x3D01 JUMP JUMPDEST SWAP1 SLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 SWAP4 PUSH1 0x24 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP2 DUP7 SHL SHR DUP4 AND SWAP2 DUP8 DUP2 DUP7 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4CE JUMPI DUP10 SWAP2 PUSH2 0x64B JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x63D JUMPI ADDRESS DUP4 EQ PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE DUP9 DUP2 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x632 JUMPI SWAP2 PUSH1 0xFF DUP13 SWAP3 PUSH2 0x332 SWAP6 SWAP5 DUP14 SWAP2 PUSH2 0x605 JUMPI JUMPDEST POP AND SWAP3 PUSH2 0x3576 JUMP JUMPDEST PUSH1 0x7 SWAP4 DUP9 DUP9 DUP6 DUP8 SLOAD AND DUP1 DUP7 EQ PUSH2 0x599 JUMPI POP SWAP1 POP DUP5 PUSH1 0xE SLOAD AND SWAP2 PUSH1 0x64 DUP7 DUP9 SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP5 MSTORE DUP10 PUSH1 0x4 DUP6 ADD MSTORE DUP4 ADD MSTORE PUSH2 0xBB8 PUSH1 0x44 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4CE JUMPI SWAP1 DUP5 SWAP2 DUP11 SWAP2 PUSH2 0x56C JUMPI JUMPDEST POP PUSH2 0x398 DUP4 DUP4 PUSH1 0xD SLOAD AND DUP7 PUSH2 0x3985 JUMP JUMPDEST AND ISZERO PUSH2 0x4D9 JUMPI PUSH2 0x3CF SWAP2 PUSH2 0x3B2 SWAP2 ADDRESS SWAP2 DUP6 DUP8 SLOAD AND SWAP1 PUSH2 0x3AD3 JUMP JUMPDEST SWAP4 PUSH2 0x3CA PUSH2 0x3C4 PUSH1 0x4 SLOAD SWAP3 SLOAD DUP4 PUSH2 0x29E8 JUMP JUMPDEST DUP7 PUSH2 0x2947 JUMP JUMPDEST PUSH2 0x295A JUMP JUMPDEST DUP3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP5 SWAP2 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP14 SWAP1 DUP10 AND GAS CALL DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH2 0x426 DUP6 DUP11 SWAP7 SWAP5 PUSH2 0x453 SWAP9 SWAP7 SWAP5 DUP14 SWAP5 PUSH2 0x4B1 JUMPI JUMPDEST POP SLOAD AND SWAP4 PUSH1 0xC SLOAD AND SWAP3 DUP9 PUSH2 0x29E8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP4 DUP5 SWAP3 DUP4 SWAP2 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x4A6 JUMPI SWAP2 PUSH2 0x473 SWAP2 PUSH1 0x1 SWAP5 SWAP4 PUSH2 0x479 JUMPI JUMPDEST POP ISZERO ISZERO PUSH2 0x2ACC JUMP JUMPDEST ADD PUSH2 0x28D JUMP JUMPDEST PUSH2 0x498 SWAP1 DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x49F JUMPI JUMPDEST PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2978 JUMP JUMPDEST POP PUSH0 PUSH2 0x46B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x486 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x4C7 SWAP1 DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x49F JUMPI PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP PUSH0 PUSH2 0x417 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x4F2 SWAP2 PUSH2 0x3B2 SWAP2 DUP5 PUSH1 0x8 SLOAD AND DUP6 DUP8 SLOAD AND SWAP1 CALLER SWAP4 PUSH2 0x3BDD JUMP JUMPDEST DUP3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP5 SWAP2 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP14 SWAP1 DUP10 AND GAS CALL DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH2 0x426 DUP6 DUP11 SWAP7 SWAP5 PUSH2 0x548 SWAP9 SWAP7 SWAP5 DUP14 SWAP5 PUSH2 0x4B1 JUMPI POP SLOAD AND SWAP4 PUSH1 0xC SLOAD AND SWAP3 DUP9 PUSH2 0x29E8 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x4A6 JUMPI SWAP2 PUSH2 0x567 SWAP2 PUSH1 0x1 SWAP5 SWAP4 PUSH2 0x479 JUMPI POP ISZERO ISZERO PUSH2 0x2ACC JUMP JUMPDEST PUSH2 0x473 JUMP JUMPDEST PUSH2 0x58C SWAP2 POP DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x592 JUMPI JUMPDEST PUSH2 0x584 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH0 PUSH2 0x388 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x57A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 SWAP8 POP SWAP6 POP DUP7 SWAP5 POP PUSH1 0x44 SWAP4 POP DUP5 SWAP3 SWAP1 SWAP2 POP GAS CALL DUP1 ISZERO PUSH2 0x5FA JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0x5DD JUMPI JUMPDEST POP PUSH2 0x473 JUMP JUMPDEST PUSH2 0x5F3 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x49F JUMPI PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP PUSH0 PUSH2 0x5D7 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x625 SWAP2 POP DUP13 DUP14 RETURNDATASIZE LT PUSH2 0x62B JUMPI JUMPDEST PUSH2 0x61D DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x29CF JUMP JUMPDEST PUSH0 PUSH2 0x32A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP POP POP POP PUSH1 0x1 SWAP1 PUSH2 0x473 JUMP JUMPDEST SWAP1 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x675 JUMPI JUMPDEST PUSH2 0x662 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI MLOAD PUSH0 PUSH2 0x2EF JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x658 JUMP JUMPDEST DUP3 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 PUSH2 0x6C4 DUP7 PUSH2 0x6AC DUP2 CALLER PUSH2 0x3624 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F29 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH2 0x705 PUSH2 0x6F8 PUSH2 0x2744 JUMP JUMPDEST PUSH2 0x700 PUSH2 0x33F2 JUMP JUMPDEST PUSH2 0x3381 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 GT PUSH2 0x8AA JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x8AA JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD SWAP3 PUSH1 0x24 SWAP2 PUSH2 0x74A DUP6 PUSH2 0x28F8 JUMP JUMPDEST SWAP2 PUSH2 0x758 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x280A JUMP JUMPDEST DUP6 DUP4 MSTORE PUSH1 0x20 SWAP6 DUP5 DUP8 DUP6 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x80F JUMPI DUP6 DUP2 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x817 JUMPI POP POP POP POP DUP3 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x813 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x813 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x7A3 DUP2 PUSH2 0x28F8 JUMP JUMPDEST SWAP4 PUSH2 0x7B1 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x280A JUMP JUMPDEST DUP2 DUP6 MSTORE DUP1 DUP8 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP5 ADD ADD SWAP3 CALLDATASIZE DUP5 GT PUSH2 0x80F JUMPI ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x7F8 JUMPI DUP6 PUSH2 0x7E4 DUP7 DUP7 PUSH2 0x7DF PUSH2 0x342A JUMP JUMPDEST PUSH2 0x2CBF JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F29 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST DUP7 DUP1 SWAP2 PUSH2 0x804 DUP5 PUSH2 0x27C8 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x7CA JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x8A6 JUMPI DUP3 ADD PUSH1 0x60 SWAP1 DUP2 PUSH1 0x23 NOT DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x8A2 JUMPI PUSH1 0x40 MLOAD SWAP2 DUP3 ADD DUP3 DUP2 LT DUP9 DUP3 GT OR PUSH2 0x88F JUMPI PUSH1 0x40 MSTORE PUSH2 0x851 DUP10 DUP3 ADD PUSH2 0x27C8 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x44 DUP2 ADD CALLDATALOAD DUP12 DUP4 ADD MSTORE PUSH1 0x64 DUP2 ADD CALLDATALOAD DUP8 DUP2 GT PUSH2 0x88B JUMPI SWAP2 PUSH2 0x87B DUP13 SWAP5 SWAP3 DUP12 DUP7 SWAP6 CALLDATASIZE SWAP3 ADD ADD PUSH2 0x2846 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x776 JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH0 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x8D9 DUP2 ISZERO ISZERO PUSH2 0x351C JUMP JUMPDEST PUSH2 0x8E1 PUSH2 0x3466 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 DUP1 DUP3 MUL SWAP2 DUP3 DIV SUB PUSH2 0x902 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x255 SWAP2 PUSH2 0x295A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH2 0x930 PUSH2 0x2744 JUMP JUMPDEST PUSH2 0x941 PUSH2 0x93B PUSH2 0x275A JUMP JUMPDEST SWAP2 PUSH2 0x2C5F JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH2 0x978 PUSH2 0x2744 JUMP JUMPDEST PUSH2 0x980 PUSH2 0x275A JUMP JUMPDEST PUSH2 0x988 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x991 PUSH2 0x2770 JUMP JUMPDEST PUSH2 0x999 PUSH2 0x27B2 JUMP JUMPDEST SWAP2 PUSH2 0x9A2 PUSH2 0x279C JUMP JUMPDEST SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0xF6C JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0xF62 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0xF59 JUMPI JUMPDEST POP PUSH2 0xF47 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP8 AND OR PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0xFF DUP7 PUSH1 0x40 SHR AND ISZERO PUSH2 0xF1B JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA13 DUP2 PUSH2 0x27EF JUMP JUMPDEST PUSH1 0x6 DUP2 MSTORE PUSH6 0x42616C756E69 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0xA33 DUP3 PUSH2 0x27EF JUMP JUMPDEST PUSH1 0x6 DUP3 MSTORE PUSH6 0x42414C554E49 PUSH1 0xD0 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xA4E PUSH2 0x3D97 JUMP JUMPDEST PUSH2 0xA56 PUSH2 0x3D97 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xF07 JUMPI DUP2 SWAP1 PUSH2 0xA80 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x290F JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xE8C JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xE00 JUMPI DUP13 SWAP3 PUSH2 0xDF5 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xDE1 JUMPI DUP2 SWAP1 PUSH2 0xAEA PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E89 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x290F JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xD66 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xCDA JUMPI DUP12 SWAP3 PUSH2 0xCCF JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E89 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMPDEST PUSH2 0xB32 PUSH2 0x3D97 JUMP JUMPDEST PUSH2 0xB3A PUSH2 0x3D97 JUMP JUMPDEST PUSH2 0xB43 CALLER PUSH2 0x3381 JUMP JUMPDEST PUSH2 0xB4B PUSH2 0x3D97 JUMP JUMPDEST PUSH2 0xB53 PUSH2 0x3D97 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F29 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0xB6C PUSH2 0x3D97 JUMP JUMPDEST ADDRESS ISZERO PUSH2 0xCB7 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD SWAP3 PUSH8 0xDE0B6B3A7640000 SWAP9 DUP10 DUP6 ADD DUP1 SWAP6 GT PUSH2 0x902 JUMPI PUSH1 0xFF SWAP10 PUSH2 0xC43 SWAP6 DUP13 SWAP5 SSTORE ADDRESS PUSH0 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E69 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EE9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 ADDRESS SWAP4 LOG3 PUSH2 0x1F4 PUSH1 0x2 SSTORE PUSH1 0x1E PUSH1 0x3 SSTORE PUSH2 0x2710 PUSH1 0x4 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 DUP1 SWAP9 DUP2 DUP1 SWAP5 AND SWAP11 DUP12 SWAP8 DUP2 PUSH1 0x7 SLOAD SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP15 DUP16 DUP11 AND OR PUSH1 0x7 SSTORE AND DUP14 PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE AND DUP12 PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE AND DUP10 PUSH1 0xD SLOAD AND OR PUSH1 0xD SSTORE AND DUP8 PUSH1 0xE SLOAD AND OR PUSH1 0xE SSTORE AND OR PUSH2 0x3D36 JUMP JUMPDEST POP AND DUP2 PUSH1 0xB SLOAD AND OR PUSH1 0xB SSTORE CALLER SWAP1 PUSH1 0xC SLOAD AND OR PUSH1 0xC SSTORE PUSH1 0x40 SHR AND ISZERO PUSH2 0xC64 JUMPI DUP1 RETURN JUMPDEST PUSH1 0xFF PUSH1 0x40 SHL NOT PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0xB09 JUMP JUMPDEST SWAP3 POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E89 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP12 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP12 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xD4B JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xD33 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E89 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0xB2A JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0xD19 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xCFE JUMP JUMPDEST SWAP1 SWAP2 POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E89 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP12 MSTORE PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD PUSH1 0x20 DUP5 LT PUSH2 0xDCD JUMPI JUMPDEST SWAP1 DUP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP2 LT PUSH2 0xDBF JUMPI POP PUSH2 0xAF3 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0xD9D JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xD98 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0xA9F JUMP JUMPDEST SWAP3 POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP13 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E29 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP13 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xE71 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xE59 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0xAC0 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0xE3F JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xE24 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP13 MSTORE PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E29 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD PUSH1 0x20 DUP5 LT PUSH2 0xEF3 JUMPI JUMPDEST SWAP1 DUP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E29 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP2 LT PUSH2 0xEE5 JUMPI POP PUSH2 0xA89 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0xEC3 JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E29 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xEBE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT DUP7 AND PUSH9 0x10000000000000001 OR PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO PUSH0 PUSH2 0x9D8 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x40 DUP9 SWAP1 SHR PUSH1 0xFF AND ISZERO SWAP2 POP PUSH2 0x9C6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH2 0xFDD PUSH2 0x2744 JUMP JUMPDEST PUSH2 0xFE5 PUSH2 0x33F2 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xC SLOAD AND OR PUSH1 0xC SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH2 0x101D PUSH2 0x2744 JUMP JUMPDEST PUSH2 0x1025 PUSH2 0x275A JUMP JUMPDEST PUSH2 0x102D PUSH2 0x2786 JUMP JUMPDEST PUSH2 0x1035 PUSH2 0x2770 JUMP JUMPDEST SWAP1 PUSH2 0x103E PUSH2 0x27B2 JUMP JUMPDEST PUSH2 0x1046 PUSH2 0x279C JUMP JUMPDEST SWAP3 PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP7 DUP8 DUP7 AND DUP1 SWAP7 SUB PUSH2 0x8A6 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 DUP6 SLOAD SWAP9 DUP8 PUSH1 0xFF DUP12 PUSH1 0x40 SHR AND SWAP2 DUP3 ISZERO PUSH2 0x115A JUMPI JUMPDEST POP POP PUSH2 0xF47 JUMPI DUP10 PUSH1 0x20 SWAP9 PUSH2 0x1130 SWAP4 PUSH1 0x1 PUSH1 0x40 SHL DUP11 PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP14 PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND OR OR DUP10 SSTORE PUSH2 0x1F4 PUSH1 0x2 SSTORE PUSH1 0x1E PUSH1 0x3 SSTORE PUSH2 0x2710 PUSH1 0x4 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 DUP1 SWAP9 DUP2 DUP1 SWAP5 AND SWAP11 DUP12 SWAP8 DUP2 PUSH1 0x7 SLOAD SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP15 DUP16 DUP11 AND OR PUSH1 0x7 SSTORE AND DUP14 PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE AND DUP12 PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE AND DUP10 PUSH1 0xD SLOAD AND OR PUSH1 0xD SSTORE AND DUP8 PUSH1 0xE SLOAD AND OR PUSH1 0xE SSTORE AND OR PUSH2 0x3D36 JUMP JUMPDEST POP AND DUP2 PUSH1 0xB SLOAD AND OR PUSH1 0xB SSTORE CALLER SWAP1 PUSH1 0xC SLOAD AND OR PUSH1 0xC SSTORE PUSH1 0xFF PUSH1 0x40 SHL NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP12 AND LT ISZERO SWAP1 POP DUP8 PUSH0 PUSH2 0x1080 JUMP JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH2 0x11AD PUSH1 0x40 MLOAD PUSH2 0x1187 DUP2 PUSH2 0x27EF JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2720 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH1 0x20 PUSH5 0xE8D4A51000 PUSH2 0x11F1 PUSH2 0x11D6 PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x3CA PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP2 PUSH1 0x4 CALLDATALOAD PUSH2 0x2947 JUMP JUMPDEST DIV PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH1 0x40 MLOAD PUSH1 0x5 DUP1 SLOAD DUP1 DUP4 MSTORE SWAP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP3 SWAP2 JUMPDEST DUP3 DUP3 LT PUSH2 0x126D JUMPI PUSH2 0x11AD DUP6 PUSH2 0x1259 DUP2 DUP10 SUB DUP3 PUSH2 0x280A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x28BC JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1242 JUMP JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH2 0x12AB PUSH2 0x12A1 PUSH2 0x2744 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x36E1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E89 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP4 SLOAD PUSH2 0x12E7 DUP2 PUSH2 0x290F JUMP JUMPDEST SWAP4 DUP5 DUP5 MSTORE PUSH1 0x20 SWAP6 PUSH1 0x1 SWAP3 DUP8 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH0 EQ PUSH2 0x1371 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x132B JUMPI JUMPDEST POP POP POP PUSH2 0x1317 SWAP3 POP SUB DUP4 PUSH2 0x280A JUMP JUMPDEST PUSH2 0x11AD PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x2720 JUMP JUMPDEST DUP2 MSTORE DUP6 SWAP3 POP SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP6 DUP4 LT PUSH2 0x1359 JUMPI POP POP PUSH2 0x1317 SWAP4 POP DUP3 ADD ADD PUSH0 DUP1 DUP1 PUSH2 0x1308 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x1340 JUMP JUMPDEST SWAP4 POP SWAP5 POP POP POP PUSH2 0x1317 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD PUSH0 DUP1 DUP1 PUSH2 0x1308 JUMP JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EA9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH1 0x20 PUSH2 0x255 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x1494 DUP2 ISZERO ISZERO PUSH2 0x351C JUMP JUMPDEST PUSH2 0x3CA PUSH2 0x149F PUSH2 0x3466 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x2947 JUMP JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH2 0x14C0 PUSH2 0x33F2 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EA9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1538 PUSH2 0x2744 JUMP JUMPDEST AND DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E69 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH2 0x1598 PUSH2 0x2744 JUMP JUMPDEST PUSH2 0x15A0 PUSH2 0x275A JUMP JUMPDEST PUSH2 0x15A8 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH2 0x15B4 PUSH2 0x27B2 JUMP JUMPDEST SWAP3 PUSH2 0x15C1 ADDRESS CALLER EQ ISZERO PUSH2 0x2A14 JUMP JUMPDEST PUSH2 0x15CC DUP4 ISZERO ISZERO PUSH2 0x2A4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 SWAP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP3 DUP3 AND SWAP1 DUP9 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x632 JUMPI DUP8 SWAP1 DUP12 SWAP1 PUSH2 0x1683 JUMPI JUMPDEST PUSH2 0x1613 SWAP3 POP LT ISZERO PUSH2 0x2A89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP14 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x4CE JUMPI SWAP2 PUSH2 0x255 SWAP9 SWAP10 DUP8 SWAP3 PUSH2 0x1661 SWAP5 PUSH2 0x1666 JUMPI JUMPDEST POP SLOAD AND DUP4 PUSH2 0x3985 JUMP JUMPDEST PUSH2 0x3BDD JUMP JUMPDEST PUSH2 0x167C SWAP1 DUP13 DUP14 RETURNDATASIZE LT PUSH2 0x49F JUMPI PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP PUSH0 PUSH2 0x1658 JUMP JUMPDEST POP POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x16AD JUMPI JUMPDEST PUSH2 0x169A DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI DUP7 PUSH2 0x1613 SWAP2 MLOAD PUSH2 0x1607 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1690 JUMP JUMPDEST POP CALLVALUE PUSH2 0x671 JUMPI PUSH1 0x3 NOT PUSH1 0xC0 CALLDATASIZE DUP3 ADD SLT PUSH2 0x671 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x671 JUMPI PUSH2 0x16E7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x288C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x671 JUMPI PUSH2 0x16FF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x288C JUMP JUMPDEST PUSH2 0x170A SWAP5 SWAP2 SWAP5 PUSH2 0x2786 JUMP JUMPDEST PUSH2 0x1712 PUSH2 0x2770 JUMP JUMPDEST SWAP2 PUSH2 0x171B PUSH2 0x279C JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP8 PUSH1 0x20 DUP10 ADD SWAP5 DUP6 GT DUP10 DUP7 LT OR PUSH2 0x1861 JUMPI PUSH1 0x40 DUP6 SWAP1 MSTORE PUSH0 DUP10 MSTORE PUSH1 0xB SLOAD PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP8 SWAP2 AND SWAP6 DUP8 EXTCODESIZE ISZERO PUSH2 0x671 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3C2FDDC5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0xE0 PUSH1 0x4 DUP3 ADD MSTORE SWAP11 MLOAD PUSH1 0xE4 DUP13 ADD DUP2 SWAP1 MSTORE PUSH2 0x104 DUP13 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x184B JUMPI POP POP PUSH1 0x20 SWAP2 POP DUP4 DUP13 DUP3 SUB ADD PUSH1 0x24 DUP14 ADD MSTORE DUP3 DUP2 MSTORE ADD SWAP8 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x181F JUMPI POP POP POP DUP9 DUP8 SUB ADD PUSH1 0x44 DUP10 ADD MSTORE DUP1 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP2 GT PUSH2 0x671 JUMPI PUSH0 SWAP7 DUP9 SWAP7 DUP8 SWAP6 DUP10 SWAP6 PUSH1 0x20 SWAP6 DUP9 SWAP6 PUSH1 0x5 SHL DUP1 SWAP6 DUP9 DUP7 ADD CALLDATACOPY PUSH1 0x84 DUP1 CALLDATALOAD PUSH1 0x64 DUP9 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP1 DUP8 ADD MSTORE AND PUSH1 0xA4 DUP6 ADD MSTORE PUSH1 0xC4 DUP5 ADD MSTORE ADD SUB ADD SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1814 JUMPI PUSH2 0x1808 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x1812 SWAP2 POP PUSH2 0x27DC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP9 SWAP1 SWAP2 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x183D DUP15 PUSH2 0x27C8 JUMP JUMPDEST AND DUP2 MSTORE ADD SWAP11 ADD SWAP3 SWAP2 ADD PUSH2 0x1797 JUMP JUMPDEST DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1778 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x18DF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH2 0x1905 PUSH2 0x2744 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x671 JUMPI PUSH2 0x1924 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2846 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND ADDRESS DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1ADC JUMPI JUMPDEST POP PUSH2 0x18DF JUMPI PUSH2 0x1968 PUSH2 0x33F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP3 AND SWAP2 PUSH1 0x20 SWAP2 DUP3 DUP2 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0x1AAD JUMPI JUMPDEST POP PUSH2 0x19AA JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP3 DUP5 SWAP4 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 DUP2 DUP2 SUB PUSH2 0x1A95 JUMPI POP DUP3 EXTCODESIZE ISZERO PUSH2 0x1A7C JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP4 MLOAD ISZERO PUSH2 0x1A62 JUMPI POP PUSH0 DUP1 DUP5 DUP5 PUSH2 0x1812 SWAP7 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x1A59 JUMPI RETURNDATASIZE PUSH2 0x1A3D DUP2 PUSH2 0x282B JUMP JUMPDEST SWAP1 PUSH2 0x1A4B PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 MSTORE PUSH0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x3DC5 JUMP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x3DC5 JUMP JUMPDEST SWAP3 POP POP POP CALLVALUE PUSH2 0x1A6D JUMPI STOP JUMPDEST PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1AD5 JUMPI JUMPDEST PUSH2 0x1AC5 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI MLOAD SWAP1 DUP7 PUSH2 0x198C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1ABB JUMP JUMPDEST SWAP1 POP DUP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ ISZERO DUP5 PUSH2 0x195B JUMP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH2 0x1B22 PUSH2 0x342A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1B41 JUMPI PUSH1 0x1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F29 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE STOP JUMPDEST DUP1 PUSH2 0x1B63 PUSH2 0x1B50 PUSH1 0x1 SWAP4 PUSH2 0x3D01 JUMP JUMPDEST DUP5 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x2B18 JUMP JUMPDEST ADD PUSH2 0x1B27 JUMP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH2 0x1812 PUSH2 0x1BBD PUSH2 0x2744 JUMP JUMPDEST PUSH2 0x2B18 JUMP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH2 0x1BDB PUSH2 0x2744 JUMP JUMPDEST PUSH2 0x1BE3 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0x1BEE PUSH2 0x2770 JUMP JUMPDEST SWAP1 PUSH2 0x1BFB ADDRESS CALLER EQ ISZERO PUSH2 0x2A14 JUMP JUMPDEST PUSH2 0x1C06 DUP2 ISZERO ISZERO PUSH2 0x2A4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP2 DUP2 DUP7 AND SWAP1 DUP8 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x1814 JUMPI DUP6 SWAP1 PUSH0 SWAP1 PUSH2 0x1CBC JUMPI JUMPDEST PUSH2 0x1C4D SWAP3 POP LT ISZERO PUSH2 0x2A89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x1814 JUMPI PUSH2 0x255 SWAP7 PUSH2 0x1C9A SWAP3 DUP7 SWAP3 PUSH2 0x1C9F JUMPI JUMPDEST POP PUSH0 SLOAD AND DUP4 PUSH2 0x3985 JUMP JUMPDEST PUSH2 0x3AD3 JUMP JUMPDEST PUSH2 0x1CB5 SWAP1 DUP11 RETURNDATASIZE DUP13 GT PUSH2 0x49F JUMPI PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP DUP10 PUSH2 0x1C90 JUMP JUMPDEST POP POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1CE6 JUMPI JUMPDEST PUSH2 0x1CD3 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI DUP5 PUSH2 0x1C4D SWAP2 MLOAD PUSH2 0x1C41 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1CC9 JUMP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH1 0x20 PUSH2 0x255 PUSH2 0x1D0B PUSH2 0x275A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x3787 JUMP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH1 0x20 PUSH2 0x255 PUSH2 0x3466 JUMP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH2 0x1D46 PUSH2 0x2744 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x13EAA549 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP6 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1814 JUMPI PUSH1 0x20 SWAP3 PUSH0 SWAP3 PUSH2 0x1D91 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1DA9 SWAP2 SWAP3 POP DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x592 JUMPI PUSH2 0x584 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST SWAP1 DUP4 PUSH2 0x1D87 JUMP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH2 0x1DC9 PUSH2 0x2744 JUMP JUMPDEST PUSH2 0x1DD1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x1DDE DUP4 PUSH2 0x2C5F JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP3 PUSH0 NOT DUP5 SUB PUSH2 0x1DFD JUMPI JUMPDEST PUSH2 0x12AB SWAP4 POP PUSH2 0x36E1 JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0x1E68 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1E50 JUMPI CALLER ISZERO PUSH2 0x1E38 JUMPI DUP3 PUSH2 0x12AB SWAP5 PUSH2 0x1E27 DUP4 PUSH2 0x2C5F JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH1 0x20 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH2 0x1DF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x671 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x1EAC PUSH2 0x342A JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E69 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH2 0x1ECF DUP3 PUSH1 0x40 PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x2990 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x20BC JUMPI PUSH2 0x1EE4 DUP2 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 SLOAD PUSH1 0x3 SWAP5 DUP6 SHL SHR AND SWAP3 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP3 PUSH1 0x24 DUP2 DUP10 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1814 JUMPI PUSH0 SWAP3 PUSH2 0x208D JUMPI JUMPDEST POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x2084 JUMPI JUMPDEST PUSH2 0x2077 JUMPI PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP8 DUP3 PUSH1 0x4 DUP2 DUP11 GAS STATICCALL DUP1 ISZERO PUSH2 0x1814 JUMPI PUSH2 0x1F8D SWAP4 PUSH1 0xFF DUP12 SWAP3 PUSH2 0x1F75 SWAP6 PUSH0 SWAP2 PUSH2 0x205A JUMPI POP AND SWAP3 PUSH2 0x3576 JUMP JUMPDEST SWAP2 PUSH2 0x3CA PUSH2 0x1F87 PUSH1 0x4 SLOAD SWAP3 SLOAD DUP4 PUSH2 0x29E8 JUMP JUMPDEST DUP5 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP6 SWAP2 SWAP3 SWAP1 DUP8 DUP2 PUSH1 0x44 DUP2 PUSH0 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x1814 JUMPI PUSH2 0x2005 SWAP8 DUP10 SWAP7 PUSH0 SWAP4 PUSH2 0x1FD8 SWAP4 PUSH2 0x203D JUMPI JUMPDEST POP PUSH1 0xC SLOAD AND SWAP4 PUSH2 0x29E8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP5 DUP6 SWAP3 DUP4 SWAP2 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x1814 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x2020 JUMPI JUMPDEST POP JUMPDEST ADD PUSH2 0x1ED1 JUMP JUMPDEST PUSH2 0x2036 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x49F JUMPI PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP DUP5 PUSH2 0x2018 JUMP JUMPDEST PUSH2 0x2053 SWAP1 DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x49F JUMPI PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP DUP13 PUSH2 0x1FCD JUMP JUMPDEST PUSH2 0x2071 SWAP2 POP DUP13 DUP14 RETURNDATASIZE LT PUSH2 0x62B JUMPI PUSH2 0x61D DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP14 PUSH2 0x32A JUMP JUMPDEST POP POP POP POP PUSH1 0x1 SWAP2 POP PUSH2 0x201A JUMP JUMPDEST POP ADDRESS DUP7 EQ PUSH2 0x1F3B JUMP JUMPDEST SWAP1 SWAP2 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x20B5 JUMPI JUMPDEST PUSH2 0x20A5 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI MLOAD SWAP1 DUP9 PUSH2 0x1F31 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x209B JUMP JUMPDEST PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 PUSH2 0x20EB DUP5 PUSH2 0x6AC DUP2 CALLER PUSH2 0x3624 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F29 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH1 0x20 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x671 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2179 PUSH2 0x342A JUMP JUMPDEST PUSH2 0x2181 PUSH2 0x3466 JUMP JUMPDEST SWAP1 PUSH2 0x3CA PUSH2 0x21A2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 DUP5 SLOAD SWAP3 DUP4 SWAP2 DUP6 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0xE8D4A51000 SWAP1 SWAP3 DIV PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 DUP10 AND GAS CALL DUP1 ISZERO PUSH2 0x1814 JUMPI PUSH2 0x24C9 JUMPI JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP5 AND SWAP2 DUP8 DUP3 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1814 JUMPI PUSH0 SWAP3 PUSH2 0x249A JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP3 DUP9 SWAP1 DUP5 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x1814 JUMPI PUSH0 SWAP4 PUSH2 0x246B JUMPI JUMPDEST POP ISZERO PUSH2 0x241B JUMPI DUP5 GT PUSH2 0x23D6 JUMPI DUP4 GT PUSH2 0x2391 JUMPI CALLER ISZERO PUSH2 0xCB7 JUMPI PUSH2 0x230B DUP6 SWAP4 PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 PUSH2 0x22FF DUP5 DUP9 PUSH2 0x22AF PUSH2 0x2314 SWAP8 PUSH2 0x2351 SWAP12 SLOAD PUSH2 0x3459 JUMP JUMPDEST SWAP1 SSTORE CALLER PUSH0 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E69 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EE9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP11 CALLER SWAP4 LOG3 PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x3 SLOAD SWAP1 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 PUSH2 0x295A JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x7 SLOAD AND SWAP1 PUSH1 0xC SLOAD AND PUSH0 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1814 JUMPI PUSH2 0x2373 JUMPI JUMPDEST PUSH1 0x1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F29 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE STOP JUMPDEST DUP2 PUSH2 0x2389 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x49F JUMPI PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x2360 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436865636B2074686520746F6B656E20616C6C6F77616E636500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555344432062616C616E636520697320696E73756666696369656E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C2042414C554E4920737570706C792063616E6E6F74206265207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x726F PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2493 JUMPI JUMPDEST PUSH2 0x2483 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI MLOAD SWAP2 DUP9 PUSH2 0x225B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2479 JUMP JUMPDEST SWAP1 SWAP2 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x24C2 JUMPI JUMPDEST PUSH2 0x24B2 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI MLOAD SWAP1 DUP9 PUSH2 0x2227 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x24A8 JUMP JUMPDEST PUSH2 0x24DF SWAP1 DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x49F JUMPI PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP DUP7 PUSH2 0x21F6 JUMP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH2 0x24FF PUSH2 0x2744 JUMP JUMPDEST PUSH2 0x2507 PUSH2 0x33F2 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH2 0x2542 PUSH2 0x2744 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x1E50 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1E38 JUMPI PUSH2 0x2565 CALLER PUSH2 0x2C5F JUMP JUMPDEST DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH2 0x25C1 PUSH2 0x2744 JUMP JUMPDEST PUSH2 0x25C9 PUSH2 0x33F2 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH1 0x40 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD DUP3 PUSH0 PUSH2 0x2619 DUP4 PUSH2 0x290F JUMP JUMPDEST SWAP3 DUP4 DUP4 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 DUP7 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH0 EQ PUSH2 0x268F JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x2648 JUMPI JUMPDEST POP POP PUSH2 0x1317 SWAP3 POP SUB DUP4 PUSH2 0x280A JUMP JUMPDEST DUP6 SWAP3 POP PUSH0 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E29 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x2677 JUMPI POP POP PUSH2 0x1317 SWAP4 POP DUP3 ADD ADD DUP6 DUP1 PUSH2 0x263A JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x265F JUMP JUMPDEST SWAP3 POP SWAP4 POP POP PUSH2 0x1317 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP6 DUP1 PUSH2 0x263A JUMP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH32 0xBEA1B31142AE4B1F4EFAD240349036D718B7950D246C127768097CCF602FC7E0 PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x26F0 PUSH2 0x33F2 JUMP JUMPDEST DUP1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 SWAP2 DUP2 SWAP1 DUP5 ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x671 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x671 JUMPI JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x671 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x671 JUMPI JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x671 JUMPI JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x671 JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x671 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1861 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1861 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1861 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1861 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x671 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x285D DUP3 PUSH2 0x282B JUMP JUMPDEST SWAP3 PUSH2 0x286B PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x280A JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x671 JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x671 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x671 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x671 JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x28DB JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x28CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1861 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x293D JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2929 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x291E JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x902 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2964 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x671 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x671 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2997 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x125B9CDD59999A58DA595B9D08109053 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x671 JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x671 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x902 JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x671 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x671 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2A1B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2BB937B7339039B2B73232B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2A56 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x416D6F756E74206973203 PUSH1 0xAC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2A90 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742042616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2AD3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53776170204661696C65642C20547279204275726E2829000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x20 DUP2 DUP4 AND DUP2 DUP6 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x1814 JUMPI PUSH0 SWAP6 PUSH2 0x2C30 JUMPI JUMPDEST POP DUP2 DUP5 PUSH1 0xE SLOAD AND SWAP2 PUSH1 0x64 DUP7 PUSH1 0x7 SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH2 0xBB8 PUSH1 0x44 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1814 JUMPI PUSH0 SWAP3 PUSH2 0x2C13 JUMPI JUMPDEST POP POP PUSH2 0x2BA5 DUP5 DUP5 PUSH1 0xD SLOAD AND DUP5 PUSH2 0x3985 JUMP JUMPDEST DUP3 AND ISZERO DUP4 ISZERO ISZERO DUP2 ISZERO DUP1 PUSH2 0x2C0C JUMPI JUMPDEST ISZERO PUSH2 0x2BD8 JUMPI POP POP SWAP1 PUSH2 0x2BD6 SWAP3 PUSH2 0x2BCF SWAP3 ADDRESS SWAP3 PUSH1 0x7 SLOAD AND SWAP1 PUSH2 0x3AD3 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x2ACC JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP3 SWAP2 DUP2 PUSH2 0x2C04 JUMPI JUMPDEST POP PUSH2 0x2BEB JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x2BD6 SWAP3 PUSH2 0x2BCF SWAP3 DUP3 PUSH1 0x8 SLOAD AND ADDRESS SWAP4 PUSH1 0x7 SLOAD AND SWAP2 PUSH2 0x3BDD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2BE1 JUMP JUMPDEST POP DUP1 PUSH2 0x2BB3 JUMP JUMPDEST PUSH2 0x2C29 SWAP3 POP DUP1 RETURNDATASIZE LT PUSH2 0x592 JUMPI PUSH2 0x584 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2B94 JUMP JUMPDEST SWAP1 SWAP5 POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2C58 JUMPI JUMPDEST PUSH2 0x2C48 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI MLOAD SWAP4 PUSH0 PUSH2 0x2B50 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2C3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2CAB JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH0 DUP5 ISZERO PUSH2 0x3344 JUMPI PUSH1 0x20 PUSH0 SWAP6 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP9 DUP2 SWAP4 PUSH4 0x9B76A5CD PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP5 DUP6 ISZERO PUSH2 0x1814 JUMPI PUSH0 SWAP6 PUSH2 0x3323 JUMPI JUMPDEST POP DUP3 MLOAD SWAP2 PUSH2 0x2D29 PUSH2 0x2D13 DUP5 PUSH2 0x28F8 JUMP JUMPDEST SWAP4 PUSH2 0x2D21 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x280A JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH2 0x28F8 JUMP JUMPDEST PUSH1 0x1F NOT SWAP6 SWAP1 DUP7 ADD CALLDATASIZE PUSH1 0x20 DUP7 ADD CALLDATACOPY DUP5 MLOAD SWAP6 PUSH2 0x2D5B PUSH2 0x2D45 DUP9 PUSH2 0x28F8 JUMP JUMPDEST SWAP8 PUSH2 0x2D53 PUSH1 0x40 MLOAD SWAP10 DUP11 PUSH2 0x280A JUMP JUMPDEST DUP1 DUP10 MSTORE PUSH2 0x28F8 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP9 ADD CALLDATACOPY PUSH0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x2E20 JUMPI PUSH1 0x24 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2D82 DUP3 DUP10 PUSH2 0x2C97 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD ISZERO PUSH2 0x2D9B DUP3 DUP9 PUSH2 0x2C97 JUMP JUMPDEST MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2DB0 DUP4 DUP11 PUSH2 0x2C97 JUMP JUMPDEST MLOAD AND PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x1814 JUMPI PUSH0 SWAP1 PUSH2 0x2DED JUMPI JUMPDEST PUSH1 0x1 SWAP3 POP PUSH2 0x2DE6 DUP3 DUP11 PUSH2 0x2C97 JUMP JUMPDEST MSTORE ADD PUSH2 0x2D64 JUMP JUMPDEST POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2E18 JUMPI JUMPDEST DUP2 PUSH2 0x2E07 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI PUSH1 0x1 SWAP2 MLOAD PUSH2 0x2DD8 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2DFA JUMP JUMPDEST POP SWAP2 SWAP6 SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO PUSH2 0x671 JUMPI PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH4 0xEEDC3C5 PUSH1 0xE4 SHL DUP3 MSTORE PUSH1 0x44 DUP3 ADD PUSH1 0x40 PUSH1 0x4 DUP5 ADD MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x64 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x64 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x32D1 JUMPI POP POP POP POP SWAP2 DUP2 PUSH0 DUP2 PUSH2 0x2E91 DUP3 SWAP7 PUSH1 0x3 NOT DUP4 DUP3 SUB ADD PUSH1 0x24 DUP5 ADD MSTORE DUP12 PUSH2 0x28BC JUMP JUMPDEST SUB SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x1814 JUMPI PUSH2 0x32BE JUMPI JUMPDEST POP DUP5 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x32B6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2EC7 DUP3 DUP7 PUSH2 0x2C97 JUMP JUMPDEST MLOAD AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x32AB JUMPI DUP9 SWAP2 PUSH2 0x3279 JUMPI JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0xBB8 PUSH1 0x44 DUP4 ADD MSTORE SWAP6 SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP3 PUSH1 0x64 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x324D JUMPI DUP12 SWAP3 PUSH2 0x3258 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP6 PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP8 MSTORE DUP4 PUSH1 0x4 DUP9 ADD MSTORE PUSH1 0x24 DUP8 ADD MSTORE PUSH2 0x1F4 PUSH1 0x44 DUP8 ADD MSTORE PUSH1 0x20 DUP7 PUSH1 0x64 DUP2 DUP5 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x324D JUMPI DUP12 SWAP7 PUSH2 0x322C JUMPI JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x7 SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP5 MSTORE DUP5 PUSH1 0x4 DUP6 ADD MSTORE DUP1 PUSH1 0x24 DUP6 ADD MSTORE PUSH2 0x1F4 PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x20 DUP5 PUSH1 0x64 DUP2 DUP7 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x3221 JUMPI DUP14 SWAP5 PUSH2 0x31FF JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP4 MSTORE DUP10 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH2 0xBB8 PUSH1 0x44 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x31F4 JUMPI DUP13 SWAP3 PUSH2 0x31D3 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP7 SWAP1 PUSH2 0x31C0 JUMPI JUMPDEST POP DUP6 ISZERO PUSH2 0x31AD JUMPI JUMPDEST POP DUP5 ISZERO PUSH2 0x319A JUMPI JUMPDEST POP PUSH2 0x302D DUP4 DUP8 PUSH2 0x2C97 JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x3193 JUMPI JUMPDEST PUSH2 0x3184 JUMPI JUMPDEST PUSH2 0x304F PUSH2 0x3048 DUP5 DUP11 PUSH2 0x2C97 JUMP JUMPDEST MLOAD DUP4 PUSH2 0x29E8 JUMP JUMPDEST SWAP4 ISZERO PUSH2 0x311A JUMPI POP PUSH2 0x3060 DUP3 DUP9 PUSH2 0x2C97 JUMP JUMPDEST MLOAD LT PUSH2 0x3071 JUMPI JUMPDEST PUSH1 0x1 SWAP2 POP ADD PUSH2 0x2EAC JUMP JUMPDEST PUSH1 0x20 PUSH2 0x3086 PUSH2 0x230B PUSH2 0x30D7 SWAP5 PUSH1 0x3 SLOAD SWAP1 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3098 DUP5 DUP10 PUSH2 0x2C97 JUMP JUMPDEST MLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP5 DUP6 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 DUP3 SWAP1 DUP12 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x310F JUMPI PUSH1 0x1 SWAP3 PUSH2 0x30F0 JUMPI JUMPDEST POP PUSH2 0x3067 JUMP JUMPDEST PUSH2 0x3108 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x49F JUMPI PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP PUSH0 PUSH2 0x30EA JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP4 SWAP8 SWAP3 SWAP7 POP SWAP2 SWAP5 POP PUSH1 0x20 SWAP4 POP DUP6 SWAP3 PUSH1 0x44 SWAP3 POP DUP4 SWAP2 POP DUP6 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3178 JUMPI POP PUSH2 0x315D JUMPI POP JUMP JUMPDEST PUSH2 0x3175 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x49F JUMPI PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x318D DUP2 PUSH2 0x3D36 JUMP JUMPDEST POP PUSH2 0x303B JUMP JUMPDEST POP DUP4 PUSH2 0x3036 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP4 POP PUSH0 PUSH2 0x3022 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP5 POP PUSH0 PUSH2 0x301A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP6 POP PUSH0 PUSH2 0x3012 JUMP JUMPDEST PUSH2 0x31ED SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x592 JUMPI PUSH2 0x584 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x2FFE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP5 POP PUSH2 0x321A SWAP1 DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x592 JUMPI PUSH2 0x584 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x2FC4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP16 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x3246 SWAP2 SWAP7 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x592 JUMPI PUSH2 0x584 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST SWAP5 PUSH0 PUSH2 0x2F7E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x3272 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x592 JUMPI PUSH2 0x584 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x2F45 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x32A3 JUMPI JUMPDEST DUP2 PUSH2 0x3294 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI MLOAD PUSH0 PUSH2 0x2EF4 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3287 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x32C9 SWAP2 SWAP6 POP PUSH2 0x27DC JUMP JUMPDEST PUSH0 SWAP4 PUSH0 PUSH2 0x2EA9 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 PUSH2 0x3313 DUP2 SWAP3 PUSH1 0x63 NOT DUP12 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH1 0x40 PUSH1 0x60 SWAP2 DUP8 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND DUP5 MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP6 ADD MSTORE ADD MLOAD SWAP2 DUP2 PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x2720 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP7 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x2E6B JUMP JUMPDEST PUSH2 0x333D SWAP2 SWAP6 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x592 JUMPI PUSH2 0x584 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST SWAP4 PUSH0 PUSH2 0x2D03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1059D95B9D08199858DD1BDC9E481B9BDD081CD95D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x33DA JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EA9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EA9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x3412 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F29 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x2 DUP2 SLOAD EQ PUSH2 0x3447 JUMPI PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x902 JUMPI JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 SLOAD JUMPDEST DUP1 DUP3 LT PUSH2 0x3478 JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x3483 DUP4 PUSH2 0x3D01 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP1 DUP3 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3513 JUMPI POP PUSH0 SWAP3 PUSH2 0x34DF JUMPI JUMPDEST POP POP SWAP2 PUSH2 0x34D1 PUSH2 0x34D7 SWAP3 PUSH1 0x1 SWAP5 PUSH2 0x3787 JUMP JUMPDEST SWAP1 PUSH2 0x3459 JUMP JUMPDEST SWAP3 ADD SWAP1 PUSH2 0x346C JUMP JUMPDEST SWAP1 DUP1 SWAP5 SWAP3 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x350C JUMPI JUMPDEST PUSH2 0x34F7 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI SWAP2 MLOAD PUSH2 0x34D1 PUSH2 0x34D7 PUSH2 0x34BF JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x34ED JUMP JUMPDEST MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3523 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C20737570706C792063616E6E6F74206265207A65726F0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x4D DUP2 GT PUSH2 0x902 JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x3585 DUP5 ISZERO ISZERO PUSH2 0x351C JUMP JUMPDEST PUSH1 0x12 DUP2 GT PUSH2 0x35DF JUMPI PUSH1 0x12 DUP2 LT ISZERO PUSH2 0x35D0 JUMPI PUSH1 0x12 SUB SWAP2 PUSH1 0x12 DUP4 GT PUSH2 0x902 JUMPI PUSH2 0x35C8 PUSH2 0x3CA SWAP3 PUSH2 0x35BC PUSH2 0x35C2 PUSH2 0x35CD SWAP8 PUSH2 0x35BC DUP9 PUSH2 0x3568 JUMP JUMPDEST SWAP1 PUSH2 0x295A JUMP JUMPDEST SWAP6 PUSH2 0x3568 JUMP JUMPDEST PUSH2 0x2947 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP PUSH2 0x35CD SWAP3 SWAP2 PUSH2 0x3CA SWAP2 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20646563696D616C732073686F756C64206265203C3D2031380000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x36C9 JUMPI DUP2 PUSH0 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E69 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP5 DUP3 DUP7 LT PUSH2 0x3698 JUMPI POP DUP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EE9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH0 SWAP6 SWAP7 PUSH1 0x20 SWAP4 DUP7 DUP9 MSTORE DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP2 SLOAD SUB SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x36C9 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0xCB7 JUMPI DUP3 PUSH0 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E69 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP2 DUP4 DUP4 LT PUSH2 0x3754 JUMPI POP SWAP2 DUP1 PUSH1 0x20 SWAP3 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EE9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 DUP7 PUSH0 MSTORE DUP5 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE PUSH1 0x4 SWAP5 SWAP4 SWAP2 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 PUSH1 0x20 SWAP1 DUP2 DUP7 DUP10 DUP2 DUP7 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x1814 JUMPI PUSH0 SWAP7 PUSH2 0x3966 JUMPI JUMPDEST POP DUP1 PUSH1 0x7 SLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE DUP3 DUP6 DUP11 DUP2 DUP6 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x1814 JUMPI PUSH0 SWAP6 PUSH2 0x3947 JUMPI JUMPDEST POP DUP2 DUP5 EQ PUSH2 0x3923 JUMPI SWAP1 PUSH1 0x64 DUP4 SWAP3 PUSH1 0x9 SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x802431FB PUSH1 0xE0 SHL DUP5 MSTORE DUP14 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH0 PUSH1 0x44 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 SWAP2 PUSH0 SWAP4 PUSH2 0x38F3 JUMPI JUMPDEST POP POP PUSH2 0x3830 JUMPI POP PUSH0 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0xFF DUP1 SWAP2 SWAP3 AND SWAP4 AND SWAP3 DUP1 DUP5 EQ PUSH2 0x38C2 JUMPI DUP4 SUB PUSH1 0xFF DUP2 GT PUSH2 0x38AF JUMPI PUSH1 0xFF AND SWAP5 PUSH1 0x4D DUP7 GT PUSH2 0x389C JUMPI POP PUSH1 0x12 PUSH8 0xDE0B6B3A7640000 SWAP5 SWAP6 PUSH1 0xA EXP SWAP4 LT PUSH2 0x3884 JUMPI PUSH2 0x3880 SWAP3 PUSH2 0x387A SWAP2 PUSH2 0x2947 JUMP JUMPDEST SWAP1 PUSH2 0x2947 JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH2 0x3896 PUSH2 0x3880 SWAP5 PUSH2 0x387A SWAP4 PUSH2 0x2947 JUMP JUMPDEST SWAP3 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x11 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP3 SWAP4 SWAP1 SWAP2 POP PUSH5 0xE8D4A51000 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x389C JUMPI POP PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x3880 SWAP2 PUSH2 0x2947 JUMP JUMPDEST SWAP1 DUP1 SWAP3 SWAP4 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x391C JUMPI JUMPDEST PUSH2 0x390B DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI MLOAD SWAP1 PUSH0 DUP1 PUSH2 0x3821 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3901 JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP3 SWAP1 POP PUSH5 0xE8D4A51000 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x389C JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x395F SWAP2 SWAP6 POP DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x62B JUMPI PUSH2 0x61D DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST SWAP4 PUSH0 PUSH2 0x37E2 JUMP JUMPDEST PUSH2 0x397E SWAP2 SWAP7 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x62B JUMPI PUSH2 0x61D DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST SWAP5 PUSH0 PUSH2 0x37C0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x20 SWAP6 SWAP3 SWAP5 SWAP3 SWAP4 DUP2 AND SWAP3 SWAP2 DUP7 DUP2 PUSH1 0x44 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A98 JUMPI SWAP1 DUP6 SWAP2 PUSH0 SWAP2 PUSH2 0x3AA2 JUMPI JUMPDEST POP LT PUSH2 0x39DC JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP5 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL SWAP2 DUP3 DUP3 MSTORE DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH0 PUSH1 0x24 DUP3 ADD MSTORE DUP7 DUP2 PUSH1 0x44 DUP2 PUSH0 DUP9 GAS CALL DUP1 ISZERO PUSH2 0x3A98 JUMPI DUP8 SWAP5 SWAP3 PUSH2 0x3A43 SWAP8 SWAP7 SWAP5 SWAP3 PUSH0 SWAP3 PUSH2 0x3A7B JUMPI JUMPDEST POP DUP7 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP5 DUP6 SWAP3 DUP4 SWAP2 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3513 JUMPI POP PUSH2 0x3A5D JUMPI JUMPDEST DUP1 DUP1 DUP1 DUP1 PUSH2 0x39D4 JUMP JUMPDEST DUP2 PUSH2 0x3A73 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x49F JUMPI PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP PUSH0 DUP1 PUSH2 0x3A54 JUMP JUMPDEST PUSH2 0x3A91 SWAP1 DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x49F JUMPI PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP PUSH0 PUSH2 0x3A17 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP9 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x3ACC JUMPI JUMPDEST PUSH2 0x3ABB DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI DUP5 SWAP1 MLOAD PUSH0 PUSH2 0x39CD JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3AB1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x100 DUP4 ADD DUP4 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1861 JUMPI PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB SWAP4 DUP5 DUP1 SWAP3 AND DUP5 MSTORE DUP2 PUSH1 0x20 DUP6 ADD SWAP7 AND DUP7 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 PUSH2 0xBB8 DUP5 MSTORE DUP3 PUSH1 0x60 DUP7 ADD SWAP3 AND DUP3 MSTORE PUSH1 0x80 DUP6 ADD SWAP1 TIMESTAMP DUP3 MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 PUSH0 DUP4 MSTORE DUP5 PUSH1 0xE0 DUP9 ADD SWAP5 PUSH0 DUP7 MSTORE DUP2 PUSH0 SLOAD AND SWAP8 DUP3 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 DUP14 SWAP13 DUP14 PUSH4 0x414BF389 PUSH1 0xE0 SHL SWAP1 MSTORE MLOAD AND PUSH1 0x4 DUP14 ADD MSTORE MLOAD AND PUSH1 0x24 DUP12 ADD MSTORE MLOAD PUSH3 0xFFFFFF AND PUSH1 0x44 DUP11 ADD MSTORE MLOAD AND PUSH1 0x64 DUP9 ADD MSTORE MLOAD PUSH1 0x84 DUP8 ADD MSTORE MLOAD PUSH1 0xA4 DUP7 ADD MSTORE MLOAD PUSH1 0xC4 DUP6 ADD MSTORE MLOAD AND PUSH1 0xE4 DUP4 ADD MSTORE GAS SWAP3 PUSH0 PUSH2 0x104 SWAP3 PUSH1 0x20 SWAP6 CALL SWAP1 DUP2 ISZERO PUSH2 0x1814 JUMPI PUSH0 SWAP2 PUSH2 0x3BAE JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3BD5 JUMPI JUMPDEST DUP2 PUSH2 0x3BC9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3BBC JUMP JUMPDEST SWAP4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 PUSH1 0x40 MLOAD SWAP4 PUSH1 0x20 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT DUP1 SWAP4 PUSH1 0x60 SHL AND DUP8 DUP8 ADD MSTORE DUP3 PUSH2 0x177 PUSH1 0xEB SHL SWAP2 DUP3 PUSH1 0x34 DUP10 ADD MSTORE PUSH1 0x60 SHL AND PUSH1 0x37 DUP8 ADD MSTORE PUSH1 0x4B DUP7 ADD MSTORE PUSH1 0x60 SHL AND PUSH1 0x4E DUP5 ADD MSTORE PUSH1 0x42 DUP4 MSTORE PUSH1 0x80 DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP5 DUP2 LT DUP5 DUP3 GT OR PUSH2 0x1861 JUMPI PUSH2 0x120 DUP6 ADD SWAP4 DUP5 GT DUP2 DUP6 LT OR PUSH2 0x1861 JUMPI PUSH0 PUSH2 0x3CB3 SWAP2 DUP8 SWAP6 PUSH1 0x40 MSTORE DUP7 DUP2 MSTORE PUSH1 0xA0 DUP8 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP7 AND DUP2 MSTORE PUSH2 0x100 PUSH1 0xC0 DUP10 ADD SWAP9 TIMESTAMP DUP11 MSTORE PUSH1 0xE0 DUP2 ADD SWAP7 DUP8 MSTORE ADD DUP4 DUP2 MSTORE DUP7 DUP5 SLOAD AND SWAP6 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP8 DUP9 SWAP7 PUSH4 0xC04B8D59 PUSH1 0xE0 SHL DUP9 MSTORE DUP13 PUSH1 0x4 DUP10 ADD MSTORE MLOAD PUSH1 0xA0 PUSH1 0x24 DUP10 ADD MSTORE PUSH1 0xC4 DUP9 ADD SWAP1 PUSH2 0x2720 JUMP JUMPDEST SWAP5 MLOAD AND PUSH1 0x44 DUP7 ADD MSTORE MLOAD PUSH1 0x64 DUP6 ADD MSTORE MLOAD PUSH1 0x84 DUP5 ADD MSTORE MLOAD PUSH1 0xA4 DUP4 ADD MSTORE SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x1814 JUMPI PUSH0 SWAP3 PUSH2 0x3CE3 JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 DUP1 SWAP3 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3CFA JUMPI JUMPDEST PUSH2 0x3BC9 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3CF0 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x2CAB JUMPI PUSH1 0x5 PUSH0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD ISZERO PUSH0 EQ PUSH2 0x3D92 JUMPI PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x1861 JUMPI DUP1 PUSH1 0x1 PUSH2 0x3D69 SWAP3 ADD PUSH1 0x5 SSTORE PUSH2 0x3D01 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP4 DUP3 SHL SWAP2 PUSH0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH1 0x5 SLOAD SWAP1 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x3DB3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x3DEC JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x3DDA JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x3E1F JUMPI JUMPDEST PUSH2 0x3DFD JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x3DF5 JUMP INVALID 0x2A 0xE0 DUP11 DUP15 0x29 0x25 EXTCODEHASH PUSH10 0xAC5D979A101956AB8F8D SWAP14 PUSH30 0xED63FA7A83B16FC47648EAB052C63247E1F47DB19D5CE0460030C497F067 0xCA 0x4C 0xEB 0xF7 SHL 0xA9 DUP15 0xEA 0xDA 0xBE KECCAK256 0xBA 0xCE SUB MSTORE 0xC6 ORIGIN SELFBALANCE 0xE1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE0052C63247E1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE049016D09D72 0xD4 0xF 0xDA 0xE2 REVERT DUP13 0xEA 0xC6 0xB6 0x23 0x4C PUSH24 0x6214FD39C1CD1E609A0528C19930052C63247E1F47DB19D TLOAD 0xE0 CHAINID STOP ADDRESS 0xC4 SWAP8 CREATE PUSH8 0xCA4CEBF71BA98EEA 0xDA 0xBE KECCAK256 0xBA 0xCE MUL 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF CHAINID LOG2 DUP1 RETURNDATACOPY MSIZE LOG4 0xDE 0x4E PUSH27 0x4C574B1243F25977AC4C77D5A1A4A609B5394CEBB4A2AA9B779B17 TIMESTAMP 0x2D 0xD 0xF9 0x22 0x23 ADD DUP12 ORIGIN 0xB4 0xD1 STATICCALL CHAINID 0xE0 PUSH18 0x723D6817E2486D003BECC55F00F0C57E1684 0xD CREATE BLOCKHASH CALL POP DUP9 0xDC 0x2F DUP2 INVALID CODECOPY SHR CODECOPY 0x23 0xBE 0xC7 RETURNDATACOPY 0x23 0xA9 PUSH7 0x2EFC9C229C6A00 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB SLT 0xBB RETURNDATACOPY BLOCKHASH PUSH12 0xC4B45A050A8CC16A8E13F4D3 0xDF ISZERO 0x2D DUP1 PUSH24 0x863996D65CA8653C8264736F6C6343000819003300000000 ","sourceMap":"2271:23751:17:-:0;;;;;;;1171:4:2;1163:13;;2271:23751:17;;;;;;1163:13:2;2271:23751:17;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":10184,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_address_41394":{"entryPoint":10052,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_41401":{"entryPoint":10074,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_41408":{"entryPoint":10096,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_41412":{"entryPoint":10118,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_41414":{"entryPoint":10140,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_41421":{"entryPoint":10162,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":10741,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_address_dyn_calldata":{"entryPoint":10380,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bool_fromMemory":{"entryPoint":10616,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":10310,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint8_fromMemory":{"entryPoint":10703,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":10428,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":10016,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_array_struct_Call_dyn":{"entryPoint":10488,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":10283,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":13401,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":10586,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_rational_by_uint256":{"entryPoint":13672,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256":{"entryPoint":10567,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":10728,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":10511,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":10250,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_41417":{"entryPoint":10204,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_56125":{"entryPoint":10223,"id":null,"parameterSlots":1,"returnSlots":0},"fun_add":{"entryPoint":15670,"id":5181,"parameterSlots":1,"returnSlots":1},"fun_burn":{"entryPoint":13860,"id":1112,"parameterSlots":2,"returnSlots":0},"fun_calculateERC20Share":{"entryPoint":13686,"id":4229,"parameterSlots":4,"returnSlots":1},"fun_calculateERC20Valuation":{"entryPoint":14215,"id":4110,"parameterSlots":2,"returnSlots":1},"fun_checkInitializing":{"entryPoint":15767,"id":370,"parameterSlots":0,"returnSlots":0},"fun_checkOwner":{"entryPoint":13298,"id":122,"parameterSlots":0,"returnSlots":0},"fun_execute_inner":{"entryPoint":11455,"id":null,"parameterSlots":2,"returnSlots":0},"fun_liquidate":{"entryPoint":11032,"id":3295,"parameterSlots":1,"returnSlots":0},"fun_multiHopSwap":{"entryPoint":15325,"id":4640,"parameterSlots":5,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":13354,"id":1387,"parameterSlots":0,"returnSlots":0},"fun_secureApproval":{"entryPoint":14725,"id":4684,"parameterSlots":3,"returnSlots":0},"fun_singleSwap":{"entryPoint":15059,"id":4585,"parameterSlots":4,"returnSlots":1},"fun_totalValuation":{"entryPoint":13414,"id":4284,"parameterSlots":0,"returnSlots":1},"fun_transfer":{"entryPoint":14049,"id":954,"parameterSlots":3,"returnSlots":0},"fun_transferOwnership_inner":{"entryPoint":13185,"id":null,"parameterSlots":1,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":15813,"id":2198,"parameterSlots":3,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":11359,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_address_dyn":{"entryPoint":11415,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":13596,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_3802":{"entryPoint":10640,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_6c9f":{"entryPoint":10956,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_a1c5":{"entryPoint":10772,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_b80e":{"entryPoint":10889,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_bd1d":{"entryPoint":10831,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_bytes32_dyn":{"entryPoint":15617,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"immutableReferences":{"468":[{"length":32,"start":6279},{"length":32,"start":6447}]},"linkReferences":{},"object":"6080806040526004361015610012575f80fd5b5f905f3560e01c90816301d22ccd146126fd5750806306497cb9146126b157806306fdde03146125eb5780630918281b146125a8578063095ea7b3146125295780630a38abab146124e65780630cfc73861461215c5780630d8e6e2c1461212a57806318160ddd146121015780631a168da214611e8e57806323b872dd14611db057806327d54a9214611d2d578063295b930014611d135780632bdd955a14611ced5780632d6bc8ea14611bc25780632f86556814611ba1578063313ce56714611b8657806334decfc914611b695780633c2066a914611b0a5780634f1ef286146118f157806352d1902d14611875578063599f69f7146116b45780635efaaebb1461157e57806361d027b31461155557806370a0823114611510578063715018a6146114a757806371ddcfb8146114635780637dc0d1d01461143a5780637df107ea1461141157806385377188146113f357806389a30271146113ca5780638da5cb5b1461139557806395d89b41146112b6578063a9059cbb14611284578063aa6ca808146111fa578063aa95d893146111b1578063ad3cb1cc14611167578063b0d60ba014611003578063b14f2a3914610fc3578063b381cf4014610f9a578063b9f5e61714610f7c578063cc2a9a5b1461095e578063dd62ed3e14610916578063e73faa2d146108ae578063eedc3c5014610708578063f2fde38b146106db578063fe0a4dd1146102605763fe330a511461022e575f80fd5b3461025d57608036600319011261025d576020610255606435604435602435600435613576565b604051908152f35b80fd5b503461025d576020908160031936011261025d576004359161028061342a565b61028b831515612990565b815b60055481101561067c576102a081613d01565b90545f80516020613ec9833981519152546040516370a0823160e01b81523060048201526003936024936001600160a01b039391861b1c83169187818681865afa9081156104ce57899161064b575b50801561063d5730831461063d5760405163313ce56760e01b81528881600481875afa908115610632579160ff8c9261033295948d91610605575b501692613576565b6007938888858754168086146105995750905084600e541691606486885416916040519485938492630b4c774160e11b8452896004850152830152610bb860448301525afa9081156104ce579084918a9161056c575b506103988383600d541686613985565b16156104d9576103cf916103b29130918587541690613ad3565b936103ca6103c46004549254836129e8565b86612947565b61295a565b825460405163a9059cbb60e01b8082523360048301526024820184905294918890829060449082908d9089165af180156104ce57610426858a96946104539896948d946104b1575b50541693600c541692886129e8565b6040519485526001600160a01b039092166004850152602484019190915291938492839182906044820190565b03925af180156104a657916104739160019493610479575b501515612acc565b0161028d565b61049890863d881161049f575b610490818361280a565b810190612978565b505f61046b565b503d610486565b6040513d87823e3d90fd5b6104c790893d8b1161049f57610490818361280a565b505f610417565b6040513d8b823e3d90fd5b6104f2916103b291846008541685875416903393613bdd565b825460405163a9059cbb60e01b8082523360048301526024820184905294918890829060449082908d9089165af180156104ce57610426858a96946105489896948d946104b15750541693600c541692886129e8565b03925af180156104a65791610567916001949361047957501515612acc565b610473565b61058c9150893d8b11610592575b610584818361280a565b8101906129f5565b5f610388565b503d61057a565b60405163a9059cbb60e01b8152336004820152602481019590955293975095508694506044935084929091505af180156105fa5790600192916105dd575b50610473565b6105f390843d861161049f57610490818361280a565b505f6105d7565b6040513d86823e3d90fd5b61062591508c8d3d1061062b575b61061d818361280a565b8101906129cf565b5f61032a565b503d610613565b6040513d8c823e3d90fd5b505050505050600190610473565b90508781813d8311610675575b610662818361280a565b8101031261067157515f6102ef565b5f80fd5b503d610658565b827fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca56106c4866106ac8133613624565b60408051338152602081019290925290918291820190565b0390a160015f80516020613f298339815191525580f35b503461025d57602036600319011261025d576107056106f8612744565b6107006133f2565b613381565b80f35b503461025d57604036600319011261025d57600435906001600160401b038083116108aa57366023840112156108aa5782600401359260249161074a856128f8565b91610758604051938461280a565b858352602095848785019160051b8301019136831161080f57858101915b8383106108175750505050823590811161081357366023820112156108135780600401356107a3816128f8565b936107b1604051958661280a565b818552808786019260051b8401019236841161080f5701905b8282106107f857856107e486866107df61342a565b612cbf565b60015f80516020613f298339815191525580f35b868091610804846127c8565b8152019101906107ca565b8680fd5b8380fd5b82358581116108a65782016060908160231982360301126108a2576040519182018281108882111761088f576040526108518982016127c8565b825260448101358b830152606481013587811161088b579161087b8c94928b869536920101612846565b6040820152815201920191610776565b8a80fd5b89634e487b7160e01b5f5260416004525ffd5b8980fd5b8880fd5b5080fd5b503461025d578060031936011261025d575f80516020613ec9833981519152546108d981151561351c565b6108e1613466565b670de0b6b3a76400009080820291820403610902576020916102559161295a565b634e487b7160e01b5f52601160045260245ffd5b503461025d57604036600319011261025d57610930612744565b61094161093b61275a565b91612c5f565b9060018060a01b03165f52602052602060405f2054604051908152f35b503461025d5760c036600319011261025d57610978612744565b61098061275a565b610988612786565b90610991612770565b6109996127b2565b916109a261279c565b905f80516020613f4983398151915254946001600160401b03861680159081610f6c575b6001149081610f62575b159081610f59575b50610f475760016001600160401b03198716175f80516020613f498339815191525560ff8660401c1615610f1b575b604051610a13816127ef565b600681526542616c756e6960d01b602082015260405190610a33826127ef565b600682526542414c554e4960d01b6020830152610a4e613d97565b610a56613d97565b8051906001600160401b038211610f07578190610a805f80516020613e498339815191525461290f565b601f8111610e8c575b50602090601f8311600114610e00578c92610df5575b50508160011b915f199060031b1c1916175f80516020613e49833981519152555b8051906001600160401b038211610de1578190610aea5f80516020613e898339815191525461290f565b601f8111610d66575b50602090601f8311600114610cda578b92610ccf575b50508160011b915f199060031b1c1916175f80516020613e89833981519152555b610b32613d97565b610b3a613d97565b610b4333613381565b610b4b613d97565b610b53613d97565b60015f80516020613f2983398151915255610b6c613d97565b3015610cb7575f80516020613ec9833981519152805492670de0b6b3a7640000988985018095116109025760ff99610c43958c9455305f525f80516020613e6983398151915260205260405f208181540190556040519081525f5f80516020613ee983398151915260203093a36101f4600255601e60035561271060045560018060a01b0397888098818094169a8b9781600754976001600160601b0360a01b9e8f8a1617600755168d6008541617600855168b60095416176009551689600d541617600d551687600e541617600e551617613d36565b501681600b541617600b553390600c541617600c5560401c1615610c645780f35b60ff60401b195f80516020613f4983398151915254165f80516020613f49833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b60405163ec442f0560e01b81525f6004820152602490fd5b015190505f80610b09565b92505f80516020613e898339815191528b525f80516020613f09833981519152908b935b601f1984168510610d4b576001945083601f19811610610d33575b505050811b015f80516020613e8983398151915255610b2a565b01515f1960f88460031b161c191690555f8080610d19565b81810151835560209485019460019093019290910190610cfe565b9091505f80516020613e898339815191528b52601f830160051c5f80516020613f098339815191520160208410610dcd575b908392915b601f820160051c5f80516020613f09833981519152018110610dbf5750610af3565b5f8155849350600101610d9d565b505f80516020613f09833981519152610d98565b634e487b7160e01b8a52604160045260248afd5b015190505f80610a9f565b92505f80516020613e498339815191528c525f80516020613e29833981519152908c935b601f1984168510610e71576001945083601f19811610610e59575b505050811b015f80516020613e4983398151915255610ac0565b01515f1960f88460031b161c191690555f8080610e3f565b81810151835560209485019460019093019290910190610e24565b9091505f80516020613e498339815191528c52601f830160051c5f80516020613e298339815191520160208410610ef3575b908392915b601f820160051c5f80516020613e29833981519152018110610ee55750610a89565b5f8155849350600101610ec3565b505f80516020613e29833981519152610ebe565b634e487b7160e01b8b52604160045260248bfd5b68ffffffffffffffffff19861668010000000000000001175f80516020613f4983398151915255610a07565b60405163f92ee8a960e01b8152600490fd5b9050155f6109d8565b303b1591506109d0565b604088901c60ff161591506109c6565b503461025d578060031936011261025d576020600354604051908152f35b503461025d578060031936011261025d576008546040516001600160a01b039091168152602090f35b503461025d57602036600319011261025d57610fdd612744565b610fe56133f2565b60018060a01b03166001600160601b0360a01b600c541617600c5580f35b503461025d5760e036600319011261025d5761101d612744565b61102561275a565b61102d612786565b611035612770565b9061103e6127b2565b61104661279c565b9260c435936001600160401b03968786168096036108a6575f80516020613f49833981519152948554988760ff8b60401c1691821561115a575b5050610f47578960209861113093600160401b8a7fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29d68ffffffffffffffffff1916171789556101f4600255601e60035561271060045560018060a01b0397888098818094169a8b9781600754976001600160601b0360a01b9e8f8a1617600755168d6008541617600855168b60095416176009551689600d541617600d551687600e541617600e551617613d36565b501681600b541617600b553390600c541617600c5560ff60401b198154169055604051908152a180f35b8b1610159050875f611080565b503461025d578060031936011261025d576111ad604051611187816127ef565b60058152640352e302e360dc1b6020820152604051918291602083526020830190612720565b0390f35b503461025d57602036600319011261025d57602064e8d4a510006111f16111d6613466565b6103ca5f80516020613ec98339815191525491600435612947565b04604051908152f35b503461025d578060031936011261025d57604051600580548083529083526020808301937f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db092915b82821061126d576111ad856112598189038261280a565b6040519182916020835260208301906128bc565b835486529485019460019384019390910190611242565b503461025d57604036600319011261025d576112ab6112a1612744565b60243590336136e1565b602060405160018152f35b503461025d578060031936011261025d576040519080825f80516020613e898339815191529283546112e78161290f565b93848452602095600192876001821691825f1461137157505060011461132b575b5050506113179250038361280a565b6111ad604051928284938452830190612720565b8152859250905f80516020613f098339815191525b85831061135957505061131793508201015f8080611308565b80548389018501528794508693909201918101611340565b93509450505061131794915060ff191682840152151560051b8201015f8080611308565b503461025d578060031936011261025d575f80516020613ea9833981519152546040516001600160a01b039091168152602090f35b503461025d578060031936011261025d576007546040516001600160a01b039091168152602090f35b503461025d578060031936011261025d576020600454604051908152f35b503461025d578060031936011261025d57600a546040516001600160a01b039091168152602090f35b503461025d578060031936011261025d576009546040516001600160a01b039091168152602090f35b503461025d57602036600319011261025d5760206102555f80516020613ec98339815191525461149481151561351c565b6103ca61149f613466565b600435612947565b503461025d578060031936011261025d576114c06133f2565b5f80516020613ea983398151915280546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461025d57602036600319011261025d576020906040906001600160a01b03611538612744565b1681525f80516020613e6983398151915283522054604051908152f35b503461025d578060031936011261025d57600c546040516001600160a01b039091168152602090f35b503461025d5760a036600319011261025d57611598612744565b6115a061275a565b6115a8612786565b606435906115b46127b2565b926115c130331415612a14565b6115cc831515612a4f565b6040516370a0823160e01b8152336004820152602095906001600160a01b0390828216908881602481855afa80156106325787908b90611683575b61161392501015612a89565b6040516323b872dd60e01b815233600482015230602482015260448101879052908890829060649082908d905af180156104ce57916102559899879261166194611666575b50541683613985565b613bdd565b61167c908c8d3d1061049f57610490818361280a565b505f611658565b50508881813d83116116ad575b61169a818361280a565b8101031261067157866116139151611607565b503d611690565b50346106715760031960c036820112610671576001600160401b03600435818111610671576116e790369060040161288c565b602435838111610671576116ff90369060040161288c565b61170a949194612786565b611712612770565b9161171b61279c565b506040519760208901948511898610176118615760408590525f8952600b546007546001600160a01b0391821697911695873b1561067157604051633c2fddc560e21b815260e060048201529a5160e48c018190526101048c01905f5b81811061184b57505060209150838c82030160248d01528281520197905f5b81811061181f575050508887030160448901528086526001600160fb1b038111610671575f96889687958995602095889560051b8095888601376084803560648801526001600160a01b03918216908701521660a485015260c4840152010301925af1801561181457611808575080f35b61181291506127dc565b005b6040513d5f823e3d90fd5b919890919060019060209081906001600160a01b0361183d8e6127c8565b168152019a01929101611797565b8351835260209384019390920191600101611778565b634e487b7160e01b5f52604160045260245ffd5b34610671575f366003190112610671577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036118df5760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60405163703e46dd60e11b8152600490fd5b604036600319011261067157611905612744565b6024356001600160401b03811161067157611924903690600401612846565b906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116308114908115611adc575b506118df576119686133f2565b6040516352d1902d60e01b8152908216916020918281600481875afa5f9181611aad575b506119aa57604051634c9c8ce360e01b815260048101859052602490fd5b9284937f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90818103611a955750823b15611a7c5780546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2835115611a6257505f80848461181296519101845af4903d15611a59573d611a3d8161282b565b90611a4b604051928361280a565b81525f81943d92013e613dc5565b60609250613dc5565b9250505034611a6d57005b63b398979f60e01b8152600490fd5b604051634c9c8ce360e01b815260048101839052602490fd5b60249060405190632a87526960e21b82526004820152fd5b9091508381813d8311611ad5575b611ac5818361280a565b810103126106715751908661198c565b503d611abb565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541614158461195b565b34610671575f36600319011261067157611b2261342a565b6005545f5b818110611b415760015f80516020613f2983398151915255005b80611b63611b50600193613d01565b848060a01b0391549060031b1c16612b18565b01611b27565b34610671575f366003190112610671576020600254604051908152f35b34610671575f36600319011261067157602060405160128152f35b3461067157602036600319011261067157611812611bbd612744565b612b18565b3461067157608036600319011261067157611bdb612744565b611be361275a565b604435611bee612770565b90611bfb30331415612a14565b611c06811515612a4f565b6040516370a0823160e01b81523360048201526020946001600160a01b039491818616908781602481855afa80156118145785905f90611cbc575b611c4d92501015612a89565b6040516323b872dd60e01b815233600482015230602482015260448101859052908790829060649082905f905af180156118145761025596611c9a928692611c9f575b505f541683613985565b613ad3565b611cb5908a3d8c1161049f57610490818361280a565b5089611c90565b50508781813d8311611ce6575b611cd3818361280a565b810103126106715784611c4d9151611c41565b503d611cc9565b34610671576040366003190112610671576020610255611d0b61275a565b600435613787565b34610671575f366003190112610671576020610255613466565b3461067157602036600319011261067157611d46612744565b600a546040516313eaa54960e11b81526001600160a01b03928316600482015291906020908390602490829085165afa908115611814576020925f92611d91575b5060405191168152f35b611da9919250833d851161059257610584818361280a565b9083611d87565b3461067157606036600319011261067157611dc9612744565b611dd161275a565b60443590611dde83612c5f565b335f5260205260405f2054925f198403611dfd575b6112ab93506136e1565b828410611e68576001600160a01b03811615611e50573315611e3857826112ab94611e2783612c5f565b335f526020520360405f2055611df3565b604051634a1406b160e11b81525f6004820152602490fd5b60405163e602df0560e01b81525f6004820152602490fd5b604051637dc7a0d960e11b81523360048201526024810185905260448101849052606490fd5b34610671576020806003193601126106715760043590611eac61342a565b335f525f80516020613e698339815191528152611ecf8260405f20541015612990565b5f5b6005548110156120bc57611ee481613d01565b919060018060a01b03809154600394851b1c16925f80516020613ec983398151915254604051906370a0823160e01b82523060048301528682602481895afa918215611814575f9261208d575b5081158015612084575b6120775760405163313ce56760e01b81529087826004818a5afa801561181457611f8d9360ff8b92611f75955f9161205a57501692613576565b916103ca611f876004549254836129e8565b84612947565b60405163a9059cbb60e01b80825233600483015260248201839052919591929087816044815f875af18015611814576120059789965f93611fd89361203d575b50600c5416936129e8565b6040519485526001600160a01b039092166004850152602484019190915291948592839182906044820190565b03925af191821561181457600192612020575b505b01611ed1565b61203690843d861161049f57610490818361280a565b5084612018565b61205390893d8b1161049f57610490818361280a565b508c611fcd565b61207191508c8d3d1061062b5761061d818361280a565b8d61032a565b505050506001915061201a565b50308614611f3b565b9091508681813d83116120b5575b6120a5818361280a565b8101031261067157519088611f31565b503d61209b565b7fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca56120eb846106ac8133613624565b0390a160015f80516020613f2983398151915255005b34610671575f3660031901126106715760205f80516020613ec983398151915254604051908152f35b34610671575f3660031901126106715760206001600160401b035f80516020613f498339815191525416604051908152f35b34610671576020806003193601126106715760043561217961342a565b612181613466565b906103ca6121a25f80516020613ec983398151915293845492839185612947565b6007546040516323b872dd60e01b815233600482015230602482015264e8d4a5100090920460448301819052936001600160a01b0393909290918790829060649082905f9089165af18015611814576124c9575b506007546040516370a0823160e01b8152336004820152908416918782602481865afa918215611814575f9261249a575b50604051636eb1769f60e11b8152336004820152306024820152928890849060449082905afa928315611814575f9361246b575b501561241b5784116123d6578311612391573315610cb75761230b85937f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968856122ff84886122af612314976123519b54613459565b9055335f525f80516020613e69833981519152885260405f208181540190556040518181525f5f80516020613ee98339815191528a3393a360408051338152602081019290925290918291820190565b0390a160035490612947565b6004549061295a565b90806007541690600c54165f60405180968195829463a9059cbb60e01b84526004840160209093929193604081019460018060a01b031681520152565b03925af1801561181457612373575b60015f80516020613f2983398151915255005b8161238992903d1061049f57610490818361280a565b508080612360565b60405162461bcd60e51b815260048101869052601960248201527f436865636b2074686520746f6b656e20616c6c6f77616e6365000000000000006044820152606490fd5b60405162461bcd60e51b815260048101879052601c60248201527f555344432062616c616e636520697320696e73756666696369656e74000000006044820152606490fd5b60405162461bcd60e51b815260048101889052602260248201527f546f74616c2042414c554e4920737570706c792063616e6e6f74206265207a65604482015261726f60f01b6064820152608490fd5b9092508781813d8311612493575b612483818361280a565b810103126106715751918861225b565b503d612479565b9091508781813d83116124c2575b6124b2818361280a565b8101031261067157519088612227565b503d6124a8565b6124df90873d891161049f57610490818361280a565b50866121f6565b34610671576020366003190112610671576124ff612744565b6125076133f2565b600a80546001600160a01b0319166001600160a01b0392909216919091179055005b3461067157604036600319011261067157612542612744565b602435903315611e50576001600160a01b0316908115611e385761256533612c5f565b825f526020528060405f20556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b34610671576020366003190112610671576125c1612744565b6125c96133f2565b600b80546001600160a01b0319166001600160a01b0392909216919091179055005b34610671575f366003190112610671576040515f80516020613e498339815191528054825f6126198361290f565b92838352602094600191866001821691825f1461268f575050600114612648575b50506113179250038361280a565b8592505f525f80516020613e29833981519152905f915b8583106126775750506113179350820101858061263a565b8054838901850152879450869390920191810161265f565b925093505061131794915060ff191682840152151560051b820101858061263a565b34610671576020366003190112610671577fbea1b31142ae4b1f4efad240349036d718b7950d246c127768097ccf602fc7e060206004356126f06133f2565b80600355604051908152a1005b34610671575f36600319011261067157600b546001600160a01b03168152602090f35b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361067157565b602435906001600160a01b038216820361067157565b606435906001600160a01b038216820361067157565b604435906001600160a01b038216820361067157565b60a435906001600160a01b038216820361067157565b608435906001600160a01b038216820361067157565b35906001600160a01b038216820361067157565b6001600160401b03811161186157604052565b604081019081106001600160401b0382111761186157604052565b90601f801991011681019081106001600160401b0382111761186157604052565b6001600160401b03811161186157601f01601f191660200190565b81601f820112156106715780359061285d8261282b565b9261286b604051948561280a565b8284526020838301011161067157815f926020809301838601378301015290565b9181601f84011215610671578235916001600160401b038311610671576020808501948460051b01011161067157565b9081518082526020808093019301915f5b8281106128db575050505090565b83516001600160a01b0316855293810193928101926001016128cd565b6001600160401b0381116118615760051b60200190565b90600182811c9216801561293d575b602083101461292957565b634e487b7160e01b5f52602260045260245ffd5b91607f169161291e565b8181029291811591840414171561090257565b8115612964570490565b634e487b7160e01b5f52601260045260245ffd5b90816020910312610671575180151581036106715790565b1561299757565b60405162461bcd60e51b815260206004820152601060248201526f125b9cdd59999a58da595b9d0810905360821b6044820152606490fd5b90816020910312610671575160ff811681036106715790565b9190820391821161090257565b9081602091031261067157516001600160a01b03811681036106715790565b15612a1b57565b60405162461bcd60e51b815260206004820152600c60248201526b2bb937b7339039b2b73232b960a11b6044820152606490fd5b15612a5657565b60405162461bcd60e51b815260206004820152600b60248201526a0416d6f756e7420697320360ac1b6044820152606490fd5b15612a9057565b60405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b6044820152606490fd5b15612ad357565b60405162461bcd60e51b815260206004820152601760248201527f53776170204661696c65642c20547279204275726e28290000000000000000006044820152606490fd5b6040516370a0823160e01b8152306004820152906001600160a01b039060208183168185602481845afa948515611814575f95612c30575b508184600e54169160648660075416916040519485938492630b4c774160e11b845260048401526024830152610bb860448301525afa918215611814575f92612c13575b5050612ba58484600d541684613985565b821615831515811580612c0c575b15612bd857505090612bd692612bcf9230926007541690613ad3565b1515612acc565b565b91929181612c04575b50612beb57505050565b612bd692612bcf92826008541630936007541691613bdd565b90505f612be1565b5080612bb3565b612c299250803d1061059257610584818361280a565b5f80612b94565b9094508181813d8311612c58575b612c48818361280a565b810103126106715751935f612b50565b503d612c3e565b6001600160a01b03165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020526040902090565b8051821015612cab5760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b600a546001600160a01b0316929091905f84156133445760205f95602460405180988193639b76a5cd60e01b83523360048401525af1948515611814575f95613323575b50825191612d29612d13846128f8565b93612d21604051958661280a565b8085526128f8565b601f1995908601366020860137845195612d5b612d45886128f8565b97612d53604051998a61280a565b8089526128f8565b013660208801375f5b8551811015612e20576024906001600160a01b03612d828289612c97565b51165f52600660205260405f205415612d9b8288612c97565b5260206001600160a01b03612db0838a612c97565b5116604051938480926370a0823160e01b82523060048301525afa8015611814575f90612ded575b60019250612de6828a612c97565b5201612d64565b506020823d602011612e18575b81612e076020938361280a565b810103126106715760019151612dd8565b3d9150612dfa565b5091959091906001600160a01b0381163b15610671576040518092630eedc3c560e41b8252604482016040600484015281518091526064830190602060648260051b8601019301915f905b8282106132d1575050505091815f81612e9182966003198382030160248401528b6128bc565b03926001600160a01b03165af18015611814576132be575b50845b83518110156132b6576001600160a01b03612ec78286612c97565b5116906040516370a0823160e01b8152306004820152602081602481865afa9081156132ab578891613279575b50600e54600854604051630b4c774160e11b8152600481018690526001600160a01b0391821660248201819052610bb860448301529592909116602082606481845afa91821561324d578b92613258575b5060405195630b4c774160e11b875283600488015260248701526101f46044870152602086606481845afa95861561324d578b9661322c575b5060018060a01b03600754169160405192630b4c774160e11b84528460048501528060248501526101f46044850152602084606481865afa938415613221578d946131ff575b50602090606460405180958193630b4c774160e11b83528960048401526024830152610bb860448301525afa9182156131f4578c926131d3575b506001600160a01b031615801596906131c0575b5085156131ad575b50841561319a575b5061302d8387612c97565b51151580613193575b613184575b61304f613048848a612c97565b51836129e8565b931561311a57506130608288612c97565b5110613071575b6001915001612eac565b602061308661230b6130d79460035490612947565b6001600160a01b036130988489612c97565b51600c5460405163a9059cbb60e01b81526001600160a01b039091166004820152602481019390935291948592919091169082908b9082906044820190565b03925af191821561310f576001926130f0575b50613067565b6131089060203d60201161049f57610490818361280a565b505f6130ea565b6040513d89823e3d90fd5b60405163a9059cbb60e01b8152336004820152602481019490945293979296509194506020935085926044925083915085905af1908115613178575061315d5750565b6131759060203d60201161049f57610490818361280a565b50565b604051903d90823e3d90fd5b61318d81613d36565b5061303b565b5083613036565b6001600160a01b0316151593505f613022565b6001600160a01b0316151594505f61301a565b6001600160a01b0316151595505f613012565b6131ed91925060203d60201161059257610584818361280a565b905f612ffe565b6040513d8e823e3d90fd5b602091945061321a90823d841161059257610584818361280a565b9390612fc4565b6040513d8f823e3d90fd5b61324691965060203d60201161059257610584818361280a565b945f612f7e565b6040513d8d823e3d90fd5b61327291925060203d60201161059257610584818361280a565b905f612f45565b90506020813d6020116132a3575b816132946020938361280a565b8101031261067157515f612ef4565b3d9150613287565b6040513d8a823e3d90fd5b509350505050565b6132c99195506127dc565b5f935f612ea9565b9193600191939550602061331381926063198b820301865288516040606091878060a01b03815116845285810151868501520151918160408201520190612720565b9601920192018694939192612e6b565b61333d91955060203d60201161059257610584818361280a565b935f612d03565b60405162461bcd60e51b81526020600482015260156024820152741059d95b9d08199858dd1bdc9e481b9bdd081cd95d605a1b6044820152606490fd5b6001600160a01b039081169081156133da575f80516020613ea983398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b604051631e4fbdf760e01b81525f6004820152602490fd5b5f80516020613ea9833981519152546001600160a01b0316330361341257565b60405163118cdaa760e01b8152336004820152602490fd5b5f80516020613f2983398151915260028154146134475760029055565b604051633ee5aeb560e01b8152600490fd5b9190820180921161090257565b5f806005545b80821061347857505090565b909161348383613d01565b60018060a01b0391549060031b1c16604080516370a0823160e01b815230600482015260208082602481875afa92831561351357505f926134df575b5050916134d16134d792600194613787565b90613459565b92019061346c565b9080949250813d831161350c575b6134f7818361280a565b810103126106715791516134d16134d76134bf565b503d6134ed565b513d5f823e3d90fd5b1561352357565b60405162461bcd60e51b815260206004820152601b60248201527f546f74616c20737570706c792063616e6e6f74206265207a65726f00000000006044820152606490fd5b604d811161090257600a0a90565b9291909161358584151561351c565b601281116135df5760128110156135d0576012039160128311610902576135c86103ca926135bc6135c26135cd976135bc88613568565b9061295a565b95613568565b612947565b90565b506135cd92916103ca91612947565b60405162461bcd60e51b815260206004820152601e60248201527f546f6b656e20646563696d616c732073686f756c64206265203c3d20313800006044820152606490fd5b91906001600160a01b0383169081156136c957815f525f80516020613e698339815191528060205260405f2054948286106136985750815f80516020613ee9833981519152925f959660209386885284520360408620555f80516020613ec9833981519152818154039055604051908152a3565b60405163391434e360e21b81526001600160a01b039190911660048201526024810186905260448101839052606490fd5b604051634b637e8f60e11b81525f6004820152602490fd5b916001600160a01b038084169283156136c95716928315610cb757825f525f80516020613e698339815191528060205260405f205491838310613754575091806020925f80516020613ee983398151915294865f5284520360405f2055845f5260405f20818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b0391909116600482015260248101929092525060448101829052606490fd5b60405163313ce56760e01b808252600494939192916001600160a01b039081169060209081868981865afa958615611814575f96613966575b5080600754169060405194855282858a81855afa948515611814575f95613947575b508184146139235790606483926009541694604051958693849263802431fb60e01b84528d84015260248301525f60448301525afa9182915f936138f3575b505061383057505f9450505050565b60ff809192169316928084146138c257830360ff81116138af5760ff1694604d861161389c57506012670de0b6b3a76400009495600a0a9310613884576138809261387a91612947565b90612947565b0490565b90826138966138809461387a93612947565b92612947565b601190634e487b7160e01b5f525260245ffd5b601186634e487b7160e01b5f525260245ffd5b50929390915064e8d4a510009182810292818404149015171561389c5750670de0b6b3a76400009161388091612947565b9080929350813d831161391c575b61390b818361280a565b810103126106715751905f80613821565b503d613901565b50505050509192905064e8d4a510009182810292818404149015171561389c575090565b61395f919550833d851161062b5761061d818361280a565b935f6137e2565b61397e919650823d841161062b5761061d818361280a565b945f6137c0565b60408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015260209592949293811692918681604481875afa908115613a98579085915f91613aa2575b50106139dc575b505050505050565b845163095ea7b360e01b91828252831660048201525f602482015286816044815f885af18015613a9857879492613a43979694925f92613a7b575b5086519081526001600160a01b0390921660048301526024820193909352948592839182906044820190565b03925af19081156135135750613a5d575b808080806139d4565b81613a7392903d1061049f57610490818361280a565b505f80613a54565b613a9190873d891161049f57610490818361280a565b505f613a17565b86513d5f823e3d90fd5b809250888092503d8311613acc575b613abb818361280a565b81010312610671578490515f6139cd565b503d613ab1565b9092916040519161010083018381106001600160401b0382111761186157604052600160a01b60019003938480921684528160208501961686526040840192610bb88452826060860192168252608085019042825260a0860190815260c08601915f83528460e08801945f8652815f541697826040519c8d9c8d9c8d63414bf38960e01b9052511660048d0152511660248b01525162ffffff1660448a0152511660648801525160848701525160a48601525160c4850152511660e48301525a925f61010492602095f1908115611814575f91613bae575090565b90506020813d602011613bd5575b81613bc96020938361280a565b81010312610671575190565b3d9150613bbc565b939093929192604051936020956001600160601b0319809360601b16878701528261017760eb1b9182603489015260601b166037870152604b86015260601b16604e8401526042835260808301916001600160401b03928481108482111761186157610120850193841181851017611861575f613cb391879560405286815260a0870160018060a01b03809616815261010060c0890198428a5260e08101968752018381528684541695604051998a988997889663c04b8d5960e01b88528c60048901525160a0602489015260c4880190612720565b94511660448601525160648501525160848401525160a483015203925af1918215611814575f92613ce357505090565b90809250813d8311613cfa575b613bc9818361280a565b503d613cf0565b600554811015612cab5760055f527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001905f90565b805f52600660205260405f2054155f14613d9257600554600160401b81101561186157806001613d699201600555613d01565b81549060031b9083821b915f19901b1916179055600554905f52600660205260405f2055600190565b505f90565b60ff5f80516020613f498339815191525460401c1615613db357565b604051631afcd79f60e31b8152600490fd5b90613dec5750805115613dda57805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580613e1f575b613dfd575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15613df556fe2ae08a8e29253f69ac5d979a101956ab8f8d9d7ded63fa7a83b16fc47648eab052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0352c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace049016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef46a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a2646970667358221220eb12bb3e406bc4b45a050a8cc16a8e13f4d3df152d8077863996d65ca8653c8264736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1D22CCD EQ PUSH2 0x26FD JUMPI POP DUP1 PUSH4 0x6497CB9 EQ PUSH2 0x26B1 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x25EB JUMPI DUP1 PUSH4 0x918281B EQ PUSH2 0x25A8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2529 JUMPI DUP1 PUSH4 0xA38ABAB EQ PUSH2 0x24E6 JUMPI DUP1 PUSH4 0xCFC7386 EQ PUSH2 0x215C JUMPI DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x212A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2101 JUMPI DUP1 PUSH4 0x1A168DA2 EQ PUSH2 0x1E8E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DB0 JUMPI DUP1 PUSH4 0x27D54A92 EQ PUSH2 0x1D2D JUMPI DUP1 PUSH4 0x295B9300 EQ PUSH2 0x1D13 JUMPI DUP1 PUSH4 0x2BDD955A EQ PUSH2 0x1CED JUMPI DUP1 PUSH4 0x2D6BC8EA EQ PUSH2 0x1BC2 JUMPI DUP1 PUSH4 0x2F865568 EQ PUSH2 0x1BA1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B86 JUMPI DUP1 PUSH4 0x34DECFC9 EQ PUSH2 0x1B69 JUMPI DUP1 PUSH4 0x3C2066A9 EQ PUSH2 0x1B0A JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x18F1 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1875 JUMPI DUP1 PUSH4 0x599F69F7 EQ PUSH2 0x16B4 JUMPI DUP1 PUSH4 0x5EFAAEBB EQ PUSH2 0x157E JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x1555 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1510 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x14A7 JUMPI DUP1 PUSH4 0x71DDCFB8 EQ PUSH2 0x1463 JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x143A JUMPI DUP1 PUSH4 0x7DF107EA EQ PUSH2 0x1411 JUMPI DUP1 PUSH4 0x85377188 EQ PUSH2 0x13F3 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x13CA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1395 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x12B6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1284 JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x11FA JUMPI DUP1 PUSH4 0xAA95D893 EQ PUSH2 0x11B1 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x1167 JUMPI DUP1 PUSH4 0xB0D60BA0 EQ PUSH2 0x1003 JUMPI DUP1 PUSH4 0xB14F2A39 EQ PUSH2 0xFC3 JUMPI DUP1 PUSH4 0xB381CF40 EQ PUSH2 0xF9A JUMPI DUP1 PUSH4 0xB9F5E617 EQ PUSH2 0xF7C JUMPI DUP1 PUSH4 0xCC2A9A5B EQ PUSH2 0x95E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x916 JUMPI DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x8AE JUMPI DUP1 PUSH4 0xEEDC3C50 EQ PUSH2 0x708 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6DB JUMPI DUP1 PUSH4 0xFE0A4DD1 EQ PUSH2 0x260 JUMPI PUSH4 0xFE330A51 EQ PUSH2 0x22E JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x25D JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH1 0x20 PUSH2 0x255 PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x3576 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH2 0x280 PUSH2 0x342A JUMP JUMPDEST PUSH2 0x28B DUP4 ISZERO ISZERO PUSH2 0x2990 JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x67C JUMPI PUSH2 0x2A0 DUP2 PUSH2 0x3D01 JUMP JUMPDEST SWAP1 SLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 SWAP4 PUSH1 0x24 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP2 DUP7 SHL SHR DUP4 AND SWAP2 DUP8 DUP2 DUP7 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4CE JUMPI DUP10 SWAP2 PUSH2 0x64B JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x63D JUMPI ADDRESS DUP4 EQ PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE DUP9 DUP2 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x632 JUMPI SWAP2 PUSH1 0xFF DUP13 SWAP3 PUSH2 0x332 SWAP6 SWAP5 DUP14 SWAP2 PUSH2 0x605 JUMPI JUMPDEST POP AND SWAP3 PUSH2 0x3576 JUMP JUMPDEST PUSH1 0x7 SWAP4 DUP9 DUP9 DUP6 DUP8 SLOAD AND DUP1 DUP7 EQ PUSH2 0x599 JUMPI POP SWAP1 POP DUP5 PUSH1 0xE SLOAD AND SWAP2 PUSH1 0x64 DUP7 DUP9 SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP5 MSTORE DUP10 PUSH1 0x4 DUP6 ADD MSTORE DUP4 ADD MSTORE PUSH2 0xBB8 PUSH1 0x44 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4CE JUMPI SWAP1 DUP5 SWAP2 DUP11 SWAP2 PUSH2 0x56C JUMPI JUMPDEST POP PUSH2 0x398 DUP4 DUP4 PUSH1 0xD SLOAD AND DUP7 PUSH2 0x3985 JUMP JUMPDEST AND ISZERO PUSH2 0x4D9 JUMPI PUSH2 0x3CF SWAP2 PUSH2 0x3B2 SWAP2 ADDRESS SWAP2 DUP6 DUP8 SLOAD AND SWAP1 PUSH2 0x3AD3 JUMP JUMPDEST SWAP4 PUSH2 0x3CA PUSH2 0x3C4 PUSH1 0x4 SLOAD SWAP3 SLOAD DUP4 PUSH2 0x29E8 JUMP JUMPDEST DUP7 PUSH2 0x2947 JUMP JUMPDEST PUSH2 0x295A JUMP JUMPDEST DUP3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP5 SWAP2 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP14 SWAP1 DUP10 AND GAS CALL DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH2 0x426 DUP6 DUP11 SWAP7 SWAP5 PUSH2 0x453 SWAP9 SWAP7 SWAP5 DUP14 SWAP5 PUSH2 0x4B1 JUMPI JUMPDEST POP SLOAD AND SWAP4 PUSH1 0xC SLOAD AND SWAP3 DUP9 PUSH2 0x29E8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP4 DUP5 SWAP3 DUP4 SWAP2 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x4A6 JUMPI SWAP2 PUSH2 0x473 SWAP2 PUSH1 0x1 SWAP5 SWAP4 PUSH2 0x479 JUMPI JUMPDEST POP ISZERO ISZERO PUSH2 0x2ACC JUMP JUMPDEST ADD PUSH2 0x28D JUMP JUMPDEST PUSH2 0x498 SWAP1 DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x49F JUMPI JUMPDEST PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2978 JUMP JUMPDEST POP PUSH0 PUSH2 0x46B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x486 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x4C7 SWAP1 DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x49F JUMPI PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP PUSH0 PUSH2 0x417 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x4F2 SWAP2 PUSH2 0x3B2 SWAP2 DUP5 PUSH1 0x8 SLOAD AND DUP6 DUP8 SLOAD AND SWAP1 CALLER SWAP4 PUSH2 0x3BDD JUMP JUMPDEST DUP3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP5 SWAP2 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP14 SWAP1 DUP10 AND GAS CALL DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH2 0x426 DUP6 DUP11 SWAP7 SWAP5 PUSH2 0x548 SWAP9 SWAP7 SWAP5 DUP14 SWAP5 PUSH2 0x4B1 JUMPI POP SLOAD AND SWAP4 PUSH1 0xC SLOAD AND SWAP3 DUP9 PUSH2 0x29E8 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x4A6 JUMPI SWAP2 PUSH2 0x567 SWAP2 PUSH1 0x1 SWAP5 SWAP4 PUSH2 0x479 JUMPI POP ISZERO ISZERO PUSH2 0x2ACC JUMP JUMPDEST PUSH2 0x473 JUMP JUMPDEST PUSH2 0x58C SWAP2 POP DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x592 JUMPI JUMPDEST PUSH2 0x584 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH0 PUSH2 0x388 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x57A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 SWAP8 POP SWAP6 POP DUP7 SWAP5 POP PUSH1 0x44 SWAP4 POP DUP5 SWAP3 SWAP1 SWAP2 POP GAS CALL DUP1 ISZERO PUSH2 0x5FA JUMPI SWAP1 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0x5DD JUMPI JUMPDEST POP PUSH2 0x473 JUMP JUMPDEST PUSH2 0x5F3 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x49F JUMPI PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP PUSH0 PUSH2 0x5D7 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x625 SWAP2 POP DUP13 DUP14 RETURNDATASIZE LT PUSH2 0x62B JUMPI JUMPDEST PUSH2 0x61D DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x29CF JUMP JUMPDEST PUSH0 PUSH2 0x32A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP POP POP POP PUSH1 0x1 SWAP1 PUSH2 0x473 JUMP JUMPDEST SWAP1 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x675 JUMPI JUMPDEST PUSH2 0x662 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI MLOAD PUSH0 PUSH2 0x2EF JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x658 JUMP JUMPDEST DUP3 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 PUSH2 0x6C4 DUP7 PUSH2 0x6AC DUP2 CALLER PUSH2 0x3624 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F29 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH2 0x705 PUSH2 0x6F8 PUSH2 0x2744 JUMP JUMPDEST PUSH2 0x700 PUSH2 0x33F2 JUMP JUMPDEST PUSH2 0x3381 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 GT PUSH2 0x8AA JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x8AA JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD SWAP3 PUSH1 0x24 SWAP2 PUSH2 0x74A DUP6 PUSH2 0x28F8 JUMP JUMPDEST SWAP2 PUSH2 0x758 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x280A JUMP JUMPDEST DUP6 DUP4 MSTORE PUSH1 0x20 SWAP6 DUP5 DUP8 DUP6 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x80F JUMPI DUP6 DUP2 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x817 JUMPI POP POP POP POP DUP3 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x813 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x813 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x7A3 DUP2 PUSH2 0x28F8 JUMP JUMPDEST SWAP4 PUSH2 0x7B1 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x280A JUMP JUMPDEST DUP2 DUP6 MSTORE DUP1 DUP8 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP5 ADD ADD SWAP3 CALLDATASIZE DUP5 GT PUSH2 0x80F JUMPI ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x7F8 JUMPI DUP6 PUSH2 0x7E4 DUP7 DUP7 PUSH2 0x7DF PUSH2 0x342A JUMP JUMPDEST PUSH2 0x2CBF JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F29 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST DUP7 DUP1 SWAP2 PUSH2 0x804 DUP5 PUSH2 0x27C8 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x7CA JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x8A6 JUMPI DUP3 ADD PUSH1 0x60 SWAP1 DUP2 PUSH1 0x23 NOT DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x8A2 JUMPI PUSH1 0x40 MLOAD SWAP2 DUP3 ADD DUP3 DUP2 LT DUP9 DUP3 GT OR PUSH2 0x88F JUMPI PUSH1 0x40 MSTORE PUSH2 0x851 DUP10 DUP3 ADD PUSH2 0x27C8 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x44 DUP2 ADD CALLDATALOAD DUP12 DUP4 ADD MSTORE PUSH1 0x64 DUP2 ADD CALLDATALOAD DUP8 DUP2 GT PUSH2 0x88B JUMPI SWAP2 PUSH2 0x87B DUP13 SWAP5 SWAP3 DUP12 DUP7 SWAP6 CALLDATASIZE SWAP3 ADD ADD PUSH2 0x2846 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x776 JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH0 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x8D9 DUP2 ISZERO ISZERO PUSH2 0x351C JUMP JUMPDEST PUSH2 0x8E1 PUSH2 0x3466 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 DUP1 DUP3 MUL SWAP2 DUP3 DIV SUB PUSH2 0x902 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x255 SWAP2 PUSH2 0x295A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH2 0x930 PUSH2 0x2744 JUMP JUMPDEST PUSH2 0x941 PUSH2 0x93B PUSH2 0x275A JUMP JUMPDEST SWAP2 PUSH2 0x2C5F JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH2 0x978 PUSH2 0x2744 JUMP JUMPDEST PUSH2 0x980 PUSH2 0x275A JUMP JUMPDEST PUSH2 0x988 PUSH2 0x2786 JUMP JUMPDEST SWAP1 PUSH2 0x991 PUSH2 0x2770 JUMP JUMPDEST PUSH2 0x999 PUSH2 0x27B2 JUMP JUMPDEST SWAP2 PUSH2 0x9A2 PUSH2 0x279C JUMP JUMPDEST SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0xF6C JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0xF62 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0xF59 JUMPI JUMPDEST POP PUSH2 0xF47 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP8 AND OR PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0xFF DUP7 PUSH1 0x40 SHR AND ISZERO PUSH2 0xF1B JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA13 DUP2 PUSH2 0x27EF JUMP JUMPDEST PUSH1 0x6 DUP2 MSTORE PUSH6 0x42616C756E69 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0xA33 DUP3 PUSH2 0x27EF JUMP JUMPDEST PUSH1 0x6 DUP3 MSTORE PUSH6 0x42414C554E49 PUSH1 0xD0 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xA4E PUSH2 0x3D97 JUMP JUMPDEST PUSH2 0xA56 PUSH2 0x3D97 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xF07 JUMPI DUP2 SWAP1 PUSH2 0xA80 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x290F JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xE8C JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xE00 JUMPI DUP13 SWAP3 PUSH2 0xDF5 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xDE1 JUMPI DUP2 SWAP1 PUSH2 0xAEA PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E89 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x290F JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xD66 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xCDA JUMPI DUP12 SWAP3 PUSH2 0xCCF JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E89 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMPDEST PUSH2 0xB32 PUSH2 0x3D97 JUMP JUMPDEST PUSH2 0xB3A PUSH2 0x3D97 JUMP JUMPDEST PUSH2 0xB43 CALLER PUSH2 0x3381 JUMP JUMPDEST PUSH2 0xB4B PUSH2 0x3D97 JUMP JUMPDEST PUSH2 0xB53 PUSH2 0x3D97 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F29 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0xB6C PUSH2 0x3D97 JUMP JUMPDEST ADDRESS ISZERO PUSH2 0xCB7 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD SWAP3 PUSH8 0xDE0B6B3A7640000 SWAP9 DUP10 DUP6 ADD DUP1 SWAP6 GT PUSH2 0x902 JUMPI PUSH1 0xFF SWAP10 PUSH2 0xC43 SWAP6 DUP13 SWAP5 SSTORE ADDRESS PUSH0 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E69 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EE9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 ADDRESS SWAP4 LOG3 PUSH2 0x1F4 PUSH1 0x2 SSTORE PUSH1 0x1E PUSH1 0x3 SSTORE PUSH2 0x2710 PUSH1 0x4 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 DUP1 SWAP9 DUP2 DUP1 SWAP5 AND SWAP11 DUP12 SWAP8 DUP2 PUSH1 0x7 SLOAD SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP15 DUP16 DUP11 AND OR PUSH1 0x7 SSTORE AND DUP14 PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE AND DUP12 PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE AND DUP10 PUSH1 0xD SLOAD AND OR PUSH1 0xD SSTORE AND DUP8 PUSH1 0xE SLOAD AND OR PUSH1 0xE SSTORE AND OR PUSH2 0x3D36 JUMP JUMPDEST POP AND DUP2 PUSH1 0xB SLOAD AND OR PUSH1 0xB SSTORE CALLER SWAP1 PUSH1 0xC SLOAD AND OR PUSH1 0xC SSTORE PUSH1 0x40 SHR AND ISZERO PUSH2 0xC64 JUMPI DUP1 RETURN JUMPDEST PUSH1 0xFF PUSH1 0x40 SHL NOT PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0xB09 JUMP JUMPDEST SWAP3 POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E89 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP12 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP12 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xD4B JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xD33 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E89 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0xB2A JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0xD19 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xCFE JUMP JUMPDEST SWAP1 SWAP2 POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E89 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP12 MSTORE PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD PUSH1 0x20 DUP5 LT PUSH2 0xDCD JUMPI JUMPDEST SWAP1 DUP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP2 LT PUSH2 0xDBF JUMPI POP PUSH2 0xAF3 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0xD9D JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xD98 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0xA9F JUMP JUMPDEST SWAP3 POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP13 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E29 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP13 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xE71 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xE59 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0xAC0 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0xE3F JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xE24 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP13 MSTORE PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E29 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD PUSH1 0x20 DUP5 LT PUSH2 0xEF3 JUMPI JUMPDEST SWAP1 DUP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E29 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP2 LT PUSH2 0xEE5 JUMPI POP PUSH2 0xA89 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0xEC3 JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E29 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xEBE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT DUP7 AND PUSH9 0x10000000000000001 OR PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO PUSH0 PUSH2 0x9D8 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x40 DUP9 SWAP1 SHR PUSH1 0xFF AND ISZERO SWAP2 POP PUSH2 0x9C6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH2 0xFDD PUSH2 0x2744 JUMP JUMPDEST PUSH2 0xFE5 PUSH2 0x33F2 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xC SLOAD AND OR PUSH1 0xC SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH2 0x101D PUSH2 0x2744 JUMP JUMPDEST PUSH2 0x1025 PUSH2 0x275A JUMP JUMPDEST PUSH2 0x102D PUSH2 0x2786 JUMP JUMPDEST PUSH2 0x1035 PUSH2 0x2770 JUMP JUMPDEST SWAP1 PUSH2 0x103E PUSH2 0x27B2 JUMP JUMPDEST PUSH2 0x1046 PUSH2 0x279C JUMP JUMPDEST SWAP3 PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP7 DUP8 DUP7 AND DUP1 SWAP7 SUB PUSH2 0x8A6 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 DUP6 SLOAD SWAP9 DUP8 PUSH1 0xFF DUP12 PUSH1 0x40 SHR AND SWAP2 DUP3 ISZERO PUSH2 0x115A JUMPI JUMPDEST POP POP PUSH2 0xF47 JUMPI DUP10 PUSH1 0x20 SWAP9 PUSH2 0x1130 SWAP4 PUSH1 0x1 PUSH1 0x40 SHL DUP11 PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP14 PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND OR OR DUP10 SSTORE PUSH2 0x1F4 PUSH1 0x2 SSTORE PUSH1 0x1E PUSH1 0x3 SSTORE PUSH2 0x2710 PUSH1 0x4 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 DUP1 SWAP9 DUP2 DUP1 SWAP5 AND SWAP11 DUP12 SWAP8 DUP2 PUSH1 0x7 SLOAD SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP15 DUP16 DUP11 AND OR PUSH1 0x7 SSTORE AND DUP14 PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE AND DUP12 PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE AND DUP10 PUSH1 0xD SLOAD AND OR PUSH1 0xD SSTORE AND DUP8 PUSH1 0xE SLOAD AND OR PUSH1 0xE SSTORE AND OR PUSH2 0x3D36 JUMP JUMPDEST POP AND DUP2 PUSH1 0xB SLOAD AND OR PUSH1 0xB SSTORE CALLER SWAP1 PUSH1 0xC SLOAD AND OR PUSH1 0xC SSTORE PUSH1 0xFF PUSH1 0x40 SHL NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP12 AND LT ISZERO SWAP1 POP DUP8 PUSH0 PUSH2 0x1080 JUMP JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH2 0x11AD PUSH1 0x40 MLOAD PUSH2 0x1187 DUP2 PUSH2 0x27EF JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2720 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH1 0x20 PUSH5 0xE8D4A51000 PUSH2 0x11F1 PUSH2 0x11D6 PUSH2 0x3466 JUMP JUMPDEST PUSH2 0x3CA PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP2 PUSH1 0x4 CALLDATALOAD PUSH2 0x2947 JUMP JUMPDEST DIV PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH1 0x40 MLOAD PUSH1 0x5 DUP1 SLOAD DUP1 DUP4 MSTORE SWAP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP3 SWAP2 JUMPDEST DUP3 DUP3 LT PUSH2 0x126D JUMPI PUSH2 0x11AD DUP6 PUSH2 0x1259 DUP2 DUP10 SUB DUP3 PUSH2 0x280A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x28BC JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1242 JUMP JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH2 0x12AB PUSH2 0x12A1 PUSH2 0x2744 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x36E1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E89 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP4 SLOAD PUSH2 0x12E7 DUP2 PUSH2 0x290F JUMP JUMPDEST SWAP4 DUP5 DUP5 MSTORE PUSH1 0x20 SWAP6 PUSH1 0x1 SWAP3 DUP8 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH0 EQ PUSH2 0x1371 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x132B JUMPI JUMPDEST POP POP POP PUSH2 0x1317 SWAP3 POP SUB DUP4 PUSH2 0x280A JUMP JUMPDEST PUSH2 0x11AD PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x2720 JUMP JUMPDEST DUP2 MSTORE DUP6 SWAP3 POP SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP6 DUP4 LT PUSH2 0x1359 JUMPI POP POP PUSH2 0x1317 SWAP4 POP DUP3 ADD ADD PUSH0 DUP1 DUP1 PUSH2 0x1308 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x1340 JUMP JUMPDEST SWAP4 POP SWAP5 POP POP POP PUSH2 0x1317 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD PUSH0 DUP1 DUP1 PUSH2 0x1308 JUMP JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EA9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH1 0x20 PUSH2 0x255 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x1494 DUP2 ISZERO ISZERO PUSH2 0x351C JUMP JUMPDEST PUSH2 0x3CA PUSH2 0x149F PUSH2 0x3466 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x2947 JUMP JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH2 0x14C0 PUSH2 0x33F2 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EA9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1538 PUSH2 0x2744 JUMP JUMPDEST AND DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E69 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25D JUMPI PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x25D JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH2 0x1598 PUSH2 0x2744 JUMP JUMPDEST PUSH2 0x15A0 PUSH2 0x275A JUMP JUMPDEST PUSH2 0x15A8 PUSH2 0x2786 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH2 0x15B4 PUSH2 0x27B2 JUMP JUMPDEST SWAP3 PUSH2 0x15C1 ADDRESS CALLER EQ ISZERO PUSH2 0x2A14 JUMP JUMPDEST PUSH2 0x15CC DUP4 ISZERO ISZERO PUSH2 0x2A4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 SWAP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP3 DUP3 AND SWAP1 DUP9 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x632 JUMPI DUP8 SWAP1 DUP12 SWAP1 PUSH2 0x1683 JUMPI JUMPDEST PUSH2 0x1613 SWAP3 POP LT ISZERO PUSH2 0x2A89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP14 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x4CE JUMPI SWAP2 PUSH2 0x255 SWAP9 SWAP10 DUP8 SWAP3 PUSH2 0x1661 SWAP5 PUSH2 0x1666 JUMPI JUMPDEST POP SLOAD AND DUP4 PUSH2 0x3985 JUMP JUMPDEST PUSH2 0x3BDD JUMP JUMPDEST PUSH2 0x167C SWAP1 DUP13 DUP14 RETURNDATASIZE LT PUSH2 0x49F JUMPI PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP PUSH0 PUSH2 0x1658 JUMP JUMPDEST POP POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x16AD JUMPI JUMPDEST PUSH2 0x169A DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI DUP7 PUSH2 0x1613 SWAP2 MLOAD PUSH2 0x1607 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1690 JUMP JUMPDEST POP CALLVALUE PUSH2 0x671 JUMPI PUSH1 0x3 NOT PUSH1 0xC0 CALLDATASIZE DUP3 ADD SLT PUSH2 0x671 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x671 JUMPI PUSH2 0x16E7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x288C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x671 JUMPI PUSH2 0x16FF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x288C JUMP JUMPDEST PUSH2 0x170A SWAP5 SWAP2 SWAP5 PUSH2 0x2786 JUMP JUMPDEST PUSH2 0x1712 PUSH2 0x2770 JUMP JUMPDEST SWAP2 PUSH2 0x171B PUSH2 0x279C JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP8 PUSH1 0x20 DUP10 ADD SWAP5 DUP6 GT DUP10 DUP7 LT OR PUSH2 0x1861 JUMPI PUSH1 0x40 DUP6 SWAP1 MSTORE PUSH0 DUP10 MSTORE PUSH1 0xB SLOAD PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP8 SWAP2 AND SWAP6 DUP8 EXTCODESIZE ISZERO PUSH2 0x671 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3C2FDDC5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0xE0 PUSH1 0x4 DUP3 ADD MSTORE SWAP11 MLOAD PUSH1 0xE4 DUP13 ADD DUP2 SWAP1 MSTORE PUSH2 0x104 DUP13 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x184B JUMPI POP POP PUSH1 0x20 SWAP2 POP DUP4 DUP13 DUP3 SUB ADD PUSH1 0x24 DUP14 ADD MSTORE DUP3 DUP2 MSTORE ADD SWAP8 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x181F JUMPI POP POP POP DUP9 DUP8 SUB ADD PUSH1 0x44 DUP10 ADD MSTORE DUP1 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP2 GT PUSH2 0x671 JUMPI PUSH0 SWAP7 DUP9 SWAP7 DUP8 SWAP6 DUP10 SWAP6 PUSH1 0x20 SWAP6 DUP9 SWAP6 PUSH1 0x5 SHL DUP1 SWAP6 DUP9 DUP7 ADD CALLDATACOPY PUSH1 0x84 DUP1 CALLDATALOAD PUSH1 0x64 DUP9 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP1 DUP8 ADD MSTORE AND PUSH1 0xA4 DUP6 ADD MSTORE PUSH1 0xC4 DUP5 ADD MSTORE ADD SUB ADD SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1814 JUMPI PUSH2 0x1808 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x1812 SWAP2 POP PUSH2 0x27DC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP9 SWAP1 SWAP2 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x183D DUP15 PUSH2 0x27C8 JUMP JUMPDEST AND DUP2 MSTORE ADD SWAP11 ADD SWAP3 SWAP2 ADD PUSH2 0x1797 JUMP JUMPDEST DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1778 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x18DF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH2 0x1905 PUSH2 0x2744 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x671 JUMPI PUSH2 0x1924 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2846 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND ADDRESS DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1ADC JUMPI JUMPDEST POP PUSH2 0x18DF JUMPI PUSH2 0x1968 PUSH2 0x33F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP3 AND SWAP2 PUSH1 0x20 SWAP2 DUP3 DUP2 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0x1AAD JUMPI JUMPDEST POP PUSH2 0x19AA JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP3 DUP5 SWAP4 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 DUP2 DUP2 SUB PUSH2 0x1A95 JUMPI POP DUP3 EXTCODESIZE ISZERO PUSH2 0x1A7C JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP4 MLOAD ISZERO PUSH2 0x1A62 JUMPI POP PUSH0 DUP1 DUP5 DUP5 PUSH2 0x1812 SWAP7 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x1A59 JUMPI RETURNDATASIZE PUSH2 0x1A3D DUP2 PUSH2 0x282B JUMP JUMPDEST SWAP1 PUSH2 0x1A4B PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 MSTORE PUSH0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x3DC5 JUMP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x3DC5 JUMP JUMPDEST SWAP3 POP POP POP CALLVALUE PUSH2 0x1A6D JUMPI STOP JUMPDEST PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1AD5 JUMPI JUMPDEST PUSH2 0x1AC5 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI MLOAD SWAP1 DUP7 PUSH2 0x198C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1ABB JUMP JUMPDEST SWAP1 POP DUP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ ISZERO DUP5 PUSH2 0x195B JUMP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH2 0x1B22 PUSH2 0x342A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1B41 JUMPI PUSH1 0x1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F29 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE STOP JUMPDEST DUP1 PUSH2 0x1B63 PUSH2 0x1B50 PUSH1 0x1 SWAP4 PUSH2 0x3D01 JUMP JUMPDEST DUP5 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x2B18 JUMP JUMPDEST ADD PUSH2 0x1B27 JUMP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH2 0x1812 PUSH2 0x1BBD PUSH2 0x2744 JUMP JUMPDEST PUSH2 0x2B18 JUMP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH2 0x1BDB PUSH2 0x2744 JUMP JUMPDEST PUSH2 0x1BE3 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0x1BEE PUSH2 0x2770 JUMP JUMPDEST SWAP1 PUSH2 0x1BFB ADDRESS CALLER EQ ISZERO PUSH2 0x2A14 JUMP JUMPDEST PUSH2 0x1C06 DUP2 ISZERO ISZERO PUSH2 0x2A4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP2 DUP2 DUP7 AND SWAP1 DUP8 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x1814 JUMPI DUP6 SWAP1 PUSH0 SWAP1 PUSH2 0x1CBC JUMPI JUMPDEST PUSH2 0x1C4D SWAP3 POP LT ISZERO PUSH2 0x2A89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x1814 JUMPI PUSH2 0x255 SWAP7 PUSH2 0x1C9A SWAP3 DUP7 SWAP3 PUSH2 0x1C9F JUMPI JUMPDEST POP PUSH0 SLOAD AND DUP4 PUSH2 0x3985 JUMP JUMPDEST PUSH2 0x3AD3 JUMP JUMPDEST PUSH2 0x1CB5 SWAP1 DUP11 RETURNDATASIZE DUP13 GT PUSH2 0x49F JUMPI PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP DUP10 PUSH2 0x1C90 JUMP JUMPDEST POP POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1CE6 JUMPI JUMPDEST PUSH2 0x1CD3 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI DUP5 PUSH2 0x1C4D SWAP2 MLOAD PUSH2 0x1C41 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1CC9 JUMP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH1 0x20 PUSH2 0x255 PUSH2 0x1D0B PUSH2 0x275A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x3787 JUMP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH1 0x20 PUSH2 0x255 PUSH2 0x3466 JUMP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH2 0x1D46 PUSH2 0x2744 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x13EAA549 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP6 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1814 JUMPI PUSH1 0x20 SWAP3 PUSH0 SWAP3 PUSH2 0x1D91 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1DA9 SWAP2 SWAP3 POP DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x592 JUMPI PUSH2 0x584 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST SWAP1 DUP4 PUSH2 0x1D87 JUMP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH2 0x1DC9 PUSH2 0x2744 JUMP JUMPDEST PUSH2 0x1DD1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x1DDE DUP4 PUSH2 0x2C5F JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP3 PUSH0 NOT DUP5 SUB PUSH2 0x1DFD JUMPI JUMPDEST PUSH2 0x12AB SWAP4 POP PUSH2 0x36E1 JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0x1E68 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1E50 JUMPI CALLER ISZERO PUSH2 0x1E38 JUMPI DUP3 PUSH2 0x12AB SWAP5 PUSH2 0x1E27 DUP4 PUSH2 0x2C5F JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH1 0x20 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH2 0x1DF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x671 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x1EAC PUSH2 0x342A JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E69 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH2 0x1ECF DUP3 PUSH1 0x40 PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x2990 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x20BC JUMPI PUSH2 0x1EE4 DUP2 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 SLOAD PUSH1 0x3 SWAP5 DUP6 SHL SHR AND SWAP3 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP3 PUSH1 0x24 DUP2 DUP10 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1814 JUMPI PUSH0 SWAP3 PUSH2 0x208D JUMPI JUMPDEST POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x2084 JUMPI JUMPDEST PUSH2 0x2077 JUMPI PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP8 DUP3 PUSH1 0x4 DUP2 DUP11 GAS STATICCALL DUP1 ISZERO PUSH2 0x1814 JUMPI PUSH2 0x1F8D SWAP4 PUSH1 0xFF DUP12 SWAP3 PUSH2 0x1F75 SWAP6 PUSH0 SWAP2 PUSH2 0x205A JUMPI POP AND SWAP3 PUSH2 0x3576 JUMP JUMPDEST SWAP2 PUSH2 0x3CA PUSH2 0x1F87 PUSH1 0x4 SLOAD SWAP3 SLOAD DUP4 PUSH2 0x29E8 JUMP JUMPDEST DUP5 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP6 SWAP2 SWAP3 SWAP1 DUP8 DUP2 PUSH1 0x44 DUP2 PUSH0 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x1814 JUMPI PUSH2 0x2005 SWAP8 DUP10 SWAP7 PUSH0 SWAP4 PUSH2 0x1FD8 SWAP4 PUSH2 0x203D JUMPI JUMPDEST POP PUSH1 0xC SLOAD AND SWAP4 PUSH2 0x29E8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP5 DUP6 SWAP3 DUP4 SWAP2 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x1814 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x2020 JUMPI JUMPDEST POP JUMPDEST ADD PUSH2 0x1ED1 JUMP JUMPDEST PUSH2 0x2036 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x49F JUMPI PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP DUP5 PUSH2 0x2018 JUMP JUMPDEST PUSH2 0x2053 SWAP1 DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x49F JUMPI PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP DUP13 PUSH2 0x1FCD JUMP JUMPDEST PUSH2 0x2071 SWAP2 POP DUP13 DUP14 RETURNDATASIZE LT PUSH2 0x62B JUMPI PUSH2 0x61D DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP14 PUSH2 0x32A JUMP JUMPDEST POP POP POP POP PUSH1 0x1 SWAP2 POP PUSH2 0x201A JUMP JUMPDEST POP ADDRESS DUP7 EQ PUSH2 0x1F3B JUMP JUMPDEST SWAP1 SWAP2 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x20B5 JUMPI JUMPDEST PUSH2 0x20A5 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI MLOAD SWAP1 DUP9 PUSH2 0x1F31 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x209B JUMP JUMPDEST PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 PUSH2 0x20EB DUP5 PUSH2 0x6AC DUP2 CALLER PUSH2 0x3624 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F29 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH1 0x20 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x671 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2179 PUSH2 0x342A JUMP JUMPDEST PUSH2 0x2181 PUSH2 0x3466 JUMP JUMPDEST SWAP1 PUSH2 0x3CA PUSH2 0x21A2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 DUP5 SLOAD SWAP3 DUP4 SWAP2 DUP6 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0xE8D4A51000 SWAP1 SWAP3 DIV PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 DUP10 AND GAS CALL DUP1 ISZERO PUSH2 0x1814 JUMPI PUSH2 0x24C9 JUMPI JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP5 AND SWAP2 DUP8 DUP3 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1814 JUMPI PUSH0 SWAP3 PUSH2 0x249A JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP3 DUP9 SWAP1 DUP5 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x1814 JUMPI PUSH0 SWAP4 PUSH2 0x246B JUMPI JUMPDEST POP ISZERO PUSH2 0x241B JUMPI DUP5 GT PUSH2 0x23D6 JUMPI DUP4 GT PUSH2 0x2391 JUMPI CALLER ISZERO PUSH2 0xCB7 JUMPI PUSH2 0x230B DUP6 SWAP4 PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 PUSH2 0x22FF DUP5 DUP9 PUSH2 0x22AF PUSH2 0x2314 SWAP8 PUSH2 0x2351 SWAP12 SLOAD PUSH2 0x3459 JUMP JUMPDEST SWAP1 SSTORE CALLER PUSH0 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E69 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EE9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP11 CALLER SWAP4 LOG3 PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x3 SLOAD SWAP1 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 PUSH2 0x295A JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x7 SLOAD AND SWAP1 PUSH1 0xC SLOAD AND PUSH0 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1814 JUMPI PUSH2 0x2373 JUMPI JUMPDEST PUSH1 0x1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F29 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE STOP JUMPDEST DUP2 PUSH2 0x2389 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x49F JUMPI PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x2360 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436865636B2074686520746F6B656E20616C6C6F77616E636500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555344432062616C616E636520697320696E73756666696369656E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C2042414C554E4920737570706C792063616E6E6F74206265207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x726F PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2493 JUMPI JUMPDEST PUSH2 0x2483 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI MLOAD SWAP2 DUP9 PUSH2 0x225B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2479 JUMP JUMPDEST SWAP1 SWAP2 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x24C2 JUMPI JUMPDEST PUSH2 0x24B2 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI MLOAD SWAP1 DUP9 PUSH2 0x2227 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x24A8 JUMP JUMPDEST PUSH2 0x24DF SWAP1 DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x49F JUMPI PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP DUP7 PUSH2 0x21F6 JUMP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH2 0x24FF PUSH2 0x2744 JUMP JUMPDEST PUSH2 0x2507 PUSH2 0x33F2 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH2 0x2542 PUSH2 0x2744 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x1E50 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1E38 JUMPI PUSH2 0x2565 CALLER PUSH2 0x2C5F JUMP JUMPDEST DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH2 0x25C1 PUSH2 0x2744 JUMP JUMPDEST PUSH2 0x25C9 PUSH2 0x33F2 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH1 0x40 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD DUP3 PUSH0 PUSH2 0x2619 DUP4 PUSH2 0x290F JUMP JUMPDEST SWAP3 DUP4 DUP4 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 DUP7 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH0 EQ PUSH2 0x268F JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x2648 JUMPI JUMPDEST POP POP PUSH2 0x1317 SWAP3 POP SUB DUP4 PUSH2 0x280A JUMP JUMPDEST DUP6 SWAP3 POP PUSH0 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E29 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x2677 JUMPI POP POP PUSH2 0x1317 SWAP4 POP DUP3 ADD ADD DUP6 DUP1 PUSH2 0x263A JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x265F JUMP JUMPDEST SWAP3 POP SWAP4 POP POP PUSH2 0x1317 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP6 DUP1 PUSH2 0x263A JUMP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH32 0xBEA1B31142AE4B1F4EFAD240349036D718B7950D246C127768097CCF602FC7E0 PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x26F0 PUSH2 0x33F2 JUMP JUMPDEST DUP1 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x671 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x671 JUMPI PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 SWAP2 DUP2 SWAP1 DUP5 ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x671 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x671 JUMPI JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x671 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x671 JUMPI JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x671 JUMPI JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x671 JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x671 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1861 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1861 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1861 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1861 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x671 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x285D DUP3 PUSH2 0x282B JUMP JUMPDEST SWAP3 PUSH2 0x286B PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x280A JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x671 JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x671 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x671 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x671 JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x28DB JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x28CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1861 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x293D JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2929 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x291E JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x902 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2964 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x671 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x671 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2997 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x125B9CDD59999A58DA595B9D08109053 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x671 JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x671 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x902 JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x671 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x671 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2A1B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2BB937B7339039B2B73232B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2A56 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x416D6F756E74206973203 PUSH1 0xAC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2A90 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742042616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2AD3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53776170204661696C65642C20547279204275726E2829000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x20 DUP2 DUP4 AND DUP2 DUP6 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x1814 JUMPI PUSH0 SWAP6 PUSH2 0x2C30 JUMPI JUMPDEST POP DUP2 DUP5 PUSH1 0xE SLOAD AND SWAP2 PUSH1 0x64 DUP7 PUSH1 0x7 SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH2 0xBB8 PUSH1 0x44 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1814 JUMPI PUSH0 SWAP3 PUSH2 0x2C13 JUMPI JUMPDEST POP POP PUSH2 0x2BA5 DUP5 DUP5 PUSH1 0xD SLOAD AND DUP5 PUSH2 0x3985 JUMP JUMPDEST DUP3 AND ISZERO DUP4 ISZERO ISZERO DUP2 ISZERO DUP1 PUSH2 0x2C0C JUMPI JUMPDEST ISZERO PUSH2 0x2BD8 JUMPI POP POP SWAP1 PUSH2 0x2BD6 SWAP3 PUSH2 0x2BCF SWAP3 ADDRESS SWAP3 PUSH1 0x7 SLOAD AND SWAP1 PUSH2 0x3AD3 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x2ACC JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP3 SWAP2 DUP2 PUSH2 0x2C04 JUMPI JUMPDEST POP PUSH2 0x2BEB JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x2BD6 SWAP3 PUSH2 0x2BCF SWAP3 DUP3 PUSH1 0x8 SLOAD AND ADDRESS SWAP4 PUSH1 0x7 SLOAD AND SWAP2 PUSH2 0x3BDD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2BE1 JUMP JUMPDEST POP DUP1 PUSH2 0x2BB3 JUMP JUMPDEST PUSH2 0x2C29 SWAP3 POP DUP1 RETURNDATASIZE LT PUSH2 0x592 JUMPI PUSH2 0x584 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2B94 JUMP JUMPDEST SWAP1 SWAP5 POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2C58 JUMPI JUMPDEST PUSH2 0x2C48 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI MLOAD SWAP4 PUSH0 PUSH2 0x2B50 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2C3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2CAB JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH0 DUP5 ISZERO PUSH2 0x3344 JUMPI PUSH1 0x20 PUSH0 SWAP6 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP9 DUP2 SWAP4 PUSH4 0x9B76A5CD PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP5 DUP6 ISZERO PUSH2 0x1814 JUMPI PUSH0 SWAP6 PUSH2 0x3323 JUMPI JUMPDEST POP DUP3 MLOAD SWAP2 PUSH2 0x2D29 PUSH2 0x2D13 DUP5 PUSH2 0x28F8 JUMP JUMPDEST SWAP4 PUSH2 0x2D21 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x280A JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH2 0x28F8 JUMP JUMPDEST PUSH1 0x1F NOT SWAP6 SWAP1 DUP7 ADD CALLDATASIZE PUSH1 0x20 DUP7 ADD CALLDATACOPY DUP5 MLOAD SWAP6 PUSH2 0x2D5B PUSH2 0x2D45 DUP9 PUSH2 0x28F8 JUMP JUMPDEST SWAP8 PUSH2 0x2D53 PUSH1 0x40 MLOAD SWAP10 DUP11 PUSH2 0x280A JUMP JUMPDEST DUP1 DUP10 MSTORE PUSH2 0x28F8 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP9 ADD CALLDATACOPY PUSH0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x2E20 JUMPI PUSH1 0x24 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2D82 DUP3 DUP10 PUSH2 0x2C97 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD ISZERO PUSH2 0x2D9B DUP3 DUP9 PUSH2 0x2C97 JUMP JUMPDEST MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2DB0 DUP4 DUP11 PUSH2 0x2C97 JUMP JUMPDEST MLOAD AND PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x1814 JUMPI PUSH0 SWAP1 PUSH2 0x2DED JUMPI JUMPDEST PUSH1 0x1 SWAP3 POP PUSH2 0x2DE6 DUP3 DUP11 PUSH2 0x2C97 JUMP JUMPDEST MSTORE ADD PUSH2 0x2D64 JUMP JUMPDEST POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2E18 JUMPI JUMPDEST DUP2 PUSH2 0x2E07 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI PUSH1 0x1 SWAP2 MLOAD PUSH2 0x2DD8 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2DFA JUMP JUMPDEST POP SWAP2 SWAP6 SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO PUSH2 0x671 JUMPI PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH4 0xEEDC3C5 PUSH1 0xE4 SHL DUP3 MSTORE PUSH1 0x44 DUP3 ADD PUSH1 0x40 PUSH1 0x4 DUP5 ADD MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x64 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x64 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x32D1 JUMPI POP POP POP POP SWAP2 DUP2 PUSH0 DUP2 PUSH2 0x2E91 DUP3 SWAP7 PUSH1 0x3 NOT DUP4 DUP3 SUB ADD PUSH1 0x24 DUP5 ADD MSTORE DUP12 PUSH2 0x28BC JUMP JUMPDEST SUB SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x1814 JUMPI PUSH2 0x32BE JUMPI JUMPDEST POP DUP5 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x32B6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2EC7 DUP3 DUP7 PUSH2 0x2C97 JUMP JUMPDEST MLOAD AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x32AB JUMPI DUP9 SWAP2 PUSH2 0x3279 JUMPI JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0xBB8 PUSH1 0x44 DUP4 ADD MSTORE SWAP6 SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP3 PUSH1 0x64 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x324D JUMPI DUP12 SWAP3 PUSH2 0x3258 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP6 PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP8 MSTORE DUP4 PUSH1 0x4 DUP9 ADD MSTORE PUSH1 0x24 DUP8 ADD MSTORE PUSH2 0x1F4 PUSH1 0x44 DUP8 ADD MSTORE PUSH1 0x20 DUP7 PUSH1 0x64 DUP2 DUP5 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x324D JUMPI DUP12 SWAP7 PUSH2 0x322C JUMPI JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x7 SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP5 MSTORE DUP5 PUSH1 0x4 DUP6 ADD MSTORE DUP1 PUSH1 0x24 DUP6 ADD MSTORE PUSH2 0x1F4 PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x20 DUP5 PUSH1 0x64 DUP2 DUP7 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x3221 JUMPI DUP14 SWAP5 PUSH2 0x31FF JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP4 MSTORE DUP10 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH2 0xBB8 PUSH1 0x44 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x31F4 JUMPI DUP13 SWAP3 PUSH2 0x31D3 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP7 SWAP1 PUSH2 0x31C0 JUMPI JUMPDEST POP DUP6 ISZERO PUSH2 0x31AD JUMPI JUMPDEST POP DUP5 ISZERO PUSH2 0x319A JUMPI JUMPDEST POP PUSH2 0x302D DUP4 DUP8 PUSH2 0x2C97 JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x3193 JUMPI JUMPDEST PUSH2 0x3184 JUMPI JUMPDEST PUSH2 0x304F PUSH2 0x3048 DUP5 DUP11 PUSH2 0x2C97 JUMP JUMPDEST MLOAD DUP4 PUSH2 0x29E8 JUMP JUMPDEST SWAP4 ISZERO PUSH2 0x311A JUMPI POP PUSH2 0x3060 DUP3 DUP9 PUSH2 0x2C97 JUMP JUMPDEST MLOAD LT PUSH2 0x3071 JUMPI JUMPDEST PUSH1 0x1 SWAP2 POP ADD PUSH2 0x2EAC JUMP JUMPDEST PUSH1 0x20 PUSH2 0x3086 PUSH2 0x230B PUSH2 0x30D7 SWAP5 PUSH1 0x3 SLOAD SWAP1 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3098 DUP5 DUP10 PUSH2 0x2C97 JUMP JUMPDEST MLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP5 DUP6 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 DUP3 SWAP1 DUP12 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x310F JUMPI PUSH1 0x1 SWAP3 PUSH2 0x30F0 JUMPI JUMPDEST POP PUSH2 0x3067 JUMP JUMPDEST PUSH2 0x3108 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x49F JUMPI PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP PUSH0 PUSH2 0x30EA JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP4 SWAP8 SWAP3 SWAP7 POP SWAP2 SWAP5 POP PUSH1 0x20 SWAP4 POP DUP6 SWAP3 PUSH1 0x44 SWAP3 POP DUP4 SWAP2 POP DUP6 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3178 JUMPI POP PUSH2 0x315D JUMPI POP JUMP JUMPDEST PUSH2 0x3175 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x49F JUMPI PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x318D DUP2 PUSH2 0x3D36 JUMP JUMPDEST POP PUSH2 0x303B JUMP JUMPDEST POP DUP4 PUSH2 0x3036 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP4 POP PUSH0 PUSH2 0x3022 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP5 POP PUSH0 PUSH2 0x301A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP6 POP PUSH0 PUSH2 0x3012 JUMP JUMPDEST PUSH2 0x31ED SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x592 JUMPI PUSH2 0x584 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x2FFE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP5 POP PUSH2 0x321A SWAP1 DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x592 JUMPI PUSH2 0x584 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x2FC4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP16 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x3246 SWAP2 SWAP7 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x592 JUMPI PUSH2 0x584 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST SWAP5 PUSH0 PUSH2 0x2F7E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x3272 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x592 JUMPI PUSH2 0x584 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x2F45 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x32A3 JUMPI JUMPDEST DUP2 PUSH2 0x3294 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI MLOAD PUSH0 PUSH2 0x2EF4 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3287 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x32C9 SWAP2 SWAP6 POP PUSH2 0x27DC JUMP JUMPDEST PUSH0 SWAP4 PUSH0 PUSH2 0x2EA9 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 PUSH2 0x3313 DUP2 SWAP3 PUSH1 0x63 NOT DUP12 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH1 0x40 PUSH1 0x60 SWAP2 DUP8 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND DUP5 MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP6 ADD MSTORE ADD MLOAD SWAP2 DUP2 PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x2720 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP7 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x2E6B JUMP JUMPDEST PUSH2 0x333D SWAP2 SWAP6 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x592 JUMPI PUSH2 0x584 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST SWAP4 PUSH0 PUSH2 0x2D03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1059D95B9D08199858DD1BDC9E481B9BDD081CD95D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x33DA JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EA9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EA9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x3412 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F29 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x2 DUP2 SLOAD EQ PUSH2 0x3447 JUMPI PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x902 JUMPI JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 SLOAD JUMPDEST DUP1 DUP3 LT PUSH2 0x3478 JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x3483 DUP4 PUSH2 0x3D01 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP1 DUP3 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3513 JUMPI POP PUSH0 SWAP3 PUSH2 0x34DF JUMPI JUMPDEST POP POP SWAP2 PUSH2 0x34D1 PUSH2 0x34D7 SWAP3 PUSH1 0x1 SWAP5 PUSH2 0x3787 JUMP JUMPDEST SWAP1 PUSH2 0x3459 JUMP JUMPDEST SWAP3 ADD SWAP1 PUSH2 0x346C JUMP JUMPDEST SWAP1 DUP1 SWAP5 SWAP3 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x350C JUMPI JUMPDEST PUSH2 0x34F7 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI SWAP2 MLOAD PUSH2 0x34D1 PUSH2 0x34D7 PUSH2 0x34BF JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x34ED JUMP JUMPDEST MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3523 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C20737570706C792063616E6E6F74206265207A65726F0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x4D DUP2 GT PUSH2 0x902 JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x3585 DUP5 ISZERO ISZERO PUSH2 0x351C JUMP JUMPDEST PUSH1 0x12 DUP2 GT PUSH2 0x35DF JUMPI PUSH1 0x12 DUP2 LT ISZERO PUSH2 0x35D0 JUMPI PUSH1 0x12 SUB SWAP2 PUSH1 0x12 DUP4 GT PUSH2 0x902 JUMPI PUSH2 0x35C8 PUSH2 0x3CA SWAP3 PUSH2 0x35BC PUSH2 0x35C2 PUSH2 0x35CD SWAP8 PUSH2 0x35BC DUP9 PUSH2 0x3568 JUMP JUMPDEST SWAP1 PUSH2 0x295A JUMP JUMPDEST SWAP6 PUSH2 0x3568 JUMP JUMPDEST PUSH2 0x2947 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP PUSH2 0x35CD SWAP3 SWAP2 PUSH2 0x3CA SWAP2 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20646563696D616C732073686F756C64206265203C3D2031380000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x36C9 JUMPI DUP2 PUSH0 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E69 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP5 DUP3 DUP7 LT PUSH2 0x3698 JUMPI POP DUP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EE9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH0 SWAP6 SWAP7 PUSH1 0x20 SWAP4 DUP7 DUP9 MSTORE DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP2 SLOAD SUB SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x36C9 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0xCB7 JUMPI DUP3 PUSH0 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E69 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP2 DUP4 DUP4 LT PUSH2 0x3754 JUMPI POP SWAP2 DUP1 PUSH1 0x20 SWAP3 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EE9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 DUP7 PUSH0 MSTORE DUP5 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE PUSH1 0x4 SWAP5 SWAP4 SWAP2 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 PUSH1 0x20 SWAP1 DUP2 DUP7 DUP10 DUP2 DUP7 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x1814 JUMPI PUSH0 SWAP7 PUSH2 0x3966 JUMPI JUMPDEST POP DUP1 PUSH1 0x7 SLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE DUP3 DUP6 DUP11 DUP2 DUP6 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x1814 JUMPI PUSH0 SWAP6 PUSH2 0x3947 JUMPI JUMPDEST POP DUP2 DUP5 EQ PUSH2 0x3923 JUMPI SWAP1 PUSH1 0x64 DUP4 SWAP3 PUSH1 0x9 SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x802431FB PUSH1 0xE0 SHL DUP5 MSTORE DUP14 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH0 PUSH1 0x44 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 SWAP2 PUSH0 SWAP4 PUSH2 0x38F3 JUMPI JUMPDEST POP POP PUSH2 0x3830 JUMPI POP PUSH0 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0xFF DUP1 SWAP2 SWAP3 AND SWAP4 AND SWAP3 DUP1 DUP5 EQ PUSH2 0x38C2 JUMPI DUP4 SUB PUSH1 0xFF DUP2 GT PUSH2 0x38AF JUMPI PUSH1 0xFF AND SWAP5 PUSH1 0x4D DUP7 GT PUSH2 0x389C JUMPI POP PUSH1 0x12 PUSH8 0xDE0B6B3A7640000 SWAP5 SWAP6 PUSH1 0xA EXP SWAP4 LT PUSH2 0x3884 JUMPI PUSH2 0x3880 SWAP3 PUSH2 0x387A SWAP2 PUSH2 0x2947 JUMP JUMPDEST SWAP1 PUSH2 0x2947 JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH2 0x3896 PUSH2 0x3880 SWAP5 PUSH2 0x387A SWAP4 PUSH2 0x2947 JUMP JUMPDEST SWAP3 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x11 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP3 SWAP4 SWAP1 SWAP2 POP PUSH5 0xE8D4A51000 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x389C JUMPI POP PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x3880 SWAP2 PUSH2 0x2947 JUMP JUMPDEST SWAP1 DUP1 SWAP3 SWAP4 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x391C JUMPI JUMPDEST PUSH2 0x390B DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI MLOAD SWAP1 PUSH0 DUP1 PUSH2 0x3821 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3901 JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP3 SWAP1 POP PUSH5 0xE8D4A51000 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x389C JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x395F SWAP2 SWAP6 POP DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x62B JUMPI PUSH2 0x61D DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST SWAP4 PUSH0 PUSH2 0x37E2 JUMP JUMPDEST PUSH2 0x397E SWAP2 SWAP7 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x62B JUMPI PUSH2 0x61D DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST SWAP5 PUSH0 PUSH2 0x37C0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x20 SWAP6 SWAP3 SWAP5 SWAP3 SWAP4 DUP2 AND SWAP3 SWAP2 DUP7 DUP2 PUSH1 0x44 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3A98 JUMPI SWAP1 DUP6 SWAP2 PUSH0 SWAP2 PUSH2 0x3AA2 JUMPI JUMPDEST POP LT PUSH2 0x39DC JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP5 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL SWAP2 DUP3 DUP3 MSTORE DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH0 PUSH1 0x24 DUP3 ADD MSTORE DUP7 DUP2 PUSH1 0x44 DUP2 PUSH0 DUP9 GAS CALL DUP1 ISZERO PUSH2 0x3A98 JUMPI DUP8 SWAP5 SWAP3 PUSH2 0x3A43 SWAP8 SWAP7 SWAP5 SWAP3 PUSH0 SWAP3 PUSH2 0x3A7B JUMPI JUMPDEST POP DUP7 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP5 DUP6 SWAP3 DUP4 SWAP2 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3513 JUMPI POP PUSH2 0x3A5D JUMPI JUMPDEST DUP1 DUP1 DUP1 DUP1 PUSH2 0x39D4 JUMP JUMPDEST DUP2 PUSH2 0x3A73 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x49F JUMPI PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP PUSH0 DUP1 PUSH2 0x3A54 JUMP JUMPDEST PUSH2 0x3A91 SWAP1 DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x49F JUMPI PUSH2 0x490 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP PUSH0 PUSH2 0x3A17 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP9 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x3ACC JUMPI JUMPDEST PUSH2 0x3ABB DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI DUP5 SWAP1 MLOAD PUSH0 PUSH2 0x39CD JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3AB1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x100 DUP4 ADD DUP4 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1861 JUMPI PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB SWAP4 DUP5 DUP1 SWAP3 AND DUP5 MSTORE DUP2 PUSH1 0x20 DUP6 ADD SWAP7 AND DUP7 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 PUSH2 0xBB8 DUP5 MSTORE DUP3 PUSH1 0x60 DUP7 ADD SWAP3 AND DUP3 MSTORE PUSH1 0x80 DUP6 ADD SWAP1 TIMESTAMP DUP3 MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 PUSH0 DUP4 MSTORE DUP5 PUSH1 0xE0 DUP9 ADD SWAP5 PUSH0 DUP7 MSTORE DUP2 PUSH0 SLOAD AND SWAP8 DUP3 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 DUP14 SWAP13 DUP14 PUSH4 0x414BF389 PUSH1 0xE0 SHL SWAP1 MSTORE MLOAD AND PUSH1 0x4 DUP14 ADD MSTORE MLOAD AND PUSH1 0x24 DUP12 ADD MSTORE MLOAD PUSH3 0xFFFFFF AND PUSH1 0x44 DUP11 ADD MSTORE MLOAD AND PUSH1 0x64 DUP9 ADD MSTORE MLOAD PUSH1 0x84 DUP8 ADD MSTORE MLOAD PUSH1 0xA4 DUP7 ADD MSTORE MLOAD PUSH1 0xC4 DUP6 ADD MSTORE MLOAD AND PUSH1 0xE4 DUP4 ADD MSTORE GAS SWAP3 PUSH0 PUSH2 0x104 SWAP3 PUSH1 0x20 SWAP6 CALL SWAP1 DUP2 ISZERO PUSH2 0x1814 JUMPI PUSH0 SWAP2 PUSH2 0x3BAE JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3BD5 JUMPI JUMPDEST DUP2 PUSH2 0x3BC9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x280A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x671 JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3BBC JUMP JUMPDEST SWAP4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 PUSH1 0x40 MLOAD SWAP4 PUSH1 0x20 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT DUP1 SWAP4 PUSH1 0x60 SHL AND DUP8 DUP8 ADD MSTORE DUP3 PUSH2 0x177 PUSH1 0xEB SHL SWAP2 DUP3 PUSH1 0x34 DUP10 ADD MSTORE PUSH1 0x60 SHL AND PUSH1 0x37 DUP8 ADD MSTORE PUSH1 0x4B DUP7 ADD MSTORE PUSH1 0x60 SHL AND PUSH1 0x4E DUP5 ADD MSTORE PUSH1 0x42 DUP4 MSTORE PUSH1 0x80 DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP5 DUP2 LT DUP5 DUP3 GT OR PUSH2 0x1861 JUMPI PUSH2 0x120 DUP6 ADD SWAP4 DUP5 GT DUP2 DUP6 LT OR PUSH2 0x1861 JUMPI PUSH0 PUSH2 0x3CB3 SWAP2 DUP8 SWAP6 PUSH1 0x40 MSTORE DUP7 DUP2 MSTORE PUSH1 0xA0 DUP8 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP7 AND DUP2 MSTORE PUSH2 0x100 PUSH1 0xC0 DUP10 ADD SWAP9 TIMESTAMP DUP11 MSTORE PUSH1 0xE0 DUP2 ADD SWAP7 DUP8 MSTORE ADD DUP4 DUP2 MSTORE DUP7 DUP5 SLOAD AND SWAP6 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP8 DUP9 SWAP7 PUSH4 0xC04B8D59 PUSH1 0xE0 SHL DUP9 MSTORE DUP13 PUSH1 0x4 DUP10 ADD MSTORE MLOAD PUSH1 0xA0 PUSH1 0x24 DUP10 ADD MSTORE PUSH1 0xC4 DUP9 ADD SWAP1 PUSH2 0x2720 JUMP JUMPDEST SWAP5 MLOAD AND PUSH1 0x44 DUP7 ADD MSTORE MLOAD PUSH1 0x64 DUP6 ADD MSTORE MLOAD PUSH1 0x84 DUP5 ADD MSTORE MLOAD PUSH1 0xA4 DUP4 ADD MSTORE SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x1814 JUMPI PUSH0 SWAP3 PUSH2 0x3CE3 JUMPI POP POP SWAP1 JUMP JUMPDEST SWAP1 DUP1 SWAP3 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3CFA JUMPI JUMPDEST PUSH2 0x3BC9 DUP2 DUP4 PUSH2 0x280A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3CF0 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x2CAB JUMPI PUSH1 0x5 PUSH0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD ISZERO PUSH0 EQ PUSH2 0x3D92 JUMPI PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x1861 JUMPI DUP1 PUSH1 0x1 PUSH2 0x3D69 SWAP3 ADD PUSH1 0x5 SSTORE PUSH2 0x3D01 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP4 DUP3 SHL SWAP2 PUSH0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH1 0x5 SLOAD SWAP1 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3F49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x3DB3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x3DEC JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x3DDA JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x3E1F JUMPI JUMPDEST PUSH2 0x3DFD JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x3DF5 JUMP INVALID 0x2A 0xE0 DUP11 DUP15 0x29 0x25 EXTCODEHASH PUSH10 0xAC5D979A101956AB8F8D SWAP14 PUSH30 0xED63FA7A83B16FC47648EAB052C63247E1F47DB19D5CE0460030C497F067 0xCA 0x4C 0xEB 0xF7 SHL 0xA9 DUP15 0xEA 0xDA 0xBE KECCAK256 0xBA 0xCE SUB MSTORE 0xC6 ORIGIN SELFBALANCE 0xE1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE0052C63247E1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE049016D09D72 0xD4 0xF 0xDA 0xE2 REVERT DUP13 0xEA 0xC6 0xB6 0x23 0x4C PUSH24 0x6214FD39C1CD1E609A0528C19930052C63247E1F47DB19D TLOAD 0xE0 CHAINID STOP ADDRESS 0xC4 SWAP8 CREATE PUSH8 0xCA4CEBF71BA98EEA 0xDA 0xBE KECCAK256 0xBA 0xCE MUL 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF CHAINID LOG2 DUP1 RETURNDATACOPY MSIZE LOG4 0xDE 0x4E PUSH27 0x4C574B1243F25977AC4C77D5A1A4A609B5394CEBB4A2AA9B779B17 TIMESTAMP 0x2D 0xD 0xF9 0x22 0x23 ADD DUP12 ORIGIN 0xB4 0xD1 STATICCALL CHAINID 0xE0 PUSH18 0x723D6817E2486D003BECC55F00F0C57E1684 0xD CREATE BLOCKHASH CALL POP DUP9 0xDC 0x2F DUP2 INVALID CODECOPY SHR CODECOPY 0x23 0xBE 0xC7 RETURNDATACOPY 0x23 0xA9 PUSH7 0x2EFC9C229C6A00 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB SLT 0xBB RETURNDATACOPY BLOCKHASH PUSH12 0xC4B45A050A8CC16A8E13F4D3 0xDF ISZERO 0x2D DUP1 PUSH24 0x863996D65CA8653C8264736F6C6343000819003300000000 ","sourceMap":"2271:23751:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2271:23751:17;;;;;19893:81;2271:23751;;;;;;;;19893:81;:::i;:::-;2271:23751;;;;;;;;;;;;;;;;;;;;;;;;;;3217:103:5;;;:::i;:::-;14265:43:17;14273:14;;;14265:43;:::i;:::-;14326:9;14358:3;14341:6;2271:23751;14337:19;;;;;5053:18:24;;;:::i;:::-;2271:23751:17;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;-1:-1:-1;;;14499:38:17;;14531:4;2271:23751;14499:38;;2271:23751;;;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;;14499:38;2271:23751;;;;14499:38;;;;;;;;;;;14358:3;14558:21;;;14554:44;;14531:4;14619:22;;14615:36;;2271:23751;;-1:-1:-1;;;14687:32:17;;;2271:23751;;;14687:32;;;;;;;;;2271:23751;14687:32;;14760:74;14687:32;;;;;;14358:3;2271:23751;;14760:74;;:::i;:::-;14872:4;2271:23751;;;;;;;14855:22;;;14851:140;;2271:23751;;;;15040:14;2271:23751;;;;;;;;;;;;;;;;;;;15022:69;;;2271:23751;15022:69;;2271:23751;;;;15086:4;2271:23751;;;;15022:69;;;;;;;;;;;;;;14358:3;2271:23751;15152:15;2271:23751;;15136:13;2271:23751;;15152:15;;:::i;:::-;2271:23751;15189:18;2271:23751;;24991:48;14531:4;15248:65;14531:4;;2271:23751;;;;;15248:65;;:::i;:::-;2271:23751;24992:34;25003:22;2271:23751;;;;25003:22;;:::i;:::-;24992:34;;:::i;:::-;24991:48;:::i;:::-;2271:23751;;;;-1:-1:-1;;;15414:58:17;;;15445:10;2271:23751;15414:58;;2271:23751;;;;;;;;;;;;;;;;;15445:10;;2271:23751;;15414:58;;;;;;15532:26;15414:58;;;;15491:68;15414:58;;;;;;;15185:1051;2271:23751;;;;15522:8;2271:23751;;15532:26;;;:::i;:::-;2271:23751;;15491:68;;;-1:-1:-1;;;;;2271:23751:17;;;;15491:68;;2271:23751;;;;;;;;;;;;;;;;;;;;;15491:68;;;;;;;;;;15578:49;15491:68;2271:23751;15491:68;;;;15185:1051;15586:13;;;15578:49;:::i;:::-;2271:23751;14326:9;;15491:68;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;2271:23751;;;;;;;;;15414:58;;;;;;;;;;;;;:::i;:::-;;;;;;2271:23751;;;;;;;;;15185:1051;24991:48;2271:23751;15691:206;2271:23751;;15763:7;2271:23751;;;;;;15868:10;;15691:206;;:::i;24991:48::-;2271:23751;;;;-1:-1:-1;;;16001:58:17;;;15868:10;2271:23751;16001:58;;2271:23751;;;;;;;;;;;;;;;;;15868:10;;2271:23751;;16001:58;;;;;;16119:29;16001:58;;;;16078:71;16001:58;;;;;;;2271:23751;;;;16109:8;2271:23751;;16119:29;;;:::i;16078:71::-;;;;;;;;;;16168:52;16078:71;2271:23751;16078:71;;;;16176:16;;;16168:52;:::i;:::-;15185:1051;;15022:69;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;14851:140;2271:23751;;-1:-1:-1;;;14898:50:17;;14920:10;2271:23751;14898:50;;2271:23751;;;;;;;;;;-1:-1:-1;2271:23751:17;-1:-1:-1;2271:23751:17;;-1:-1:-1;2271:23751:17;;-1:-1:-1;2271:23751:17;;;;-1:-1:-1;14898:50:17;;;;;;;2271:23751;14898:50;;;;14851:140;14967:8;;;14898:50;;;;;;;;;;;;;:::i;:::-;;;;;;2271:23751;;;;;;;;;14687:32;;;;;;;-1:-1:-1;14687:32:17;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;2271:23751;;;;;;;;;14615:36;14643:8;;;;;;2271:23751;14643:8;;;14499:38;;;;;;;;;;;;;;;;:::i;:::-;;;2271:23751;;;;;14499:38;;;2271:23751;;;;14499:38;;;;;14337:19;;16302:28;;14337:19;16275:10;16263;;16275;:::i;:::-;2271:23751;;;16263:10;2271:23751;;;;;;;;;;;;;;;;;16302:28;;;;2271:23751;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;;;;;;;-1:-1:-1;;2271:23751:17;;;;2357:1:0;2271:23751:17;;:::i;:::-;2303:62:0;;:::i;:::-;2357:1;:::i;:::-;2271:23751:17;;;;;;;;;-1:-1:-1;;2271:23751:17;;;;;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;3217:103:5;3282:1;3217:103;;;;:::i;:::-;3282:1;:::i;:::-;1805;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;22599:55;22607:15;;;22599:55;:::i;:::-;22685:17;;:::i;:::-;6396:4;2271:23751;;;;;;;;;;;22725:34;;;;:::i;2271:23751::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2271:23751:17;;;;;;:::i;:::-;5162:20:3;2271:23751:17;;:::i;:::-;5162:20:3;;:::i;:::-;2271:23751:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2271:23751:17;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;-1:-1:-1;;;;;2271:23751:17;;4726:16:1;;:34;;;;2271:23751:17;4805:1:1;4790:16;:50;;;;2271:23751:17;4855:13:1;:30;;;;2271:23751:17;4851:91:1;;;4805:1;-1:-1:-1;;;;;2271:23751:17;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;;;4301:16:1;4979:67;;2271:23751:17;;;;;;:::i;:::-;;;;-1:-1:-1;;;2271:23751:17;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;2271:23751:17;;;;6893:76:1;;:::i;:::-;;;:::i;:::-;2271:23751:17;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;4805:1:1;2271:23751:17;12178:17:3;;;2271:23751:17;2895:7:3;2271:23751:17;;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;4805:1:1;2271:23751:17;12178:17:3;;;2271:23751:17;2895:7:3;2271:23751:17;;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;6893:76:1;;:::i;:::-;;;:::i;:::-;6961:1;4011:10:17;6961:1:1;:::i;:::-;6893:76;;:::i;:::-;;;:::i;:::-;4805:1;-1:-1:-1;;;;;;;;;;;2271:23751:17;6893:76:1;;:::i;:::-;4117:4:17;9066:21:3;9062:91;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;4124:7;;2271:23751;;;;;;;;;;;8364:50:24;2271:23751:17;;;;4117:4;2271:23751;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;4117:4;8621:25:3;;4160:3:17;4145:18;2271:23751;4185:2;2895:7:3;2271:23751:17;4219:5;2271:23751;;;;;;;;;;;;;;;;;;;4235:12;2271:23751;;-1:-1:-1;;;;;2271:23751:17;;;;;;;4235:12;2271:23751;;;4258:18;2271:23751;;;4258:18;2271:23751;;;4287:22;2271:23751;;;4287:22;2271:23751;;;4345:26;2271:23751;;;4345:26;2271:23751;;;4382:28;2271:23751;;;4382:28;2271:23751;;;8364:50:24;:::i;:::-;;2271:23751:17;;4483:24;2271:23751;;;4483:24;2271:23751;4011:10;2271:23751;4518:21;2271:23751;;;4518:21;2271:23751;;;;4301:16:1;5066:101;;2271:23751:17;;5066:101:1;-1:-1:-1;;;2271:23751:17;-1:-1:-1;;;;;;;;;;;2271:23751:17;;-1:-1:-1;;;;;;;;;;;2271:23751:17;5142:14:1;2271:23751:17;;;4805:1:1;2271:23751:17;;5142:14:1;2271:23751:17;;9062:91:3;2271:23751:17;;-1:-1:-1;;;9110:32:3;;2271:23751:17;;9110:32:3;;2271:23751:17;;;9110:32:3;2271:23751:17;;;;-1:-1:-1;2271:23751:17;;;;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;-1:-1:-1;;2271:23751:17;;;;;;4805:1:1;2271:23751:17;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;;;12178:17:3;;2271:23751:17;;2895:7:3;2271:23751:17;;;;;;;;;;;;;;;;;;;;;;;;4805:1:1;2271:23751:17;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;;;;;;;;;;;-1:-1:-1;4805:1:1;2271:23751:17;;;;-1:-1:-1;;;;;;;;;;;;2271:23751:17;;;-1:-1:-1;;;2271:23751:17;;;;;;;;;;;;-1:-1:-1;2271:23751:17;;;;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;-1:-1:-1;;2271:23751:17;;;;;;4805:1:1;2271:23751:17;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;;;12178:17:3;;2271:23751:17;;2895:7:3;2271:23751:17;;;;;;;;;;;;;;;;;;;;;;;;4805:1:1;2271:23751:17;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;;;;;;;;;;;-1:-1:-1;4805:1:1;2271:23751:17;;;;-1:-1:-1;;;;;;;;;;;;2271:23751:17;;;-1:-1:-1;;;2271:23751:17;;;;;;;;4979:67:1;-1:-1:-1;;2271:23751:17;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;4979:67:1;;4851:91;2271:23751:17;;-1:-1:-1;;;4908:23:1;;2271:23751:17;;4908:23:1;4855:30;4872:13;;;4855:30;;;4790:50;4818:4;4810:25;:30;;-1:-1:-1;4790:50:1;;4726:34;2271:23751:17;;;;;;4301:16:1;;-1:-1:-1;4726:34:1;;2271:23751:17;;;;;;;;;;;;;;2581:23;2271:23751;;;;;;;;;;;;;;;;;;;;2727:22;2271:23751;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;;;;;;;;;-1:-1:-1;;2271:23751:17;;;;;;:::i;:::-;2303:62:0;;:::i;:::-;2271:23751:17;;;;;;-1:-1:-1;;;;;2271:23751:17;;6935:23;2271:23751;;;6935:23;2271:23751;;;;;;;;;;-1:-1:-1;;2271:23751:17;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;;;;;;;6431:44:1;;;;;2271:23751:17;6427:105:1;;;;2271:23751:17;;;8364:50:24;2271:23751:17;-1:-1:-1;;;2271:23751:17;6656:20:1;2271:23751:17;;;;;;;;5428:3;5413:18;2271:23751;5453:2;5442:13;2271:23751;5487:5;2271:23751;;;;;;;;;;;;;;;;;;;5503:12;2271:23751;;-1:-1:-1;;;;;2271:23751:17;;;;;;;5503:12;2271:23751;;;5526:18;2271:23751;;;5526:18;2271:23751;;;5555:22;2271:23751;;;5555:22;2271:23751;;;5613:26;2271:23751;;;5613:26;2271:23751;;;5650:28;2271:23751;;;5650:28;2271:23751;;;8364:50:24;:::i;:::-;;2271:23751:17;;5751:24;2271:23751;;;5751:24;2271:23751;5797:10;2271:23751;5786:21;2271:23751;;;5786:21;2271:23751;-1:-1:-1;;;2271:23751:17;;;;;;;;;;;6656:20:1;2271:23751:17;;6431:44:1;2271:23751:17;;6450:25:1;;;-1:-1:-1;6431:44:1;;;;2271:23751:17;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;2271:23751:17;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;2271:23751:17;;;;;19203:4;19116:54;19016:17;;:::i;:::-;19117:35;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;19117:35;:::i;19116:54::-;2271:23751;;;;;;;;;;;;;;;;;;;;;;25996:6;2271:23751;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2271:23751:17;;;;4911:5:3;2271:23751:17;;:::i;:::-;;;966:10:4;;4911:5:3;:::i;:::-;2271:23751:17;;;;;;;;;;;;;;;;;;;;;;;;3400:9:3;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;2271:23751:17;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2271:23751:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;;;;;;;;;;;;;;;2701:19;2271:23751;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2784:27;2271:23751;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;;;;;;;;;;;;;;;2756:21;2271:23751;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;;;;;;;;;-1:-1:-1;;2271:23751:17;;;;;22725:34;-1:-1:-1;;;;;;;;;;;2271:23751:17;22599:55;22607:15;;;22599:55;:::i;:::-;22726:18;22685:17;;:::i;:::-;2271:23751;;22726:18;:::i;2271:23751::-;;;;;;;;;;;;;2303:62:0;;:::i;:::-;-1:-1:-1;;;;;;;;;;;2271:23751:17;;-1:-1:-1;;;;;;2271:23751:17;;;;;;;-1:-1:-1;;;;;2271:23751:17;3975:40:0;2271:23751:17;;3975:40:0;2271:23751:17;;;;;;;;;-1:-1:-1;;2271:23751:17;;;;;;;;-1:-1:-1;;;;;2271:23751:17;;:::i;:::-;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;;;;;;;;;;;;;;;;;;;;2850:23;2271:23751;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;;;;;;;;;-1:-1:-1;;2271:23751:17;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;4882:4:18;4852:52;4882:4;4860:10;:27;;4852:52;:::i;:::-;4915:34;4923:10;;;4915:34;:::i;:::-;2271:23751:17;;-1:-1:-1;;;4968:36:18;;4860:10;2271:23751:17;4968:36:18;;2271:23751:17;;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;;;;4968:36:18;;;;;;;;;;;;2271:23751:17;4960:79:18;4968:46;;;;4960:79;:::i;:::-;2271:23751:17;;-1:-1:-1;;;5050:62:18;;4860:10;2271:23751:17;5050:62:18;;2271:23751:17;4882:4:18;2271:23751:17;;;;;;;;;;;;;;;;;;;4882:4:18;;5050:62;;;;;;;5195:55;5050:62;;;;5170:6;5050:62;;;2271:23751:17;;;;5170:6:18;;:::i;:::-;5195:55;:::i;5050:62::-;;;;;;-1:-1:-1;5050:62:18;;;;;;:::i;:::-;;;;;4968:36;;;;;;;;;;;;;;;;:::i;:::-;;;2271:23751:17;;;;;4960:79:18;2271:23751:17;;4968:36:18;;;;;;;2271:23751:17;;;;;-1:-1:-1;;2271:23751:17;;;;;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;2271:23751:17;;;;;;;;;;;;;;;;;;;;;;18533:10;2271:23751;18607:4;2271:23751;-1:-1:-1;;;;;2271:23751:17;;;;;;;18513:99;;;;;2271:23751;;-1:-1:-1;;;18513:99:17;;2271:23751;;18513:99;;2271:23751;;;;;;;;;;;;;-1:-1:-1;2271:23751:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2271:23751:17;;;;;;;;;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;;;;;;;;;;;18513:99;;;;;;;;;;;2271:23751;;;18513:99;;;;;:::i;:::-;2271:23751;18513:99;2271:23751;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2271:23751:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2271:23751:17;;;;5111:6:2;-1:-1:-1;;;;;2271:23751:17;5102:4:2;5094:23;5090:145;;2271:23751:17;;;1327:66:8;2271:23751:17;;;5090:145:2;2271:23751:17;;-1:-1:-1;;;5195:29:2;;2271:23751:17;;5195:29:2;2271:23751:17;;;-1:-1:-1;;2271:23751:17;;;;;;:::i;:::-;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;4688:6:2;2271:23751:17;;4679:4:2;4671:23;;;:120;;;;2271:23751:17;4654:251:2;;;2303:62:0;;:::i;:::-;2271:23751:17;;-1:-1:-1;;;6151:52:2;;2271:23751:17;;;;;;;;;;;6151:52:2;;2271:23751:17;;6151:52:2;;;2271:23751:17;-1:-1:-1;6147:437:2;;2271:23751:17;;-1:-1:-1;;;6513:60:2;;2271:23751:17;6513:60:2;;2271:23751:17;;;;;6513:60:2;6147:437;1327:66:8;;;;6245:40:2;;;;6241:120;;2263:29:8;;;:34;2259:119;;2271:23751:17;;-1:-1:-1;;;;;;2271:23751:17;;;;;;;;2922:27:8;-1:-1:-1;;2922:27:8;2271:23751:17;;2964:15:8;:11;;4255:25:12;2271:23751:17;4255:25:12;;;4297:55;4255:25;;;;;;;;2271:23751:17;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;4297:55:12;:::i;2271:23751:17:-;;;-1:-1:-1;4297:55:12;:::i;2960:148:8:-;6648:9;;;;;6644:70;;2271:23751:17;6644:70:8;-1:-1:-1;;;6684:19:8;;2271:23751:17;;6684:19:8;2259:119;2271:23751:17;;-1:-1:-1;;;2320:47:8;;2271:23751:17;2320:47:8;;2271:23751:17;;;;;2320:47:8;6241:120:2;2271:23751:17;;;;6312:34:2;;;;;;2271:23751:17;6312:34:2;;2271:23751:17;6312:34:2;6151:52;;;;;;;;;;;;;;;;;:::i;:::-;;;2271:23751:17;;;;;6151:52:2;;;;;;;;;4671:120;2271:23751:17;;;1327:66:8;2271:23751:17;;4749:42:2;;4671:120;;;2271:23751:17;;;;;;-1:-1:-1;;2271:23751:17;;;;3217:103:5;;:::i;:::-;12160:6:17;2271:23751;;12206:10;;;;;;2271:23751;-1:-1:-1;;;;;;;;;;;2271:23751:17;;12218:3;5053:18:24;12291:5:17;5053:18:24;2271:23751:17;5053:18:24;;:::i;:::-;2271:23751:17;;;;;;;;;;;;12291:5;:::i;:::-;2271:23751;12191:13;;2271:23751;;;;;;-1:-1:-1;;2271:23751:17;;;;;2547:27;2271:23751;;;;;;;;;;;;;-1:-1:-1;;2271:23751:17;;;;;;;4122:2:3;2271:23751:17;;;;;;;;;-1:-1:-1;;2271:23751:17;;;;;;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;2271:23751:17;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;3256:4:18;3226:52;3256:4;3234:10;:27;;3226:52;:::i;:::-;3289:34;3297:10;;;3289:34;:::i;:::-;2271:23751:17;;-1:-1:-1;;;3342:36:18;;3234:10;2271:23751:17;3342:36:18;;2271:23751:17;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;;;;;3342:36:18;;;;;;;;2271:23751:17;3342:36:18;;;2271:23751:17;3334:79:18;3342:46;;;;3334:79;:::i;:::-;2271:23751:17;;-1:-1:-1;;;3424:62:18;;3234:10;2271:23751:17;3424:62:18;;2271:23751:17;3256:4:18;2271:23751:17;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3424:62:18;;;;;;3569:45;3424:62;3544:6;3424:62;;;;;2271:23751:17;;;;;3544:6:18;;:::i;:::-;3569:45;:::i;3424:62::-;;;;;;;;;;;;;:::i;:::-;;;;;3342:36;;;;;;;;;;;;;;;;:::i;:::-;;;2271:23751:17;;;;;3334:79:18;2271:23751:17;;3342:36:18;;;;;;;2271:23751:17;;;;;;-1:-1:-1;;2271:23751:17;;;;;20363:39;2271:23751;;:::i;:::-;;;20363:39;:::i;2271:23751::-;;;;;;-1:-1:-1;;2271:23751:17;;;;;20639:17;;:::i;2271:23751::-;;;;;;-1:-1:-1;;2271:23751:17;;;;;;:::i;:::-;16617:12;2271:23751;;;-1:-1:-1;;;16595:58:17;;-1:-1:-1;;;;;2271:23751:17;;;;16595:58;;2271:23751;;;;;;;;;;;;;16595:58;;;;;;;2271:23751;16595:58;2271:23751;16595:58;;;2271:23751;;;;;;;;;16595:58;;;;;;;;;;;;;;;:::i;:::-;;;;;2271:23751;;;;;;-1:-1:-1;;2271:23751:17;;;;;;:::i;:::-;;;:::i;:::-;;;5162:20:3;;;;:::i;:::-;966:10:4;2271:23751:17;;;;;;;;12178:17:3;;;12158:37;;12154:310;;2271:23751:17;6461:5:3;;;;:::i;12154:310::-;12215:24;;;12211:130;;-1:-1:-1;;;;;2271:23751:17;;11389:19:3;11385:89;;966:10:4;11487:21:3;11483:90;;11582:20;6461:5;11582:20;;;;:::i;:::-;966:10:4;2271:23751:17;;;;;;;;;12154:310:3;;11483:90;2271:23751:17;;-1:-1:-1;;;11531:31:3;;2271:23751:17;;11531:31:3;;2271:23751:17;;;11531:31:3;11385:89;2271:23751:17;;-1:-1:-1;;;11431:32:3;;2271:23751:17;;11431:32:3;;2271:23751:17;;;11431:32:3;12211:130;2271:23751:17;;-1:-1:-1;;;12266:60:3;;966:10:4;2271:23751:17;12266:60:3;;2271:23751:17;;;;;;;;;;;;;;;12266:60:3;2271:23751:17;;;;;;;;;;;;;;;3217:103:5;;;:::i;:::-;13173:10:17;2271:23751;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;13155:64;2271:23751;;;;;13163:35;;13155:64;:::i;:::-;2271:23751;13269:3;13252:6;2271:23751;13248:19;;;;;5053:18:24;;;:::i;:::-;2271:23751:17;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;;;;13410:38;;13442:4;2271:23751;13410:38;;2271:23751;13410:38;;2271:23751;13410:38;;;;;;;;;2271:23751;13410:38;;;13269:3;13469:22;;;:48;;;;13269:3;13465:62;;2271:23751;;-1:-1:-1;;;13563:32:17;;2271:23751;13563:32;2271:23751;;;13563:32;;;;;;;24991:48;13563:32;2271:23751;13563:32;;13626:74;13563:32;2271:23751;13563:32;;;2271:23751;;13626:74;;:::i;:::-;2271:23751;24992:34;25003:22;2271:23751;;;;25003:22;;:::i;:::-;24992:34;;:::i;24991:48::-;2271:23751;;-1:-1:-1;;;13789:50:17;;;13173:10;2271:23751;13789:50;;2271:23751;;;;;;;;;;;;13173:10;2271:23751;;;-1:-1:-1;2271:23751:17;13789:50;;;;;;13854:56;13789:50;;;2271:23751;13789:50;13887:22;13789:50;;;13269:3;2271:23751;13877:8;2271:23751;;13887:22;;:::i;:::-;2271:23751;;13854:56;;;-1:-1:-1;;;;;2271:23751:17;;;;13854:56;;2271:23751;;;;;;;;;;;;;;;;;;;;;13854:56;;;;;;;;;;2271:23751;13854:56;;;13269:3;;13237:9;2271:23751;13237:9;;13854:56;;;;;;;;;;;;;:::i;:::-;;;;;13789:50;;;;;;;;;;;;;:::i;:::-;;;;;13563:32;;;;;;;-1:-1:-1;13563:32:17;;;;;;:::i;:::-;;;;13465:62;13519:8;;;;2271:23751;13519:8;;;;13469:48;13442:4;;13495:22;;13469:48;;13410:38;;;;;;;;;;;;;;;;;:::i;:::-;;;2271:23751;;;;;13410:38;;;;;;;;;13248:19;13977:28;;13248:19;13950:10;13173;;13950;:::i;13977:28::-;;;;2271:23751;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;;;;;-1:-1:-1;;2271:23751:17;;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;;;;;;;;;;-1:-1:-1;;2271:23751:17;;;;;-1:-1:-1;;;;;;;;;;;;;;;;2271:23751:17;;;;;;;;;;;;;;;;;;;;;;;3217:103:5;;:::i;:::-;16938:17:17;;:::i;:::-;4322:14:3;17039:35:17;17038:54;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;17039:35;;;;;:::i;17038:54::-;17110:4;2271:23751;;;-1:-1:-1;;;17103:73:17;;17129:10;2271:23751;17103:73;;2271:23751;17149:4;2271:23751;;;;17171:4;2271:23751;;;;;;;;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;;;;;;;-1:-1:-1;;2271:23751:17;;17103:73;;;;;;;;2271:23751;-1:-1:-1;17110:4:17;2271:23751;;;-1:-1:-1;;;17205:34:17;;17129:10;2271:23751;17205:34;;2271:23751;;;;;17205:34;2271:23751;;;;17205:34;;;;;;;2271:23751;17205:34;;;2271:23751;-1:-1:-1;2271:23751:17;;-1:-1:-1;;;17268:49:17;;17129:10;2271:23751;17268:49;;2271:23751;17149:4;2271:23751;;;;;;;;;;;;;17268:49;;;;;;;2271:23751;17268:49;;;2271:23751;17336:18;;2271:23751;;17412:30;-1:-1:-1;2271:23751:17;;17494:30;-1:-1:-1;2271:23751:17;;17129:10;9066:21:3;9062:91;;17678:32:17;2271:23751;;17617:33;;2271:23751;;7761:23:3;17677:46:17;2271:23751;17734:45;2271:23751;;7761:23:3;:::i;:::-;2271:23751:17;;17129:10;2271:23751;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;17129:10:17;;8621:25:3;;2271:23751:17;;;17129:10;2271:23751;;;;;;;;;;;;;;;;;17617:33;;;;17702:8;2271:23751;17678:32;;:::i;:::-;2271:23751;;17677:46;;:::i;:::-;2271:23751;;17110:4;2271:23751;;;17765:8;2271:23751;;;;;;;;;;;;;;17734:45;;2271:23751;17734:45;;2271:23751;;;;;;;;;;;;;;;;;;;;;17734:45;;;;;;;;;;;2271:23751;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;17734:45;;;;;;-1:-1:-1;17734:45:17;;;;;;:::i;:::-;;;;;;2271:23751;;;-1:-1:-1;;;2271:23751:17;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2271:23751:17;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2271:23751:17;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2271:23751:17;;;;;;;17268:49;;;;;;;;;;;;;;;;;:::i;:::-;;;2271:23751;;;;;17268:49;;;;;;;;;17205:34;;;;;;;;;;;;;;;;;:::i;:::-;;;2271:23751;;;;;17205:34;;;;;;;;;17103:73;;;;;;;;;;;;;:::i;:::-;;;;;2271:23751;;;;;;-1:-1:-1;;2271:23751:17;;;;;;:::i;:::-;2303:62:0;;:::i;:::-;7597:28:17;2271:23751;;-1:-1:-1;;;;;;2271:23751:17;-1:-1:-1;;;;;2271:23751:17;;;;;;;;;;;;;;;;;-1:-1:-1;;2271:23751:17;;;;;;:::i;:::-;;;966:10:4;;11389:19:3;11385:89;;-1:-1:-1;;;;;2271:23751:17;;11487:21:3;;11483:90;;11582:20;966:10:4;11582:20:3;:::i;:::-;2271:23751:17;;;;;;;;;;;;;;;11663:31:3;2271:23751:17;966:10:4;11663:31:3;;2271:23751:17;;;;;;;;;;;;;-1:-1:-1;;2271:23751:17;;;;;;:::i;:::-;2303:62:0;;:::i;:::-;7265:27:17;2271:23751;;-1:-1:-1;;;;;;2271:23751:17;-1:-1:-1;;;;;2271:23751:17;;;;;;;;;;;;;;;;;-1:-1:-1;;2271:23751:17;;;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2271:23751:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2271:23751:17;;;;6657:21;2271:23751;;;2303:62:0;;:::i;:::-;2271:23751:17;6623:18;2271:23751;;;;;;6657:21;2271:23751;;;;;;;-1:-1:-1;;2271:23751:17;;;;2818:25;2271:23751;-1:-1:-1;;;;;2271:23751:17;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2271:23751:17;;;;;;;;-1:-1:-1;;2271:23751:17;;;;:::o;:::-;;;;-1:-1:-1;;;;;2271:23751:17;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;2271:23751:17;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;2271:23751:17;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;2271:23751:17;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;2271:23751:17;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;2271:23751:17;;;;;;:::o;:::-;;;-1:-1:-1;;;;;2271:23751:17;;;;;;:::o;:::-;-1:-1:-1;;;;;2271:23751:17;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;:::o;:::-;-1:-1:-1;;;;;2271:23751:17;;;;;;-1:-1:-1;;2271:23751:17;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;2271:23751:17;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;2271:23751:17;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;2271:23751:17;;;;;;;;;;;;-1:-1:-1;;;2271:23751:17;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;2271:23751:17;;;;;;;;;;;;-1:-1:-1;;;2271:23751:17;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;2271:23751:17;;;;;;;;;;;;-1:-1:-1;;;2271:23751:17;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;2271:23751:17;;;;;;;;;;;;-1:-1:-1;;;2271:23751:17;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;2271:23751:17;;;;;;;;;;;;;;;;;;;;10902:937;2271:23751;;-1:-1:-1;;;10982:38:17;;11014:4;10982:38;;;2271:23751;;-1:-1:-1;;;;;2271:23751:17;10982:38;2271:23751;;;10982:38;2271:23751;;;;10982:38;;;;;;;-1:-1:-1;10982:38:17;;;10902:937;2271:23751;;;11064:14;2271:23751;;;;;11103:4;2271:23751;;;;;;;;;;;;;11046:69;;10982:38;11046:69;;2271:23751;;;;;11110:4;2271:23751;;;;11046:69;;;;;;;-1:-1:-1;11046:69:17;;;10902:937;2271:23751;;11172:17;2271:23751;;11156:13;2271:23751;;11172:17;;:::i;:::-;2271:23751;;11256:18;11220:21;;;11256:18;;;:33;;10902:937;11252:580;;;11014:4;;;11415:56;11014:4;11333:67;11014:4;;2271:23751;11103:4;2271:23751;;11333:67;;:::i;:::-;11423:20;;11415:56;:::i;:::-;10902:937::o;11252:580::-;11493:33;;;;;;11252:580;11489:343;;;11252:580;;;10902:937::o;11489:343::-;11768:52;2271:23751;11566:187;2271:23751;;11630:7;2271:23751;;11014:4;2271:23751;11103:4;2271:23751;;11566:187;;:::i;11493:33::-;;;;;;11256;;;;;11046:69;;;;;;-1:-1:-1;11046:69:17;;;;;;:::i;:::-;;;;;10982:38;;;;;;;;;;;;;;;;;:::i;:::-;;;2271:23751;;;;;10982:38;;;;;;;;;2271:23751;-1:-1:-1;;;;;2271:23751:17;;;;;5162:13:3;2271:23751:17;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;8262:2105;8395:12;2271:23751;-1:-1:-1;;;;;2271:23751:17;;8262:2105;;;-1:-1:-1;8387:35:17;;2271:23751;;8475:64;-1:-1:-1;2271:23751:17;;;;;;;;;;;8475:64;;8528:10;8475:64;;;2271:23751;8475:64;;;;;;;-1:-1:-1;8475:64:17;;;8262:2105;2271:23751;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;-1:-1:-1;;2271:23751:17;;;;;8475:64;2271:23751;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;8475:64;2271:23751;;;-1:-1:-1;8744:3:17;2271:23751;;8719:23;;;;;2271:23751;;-1:-1:-1;;;;;8823:15:17;2271:23751;8823:15;;:::i;:::-;2271:23751;;-1:-1:-1;2271:23751:17;4378:12:24;8475:64:17;2271:23751;;-1:-1:-1;2271:23751:17;;4378:24:24;8764:75:17;;;;:::i;:::-;2271:23751;8475:64;-1:-1:-1;;;;;8880:15:17;;;;:::i;:::-;2271:23751;;;;;;;;;;;8873:48;;8915:4;8475:64;8873:48;;2271:23751;8873:48;;;;;;-1:-1:-1;8873:48:17;;;8744:3;2271:23751;8854:67;;;;;;:::i;:::-;2271:23751;;8704:13;;8873:48;;8475:64;8873:48;;8475:64;8873:48;;;;;;8475:64;8873:48;;;:::i;:::-;;;2271:23751;;;;;;;8873:48;;;;;-1:-1:-1;8873:48:17;;8719:23;-1:-1:-1;8719:23:17;;;;;-1:-1:-1;;;;;2271:23751:17;;8945:50;;;;2271:23751;;;;;;;8945:50;;2271:23751;;;;8475:64;8945:50;;2271:23751;;;;;;;;;;8475:64;2271:23751;;8815:6;2271:23751;;;;;;;-1:-1:-1;2271:23751:17;;;;;;;;;;;;;-1:-1:-1;2271:23751:17;;;;;;;;;;;;;;;;:::i;:::-;8945:50;;-1:-1:-1;;;;;2271:23751:17;8945:50;;;;;;;;2271:23751;9013:13;;9053:3;2271:23751;;9028:23;;;;;-1:-1:-1;;;;;9089:15:17;;;;:::i;:::-;2271:23751;;;;;;;;9137:38;;8915:4;8475:64;9137:38;;2271:23751;8475:64;9137:38;2271:23751;9137:38;;;;;;;;;;;;;9053:3;-1:-1:-1;9233:14:17;2271:23751;9272:7;2271:23751;;;-1:-1:-1;;;9215:72:17;;8475:64;9215:72;;2271:23751;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;;;9282:4;2271:23751;;;;;;;;;8475:64;2271:23751;;;;9215:72;;;;;;;;;;;9053:3;2271:23751;;;;;;;9326:71;;;8475:64;9326:71;;2271:23751;;;;;9393:3;2271:23751;;;;8475:64;9326:71;2271:23751;9326:71;;;;;;;;;;;;;9053:3;2271:23751;;;;;;9491:4;2271:23751;;;;;;;;;9434:68;;;8475:64;9434:68;;2271:23751;;;;;;9393:3;2271:23751;;;;8475:64;9434:68;2271:23751;9434:68;;;;;;;;;;;;;9053:3;2271:23751;8475:64;2271:23751;;;;;;;;;;;9540:69;;;8475:64;9540:69;;2271:23751;;;;;9282:4;2271:23751;;;;9540:69;;;;;;;;;;;9053:3;-1:-1:-1;;;;;;2271:23751:17;9641:28;;;;;:76;;9053:3;9641:123;;;;;9053:3;9641:169;;;;;9053:3;9831:13;;;;;:::i;:::-;2271:23751;;;9831:26;;;9053:3;9827:110;;9053:3;9978:26;9988:16;;;;:::i;:::-;2271:23751;9978:26;;:::i;:::-;10025:10;;10021:126;;10177:16;;;;;:::i;:::-;2271:23751;-1:-1:-1;10163:186:17;;9053:3;2271:23751;9053:3;;2271:23751;9013:13;;10163:186;8475:64;10228:39;10229:25;10286:47;2271:23751;10246:8;2271:23751;10229:25;;:::i;10228:39::-;-1:-1:-1;;;;;10293:15:17;;;;:::i;:::-;2271:23751;10319:8;2271:23751;;;-1:-1:-1;;;10286:47:17;;-1:-1:-1;;;;;2271:23751:17;;;8475:64;10286:47;;2271:23751;;;;;;;;;;;;;;;;;;;;;;;;;;;;10286:47;;;;;;;;;;2271:23751;10286:47;;;10163:186;;;;10286:47;;;8475:64;10286:47;8475:64;10286:47;;;;;;;:::i;:::-;;;;;;2271:23751;;;;;;;;;10021:126;2271:23751;;-1:-1:-1;;;10056:50:17;;8528:10;8475:64;10056:50;;2271:23751;;;;;;;;;;;;-1:-1:-1;2271:23751:17;;-1:-1:-1;8475:64:17;;-1:-1:-1;2271:23751:17;;;;-1:-1:-1;2271:23751:17;;-1:-1:-1;2271:23751:17;;10056:50;;;;;;;;;;10125:7;:::o;10056:50::-;;;8475:64;10056:50;8475:64;10056:50;;;;;;;:::i;:::-;;10125:7::o;10056:50::-;2271:23751;;;;;;;;;;9827:110;8364:50:24;;;:::i;:::-;;9827:110:17;;9831:26;;;;;9641:169;-1:-1:-1;;;;;2271:23751:17;9785:25;;;-1:-1:-1;9641:169:17;;;:123;-1:-1:-1;;;;;2271:23751:17;9738:26;;;-1:-1:-1;9641:123:17;;;:76;-1:-1:-1;;;;;2271:23751:17;9690:27;;;-1:-1:-1;9641:76:17;;;9540:69;;;;;8475:64;9540:69;8475:64;9540:69;;;;;;;:::i;:::-;;;;;;2271:23751;;;;;;;;;9434:68;8475:64;9434:68;;;;;;;;;;;;;;;:::i;:::-;;;;;;2271:23751;;;;;;;;;9326:71;;;;;8475:64;9326:71;8475:64;9326:71;;;;;;;:::i;:::-;;;;;;2271:23751;;;;;;;;;9215:72;;;;;8475:64;9215:72;8475:64;9215:72;;;;;;;:::i;:::-;;;;;9137:38;;;8475:64;9137:38;;8475:64;9137:38;;;;;;8475:64;9137:38;;;:::i;:::-;;;2271:23751;;;;;9137:38;;;;;;-1:-1:-1;9137:38:17;;;2271:23751;;;;;;;;;9028:23;;;;;;;8262:2105::o;8945:50::-;;;;;;:::i;:::-;-1:-1:-1;8945:50:17;;;;2271:23751;;;;;;;;8475:64;2271:23751;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;8475:64;;;;;;;;;;;;;;;:::i;:::-;;;;;2271:23751;;;-1:-1:-1;;;2271:23751:17;;;;;;;;;;;;-1:-1:-1;;;2271:23751:17;;;;;;;3405:215:0;-1:-1:-1;;;;;2271:23751:17;;;;3489:22:0;;3485:91;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;-1:-1:-1;;;;;;2271:23751:17;;;;;;;;3975:40:0;-1:-1:-1;;3975:40:0;3405:215::o;3485:91::-;2271:23751:17;;-1:-1:-1;;;3534:31:0;;3509:1;3534:31;;;2271:23751:17;;;3534:31:0;2658:162;-1:-1:-1;;;;;;;;;;;2271:23751:17;-1:-1:-1;;;;;2271:23751:17;966:10:4;2717:23:0;2713:101;;2658:162::o;2713:101::-;2271:23751:17;;-1:-1:-1;;;2763:40:0;;966:10:4;2763:40:0;;;2271:23751:17;;;2763:40:0;3326:384:5;-1:-1:-1;;;;;;;;;;;1847:1:5;2271:23751:17;;3526:20:5;3522:88;;1847:1;2271:23751:17;;3326:384:5:o;3522:88::-;2271:23751:17;;-1:-1:-1;;;3569:30:5;;;;;2271:23751:17;;;;;;;;;;:::o;24247:434::-;2271:23751;;24365:6;2271:23751;24361:19;;;;;;24659:14;;24247:434;:::o;24382:3::-;5053:18:24;;;;;:::i;:::-;2271:23751:17;;;;;;;;;;;;;;;;;;24463:38;;24495:4;24463:38;;;2271:23751;24463:38;;;2271:23751;24463:38;;;;;;;;;;2271:23751;24463:38;;;24382:3;24548:40;;;;24603:32;24548:40;2271:23751;24548:40;;:::i;:::-;24603:32;;:::i;:::-;24382:3;2271:23751;24350:9;;;24463:38;;;;;;;;;;;;;;;;;:::i;:::-;;;2271:23751;;;;;;24548:40;24603:32;24463:38;;;;;;;;2271:23751;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;2271:23751:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;23238:822::-;;;;;23447:55;23455:15;;;23447:55;:::i;:::-;23538:2;23521:19;;2271:23751;;23538:2;23658:18;;23538:2;;;;2271:23751;;23538:2;2271:23751;;;;23784:43;23974:34;23725:26;23800;23710:42;23973:53;23725:26;;;;:::i;:::-;23710:42;;:::i;:::-;23800:26;;:::i;23784:43::-;23974:34;:::i;23973:53::-;23238:822;:::o;23654:290::-;-1:-1:-1;23973:53:17;;23860:28;23974:34;;;:::i;2271:23751::-;;;-1:-1:-1;;;2271:23751:17;;;;;;;;;;;;;;;;;;;;9522:206:3;;;-1:-1:-1;;;;;2271:23751:17;;;9592:21:3;;9588:89;;2271:23751:17;7621:546:3;2271:23751:17;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;7621:546:3;2271:23751:17;;7872:19:3;;;;7868:115;;2271:23751:17;;-1:-1:-1;;;;;;;;;;;2271:23751:17;7621:546:3;2271:23751:17;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;;;;;;;;8621:25:3;9522:206::o;7868:115::-;2271:23751:17;;-1:-1:-1;;;7918:50:3;;-1:-1:-1;;;;;2271:23751:17;;;;7918:50:3;;;2271:23751:17;;;;;;;;;;;;;;;12266:60:3;9588:89;2271:23751:17;;-1:-1:-1;;;9636:30:3;;9611:1;9636:30;;;2271:23751:17;;;9636:30:3;6868:300;;-1:-1:-1;;;;;2271:23751:17;;;;6951:18:3;;6947:86;;2271:23751:17;7046:16:3;;;7042:86;;2271:23751:17;7621:546:3;2271:23751:17;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;7621:546:3;2271:23751:17;;7872:19:3;;;;7868:115;;2271:23751:17;;;;;-1:-1:-1;;;;;;;;;;;2271:23751:17;;7621:546:3;2271:23751:17;;;;;7621:546:3;2271:23751:17;;;7621:546:3;2271:23751:17;;7621:546:3;2271:23751:17;;;;;;;;;;;;8621:25:3;6868:300::o;7868:115::-;2271:23751:17;;-1:-1:-1;;;7918:50:3;;-1:-1:-1;;;;;2271:23751:17;;;;7918:50:3;;;2271:23751:17;;;;;;;;-1:-1:-1;2271:23751:17;;;;;;;;12266:60:3;21286:815:17;2271:23751;;-1:-1:-1;;;21448:32:17;;;;;21286:815;2271:23751;;21286:815;-1:-1:-1;;;;;2271:23751:17;;;;21448:32;;;2271:23751;21448:32;2271:23751;;21448:32;;;;;;;-1:-1:-1;21448:32:17;;;21286:815;2271:23751;;21534:4;2271:23751;;;;;21511:40;;;;;;;;;;;;;;;-1:-1:-1;21511:40:17;;;21286:815;21568:22;;;;21564:48;;2271:23751;;;;21643:6;2271:23751;;;;;;;;;;;;;21629:65;;;;;2271:23751;;;;;-1:-1:-1;2271:23751:17;;;;21629:65;;;;;-1:-1:-1;21629:65:17;;;21286:815;-1:-1:-1;;21625:175:17;;-1:-1:-1;;;;;;;21780:8:17:o;21625:175::-;2271:23751;21734:12;;21625:175;2271:23751;;;21816:27;;;;21812:73;;2271:23751;;;;;;;;;;;;;;;;21983:2;22089:4;2271:23751;;;;21968:17;;21964:74;;22059:26;22071:13;;;;:::i;:::-;22059:26;;:::i;:::-;2271:23751;21286:815;:::o;21964:74::-;21996:15;;;21995:35;21996:15;22016:13;21996:15;;:::i;:::-;22016:13;;:::i;2271:23751::-;;;;;;-1:-1:-1;2271:23751:17;;;-1:-1:-1;2271:23751:17;;;;;;;-1:-1:-1;2271:23751:17;;;-1:-1:-1;2271:23751:17;21812:73;21863:4;;;;;;;2271:23751;;;;;;;;;;;;;;;21853:24;21881:4;21853:24;;;;:::i;21629:65::-;;;;;;;;;;;;;;;;;:::i;:::-;;;2271:23751;;;;;21629:65;;;;;;;;;;21564:48;21608:4;;;;;;;;;;2271:23751;;;;;;;;;;;;;;;21592:20;;:::o;21511:40::-;;;;;;;;;;;;;;;:::i;:::-;;;;;21448:32;;;;;;;;;;;;;;;:::i;:::-;;;;;7888:334:18;2271:23751:17;;;-1:-1:-1;;;8065:40:18;;8090:4;8065:40;;;2271:23751:17;-1:-1:-1;;;;;2271:23751:17;;;;;;;8065:40:18;;2271:23751:17;;8065:40:18;;2271:23751:17;;;;8065:40:18;2271:23751:17;;;;8065:40:18;;;;;;;;;;-1:-1:-1;8065:40:18;;;7888:334;8065:49;;8061:154;;7888:334;;;;;;;:::o;8061:154::-;2271:23751:17;;;;;8131:26:18;;;;2271:23751:17;;8065:40:18;8131:26;;2271:23751:17;-1:-1:-1;2271:23751:17;;;;8131:26:18;;2271:23751:17;8131:26:18;-1:-1:-1;8131:26:18;;;;;;;;;;8172:31;8131:26;;;;-1:-1:-1;8131:26:18;;;8061:154;-1:-1:-1;2271:23751:17;;8172:31:18;;;-1:-1:-1;;;;;2271:23751:17;;;8065:40:18;8172:31;;2271:23751:17;;;;;;;;;;;;;;;;;;;;8172:31:18;;;;;;;;;;;;;8061:154;;;;;;;8172:31;;;;;;-1:-1:-1;8172:31:18;;;;;;:::i;:::-;;;;;;8131:26;;;;;;;;;;;;;:::i;:::-;;;;;;2271:23751:17;;;-1:-1:-1;2271:23751:17;;;;;8065:40:18;;;;;;;;;;;;;;;;;;:::i;:::-;;;2271:23751:17;;;;;;;8065:40:18;;;;;;;;5648:635;;;;2271:23751:17;;;;;;;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;;;;;;;;;;;;;;5883:321:18;;;;2271:23751:17;;;;;5883:321:18;;2271:23751:17;5999:4:18;2271:23751:17;;5883:321:18;;;;2271:23751:17;;;;5883:321:18;;;6071:15;;2271:23751:17;;5883:321:18;;;2271:23751:17;;;5883:321:18;;;2271:23751:17;-1:-1:-1;2271:23751:17;;5883:321:18;;;;2271:23751:17;-1:-1:-1;2271:23751:17;;;-1:-1:-1;2271:23751:17;;;;;;;;;;;;;;;6224:51:18;;2271:23751:17;;6224:51:18;;;2271:23751:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6224:51:18;;-1:-1:-1;2271:23751:17;6224:51:18;5883:321;6224:51;;;;;;;-1:-1:-1;6224:51:18;;;6217:58;5648:635;:::o;6224:51::-;;;5883:321;6224:51;;5883:321;6224:51;;;;;;5883:321;6224:51;;;:::i;:::-;;;2271:23751:17;;;;;5648:635:18;:::o;6224:51::-;;;-1:-1:-1;6224:51:18;;6798:611;;;;;;;2271:23751:17;;7104:68:18;;2271:23751:17;-1:-1:-1;;;;;2271:23751:17;;;;;;7104:68:18;;;2271:23751:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7104:68:18;;;2271:23751:17;;;;-1:-1:-1;;;;;2271:23751:17;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2271:23751:17;;;;;;;;;;7054:284:18;;2271:23751:17;;;;;;;;;;7054:284:18;;;;7240:15;;2271:23751:17;;7054:284:18;;;2271:23751:17;;;7054:284:18;2271:23751:17;;;;;;;;;;;;;;;;;;;;7356:45:18;;;;;;2271:23751:17;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7356:45:18;;;;;;;;;-1:-1:-1;7356:45:18;;;7349:52;;6798:611;:::o;7356:45::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;2271:23751:17;13252:6;2271:23751;;;;;;13252:6;-1:-1:-1;2271:23751:17;;;;-1:-1:-1;2271:23751:17;:::o;2185:414:24:-;2271:23751:17;-1:-1:-1;2271:23751:17;4378:12:24;2271:23751:17;;;-1:-1:-1;2271:23751:17;;4378:24:24;2265:327;2271:23751:17;;;5718:6;2271:23751;-1:-1:-1;;;2271:23751:17;;;;;;4378:12:24;2271:23751:17;;;5718:6;2271:23751;;:::i;:::-;;;;;;;;;;12178:17:3;;;2271:23751:17;;;;;;;5718:6;2271:23751;;-1:-1:-1;2271:23751:17;4378:12:24;2271:23751:17;;;-1:-1:-1;2271:23751:17;;4378:12:24;2524:11;:::o;2265:327::-;2568:12;-1:-1:-1;2568:12:24;:::o;7084:141:1:-;2271:23751:17;-1:-1:-1;;;;;;;;;;;2271:23751:17;;;;7150:18:1;7146:73;;7084:141::o;7146:73::-;2271:23751:17;;-1:-1:-1;;;7191:17:1;;;;;4625:582:12;;4797:8;;-1:-1:-1;2271:23751:17;;5874:21:12;:17;;6046:142;;;;;;5870:383;2271:23751:17;;-1:-1:-1;;;6225:17:12;;;;;4793:408;2271:23751:17;;5045:22:12;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;2271:23751:17;;-1:-1:-1;;;5121:24:12;;-1:-1:-1;;;;;2271:23751:17;;;5121:24:12;;;2271:23751:17;;;5121:24:12;5045:49;5071:18;;;:23;5045:49;"},"gasEstimates":{"creation":{"codeDepositCost":"3257200","executionCost":"infinite","totalCost":"infinite"},"external":{"UPGRADE_INTERFACE_VERSION()":"1235","USDC()":"2948","WNATIVE()":"3146","_BPS_BASE()":"2902","_BPS_FEE()":"3144","_MAX_BPS_FEE()":"2635","agentFactory()":"2904","allowance(address,address)":"3526","approve(address,uint256)":"24448","balanceOf(address)":"infinite","burnERC20(uint256)":"infinite","burnUSDC(uint256)":"infinite","calculateTokenShare(uint256,uint256,uint256,uint256)":"infinite","callRebalance(address[],uint256[],address,address,uint256,address)":"infinite","changeAgentFactory(address)":"infinite","changeBpsFee(uint256)":"infinite","changeRebalancer(address)":"infinite","changeTreasury(address)":"infinite","decimals()":"510","execute((address,uint256,bytes)[],address[])":"infinite","getAgentAddress(address)":"infinite","getTokens()":"infinite","getUSDCShareValue(uint256)":"infinite","getVersion()":"infinite","initialize(address,address,address,address,address,address)":"infinite","liquidate(address)":"infinite","liquidateAll()":"infinite","mintWithUSDC(uint256)":"infinite","multiHopSwap(address,address,address,uint256,address)":"infinite","name()":"infinite","oracle()":"2882","owner()":"infinite","proxiableUUID()":"infinite","rebalancer()":"2271","reinitialize(address,address,address,address,address,address,uint64)":"infinite","renounceOwnership()":"infinite","requiredUSDCtoMint(uint256)":"infinite","singleSwap(address,address,uint256,address)":"infinite","symbol()":"infinite","tokenValuation(uint256,address)":"infinite","totalSupply()":"infinite","totalValuation()":"infinite","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"infinite","treasury()":"2794","unitPrice()":"infinite","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite","_calculateBaluniToUSDC(uint256)":"infinite","_calculateERC20Share(uint256,uint256,uint256,uint256)":"infinite","_calculateERC20Valuation(uint256,address)":"infinite","_calculateNetAmountAfterFee(uint256)":"infinite","_resize(uint256[] memory,uint256)":"infinite","_totalValuation()":"infinite"}},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","USDC()":"89a30271","WNATIVE()":"b381cf40","_BPS_BASE()":"85377188","_BPS_FEE()":"b9f5e617","_MAX_BPS_FEE()":"34decfc9","agentFactory()":"7df107ea","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burnERC20(uint256)":"1a168da2","burnUSDC(uint256)":"fe0a4dd1","calculateTokenShare(uint256,uint256,uint256,uint256)":"fe330a51","callRebalance(address[],uint256[],address,address,uint256,address)":"599f69f7","changeAgentFactory(address)":"0a38abab","changeBpsFee(uint256)":"06497cb9","changeRebalancer(address)":"0918281b","changeTreasury(address)":"b14f2a39","decimals()":"313ce567","execute((address,uint256,bytes)[],address[])":"eedc3c50","getAgentAddress(address)":"27d54a92","getTokens()":"aa6ca808","getUSDCShareValue(uint256)":"71ddcfb8","getVersion()":"0d8e6e2c","initialize(address,address,address,address,address,address)":"cc2a9a5b","liquidate(address)":"2f865568","liquidateAll()":"3c2066a9","mintWithUSDC(uint256)":"0cfc7386","multiHopSwap(address,address,address,uint256,address)":"5efaaebb","name()":"06fdde03","oracle()":"7dc0d1d0","owner()":"8da5cb5b","proxiableUUID()":"52d1902d","rebalancer()":"01d22ccd","reinitialize(address,address,address,address,address,address,uint64)":"b0d60ba0","renounceOwnership()":"715018a6","requiredUSDCtoMint(uint256)":"aa95d893","singleSwap(address,address,uint256,address)":"2d6bc8ea","symbol()":"95d89b41","tokenValuation(uint256,address)":"2bdd955a","totalSupply()":"18160ddd","totalValuation()":"295b9300","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","treasury()":"61d027b3","unitPrice()":"e73faa2d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"ChangeBpsFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"ChangeRewardPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct IBaluniV1Agent.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokensReturn\",\"type\":\"address[]\"}],\"name\":\"Execute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WNATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BPS_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_MAX_BPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"agentFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"burnERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"burnUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBaluni\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalERC20Balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baluniAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenDecimals\",\"type\":\"uint256\"}],\"name\":\"calculateTokenShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"callRebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agentFactory\",\"type\":\"address\"}],\"name\":\"changeAgentFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"changeBpsFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRebalancer\",\"type\":\"address\"}],\"name\":\"changeRebalancer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newTreasury\",\"type\":\"address\"}],\"name\":\"changeTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IBaluniV1Agent.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"tokensReturn\",\"type\":\"address[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getAgentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getUSDCShareValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wnative\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_1inchSpotAgg\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidateAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balAmountToMint\",\"type\":\"uint256\"}],\"name\":\"mintWithUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"multiHopSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wnative\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_1inchSpotAgg\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balAmountToMint\",\"type\":\"uint256\"}],\"name\":\"requiredUSDCtoMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"singleSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"tokenValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burnERC20(uint256)\":{\"details\":\"Burns a specified amount of BALUNI tokens from the caller's balance.\",\"params\":{\"burnAmount\":\"The amount of BALUNI tokens to burn.\"}},\"burnUSDC(uint256)\":{\"details\":\"Burns a specified amount of BAL tokens and performs token swaps on multiple tokens.\",\"params\":{\"burnAmount\":\"The amount of BAL tokens to burn.\"}},\"calculateTokenShare(uint256,uint256,uint256,uint256)\":{\"details\":\"Calculates the token share based on the total Baluni supply, total ERC20 balance, Baluni amount, and token decimals.\",\"params\":{\"baluniAmount\":\"The amount of Baluni tokens.\",\"tokenDecimals\":\"The number of decimals for the ERC20 token.\",\"totalBaluni\":\"The total supply of Baluni tokens.\",\"totalERC20Balance\":\"The total balance of the ERC20 token.\"},\"returns\":{\"_0\":\"The calculated token share.\"}},\"callRebalance(address[],uint256[],address,address,uint256,address)\":{\"details\":\"Calls the `rebalance` function of the `rebalancer` contract.\",\"params\":{\"assets\":\"An array of addresses representing the assets to rebalance.\",\"limit\":\"The maximum number of assets to rebalance.\",\"receiver\":\"The address of the receiver.\",\"sender\":\"The address of the sender.\",\"weights\":\"An array of uint256 values representing the weights of the assets.\"}},\"changeAgentFactory(address)\":{\"details\":\"Changes the address of the agent factory contract. Can only be called by the contract owner.\",\"params\":{\"_agentFactory\":\"The new address of the agent factory contract.\"}},\"changeBpsFee(uint256)\":{\"details\":\"Changes the basis points fee for the contract.\",\"params\":{\"_newFee\":\"The new basis points fee to be set.\"}},\"changeRebalancer(address)\":{\"details\":\"Changes the address of the rebalancer contract. Can only be called by the contract owner.\",\"params\":{\"_newRebalancer\":\"The new address of the rebalancer contract.\"}},\"changeTreasury(address)\":{\"details\":\"Changes the treasury address. Can only be called by the contract owner.\",\"params\":{\"_newTreasury\":\"The new treasury address.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"execute((address,uint256,bytes)[],address[])\":{\"details\":\"Executes a series of calls to a BaluniV1Agent contract and handles token returns.\",\"params\":{\"calls\":\"An array of IBaluniV1Agent.Call structs representing the calls to be executed.\",\"tokensReturn\":\"An array of addresses representing the tokens to be returned.\"}},\"getAgentAddress(address)\":{\"details\":\"Retrieves the agent address associated with a user.\",\"params\":{\"_user\":\"The user's address.\"},\"returns\":{\"_0\":\"The agent address.\"}},\"getTokens()\":{\"details\":\"Returns an array of addresses representing the tokens.\",\"returns\":{\"_0\":\"An array of addresses representing the tokens.\"}},\"getUSDCShareValue(uint256)\":{\"details\":\"Calculates the value of a given amount of Baluni tokens in USDC.\",\"params\":{\"amount\":\"The amount of Baluni tokens.\"},\"returns\":{\"_0\":\"The calculated value of the Baluni tokens in USDC.\"}},\"getVersion()\":{\"details\":\"Returns the version of the contract.\",\"returns\":{\"_0\":\"The version string.\"}},\"initialize(address,address,address,address,address,address)\":{\"details\":\"Initializes the BaluniV1Router contract. It sets the initial values for various variables and mints 1 ether to the contract's address. It also sets the USDC token address, WNATIVE token address, oracle address, Uniswap router address, and Uniswap factory address. Finally, it adds the USDC token address to the tokens set.\"},\"liquidate(address)\":{\"details\":\"Liquidates the specified token by swapping it for USDC.\",\"params\":{\"token\":\"The address of the token to be liquidated.\"}},\"liquidateAll()\":{\"details\":\"Liquidates all tokens in the contract. This function iterates through all the tokens in the contract and calls the `liquidate` function for each token. Can only be called by the contract owner.\"},\"mintWithUSDC(uint256)\":{\"details\":\"Mints a specified amount of BALUNI tokens in exchange for USDC.\",\"params\":{\"balAmountToMint\":\"The amount of BALUNI tokens to mint.\"}},\"multiHopSwap(address,address,address,uint256,address)\":{\"details\":\"Executes a multi-hop swap between three tokens using Uniswap.\",\"params\":{\"amount\":\"The amount of token0 to be swapped.\",\"receiver\":\"The address that will receive the swapped tokens.\",\"token0\":\"The address of the token to be swapped.\",\"token1\":\"The address of the intermediate token to be used for the swap.\",\"token2\":\"The address of the final token to be received.\"},\"returns\":{\"amountOut\":\"The amount of token2 received from the swap. The function requires that the caller has a sufficient balance of token0 and that the amount to be swapped is greater than 0. Also, the caller must have approved this contract to spend the amount of token0. The function transfers the amount of token0 to be swapped from the caller to this contract, then performs the swap using Uniswap. The swapped tokens are sent to the receiver's address. The function returns the amount of token2 received from the swap.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"reinitialize(address,address,address,address,address,address,uint64)\":{\"details\":\"Reinitializes the BaluniV1Router contract with the specified parameters.\",\"params\":{\"_1inchSpotAgg\":\"The address of the 1inch Spot Aggregator oracle contract.\",\"_uniFactory\":\"The address of the Uniswap factory contract.\",\"_uniRouter\":\"The address of the Uniswap router contract.\",\"_usdc\":\"The address of the USDC token contract.\",\"_wnative\":\"The address of the WNative token contract.\",\"version\":\"The version of the contract.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"requiredUSDCtoMint(uint256)\":{\"details\":\"Calculates the amount of USDC required to mint a given amount of BAL tokens.\",\"params\":{\"balAmountToMint\":\"The amount of BAL tokens to be minted.\"},\"returns\":{\"_0\":\"The amount of USDC required to mint the specified amount of BAL tokens.\"}},\"singleSwap(address,address,uint256,address)\":{\"details\":\"Executes a single swap between two tokens using Uniswap.\",\"params\":{\"amount\":\"The amount of token0 to be swapped.\",\"receiver\":\"The address that will receive the swapped tokens.\",\"token0\":\"The address of the token to be swapped.\",\"token1\":\"The address of the token to be received.\"},\"returns\":{\"amountOut\":\"The amount of token1 received from the swap. The function requires that the caller has a sufficient balance of token0 and that the amount to be swapped is greater than 0. Also, the caller must have approved this contract to spend the amount of token0. The function transfers the amount of token0 to be swapped from the caller to this contract, then performs the swap using Uniswap. The swapped tokens are sent to the receiver's address. The function returns the amount of token1 received from the swap.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"tokenValuation(uint256,address)\":{\"details\":\"Calculates the valuation of a given amount of a specific ERC20 token.\",\"params\":{\"amount\":\"The amount of the ERC20 token.\",\"token\":\"The address of the ERC20 token.\"},\"returns\":{\"_0\":\"The calculated valuation of the ERC20 token.\"}},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"totalValuation()\":{\"details\":\"Returns the total valuation of the Baluni ecosystem.\",\"returns\":{\"_0\":\"The total valuation of the Baluni ecosystem.\"}},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unitPrice()\":{\"details\":\"Returns the unit price of the token in USDC.\",\"returns\":{\"_0\":\"The unit price of the token in USDC.\"}},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burnERC20(uint256)\":{\"notice\":\"This function requires the caller to have a balance of at least `burnAmount` BAL tokens.The function also checks the USDC balance before burning the tokens.After burning the tokens, the function transfers a proportional share of each ERC20 token held by the contract to the caller.The share is calculated based on the total supply of BAL tokens, the balance of each ERC20 token, and the decimals of each token.Finally, the function emits a `Burn` event with the caller's address and the amount of tokens burned.\"},\"execute((address,uint256,bytes)[],address[])\":{\"notice\":\"This function requires the agentFactory to be set and creates a new agent if necessary.If a token is new and a Uniswap pool exists for it, the token is added to the tokens set.If no Uniswap pool exists for a token, the token balance is transferred back to the caller.\"},\"liquidate(address)\":{\"notice\":\"The contract must have sufficient approval to spend the specified token.If a pool exists for the token and USDC on Uniswap, a direct swap is performed.If no pool exists, a multi-hop swap is performed through the WNATIVE token.If the swap fails, the `burn` function should be called to handle the failed swap.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaluniV1Router.sol\":\"BaluniV1Router\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport {ContextUpgradeable} from \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport {IERC20Errors} from \\\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\\\";\\nimport {Initializable} from \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\\n    struct ERC20Storage {\\n        mapping(address account => uint256) _balances;\\n\\n        mapping(address account => mapping(address spender => uint256)) _allowances;\\n\\n        uint256 _totalSupply;\\n\\n        string _name;\\n        string _symbol;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ERC20\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\\n\\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\\n        assembly {\\n            $.slot := ERC20StorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        $._name = name_;\\n        $._symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            $._totalSupply += value;\\n        } else {\\n            uint256 fromBalance = $._balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                $._balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                $._totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                $._balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        $._allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\\n    struct ReentrancyGuardStorage {\\n        uint256 _status;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ReentrancyGuard\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\\n\\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\\n        assembly {\\n            $.slot := ReentrancyGuardStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if ($._status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        $._status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        return $._status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\\n\",\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"},\"contracts/BaluniV1Router.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\\r\\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\\r\\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol';\\r\\n\\r\\nimport './interfaces/IBaluniV1AgentFactory.sol';\\r\\nimport './interfaces/IBaluniV1Rebalancer.sol';\\r\\nimport './libs/EnumerableSetUpgradeable.sol';\\r\\nimport './BaluniV1Uniswapper.sol';\\r\\n\\r\\ncontract BaluniV1Router is\\r\\n    Initializable,\\r\\n    ERC20Upgradeable,\\r\\n    OwnableUpgradeable,\\r\\n    ReentrancyGuardUpgradeable,\\r\\n    UUPSUpgradeable,\\r\\n    BaluniV1Uniswapper\\r\\n{\\r\\n    struct Call {\\r\\n        address to;\\r\\n        uint256 value;\\r\\n        bytes data;\\r\\n    }\\r\\n\\r\\n    uint256 public _MAX_BPS_FEE;\\r\\n    uint256 public _BPS_FEE;\\r\\n    uint256 public _BPS_BASE;\\r\\n\\r\\n    EnumerableSetUpgradeable.AddressSet private tokens;\\r\\n    address public USDC;\\r\\n    address public WNATIVE;\\r\\n    address public oracle;\\r\\n    address public agentFactory;\\r\\n    address public rebalancer;\\r\\n    address public treasury;\\r\\n    address private uniswapRouter;\\r\\n    address private uniswapFactory;\\r\\n\\r\\n    using EnumerableSetUpgradeable for EnumerableSetUpgradeable.AddressSet;\\r\\n\\r\\n    event Execute(address user, IBaluniV1Agent.Call[] calls, address[] tokensReturn);\\r\\n    event Burn(address user, uint256 value);\\r\\n    event Mint(address user, uint256 value);\\r\\n    event ChangeBpsFee(uint256 newFee);\\r\\n    event ChangeRewardPool(address pool);\\r\\n    event Log(string message, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the BaluniV1Router contract.\\r\\n     * It sets the initial values for various variables and mints 1 ether to the contract's address.\\r\\n     * It also sets the USDC token address, WNATIVE token address, oracle address, Uniswap router address, and Uniswap factory address.\\r\\n     * Finally, it adds the USDC token address to the tokens set.\\r\\n     */\\r\\n    function initialize(\\r\\n        address _usdc,\\r\\n        address _wnative,\\r\\n        address _1inchSpotAgg,\\r\\n        address _uniRouter,\\r\\n        address _uniFactory,\\r\\n        address _rebalancer\\r\\n    ) public initializer {\\r\\n        __ERC20_init('Baluni', 'BALUNI');\\r\\n        __Ownable_init(msg.sender);\\r\\n        __ReentrancyGuard_init();\\r\\n        __UUPSUpgradeable_init();\\r\\n        _mint(address(this), 1 ether);\\r\\n\\r\\n        _MAX_BPS_FEE = 500;\\r\\n        _BPS_FEE = 30; // 0.3%.\\r\\n        _BPS_BASE = 10000;\\r\\n        USDC = _usdc;\\r\\n        WNATIVE = _wnative;\\r\\n        oracle = _1inchSpotAgg; // 1inch Spot Aggregator\\r\\n        uniswapRouter = _uniRouter;\\r\\n        uniswapFactory = _uniFactory;\\r\\n        EnumerableSetUpgradeable.add(tokens, address(USDC));\\r\\n        rebalancer = _rebalancer;\\r\\n        treasury = msg.sender;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Reinitializes the BaluniV1Router contract with the specified parameters.\\r\\n     * @param _usdc The address of the USDC token contract.\\r\\n     * @param _wnative The address of the WNative token contract.\\r\\n     * @param _1inchSpotAgg The address of the 1inch Spot Aggregator oracle contract.\\r\\n     * @param _uniRouter The address of the Uniswap router contract.\\r\\n     * @param _uniFactory The address of the Uniswap factory contract.\\r\\n     * @param version The version of the contract.\\r\\n     */\\r\\n    function reinitialize(\\r\\n        address _usdc,\\r\\n        address _wnative,\\r\\n        address _1inchSpotAgg,\\r\\n        address _uniRouter,\\r\\n        address _uniFactory,\\r\\n        address _rebalancer,\\r\\n        uint64 version\\r\\n    ) public reinitializer(version) {\\r\\n        // __UUPSUpgradeable_init();\\r\\n        // __Ownable_init(msg.sender);\\r\\n        _MAX_BPS_FEE = 500;\\r\\n        _BPS_FEE = 30; // 0.3%.\\r\\n        _BPS_BASE = 10000;\\r\\n        USDC = _usdc;\\r\\n        WNATIVE = _wnative;\\r\\n        oracle = _1inchSpotAgg; // 1inch Spot Aggregator\\r\\n        uniswapRouter = _uniRouter;\\r\\n        uniswapFactory = _uniFactory;\\r\\n        EnumerableSetUpgradeable.add(tokens, address(USDC));\\r\\n        rebalancer = _rebalancer;\\r\\n        treasury = msg.sender;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to authorize an upgrade to a new implementation contract.\\r\\n     * @param newImplementation The address of the new implementation contract.\\r\\n     * @notice This function can only be called by the contract owner.\\r\\n     */\\r\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the unit price of the token in USDC.\\r\\n     * @return The unit price of the token in USDC.\\r\\n     */\\r\\n    function unitPrice() public view returns (uint256) {\\r\\n        return _calculateBaluniToUSDC(1e18);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Changes the basis points fee for the contract.\\r\\n     * @param _newFee The new basis points fee to be set.\\r\\n     */\\r\\n    function changeBpsFee(uint256 _newFee) external onlyOwner {\\r\\n        _BPS_FEE = _newFee;\\r\\n        emit ChangeBpsFee(_newFee);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Changes the treasury address.\\r\\n     * Can only be called by the contract owner.\\r\\n     * @param _newTreasury The new treasury address.\\r\\n     */\\r\\n    function changeTreasury(address _newTreasury) external onlyOwner {\\r\\n        treasury = _newTreasury;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Changes the address of the rebalancer contract.\\r\\n     * Can only be called by the contract owner.\\r\\n     *\\r\\n     * @param _newRebalancer The new address of the rebalancer contract.\\r\\n     */\\r\\n    function changeRebalancer(address _newRebalancer) external onlyOwner {\\r\\n        rebalancer = _newRebalancer;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Changes the address of the agent factory contract.\\r\\n     * Can only be called by the contract owner.\\r\\n     * @param _agentFactory The new address of the agent factory contract.\\r\\n     */\\r\\n    function changeAgentFactory(address _agentFactory) external onlyOwner {\\r\\n        agentFactory = _agentFactory;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Executes a series of calls to a BaluniV1Agent contract and handles token returns.\\r\\n     * @param calls An array of IBaluniV1Agent.Call structs representing the calls to be executed.\\r\\n     * @param tokensReturn An array of addresses representing the tokens to be returned.\\r\\n     * @notice This function requires the agentFactory to be set and creates a new agent if necessary.\\r\\n     * @notice If a token is new and a Uniswap pool exists for it, the token is added to the tokens set.\\r\\n     * @notice If no Uniswap pool exists for a token, the token balance is transferred back to the caller.\\r\\n     */\\r\\n    function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external nonReentrant {\\r\\n        require(address(agentFactory) != address(0), 'Agent factory not set');\\r\\n        address agent = IBaluniV1AgentFactory(agentFactory).getOrCreateAgent(msg.sender);\\r\\n        bool[] memory isTokenNew = new bool[](tokensReturn.length);\\r\\n        uint256[] memory tokenBalances = new uint256[](tokensReturn.length);\\r\\n\\r\\n        for (uint256 i = 0; i < tokensReturn.length; i++) {\\r\\n            isTokenNew[i] = !EnumerableSetUpgradeable.contains(tokens, tokensReturn[i]);\\r\\n            tokenBalances[i] = IERC20(tokensReturn[i]).balanceOf(address(this));\\r\\n        }\\r\\n\\r\\n        IBaluniV1Agent(agent).execute(calls, tokensReturn);\\r\\n\\r\\n        for (uint256 i = 0; i < tokensReturn.length; i++) {\\r\\n            address token = tokensReturn[i];\\r\\n            uint256 balance = IERC20(token).balanceOf(address(this));\\r\\n            address poolNative3000 = IUniswapV3Factory(uniswapFactory).getPool(token, address(WNATIVE), 3000);\\r\\n            address poolNative500 = IUniswapV3Factory(uniswapFactory).getPool(token, address(WNATIVE), 500);\\r\\n            address poolUSDC500 = IUniswapV3Factory(uniswapFactory).getPool(token, address(USDC), 500);\\r\\n            address poolUSDC3000 = IUniswapV3Factory(uniswapFactory).getPool(token, address(USDC), 3000);\\r\\n            bool poolExist = poolNative3000 != address(0) ||\\r\\n                poolNative500 != address(0) ||\\r\\n                poolUSDC3000 != address(0) ||\\r\\n                poolUSDC500 != address(0);\\r\\n\\r\\n            if (isTokenNew[i] && poolExist) {\\r\\n                EnumerableSetUpgradeable.add(tokens, token);\\r\\n            }\\r\\n\\r\\n            uint256 amountReceived = balance - tokenBalances[i];\\r\\n\\r\\n            if (!poolExist) {\\r\\n                IERC20(token).transfer(msg.sender, amountReceived);\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            if (balance > tokenBalances[i]) {\\r\\n                uint256 fee = (amountReceived * _BPS_FEE) / _BPS_BASE;\\r\\n                IERC20(tokensReturn[i]).transfer(treasury, fee);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Liquidates the specified token by swapping it for USDC.\\r\\n     * @param token The address of the token to be liquidated.\\r\\n     * @notice The contract must have sufficient approval to spend the specified token.\\r\\n     * @notice If a pool exists for the token and USDC on Uniswap, a direct swap is performed.\\r\\n     * @notice If no pool exists, a multi-hop swap is performed through the WNATIVE token.\\r\\n     * @notice If the swap fails, the `burn` function should be called to handle the failed swap.\\r\\n     */\\r\\n    function liquidate(address token) public {\\r\\n        uint256 totalERC20Balance = IERC20(token).balanceOf(address(this));\\r\\n        address pool = IUniswapV3Factory(uniswapFactory).getPool(token, address(USDC), 3000);\\r\\n        secureApproval(token, address(uniswapRouter), totalERC20Balance);\\r\\n        bool haveBalance = totalERC20Balance > 0;\\r\\n        if (pool != address(0) && haveBalance) {\\r\\n            uint256 singleSwapResult = _singleSwap(token, address(USDC), totalERC20Balance, address(this));\\r\\n            require(singleSwapResult > 0, 'Swap Failed, Try Burn()');\\r\\n        } else if (pool == address(0) && haveBalance) {\\r\\n            uint256 amountOutHop = _multiHopSwap(\\r\\n                token,\\r\\n                address(WNATIVE),\\r\\n                address(USDC),\\r\\n                totalERC20Balance,\\r\\n                address(this)\\r\\n            );\\r\\n            require(amountOutHop > 0, 'Swap Failed, Try Burn()');\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Liquidates all tokens in the contract.\\r\\n     * This function iterates through all the tokens in the contract and calls the `liquidate` function for each token.\\r\\n     * Can only be called by the contract owner.\\r\\n     */\\r\\n    function liquidateAll() public nonReentrant {\\r\\n        uint256 length = tokens.length();\\r\\n        for (uint256 i = 0; i < length; i++) {\\r\\n            address token = tokens.at(i);\\r\\n            liquidate(token);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Burns a specified amount of BALUNI tokens from the caller's balance.\\r\\n     * @param burnAmount The amount of BALUNI tokens to burn.\\r\\n     * @notice This function requires the caller to have a balance of at least `burnAmount` BAL tokens.\\r\\n     * @notice The function also checks the USDC balance before burning the tokens.\\r\\n     * @notice After burning the tokens, the function transfers a proportional share of each ERC20 token held by the contract to the caller.\\r\\n     * @notice The share is calculated based on the total supply of BAL tokens, the balance of each ERC20 token, and the decimals of each token.\\r\\n     * @notice Finally, the function emits a `Burn` event with the caller's address and the amount of tokens burned.\\r\\n     */\\r\\n    function burnERC20(uint256 burnAmount) external nonReentrant {\\r\\n        require(balanceOf(msg.sender) >= burnAmount, 'Insufficient BAL');\\r\\n\\r\\n        for (uint256 i; i < tokens.length(); i++) {\\r\\n            address token = tokens.at(i);\\r\\n            uint256 totalBaluni = totalSupply();\\r\\n            uint256 totalERC20Balance = IERC20(token).balanceOf(address(this));\\r\\n\\r\\n            if (totalERC20Balance == 0 || token == address(this)) continue;\\r\\n\\r\\n            uint256 decimals = IERC20Metadata(token).decimals();\\r\\n            uint256 share = _calculateERC20Share(totalBaluni, totalERC20Balance, burnAmount, decimals);\\r\\n            uint256 amountAfterFee = _calculateNetAmountAfterFee(share);\\r\\n            IERC20(token).transfer(msg.sender, amountAfterFee);\\r\\n            IERC20(token).transfer(treasury, share - amountAfterFee);\\r\\n        }\\r\\n        _burn(msg.sender, burnAmount);\\r\\n        emit Burn(msg.sender, burnAmount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Burns a specified amount of BAL tokens and performs token swaps on multiple tokens.\\r\\n     * @param burnAmount The amount of BAL tokens to burn.\\r\\n     */\\r\\n    function burnUSDC(uint256 burnAmount) public nonReentrant {\\r\\n        require(burnAmount > 0, 'Insufficient BAL');\\r\\n\\r\\n        for (uint256 i; i < tokens.length(); i++) {\\r\\n            address token = tokens.at(i);\\r\\n            uint256 totalBaluni = totalSupply();\\r\\n            uint256 totalERC20Balance = IERC20(token).balanceOf(address(this));\\r\\n\\r\\n            if (totalERC20Balance > 0 == false) continue;\\r\\n\\r\\n            if (token == address(this)) continue;\\r\\n\\r\\n            uint256 decimals = IERC20Metadata(token).decimals();\\r\\n            uint256 burnAmountToken = _calculateERC20Share(totalBaluni, totalERC20Balance, burnAmount, decimals);\\r\\n\\r\\n            if (token == address(USDC)) {\\r\\n                IERC20(USDC).transfer(msg.sender, burnAmountToken);\\r\\n                continue;\\r\\n            }\\r\\n\\r\\n            address pool = IUniswapV3Factory(uniswapFactory).getPool(token, address(USDC), 3000);\\r\\n            secureApproval(token, address(uniswapRouter), burnAmountToken);\\r\\n\\r\\n            if (pool != address(0)) {\\r\\n                uint256 amountOut = _singleSwap(token, address(USDC), burnAmountToken, address(this));\\r\\n                uint256 amountAfterFee = _calculateNetAmountAfterFee(amountOut);\\r\\n                IERC20(address(USDC)).transfer(msg.sender, amountAfterFee);\\r\\n                IERC20(address(USDC)).transfer(treasury, amountOut - amountAfterFee);\\r\\n                require(amountOut > 0, 'Swap Failed, Try Burn()');\\r\\n            } else {\\r\\n                uint256 amountOutHop = _multiHopSwap(\\r\\n                    token,\\r\\n                    address(WNATIVE),\\r\\n                    address(USDC),\\r\\n                    burnAmountToken,\\r\\n                    msg.sender\\r\\n                );\\r\\n                uint256 amountAfterFee = _calculateNetAmountAfterFee(amountOutHop);\\r\\n                IERC20(address(USDC)).transfer(msg.sender, amountAfterFee);\\r\\n                IERC20(address(USDC)).transfer(treasury, amountOutHop - amountAfterFee);\\r\\n                require(amountOutHop > 0, 'Swap Failed, Try Burn()');\\r\\n            }\\r\\n        }\\r\\n        _burn(msg.sender, burnAmount);\\r\\n        emit Burn(msg.sender, burnAmount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the agent address associated with a user.\\r\\n     * @param _user The user's address.\\r\\n     * @return The agent address.\\r\\n     */\\r\\n    function getAgentAddress(address _user) external view returns (address) {\\r\\n        return IBaluniV1AgentFactory(agentFactory).getAgentAddress(_user);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Mints a specified amount of BALUNI tokens in exchange for USDC.\\r\\n     * @param balAmountToMint The amount of BALUNI tokens to mint.\\r\\n     */\\r\\n    function mintWithUSDC(uint256 balAmountToMint) public nonReentrant {\\r\\n        uint256 totalUSDValuation = _totalValuation();\\r\\n        uint256 totalBalSupply = totalSupply();\\r\\n        uint256 usdcRequired = (balAmountToMint * totalUSDValuation) / totalBalSupply;\\r\\n        IERC20(USDC).transferFrom(msg.sender, address(this), usdcRequired / 1e12);\\r\\n        uint256 balance = IERC20(USDC).balanceOf(msg.sender);\\r\\n        uint256 allowed = IERC20(USDC).allowance(msg.sender, address(this));\\r\\n        require(totalBalSupply > 0, 'Total BALUNI supply cannot be zero');\\r\\n        require(balance >= usdcRequired / 1e12, 'USDC balance is insufficient');\\r\\n        require(allowed >= usdcRequired / 1e12, 'Check the token allowance');\\r\\n\\r\\n        _mint(msg.sender, balAmountToMint);\\r\\n        emit Mint(msg.sender, balAmountToMint);\\r\\n\\r\\n        uint256 fee = ((usdcRequired / 1e12) * _BPS_FEE) / _BPS_BASE;\\r\\n        IERC20(address(USDC)).transfer(treasury, fee);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calls the `rebalance` function of the `rebalancer` contract.\\r\\n     * @param assets An array of addresses representing the assets to rebalance.\\r\\n     * @param weights An array of uint256 values representing the weights of the assets.\\r\\n     * @param sender The address of the sender.\\r\\n     * @param receiver The address of the receiver.\\r\\n     * @param limit The maximum number of assets to rebalance.\\r\\n     */\\r\\n    function callRebalance(\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        address sender,\\r\\n        address receiver,\\r\\n        uint256 limit,\\r\\n        address /* baseAsset */\\r\\n    ) external {\\r\\n        uint256[] memory balances = new uint256[](0);\\r\\n        IBaluniV1Rebalancer(rebalancer).rebalance(balances, assets, weights, limit, sender, receiver, USDC);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the amount of USDC required to mint a given amount of BAL tokens.\\r\\n     * @param balAmountToMint The amount of BAL tokens to be minted.\\r\\n     * @return The amount of USDC required to mint the specified amount of BAL tokens.\\r\\n     */\\r\\n    function requiredUSDCtoMint(uint256 balAmountToMint) public view returns (uint256) {\\r\\n        uint256 totalUSDValuation = _totalValuation();\\r\\n        uint256 totalBalSupply = totalSupply();\\r\\n        uint256 usdcRequired = (balAmountToMint * totalUSDValuation) / totalBalSupply;\\r\\n        return usdcRequired / 1e12;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the token share based on the total Baluni supply, total ERC20 balance, Baluni amount, and token decimals.\\r\\n     * @param totalBaluni The total supply of Baluni tokens.\\r\\n     * @param totalERC20Balance The total balance of the ERC20 token.\\r\\n     * @param baluniAmount The amount of Baluni tokens.\\r\\n     * @param tokenDecimals The number of decimals for the ERC20 token.\\r\\n     * @return The calculated token share.\\r\\n     */\\r\\n    function calculateTokenShare(\\r\\n        uint256 totalBaluni,\\r\\n        uint256 totalERC20Balance,\\r\\n        uint256 baluniAmount,\\r\\n        uint256 tokenDecimals\\r\\n    ) external pure returns (uint256) {\\r\\n        return _calculateERC20Share(totalBaluni, totalERC20Balance, baluniAmount, tokenDecimals);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the valuation of a given amount of a specific ERC20 token.\\r\\n     * @param amount The amount of the ERC20 token.\\r\\n     * @param token The address of the ERC20 token.\\r\\n     * @return The calculated valuation of the ERC20 token.\\r\\n     */\\r\\n    function tokenValuation(uint256 amount, address token) external view returns (uint256) {\\r\\n        return _calculateERC20Valuation(amount, token);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the total valuation of the Baluni ecosystem.\\r\\n     * @return The total valuation of the Baluni ecosystem.\\r\\n     */\\r\\n    function totalValuation() external view returns (uint256) {\\r\\n        return _totalValuation();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the value of a given amount of Baluni tokens in USDC.\\r\\n     * @param amount The amount of Baluni tokens.\\r\\n     * @return The calculated value of the Baluni tokens in USDC.\\r\\n     */\\r\\n    function getUSDCShareValue(uint256 amount) external view returns (uint256) {\\r\\n        return _calculateBaluniToUSDC(amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the valuation of an ERC20 token based on the amount and token address.\\r\\n     * @param amount The amount of the token.\\r\\n     * @param token The address of the token.\\r\\n     * @return valuation The valuation of the token.\\r\\n     */\\r\\n    function _calculateERC20Valuation(uint256 amount, address token) internal view returns (uint256 valuation) {\\r\\n        uint256 rate;\\r\\n        uint8 tokenDecimal = IERC20Metadata(token).decimals();\\r\\n        uint8 usdcDecimal = IERC20Metadata(address(USDC)).decimals();\\r\\n\\r\\n        if (token == address(USDC)) return amount * 1e12;\\r\\n\\r\\n        try I1inchSpotAgg(oracle).getRate(IERC20(token), IERC20(USDC), false) returns (uint256 _rate) {\\r\\n            rate = _rate;\\r\\n        } catch {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        if (tokenDecimal == usdcDecimal) return ((amount * 1e12) * (rate)) / 1e18;\\r\\n\\r\\n        uint256 factor = (10 ** (tokenDecimal - usdcDecimal));\\r\\n\\r\\n        if (tokenDecimal < 18) return ((amount * factor) * (rate * factor)) / 1e18;\\r\\n\\r\\n        return ((amount) * (rate * factor)) / 1e18;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the equivalent amount of USDC tokens for a given amount of Baluni tokens.\\r\\n     * @param amount The amount of Baluni tokens to convert.\\r\\n     * @return shareUSDC The equivalent amount of USDC tokens.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - The total supply of Baluni tokens must be greater than zero.\\r\\n     */\\r\\n    function _calculateBaluniToUSDC(uint256 amount) internal view returns (uint256 shareUSDC) {\\r\\n        uint256 totalBaluni = totalSupply();\\r\\n        require(totalBaluni > 0, 'Total supply cannot be zero');\\r\\n        uint256 totalUSDC = _totalValuation();\\r\\n        shareUSDC = (amount * totalUSDC) / totalBaluni;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the ERC20 share based on the total Baluni supply, total ERC20 balance,\\r\\n     * Baluni amount, and token decimals.\\r\\n     * @param totalBaluni The total supply of Baluni tokens.\\r\\n     * @param totalERC20Balance The total balance of the ERC20 token.\\r\\n     * @param baluniAmount The amount of Baluni tokens.\\r\\n     * @param tokenDecimals The number of decimals for the ERC20 token.\\r\\n     * @return The calculated ERC20 share.\\r\\n     */\\r\\n    function _calculateERC20Share(\\r\\n        uint256 totalBaluni,\\r\\n        uint256 totalERC20Balance,\\r\\n        uint256 baluniAmount,\\r\\n        uint256 tokenDecimals\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(totalBaluni > 0, 'Total supply cannot be zero');\\r\\n        require(tokenDecimals <= 18, 'Token decimals should be <= 18');\\r\\n        uint256 baluniAdjusted;\\r\\n        uint256 amountAdjusted;\\r\\n\\r\\n        if (tokenDecimals < 18) {\\r\\n            baluniAdjusted = totalBaluni / (10 ** (18 - tokenDecimals));\\r\\n            amountAdjusted = baluniAmount / (10 ** (18 - tokenDecimals));\\r\\n        } else {\\r\\n            baluniAdjusted = totalBaluni;\\r\\n            amountAdjusted = baluniAmount;\\r\\n        }\\r\\n\\r\\n        uint256 result = (amountAdjusted * totalERC20Balance) / baluniAdjusted;\\r\\n\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the total valuation of the contract by summing up the valuation of each token held.\\r\\n     * @return The total valuation of the contract.\\r\\n     */\\r\\n    function _totalValuation() internal view returns (uint256) {\\r\\n        uint256 _totalV;\\r\\n\\r\\n        for (uint256 i; i < tokens.length(); i++) {\\r\\n            address token = tokens.at(i);\\r\\n            uint256 balance = IERC20(token).balanceOf(address(this));\\r\\n            uint256 tokenBalanceValuation = _calculateERC20Valuation(balance, token);\\r\\n            _totalV += tokenBalanceValuation;\\r\\n        }\\r\\n\\r\\n        return _totalV;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the net amount after deducting the fee.\\r\\n     * @param _amount The input amount.\\r\\n     * @return The net amount after deducting the fee.\\r\\n     */\\r\\n    function _calculateNetAmountAfterFee(uint256 _amount) internal view returns (uint256) {\\r\\n        uint256 amountInWithFee = (_amount * (_BPS_BASE - (_BPS_FEE))) / _BPS_BASE;\\r\\n        return amountInWithFee;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Resizes an array to the specified size.\\r\\n     * @param arr The array to be resized.\\r\\n     * @param size The new size of the array.\\r\\n     * @return The resized array.\\r\\n     */\\r\\n    function _resize(uint256[] memory arr, uint256 size) internal pure returns (uint256[] memory) {\\r\\n        uint256[] memory ret = new uint256[](size);\\r\\n        for (uint256 i; i < size; i++) {\\r\\n            ret[i] = arr[i];\\r\\n        }\\r\\n        return ret;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the version of the contract.\\r\\n     * @return The version string.\\r\\n     */\\r\\n    function getVersion() external view returns (uint64) {\\r\\n        return _getInitializedVersion();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of addresses representing the tokens.\\r\\n     * @return An array of addresses representing the tokens.\\r\\n     */\\r\\n    function getTokens() external view returns (address[] memory) {\\r\\n        return tokens.values();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x9de3af366cdd857a10dc9065eb08b151b8dfd8ed159a0a61e3fd6bf0ce0067b6\",\"license\":\"GNU AGPLv3\"},\"contracts/BaluniV1Uniswapper.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\\r\\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\\r\\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\r\\n\\r\\nabstract contract BaluniV1Uniswapper {\\r\\n    address private uniswapRouter;\\r\\n    address private uniswapFactory;\\r\\n\\r\\n    /**\\r\\n     * @dev Executes a single swap between two tokens using Uniswap.\\r\\n     * @param token0 The address of the token to be swapped.\\r\\n     * @param token1 The address of the token to be received.\\r\\n     * @param amount The amount of token0 to be swapped.\\r\\n     * @param receiver The address that will receive the swapped tokens.\\r\\n     * @return amountOut The amount of token1 received from the swap.\\r\\n     *\\r\\n     * The function requires that the caller has a sufficient balance of token0 and that the amount to be swapped is greater than 0.\\r\\n     * Also, the caller must have approved this contract to spend the amount of token0.\\r\\n     * The function transfers the amount of token0 to be swapped from the caller to this contract, then performs the swap using Uniswap.\\r\\n     * The swapped tokens are sent to the receiver's address.\\r\\n     * The function returns the amount of token1 received from the swap.\\r\\n     */\\r\\n    function singleSwap(\\r\\n        address token0,\\r\\n        address token1,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256 amountOut) {\\r\\n        require(msg.sender != address(this), 'Wrong sender');\\r\\n        require(amount > 0, 'Amount is 0');\\r\\n        require(IERC20(token0).balanceOf(msg.sender) >= amount, 'Insufficient Balance');\\r\\n        IERC20(token0).transferFrom(msg.sender, address(this), amount);\\r\\n        secureApproval(token0, address(uniswapRouter), amount);\\r\\n        return _singleSwap(token0, token1, amount, receiver);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Executes a multi-hop swap between three tokens using Uniswap.\\r\\n     * @param token0 The address of the token to be swapped.\\r\\n     * @param token1 The address of the intermediate token to be used for the swap.\\r\\n     * @param token2 The address of the final token to be received.\\r\\n     * @param amount The amount of token0 to be swapped.\\r\\n     * @param receiver The address that will receive the swapped tokens.\\r\\n     * @return amountOut The amount of token2 received from the swap.\\r\\n     *\\r\\n     * The function requires that the caller has a sufficient balance of token0 and that the amount to be swapped is greater than 0.\\r\\n     * Also, the caller must have approved this contract to spend the amount of token0.\\r\\n     * The function transfers the amount of token0 to be swapped from the caller to this contract, then performs the swap using Uniswap.\\r\\n     * The swapped tokens are sent to the receiver's address.\\r\\n     * The function returns the amount of token2 received from the swap.\\r\\n     */\\r\\n    function multiHopSwap(\\r\\n        address token0,\\r\\n        address token1,\\r\\n        address token2,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256 amountOut) {\\r\\n        require(msg.sender != address(this), 'Wrong sender');\\r\\n        require(amount > 0, 'Amount is 0');\\r\\n        require(IERC20(token0).balanceOf(msg.sender) >= amount, 'Insufficient Balance');\\r\\n        IERC20(token0).transferFrom(msg.sender, address(this), amount);\\r\\n        secureApproval(token0, address(uniswapRouter), amount);\\r\\n        return _multiHopSwap(token0, token1, token2, amount, receiver);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Executes a single swap on Uniswap.\\r\\n     * @param token0 The address of the input token.\\r\\n     * @param token1 The address of the output token.\\r\\n     * @param tokenBalance The amount of input token to be swapped.\\r\\n     * @param receiver The address that will receive the swapped tokens.\\r\\n     * @return amountOut The amount of output tokens received.\\r\\n     */\\r\\n    function _singleSwap(\\r\\n        address token0,\\r\\n        address token1,\\r\\n        uint256 tokenBalance,\\r\\n        address receiver\\r\\n    ) internal returns (uint256 amountOut) {\\r\\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({\\r\\n            tokenIn: token0,\\r\\n            tokenOut: token1,\\r\\n            fee: 3000,\\r\\n            recipient: address(receiver),\\r\\n            deadline: block.timestamp,\\r\\n            amountIn: tokenBalance,\\r\\n            amountOutMinimum: 0,\\r\\n            sqrtPriceLimitX96: 0\\r\\n        });\\r\\n\\r\\n        return ISwapRouter(uniswapRouter).exactInputSingle(params);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Executes a multi-hop swap using the Uniswap router.\\r\\n     * @param token0 The address of the first token in the swap path.\\r\\n     * @param token1 The address of the second token in the swap path.\\r\\n     * @param token2 The address of the third token in the swap path.\\r\\n     * @param tokenBalance The amount of tokens to be swapped.\\r\\n     * @param receiver The address that will receive the swapped tokens.\\r\\n     * @return amountOut The amount of tokens received after the swap.\\r\\n     */\\r\\n    function _multiHopSwap(\\r\\n        address token0,\\r\\n        address token1,\\r\\n        address token2,\\r\\n        uint256 tokenBalance,\\r\\n        address receiver\\r\\n    ) internal returns (uint256 amountOut) {\\r\\n        ISwapRouter.ExactInputParams memory params = ISwapRouter.ExactInputParams({\\r\\n            path: abi.encodePacked(token0, uint24(3000), token1, uint24(3000), token2),\\r\\n            recipient: address(receiver),\\r\\n            deadline: block.timestamp,\\r\\n            amountIn: tokenBalance,\\r\\n            amountOutMinimum: 0\\r\\n        });\\r\\n        return ISwapRouter(uniswapRouter).exactInput(params);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Ensures that the contract has the necessary approval for a token to be spent by a spender.\\r\\n     * If the current allowance is not equal to the desired amount, it updates the allowance accordingly.\\r\\n     * @param token The address of the token to be approved.\\r\\n     * @param spender The address of the spender.\\r\\n     * @param amount The desired allowance amount.\\r\\n     * @notice This function is internal and should not be called directly.\\r\\n     */\\r\\n    function secureApproval(address token, address spender, uint256 amount) internal {\\r\\n        IERC20 _token = IERC20(token);\\r\\n        // check allowance thena pprove\\r\\n        if (_token.allowance(address(this), spender) < amount) {\\r\\n            _token.approve(spender, 0);\\r\\n            _token.approve(spender, amount);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x87c0689468905b9b9296a28282a15e2d637eabfb71965db096684b4be8f24319\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Agent.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Agent {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1bbf5ddbc4f525451e727d6997e6a20a6238d69232b58b3813760a16e7f60bbe\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1AgentFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1AgentFactory {\\r\\n  function getAgentAddress(address user) external view returns (address);\\r\\n\\r\\n  function getOrCreateAgent(address user) external returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x3012f40ef9454088602115cddadfed4e313fce92a824cc36975bbdd192ebfc7b\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport './IBaluniV1Router.sol';\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n  struct RebalanceVars {\\r\\n    uint256 length;\\r\\n    uint256 totalValue;\\r\\n    uint256 finalUsdBalance;\\r\\n    uint256 overweightVaultsLength;\\r\\n    uint256 underweightVaultsLength;\\r\\n    uint256 totalActiveWeight;\\r\\n    uint256 amountOut;\\r\\n    uint256[] overweightVaults;\\r\\n    uint256[] overweightAmounts;\\r\\n    uint256[] underweightVaults;\\r\\n    uint256[] underweightAmounts;\\r\\n    uint256[] balances;\\r\\n  }\\r\\n\\r\\n  // Variables\\r\\n  function baluniRouter() external view returns (address);\\r\\n\\r\\n  function USDC() external view returns (address);\\r\\n\\r\\n  function WNATIVE() external view returns (address);\\r\\n\\r\\n  function uniswapRouter() external view returns (address);\\r\\n\\r\\n  function uniswapFactory() external view returns (address);\\r\\n\\r\\n  function _1InchSpotAgg() external view returns (address);\\r\\n\\r\\n  function treasury() external view returns (address);\\r\\n\\r\\n  // Functions\\r\\n  function rebalance(\\r\\n    uint256[] memory balances,\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    uint256 limit,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function checkRebalance(\\r\\n    uint256[] memory balances,\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    uint256 limit,\\r\\n    address sender,\\r\\n    address baseAsset\\r\\n  ) external view returns (RebalanceVars memory);\\r\\n\\r\\n  function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0xe7e9c4fbe80061f09e49a3c9861c415d023383069ee1c59b39f85290791e8c3f\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Router.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\\r\\nimport './I1inchSpotAgg.sol';\\r\\nimport './IBaluniV1Agent.sol';\\r\\n\\r\\ninterface IBaluniV1Router {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  // Variables\\r\\n  function _MAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_BASE() external view returns (uint256);\\r\\n\\r\\n  function getTokens() external view returns (address[] memory);\\r\\n\\r\\n  function USDC() external view returns (IERC20);\\r\\n\\r\\n  function WNATIVE() external view returns (address);\\r\\n\\r\\n  function oracle() external view returns (address);\\r\\n\\r\\n  function uniswapRouter() external view returns (address);\\r\\n\\r\\n  function uniswapFactory() external view returns (address);\\r\\n\\r\\n  function agentFactory() external view returns (address);\\r\\n\\r\\n  function marketOracle() external view returns (address);\\r\\n\\r\\n  function rebalancer() external view returns (address);\\r\\n\\r\\n  function treasury() external view returns (address);\\r\\n\\r\\n  // Functions\\r\\n  function initialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer\\r\\n  ) external;\\r\\n\\r\\n  function reinitialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer,\\r\\n    uint64 version\\r\\n  ) external;\\r\\n\\r\\n  function initializeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeBpsFee(uint256 _newFee) external;\\r\\n\\r\\n  function changeTreasury(address _newTreasury) external;\\r\\n\\r\\n  function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n  function changeAgentFactory(address _agentFactory) external;\\r\\n\\r\\n  function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external;\\r\\n\\r\\n  function liquidate(address token) external;\\r\\n\\r\\n  function liquidateAll() external;\\r\\n\\r\\n  function burnERC20(uint256 burnAmount) external;\\r\\n\\r\\n  function burnUSDC(uint256 burnAmount) external;\\r\\n\\r\\n  function getAgentAddress(address _user) external view returns (address);\\r\\n\\r\\n  function mintWithUSDC(uint256 balAmountToMint) external;\\r\\n\\r\\n  function callRebalance(\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    uint256 limit,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function requiredUSDCtoMint(uint256 balAmountToMint) external view returns (uint256);\\r\\n\\r\\n  function calculateTokenShare(\\r\\n    uint256 totalBaluni,\\r\\n    uint256 totalERC20Balance,\\r\\n    uint256 baluniAmount,\\r\\n    uint256 tokenDecimals\\r\\n  ) external pure returns (uint256);\\r\\n\\r\\n  function tokenValuation(uint256 amount, address token) external view returns (uint256);\\r\\n\\r\\n  function totalValuation() external view returns (uint256);\\r\\n\\r\\n  function getUSDCShareValue(uint256 amount) external view returns (uint256);\\r\\n\\r\\n  function fetchMarketPrices() external view returns (uint256, uint256);\\r\\n\\r\\n  function getVersion() external view returns (uint64);\\r\\n\\r\\n  function unitPrice() external view returns (uint256);\\r\\n  \\r\\n}\\r\\n\",\"keccak256\":\"0x0795abf370daca8b74052ab6f425ab982bb4e0aecc4a72de19b3ff505d9e18a5\",\"license\":\"GNU AGPLv3\"},\"contracts/libs/EnumerableSetUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @dev Library for managing\\r\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\r\\n * types.\\r\\n *\\r\\n * Sets have the following properties:\\r\\n *\\r\\n * - Elements are added, removed, and checked for existence in constant time\\r\\n * (O(1)).\\r\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\r\\n *\\r\\n * ```\\r\\n * contract Example {\\r\\n *     // Add the library methods\\r\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\r\\n *\\r\\n *     // Declare a set state variable\\r\\n *     EnumerableSet.AddressSet private mySet;\\r\\n * }\\r\\n * ```\\r\\n *\\r\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\r\\n * and `uint256` (`UintSet`) are supported.\\r\\n *\\r\\n * [WARNING]\\r\\n * ====\\r\\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\\r\\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\r\\n *\\r\\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\\r\\n * ====\\r\\n */\\r\\nlibrary EnumerableSetUpgradeable {\\r\\n    // To implement this library for multiple types with as little code\\r\\n    // repetition as possible, we write it in terms of a generic Set type with\\r\\n    // bytes32 values.\\r\\n    // The Set implementation uses private functions, and user-facing\\r\\n    // implementations (such as AddressSet) are just wrappers around the\\r\\n    // underlying Set.\\r\\n    // This means that we can only create new EnumerableSets for types that fit\\r\\n    // in bytes32.\\r\\n\\r\\n    struct Set {\\r\\n        // Storage of set values\\r\\n        bytes32[] _values;\\r\\n        // Position of the value in the `values` array, plus 1 because index 0\\r\\n        // means a value is not in the set.\\r\\n        mapping(bytes32 => uint256) _indexes;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Add a value to a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was added to the set, that is if it was not\\r\\n     * already present.\\r\\n     */\\r\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\r\\n        if (!_contains(set, value)) {\\r\\n            set._values.push(value);\\r\\n            // The value is stored at length-1, but we add 1 to all indexes\\r\\n            // and use 0 as a sentinel value\\r\\n            set._indexes[value] = set._values.length;\\r\\n            return true;\\r\\n        } else {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Removes a value from a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was removed from the set, that is if it was\\r\\n     * present.\\r\\n     */\\r\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\r\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\r\\n        uint256 valueIndex = set._indexes[value];\\r\\n\\r\\n        if (valueIndex != 0) {\\r\\n            // Equivalent to contains(set, value)\\r\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\r\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\r\\n            // This modifies the order of the array, as noted in {at}.\\r\\n\\r\\n            uint256 toDeleteIndex = valueIndex - 1;\\r\\n            uint256 lastIndex = set._values.length - 1;\\r\\n\\r\\n            if (lastIndex != toDeleteIndex) {\\r\\n                bytes32 lastValue = set._values[lastIndex];\\r\\n\\r\\n                // Move the last value to the index where the value to delete is\\r\\n                set._values[toDeleteIndex] = lastValue;\\r\\n                // Update the index for the moved value\\r\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\r\\n            }\\r\\n\\r\\n            // Delete the slot where the moved value was stored\\r\\n            set._values.pop();\\r\\n\\r\\n            // Delete the index for the deleted slot\\r\\n            delete set._indexes[value];\\r\\n\\r\\n            return true;\\r\\n        } else {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns true if the value is in the set. O(1).\\r\\n     */\\r\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\r\\n        return set._indexes[value] != 0;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of values on the set. O(1).\\r\\n     */\\r\\n    function _length(Set storage set) private view returns (uint256) {\\r\\n        return set._values.length;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\r\\n     *\\r\\n     * Note that there are no guarantees on the ordering of values inside the\\r\\n     * array, and it may change when more values are added or removed.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `index` must be strictly less than {length}.\\r\\n     */\\r\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\r\\n        return set._values[index];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Return the entire set in an array\\r\\n     *\\r\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\r\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\r\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\r\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\r\\n     */\\r\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\r\\n        return set._values;\\r\\n    }\\r\\n\\r\\n    // Bytes32Set\\r\\n\\r\\n    struct Bytes32Set {\\r\\n        Set _inner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Add a value to a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was added to the set, that is if it was not\\r\\n     * already present.\\r\\n     */\\r\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\r\\n        return _add(set._inner, value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Removes a value from a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was removed from the set, that is if it was\\r\\n     * present.\\r\\n     */\\r\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\r\\n        return _remove(set._inner, value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns true if the value is in the set. O(1).\\r\\n     */\\r\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\r\\n        return _contains(set._inner, value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of values in the set. O(1).\\r\\n     */\\r\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\r\\n        return _length(set._inner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\r\\n     *\\r\\n     * Note that there are no guarantees on the ordering of values inside the\\r\\n     * array, and it may change when more values are added or removed.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `index` must be strictly less than {length}.\\r\\n     */\\r\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\r\\n        return _at(set._inner, index);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Return the entire set in an array\\r\\n     *\\r\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\r\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\r\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\r\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\r\\n     */\\r\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\r\\n        return _values(set._inner);\\r\\n    }\\r\\n\\r\\n    // AddressSet\\r\\n\\r\\n    struct AddressSet {\\r\\n        Set _inner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Add a value to a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was added to the set, that is if it was not\\r\\n     * already present.\\r\\n     */\\r\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\r\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Removes a value from a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was removed from the set, that is if it was\\r\\n     * present.\\r\\n     */\\r\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\r\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns true if the value is in the set. O(1).\\r\\n     */\\r\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\r\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of values in the set. O(1).\\r\\n     */\\r\\n    function length(AddressSet storage set) internal view returns (uint256) {\\r\\n        return _length(set._inner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\r\\n     *\\r\\n     * Note that there are no guarantees on the ordering of values inside the\\r\\n     * array, and it may change when more values are added or removed.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `index` must be strictly less than {length}.\\r\\n     */\\r\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\r\\n        return address(uint160(uint256(_at(set._inner, index))));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Return the entire set in an array\\r\\n     *\\r\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\r\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\r\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\r\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\r\\n     */\\r\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\r\\n        bytes32[] memory store = _values(set._inner);\\r\\n        address[] memory result;\\r\\n\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            result := store\\r\\n        }\\r\\n\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    // UintSet\\r\\n\\r\\n    struct UintSet {\\r\\n        Set _inner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Add a value to a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was added to the set, that is if it was not\\r\\n     * already present.\\r\\n     */\\r\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\r\\n        return _add(set._inner, bytes32(value));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Removes a value from a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was removed from the set, that is if it was\\r\\n     * present.\\r\\n     */\\r\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\r\\n        return _remove(set._inner, bytes32(value));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns true if the value is in the set. O(1).\\r\\n     */\\r\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\r\\n        return _contains(set._inner, bytes32(value));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of values on the set. O(1).\\r\\n     */\\r\\n    function length(UintSet storage set) internal view returns (uint256) {\\r\\n        return _length(set._inner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\r\\n     *\\r\\n     * Note that there are no guarantees on the ordering of values inside the\\r\\n     * array, and it may change when more values are added or removed.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `index` must be strictly less than {length}.\\r\\n     */\\r\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\r\\n        return uint256(_at(set._inner, index));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Return the entire set in an array\\r\\n     *\\r\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\r\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\r\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\r\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\r\\n     */\\r\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\r\\n        bytes32[] memory store = _values(set._inner);\\r\\n        uint256[] memory result;\\r\\n\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            result := store\\r\\n        }\\r\\n\\r\\n        return result;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x0e86a06de431b687eaf963847642f6f5f857bcc08b5ad5334097669d83d46ab9\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4387,"contract":"contracts/BaluniV1Router.sol:BaluniV1Router","label":"uniswapRouter","offset":0,"slot":"0","type":"t_address"},{"astId":4389,"contract":"contracts/BaluniV1Router.sol:BaluniV1Router","label":"uniswapFactory","offset":0,"slot":"1","type":"t_address"},{"astId":2581,"contract":"contracts/BaluniV1Router.sol:BaluniV1Router","label":"_MAX_BPS_FEE","offset":0,"slot":"2","type":"t_uint256"},{"astId":2583,"contract":"contracts/BaluniV1Router.sol:BaluniV1Router","label":"_BPS_FEE","offset":0,"slot":"3","type":"t_uint256"},{"astId":2585,"contract":"contracts/BaluniV1Router.sol:BaluniV1Router","label":"_BPS_BASE","offset":0,"slot":"4","type":"t_uint256"},{"astId":2588,"contract":"contracts/BaluniV1Router.sol:BaluniV1Router","label":"tokens","offset":0,"slot":"5","type":"t_struct(AddressSet)5440_storage"},{"astId":2590,"contract":"contracts/BaluniV1Router.sol:BaluniV1Router","label":"USDC","offset":0,"slot":"7","type":"t_address"},{"astId":2592,"contract":"contracts/BaluniV1Router.sol:BaluniV1Router","label":"WNATIVE","offset":0,"slot":"8","type":"t_address"},{"astId":2594,"contract":"contracts/BaluniV1Router.sol:BaluniV1Router","label":"oracle","offset":0,"slot":"9","type":"t_address"},{"astId":2596,"contract":"contracts/BaluniV1Router.sol:BaluniV1Router","label":"agentFactory","offset":0,"slot":"10","type":"t_address"},{"astId":2598,"contract":"contracts/BaluniV1Router.sol:BaluniV1Router","label":"rebalancer","offset":0,"slot":"11","type":"t_address"},{"astId":2600,"contract":"contracts/BaluniV1Router.sol:BaluniV1Router","label":"treasury","offset":0,"slot":"12","type":"t_address"},{"astId":2602,"contract":"contracts/BaluniV1Router.sol:BaluniV1Router","label":"uniswapRouter","offset":0,"slot":"13","type":"t_address"},{"astId":2604,"contract":"contracts/BaluniV1Router.sol:BaluniV1Router","label":"uniswapFactory","offset":0,"slot":"14","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(AddressSet)5440_storage":{"encoding":"inplace","label":"struct EnumerableSetUpgradeable.AddressSet","members":[{"astId":5439,"contract":"contracts/BaluniV1Router.sol:BaluniV1Router","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)5139_storage"}],"numberOfBytes":"64"},"t_struct(Set)5139_storage":{"encoding":"inplace","label":"struct EnumerableSetUpgradeable.Set","members":[{"astId":5134,"contract":"contracts/BaluniV1Router.sol:BaluniV1Router","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":5138,"contract":"contracts/BaluniV1Router.sol:BaluniV1Router","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"burnERC20(uint256)":{"notice":"This function requires the caller to have a balance of at least `burnAmount` BAL tokens.The function also checks the USDC balance before burning the tokens.After burning the tokens, the function transfers a proportional share of each ERC20 token held by the contract to the caller.The share is calculated based on the total supply of BAL tokens, the balance of each ERC20 token, and the decimals of each token.Finally, the function emits a `Burn` event with the caller's address and the amount of tokens burned."},"execute((address,uint256,bytes)[],address[])":{"notice":"This function requires the agentFactory to be set and creates a new agent if necessary.If a token is new and a Uniswap pool exists for it, the token is added to the tokens set.If no Uniswap pool exists for a token, the token balance is transferred back to the caller."},"liquidate(address)":{"notice":"The contract must have sufficient approval to spend the specified token.If a pool exists for the token and USDC on Uniswap, a direct swap is performed.If no pool exists, a multi-hop swap is performed through the WNATIVE token.If the swap fails, the `burn` function should be called to handle the failed swap."}},"version":1}}},"contracts/BaluniV1Uniswapper.sol":{"BaluniV1Uniswapper":{"abi":[{"inputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"address","name":"token2","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"multiHopSwap","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"singleSwap","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"multiHopSwap(address,address,address,uint256,address)":{"details":"Executes a multi-hop swap between three tokens using Uniswap.","params":{"amount":"The amount of token0 to be swapped.","receiver":"The address that will receive the swapped tokens.","token0":"The address of the token to be swapped.","token1":"The address of the intermediate token to be used for the swap.","token2":"The address of the final token to be received."},"returns":{"amountOut":"The amount of token2 received from the swap. The function requires that the caller has a sufficient balance of token0 and that the amount to be swapped is greater than 0. Also, the caller must have approved this contract to spend the amount of token0. The function transfers the amount of token0 to be swapped from the caller to this contract, then performs the swap using Uniswap. The swapped tokens are sent to the receiver's address. The function returns the amount of token2 received from the swap."}},"singleSwap(address,address,uint256,address)":{"details":"Executes a single swap between two tokens using Uniswap.","params":{"amount":"The amount of token0 to be swapped.","receiver":"The address that will receive the swapped tokens.","token0":"The address of the token to be swapped.","token1":"The address of the token to be received."},"returns":{"amountOut":"The amount of token1 received from the swap. The function requires that the caller has a sufficient balance of token0 and that the amount to be swapped is greater than 0. Also, the caller must have approved this contract to spend the amount of token0. The function transfers the amount of token0 to be swapped from the caller to this contract, then performs the swap using Uniswap. The swapped tokens are sent to the receiver's address. The function returns the amount of token1 received from the swap."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"multiHopSwap(address,address,address,uint256,address)":"5efaaebb","singleSwap(address,address,uint256,address)":"2d6bc8ea"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"multiHopSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"singleSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"multiHopSwap(address,address,address,uint256,address)\":{\"details\":\"Executes a multi-hop swap between three tokens using Uniswap.\",\"params\":{\"amount\":\"The amount of token0 to be swapped.\",\"receiver\":\"The address that will receive the swapped tokens.\",\"token0\":\"The address of the token to be swapped.\",\"token1\":\"The address of the intermediate token to be used for the swap.\",\"token2\":\"The address of the final token to be received.\"},\"returns\":{\"amountOut\":\"The amount of token2 received from the swap. The function requires that the caller has a sufficient balance of token0 and that the amount to be swapped is greater than 0. Also, the caller must have approved this contract to spend the amount of token0. The function transfers the amount of token0 to be swapped from the caller to this contract, then performs the swap using Uniswap. The swapped tokens are sent to the receiver's address. The function returns the amount of token2 received from the swap.\"}},\"singleSwap(address,address,uint256,address)\":{\"details\":\"Executes a single swap between two tokens using Uniswap.\",\"params\":{\"amount\":\"The amount of token0 to be swapped.\",\"receiver\":\"The address that will receive the swapped tokens.\",\"token0\":\"The address of the token to be swapped.\",\"token1\":\"The address of the token to be received.\"},\"returns\":{\"amountOut\":\"The amount of token1 received from the swap. The function requires that the caller has a sufficient balance of token0 and that the amount to be swapped is greater than 0. Also, the caller must have approved this contract to spend the amount of token0. The function transfers the amount of token0 to be swapped from the caller to this contract, then performs the swap using Uniswap. The swapped tokens are sent to the receiver's address. The function returns the amount of token1 received from the swap.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaluniV1Uniswapper.sol\":\"BaluniV1Uniswapper\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport {ContextUpgradeable} from \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport {IERC20Errors} from \\\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\\\";\\nimport {Initializable} from \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\\n    struct ERC20Storage {\\n        mapping(address account => uint256) _balances;\\n\\n        mapping(address account => mapping(address spender => uint256)) _allowances;\\n\\n        uint256 _totalSupply;\\n\\n        string _name;\\n        string _symbol;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ERC20\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\\n\\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\\n        assembly {\\n            $.slot := ERC20StorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        $._name = name_;\\n        $._symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            $._totalSupply += value;\\n        } else {\\n            uint256 fromBalance = $._balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                $._balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                $._totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                $._balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        $._allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\\n    struct ReentrancyGuardStorage {\\n        uint256 _status;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ReentrancyGuard\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\\n\\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\\n        assembly {\\n            $.slot := ReentrancyGuardStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if ($._status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        $._status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        return $._status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\\n\",\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"},\"contracts/BaluniV1Uniswapper.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\\r\\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\\r\\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\r\\n\\r\\nabstract contract BaluniV1Uniswapper {\\r\\n    address private uniswapRouter;\\r\\n    address private uniswapFactory;\\r\\n\\r\\n    /**\\r\\n     * @dev Executes a single swap between two tokens using Uniswap.\\r\\n     * @param token0 The address of the token to be swapped.\\r\\n     * @param token1 The address of the token to be received.\\r\\n     * @param amount The amount of token0 to be swapped.\\r\\n     * @param receiver The address that will receive the swapped tokens.\\r\\n     * @return amountOut The amount of token1 received from the swap.\\r\\n     *\\r\\n     * The function requires that the caller has a sufficient balance of token0 and that the amount to be swapped is greater than 0.\\r\\n     * Also, the caller must have approved this contract to spend the amount of token0.\\r\\n     * The function transfers the amount of token0 to be swapped from the caller to this contract, then performs the swap using Uniswap.\\r\\n     * The swapped tokens are sent to the receiver's address.\\r\\n     * The function returns the amount of token1 received from the swap.\\r\\n     */\\r\\n    function singleSwap(\\r\\n        address token0,\\r\\n        address token1,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256 amountOut) {\\r\\n        require(msg.sender != address(this), 'Wrong sender');\\r\\n        require(amount > 0, 'Amount is 0');\\r\\n        require(IERC20(token0).balanceOf(msg.sender) >= amount, 'Insufficient Balance');\\r\\n        IERC20(token0).transferFrom(msg.sender, address(this), amount);\\r\\n        secureApproval(token0, address(uniswapRouter), amount);\\r\\n        return _singleSwap(token0, token1, amount, receiver);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Executes a multi-hop swap between three tokens using Uniswap.\\r\\n     * @param token0 The address of the token to be swapped.\\r\\n     * @param token1 The address of the intermediate token to be used for the swap.\\r\\n     * @param token2 The address of the final token to be received.\\r\\n     * @param amount The amount of token0 to be swapped.\\r\\n     * @param receiver The address that will receive the swapped tokens.\\r\\n     * @return amountOut The amount of token2 received from the swap.\\r\\n     *\\r\\n     * The function requires that the caller has a sufficient balance of token0 and that the amount to be swapped is greater than 0.\\r\\n     * Also, the caller must have approved this contract to spend the amount of token0.\\r\\n     * The function transfers the amount of token0 to be swapped from the caller to this contract, then performs the swap using Uniswap.\\r\\n     * The swapped tokens are sent to the receiver's address.\\r\\n     * The function returns the amount of token2 received from the swap.\\r\\n     */\\r\\n    function multiHopSwap(\\r\\n        address token0,\\r\\n        address token1,\\r\\n        address token2,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256 amountOut) {\\r\\n        require(msg.sender != address(this), 'Wrong sender');\\r\\n        require(amount > 0, 'Amount is 0');\\r\\n        require(IERC20(token0).balanceOf(msg.sender) >= amount, 'Insufficient Balance');\\r\\n        IERC20(token0).transferFrom(msg.sender, address(this), amount);\\r\\n        secureApproval(token0, address(uniswapRouter), amount);\\r\\n        return _multiHopSwap(token0, token1, token2, amount, receiver);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Executes a single swap on Uniswap.\\r\\n     * @param token0 The address of the input token.\\r\\n     * @param token1 The address of the output token.\\r\\n     * @param tokenBalance The amount of input token to be swapped.\\r\\n     * @param receiver The address that will receive the swapped tokens.\\r\\n     * @return amountOut The amount of output tokens received.\\r\\n     */\\r\\n    function _singleSwap(\\r\\n        address token0,\\r\\n        address token1,\\r\\n        uint256 tokenBalance,\\r\\n        address receiver\\r\\n    ) internal returns (uint256 amountOut) {\\r\\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({\\r\\n            tokenIn: token0,\\r\\n            tokenOut: token1,\\r\\n            fee: 3000,\\r\\n            recipient: address(receiver),\\r\\n            deadline: block.timestamp,\\r\\n            amountIn: tokenBalance,\\r\\n            amountOutMinimum: 0,\\r\\n            sqrtPriceLimitX96: 0\\r\\n        });\\r\\n\\r\\n        return ISwapRouter(uniswapRouter).exactInputSingle(params);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Executes a multi-hop swap using the Uniswap router.\\r\\n     * @param token0 The address of the first token in the swap path.\\r\\n     * @param token1 The address of the second token in the swap path.\\r\\n     * @param token2 The address of the third token in the swap path.\\r\\n     * @param tokenBalance The amount of tokens to be swapped.\\r\\n     * @param receiver The address that will receive the swapped tokens.\\r\\n     * @return amountOut The amount of tokens received after the swap.\\r\\n     */\\r\\n    function _multiHopSwap(\\r\\n        address token0,\\r\\n        address token1,\\r\\n        address token2,\\r\\n        uint256 tokenBalance,\\r\\n        address receiver\\r\\n    ) internal returns (uint256 amountOut) {\\r\\n        ISwapRouter.ExactInputParams memory params = ISwapRouter.ExactInputParams({\\r\\n            path: abi.encodePacked(token0, uint24(3000), token1, uint24(3000), token2),\\r\\n            recipient: address(receiver),\\r\\n            deadline: block.timestamp,\\r\\n            amountIn: tokenBalance,\\r\\n            amountOutMinimum: 0\\r\\n        });\\r\\n        return ISwapRouter(uniswapRouter).exactInput(params);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Ensures that the contract has the necessary approval for a token to be spent by a spender.\\r\\n     * If the current allowance is not equal to the desired amount, it updates the allowance accordingly.\\r\\n     * @param token The address of the token to be approved.\\r\\n     * @param spender The address of the spender.\\r\\n     * @param amount The desired allowance amount.\\r\\n     * @notice This function is internal and should not be called directly.\\r\\n     */\\r\\n    function secureApproval(address token, address spender, uint256 amount) internal {\\r\\n        IERC20 _token = IERC20(token);\\r\\n        // check allowance thena pprove\\r\\n        if (_token.allowance(address(this), spender) < amount) {\\r\\n            _token.approve(spender, 0);\\r\\n            _token.approve(spender, amount);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x87c0689468905b9b9296a28282a15e2d637eabfb71965db096684b4be8f24319\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4387,"contract":"contracts/BaluniV1Uniswapper.sol:BaluniV1Uniswapper","label":"uniswapRouter","offset":0,"slot":"0","type":"t_address"},{"astId":4389,"contract":"contracts/BaluniV1Uniswapper.sol:BaluniV1Uniswapper","label":"uniswapFactory","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/I1inchSpotAgg.sol":{"I1inchSpotAgg":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"srcToken","type":"address"},{"internalType":"contract IERC20","name":"dstToken","type":"address"},{"internalType":"bool","name":"useWrappers","type":"bool"}],"name":"getRate","outputs":[{"internalType":"uint256","name":"weightedRate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"srcToken","type":"address"},{"internalType":"bool","name":"useWrappers","type":"bool"}],"name":"getRateToEth","outputs":[{"internalType":"uint256","name":"weightedRate","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getRate(address,address,bool)":"802431fb","getRateToEth(address,bool)":"7de4fd10"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"dstToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useWrappers\",\"type\":\"bool\"}],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weightedRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useWrappers\",\"type\":\"bool\"}],\"name\":\"getRateToEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weightedRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/I1inchSpotAgg.sol\":\"I1inchSpotAgg\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Agent.sol":{"IBaluniV1Agent":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct IBaluniV1Agent.Call[]","name":"calls","type":"tuple[]"},{"internalType":"address[]","name":"tokensReturn","type":"address[]"}],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"execute((address,uint256,bytes)[],address[])":"eedc3c50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IBaluniV1Agent.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"tokensReturn\",\"type\":\"address[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Agent.sol\":\"IBaluniV1Agent\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IBaluniV1Agent.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Agent {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1bbf5ddbc4f525451e727d6997e6a20a6238d69232b58b3813760a16e7f60bbe\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1AgentFactory.sol":{"IBaluniV1AgentFactory":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getAgentAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getOrCreateAgent","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAgentAddress(address)":"27d54a92","getOrCreateAgent(address)":"9b76a5cd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getAgentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getOrCreateAgent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1AgentFactory.sol\":\"IBaluniV1AgentFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IBaluniV1AgentFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1AgentFactory {\\r\\n  function getAgentAddress(address user) external view returns (address);\\r\\n\\r\\n  function getOrCreateAgent(address user) external returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x3012f40ef9454088602115cddadfed4e313fce92a824cc36975bbdd192ebfc7b\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"IBaluniV1Rebalancer":{"abi":[{"inputs":[],"name":"USDC","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WNATIVE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_1InchSpotAgg","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baluniRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"checkRebalance","outputs":[{"components":[{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"uint256","name":"totalValue","type":"uint256"},{"internalType":"uint256","name":"finalUsdBalance","type":"uint256"},{"internalType":"uint256","name":"overweightVaultsLength","type":"uint256"},{"internalType":"uint256","name":"underweightVaultsLength","type":"uint256"},{"internalType":"uint256","name":"totalActiveWeight","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256[]","name":"overweightVaults","type":"uint256[]"},{"internalType":"uint256[]","name":"overweightAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"underweightVaults","type":"uint256[]"},{"internalType":"uint256[]","name":"underweightAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"}],"internalType":"struct IBaluniV1Rebalancer.RebalanceVars","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convert","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"rebalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uniswapFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uniswapRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"USDC()":"89a30271","WNATIVE()":"b381cf40","_1InchSpotAgg()":"eb06b29d","baluniRouter()":"39b65140","checkRebalance(uint256[],address[],uint256[],uint256,address,address)":"997146f5","convert(address,address,uint256)":"248391ff","rebalance(uint256[],address[],uint256[],uint256,address,address,address)":"f0bf7714","treasury()":"61d027b3","uniswapFactory()":"8bdb2afa","uniswapRouter()":"735de9f7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WNATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_1InchSpotAgg\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baluniRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"checkRebalance\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalUsdBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overweightVaultsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underweightVaultsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalActiveWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"overweightVaults\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"overweightAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underweightVaults\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underweightAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IBaluniV1Rebalancer.RebalanceVars\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Rebalancer.sol\":\"IBaluniV1Rebalancer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Agent.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Agent {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1bbf5ddbc4f525451e727d6997e6a20a6238d69232b58b3813760a16e7f60bbe\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport './IBaluniV1Router.sol';\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n  struct RebalanceVars {\\r\\n    uint256 length;\\r\\n    uint256 totalValue;\\r\\n    uint256 finalUsdBalance;\\r\\n    uint256 overweightVaultsLength;\\r\\n    uint256 underweightVaultsLength;\\r\\n    uint256 totalActiveWeight;\\r\\n    uint256 amountOut;\\r\\n    uint256[] overweightVaults;\\r\\n    uint256[] overweightAmounts;\\r\\n    uint256[] underweightVaults;\\r\\n    uint256[] underweightAmounts;\\r\\n    uint256[] balances;\\r\\n  }\\r\\n\\r\\n  // Variables\\r\\n  function baluniRouter() external view returns (address);\\r\\n\\r\\n  function USDC() external view returns (address);\\r\\n\\r\\n  function WNATIVE() external view returns (address);\\r\\n\\r\\n  function uniswapRouter() external view returns (address);\\r\\n\\r\\n  function uniswapFactory() external view returns (address);\\r\\n\\r\\n  function _1InchSpotAgg() external view returns (address);\\r\\n\\r\\n  function treasury() external view returns (address);\\r\\n\\r\\n  // Functions\\r\\n  function rebalance(\\r\\n    uint256[] memory balances,\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    uint256 limit,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function checkRebalance(\\r\\n    uint256[] memory balances,\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    uint256 limit,\\r\\n    address sender,\\r\\n    address baseAsset\\r\\n  ) external view returns (RebalanceVars memory);\\r\\n\\r\\n  function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0xe7e9c4fbe80061f09e49a3c9861c415d023383069ee1c59b39f85290791e8c3f\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Router.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\\r\\nimport './I1inchSpotAgg.sol';\\r\\nimport './IBaluniV1Agent.sol';\\r\\n\\r\\ninterface IBaluniV1Router {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  // Variables\\r\\n  function _MAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_BASE() external view returns (uint256);\\r\\n\\r\\n  function getTokens() external view returns (address[] memory);\\r\\n\\r\\n  function USDC() external view returns (IERC20);\\r\\n\\r\\n  function WNATIVE() external view returns (address);\\r\\n\\r\\n  function oracle() external view returns (address);\\r\\n\\r\\n  function uniswapRouter() external view returns (address);\\r\\n\\r\\n  function uniswapFactory() external view returns (address);\\r\\n\\r\\n  function agentFactory() external view returns (address);\\r\\n\\r\\n  function marketOracle() external view returns (address);\\r\\n\\r\\n  function rebalancer() external view returns (address);\\r\\n\\r\\n  function treasury() external view returns (address);\\r\\n\\r\\n  // Functions\\r\\n  function initialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer\\r\\n  ) external;\\r\\n\\r\\n  function reinitialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer,\\r\\n    uint64 version\\r\\n  ) external;\\r\\n\\r\\n  function initializeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeBpsFee(uint256 _newFee) external;\\r\\n\\r\\n  function changeTreasury(address _newTreasury) external;\\r\\n\\r\\n  function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n  function changeAgentFactory(address _agentFactory) external;\\r\\n\\r\\n  function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external;\\r\\n\\r\\n  function liquidate(address token) external;\\r\\n\\r\\n  function liquidateAll() external;\\r\\n\\r\\n  function burnERC20(uint256 burnAmount) external;\\r\\n\\r\\n  function burnUSDC(uint256 burnAmount) external;\\r\\n\\r\\n  function getAgentAddress(address _user) external view returns (address);\\r\\n\\r\\n  function mintWithUSDC(uint256 balAmountToMint) external;\\r\\n\\r\\n  function callRebalance(\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    uint256 limit,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function requiredUSDCtoMint(uint256 balAmountToMint) external view returns (uint256);\\r\\n\\r\\n  function calculateTokenShare(\\r\\n    uint256 totalBaluni,\\r\\n    uint256 totalERC20Balance,\\r\\n    uint256 baluniAmount,\\r\\n    uint256 tokenDecimals\\r\\n  ) external pure returns (uint256);\\r\\n\\r\\n  function tokenValuation(uint256 amount, address token) external view returns (uint256);\\r\\n\\r\\n  function totalValuation() external view returns (uint256);\\r\\n\\r\\n  function getUSDCShareValue(uint256 amount) external view returns (uint256);\\r\\n\\r\\n  function fetchMarketPrices() external view returns (uint256, uint256);\\r\\n\\r\\n  function getVersion() external view returns (uint64);\\r\\n\\r\\n  function unitPrice() external view returns (uint256);\\r\\n  \\r\\n}\\r\\n\",\"keccak256\":\"0x0795abf370daca8b74052ab6f425ab982bb4e0aecc4a72de19b3ff505d9e18a5\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Router.sol":{"IBaluniV1Router":{"abi":[{"inputs":[],"name":"USDC","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WNATIVE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_BPS_BASE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_BPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_MAX_BPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"agentFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"burnAmount","type":"uint256"}],"name":"burnERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"burnAmount","type":"uint256"}],"name":"burnUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"totalBaluni","type":"uint256"},{"internalType":"uint256","name":"totalERC20Balance","type":"uint256"},{"internalType":"uint256","name":"baluniAmount","type":"uint256"},{"internalType":"uint256","name":"tokenDecimals","type":"uint256"}],"name":"calculateTokenShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"callRebalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_agentFactory","type":"address"}],"name":"changeAgentFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"changeBpsFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_marketOracle","type":"address"}],"name":"changeMarketOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newRebalancer","type":"address"}],"name":"changeRebalancer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newTreasury","type":"address"}],"name":"changeTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct IBaluniV1Agent.Call[]","name":"calls","type":"tuple[]"},{"internalType":"address[]","name":"tokensReturn","type":"address[]"}],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fetchMarketPrices","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getAgentAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getUSDCShareValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVersion","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_usdc","type":"address"},{"internalType":"address","name":"_wnative","type":"address"},{"internalType":"address","name":"_1inchSpotAgg","type":"address"},{"internalType":"address","name":"_uniRouter","type":"address"},{"internalType":"address","name":"_uniFactory","type":"address"},{"internalType":"address","name":"_rebalancer","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_marketOracle","type":"address"}],"name":"initializeMarketOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"liquidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"liquidateAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"marketOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"balAmountToMint","type":"uint256"}],"name":"mintWithUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"oracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_usdc","type":"address"},{"internalType":"address","name":"_wnative","type":"address"},{"internalType":"address","name":"_1inchSpotAgg","type":"address"},{"internalType":"address","name":"_uniRouter","type":"address"},{"internalType":"address","name":"_uniFactory","type":"address"},{"internalType":"address","name":"_rebalancer","type":"address"},{"internalType":"uint64","name":"version","type":"uint64"}],"name":"reinitialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"balAmountToMint","type":"uint256"}],"name":"requiredUSDCtoMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"token","type":"address"}],"name":"tokenValuation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalValuation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uniswapFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uniswapRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"USDC()":"89a30271","WNATIVE()":"b381cf40","_BPS_BASE()":"85377188","_BPS_FEE()":"b9f5e617","_MAX_BPS_FEE()":"34decfc9","agentFactory()":"7df107ea","burnERC20(uint256)":"1a168da2","burnUSDC(uint256)":"fe0a4dd1","calculateTokenShare(uint256,uint256,uint256,uint256)":"fe330a51","callRebalance(address[],uint256[],address,address,uint256,address)":"599f69f7","changeAgentFactory(address)":"0a38abab","changeBpsFee(uint256)":"06497cb9","changeMarketOracle(address)":"35aa0efa","changeRebalancer(address)":"0918281b","changeTreasury(address)":"b14f2a39","execute((address,uint256,bytes)[],address[])":"eedc3c50","fetchMarketPrices()":"8d483df1","getAgentAddress(address)":"27d54a92","getTokens()":"aa6ca808","getUSDCShareValue(uint256)":"71ddcfb8","getVersion()":"0d8e6e2c","initialize(address,address,address,address,address,address)":"cc2a9a5b","initializeMarketOracle(address)":"980d24f9","liquidate(address)":"2f865568","liquidateAll()":"3c2066a9","marketOracle()":"60961528","mintWithUSDC(uint256)":"0cfc7386","oracle()":"7dc0d1d0","rebalancer()":"01d22ccd","reinitialize(address,address,address,address,address,address,uint64)":"b0d60ba0","requiredUSDCtoMint(uint256)":"aa95d893","tokenValuation(uint256,address)":"2bdd955a","totalValuation()":"295b9300","treasury()":"61d027b3","uniswapFactory()":"8bdb2afa","uniswapRouter()":"735de9f7","unitPrice()":"e73faa2d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WNATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BPS_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_MAX_BPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"agentFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"burnERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"burnUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBaluni\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalERC20Balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baluniAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenDecimals\",\"type\":\"uint256\"}],\"name\":\"calculateTokenShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"callRebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agentFactory\",\"type\":\"address\"}],\"name\":\"changeAgentFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"changeBpsFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketOracle\",\"type\":\"address\"}],\"name\":\"changeMarketOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRebalancer\",\"type\":\"address\"}],\"name\":\"changeRebalancer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newTreasury\",\"type\":\"address\"}],\"name\":\"changeTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IBaluniV1Agent.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"tokensReturn\",\"type\":\"address[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetchMarketPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getAgentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getUSDCShareValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wnative\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_1inchSpotAgg\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketOracle\",\"type\":\"address\"}],\"name\":\"initializeMarketOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidateAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balAmountToMint\",\"type\":\"uint256\"}],\"name\":\"mintWithUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wnative\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_1inchSpotAgg\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balAmountToMint\",\"type\":\"uint256\"}],\"name\":\"requiredUSDCtoMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"tokenValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Router.sol\":\"IBaluniV1Router\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Agent.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Agent {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1bbf5ddbc4f525451e727d6997e6a20a6238d69232b58b3813760a16e7f60bbe\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Router.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\\r\\nimport './I1inchSpotAgg.sol';\\r\\nimport './IBaluniV1Agent.sol';\\r\\n\\r\\ninterface IBaluniV1Router {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  // Variables\\r\\n  function _MAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_BASE() external view returns (uint256);\\r\\n\\r\\n  function getTokens() external view returns (address[] memory);\\r\\n\\r\\n  function USDC() external view returns (IERC20);\\r\\n\\r\\n  function WNATIVE() external view returns (address);\\r\\n\\r\\n  function oracle() external view returns (address);\\r\\n\\r\\n  function uniswapRouter() external view returns (address);\\r\\n\\r\\n  function uniswapFactory() external view returns (address);\\r\\n\\r\\n  function agentFactory() external view returns (address);\\r\\n\\r\\n  function marketOracle() external view returns (address);\\r\\n\\r\\n  function rebalancer() external view returns (address);\\r\\n\\r\\n  function treasury() external view returns (address);\\r\\n\\r\\n  // Functions\\r\\n  function initialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer\\r\\n  ) external;\\r\\n\\r\\n  function reinitialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer,\\r\\n    uint64 version\\r\\n  ) external;\\r\\n\\r\\n  function initializeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeBpsFee(uint256 _newFee) external;\\r\\n\\r\\n  function changeTreasury(address _newTreasury) external;\\r\\n\\r\\n  function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n  function changeAgentFactory(address _agentFactory) external;\\r\\n\\r\\n  function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external;\\r\\n\\r\\n  function liquidate(address token) external;\\r\\n\\r\\n  function liquidateAll() external;\\r\\n\\r\\n  function burnERC20(uint256 burnAmount) external;\\r\\n\\r\\n  function burnUSDC(uint256 burnAmount) external;\\r\\n\\r\\n  function getAgentAddress(address _user) external view returns (address);\\r\\n\\r\\n  function mintWithUSDC(uint256 balAmountToMint) external;\\r\\n\\r\\n  function callRebalance(\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    uint256 limit,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function requiredUSDCtoMint(uint256 balAmountToMint) external view returns (uint256);\\r\\n\\r\\n  function calculateTokenShare(\\r\\n    uint256 totalBaluni,\\r\\n    uint256 totalERC20Balance,\\r\\n    uint256 baluniAmount,\\r\\n    uint256 tokenDecimals\\r\\n  ) external pure returns (uint256);\\r\\n\\r\\n  function tokenValuation(uint256 amount, address token) external view returns (uint256);\\r\\n\\r\\n  function totalValuation() external view returns (uint256);\\r\\n\\r\\n  function getUSDCShareValue(uint256 amount) external view returns (uint256);\\r\\n\\r\\n  function fetchMarketPrices() external view returns (uint256, uint256);\\r\\n\\r\\n  function getVersion() external view returns (uint64);\\r\\n\\r\\n  function unitPrice() external view returns (uint256);\\r\\n  \\r\\n}\\r\\n\",\"keccak256\":\"0x0795abf370daca8b74052ab6f425ab982bb4e0aecc4a72de19b3ff505d9e18a5\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libs/EnumerableSetUpgradeable.sol":{"EnumerableSetUpgradeable":{"abi":[],"devdoc":{"details":"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122028cabe955d9c66efc067dfb99873ee4e988cfca7de7d26b3da3bd7fa63097ad564736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0xCA 0xBE SWAP6 TSTORE SWAP13 PUSH7 0xEFC067DFB99873 0xEE 0x4E SWAP9 DUP13 0xFC 0xA7 0xDE PUSH30 0x26B3DA3BD7FA63097AD564736F6C63430008190033000000000000000000 ","sourceMap":"1265:11794:24:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea264697066735822122028cabe955d9c66efc067dfb99873ee4e988cfca7de7d26b3da3bd7fa63097ad564736f6c63430008190033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0xCA 0xBE SWAP6 TSTORE SWAP13 PUSH7 0xEFC067DFB99873 0xEE 0x4E SWAP9 DUP13 0xFC 0xA7 0xDE PUSH30 0x26B3DA3BD7FA63097AD564736F6C63430008190033000000000000000000 ","sourceMap":"1265:11794:24:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11400","executionCost":"infinite","totalCost":"infinite"},"internal":{"_add(struct EnumerableSetUpgradeable.Set storage pointer,bytes32)":"infinite","_at(struct EnumerableSetUpgradeable.Set storage pointer,uint256)":"infinite","_contains(struct EnumerableSetUpgradeable.Set storage pointer,bytes32)":"infinite","_length(struct EnumerableSetUpgradeable.Set storage pointer)":"infinite","_remove(struct EnumerableSetUpgradeable.Set storage pointer,bytes32)":"infinite","_values(struct EnumerableSetUpgradeable.Set storage pointer)":"infinite","add(struct EnumerableSetUpgradeable.AddressSet storage pointer,address)":"infinite","add(struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32)":"infinite","add(struct EnumerableSetUpgradeable.UintSet storage pointer,uint256)":"infinite","at(struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256)":"infinite","at(struct EnumerableSetUpgradeable.Bytes32Set storage pointer,uint256)":"infinite","at(struct EnumerableSetUpgradeable.UintSet storage pointer,uint256)":"infinite","contains(struct EnumerableSetUpgradeable.AddressSet storage pointer,address)":"infinite","contains(struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32)":"infinite","contains(struct EnumerableSetUpgradeable.UintSet storage pointer,uint256)":"infinite","length(struct EnumerableSetUpgradeable.AddressSet storage pointer)":"infinite","length(struct EnumerableSetUpgradeable.Bytes32Set storage pointer)":"infinite","length(struct EnumerableSetUpgradeable.UintSet storage pointer)":"infinite","remove(struct EnumerableSetUpgradeable.AddressSet storage pointer,address)":"infinite","remove(struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32)":"infinite","remove(struct EnumerableSetUpgradeable.UintSet storage pointer,uint256)":"infinite","values(struct EnumerableSetUpgradeable.AddressSet storage pointer)":"infinite","values(struct EnumerableSetUpgradeable.Bytes32Set storage pointer)":"infinite","values(struct EnumerableSetUpgradeable.UintSet storage pointer)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/EnumerableSetUpgradeable.sol\":\"EnumerableSetUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/libs/EnumerableSetUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @dev Library for managing\\r\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\r\\n * types.\\r\\n *\\r\\n * Sets have the following properties:\\r\\n *\\r\\n * - Elements are added, removed, and checked for existence in constant time\\r\\n * (O(1)).\\r\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\r\\n *\\r\\n * ```\\r\\n * contract Example {\\r\\n *     // Add the library methods\\r\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\r\\n *\\r\\n *     // Declare a set state variable\\r\\n *     EnumerableSet.AddressSet private mySet;\\r\\n * }\\r\\n * ```\\r\\n *\\r\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\r\\n * and `uint256` (`UintSet`) are supported.\\r\\n *\\r\\n * [WARNING]\\r\\n * ====\\r\\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\\r\\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\r\\n *\\r\\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\\r\\n * ====\\r\\n */\\r\\nlibrary EnumerableSetUpgradeable {\\r\\n    // To implement this library for multiple types with as little code\\r\\n    // repetition as possible, we write it in terms of a generic Set type with\\r\\n    // bytes32 values.\\r\\n    // The Set implementation uses private functions, and user-facing\\r\\n    // implementations (such as AddressSet) are just wrappers around the\\r\\n    // underlying Set.\\r\\n    // This means that we can only create new EnumerableSets for types that fit\\r\\n    // in bytes32.\\r\\n\\r\\n    struct Set {\\r\\n        // Storage of set values\\r\\n        bytes32[] _values;\\r\\n        // Position of the value in the `values` array, plus 1 because index 0\\r\\n        // means a value is not in the set.\\r\\n        mapping(bytes32 => uint256) _indexes;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Add a value to a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was added to the set, that is if it was not\\r\\n     * already present.\\r\\n     */\\r\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\r\\n        if (!_contains(set, value)) {\\r\\n            set._values.push(value);\\r\\n            // The value is stored at length-1, but we add 1 to all indexes\\r\\n            // and use 0 as a sentinel value\\r\\n            set._indexes[value] = set._values.length;\\r\\n            return true;\\r\\n        } else {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Removes a value from a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was removed from the set, that is if it was\\r\\n     * present.\\r\\n     */\\r\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\r\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\r\\n        uint256 valueIndex = set._indexes[value];\\r\\n\\r\\n        if (valueIndex != 0) {\\r\\n            // Equivalent to contains(set, value)\\r\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\r\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\r\\n            // This modifies the order of the array, as noted in {at}.\\r\\n\\r\\n            uint256 toDeleteIndex = valueIndex - 1;\\r\\n            uint256 lastIndex = set._values.length - 1;\\r\\n\\r\\n            if (lastIndex != toDeleteIndex) {\\r\\n                bytes32 lastValue = set._values[lastIndex];\\r\\n\\r\\n                // Move the last value to the index where the value to delete is\\r\\n                set._values[toDeleteIndex] = lastValue;\\r\\n                // Update the index for the moved value\\r\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\r\\n            }\\r\\n\\r\\n            // Delete the slot where the moved value was stored\\r\\n            set._values.pop();\\r\\n\\r\\n            // Delete the index for the deleted slot\\r\\n            delete set._indexes[value];\\r\\n\\r\\n            return true;\\r\\n        } else {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns true if the value is in the set. O(1).\\r\\n     */\\r\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\r\\n        return set._indexes[value] != 0;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of values on the set. O(1).\\r\\n     */\\r\\n    function _length(Set storage set) private view returns (uint256) {\\r\\n        return set._values.length;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\r\\n     *\\r\\n     * Note that there are no guarantees on the ordering of values inside the\\r\\n     * array, and it may change when more values are added or removed.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `index` must be strictly less than {length}.\\r\\n     */\\r\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\r\\n        return set._values[index];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Return the entire set in an array\\r\\n     *\\r\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\r\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\r\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\r\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\r\\n     */\\r\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\r\\n        return set._values;\\r\\n    }\\r\\n\\r\\n    // Bytes32Set\\r\\n\\r\\n    struct Bytes32Set {\\r\\n        Set _inner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Add a value to a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was added to the set, that is if it was not\\r\\n     * already present.\\r\\n     */\\r\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\r\\n        return _add(set._inner, value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Removes a value from a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was removed from the set, that is if it was\\r\\n     * present.\\r\\n     */\\r\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\r\\n        return _remove(set._inner, value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns true if the value is in the set. O(1).\\r\\n     */\\r\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\r\\n        return _contains(set._inner, value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of values in the set. O(1).\\r\\n     */\\r\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\r\\n        return _length(set._inner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\r\\n     *\\r\\n     * Note that there are no guarantees on the ordering of values inside the\\r\\n     * array, and it may change when more values are added or removed.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `index` must be strictly less than {length}.\\r\\n     */\\r\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\r\\n        return _at(set._inner, index);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Return the entire set in an array\\r\\n     *\\r\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\r\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\r\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\r\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\r\\n     */\\r\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\r\\n        return _values(set._inner);\\r\\n    }\\r\\n\\r\\n    // AddressSet\\r\\n\\r\\n    struct AddressSet {\\r\\n        Set _inner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Add a value to a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was added to the set, that is if it was not\\r\\n     * already present.\\r\\n     */\\r\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\r\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Removes a value from a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was removed from the set, that is if it was\\r\\n     * present.\\r\\n     */\\r\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\r\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns true if the value is in the set. O(1).\\r\\n     */\\r\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\r\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of values in the set. O(1).\\r\\n     */\\r\\n    function length(AddressSet storage set) internal view returns (uint256) {\\r\\n        return _length(set._inner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\r\\n     *\\r\\n     * Note that there are no guarantees on the ordering of values inside the\\r\\n     * array, and it may change when more values are added or removed.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `index` must be strictly less than {length}.\\r\\n     */\\r\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\r\\n        return address(uint160(uint256(_at(set._inner, index))));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Return the entire set in an array\\r\\n     *\\r\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\r\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\r\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\r\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\r\\n     */\\r\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\r\\n        bytes32[] memory store = _values(set._inner);\\r\\n        address[] memory result;\\r\\n\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            result := store\\r\\n        }\\r\\n\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    // UintSet\\r\\n\\r\\n    struct UintSet {\\r\\n        Set _inner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Add a value to a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was added to the set, that is if it was not\\r\\n     * already present.\\r\\n     */\\r\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\r\\n        return _add(set._inner, bytes32(value));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Removes a value from a set. O(1).\\r\\n     *\\r\\n     * Returns true if the value was removed from the set, that is if it was\\r\\n     * present.\\r\\n     */\\r\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\r\\n        return _remove(set._inner, bytes32(value));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns true if the value is in the set. O(1).\\r\\n     */\\r\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\r\\n        return _contains(set._inner, bytes32(value));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of values on the set. O(1).\\r\\n     */\\r\\n    function length(UintSet storage set) internal view returns (uint256) {\\r\\n        return _length(set._inner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\r\\n     *\\r\\n     * Note that there are no guarantees on the ordering of values inside the\\r\\n     * array, and it may change when more values are added or removed.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `index` must be strictly less than {length}.\\r\\n     */\\r\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\r\\n        return uint256(_at(set._inner, index));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Return the entire set in an array\\r\\n     *\\r\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\r\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\r\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\r\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\r\\n     */\\r\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\r\\n        bytes32[] memory store = _values(set._inner);\\r\\n        uint256[] memory result;\\r\\n\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            result := store\\r\\n        }\\r\\n\\r\\n        return result;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x0e86a06de431b687eaf963847642f6f5f857bcc08b5ad5334097669d83d46ab9\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}