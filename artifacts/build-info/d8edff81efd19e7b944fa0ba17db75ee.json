{"id":"d8edff81efd19e7b944fa0ba17db75ee","_format":"hh-sol-build-info-1","solcVersion":"0.8.25","solcLongVersion":"0.8.25+commit.b61c2a91","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/BaluniV1Pool.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n/**\r\n *  __                  __                      __\r\n * /  |                /  |                    /  |\r\n * $$ |____    ______  $$ | __    __  _______  $$/\r\n * $$      \\  /      \\ $$ |/  |  /  |/       \\ /  |\r\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\r\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\r\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\__$$ |$$ |  $$ |$$ |\r\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\r\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\r\n *\r\n *\r\n *                  ,-\"\"\"\"-.\r\n *                ,'      _ `.\r\n *               /       )_)  \\\r\n *              :              :\r\n *              \\              /\r\n *               \\            /\r\n *                `.        ,'\r\n *                  `.    ,'\r\n *                    `.,'\r\n *                     /\\`.   ,-._\r\n *                         `-'    \\__\r\n *                              .\r\n *               s                \\\r\n *                                \\\\\r\n *                                 \\\\\r\n *                                  >\\/7\r\n *                              _.-(6'  \\\r\n *                             (=___._/` \\\r\n *                                  )  \\ |\r\n *                                 /   / |\r\n *                                /    > /\r\n *                               j    < _\\\r\n *                           _.-' :      ``.\r\n *                           \\ r=._\\        `.\r\n */\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\r\nimport '@openzeppelin/contracts/utils/ReentrancyGuard.sol';\r\n\r\nimport './interfaces/IBaluniV1PoolPeriphery.sol';\r\nimport './interfaces/IBaluniV1Registry.sol';\r\nimport './interfaces/IBaluniV1Rebalancer.sol';\r\nimport './interfaces/IBaluniV1Oracle.sol';\r\n\r\ncontract BaluniV1Pool is ERC20, ReentrancyGuard {\r\n    AssetInfo[] public assetInfos;\r\n\r\n    uint256 public trigger;\r\n    uint256 public ONE;\r\n    address public baseAsset;\r\n    uint256 private scalingFactor;\r\n\r\n    IBaluniV1Registry public registry;\r\n\r\n    struct AssetInfo {\r\n        address asset;\r\n        uint256 weight;\r\n    }\r\n\r\n    event RebalancePerformed(address indexed by, address[] assets);\r\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\r\n    event Burn(address indexed user, uint256 sharesBurned);\r\n    event Mint(address indexed to, uint256 sharesMinted);\r\n    event Swap(\r\n        address indexed user,\r\n        address indexed fromToken,\r\n        address indexed toToken,\r\n        uint256 amountIn,\r\n        uint256 amountOut\r\n    );\r\n\r\n    constructor(\r\n        address[] memory _assets,\r\n        uint256[] memory _weights,\r\n        uint256 _trigger,\r\n        address _registry\r\n    ) ERC20('Baluni LP', 'BALUNI-LP') {\r\n        registry = IBaluniV1Registry(_registry);\r\n\r\n        ONE = 1e18;\r\n\r\n        bool result = initializeAssets(_assets, _weights);\r\n        require(result, 'Initialization failed');\r\n\r\n        trigger = _trigger;\r\n\r\n        baseAsset = registry.getUSDC();\r\n\r\n        scalingFactor = 10 ** (18 - 6);\r\n\r\n        require(baseAsset != address(0), 'Invalid base asset address');\r\n\r\n        uint256 totalWeight = 0;\r\n\r\n        for (uint256 i = 0; i < _weights.length; i++) {\r\n            totalWeight += _weights[i];\r\n        }\r\n\r\n        require(totalWeight == 10000, 'Invalid weights');\r\n    }\r\n\r\n    modifier onlyPeriphery() {\r\n        address periphery = registry.getBaluniPoolPeriphery();\r\n        require(msg.sender == periphery, 'Only Periphery');\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Initializes the assets and their weights for the pool.\r\n     * @param _assets The array of asset addresses.\r\n     * @param _weights The array of weights corresponding to each asset.\r\n     */\r\n    function initializeAssets(address[] memory _assets, uint256[] memory _weights) internal returns (bool) {\r\n        address rebalancer = registry.getBaluniRebalancer();\r\n\r\n        require(registry.getBaluniRebalancer() != address(0), 'Invalid rebalancer address');\r\n        require(_assets.length == _weights.length, 'Assets and weights length mismatch');\r\n\r\n        for (uint256 i = 0; i < _assets.length; i++) {\r\n            require(_assets[i] != address(0), 'Invalid asset address');\r\n            require(_weights[i] > 0, 'Invalid weight');\r\n\r\n            assetInfos.push(AssetInfo({asset: _assets[i], weight: _weights[i]}));\r\n\r\n            IERC20 asset = IERC20(_assets[i]);\r\n            if (asset.allowance(address(this), address(rebalancer)) == 0) {\r\n                asset.approve(address(rebalancer), type(uint256).max);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\r\n     * transferring the calculated amounts from the user to the pool, minting the total added liquidity,\r\n     * updating the reserves, and emitting an event to indicate the rebalancing of weights.\r\n     * @param receiver The address to receive the minted liquidity tokens.\r\n     */\r\n    function rebalanceWeights(address receiver) external onlyPeriphery returns (uint256[] memory) {\r\n        require(isRebalanceNeeded(), 'Rebalance not needed');\r\n        (uint256 totalValuation, uint256[] memory valuations) = _computeTotalValuation(); // 6dec\r\n\r\n        uint256[] memory amountsToAdd = _calculateAmountsToAdd(totalValuation, valuations); // 6dec\r\n        uint256 totalAddedLiquidity = _calculateTotalAddedLiquidity(amountsToAdd);\r\n\r\n        totalAddedLiquidity *= scalingFactor;\r\n\r\n        uint256[] memory amounts = new uint256[](assetInfos.length);\r\n\r\n        for (uint256 i = 0; i < amountsToAdd.length; i++) {\r\n            if (amountsToAdd[i] > 0) {\r\n                amounts[i] = _calculateLiquidity(i, amountsToAdd[i]);\r\n            }\r\n        }\r\n\r\n        _mint(receiver, totalAddedLiquidity);\r\n\r\n        emit WeightsRebalanced(msg.sender, amountsToAdd);\r\n\r\n        return amounts;\r\n    }\r\n\r\n    /**\r\n     * @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\r\n     *\r\n     * Requirements:\r\n     * - `fromToken` and `toToken` must be different tokens.\r\n     * - `amount` must be greater than zero.\r\n     * - Sufficient liquidity of `toToken` must be available in the contract.\r\n     *\r\n     * Emits a `Swap` event with the details of the swap.\r\n     *\r\n     * Updates the reserves after the swap.\r\n     *\r\n     * @param fromToken The address of the token to swap from.\r\n     * @param toToken The address of the token to swap to.\r\n     * @param amount The amount of `fromToken` to swap.\r\n     * @param receiver The address to receive the swapped tokens.\r\n     * @return amountOut The amount of `toToken` received after the swap.\r\n     */\r\n    function swap(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount,\r\n        address receiver\r\n    ) external nonReentrant returns (uint256 amountOut) {\r\n        uint256 _BPS_FEE = registry.getBPS_FEE();\r\n        require(fromToken != toToken, 'Cannot swap the same token');\r\n        require(amount > 0, 'Amount must be greater than zero');\r\n\r\n        uint256 receivedAmount = getAmountOut(fromToken, toToken, amount);\r\n        require(getAssetReserve(toToken) >= receivedAmount, 'Insufficient Liquidity');\r\n\r\n        uint256 fee = (receivedAmount * _BPS_FEE) / 10000;\r\n        amountOut = receivedAmount - fee;\r\n\r\n        require(amountOut > 0, 'Amount to send must be greater than 0');\r\n\r\n        emit Swap(receiver, fromToken, toToken, amount, amountOut);\r\n\r\n        return amountOut;\r\n    }\r\n\r\n    /**\r\n     * @dev Mints new tokens and adds them to the specified address.\r\n     * @param to The address to which the new tokens will be minted.\r\n     * @return The amount of tokens minted.\r\n     */\r\n    function mint(address to, uint256[] memory amounts) external onlyPeriphery returns (uint256) {\r\n        uint256 totalSupply = totalSupply();\r\n        uint256 totalValue = 0;\r\n        uint256[] memory _reserves = getReserves();\r\n        require(assetInfos.length == _reserves.length, 'Invalid reserves length');\r\n        require(assetInfos.length > 0, 'No assets');\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            address asset = assetInfos[i].asset;\r\n            uint256 valuation;\r\n            if (asset == baseAsset) {\r\n                valuation = amounts[i];\r\n                continue;\r\n            }\r\n            valuation = _convertTokenToBase(asset, amounts[i]);\r\n            totalValue += valuation;\r\n        }\r\n\r\n        require(totalValue > 0, 'Total value must be greater than 0');\r\n\r\n        uint256 toMint;\r\n\r\n        if (totalSupply == 0) {\r\n            toMint = totalValue * scalingFactor;\r\n        } else {\r\n            (uint256 totalLiquidity, ) = _computeTotalValuation();\r\n            require(totalLiquidity > 0, 'Total liquidity must be greater than 0');\r\n            toMint = ((totalValue * scalingFactor) * totalSupply) / (totalLiquidity * scalingFactor);\r\n        }\r\n        require(toMint != 0, 'Mint qty is 0');\r\n\r\n        _mint(to, toMint);\r\n\r\n        emit Mint(to, toMint);\r\n\r\n        return toMint;\r\n    }\r\n\r\n    /**\r\n     * @dev Burns the pool tokens and transfers the underlying assets to the specified address.\r\n     * @param to The address to transfer the underlying assets to.\r\n     * @notice This function can only be called by the periphery contract.\r\n     * @notice The pool tokens must have a balance greater than 0.\r\n     * @notice The total supply of pool tokens must be greater than 0.\r\n     * @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\r\n     * @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\r\n     * @notice The function checks if the pool has sufficient liquidity before performing any transfers.\r\n     * @notice If any transfer fails, the function reverts the entire operation.\r\n     * @notice After the transfers, the function updates the reserves of the pool.\r\n     * @notice Emits a `Burn` event with the address and share of pool tokens burned.\r\n     */\r\n    function burn(address to) external onlyPeriphery returns (uint256[] memory) {\r\n        uint256 _BPS_FEE = registry.getBPS_FEE();\r\n        address periphery = registry.getBaluniPoolPeriphery();\r\n\r\n        uint256 share = balanceOf(address(this));\r\n        require(share > 0, 'Share must be greater than 0');\r\n\r\n        uint256 totalSupply = totalSupply();\r\n        require(totalSupply > 0, 'No liquidity');\r\n\r\n        uint256[] memory amounts = new uint256[](assetInfos.length);\r\n        uint256 fee = (share * _BPS_FEE) / 10000;\r\n        uint256 shareAfterFee = share - fee;\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            uint256 assetBalance = IBaluniV1PoolPeriphery(periphery).getAssetReserve(\r\n                address(this),\r\n                assetInfos[i].asset\r\n            );\r\n            amounts[i] = (assetBalance * shareAfterFee) / totalSupply;\r\n        }\r\n\r\n        require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient BALUNI liquidity');\r\n\r\n        address treasury = registry.getTreasury();\r\n        bool feeTransferSuccess = IERC20(address(this)).transfer(treasury, fee);\r\n        require(feeTransferSuccess, 'Fee transfer failed');\r\n\r\n        _burn(address(this), shareAfterFee);\r\n\r\n        emit Burn(to, shareAfterFee);\r\n\r\n        return amounts;\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\r\n     * @param fromToken The address of the token being swapped from.\r\n     * @param toToken The address of the token being swapped to.\r\n     * @param amount The amount of `fromToken` being swapped.\r\n     * @return The amount of `toToken` that will be received.\r\n     */\r\n    function getAmountOut(address fromToken, address toToken, uint256 amount) public view returns (uint256) {\r\n        IBaluniV1Oracle baluniOracle = IBaluniV1Oracle(registry.getBaluniOracle());\r\n        require(registry.getBaluniOracle() != address(0), 'Invalid oracle address');\r\n        uint256 amountOut = baluniOracle.convert(fromToken, toToken, amount);\r\n        return amountOut;\r\n    }\r\n\r\n    /**\r\n     * @dev Performs rebalance\r\n     */\r\n    function performRebalanceIfNeeded()\r\n        external\r\n        onlyPeriphery\r\n        returns (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove)\r\n    {\r\n        require(isRebalanceNeeded(), 'Rebalance not needed');\r\n        return _performRebalanceIfNeeded();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the deviation between the current weights and target weights of the assets in the pool.\r\n     * @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\r\n     */\r\n    function getDeviation() public view returns (bool[] memory directions, uint256[] memory deviations) {\r\n        (uint256 totVal, uint256[] memory valuations) = _computeTotalValuation();\r\n        uint256 numAssets = assetInfos.length;\r\n\r\n        directions = new bool[](numAssets);\r\n        deviations = new uint256[](numAssets);\r\n\r\n        for (uint256 i = 0; i < numAssets; i++) {\r\n            uint256 currentWeight = (valuations[i] * 10000) / totVal;\r\n            uint256 targetWeight = assetInfos[i].weight;\r\n\r\n            if (currentWeight > targetWeight) {\r\n                deviations[i] = currentWeight - targetWeight;\r\n                directions[i] = true;\r\n            } else {\r\n                deviations[i] = targetWeight - currentWeight;\r\n                directions[i] = false;\r\n            }\r\n        }\r\n\r\n        return (directions, deviations);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the liquidity of a specific asset in the pool.\r\n     * @param assetIndex The index of the asset.\r\n     * @return The liquidity of the asset.\r\n     */\r\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256) {\r\n        (, uint256[] memory usdValuations) = _computeTotalValuation();\r\n        require(assetIndex < usdValuations.length, 'Invalid asset index');\r\n        return usdValuations[assetIndex];\r\n    }\r\n\r\n    /**\r\n     * @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\r\n     * @return totalVal The total valuation of the pool.\r\n     * @return valuations An array of individual valuations.\r\n     */\r\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations) {\r\n        (totalVal, valuations) = _computeTotalValuation();\r\n        return (totalVal, valuations);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total liquidity of the pool.\r\n     * @return The total liquidity of the pool.\r\n     */\r\n    function liquidity() external view returns (uint256) {\r\n        (uint256 totalVal, ) = _computeTotalValuation();\r\n        return totalVal;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the unit price of the pool.\r\n     * @return The unit price of the pool.\r\n     */\r\n    function unitPrice() external view returns (uint256) {\r\n        uint256 baseDecimal = IERC20Metadata(baseAsset).decimals();\r\n        uint256 factor = 10 ** (18 - baseDecimal);\r\n        (uint256 totalVal, ) = _computeTotalValuation();\r\n        uint256 totalSupply = totalSupply();\r\n        if (totalSupply == 0) {\r\n            return 0;\r\n        }\r\n        return (((totalVal * factor) / totalSupply) * ONE);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an array of reserves for each asset in the pool.\r\n     * @return An array of reserves.\r\n     */\r\n    function getReserves() public view returns (uint256[] memory) {\r\n        address periphery = registry.getBaluniPoolPeriphery();\r\n        return IBaluniV1PoolPeriphery(periphery).getReserves(address(this));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the reserve amount of the specified asset.\r\n     * @param asset The address of the asset.\r\n     * @return The reserve amount of the asset.\r\n     */\r\n    function getAssetReserve(address asset) public view returns (uint256) {\r\n        address periphery = registry.getBaluniPoolPeriphery();\r\n        return IBaluniV1PoolPeriphery(periphery).getAssetReserve(address(this), asset);\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the list of assets in the pool.\r\n     * @return An array of addresses representing the assets.\r\n     */\r\n    function getAssets() external view returns (address[] memory) {\r\n        address[] memory assets = new address[](assetInfos.length);\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            assets[i] = assetInfos[i].asset;\r\n        }\r\n        return assets;\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the list of weights associated with the assets in the pool.\r\n     * @return An array of uint256 values representing the weights.\r\n     */\r\n    function getWeights() external view returns (uint256[] memory) {\r\n        uint256[] memory weights = new uint256[](assetInfos.length);\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            weights[i] = assetInfos[i].weight;\r\n        }\r\n        return weights;\r\n    }\r\n\r\n    /**\r\n     * @dev Computes the total valuation of the assets in the pool.\r\n     * @return totalValuation The total valuation of the assets.\r\n     * @return valuations An array of valuations for each asset in the pool.\r\n     */\r\n    function _computeTotalValuation() internal view returns (uint256 totalValuation, uint256[] memory valuations) {\r\n        uint256 numAssets = assetInfos.length;\r\n        valuations = new uint256[](numAssets);\r\n        for (uint256 i = 0; i < numAssets; i++) {\r\n            address asset = assetInfos[i].asset;\r\n            uint256 assetReserve = getAssetReserve(address(asset));\r\n\r\n            if ((address(asset) == baseAsset)) {\r\n                valuations[i] = assetReserve;\r\n            } else {\r\n                uint256 valuation = _convertTokenToBase(address(asset), assetReserve);\r\n                valuations[i] = valuation;\r\n            }\r\n            totalValuation += valuations[i];\r\n        }\r\n        return (totalValuation, valuations);\r\n    }\r\n\r\n    /**\r\n     * @dev Performs rebalance if needed.\r\n     * This function retrieves the assets and weights from the `assetInfos` array,\r\n     * and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\r\n     * It emits a `RebalancePerformed` event after the rebalance is performed.\r\n     * @notice This function should only be called internally.\r\n     */\r\n    function _performRebalanceIfNeeded() internal returns (uint256[] memory, uint256[] memory) {\r\n        address periphery = registry.getBaluniPoolPeriphery();\r\n        address rebalancer = registry.getBaluniRebalancer();\r\n\r\n        address[] memory assets = new address[](assetInfos.length);\r\n        uint256[] memory weights = new uint256[](assetInfos.length);\r\n        uint256[] memory peripheryBalancesB4 = new uint256[](assetInfos.length);\r\n        uint256[] memory peripheryBalancesAfter = new uint256[](assetInfos.length);\r\n        uint256[] memory amountsToAdd = new uint256[](assetInfos.length);\r\n        uint256[] memory amountsToRemove = new uint256[](assetInfos.length);\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            assets[i] = assetInfos[i].asset;\r\n            weights[i] = assetInfos[i].weight;\r\n            peripheryBalancesB4[i] = IERC20(assets[i]).balanceOf(periphery);\r\n        }\r\n\r\n        uint256[] memory balances = getReserves();\r\n\r\n        IBaluniV1Rebalancer(rebalancer).rebalance(balances, assets, weights, trigger, periphery, periphery, baseAsset);\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            peripheryBalancesAfter[i] = IERC20(assets[i]).balanceOf(periphery);\r\n\r\n            if (peripheryBalancesAfter[i] > peripheryBalancesB4[i]) {\r\n                amountsToAdd[i] = peripheryBalancesAfter[i] - peripheryBalancesB4[i];\r\n            } else {\r\n                amountsToRemove[i] = peripheryBalancesB4[i] - peripheryBalancesAfter[i];\r\n            }\r\n        }\r\n\r\n        emit RebalancePerformed(msg.sender, assets);\r\n\r\n        return (amountsToAdd, amountsToRemove);\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the total added liquidity based on the amounts to add.\r\n     * @param amountsToAdd An array of amounts to add for each asset.\r\n     * @return totalAddedLiquidity The total added liquidity.\r\n     */\r\n    function _calculateTotalAddedLiquidity(\r\n        uint256[] memory amountsToAdd\r\n    ) internal view returns (uint256 totalAddedLiquidity) {\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            totalAddedLiquidity += amountsToAdd[i];\r\n        }\r\n        return totalAddedLiquidity;\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\r\n     * @param totalValuation The total valuation of the pool.\r\n     * @param valuations An array of current valuations for each asset.\r\n     * @return amountsToAdd An array of amounts to add to each asset.\r\n     */\r\n    function _calculateAmountsToAdd(\r\n        uint256 totalValuation,\r\n        uint256[] memory valuations\r\n    ) internal view returns (uint256[] memory amountsToAdd) {\r\n        amountsToAdd = new uint256[](assetInfos.length);\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            uint256 targetValuation = (totalValuation * assetInfos[i].weight) / 10000;\r\n            if (valuations[i] < targetValuation) {\r\n                amountsToAdd[i] = targetValuation - valuations[i];\r\n            }\r\n        }\r\n\r\n        return amountsToAdd;\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\r\n     * @param index The index of the asset in the assetInfos array.\r\n     * @param amountToAdd The amount of native tokens to add as liquidity.\r\n     */\r\n    function _calculateLiquidity(uint256 index, uint256 amountToAdd) internal view returns (uint256) {\r\n        if (assetInfos[index].asset == baseAsset) return amountToAdd;\r\n        uint256 tokenAmount = _convertBaseToToken(assetInfos[index].asset, amountToAdd);\r\n        require(tokenAmount > 0, 'Invalid token amount to add');\r\n        return tokenAmount;\r\n    }\r\n\r\n    /**\r\n     * @dev Converts the specified amount of native token to the corresponding token amount.\r\n     * @param toToken The address of the native token to convert from.\r\n     * @param amount The amount of native token to convert.\r\n     * @return The corresponding token amount.\r\n     */\r\n    function _convertBaseToToken(address toToken, uint256 amount) internal view returns (uint256) {\r\n        return getAmountOut(baseAsset, toToken, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts the specified token to the native token using the rebalancer contract.\r\n     * @param fromToken The address of the token to convert from.\r\n     * @param amount The amount of tokens to convert.\r\n     * @return tokenAmount The converted amount of tokens.\r\n     */\r\n    function _convertTokenToBase(address fromToken, uint256 amount) internal view returns (uint256 tokenAmount) {\r\n        return getAmountOut(fromToken, baseAsset, amount);\r\n    }\r\n\r\n    // return true if one of the deviation overcome the trigger\r\n    /**\r\n     * @dev Checks if rebalancing is needed for the pool.\r\n     * @return A boolean value indicating whether rebalancing is needed or not.\r\n     */\r\n    function isRebalanceNeeded() public view returns (bool) {\r\n        (bool[] memory directions, uint256[] memory deviations) = getDeviation();\r\n        for (uint256 i = 0; i < deviations.length; i++) {\r\n            if (directions[i] && deviations[i] > trigger) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n"},"contracts/BaluniV1PoolFactory.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n/**\r\n *  __                  __                      __\r\n * /  |                /  |                    /  |\r\n * $$ |____    ______  $$ | __    __  _______  $$/\r\n * $$      \\  /      \\ $$ |/  |  /  |/       \\ /  |\r\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\r\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\r\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\__$$ |$$ |  $$ |$$ |\r\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\r\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\r\n *\r\n *\r\n *                  ,-\"\"\"\"-.\r\n *                ,'      _ `.\r\n *               /       )_)  \\\r\n *              :              :\r\n *              \\              /\r\n *               \\            /\r\n *                `.        ,'\r\n *                  `.    ,'\r\n *                    `.,'\r\n *                     /\\`.   ,-._\r\n *                         `-'    \\__\r\n *                              .\r\n *               s                \\\r\n *                                \\\\\r\n *                                 \\\\\r\n *                                  >\\/7\r\n *                              _.-(6'  \\\r\n *                             (=___._/` \\\r\n *                                  )  \\ |\r\n *                                 /   / |\r\n *                                /    > /\r\n *                               j    < _\\\r\n *                           _.-' :      ``.\r\n *                           \\ r=._\\        `.\r\n */\r\nimport './BaluniV1Pool.sol';\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\r\nimport './interfaces/IBaluniV1Registry.sol';\r\n\r\ncontract BaluniV1PoolFactory is Initializable, UUPSUpgradeable, OwnableUpgradeable {\r\n    address[] public allPools;\r\n\r\n    IBaluniV1Registry public registry;\r\n\r\n    mapping(address => mapping(address => address)) public getPool;\r\n\r\n    event PoolCreated(address indexed pool, address[] assets);\r\n\r\n    function initialize(address _register) public initializer {\r\n        __UUPSUpgradeable_init();\r\n        __Ownable_init(msg.sender);\r\n        registry = IBaluniV1Registry(_register);\r\n    }\r\n\r\n    function reinitialize(address _register, uint64 _version) public reinitializer(_version) {\r\n        registry = IBaluniV1Registry(_register);\r\n    }\r\n\r\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\r\n\r\n    /**\r\n     * @dev Creates a new BaluniV1Pool contract and registers it in the factory.\r\n     * @param assets The array of asset addresses to be included in the pool.\r\n     * @param weights The array of weights corresponding to each asset in the pool.\r\n     * @param trigger The trigger value for rebalancing the pool.\r\n     * @return The address of the newly created pool.\r\n     */\r\n    function createPool(address[] memory assets, uint256[] memory weights, uint256 trigger) external returns (address) {\r\n        require(assets.length > 1, 'At least two assets are required');\r\n        require(assets.length == weights.length, 'Assets and weights length mismatch');\r\n\r\n        for (uint256 i = 0; i < assets.length; i++) {\r\n            for (uint256 j = i + 1; j < assets.length; j++) {\r\n                require(address(getPool[assets[i]][assets[j]]) == address(0), 'Pool already exists for this pair');\r\n            }\r\n        }\r\n\r\n        BaluniV1Pool newPool = new BaluniV1Pool(assets, weights, trigger, address(registry));\r\n\r\n        address poolAddress = address(newPool);\r\n\r\n        allPools.push(poolAddress);\r\n        for (uint256 i = 0; i < assets.length; i++) {\r\n            for (uint256 j = i + 1; j < assets.length; j++) {\r\n                getPool[assets[i]][assets[j]] = poolAddress;\r\n                getPool[assets[j]][assets[i]] = poolAddress;\r\n            }\r\n        }\r\n\r\n        emit PoolCreated(poolAddress, assets);\r\n\r\n        return poolAddress;\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves all the pools created by the factory.\r\n     * @return An array of pool addresses.\r\n     */\r\n    function getAllPools() external view returns (address[] memory) {\r\n        return allPools;\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the number of pools created by the factory.\r\n     * @return The count of pools.\r\n     */\r\n    function getPoolsCount() external view returns (uint256) {\r\n        return allPools.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the assets of a specific pool.\r\n     * @param poolAddress The address of the pool.\r\n     * @return An array of asset addresses.\r\n     */\r\n    function getPoolAssets(address poolAddress) external view returns (address[] memory) {\r\n        BaluniV1Pool pool = BaluniV1Pool(poolAddress);\r\n        return pool.getAssets();\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the pool address based on the given assets.\r\n     * @param asset1 The address of the first asset.\r\n     * @param asset2 The address of the second asset.\r\n     * @return The address of the pool.\r\n     */\r\n    function getPoolByAssets(address asset1, address asset2) external view returns (address) {\r\n        return address(getPool[asset1][asset2]);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an array of pool addresses that contain the specified token.\r\n     * @param token The address of the token to search for.\r\n     * @return An array of pool addresses.\r\n     */\r\n    function getPoolsByAsset(address token) external view returns (address[] memory) {\r\n        address[] memory pools = new address[](allPools.length);\r\n        uint256 count = 0;\r\n\r\n        for (uint256 i = 0; i < allPools.length; i++) {\r\n            BaluniV1Pool pool = BaluniV1Pool(allPools[i]);\r\n            address[] memory assets = pool.getAssets();\r\n\r\n            for (uint256 j = 0; j < assets.length; j++) {\r\n                if (assets[j] == token) {\r\n                    pools[count] = address(pool);\r\n                    count++;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (count == pools.length) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        address[] memory result = new address[](count);\r\n        for (uint256 i = 0; i < count; i++) {\r\n            result[i] = pools[i];\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function poolExist(address _pool) external view returns (bool) {\r\n        for (uint256 i = 0; i < allPools.length; i++) {\r\n            if (allPools[i] == _pool) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n"},"contracts/interfaces/IBaluniV1Oracle.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1Oracle {\r\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256 valuation);\r\n\r\n    function convertScaled(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount\r\n    ) external view returns (uint256 valuation);\r\n}\r\n"},"contracts/interfaces/IBaluniV1PoolPeriphery.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\n/**\r\n * @title IBaluniV1PoolPeriphery\r\n * @dev Interface for the BaluniV1PoolPeriphery contract.\r\n */\r\ninterface IBaluniV1PoolPeriphery {\r\n    /**\r\n     * @dev Swaps tokens in a BaluniV1Pool.\r\n     * @param fromToken The address of the token to swap from.\r\n     * @param toToken The address of the token to swap to.\r\n     * @param amount The amount of tokens to swap.\r\n     * @param receiver The address of the receiver.\r\n     * @return The amount of tokens received after the swap.\r\n     */\r\n    function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256);\r\n\r\n    /**\r\n     * @dev Performs batch swaps between multiple token pairs.\r\n     * @param fromTokens An array of addresses representing the tokens to swap from.\r\n     * @param toTokens An array of addresses representing the tokens to swap to.\r\n     * @param amounts An array of amounts representing the amounts to swap.\r\n     * @param receivers An array of addresses representing the receivers of the swapped tokens.\r\n     * @return An array of amounts representing the amounts of tokens received after the swaps.\r\n     */\r\n    function batchSwap(\r\n        address[] calldata fromTokens,\r\n        address[] calldata toTokens,\r\n        uint256[] calldata amounts,\r\n        address[] calldata receivers\r\n    ) external returns (uint256[] memory);\r\n\r\n    /**\r\n     * @dev Rebalances weights in a pool.\r\n     * @param poolAddress The address of the pool.\r\n     * @param receiver The address of the receiver.\r\n     */\r\n    function rebalanceWeights(address poolAddress, address receiver) external;\r\n\r\n    /**\r\n     * @dev Adds liquidity to a BaluniV1Pool.\r\n     * @param amounts An array of amounts for each asset to add as liquidity.\r\n     * @param poolAddress The address of the pool.\r\n     * @param receiver The address of the receiver.\r\n     */\r\n    function addLiquidity(uint256[] memory amounts, address poolAddress, address receiver) external returns (uint256);\r\n\r\n    /**\r\n     * @dev Removes liquidity from a BaluniV1Pool.\r\n     * @param share The amount of liquidity tokens to remove.\r\n     * @param poolAddress The address of the pool.\r\n     * @param receiver The address of the receiver.\r\n     */\r\n    function removeLiquidity(uint256 share, address poolAddress, address receiver) external;\r\n\r\n    /**\r\n     * @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\r\n     * @param fromToken The address of the token to swap from.\r\n     * @param toToken The address of the token to swap to.\r\n     * @param amount The amount of tokens to swap.\r\n     * @return The amount of tokens received after the swap.\r\n     */\r\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Performs rebalance if needed for the given tokens.\r\n     * @param poolAddress The address of the token pool to rebalance.\r\n     */\r\n    function performRebalanceIfNeeded(address poolAddress) external;\r\n\r\n    /**\r\n     * @dev Returns an array of pool addresses that contain the given token.\r\n     * @param token The address of the token to search for.\r\n     * @return An array of pool addresses.\r\n     */\r\n    function getPoolsContainingToken(address token) external view returns (address[] memory);\r\n\r\n    /**\r\n     * @dev Returns the version of the contract.\r\n     * @return The version string.\r\n     */\r\n    function getVersion() external view returns (uint64);\r\n\r\n    /**\r\n     * @dev Returns the reserves of the pool.\r\n     * @param pool The address of the pool.\r\n     * @return An array of reserves.\r\n     */\r\n    function getReserves(address pool) external view returns (uint256[] memory);\r\n\r\n    /**\r\n     * @dev Returns the reserve of a specific asset in a pool.\r\n     * @param pool The address of the pool.\r\n     * @param asset The address of the asset.\r\n     * @return The reserve of the asset.\r\n     */\r\n    function getAssetReserve(address pool, address asset) external view returns (uint256);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1Rebalancer {\r\n    struct RebalanceVars {\r\n        uint256 length;\r\n        uint256 totalValue;\r\n        uint256 finalUsdBalance;\r\n        uint256 overweightVaultsLength;\r\n        uint256 underweightVaultsLength;\r\n        uint256 totalActiveWeight;\r\n        uint256 amountOut;\r\n        uint256[] overweightVaults;\r\n        uint256[] overweightAmounts;\r\n        uint256[] underweightVaults;\r\n        uint256[] underweightAmounts;\r\n        uint256[] balances;\r\n    }\r\n\r\n    // Functions\r\n    function rebalance(\r\n        uint256[] memory balances,\r\n        address[] calldata assets,\r\n        uint256[] calldata weights,\r\n        uint256 limit,\r\n        address sender,\r\n        address receiver,\r\n        address baseAsset\r\n    ) external;\r\n\r\n    function checkRebalance(\r\n        uint256[] memory balances,\r\n        address[] calldata assets,\r\n        uint256[] calldata weights,\r\n        uint256 limit,\r\n        address sender,\r\n        address baseAsset\r\n    ) external view returns (RebalanceVars memory);\r\n\r\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Registry.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\n/**\r\n * @title IBaluniV1Registry\r\n * @dev Interface for the BaluniV1Registry contract.\r\n */\r\ninterface IBaluniV1Registry {\r\n    function setUniswapFactory(address _uniswapFactory) external;\r\n\r\n    function setUniswapRouter(address _uniswapRouter) external;\r\n\r\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\r\n\r\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\r\n\r\n    function setBaluniSwapper(address _baluniSwapper) external;\r\n\r\n    function setBaluniOracle(address _baluniOracle) external;\r\n\r\n    function setBaluniPoolFactory(address _baluniPoolFactory) external;\r\n\r\n    function setBaluniRebalancer(address _baluniRebalancer) external;\r\n\r\n    function setBaluniRouter(address _baluniRouter) external;\r\n\r\n    function setBaluniRegistry(address _baluniRegistry) external;\r\n\r\n    function setWNATIVE(address _WNATIVE) external;\r\n\r\n    function setUSDC(address _USDC) external;\r\n\r\n    function setTreasury(address _treasury) external;\r\n\r\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\r\n\r\n    function setBPS_FEE(uint256 __BPS_FEE) external;\r\n\r\n    function getUniswapFactory() external view returns (address);\r\n\r\n    function getUniswapRouter() external view returns (address);\r\n\r\n    function getBaluniSwapper() external view returns (address);\r\n\r\n    function getBaluniOracle() external view returns (address);\r\n\r\n    function getBaluniAgentFactory() external view returns (address);\r\n\r\n    function getBaluniPoolPeriphery() external view returns (address);\r\n\r\n    function getBaluniPoolFactory() external view returns (address);\r\n\r\n    function getBaluniRebalancer() external view returns (address);\r\n\r\n    function getBaluniRouter() external view returns (address);\r\n\r\n    function getBaluniRegistry() external view returns (address);\r\n\r\n    function getWNATIVE() external view returns (address);\r\n\r\n    function getUSDC() external view returns (address);\r\n\r\n    function get1inchSpotAgg() external view returns (address);\r\n\r\n    function getBPS_FEE() external view returns (uint256);\r\n\r\n    function getMAX_BPS_FEE() external view returns (uint256);\r\n\r\n    function getBPS_BASE() external view returns (uint256);\r\n\r\n    function getTreasury() external view returns (address);\r\n\r\n    function setStaticOracle(address _staticOracle) external;\r\n\r\n    function getStaticOracle() external view returns (address);\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":10000},"evmVersion":"cancun","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates","devdoc","userdoc"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[676],"Initializable":[448],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":677,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":449,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":676,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,676,448],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nativeSrc":"1289:56:0","nodeType":"YulBlock","src":"1289:56:0","statements":[{"nativeSrc":"1303:32:0","nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:0","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:0","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[448]},"id":449,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":448,"linearizedBaseContracts":[448],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":448,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":448,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":269,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6357:20:1"},"referencedDeclaration":205,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":448,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7826:20:1"},"referencedDeclaration":205,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":448,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":448,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":448,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nativeSrc":"8846:55:1","nodeType":"YulBlock","src":"8846:55:1","statements":[{"nativeSrc":"8860:31:1","nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:1","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:1","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":443,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":208,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":445,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":447,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":442,"nodeType":"UserDefinedTypeName","pathNode":{"id":441,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"8795:20:1"},"referencedDeclaration":205,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":448,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":449,"src":"2349:6560:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[1126],"IERC1822Proxiable":[686],"Initializable":[448],"UUPSUpgradeable":[630]},"id":631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":450,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":687,"src":"141:88:2","symbolAliases":[{"foreign":{"id":451,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":1127,"src":"230:84:2","symbolAliases":[{"foreign":{"id":453,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":449,"src":"315:50:2","symbolAliases":[{"foreign":{"id":455,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":458,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1023:13:2"},"id":459,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":460,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":686,"src":"1038:17:2"},"id":461,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":630,"linearizedBaseContracts":[630,686,448],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":468,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":630,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":466,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":472,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":630,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":470,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":475,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":480,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":480,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":487,"nodeType":"Block","src":"2643:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2653:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2653:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"2653:13:2"},{"id":486,"nodeType":"PlaceholderStatement","src":"2676:1:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2124:493:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":488,"name":"onlyProxy","nameLocation":"2631:9:2","nodeType":"ModifierDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"2640:2:2"},"src":"2622:62:2","virtual":false,"visibility":"internal"},{"body":{"id":495,"nodeType":"Block","src":"2914:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":491,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"2924:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2924:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"2924:20:2"},{"id":494,"nodeType":"PlaceholderStatement","src":"2954:1:2"}]},"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"2690:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":496,"name":"notDelegated","nameLocation":"2899:12:2","nodeType":"ModifierDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"2911:2:2"},"src":"2890:72:2","virtual":false,"visibility":"internal"},{"body":{"id":501,"nodeType":"Block","src":"3028:7:2","statements":[]},"id":502,"implemented":true,"kind":"function","modifiers":[{"id":499,"kind":"modifierInvocation","modifierName":{"id":498,"name":"onlyInitializing","nameLocations":["3011:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3011:16:2"},"nodeType":"ModifierInvocation","src":"3011:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2977:22:2","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"2999:2:2"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"3028:0:2"},"scope":630,"src":"2968:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":507,"nodeType":"Block","src":"3111:7:2","statements":[]},"id":508,"implemented":true,"kind":"function","modifiers":[{"id":505,"kind":"modifierInvocation","modifierName":{"id":504,"name":"onlyInitializing","nameLocations":["3094:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3094:16:2"},"nodeType":"ModifierInvocation","src":"3094:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3050:32:2","nodeType":"FunctionDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"3082:2:2"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"3111:0:2"},"scope":630,"src":"3041:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[685],"body":{"id":519,"nodeType":"Block","src":"3783:56:2","statements":[{"expression":{"expression":{"id":516,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3800:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3813:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":853,"src":"3800:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":515,"id":518,"nodeType":"Return","src":"3793:39:2"}]},"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"3123:577:2","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":520,"implemented":true,"kind":"function","modifiers":[{"id":512,"kind":"modifierInvocation","modifierName":{"id":511,"name":"notDelegated","nameLocations":["3752:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":496,"src":"3752:12:2"},"nodeType":"ModifierInvocation","src":"3752:12:2"}],"name":"proxiableUUID","nameLocation":"3714:13:2","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"3727:2:2"},"returnParameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":520,"src":"3774:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3774:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3773:9:2"},"scope":630,"src":"3705:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":539,"nodeType":"Block","src":"4263:109:2","statements":[{"expression":{"arguments":[{"id":531,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4291:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":530,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4273:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4273:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"4273:36:2"},{"expression":{"arguments":[{"id":535,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4341:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"4360:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":534,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4319:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"4319:46:2"}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"3845:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":540,"implemented":true,"kind":"function","modifiers":[{"id":528,"kind":"modifierInvocation","modifierName":{"id":527,"name":"onlyProxy","nameLocations":["4253:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":488,"src":"4253:9:2"},"nodeType":"ModifierInvocation","src":"4253:9:2"}],"name":"upgradeToAndCall","nameLocation":"4167:16:2","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"newImplementation","nameLocation":"4192:17:2","nodeType":"VariableDeclaration","scope":540,"src":"4184:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"4184:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"data","nameLocation":"4224:4:2","nodeType":"VariableDeclaration","scope":540,"src":"4211:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":524,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4183:46:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"4263:0:2"},"scope":630,"src":"4158:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":561,"nodeType":"Block","src":"4644:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":546,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4679:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4671:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:2","typeDescriptions":{}}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4671:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":548,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4688:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4671:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":550,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"4749:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4762:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":884,"src":"4749:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4749:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":553,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4785:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4749:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4671:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":560,"nodeType":"IfStatement","src":"4654:251:2","trueBody":{"id":559,"nodeType":"Block","src":"4844:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":556,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"4865:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4865:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"RevertStatement","src":"4858:36:2"}]}}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"4378:216:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."},"id":562,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4608:11:2","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"4619:2:2"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"4644:0:2"},"scope":630,"src":"4599:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":577,"nodeType":"Block","src":"5080:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":568,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5102:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5094:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"5094:7:2","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":570,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"5111:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5094:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":576,"nodeType":"IfStatement","src":"5090:145:2","trueBody":{"id":575,"nodeType":"Block","src":"5119:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":572,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"5195:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5195:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":574,"nodeType":"RevertStatement","src":"5188:36:2"}]}}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"4917:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":578,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5037:18:2","nodeType":"FunctionDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"5055:2:2"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[],"src":"5080:0:2"},"scope":630,"src":"5028:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"5247:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":584,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5633:17:2","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"newImplementation","nameLocation":"5659:17:2","nodeType":"VariableDeclaration","scope":584,"src":"5651:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:27:2"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"5694:0:2"},"scope":630,"src":"5624:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"6137:453:2","statements":[{"clauses":[{"block":{"id":617,"nodeType":"Block","src":"6227:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":600,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6245:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":601,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6253:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6266:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":853,"src":"6253:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6245:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":609,"nodeType":"IfStatement","src":"6241:120:2","trueBody":{"id":608,"nodeType":"Block","src":"6287:74:2","statements":[{"errorCall":{"arguments":[{"id":605,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6341:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":604,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"6312:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6312:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"RevertStatement","src":"6305:41:2"}]}},{"expression":{"arguments":[{"id":613,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6404:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"6423:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":610,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6374:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6387:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":945,"src":"6374:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":616,"nodeType":"ExpressionStatement","src":"6374:54:2"}]},"errorName":"","id":618,"nodeType":"TryCatchClause","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"slot","nameLocation":"6221:4:2","nodeType":"VariableDeclaration","scope":618,"src":"6213:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6213:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6212:14:2"},"src":"6204:235:2"},{"block":{"id":625,"nodeType":"Block","src":"6446:138:2","statements":[{"errorCall":{"arguments":[{"id":622,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6555:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":619,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6513:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6526:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":858,"src":"6513:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6513:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":624,"nodeType":"RevertStatement","src":"6506:67:2"}]},"errorName":"","id":626,"nodeType":"TryCatchClause","src":"6440:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":593,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6169:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":592,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"6151:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$686_$","typeString":"type(contract IERC1822Proxiable)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$686","typeString":"contract IERC1822Proxiable"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6188:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":685,"src":"6151:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":627,"nodeType":"TryStatement","src":"6147:437:2"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"5701:346:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."},"id":629,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6061:21:2","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"newImplementation","nameLocation":"6091:17:2","nodeType":"VariableDeclaration","scope":629,"src":"6083:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"6083:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"data","nameLocation":"6123:4:2","nodeType":"VariableDeclaration","scope":629,"src":"6110:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"6110:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6082:46:2"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[],"src":"6137:0:2"},"scope":630,"src":"6052:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":631,"src":"986:5606:2","usedErrors":[211,214,475,480,858,871,1768,1771],"usedEvents":[219,837]}],"src":"115:6478:2"},"id":2},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[676],"Initializable":[448]},"id":677,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":632,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":677,"sourceUnit":449,"src":"126:63:3","symbolAliases":[{"foreign":{"id":633,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"134:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":636,"name":"Initializable","nameLocations":["728:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"728:13:3"},"id":637,"nodeType":"InheritanceSpecifier","src":"728:13:3"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"191:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":676,"linearizedBaseContracts":[676,448],"name":"ContextUpgradeable","nameLocation":"706:18:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":642,"nodeType":"Block","src":"800:7:3","statements":[]},"id":643,"implemented":true,"kind":"function","modifiers":[{"id":640,"kind":"modifierInvocation","modifierName":{"id":639,"name":"onlyInitializing","nameLocations":["783:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:3"},"nodeType":"ModifierInvocation","src":"783:16:3"}],"name":"__Context_init","nameLocation":"757:14:3","nodeType":"FunctionDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"771:2:3"},"returnParameters":{"id":641,"nodeType":"ParameterList","parameters":[],"src":"800:0:3"},"scope":676,"src":"748:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":648,"nodeType":"Block","src":"875:7:3","statements":[]},"id":649,"implemented":true,"kind":"function","modifiers":[{"id":646,"kind":"modifierInvocation","modifierName":{"id":645,"name":"onlyInitializing","nameLocations":["858:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:3"},"nodeType":"ModifierInvocation","src":"858:16:3"}],"name":"__Context_init_unchained","nameLocation":"822:24:3","nodeType":"FunctionDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[],"src":"846:2:3"},"returnParameters":{"id":647,"nodeType":"ParameterList","parameters":[],"src":"875:0:3"},"scope":676,"src":"813:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":657,"nodeType":"Block","src":"949:34:3","statements":[{"expression":{"expression":{"id":654,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:3","memberName":"sender","nodeType":"MemberAccess","src":"966:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":653,"id":656,"nodeType":"Return","src":"959:17:3"}]},"id":658,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:3","nodeType":"FunctionDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[],"src":"906:2:3"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":658,"src":"940:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:3"},"scope":676,"src":"887:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":666,"nodeType":"Block","src":"1056:32:3","statements":[{"expression":{"expression":{"id":663,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:3","memberName":"data","nodeType":"MemberAccess","src":"1073:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":662,"id":665,"nodeType":"Return","src":"1066:15:3"}]},"id":667,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:3","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[],"src":"1006:2:3"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":667,"src":"1040:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":660,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:3"},"scope":676,"src":"989:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":674,"nodeType":"Block","src":"1166:25:3","statements":[{"expression":{"hexValue":"30","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":671,"id":673,"nodeType":"Return","src":"1176:8:3"}]},"id":675,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:3","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[],"src":"1123:2:3"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":675,"src":"1157:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:3"},"scope":676,"src":"1094:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":677,"src":"688:505:3","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:3"},"id":3},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[686]},"id":687,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":678,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"139:203:4","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":686,"linearizedBaseContracts":[686],"name":"IERC1822Proxiable","nameLocation":"353:17:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"377:438:4","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":685,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"829:13:4","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"842:2:4"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":685,"src":"868:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"868:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"867:9:4"},"scope":686,"src":"820:57:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":687,"src":"343:536:4","usedErrors":[],"usedEvents":[]}],"src":"113:767:4"},"id":4},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[823],"IERC20Errors":[728],"IERC721Errors":[776]},"id":824,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":688,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"138:139:5","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":728,"linearizedBaseContracts":[728],"name":"IERC20Errors","nameLocation":"288:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":690,"nodeType":"StructuredDocumentation","src":"307:309:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":698,"name":"ERC20InsufficientBalance","nameLocation":"627:24:5","nodeType":"ErrorDefinition","parameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"sender","nameLocation":"660:6:5","nodeType":"VariableDeclaration","scope":698,"src":"652:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"balance","nameLocation":"676:7:5","nodeType":"VariableDeclaration","scope":698,"src":"668:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":696,"mutability":"mutable","name":"needed","nameLocation":"693:6:5","nodeType":"VariableDeclaration","scope":698,"src":"685:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":695,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:5"},"src":"621:80:5"},{"documentation":{"id":699,"nodeType":"StructuredDocumentation","src":"707:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":703,"name":"ERC20InvalidSender","nameLocation":"870:18:5","nodeType":"ErrorDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"sender","nameLocation":"897:6:5","nodeType":"VariableDeclaration","scope":703,"src":"889:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:5"},"src":"864:41:5"},{"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"911:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":708,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:5","nodeType":"ErrorDefinition","parameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:5","nodeType":"VariableDeclaration","scope":708,"src":"1102:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:5"},"src":"1075:45:5"},{"documentation":{"id":709,"nodeType":"StructuredDocumentation","src":"1126:345:5","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":717,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:5","nodeType":"ErrorDefinition","parameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"spender","nameLocation":"1517:7:5","nodeType":"VariableDeclaration","scope":717,"src":"1509:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":713,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:5","nodeType":"VariableDeclaration","scope":717,"src":"1526:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":712,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":715,"mutability":"mutable","name":"needed","nameLocation":"1553:6:5","nodeType":"VariableDeclaration","scope":717,"src":"1545:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:5"},"src":"1476:85:5"},{"documentation":{"id":718,"nodeType":"StructuredDocumentation","src":"1567:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":722,"name":"ERC20InvalidApprover","nameLocation":"1752:20:5","nodeType":"ErrorDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"mutability":"mutable","name":"approver","nameLocation":"1781:8:5","nodeType":"VariableDeclaration","scope":722,"src":"1773:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:5"},"src":"1746:45:5"},{"documentation":{"id":723,"nodeType":"StructuredDocumentation","src":"1797:195:5","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":727,"name":"ERC20InvalidSpender","nameLocation":"2003:19:5","nodeType":"ErrorDefinition","parameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"spender","nameLocation":"2031:7:5","nodeType":"VariableDeclaration","scope":727,"src":"2023:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:5"},"src":"1997:43:5"}],"scope":824,"src":"278:1764:5","usedErrors":[698,703,708,717,722,727],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":729,"nodeType":"StructuredDocumentation","src":"2044:141:5","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":776,"linearizedBaseContracts":[776],"name":"IERC721Errors","nameLocation":"2196:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"2216:219:5","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":734,"name":"ERC721InvalidOwner","nameLocation":"2446:18:5","nodeType":"ErrorDefinition","parameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"owner","nameLocation":"2473:5:5","nodeType":"VariableDeclaration","scope":734,"src":"2465:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:5"},"src":"2440:40:5"},{"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"2486:132:5","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":739,"name":"ERC721NonexistentToken","nameLocation":"2629:22:5","nodeType":"ErrorDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:5","nodeType":"VariableDeclaration","scope":739,"src":"2652:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":736,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:5"},"src":"2623:46:5"},{"documentation":{"id":740,"nodeType":"StructuredDocumentation","src":"2675:289:5","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":748,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:5","nodeType":"ErrorDefinition","parameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"sender","nameLocation":"3004:6:5","nodeType":"VariableDeclaration","scope":748,"src":"2996:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:5","nodeType":"VariableDeclaration","scope":748,"src":"3012:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"owner","nameLocation":"3037:5:5","nodeType":"VariableDeclaration","scope":748,"src":"3029:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:5"},"src":"2969:75:5"},{"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"3050:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":753,"name":"ERC721InvalidSender","nameLocation":"3213:19:5","nodeType":"ErrorDefinition","parameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"sender","nameLocation":"3241:6:5","nodeType":"VariableDeclaration","scope":753,"src":"3233:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:5"},"src":"3207:42:5"},{"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"3255:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":758,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:5","nodeType":"ErrorDefinition","parameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:5","nodeType":"VariableDeclaration","scope":758,"src":"3447:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:5"},"src":"3419:46:5"},{"documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"3471:247:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":765,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:5","nodeType":"ErrorDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"operator","nameLocation":"3764:8:5","nodeType":"VariableDeclaration","scope":765,"src":"3756:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":763,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:5","nodeType":"VariableDeclaration","scope":765,"src":"3774:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":762,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:5"},"src":"3723:68:5"},{"documentation":{"id":766,"nodeType":"StructuredDocumentation","src":"3797:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":770,"name":"ERC721InvalidApprover","nameLocation":"3982:21:5","nodeType":"ErrorDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":768,"mutability":"mutable","name":"approver","nameLocation":"4012:8:5","nodeType":"VariableDeclaration","scope":770,"src":"4004:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":767,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:5"},"src":"3976:46:5"},{"documentation":{"id":771,"nodeType":"StructuredDocumentation","src":"4028:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":775,"name":"ERC721InvalidOperator","nameLocation":"4236:21:5","nodeType":"ErrorDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"operator","nameLocation":"4266:8:5","nodeType":"VariableDeclaration","scope":775,"src":"4258:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:5"},"src":"4230:46:5"}],"scope":824,"src":"2186:2092:5","usedErrors":[734,739,748,753,758,765,770,775],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":777,"nodeType":"StructuredDocumentation","src":"4280:143:5","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":823,"linearizedBaseContracts":[823],"name":"IERC1155Errors","nameLocation":"4434:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":778,"nodeType":"StructuredDocumentation","src":"4455:361:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":788,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:5","nodeType":"ErrorDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"mutability":"mutable","name":"sender","nameLocation":"4862:6:5","nodeType":"VariableDeclaration","scope":788,"src":"4854:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"balance","nameLocation":"4878:7:5","nodeType":"VariableDeclaration","scope":788,"src":"4870:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"needed","nameLocation":"4895:6:5","nodeType":"VariableDeclaration","scope":788,"src":"4887:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":783,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:5","nodeType":"VariableDeclaration","scope":788,"src":"4903:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:5"},"src":"4821:99:5"},{"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"4926:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":793,"name":"ERC1155InvalidSender","nameLocation":"5089:20:5","nodeType":"ErrorDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"sender","nameLocation":"5118:6:5","nodeType":"VariableDeclaration","scope":793,"src":"5110:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:5"},"src":"5083:43:5"},{"documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"5132:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":798,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:5","nodeType":"ErrorDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:5","nodeType":"VariableDeclaration","scope":798,"src":"5325:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:5"},"src":"5296:47:5"},{"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"5349:256:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":805,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:5","nodeType":"ErrorDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"mutability":"mutable","name":"operator","nameLocation":"5653:8:5","nodeType":"VariableDeclaration","scope":805,"src":"5645:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":803,"mutability":"mutable","name":"owner","nameLocation":"5671:5:5","nodeType":"VariableDeclaration","scope":805,"src":"5663:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:5"},"src":"5610:68:5"},{"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"5684:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":810,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:5","nodeType":"ErrorDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"approver","nameLocation":"5900:8:5","nodeType":"VariableDeclaration","scope":810,"src":"5892:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:5"},"src":"5863:47:5"},{"documentation":{"id":811,"nodeType":"StructuredDocumentation","src":"5916:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":815,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:5","nodeType":"ErrorDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":813,"mutability":"mutable","name":"operator","nameLocation":"6155:8:5","nodeType":"VariableDeclaration","scope":815,"src":"6147:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:5"},"src":"6118:47:5"},{"documentation":{"id":816,"nodeType":"StructuredDocumentation","src":"6171:280:5","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":822,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:5","nodeType":"ErrorDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:5","nodeType":"VariableDeclaration","scope":822,"src":"6488:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:5","nodeType":"VariableDeclaration","scope":822,"src":"6507:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:5"},"src":"6456:73:5"}],"scope":824,"src":"4424:2107:5","usedErrors":[788,793,798,805,810,815,822],"usedEvents":[]}],"src":"112:6420:5"},"id":5},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[2008],"ERC1967Utils":[1126],"IBeacon":[1136],"StorageSlot":[2217]},"id":1127,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":825,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:6"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":827,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1127,"sourceUnit":1137,"src":"140:46:6","symbolAliases":[{"foreign":{"id":826,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"148:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":829,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1127,"sourceUnit":2009,"src":"187:48:6","symbolAliases":[{"foreign":{"id":828,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"195:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":831,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1127,"sourceUnit":2218,"src":"236:56:6","symbolAliases":[{"foreign":{"id":830,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"244:11:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":832,"nodeType":"StructuredDocumentation","src":"294:154:6","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."},"fullyImplemented":true,"id":1126,"linearizedBaseContracts":[1126],"name":"ERC1967Utils","nameLocation":"457:12:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"660:68:6","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":837,"name":"Upgraded","nameLocation":"739:8:6","nodeType":"EventDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"764:14:6","nodeType":"VariableDeclaration","scope":837,"src":"748:30:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"747:32:6"},"src":"733:47:6"},{"anonymous":false,"documentation":{"id":838,"nodeType":"StructuredDocumentation","src":"786:67:6","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":844,"name":"AdminChanged","nameLocation":"864:12:6","nodeType":"EventDefinition","parameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"885:13:6","nodeType":"VariableDeclaration","scope":844,"src":"877:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":842,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"908:8:6","nodeType":"VariableDeclaration","scope":844,"src":"900:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"876:41:6"},"src":"858:60:6"},{"anonymous":false,"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"924:59:6","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":849,"name":"BeaconUpgraded","nameLocation":"994:14:6","nodeType":"EventDefinition","parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"1025:6:6","nodeType":"VariableDeclaration","scope":849,"src":"1009:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1008:24:6"},"src":"988:45:6"},{"constant":true,"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"1039:170:6","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":853,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"1305:19:6","nodeType":"VariableDeclaration","scope":1126,"src":"1279:114:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1327:66:6","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":854,"nodeType":"StructuredDocumentation","src":"1400:69:6","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":858,"name":"ERC1967InvalidImplementation","nameLocation":"1480:28:6","nodeType":"ErrorDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"implementation","nameLocation":"1517:14:6","nodeType":"VariableDeclaration","scope":858,"src":"1509:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1508:24:6"},"src":"1474:59:6"},{"documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"1539:60:6","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":863,"name":"ERC1967InvalidAdmin","nameLocation":"1610:19:6","nodeType":"ErrorDefinition","parameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"admin","nameLocation":"1638:5:6","nodeType":"VariableDeclaration","scope":863,"src":"1630:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1629:15:6"},"src":"1604:41:6"},{"documentation":{"id":864,"nodeType":"StructuredDocumentation","src":"1651:61:6","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":868,"name":"ERC1967InvalidBeacon","nameLocation":"1723:20:6","nodeType":"ErrorDefinition","parameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"beacon","nameLocation":"1752:6:6","nodeType":"VariableDeclaration","scope":868,"src":"1744:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1743:16:6"},"src":"1717:43:6"},{"documentation":{"id":869,"nodeType":"StructuredDocumentation","src":"1766:82:6","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":871,"name":"ERC1967NonPayable","nameLocation":"1859:17:6","nodeType":"ErrorDefinition","parameters":{"id":870,"nodeType":"ParameterList","parameters":[],"src":"1876:2:6"},"src":"1853:26:6"},{"body":{"id":883,"nodeType":"Block","src":"2018:77:6","statements":[{"expression":{"expression":{"arguments":[{"id":879,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"2062:19:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":877,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"2035:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2047:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"2035:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"2035:53:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":876,"id":882,"nodeType":"Return","src":"2028:60:6"}]},"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"1885:67:6","text":" @dev Returns the current implementation address."},"id":884,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1966:17:6","nodeType":"FunctionDefinition","parameters":{"id":873,"nodeType":"ParameterList","parameters":[],"src":"1983:2:6"},"returnParameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":884,"src":"2009:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2008:9:6"},"scope":1126,"src":"1957:138:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":910,"nodeType":"Block","src":"2249:218:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":890,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2263:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2281:4:6","memberName":"code","nodeType":"MemberAccess","src":"2263:22:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2286:6:6","memberName":"length","nodeType":"MemberAccess","src":"2263:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2263:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":900,"nodeType":"IfStatement","src":"2259:119:6","trueBody":{"id":899,"nodeType":"Block","src":"2299:79:6","statements":[{"errorCall":{"arguments":[{"id":896,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2349:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":895,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"2320:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":898,"nodeType":"RevertStatement","src":"2313:54:6"}]}},{"expression":{"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":904,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"2414:19:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":901,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"2387:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2399:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"2387:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2387:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":906,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2435:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"2387:53:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":907,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2443:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2387:73:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":909,"nodeType":"ExpressionStatement","src":"2387:73:6"}]},"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"2101:80:6","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":911,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"2195:18:6","nodeType":"FunctionDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"newImplementation","nameLocation":"2222:17:6","nodeType":"VariableDeclaration","scope":911,"src":"2214:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2213:27:6"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[],"src":"2249:0:6"},"scope":1126,"src":"2186:281:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":944,"nodeType":"Block","src":"2860:254:6","statements":[{"expression":{"arguments":[{"id":920,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"2889:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":919,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"2870:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2870:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":922,"nodeType":"ExpressionStatement","src":"2870:37:6"},{"eventCall":{"arguments":[{"id":924,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"2931:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":923,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2922:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":926,"nodeType":"EmitStatement","src":"2917:32:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":927,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"2964:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:6:6","memberName":"length","nodeType":"MemberAccess","src":"2964:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2964:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":942,"nodeType":"Block","src":"3065:43:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":939,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"3079:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":941,"nodeType":"ExpressionStatement","src":"3079:18:6"}]},"id":943,"nodeType":"IfStatement","src":"2960:148:6","trueBody":{"id":938,"nodeType":"Block","src":"2981:78:6","statements":[{"expression":{"arguments":[{"id":934,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3024:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":935,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3043:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":931,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"2995:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2008_$","typeString":"type(library Address)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:20:6","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"2995:28:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":937,"nodeType":"ExpressionStatement","src":"2995:53:6"}]}}]},"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"2473:301:6","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":945,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2788:16:6","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"newImplementation","nameLocation":"2813:17:6","nodeType":"VariableDeclaration","scope":945,"src":"2805:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"data","nameLocation":"2845:4:6","nodeType":"VariableDeclaration","scope":945,"src":"2832:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":915,"name":"bytes","nodeType":"ElementaryTypeName","src":"2832:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2804:46:6"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"2860:0:6"},"scope":1126,"src":"2779:335:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":946,"nodeType":"StructuredDocumentation","src":"3120:145:6","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":949,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"3361:10:6","nodeType":"VariableDeclaration","scope":1126,"src":"3335:105:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3335:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3374:66:6","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":961,"nodeType":"Block","src":"3844:68:6","statements":[{"expression":{"expression":{"arguments":[{"id":957,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"3888:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":955,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"3861:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3873:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"3861:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3900:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"3861:44:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":954,"id":960,"nodeType":"Return","src":"3854:51:6"}]},"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"3447:340:6","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":962,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3801:8:6","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[],"src":"3809:2:6"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":962,"src":"3835:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3834:9:6"},"scope":1126,"src":"3792:120:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":992,"nodeType":"Block","src":"4039:172:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":968,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"4053:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4065:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"4065:7:6","typeDescriptions":{}}},"id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4053:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":982,"nodeType":"IfStatement","src":"4049:91:6","trueBody":{"id":981,"nodeType":"Block","src":"4077:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4126:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4118:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"4118:7:6","typeDescriptions":{}}},"id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":974,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"4098:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":980,"nodeType":"RevertStatement","src":"4091:38:6"}]}},{"expression":{"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":986,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"4176:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":983,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"4149:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4161:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"4149:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4149:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":988,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4188:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"4149:44:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":989,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"4196:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4149:55:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":991,"nodeType":"ExpressionStatement","src":"4149:55:6"}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"3918:71:6","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":993,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4003:9:6","nodeType":"FunctionDefinition","parameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"newAdmin","nameLocation":"4021:8:6","nodeType":"VariableDeclaration","scope":993,"src":"4013:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"4013:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4012:18:6"},"returnParameters":{"id":967,"nodeType":"ParameterList","parameters":[],"src":"4039:0:6"},"scope":1126,"src":"3994:217:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1009,"nodeType":"Block","src":"4379:85:6","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1000,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"4407:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1002,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"4419:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":999,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"4394:12:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4394:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1004,"nodeType":"EmitStatement","src":"4389:39:6"},{"expression":{"arguments":[{"id":1006,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"4448:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1005,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"4438:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1008,"nodeType":"ExpressionStatement","src":"4438:19:6"}]},"documentation":{"id":994,"nodeType":"StructuredDocumentation","src":"4217:109:6","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":1010,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"4340:11:6","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"newAdmin","nameLocation":"4360:8:6","nodeType":"VariableDeclaration","scope":1010,"src":"4352:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"4352:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4351:18:6"},"returnParameters":{"id":998,"nodeType":"ParameterList","parameters":[],"src":"4379:0:6"},"scope":1126,"src":"4331:133:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1011,"nodeType":"StructuredDocumentation","src":"4470:201:6","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":1014,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4767:11:6","nodeType":"VariableDeclaration","scope":1126,"src":"4741:106:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1012,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4741:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4781:66:6","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":1026,"nodeType":"Block","src":"4963:69:6","statements":[{"expression":{"expression":{"arguments":[{"id":1022,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"5007:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1020,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"4980:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4992:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"4980:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4980:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"4980:45:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1019,"id":1025,"nodeType":"Return","src":"4973:52:6"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"4854:51:6","text":" @dev Returns the current beacon."},"id":1027,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4919:9:6","nodeType":"FunctionDefinition","parameters":{"id":1016,"nodeType":"ParameterList","parameters":[],"src":"4928:2:6"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1027,"src":"4954:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4953:9:6"},"scope":1126,"src":"4910:122:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1072,"nodeType":"Block","src":"5161:390:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1033,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5175:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5185:4:6","memberName":"code","nodeType":"MemberAccess","src":"5175:14:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5190:6:6","memberName":"length","nodeType":"MemberAccess","src":"5175:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5200:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5175:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1043,"nodeType":"IfStatement","src":"5171:95:6","trueBody":{"id":1042,"nodeType":"Block","src":"5203:63:6","statements":[{"errorCall":{"arguments":[{"id":1039,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5245:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1038,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"5224:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5224:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1041,"nodeType":"RevertStatement","src":"5217:38:6"}]}},{"expression":{"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1047,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"5303:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1044,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"5276:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5288:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"5276:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5316:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"5276:45:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1050,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5324:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5276:57:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1052,"nodeType":"ExpressionStatement","src":"5276:57:6"},{"assignments":[1054],"declarations":[{"constant":false,"id":1054,"mutability":"mutable","name":"beaconImplementation","nameLocation":"5352:20:6","nodeType":"VariableDeclaration","scope":1072,"src":"5344:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"5344:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1060,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1056,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5383:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1055,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"5375:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1136_$","typeString":"type(contract IBeacon)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1136","typeString":"contract IBeacon"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5394:14:6","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1135,"src":"5375:33:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5344:66:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1061,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"5424:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5445:4:6","memberName":"code","nodeType":"MemberAccess","src":"5424:25:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5450:6:6","memberName":"length","nodeType":"MemberAccess","src":"5424:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5460:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5424:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1071,"nodeType":"IfStatement","src":"5420:125:6","trueBody":{"id":1070,"nodeType":"Block","src":"5463:82:6","statements":[{"errorCall":{"arguments":[{"id":1067,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"5513:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1066,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"5484:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1069,"nodeType":"RevertStatement","src":"5477:57:6"}]}}]},"documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"5038:71:6","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":1073,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5123:10:6","nodeType":"FunctionDefinition","parameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"newBeacon","nameLocation":"5142:9:6","nodeType":"VariableDeclaration","scope":1073,"src":"5134:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"5134:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5133:19:6"},"returnParameters":{"id":1032,"nodeType":"ParameterList","parameters":[],"src":"5161:0:6"},"scope":1126,"src":"5114:437:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1110,"nodeType":"Block","src":"6155:254:6","statements":[{"expression":{"arguments":[{"id":1082,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6176:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1081,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"6165:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6165:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1084,"nodeType":"ExpressionStatement","src":"6165:21:6"},{"eventCall":{"arguments":[{"id":1086,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6216:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1085,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"6201:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6201:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1088,"nodeType":"EmitStatement","src":"6196:30:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1089,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"6241:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6246:6:6","memberName":"length","nodeType":"MemberAccess","src":"6241:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6255:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6241:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1108,"nodeType":"Block","src":"6360:43:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1105,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"6374:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1107,"nodeType":"ExpressionStatement","src":"6374:18:6"}]},"id":1109,"nodeType":"IfStatement","src":"6237:166:6","trueBody":{"id":1104,"nodeType":"Block","src":"6258:96:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1097,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6309:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1096,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"6301:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1136_$","typeString":"type(contract IBeacon)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1136","typeString":"contract IBeacon"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6320:14:6","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1135,"src":"6301:33:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1101,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"6338:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1093,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"6272:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2008_$","typeString":"type(library Address)"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6280:20:6","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"6272:28:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6272:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1103,"nodeType":"ExpressionStatement","src":"6272:71:6"}]}}]},"documentation":{"id":1074,"nodeType":"StructuredDocumentation","src":"5557:514:6","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":1111,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"6085:22:6","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"newBeacon","nameLocation":"6116:9:6","nodeType":"VariableDeclaration","scope":1111,"src":"6108:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"6108:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"data","nameLocation":"6140:4:6","nodeType":"VariableDeclaration","scope":1111,"src":"6127:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1077,"name":"bytes","nodeType":"ElementaryTypeName","src":"6127:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:38:6"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"6155:0:6"},"scope":1126,"src":"6076:333:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1124,"nodeType":"Block","src":"6634:86:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1115,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6648:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6652:5:6","memberName":"value","nodeType":"MemberAccess","src":"6648:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6648:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1123,"nodeType":"IfStatement","src":"6644:70:6","trueBody":{"id":1122,"nodeType":"Block","src":"6663:51:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1119,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"6684:17:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1121,"nodeType":"RevertStatement","src":"6677:26:6"}]}}]},"documentation":{"id":1112,"nodeType":"StructuredDocumentation","src":"6415:178:6","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6607:16:6","nodeType":"FunctionDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"6623:2:6"},"returnParameters":{"id":1114,"nodeType":"ParameterList","parameters":[],"src":"6634:0:6"},"scope":1126,"src":"6598:122:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1127,"src":"449:6273:6","usedErrors":[858,863,868,871],"usedEvents":[837,844,849]}],"src":"114:6609:6"},"id":6},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[1136]},"id":1137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1128,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"134:79:7","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":1136,"linearizedBaseContracts":[1136],"name":"IBeacon","nameLocation":"224:7:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1130,"nodeType":"StructuredDocumentation","src":"238:168:7","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":1135,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:7","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[],"src":"434:2:7"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1135,"src":"460:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:7"},"scope":1136,"src":"411:58:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1137,"src":"214:257:7","usedErrors":[],"usedEvents":[]}],"src":"108:364:7"},"id":7},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2038],"ERC20":[1651],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755]},"id":1652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":1730,"src":"131:36:8","symbolAliases":[{"foreign":{"id":1139,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"139:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":1756,"src":"168:63:8","symbolAliases":[{"foreign":{"id":1141,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"176:14:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":2039,"src":"232:48:8","symbolAliases":[{"foreign":{"id":1143,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"240:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":824,"src":"281:65:8","symbolAliases":[{"foreign":{"id":1145,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"289:12:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1148,"name":"Context","nameLocations":["1428:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2038,"src":"1428:7:8"},"id":1149,"nodeType":"InheritanceSpecifier","src":"1428:7:8"},{"baseName":{"id":1150,"name":"IERC20","nameLocations":["1437:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"1437:6:8"},"id":1151,"nodeType":"InheritanceSpecifier","src":"1437:6:8"},{"baseName":{"id":1152,"name":"IERC20Metadata","nameLocations":["1445:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1755,"src":"1445:14:8"},"id":1153,"nodeType":"InheritanceSpecifier","src":"1445:14:8"},{"baseName":{"id":1154,"name":"IERC20Errors","nameLocations":["1461:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":728,"src":"1461:12:8"},"id":1155,"nodeType":"InheritanceSpecifier","src":"1461:12:8"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1147,"nodeType":"StructuredDocumentation","src":"348:1052:8","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1651,"linearizedBaseContracts":[1651,728,1755,1729,2038],"name":"ERC20","nameLocation":"1419:5:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1159,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:8","nodeType":"VariableDeclaration","scope":1651,"src":"1480:53:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1158,"keyName":"account","keyNameLocation":"1496:7:8","keyType":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1165,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:8","nodeType":"VariableDeclaration","scope":1651,"src":"1540:83:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1164,"keyName":"account","keyNameLocation":"1556:7:8","keyType":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1163,"keyName":"spender","keyNameLocation":"1583:7:8","keyType":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1167,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:8","nodeType":"VariableDeclaration","scope":1651,"src":"1630:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1169,"mutability":"mutable","name":"_name","nameLocation":"1680:5:8","nodeType":"VariableDeclaration","scope":1651,"src":"1665:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1168,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1171,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:8","nodeType":"VariableDeclaration","scope":1651,"src":"1691:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1170,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1187,"nodeType":"Block","src":"1952:57:8","statements":[{"expression":{"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1179,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"1962:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1180,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"1970:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1182,"nodeType":"ExpressionStatement","src":"1962:13:8"},{"expression":{"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1183,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"1985:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1184,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"1995:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1186,"nodeType":"ExpressionStatement","src":"1985:17:8"}]},"documentation":{"id":1172,"nodeType":"StructuredDocumentation","src":"1720:171:8","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1188,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"name_","nameLocation":"1922:5:8","nodeType":"VariableDeclaration","scope":1188,"src":"1908:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1173,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:8","nodeType":"VariableDeclaration","scope":1188,"src":"1929:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1175,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:8"},"returnParameters":{"id":1178,"nodeType":"ParameterList","parameters":[],"src":"1952:0:8"},"scope":1651,"src":"1896:113:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1742],"body":{"id":1196,"nodeType":"Block","src":"2134:29:8","statements":[{"expression":{"id":1194,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"2151:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1193,"id":1195,"nodeType":"Return","src":"2144:12:8"}]},"documentation":{"id":1189,"nodeType":"StructuredDocumentation","src":"2015:54:8","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1197,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:8","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[],"src":"2087:2:8"},"returnParameters":{"id":1193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1197,"src":"2119:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1191,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:8"},"scope":1651,"src":"2074:89:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1748],"body":{"id":1205,"nodeType":"Block","src":"2338:31:8","statements":[{"expression":{"id":1203,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"2355:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1202,"id":1204,"nodeType":"Return","src":"2348:14:8"}]},"documentation":{"id":1198,"nodeType":"StructuredDocumentation","src":"2169:102:8","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:8","nodeType":"FunctionDefinition","parameters":{"id":1199,"nodeType":"ParameterList","parameters":[],"src":"2291:2:8"},"returnParameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1206,"src":"2323:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1200,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:8"},"scope":1651,"src":"2276:93:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1754],"body":{"id":1214,"nodeType":"Block","src":"3058:26:8","statements":[{"expression":{"hexValue":"3138","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1211,"id":1213,"nodeType":"Return","src":"3068:9:8"}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"2375:622:8","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:8","nodeType":"FunctionDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[],"src":"3019:2:8"},"returnParameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1215,"src":"3051:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1209,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:8"},"scope":1651,"src":"3002:82:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1678],"body":{"id":1223,"nodeType":"Block","src":"3205:36:8","statements":[{"expression":{"id":1221,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"3222:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1220,"id":1222,"nodeType":"Return","src":"3215:19:8"}]},"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"3090:49:8","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1224,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:8","nodeType":"FunctionDefinition","parameters":{"id":1217,"nodeType":"ParameterList","parameters":[],"src":"3164:2:8"},"returnParameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1224,"src":"3196:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:8"},"scope":1651,"src":"3144:97:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1686],"body":{"id":1236,"nodeType":"Block","src":"3373:42:8","statements":[{"expression":{"baseExpression":{"id":1232,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"3390:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1234,"indexExpression":{"id":1233,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"3400:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1231,"id":1235,"nodeType":"Return","src":"3383:25:8"}]},"documentation":{"id":1225,"nodeType":"StructuredDocumentation","src":"3247:47:8","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1237,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:8","nodeType":"FunctionDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"account","nameLocation":"3326:7:8","nodeType":"VariableDeclaration","scope":1237,"src":"3318:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:8"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1237,"src":"3364:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:8"},"scope":1651,"src":"3299:116:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1696],"body":{"id":1260,"nodeType":"Block","src":"3685:103:8","statements":[{"assignments":[1248],"declarations":[{"constant":false,"id":1248,"mutability":"mutable","name":"owner","nameLocation":"3703:5:8","nodeType":"VariableDeclaration","scope":1260,"src":"3695:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1251,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"3711:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:8"},{"expression":{"arguments":[{"id":1253,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"3743:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3750:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"3754:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1252,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"3733:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1257,"nodeType":"ExpressionStatement","src":"3733:27:8"},{"expression":{"hexValue":"74727565","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1246,"id":1259,"nodeType":"Return","src":"3770:11:8"}]},"documentation":{"id":1238,"nodeType":"StructuredDocumentation","src":"3421:184:8","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1261,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:8","nodeType":"FunctionDefinition","parameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"to","nameLocation":"3636:2:8","nodeType":"VariableDeclaration","scope":1261,"src":"3628:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"value","nameLocation":"3648:5:8","nodeType":"VariableDeclaration","scope":1261,"src":"3640:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:8"},"returnParameters":{"id":1246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1261,"src":"3679:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1244,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:8"},"scope":1651,"src":"3610:178:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1706],"body":{"id":1277,"nodeType":"Block","src":"3935:51:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1271,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"3952:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1273,"indexExpression":{"id":1272,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"3964:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1275,"indexExpression":{"id":1274,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"3971:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1270,"id":1276,"nodeType":"Return","src":"3945:34:8"}]},"documentation":{"id":1262,"nodeType":"StructuredDocumentation","src":"3794:47:8","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1278,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:8","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"owner","nameLocation":"3873:5:8","nodeType":"VariableDeclaration","scope":1278,"src":"3865:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1263,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1266,"mutability":"mutable","name":"spender","nameLocation":"3888:7:8","nodeType":"VariableDeclaration","scope":1278,"src":"3880:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:8"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1278,"src":"3926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:8"},"scope":1651,"src":"3846:140:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1716],"body":{"id":1301,"nodeType":"Block","src":"4372:107:8","statements":[{"assignments":[1289],"declarations":[{"constant":false,"id":1289,"mutability":"mutable","name":"owner","nameLocation":"4390:5:8","nodeType":"VariableDeclaration","scope":1301,"src":"4382:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1292,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1290,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"4398:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:8"},{"expression":{"arguments":[{"id":1294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"4429:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1295,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"4436:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"4445:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1293,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1542,1602],"referencedDeclaration":1542,"src":"4420:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1298,"nodeType":"ExpressionStatement","src":"4420:31:8"},{"expression":{"hexValue":"74727565","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1287,"id":1300,"nodeType":"Return","src":"4461:11:8"}]},"documentation":{"id":1279,"nodeType":"StructuredDocumentation","src":"3992:296:8","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1302,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:8","nodeType":"FunctionDefinition","parameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"spender","nameLocation":"4318:7:8","nodeType":"VariableDeclaration","scope":1302,"src":"4310:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1280,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1283,"mutability":"mutable","name":"value","nameLocation":"4335:5:8","nodeType":"VariableDeclaration","scope":1302,"src":"4327:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:8"},"returnParameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1302,"src":"4366:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1285,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:8"},"scope":1651,"src":"4293:186:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1728],"body":{"id":1333,"nodeType":"Block","src":"5132:151:8","statements":[{"assignments":[1315],"declarations":[{"constant":false,"id":1315,"mutability":"mutable","name":"spender","nameLocation":"5150:7:8","nodeType":"VariableDeclaration","scope":1333,"src":"5142:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1318,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1316,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"5160:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:8"},{"expression":{"arguments":[{"id":1320,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5198:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1321,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"5204:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5213:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1319,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"5182:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1324,"nodeType":"ExpressionStatement","src":"5182:37:8"},{"expression":{"arguments":[{"id":1326,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5239:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"5245:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5249:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1325,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"5229:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1330,"nodeType":"ExpressionStatement","src":"5229:26:8"},{"expression":{"hexValue":"74727565","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1313,"id":1332,"nodeType":"Return","src":"5265:11:8"}]},"documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"4485:549:8","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1334,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:8","nodeType":"FunctionDefinition","parameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"from","nameLocation":"5069:4:8","nodeType":"VariableDeclaration","scope":1334,"src":"5061:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1307,"mutability":"mutable","name":"to","nameLocation":"5083:2:8","nodeType":"VariableDeclaration","scope":1334,"src":"5075:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1306,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1309,"mutability":"mutable","name":"value","nameLocation":"5095:5:8","nodeType":"VariableDeclaration","scope":1334,"src":"5087:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1308,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:8"},"returnParameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1334,"src":"5126:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1311,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:8"},"scope":1651,"src":"5039:244:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1380,"nodeType":"Block","src":"5725:231:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5739:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:8","typeDescriptions":{}}},"id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1358,"nodeType":"IfStatement","src":"5735:86:8","trueBody":{"id":1357,"nodeType":"Block","src":"5759:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:8","typeDescriptions":{}}},"id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1350,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"5780:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1356,"nodeType":"RevertStatement","src":"5773:37:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"5834:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1360,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:8","typeDescriptions":{}}},"id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1373,"nodeType":"IfStatement","src":"5830:86:8","trueBody":{"id":1372,"nodeType":"Block","src":"5852:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:8","typeDescriptions":{}}},"id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1365,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"5873:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1371,"nodeType":"RevertStatement","src":"5866:39:8"}]}},{"expression":{"arguments":[{"id":1375,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5933:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"5939:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"5943:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1374,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"5925:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1379,"nodeType":"ExpressionStatement","src":"5925:24:8"}]},"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"5289:362:8","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1381,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:8","nodeType":"FunctionDefinition","parameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"from","nameLocation":"5683:4:8","nodeType":"VariableDeclaration","scope":1381,"src":"5675:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1339,"mutability":"mutable","name":"to","nameLocation":"5697:2:8","nodeType":"VariableDeclaration","scope":1381,"src":"5689:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"value","nameLocation":"5709:5:8","nodeType":"VariableDeclaration","scope":1381,"src":"5701:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:8"},"returnParameters":{"id":1343,"nodeType":"ParameterList","parameters":[],"src":"5725:0:8"},"scope":1651,"src":"5656:300:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1457,"nodeType":"Block","src":"6346:1032:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1391,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6360:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1392,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:8","typeDescriptions":{}}},"id":1395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1428,"nodeType":"Block","src":"6534:362:8","statements":[{"assignments":[1403],"declarations":[{"constant":false,"id":1403,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:8","nodeType":"VariableDeclaration","scope":1428,"src":"6548:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1402,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1407,"initialValue":{"baseExpression":{"id":1404,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6570:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1406,"indexExpression":{"id":1405,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6580:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1408,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"6603:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6617:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1418,"nodeType":"IfStatement","src":"6599:115:8","trueBody":{"id":1417,"nodeType":"Block","src":"6624:90:8","statements":[{"errorCall":{"arguments":[{"id":1412,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6674:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1413,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"6680:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6693:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1411,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"6649:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1416,"nodeType":"RevertStatement","src":"6642:57:8"}]}},{"id":1427,"nodeType":"UncheckedBlock","src":"6727:159:8","statements":[{"expression":{"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1419,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6834:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1421,"indexExpression":{"id":1420,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6844:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1422,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"6852:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6866:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1426,"nodeType":"ExpressionStatement","src":"6834:37:8"}]}]},"id":1429,"nodeType":"IfStatement","src":"6356:540:8","trueBody":{"id":1401,"nodeType":"Block","src":"6380:148:8","statements":[{"expression":{"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1397,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"6496:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6512:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1400,"nodeType":"ExpressionStatement","src":"6496:21:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1430,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"6910:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:8","typeDescriptions":{}}},"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1449,"nodeType":"Block","src":"7125:206:8","statements":[{"id":1448,"nodeType":"UncheckedBlock","src":"7139:182:8","statements":[{"expression":{"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1442,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7284:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1444,"indexExpression":{"id":1443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"7294:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7301:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1447,"nodeType":"ExpressionStatement","src":"7284:22:8"}]}]},"id":1450,"nodeType":"IfStatement","src":"6906:425:8","trueBody":{"id":1441,"nodeType":"Block","src":"6928:191:8","statements":[{"id":1440,"nodeType":"UncheckedBlock","src":"6942:167:8","statements":[{"expression":{"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1436,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"7073:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7089:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1439,"nodeType":"ExpressionStatement","src":"7073:21:8"}]}]}},{"eventCall":{"arguments":[{"id":1452,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"7355:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1453,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"7361:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7365:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1451,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"7346:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1456,"nodeType":"EmitStatement","src":"7341:30:8"}]},"documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"5962:304:8","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1458,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:8","nodeType":"FunctionDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"from","nameLocation":"6296:4:8","nodeType":"VariableDeclaration","scope":1458,"src":"6288:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1386,"mutability":"mutable","name":"to","nameLocation":"6310:2:8","nodeType":"VariableDeclaration","scope":1458,"src":"6302:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"value","nameLocation":"6322:5:8","nodeType":"VariableDeclaration","scope":1458,"src":"6314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:8"},"returnParameters":{"id":1390,"nodeType":"ParameterList","parameters":[],"src":"6346:0:8"},"scope":1651,"src":"6271:1107:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1490,"nodeType":"Block","src":"7777:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"7791:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:8","typeDescriptions":{}}},"id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1480,"nodeType":"IfStatement","src":"7787:91:8","trueBody":{"id":1479,"nodeType":"Block","src":"7814:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1473,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:8","typeDescriptions":{}}},"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1472,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"7835:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1478,"nodeType":"RevertStatement","src":"7828:39:8"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1482,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:8","typeDescriptions":{}}},"id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1486,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"7907:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"7916:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1481,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"7887:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1489,"nodeType":"ExpressionStatement","src":"7887:35:8"}]},"documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"7384:332:8","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1491,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:8","nodeType":"FunctionDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"account","nameLocation":"7744:7:8","nodeType":"VariableDeclaration","scope":1491,"src":"7736:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"value","nameLocation":"7761:5:8","nodeType":"VariableDeclaration","scope":1491,"src":"7753:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:8"},"returnParameters":{"id":1465,"nodeType":"ParameterList","parameters":[],"src":"7777:0:8"},"scope":1651,"src":"7721:208:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1523,"nodeType":"Block","src":"8303:150:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1499,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"8317:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:8","typeDescriptions":{}}},"id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1513,"nodeType":"IfStatement","src":"8313:89:8","trueBody":{"id":1512,"nodeType":"Block","src":"8340:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:8","typeDescriptions":{}}},"id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1505,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"8361:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1511,"nodeType":"RevertStatement","src":"8354:37:8"}]}},{"expression":{"arguments":[{"id":1515,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"8419:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:8","typeDescriptions":{}}},"id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"8440:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1514,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"8411:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1522,"nodeType":"ExpressionStatement","src":"8411:35:8"}]},"documentation":{"id":1492,"nodeType":"StructuredDocumentation","src":"7935:307:8","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1524,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:8","nodeType":"FunctionDefinition","parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"account","nameLocation":"8270:7:8","nodeType":"VariableDeclaration","scope":1524,"src":"8262:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"value","nameLocation":"8287:5:8","nodeType":"VariableDeclaration","scope":1524,"src":"8279:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:8"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[],"src":"8303:0:8"},"scope":1651,"src":"8247:206:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1541,"nodeType":"Block","src":"9063:54:8","statements":[{"expression":{"arguments":[{"id":1535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"9082:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1536,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"9089:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"9098:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1534,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1542,1602],"referencedDeclaration":1602,"src":"9073:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1540,"nodeType":"ExpressionStatement","src":"9073:37:8"}]},"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"8459:525:8","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1542,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:8","nodeType":"FunctionDefinition","parameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"owner","nameLocation":"9015:5:8","nodeType":"VariableDeclaration","scope":1542,"src":"9007:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1529,"mutability":"mutable","name":"spender","nameLocation":"9030:7:8","nodeType":"VariableDeclaration","scope":1542,"src":"9022:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1531,"mutability":"mutable","name":"value","nameLocation":"9047:5:8","nodeType":"VariableDeclaration","scope":1542,"src":"9039:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:8"},"returnParameters":{"id":1533,"nodeType":"ParameterList","parameters":[],"src":"9063:0:8"},"scope":1651,"src":"8989:128:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1601,"nodeType":"Block","src":"10047:334:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1554,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"10061:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1555,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:8","typeDescriptions":{}}},"id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1568,"nodeType":"IfStatement","src":"10057:89:8","trueBody":{"id":1567,"nodeType":"Block","src":"10082:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:8","typeDescriptions":{}}},"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1560,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10103:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1566,"nodeType":"RevertStatement","src":"10096:39:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1569,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10159:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1570,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:8","typeDescriptions":{}}},"id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1583,"nodeType":"IfStatement","src":"10155:90:8","trueBody":{"id":1582,"nodeType":"Block","src":"10182:63:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:8","typeDescriptions":{}}},"id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1575,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"10203:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1581,"nodeType":"RevertStatement","src":"10196:38:8"}]}},{"expression":{"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1584,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"10254:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1587,"indexExpression":{"id":1585,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"10266:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1588,"indexExpression":{"id":1586,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10273:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"10284:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1591,"nodeType":"ExpressionStatement","src":"10254:35:8"},{"condition":{"id":1592,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"10303:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1600,"nodeType":"IfStatement","src":"10299:76:8","trueBody":{"id":1599,"nodeType":"Block","src":"10314:61:8","statements":[{"eventCall":{"arguments":[{"id":1594,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"10342:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1595,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10349:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"10358:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1593,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"10333:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1598,"nodeType":"EmitStatement","src":"10328:36:8"}]}}]},"documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"9123:821:8","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1602,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:8","nodeType":"FunctionDefinition","parameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"owner","nameLocation":"9975:5:8","nodeType":"VariableDeclaration","scope":1602,"src":"9967:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1544,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1547,"mutability":"mutable","name":"spender","nameLocation":"9990:7:8","nodeType":"VariableDeclaration","scope":1602,"src":"9982:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1549,"mutability":"mutable","name":"value","nameLocation":"10007:5:8","nodeType":"VariableDeclaration","scope":1602,"src":"9999:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1551,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:8","nodeType":"VariableDeclaration","scope":1602,"src":"10014:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1550,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:8"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[],"src":"10047:0:8"},"scope":1651,"src":"9949:432:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1649,"nodeType":"Block","src":"10752:388:8","statements":[{"assignments":[1613],"declarations":[{"constant":false,"id":1613,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:8","nodeType":"VariableDeclaration","scope":1649,"src":"10762:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1612,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1618,"initialValue":{"arguments":[{"id":1615,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"10799:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1616,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"10806:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1614,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"10789:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1619,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10828:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1621,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:8","memberName":"max","nodeType":"MemberAccess","src":"10848:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1648,"nodeType":"IfStatement","src":"10824:310:8","trueBody":{"id":1647,"nodeType":"Block","src":"10867:267:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1626,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10885:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10904:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1636,"nodeType":"IfStatement","src":"10881:130:8","trueBody":{"id":1635,"nodeType":"Block","src":"10911:100:8","statements":[{"errorCall":{"arguments":[{"id":1630,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"10963:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1631,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10972:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10990:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1629,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"10936:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1634,"nodeType":"RevertStatement","src":"10929:67:8"}]}},{"id":1646,"nodeType":"UncheckedBlock","src":"11024:100:8","statements":[{"expression":{"arguments":[{"id":1638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"11061:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"11068:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1640,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"11077:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"11096:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1637,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1542,1602],"referencedDeclaration":1602,"src":"11052:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1645,"nodeType":"ExpressionStatement","src":"11052:57:8"}]}]}}]},"documentation":{"id":1603,"nodeType":"StructuredDocumentation","src":"10387:271:8","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1650,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:8","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"owner","nameLocation":"10696:5:8","nodeType":"VariableDeclaration","scope":1650,"src":"10688:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1604,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1607,"mutability":"mutable","name":"spender","nameLocation":"10711:7:8","nodeType":"VariableDeclaration","scope":1650,"src":"10703:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1609,"mutability":"mutable","name":"value","nameLocation":"10728:5:8","nodeType":"VariableDeclaration","scope":1650,"src":"10720:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:8"},"returnParameters":{"id":1611,"nodeType":"ParameterList","parameters":[],"src":"10752:0:8"},"scope":1651,"src":"10663:477:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1652,"src":"1401:9741:8","usedErrors":[698,703,708,717,722,727],"usedEvents":[1663,1672]}],"src":"105:11038:8"},"id":8},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1729]},"id":1730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1653,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"132:70:9","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1729,"linearizedBaseContracts":[1729],"name":"IERC20","nameLocation":"213:6:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1655,"nodeType":"StructuredDocumentation","src":"226:158:9","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1663,"name":"Transfer","nameLocation":"395:8:9","nodeType":"EventDefinition","parameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:9","nodeType":"VariableDeclaration","scope":1663,"src":"404:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1656,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1659,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:9","nodeType":"VariableDeclaration","scope":1663,"src":"426:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1661,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:9","nodeType":"VariableDeclaration","scope":1663,"src":"446:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:9"},"src":"389:72:9"},{"anonymous":false,"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"467:148:9","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1672,"name":"Approval","nameLocation":"626:8:9","nodeType":"EventDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:9","nodeType":"VariableDeclaration","scope":1672,"src":"635:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1668,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:9","nodeType":"VariableDeclaration","scope":1672,"src":"658:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1670,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:9","nodeType":"VariableDeclaration","scope":1672,"src":"683:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:9"},"src":"620:78:9"},{"documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"704:65:9","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1678,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:9","nodeType":"FunctionDefinition","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[],"src":"794:2:9"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1678,"src":"820:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:9"},"scope":1729,"src":"774:55:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"835:71:9","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1686,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:9","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"account","nameLocation":"938:7:9","nodeType":"VariableDeclaration","scope":1686,"src":"930:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1680,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:9"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1686,"src":"970:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:9"},"scope":1729,"src":"911:68:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1687,"nodeType":"StructuredDocumentation","src":"985:213:9","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1696,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:9","nodeType":"FunctionDefinition","parameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"to","nameLocation":"1229:2:9","nodeType":"VariableDeclaration","scope":1696,"src":"1221:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1691,"mutability":"mutable","name":"value","nameLocation":"1241:5:9","nodeType":"VariableDeclaration","scope":1696,"src":"1233:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:9"},"returnParameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1696,"src":"1266:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1693,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:9"},"scope":1729,"src":"1203:69:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"1278:264:9","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1706,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:9","nodeType":"FunctionDefinition","parameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"owner","nameLocation":"1574:5:9","nodeType":"VariableDeclaration","scope":1706,"src":"1566:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"spender","nameLocation":"1589:7:9","nodeType":"VariableDeclaration","scope":1706,"src":"1581:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:9"},"returnParameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1706,"src":"1621:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:9"},"scope":1729,"src":"1547:83:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"1636:667:9","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1716,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:9","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"spender","nameLocation":"2333:7:9","nodeType":"VariableDeclaration","scope":1716,"src":"2325:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1708,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1711,"mutability":"mutable","name":"value","nameLocation":"2350:5:9","nodeType":"VariableDeclaration","scope":1716,"src":"2342:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:9"},"returnParameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1716,"src":"2375:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1713,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:9"},"scope":1729,"src":"2308:73:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"2387:297:9","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1728,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:9","nodeType":"FunctionDefinition","parameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"from","nameLocation":"2719:4:9","nodeType":"VariableDeclaration","scope":1728,"src":"2711:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1718,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1721,"mutability":"mutable","name":"to","nameLocation":"2733:2:9","nodeType":"VariableDeclaration","scope":1728,"src":"2725:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1720,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1723,"mutability":"mutable","name":"value","nameLocation":"2745:5:9","nodeType":"VariableDeclaration","scope":1728,"src":"2737:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:9"},"returnParameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1728,"src":"2770:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1725,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:9"},"scope":1729,"src":"2689:87:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1730,"src":"203:2575:9","usedErrors":[],"usedEvents":[1663,1672]}],"src":"106:2673:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1729],"IERC20Metadata":[1755]},"id":1756,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1731,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1756,"sourceUnit":1730,"src":"151:37:10","symbolAliases":[{"foreign":{"id":1732,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"159:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1735,"name":"IERC20","nameLocations":["305:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"305:6:10"},"id":1736,"nodeType":"InheritanceSpecifier","src":"305:6:10"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1734,"nodeType":"StructuredDocumentation","src":"190:86:10","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":1755,"linearizedBaseContracts":[1755,1729],"name":"IERC20Metadata","nameLocation":"287:14:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1737,"nodeType":"StructuredDocumentation","src":"318:54:10","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1742,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:10","nodeType":"FunctionDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[],"src":"390:2:10"},"returnParameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1742,"src":"416:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1739,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:10"},"scope":1755,"src":"377:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1743,"nodeType":"StructuredDocumentation","src":"437:56:10","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1748,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:10","nodeType":"FunctionDefinition","parameters":{"id":1744,"nodeType":"ParameterList","parameters":[],"src":"513:2:10"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1748,"src":"539:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1745,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:10"},"scope":1755,"src":"498:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1749,"nodeType":"StructuredDocumentation","src":"560:65:10","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1754,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:10","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[],"src":"647:2:10"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1754,"src":"673:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1751,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:10"},"scope":1755,"src":"630:50:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1756,"src":"277:405:10","usedErrors":[],"usedEvents":[1663,1672]}],"src":"125:558:10"},"id":10},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2008]},"id":2009,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1757,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"127:67:11","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2008,"linearizedBaseContracts":[2008],"name":"Address","nameLocation":"203:7:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1759,"nodeType":"StructuredDocumentation","src":"217:94:11","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":1763,"name":"AddressInsufficientBalance","nameLocation":"322:26:11","nodeType":"ErrorDefinition","parameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"account","nameLocation":"357:7:11","nodeType":"VariableDeclaration","scope":1763,"src":"349:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:11"},"src":"316:50:11"},{"documentation":{"id":1764,"nodeType":"StructuredDocumentation","src":"372:75:11","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":1768,"name":"AddressEmptyCode","nameLocation":"458:16:11","nodeType":"ErrorDefinition","parameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"mutability":"mutable","name":"target","nameLocation":"483:6:11","nodeType":"VariableDeclaration","scope":1768,"src":"475:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1765,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:11"},"src":"452:39:11"},{"documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"497:89:11","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":1771,"name":"FailedInnerCall","nameLocation":"597:15:11","nodeType":"ErrorDefinition","parameters":{"id":1770,"nodeType":"ParameterList","parameters":[],"src":"612:2:11"},"src":"591:24:11"},{"body":{"id":1811,"nodeType":"Block","src":"1602:260:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1781,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1779,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:11","typeDescriptions":{}}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:11","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1784,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1640:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1794,"nodeType":"IfStatement","src":"1612:109:11","trueBody":{"id":1793,"nodeType":"Block","src":"1648:73:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1789,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1787,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:11","typeDescriptions":{}}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1786,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"1669:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1792,"nodeType":"RevertStatement","src":"1662:48:11"}]}},{"assignments":[1796,null],"declarations":[{"constant":false,"id":1796,"mutability":"mutable","name":"success","nameLocation":"1737:7:11","nodeType":"VariableDeclaration","scope":1811,"src":"1732:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1795,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1803,"initialValue":{"arguments":[{"hexValue":"","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1797,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"1750:9:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:11","memberName":"call","nodeType":"MemberAccess","src":"1750:14:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1799,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1772:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:11"},{"condition":{"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:11","subExpression":{"id":1804,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"1798:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1810,"nodeType":"IfStatement","src":"1793:63:11","trueBody":{"id":1809,"nodeType":"Block","src":"1807:49:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1806,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"1828:15:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1808,"nodeType":"RevertStatement","src":"1821:24:11"}]}}]},"documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"621:905:11","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1812,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:11","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:11","nodeType":"VariableDeclaration","scope":1812,"src":"1550:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1773,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1776,"mutability":"mutable","name":"amount","nameLocation":"1585:6:11","nodeType":"VariableDeclaration","scope":1812,"src":"1577:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:11"},"returnParameters":{"id":1778,"nodeType":"ParameterList","parameters":[],"src":"1602:0:11"},"scope":2008,"src":"1531:331:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1828,"nodeType":"Block","src":"2794:62:11","statements":[{"expression":{"arguments":[{"id":1823,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"2833:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1824,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"2841:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1822,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"2811:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1821,"id":1827,"nodeType":"Return","src":"2804:45:11"}]},"documentation":{"id":1813,"nodeType":"StructuredDocumentation","src":"1868:832:11","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":1829,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:11","nodeType":"FunctionDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"target","nameLocation":"2735:6:11","nodeType":"VariableDeclaration","scope":1829,"src":"2727:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1814,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"data","nameLocation":"2756:4:11","nodeType":"VariableDeclaration","scope":1829,"src":"2743:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1816,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:11"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1829,"src":"2780:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1819,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:11"},"scope":2008,"src":"2705:151:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1874,"nodeType":"Block","src":"3293:279:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1843,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1841,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:11","typeDescriptions":{}}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:11","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"3331:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1856,"nodeType":"IfStatement","src":"3303:108:11","trueBody":{"id":1855,"nodeType":"Block","src":"3338:73:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1851,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:11","typeDescriptions":{}}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1848,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"3359:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1854,"nodeType":"RevertStatement","src":"3352:48:11"}]}},{"assignments":[1858,1860],"declarations":[{"constant":false,"id":1858,"mutability":"mutable","name":"success","nameLocation":"3426:7:11","nodeType":"VariableDeclaration","scope":1874,"src":"3421:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1857,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1860,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:11","nodeType":"VariableDeclaration","scope":1874,"src":"3435:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1859,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1867,"initialValue":{"arguments":[{"id":1865,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"3488:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1861,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"3462:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:11","memberName":"call","nodeType":"MemberAccess","src":"3462:11:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"3481:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:11"},{"expression":{"arguments":[{"id":1869,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"3537:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1870,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"3545:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1871,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"3554:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1868,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"3510:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1840,"id":1873,"nodeType":"Return","src":"3503:62:11"}]},"documentation":{"id":1830,"nodeType":"StructuredDocumentation","src":"2862:313:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1875,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:11","nodeType":"FunctionDefinition","parameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"target","nameLocation":"3219:6:11","nodeType":"VariableDeclaration","scope":1875,"src":"3211:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1831,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"data","nameLocation":"3240:4:11","nodeType":"VariableDeclaration","scope":1875,"src":"3227:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1833,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"value","nameLocation":"3254:5:11","nodeType":"VariableDeclaration","scope":1875,"src":"3246:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:11"},"returnParameters":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1875,"src":"3279:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1838,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:11"},"scope":2008,"src":"3180:392:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1900,"nodeType":"Block","src":"3811:154:11","statements":[{"assignments":[1886,1888],"declarations":[{"constant":false,"id":1886,"mutability":"mutable","name":"success","nameLocation":"3827:7:11","nodeType":"VariableDeclaration","scope":1900,"src":"3822:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1885,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1888,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:11","nodeType":"VariableDeclaration","scope":1900,"src":"3836:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1887,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1893,"initialValue":{"arguments":[{"id":1891,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"3881:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1889,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"3863:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:11","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:11","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:11"},{"expression":{"arguments":[{"id":1895,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"3930:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1896,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"3938:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1897,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"3947:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1894,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"3903:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1884,"id":1899,"nodeType":"Return","src":"3896:62:11"}]},"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"3578:128:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":1901,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:11","nodeType":"FunctionDefinition","parameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"target","nameLocation":"3747:6:11","nodeType":"VariableDeclaration","scope":1901,"src":"3739:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1877,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1880,"mutability":"mutable","name":"data","nameLocation":"3768:4:11","nodeType":"VariableDeclaration","scope":1901,"src":"3755:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1879,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:11"},"returnParameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1901,"src":"3797:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1882,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:11"},"scope":2008,"src":"3711:254:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1926,"nodeType":"Block","src":"4203:156:11","statements":[{"assignments":[1912,1914],"declarations":[{"constant":false,"id":1912,"mutability":"mutable","name":"success","nameLocation":"4219:7:11","nodeType":"VariableDeclaration","scope":1926,"src":"4214:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1911,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1914,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:11","nodeType":"VariableDeclaration","scope":1926,"src":"4228:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1913,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1919,"initialValue":{"arguments":[{"id":1917,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"4275:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1915,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4255:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:11","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:11","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:11"},{"expression":{"arguments":[{"id":1921,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4324:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1922,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"4332:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1923,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"4341:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1920,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"4297:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1910,"id":1925,"nodeType":"Return","src":"4290:62:11"}]},"documentation":{"id":1902,"nodeType":"StructuredDocumentation","src":"3971:130:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":1927,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:11","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"target","nameLocation":"4144:6:11","nodeType":"VariableDeclaration","scope":1927,"src":"4136:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1903,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"data","nameLocation":"4165:4:11","nodeType":"VariableDeclaration","scope":1927,"src":"4152:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1905,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:11"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1927,"src":"4189:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1908,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:11"},"scope":2008,"src":"4106:253:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1966,"nodeType":"Block","src":"4783:424:11","statements":[{"condition":{"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:11","subExpression":{"id":1939,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"4798:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1964,"nodeType":"Block","src":"4857:344:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1946,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"5045:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:11","memberName":"length","nodeType":"MemberAccess","src":"5045:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1950,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"5071:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:11","memberName":"code","nodeType":"MemberAccess","src":"5071:11:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:11","memberName":"length","nodeType":"MemberAccess","src":"5071:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1961,"nodeType":"IfStatement","src":"5041:119:11","trueBody":{"id":1960,"nodeType":"Block","src":"5096:64:11","statements":[{"errorCall":{"arguments":[{"id":1957,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"5138:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1956,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"5121:16:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1959,"nodeType":"RevertStatement","src":"5114:31:11"}]}},{"expression":{"id":1962,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"5180:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1938,"id":1963,"nodeType":"Return","src":"5173:17:11"}]},"id":1965,"nodeType":"IfStatement","src":"4793:408:11","trueBody":{"id":1945,"nodeType":"Block","src":"4807:44:11","statements":[{"expression":{"arguments":[{"id":1942,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"4829:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1941,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"4821:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1944,"nodeType":"ExpressionStatement","src":"4821:19:11"}]}}]},"documentation":{"id":1928,"nodeType":"StructuredDocumentation","src":"4365:255:11","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":1967,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:11","nodeType":"FunctionDefinition","parameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"target","nameLocation":"4678:6:11","nodeType":"VariableDeclaration","scope":1967,"src":"4670:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1929,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1932,"mutability":"mutable","name":"success","nameLocation":"4699:7:11","nodeType":"VariableDeclaration","scope":1967,"src":"4694:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1931,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:11","nodeType":"VariableDeclaration","scope":1967,"src":"4716:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1933,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:11"},"returnParameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1967,"src":"4769:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1936,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:11"},"scope":2008,"src":"4625:582:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1988,"nodeType":"Block","src":"5509:122:11","statements":[{"condition":{"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:11","subExpression":{"id":1977,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"5524:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1986,"nodeType":"Block","src":"5583:42:11","statements":[{"expression":{"id":1984,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"5604:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1976,"id":1985,"nodeType":"Return","src":"5597:17:11"}]},"id":1987,"nodeType":"IfStatement","src":"5519:106:11","trueBody":{"id":1983,"nodeType":"Block","src":"5533:44:11","statements":[{"expression":{"arguments":[{"id":1980,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"5555:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1979,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"5547:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1982,"nodeType":"ExpressionStatement","src":"5547:19:11"}]}}]},"documentation":{"id":1968,"nodeType":"StructuredDocumentation","src":"5213:189:11","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":1989,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:11","nodeType":"FunctionDefinition","parameters":{"id":1973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"success","nameLocation":"5438:7:11","nodeType":"VariableDeclaration","scope":1989,"src":"5433:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1969,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:11","nodeType":"VariableDeclaration","scope":1989,"src":"5447:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1971,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:11"},"returnParameters":{"id":1976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1989,"src":"5495:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1974,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:11"},"scope":2008,"src":"5407:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2006,"nodeType":"Block","src":"5798:461:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1995,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"5874:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:11","memberName":"length","nodeType":"MemberAccess","src":"5874:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2004,"nodeType":"Block","src":"6204:49:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2001,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"6225:15:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2003,"nodeType":"RevertStatement","src":"6218:24:11"}]},"id":2005,"nodeType":"IfStatement","src":"5870:383:11","trueBody":{"id":2000,"nodeType":"Block","src":"5897:301:11","statements":[{"AST":{"nativeSrc":"6055:133:11","nodeType":"YulBlock","src":"6055:133:11","statements":[{"nativeSrc":"6073:40:11","nodeType":"YulVariableDeclaration","src":"6073:40:11","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:11","nodeType":"YulIdentifier","src":"6102:10:11"}],"functionName":{"name":"mload","nativeSrc":"6096:5:11","nodeType":"YulIdentifier","src":"6096:5:11"},"nativeSrc":"6096:17:11","nodeType":"YulFunctionCall","src":"6096:17:11"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:11","nodeType":"YulTypedName","src":"6077:15:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:11","nodeType":"YulLiteral","src":"6141:2:11","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:11","nodeType":"YulIdentifier","src":"6145:10:11"}],"functionName":{"name":"add","nativeSrc":"6137:3:11","nodeType":"YulIdentifier","src":"6137:3:11"},"nativeSrc":"6137:19:11","nodeType":"YulFunctionCall","src":"6137:19:11"},{"name":"returndata_size","nativeSrc":"6158:15:11","nodeType":"YulIdentifier","src":"6158:15:11"}],"functionName":{"name":"revert","nativeSrc":"6130:6:11","nodeType":"YulIdentifier","src":"6130:6:11"},"nativeSrc":"6130:44:11","nodeType":"YulFunctionCall","src":"6130:44:11"},"nativeSrc":"6130:44:11","nodeType":"YulExpressionStatement","src":"6130:44:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":1992,"isOffset":false,"isSlot":false,"src":"6102:10:11","valueSize":1},{"declaration":1992,"isOffset":false,"isSlot":false,"src":"6145:10:11","valueSize":1}],"id":1999,"nodeType":"InlineAssembly","src":"6046:142:11"}]}}]},"documentation":{"id":1990,"nodeType":"StructuredDocumentation","src":"5637:101:11","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":2007,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:11","nodeType":"FunctionDefinition","parameters":{"id":1993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1992,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:11","nodeType":"VariableDeclaration","scope":2007,"src":"5760:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1991,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:11"},"returnParameters":{"id":1994,"nodeType":"ParameterList","parameters":[],"src":"5798:0:11"},"scope":2008,"src":"5743:516:11","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2009,"src":"195:6066:11","usedErrors":[1763,1768,1771],"usedEvents":[]}],"src":"101:6161:11"},"id":11},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2038]},"id":2039,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2010,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"127:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2038,"linearizedBaseContracts":[2038],"name":"Context","nameLocation":"642:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2019,"nodeType":"Block","src":"718:34:12","statements":[{"expression":{"expression":{"id":2016,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:12","memberName":"sender","nodeType":"MemberAccess","src":"735:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2015,"id":2018,"nodeType":"Return","src":"728:17:12"}]},"id":2020,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:12","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[],"src":"675:2:12"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2020,"src":"709:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2013,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:12"},"scope":2038,"src":"656:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2028,"nodeType":"Block","src":"825:32:12","statements":[{"expression":{"expression":{"id":2025,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:12","memberName":"data","nodeType":"MemberAccess","src":"842:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2024,"id":2027,"nodeType":"Return","src":"835:15:12"}]},"id":2029,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:12","nodeType":"FunctionDefinition","parameters":{"id":2021,"nodeType":"ParameterList","parameters":[],"src":"775:2:12"},"returnParameters":{"id":2024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2029,"src":"809:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2022,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:12"},"scope":2038,"src":"758:99:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2036,"nodeType":"Block","src":"935:25:12","statements":[{"expression":{"hexValue":"30","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2033,"id":2035,"nodeType":"Return","src":"945:8:12"}]},"id":2037,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:12","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[],"src":"892:2:12"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2037,"src":"926:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:12"},"scope":2038,"src":"863:97:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2039,"src":"624:338:12","usedErrors":[],"usedEvents":[]}],"src":"101:862:12"},"id":12},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[2107]},"id":2108,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2040,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2041,"nodeType":"StructuredDocumentation","src":"135:750:13","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":2107,"linearizedBaseContracts":[2107],"name":"ReentrancyGuard","nameLocation":"904:15:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2044,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:13","nodeType":"VariableDeclaration","scope":2107,"src":"1674:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2042,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":2047,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:13","nodeType":"VariableDeclaration","scope":2107,"src":"1720:36:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2045,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":2049,"mutability":"mutable","name":"_status","nameLocation":"1779:7:13","nodeType":"VariableDeclaration","scope":2107,"src":"1763:23:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":2050,"nodeType":"StructuredDocumentation","src":"1793:52:13","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":2052,"name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:13","nodeType":"ErrorDefinition","parameters":{"id":2051,"nodeType":"ParameterList","parameters":[],"src":"1884:2:13"},"src":"1850:37:13"},{"body":{"id":2059,"nodeType":"Block","src":"1907:38:13","statements":[{"expression":{"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2055,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"1917:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2056,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"1927:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2058,"nodeType":"ExpressionStatement","src":"1917:21:13"}]},"id":2060,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2053,"nodeType":"ParameterList","parameters":[],"src":"1904:2:13"},"returnParameters":{"id":2054,"nodeType":"ParameterList","parameters":[],"src":"1907:0:13"},"scope":2107,"src":"1893:52:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2070,"nodeType":"Block","src":"2346:79:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2063,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"2356:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2065,"nodeType":"ExpressionStatement","src":"2356:21:13"},{"id":2066,"nodeType":"PlaceholderStatement","src":"2387:1:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2067,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"2398:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2069,"nodeType":"ExpressionStatement","src":"2398:20:13"}]},"documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"1951:366:13","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":2071,"name":"nonReentrant","nameLocation":"2331:12:13","nodeType":"ModifierDefinition","parameters":{"id":2062,"nodeType":"ParameterList","parameters":[],"src":"2343:2:13"},"src":"2322:103:13","virtual":false,"visibility":"internal"},{"body":{"id":2086,"nodeType":"Block","src":"2470:268:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2074,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"2558:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2075,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"2569:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2081,"nodeType":"IfStatement","src":"2554:86:13","trueBody":{"id":2080,"nodeType":"Block","src":"2578:62:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2077,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"2599:28:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2079,"nodeType":"RevertStatement","src":"2592:37:13"}]}},{"expression":{"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2082,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"2714:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2083,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"2724:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2085,"nodeType":"ExpressionStatement","src":"2714:17:13"}]},"id":2087,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:13","nodeType":"FunctionDefinition","parameters":{"id":2072,"nodeType":"ParameterList","parameters":[],"src":"2459:2:13"},"returnParameters":{"id":2073,"nodeType":"ParameterList","parameters":[],"src":"2470:0:13"},"scope":2107,"src":"2431:307:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2094,"nodeType":"Block","src":"2782:170:13","statements":[{"expression":{"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2090,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"2924:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2091,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"2934:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2093,"nodeType":"ExpressionStatement","src":"2924:21:13"}]},"id":2095,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:13","nodeType":"FunctionDefinition","parameters":{"id":2088,"nodeType":"ParameterList","parameters":[],"src":"2771:2:13"},"returnParameters":{"id":2089,"nodeType":"ParameterList","parameters":[],"src":"2782:0:13"},"scope":2107,"src":"2744:208:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2105,"nodeType":"Block","src":"3195:42:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2101,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"3212:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2102,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"3223:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2100,"id":2104,"nodeType":"Return","src":"3205:25:13"}]},"documentation":{"id":2096,"nodeType":"StructuredDocumentation","src":"2958:168:13","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":2106,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:13","nodeType":"FunctionDefinition","parameters":{"id":2097,"nodeType":"ParameterList","parameters":[],"src":"3163:2:13"},"returnParameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2106,"src":"3189:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2098,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:13"},"scope":2107,"src":"3131:106:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2108,"src":"886:2353:13","usedErrors":[2052],"usedEvents":[]}],"src":"109:3131:13"},"id":13},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2217]},"id":2218,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2109,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2110,"nodeType":"StructuredDocumentation","src":"219:1025:14","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":2217,"linearizedBaseContracts":[2217],"name":"StorageSlot","nameLocation":"1253:11:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2113,"members":[{"constant":false,"id":2112,"mutability":"mutable","name":"value","nameLocation":"1308:5:14","nodeType":"VariableDeclaration","scope":2113,"src":"1300:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2111,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:14","nodeType":"StructDefinition","scope":2217,"src":"1271:49:14","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2116,"members":[{"constant":false,"id":2115,"mutability":"mutable","name":"value","nameLocation":"1360:5:14","nodeType":"VariableDeclaration","scope":2116,"src":"1355:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2114,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:14","nodeType":"StructDefinition","scope":2217,"src":"1326:46:14","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2119,"members":[{"constant":false,"id":2118,"mutability":"mutable","name":"value","nameLocation":"1415:5:14","nodeType":"VariableDeclaration","scope":2119,"src":"1407:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:14","nodeType":"StructDefinition","scope":2217,"src":"1378:49:14","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2122,"members":[{"constant":false,"id":2121,"mutability":"mutable","name":"value","nameLocation":"1470:5:14","nodeType":"VariableDeclaration","scope":2122,"src":"1462:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:14","nodeType":"StructDefinition","scope":2217,"src":"1433:49:14","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2125,"members":[{"constant":false,"id":2124,"mutability":"mutable","name":"value","nameLocation":"1523:5:14","nodeType":"VariableDeclaration","scope":2125,"src":"1516:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2123,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:14","nodeType":"StructDefinition","scope":2217,"src":"1488:47:14","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2128,"members":[{"constant":false,"id":2127,"mutability":"mutable","name":"value","nameLocation":"1574:5:14","nodeType":"VariableDeclaration","scope":2128,"src":"1568:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2126,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:14","nodeType":"StructDefinition","scope":2217,"src":"1541:45:14","visibility":"public"},{"body":{"id":2138,"nodeType":"Block","src":"1768:106:14","statements":[{"AST":{"nativeSrc":"1830:38:14","nodeType":"YulBlock","src":"1830:38:14","statements":[{"nativeSrc":"1844:14:14","nodeType":"YulAssignment","src":"1844:14:14","value":{"name":"slot","nativeSrc":"1854:4:14","nodeType":"YulIdentifier","src":"1854:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:14","nodeType":"YulIdentifier","src":"1844:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2135,"isOffset":false,"isSlot":true,"src":"1844:6:14","suffix":"slot","valueSize":1},{"declaration":2131,"isOffset":false,"isSlot":false,"src":"1854:4:14","valueSize":1}],"id":2137,"nodeType":"InlineAssembly","src":"1821:47:14"}]},"documentation":{"id":2129,"nodeType":"StructuredDocumentation","src":"1592:87:14","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2139,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:14","nodeType":"FunctionDefinition","parameters":{"id":2132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"slot","nameLocation":"1716:4:14","nodeType":"VariableDeclaration","scope":2139,"src":"1708:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:14"},"returnParameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"r","nameLocation":"1765:1:14","nodeType":"VariableDeclaration","scope":2139,"src":"1745:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2134,"nodeType":"UserDefinedTypeName","pathNode":{"id":2133,"name":"AddressSlot","nameLocations":["1745:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2113,"src":"1745:11:14"},"referencedDeclaration":2113,"src":"1745:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:14"},"scope":2217,"src":"1684:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2149,"nodeType":"Block","src":"2056:106:14","statements":[{"AST":{"nativeSrc":"2118:38:14","nodeType":"YulBlock","src":"2118:38:14","statements":[{"nativeSrc":"2132:14:14","nodeType":"YulAssignment","src":"2132:14:14","value":{"name":"slot","nativeSrc":"2142:4:14","nodeType":"YulIdentifier","src":"2142:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:14","nodeType":"YulIdentifier","src":"2132:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2146,"isOffset":false,"isSlot":true,"src":"2132:6:14","suffix":"slot","valueSize":1},{"declaration":2142,"isOffset":false,"isSlot":false,"src":"2142:4:14","valueSize":1}],"id":2148,"nodeType":"InlineAssembly","src":"2109:47:14"}]},"documentation":{"id":2140,"nodeType":"StructuredDocumentation","src":"1880:87:14","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2150,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:14","nodeType":"FunctionDefinition","parameters":{"id":2143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2142,"mutability":"mutable","name":"slot","nameLocation":"2004:4:14","nodeType":"VariableDeclaration","scope":2150,"src":"1996:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:14"},"returnParameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"r","nameLocation":"2053:1:14","nodeType":"VariableDeclaration","scope":2150,"src":"2033:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2116_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2145,"nodeType":"UserDefinedTypeName","pathNode":{"id":2144,"name":"BooleanSlot","nameLocations":["2033:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2116,"src":"2033:11:14"},"referencedDeclaration":2116,"src":"2033:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2116_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:14"},"scope":2217,"src":"1972:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2160,"nodeType":"Block","src":"2344:106:14","statements":[{"AST":{"nativeSrc":"2406:38:14","nodeType":"YulBlock","src":"2406:38:14","statements":[{"nativeSrc":"2420:14:14","nodeType":"YulAssignment","src":"2420:14:14","value":{"name":"slot","nativeSrc":"2430:4:14","nodeType":"YulIdentifier","src":"2430:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:14","nodeType":"YulIdentifier","src":"2420:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2157,"isOffset":false,"isSlot":true,"src":"2420:6:14","suffix":"slot","valueSize":1},{"declaration":2153,"isOffset":false,"isSlot":false,"src":"2430:4:14","valueSize":1}],"id":2159,"nodeType":"InlineAssembly","src":"2397:47:14"}]},"documentation":{"id":2151,"nodeType":"StructuredDocumentation","src":"2168:87:14","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2161,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:14","nodeType":"FunctionDefinition","parameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2153,"mutability":"mutable","name":"slot","nameLocation":"2292:4:14","nodeType":"VariableDeclaration","scope":2161,"src":"2284:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:14"},"returnParameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"r","nameLocation":"2341:1:14","nodeType":"VariableDeclaration","scope":2161,"src":"2321:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2119_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2156,"nodeType":"UserDefinedTypeName","pathNode":{"id":2155,"name":"Bytes32Slot","nameLocations":["2321:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2119,"src":"2321:11:14"},"referencedDeclaration":2119,"src":"2321:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2119_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:14"},"scope":2217,"src":"2260:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2171,"nodeType":"Block","src":"2632:106:14","statements":[{"AST":{"nativeSrc":"2694:38:14","nodeType":"YulBlock","src":"2694:38:14","statements":[{"nativeSrc":"2708:14:14","nodeType":"YulAssignment","src":"2708:14:14","value":{"name":"slot","nativeSrc":"2718:4:14","nodeType":"YulIdentifier","src":"2718:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:14","nodeType":"YulIdentifier","src":"2708:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2168,"isOffset":false,"isSlot":true,"src":"2708:6:14","suffix":"slot","valueSize":1},{"declaration":2164,"isOffset":false,"isSlot":false,"src":"2718:4:14","valueSize":1}],"id":2170,"nodeType":"InlineAssembly","src":"2685:47:14"}]},"documentation":{"id":2162,"nodeType":"StructuredDocumentation","src":"2456:87:14","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2172,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:14","nodeType":"FunctionDefinition","parameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"slot","nameLocation":"2580:4:14","nodeType":"VariableDeclaration","scope":2172,"src":"2572:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:14"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"r","nameLocation":"2629:1:14","nodeType":"VariableDeclaration","scope":2172,"src":"2609:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2122_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2167,"nodeType":"UserDefinedTypeName","pathNode":{"id":2166,"name":"Uint256Slot","nameLocations":["2609:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2122,"src":"2609:11:14"},"referencedDeclaration":2122,"src":"2609:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2122_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:14"},"scope":2217,"src":"2548:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2182,"nodeType":"Block","src":"2917:106:14","statements":[{"AST":{"nativeSrc":"2979:38:14","nodeType":"YulBlock","src":"2979:38:14","statements":[{"nativeSrc":"2993:14:14","nodeType":"YulAssignment","src":"2993:14:14","value":{"name":"slot","nativeSrc":"3003:4:14","nodeType":"YulIdentifier","src":"3003:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:14","nodeType":"YulIdentifier","src":"2993:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2179,"isOffset":false,"isSlot":true,"src":"2993:6:14","suffix":"slot","valueSize":1},{"declaration":2175,"isOffset":false,"isSlot":false,"src":"3003:4:14","valueSize":1}],"id":2181,"nodeType":"InlineAssembly","src":"2970:47:14"}]},"documentation":{"id":2173,"nodeType":"StructuredDocumentation","src":"2744:86:14","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2183,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:14","nodeType":"FunctionDefinition","parameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"slot","nameLocation":"2866:4:14","nodeType":"VariableDeclaration","scope":2183,"src":"2858:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:14"},"returnParameters":{"id":2180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"mutability":"mutable","name":"r","nameLocation":"2914:1:14","nodeType":"VariableDeclaration","scope":2183,"src":"2895:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2125_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2178,"nodeType":"UserDefinedTypeName","pathNode":{"id":2177,"name":"StringSlot","nameLocations":["2895:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":2125,"src":"2895:10:14"},"referencedDeclaration":2125,"src":"2895:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2125_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:14"},"scope":2217,"src":"2835:188:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2193,"nodeType":"Block","src":"3225:112:14","statements":[{"AST":{"nativeSrc":"3287:44:14","nodeType":"YulBlock","src":"3287:44:14","statements":[{"nativeSrc":"3301:20:14","nodeType":"YulAssignment","src":"3301:20:14","value":{"name":"store.slot","nativeSrc":"3311:10:14","nodeType":"YulIdentifier","src":"3311:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:14","nodeType":"YulIdentifier","src":"3301:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2190,"isOffset":false,"isSlot":true,"src":"3301:6:14","suffix":"slot","valueSize":1},{"declaration":2186,"isOffset":false,"isSlot":true,"src":"3311:10:14","suffix":"slot","valueSize":1}],"id":2192,"nodeType":"InlineAssembly","src":"3278:53:14"}]},"documentation":{"id":2184,"nodeType":"StructuredDocumentation","src":"3029:101:14","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2194,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:14","nodeType":"FunctionDefinition","parameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"store","nameLocation":"3173:5:14","nodeType":"VariableDeclaration","scope":2194,"src":"3158:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2185,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:14"},"returnParameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2190,"mutability":"mutable","name":"r","nameLocation":"3222:1:14","nodeType":"VariableDeclaration","scope":2194,"src":"3203:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2125_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2189,"nodeType":"UserDefinedTypeName","pathNode":{"id":2188,"name":"StringSlot","nameLocations":["3203:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":2125,"src":"3203:10:14"},"referencedDeclaration":2125,"src":"3203:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2125_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:14"},"scope":2217,"src":"3135:202:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2204,"nodeType":"Block","src":"3513:106:14","statements":[{"AST":{"nativeSrc":"3575:38:14","nodeType":"YulBlock","src":"3575:38:14","statements":[{"nativeSrc":"3589:14:14","nodeType":"YulAssignment","src":"3589:14:14","value":{"name":"slot","nativeSrc":"3599:4:14","nodeType":"YulIdentifier","src":"3599:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:14","nodeType":"YulIdentifier","src":"3589:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2201,"isOffset":false,"isSlot":true,"src":"3589:6:14","suffix":"slot","valueSize":1},{"declaration":2197,"isOffset":false,"isSlot":false,"src":"3599:4:14","valueSize":1}],"id":2203,"nodeType":"InlineAssembly","src":"3566:47:14"}]},"documentation":{"id":2195,"nodeType":"StructuredDocumentation","src":"3343:85:14","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2205,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:14","nodeType":"FunctionDefinition","parameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"slot","nameLocation":"3463:4:14","nodeType":"VariableDeclaration","scope":2205,"src":"3455:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:14"},"returnParameters":{"id":2202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"r","nameLocation":"3510:1:14","nodeType":"VariableDeclaration","scope":2205,"src":"3492:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2128_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2200,"nodeType":"UserDefinedTypeName","pathNode":{"id":2199,"name":"BytesSlot","nameLocations":["3492:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2128,"src":"3492:9:14"},"referencedDeclaration":2128,"src":"3492:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2128_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:14"},"scope":2217,"src":"3433:186:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2215,"nodeType":"Block","src":"3816:112:14","statements":[{"AST":{"nativeSrc":"3878:44:14","nodeType":"YulBlock","src":"3878:44:14","statements":[{"nativeSrc":"3892:20:14","nodeType":"YulAssignment","src":"3892:20:14","value":{"name":"store.slot","nativeSrc":"3902:10:14","nodeType":"YulIdentifier","src":"3902:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:14","nodeType":"YulIdentifier","src":"3892:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2212,"isOffset":false,"isSlot":true,"src":"3892:6:14","suffix":"slot","valueSize":1},{"declaration":2208,"isOffset":false,"isSlot":true,"src":"3902:10:14","suffix":"slot","valueSize":1}],"id":2214,"nodeType":"InlineAssembly","src":"3869:53:14"}]},"documentation":{"id":2206,"nodeType":"StructuredDocumentation","src":"3625:99:14","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2216,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:14","nodeType":"FunctionDefinition","parameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"store","nameLocation":"3765:5:14","nodeType":"VariableDeclaration","scope":2216,"src":"3751:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2207,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:14"},"returnParameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"r","nameLocation":"3813:1:14","nodeType":"VariableDeclaration","scope":2216,"src":"3795:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2128_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2211,"nodeType":"UserDefinedTypeName","pathNode":{"id":2210,"name":"BytesSlot","nameLocations":["3795:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2128,"src":"3795:9:14"},"referencedDeclaration":2128,"src":"3795:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2128_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:14"},"scope":2217,"src":"3729:199:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2218,"src":"1245:2685:14","usedErrors":[],"usedEvents":[]}],"src":"193:3738:14"},"id":14},"contracts/BaluniV1Pool.sol":{"ast":{"absolutePath":"contracts/BaluniV1Pool.sol","exportedSymbols":{"BaluniV1Pool":[4022],"Context":[2038],"ERC20":[1651],"IBaluniV1Oracle":[4519],"IBaluniV1PoolPeriphery":[4639],"IBaluniV1Rebalancer":[4724],"IBaluniV1Registry":[4898],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755],"ReentrancyGuard":[2107]},"id":4023,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2219,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":2220,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4023,"sourceUnit":1652,"src":"1468:55:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":2221,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4023,"sourceUnit":2108,"src":"1525:59:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1PoolPeriphery.sol","file":"./interfaces/IBaluniV1PoolPeriphery.sol","id":2222,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4023,"sourceUnit":4640,"src":"1588:49:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Registry.sol","file":"./interfaces/IBaluniV1Registry.sol","id":2223,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4023,"sourceUnit":4899,"src":"1639:44:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Rebalancer.sol","file":"./interfaces/IBaluniV1Rebalancer.sol","id":2224,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4023,"sourceUnit":4725,"src":"1685:46:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Oracle.sol","file":"./interfaces/IBaluniV1Oracle.sol","id":2225,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4023,"sourceUnit":4520,"src":"1733:42:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2226,"name":"ERC20","nameLocations":["1804:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":1651,"src":"1804:5:15"},"id":2227,"nodeType":"InheritanceSpecifier","src":"1804:5:15"},{"baseName":{"id":2228,"name":"ReentrancyGuard","nameLocations":["1811:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":2107,"src":"1811:15:15"},"id":2229,"nodeType":"InheritanceSpecifier","src":"1811:15:15"}],"canonicalName":"BaluniV1Pool","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4022,"linearizedBaseContracts":[4022,2107,1651,728,1755,1729,2038],"name":"BaluniV1Pool","nameLocation":"1788:12:15","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"d14ef46d","id":2233,"mutability":"mutable","name":"assetInfos","nameLocation":"1853:10:15","nodeType":"VariableDeclaration","scope":4022,"src":"1834:29:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo[]"},"typeName":{"baseType":{"id":2231,"nodeType":"UserDefinedTypeName","pathNode":{"id":2230,"name":"AssetInfo","nameLocations":["1834:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2249,"src":"1834:9:15"},"referencedDeclaration":2249,"src":"1834:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2249_storage_ptr","typeString":"struct BaluniV1Pool.AssetInfo"}},"id":2232,"nodeType":"ArrayTypeName","src":"1834:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage_ptr","typeString":"struct BaluniV1Pool.AssetInfo[]"}},"visibility":"public"},{"constant":false,"functionSelector":"7fec8d38","id":2235,"mutability":"mutable","name":"trigger","nameLocation":"1887:7:15","nodeType":"VariableDeclaration","scope":4022,"src":"1872:22:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2234,"name":"uint256","nodeType":"ElementaryTypeName","src":"1872:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c2ee3a08","id":2237,"mutability":"mutable","name":"ONE","nameLocation":"1916:3:15","nodeType":"VariableDeclaration","scope":4022,"src":"1901:18:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2236,"name":"uint256","nodeType":"ElementaryTypeName","src":"1901:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"cdf456e1","id":2239,"mutability":"mutable","name":"baseAsset","nameLocation":"1941:9:15","nodeType":"VariableDeclaration","scope":4022,"src":"1926:24:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2238,"name":"address","nodeType":"ElementaryTypeName","src":"1926:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":2241,"mutability":"mutable","name":"scalingFactor","nameLocation":"1973:13:15","nodeType":"VariableDeclaration","scope":4022,"src":"1957:29:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2240,"name":"uint256","nodeType":"ElementaryTypeName","src":"1957:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"7b103999","id":2244,"mutability":"mutable","name":"registry","nameLocation":"2020:8:15","nodeType":"VariableDeclaration","scope":4022,"src":"1995:33:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"},"typeName":{"id":2243,"nodeType":"UserDefinedTypeName","pathNode":{"id":2242,"name":"IBaluniV1Registry","nameLocations":["1995:17:15"],"nodeType":"IdentifierPath","referencedDeclaration":4898,"src":"1995:17:15"},"referencedDeclaration":4898,"src":"1995:17:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"visibility":"public"},{"canonicalName":"BaluniV1Pool.AssetInfo","id":2249,"members":[{"constant":false,"id":2246,"mutability":"mutable","name":"asset","nameLocation":"2073:5:15","nodeType":"VariableDeclaration","scope":2249,"src":"2065:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2245,"name":"address","nodeType":"ElementaryTypeName","src":"2065:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2248,"mutability":"mutable","name":"weight","nameLocation":"2097:6:15","nodeType":"VariableDeclaration","scope":2249,"src":"2089:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2247,"name":"uint256","nodeType":"ElementaryTypeName","src":"2089:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AssetInfo","nameLocation":"2044:9:15","nodeType":"StructDefinition","scope":4022,"src":"2037:74:15","visibility":"public"},{"anonymous":false,"eventSelector":"279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b8","id":2256,"name":"RebalancePerformed","nameLocation":"2125:18:15","nodeType":"EventDefinition","parameters":{"id":2255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2251,"indexed":true,"mutability":"mutable","name":"by","nameLocation":"2160:2:15","nodeType":"VariableDeclaration","scope":2256,"src":"2144:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2250,"name":"address","nodeType":"ElementaryTypeName","src":"2144:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2254,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"2174:6:15","nodeType":"VariableDeclaration","scope":2256,"src":"2164:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2252,"name":"address","nodeType":"ElementaryTypeName","src":"2164:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2253,"nodeType":"ArrayTypeName","src":"2164:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2143:38:15"},"src":"2119:63:15"},{"anonymous":false,"eventSelector":"a95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e","id":2263,"name":"WeightsRebalanced","nameLocation":"2194:17:15","nodeType":"EventDefinition","parameters":{"id":2262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2228:4:15","nodeType":"VariableDeclaration","scope":2263,"src":"2212:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2257,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2261,"indexed":false,"mutability":"mutable","name":"amountsAdded","nameLocation":"2244:12:15","nodeType":"VariableDeclaration","scope":2263,"src":"2234:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2259,"name":"uint256","nodeType":"ElementaryTypeName","src":"2234:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2260,"nodeType":"ArrayTypeName","src":"2234:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2211:46:15"},"src":"2188:70:15"},{"anonymous":false,"eventSelector":"cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5","id":2269,"name":"Burn","nameLocation":"2270:4:15","nodeType":"EventDefinition","parameters":{"id":2268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2265,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2291:4:15","nodeType":"VariableDeclaration","scope":2269,"src":"2275:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2264,"name":"address","nodeType":"ElementaryTypeName","src":"2275:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2267,"indexed":false,"mutability":"mutable","name":"sharesBurned","nameLocation":"2305:12:15","nodeType":"VariableDeclaration","scope":2269,"src":"2297:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2266,"name":"uint256","nodeType":"ElementaryTypeName","src":"2297:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2274:44:15"},"src":"2264:55:15"},{"anonymous":false,"eventSelector":"0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885","id":2275,"name":"Mint","nameLocation":"2331:4:15","nodeType":"EventDefinition","parameters":{"id":2274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2271,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2352:2:15","nodeType":"VariableDeclaration","scope":2275,"src":"2336:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2270,"name":"address","nodeType":"ElementaryTypeName","src":"2336:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2273,"indexed":false,"mutability":"mutable","name":"sharesMinted","nameLocation":"2364:12:15","nodeType":"VariableDeclaration","scope":2275,"src":"2356:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2272,"name":"uint256","nodeType":"ElementaryTypeName","src":"2356:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:42:15"},"src":"2325:53:15"},{"anonymous":false,"eventSelector":"cd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e46062","id":2287,"name":"Swap","nameLocation":"2390:4:15","nodeType":"EventDefinition","parameters":{"id":2286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2421:4:15","nodeType":"VariableDeclaration","scope":2287,"src":"2405:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2276,"name":"address","nodeType":"ElementaryTypeName","src":"2405:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2279,"indexed":true,"mutability":"mutable","name":"fromToken","nameLocation":"2452:9:15","nodeType":"VariableDeclaration","scope":2287,"src":"2436:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2278,"name":"address","nodeType":"ElementaryTypeName","src":"2436:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2281,"indexed":true,"mutability":"mutable","name":"toToken","nameLocation":"2488:7:15","nodeType":"VariableDeclaration","scope":2287,"src":"2472:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2280,"name":"address","nodeType":"ElementaryTypeName","src":"2472:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2283,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"2514:8:15","nodeType":"VariableDeclaration","scope":2287,"src":"2506:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2282,"name":"uint256","nodeType":"ElementaryTypeName","src":"2506:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2285,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"2541:9:15","nodeType":"VariableDeclaration","scope":2287,"src":"2533:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2284,"name":"uint256","nodeType":"ElementaryTypeName","src":"2533:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:163:15"},"src":"2384:174:15"},{"body":{"id":2385,"nodeType":"Block","src":"2743:594:15","statements":[{"expression":{"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2304,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"2754:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2306,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"2783:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2305,"name":"IBaluniV1Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"2765:17:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Registry_$4898_$","typeString":"type(contract IBaluniV1Registry)"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"src":"2754:39:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"id":2309,"nodeType":"ExpressionStatement","src":"2754:39:15"},{"expression":{"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2310,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"2806:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31653138","id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"2806:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2313,"nodeType":"ExpressionStatement","src":"2806:10:15"},{"assignments":[2315],"declarations":[{"constant":false,"id":2315,"mutability":"mutable","name":"result","nameLocation":"2834:6:15","nodeType":"VariableDeclaration","scope":2385,"src":"2829:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2314,"name":"bool","nodeType":"ElementaryTypeName","src":"2829:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2320,"initialValue":{"arguments":[{"id":2317,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"2860:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":2318,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"2869:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2316,"name":"initializeAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"2843:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (address[] memory,uint256[] memory) returns (bool)"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2843:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2829:49:15"},{"expression":{"arguments":[{"id":2322,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"2897:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a6174696f6e206661696c6564","id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2905:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ced64e7a7e72856969cefe00640aa7f13f8db705f9748f7d3003a20bc61daa4","typeString":"literal_string \"Initialization failed\""},"value":"Initialization failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ced64e7a7e72856969cefe00640aa7f13f8db705f9748f7d3003a20bc61daa4","typeString":"literal_string \"Initialization failed\""}],"id":2321,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2889:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2889:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2325,"nodeType":"ExpressionStatement","src":"2889:40:15"},{"expression":{"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2326,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"2942:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2327,"name":"_trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"2952:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2942:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2329,"nodeType":"ExpressionStatement","src":"2942:18:15"},{"expression":{"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2330,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"2973:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2331,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"2985:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2994:7:15","memberName":"getUSDC","nodeType":"MemberAccess","referencedDeclaration":4862,"src":"2985:16:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2985:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2973:30:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2335,"nodeType":"ExpressionStatement","src":"2973:30:15"},{"expression":{"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2336,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"3016:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"id":2342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"id":2340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3138","id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3039:2:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"36","id":2339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3044:1:15","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"3039:6:15","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"}}],"id":2341,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3038:8:15","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"}},"src":"3032:14:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"}},"src":"3016:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2344,"nodeType":"ExpressionStatement","src":"3016:30:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2346,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"3067:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3088:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2347,"name":"address","nodeType":"ElementaryTypeName","src":"3080:7:15","typeDescriptions":{}}},"id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3067:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420626173652061737365742061646472657373","id":2352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3092:28:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_391a75680d8ec99739af126cde56833526e4b720a416f24f1d7ee98c294a45b1","typeString":"literal_string \"Invalid base asset address\""},"value":"Invalid base asset address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_391a75680d8ec99739af126cde56833526e4b720a416f24f1d7ee98c294a45b1","typeString":"literal_string \"Invalid base asset address\""}],"id":2345,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3059:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3059:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2354,"nodeType":"ExpressionStatement","src":"3059:62:15"},{"assignments":[2356],"declarations":[{"constant":false,"id":2356,"mutability":"mutable","name":"totalWeight","nameLocation":"3142:11:15","nodeType":"VariableDeclaration","scope":2385,"src":"3134:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2355,"name":"uint256","nodeType":"ElementaryTypeName","src":"3134:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2358,"initialValue":{"hexValue":"30","id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3156:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3134:23:15"},{"body":{"id":2376,"nodeType":"Block","src":"3216:53:15","statements":[{"expression":{"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2370,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"3231:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":2371,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"3246:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2373,"indexExpression":{"id":2372,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"3255:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3246:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3231:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2375,"nodeType":"ExpressionStatement","src":"3231:26:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2363,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"3190:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2364,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"3194:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3203:6:15","memberName":"length","nodeType":"MemberAccess","src":"3194:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3190:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2377,"initializationExpression":{"assignments":[2360],"declarations":[{"constant":false,"id":2360,"mutability":"mutable","name":"i","nameLocation":"3183:1:15","nodeType":"VariableDeclaration","scope":2377,"src":"3175:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2359,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2362,"initialValue":{"hexValue":"30","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3187:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3175:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3211:3:15","subExpression":{"id":2367,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"3211:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2369,"nodeType":"ExpressionStatement","src":"3211:3:15"},"nodeType":"ForStatement","src":"3170:99:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2379,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"3289:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3130303030","id":2380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3304:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3289:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642077656967687473","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3311:17:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5cbb8d647918028d0523fccac550113bbbb71d463bbb8b573c02c32bc5cf2b89","typeString":"literal_string \"Invalid weights\""},"value":"Invalid weights"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5cbb8d647918028d0523fccac550113bbbb71d463bbb8b573c02c32bc5cf2b89","typeString":"literal_string \"Invalid weights\""}],"id":2378,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3281:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2384,"nodeType":"ExpressionStatement","src":"3281:48:15"}]},"id":2386,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"42616c756e69204c50","id":2300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2717:11:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffab3cad7a41854f5c383caa9a930fe1ab39b32cbc67d790708a7a9f02409818","typeString":"literal_string \"Baluni LP\""},"value":"Baluni LP"},{"hexValue":"42414c554e492d4c50","id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2730:11:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e9cdad270784d4cf630085b188c6ca83632e4ebde5d7094eec6989a900521298","typeString":"literal_string \"BALUNI-LP\""},"value":"BALUNI-LP"}],"id":2302,"kind":"baseConstructorSpecifier","modifierName":{"id":2299,"name":"ERC20","nameLocations":["2711:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":1651,"src":"2711:5:15"},"nodeType":"ModifierInvocation","src":"2711:31:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2290,"mutability":"mutable","name":"_assets","nameLocation":"2605:7:15","nodeType":"VariableDeclaration","scope":2386,"src":"2588:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2288,"name":"address","nodeType":"ElementaryTypeName","src":"2588:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2289,"nodeType":"ArrayTypeName","src":"2588:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2293,"mutability":"mutable","name":"_weights","nameLocation":"2640:8:15","nodeType":"VariableDeclaration","scope":2386,"src":"2623:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2291,"name":"uint256","nodeType":"ElementaryTypeName","src":"2623:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2292,"nodeType":"ArrayTypeName","src":"2623:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2295,"mutability":"mutable","name":"_trigger","nameLocation":"2667:8:15","nodeType":"VariableDeclaration","scope":2386,"src":"2659:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2294,"name":"uint256","nodeType":"ElementaryTypeName","src":"2659:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2297,"mutability":"mutable","name":"_registry","nameLocation":"2694:9:15","nodeType":"VariableDeclaration","scope":2386,"src":"2686:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2296,"name":"address","nodeType":"ElementaryTypeName","src":"2686:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2577:133:15"},"returnParameters":{"id":2303,"nodeType":"ParameterList","parameters":[],"src":"2743:0:15"},"scope":4022,"src":"2566:771:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2403,"nodeType":"Block","src":"3370:145:15","statements":[{"assignments":[2389],"declarations":[{"constant":false,"id":2389,"mutability":"mutable","name":"periphery","nameLocation":"3389:9:15","nodeType":"VariableDeclaration","scope":2403,"src":"3381:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2388,"name":"address","nodeType":"ElementaryTypeName","src":"3381:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2393,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2390,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"3401:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3410:22:15","memberName":"getBaluniPoolPeriphery","nodeType":"MemberAccess","referencedDeclaration":4832,"src":"3401:31:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3381:53:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2395,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3453:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3457:6:15","memberName":"sender","nodeType":"MemberAccess","src":"3453:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2397,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"3467:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3453:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920506572697068657279","id":2399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3478:16:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e84ca658204d8225a6124393bf429fae79ddb71fa88578d833d3a2b9b5da52d2","typeString":"literal_string \"Only Periphery\""},"value":"Only Periphery"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e84ca658204d8225a6124393bf429fae79ddb71fa88578d833d3a2b9b5da52d2","typeString":"literal_string \"Only Periphery\""}],"id":2394,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3445:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3445:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2401,"nodeType":"ExpressionStatement","src":"3445:50:15"},{"id":2402,"nodeType":"PlaceholderStatement","src":"3506:1:15"}]},"id":2404,"name":"onlyPeriphery","nameLocation":"3354:13:15","nodeType":"ModifierDefinition","parameters":{"id":2387,"nodeType":"ParameterList","parameters":[],"src":"3367:2:15"},"src":"3345:170:15","virtual":false,"visibility":"internal"},{"body":{"id":2530,"nodeType":"Block","src":"3839:777:15","statements":[{"assignments":[2417],"declarations":[{"constant":false,"id":2417,"mutability":"mutable","name":"rebalancer","nameLocation":"3858:10:15","nodeType":"VariableDeclaration","scope":2530,"src":"3850:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2416,"name":"address","nodeType":"ElementaryTypeName","src":"3850:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2421,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2418,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"3871:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3880:19:15","memberName":"getBaluniRebalancer","nodeType":"MemberAccess","referencedDeclaration":4842,"src":"3871:28:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3850:51:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2423,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"3922:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3931:19:15","memberName":"getBaluniRebalancer","nodeType":"MemberAccess","referencedDeclaration":4842,"src":"3922:28:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3922:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3964:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3956:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2426,"name":"address","nodeType":"ElementaryTypeName","src":"3956:7:15","typeDescriptions":{}}},"id":2429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3956:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3922:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420726562616c616e6365722061646472657373","id":2431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3968:28:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b3262886d4e83856703b764357b6a852eb26ef34a7982063b49217460e097ddc","typeString":"literal_string \"Invalid rebalancer address\""},"value":"Invalid rebalancer address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b3262886d4e83856703b764357b6a852eb26ef34a7982063b49217460e097ddc","typeString":"literal_string \"Invalid rebalancer address\""}],"id":2422,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3914:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3914:83:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2433,"nodeType":"ExpressionStatement","src":"3914:83:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2435,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"4016:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4024:6:15","memberName":"length","nodeType":"MemberAccess","src":"4016:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2437,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"4034:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4043:6:15","memberName":"length","nodeType":"MemberAccess","src":"4034:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4016:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41737365747320616e642077656967687473206c656e677468206d69736d61746368","id":2440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4051:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""},"value":"Assets and weights length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""}],"id":2434,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4008:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4008:80:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2442,"nodeType":"ExpressionStatement","src":"4008:80:15"},{"body":{"id":2526,"nodeType":"Block","src":"4146:441:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2455,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"4169:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2457,"indexExpression":{"id":2456,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"4177:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4169:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4191:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4183:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2458,"name":"address","nodeType":"ElementaryTypeName","src":"4183:7:15","typeDescriptions":{}}},"id":2461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4183:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4169:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061737365742061646472657373","id":2463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4195:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_795f8eca8a22be2e70f1d9bdebdbf85a1dc43e172c3964e13eac586b45ff2b92","typeString":"literal_string \"Invalid asset address\""},"value":"Invalid asset address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_795f8eca8a22be2e70f1d9bdebdbf85a1dc43e172c3964e13eac586b45ff2b92","typeString":"literal_string \"Invalid asset address\""}],"id":2454,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4161:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4161:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2465,"nodeType":"ExpressionStatement","src":"4161:58:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2467,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"4242:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2469,"indexExpression":{"id":2468,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"4251:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4242:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4256:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4242:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420776569676874","id":2472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4259:16:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ff1ef73e4333da4da038aba1312a1df349427c8859c23d4b6d4a7df22bfc1a19","typeString":"literal_string \"Invalid weight\""},"value":"Invalid weight"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ff1ef73e4333da4da038aba1312a1df349427c8859c23d4b6d4a7df22bfc1a19","typeString":"literal_string \"Invalid weight\""}],"id":2466,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4234:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4234:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2474,"nodeType":"ExpressionStatement","src":"4234:42:15"},{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":2479,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"4327:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2481,"indexExpression":{"id":2480,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"4335:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4327:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2482,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"4347:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2484,"indexExpression":{"id":2483,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"4356:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4347:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2478,"name":"AssetInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"4309:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AssetInfo_$2249_storage_ptr_$","typeString":"type(struct BaluniV1Pool.AssetInfo storage pointer)"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4320:5:15","4339:6:15"],"names":["asset","weight"],"nodeType":"FunctionCall","src":"4309:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2249_memory_ptr","typeString":"struct BaluniV1Pool.AssetInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AssetInfo_$2249_memory_ptr","typeString":"struct BaluniV1Pool.AssetInfo memory"}],"expression":{"id":2475,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"4293:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4304:4:15","memberName":"push","nodeType":"MemberAccess","src":"4293:15:15","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage_ptr_$_t_struct$_AssetInfo_$2249_storage_$returns$__$attached_to$_t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage_ptr_$","typeString":"function (struct BaluniV1Pool.AssetInfo storage ref[] storage pointer,struct BaluniV1Pool.AssetInfo storage ref)"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4293:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2487,"nodeType":"ExpressionStatement","src":"4293:68:15"},{"assignments":[2490],"declarations":[{"constant":false,"id":2490,"mutability":"mutable","name":"asset","nameLocation":"4385:5:15","nodeType":"VariableDeclaration","scope":2526,"src":"4378:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":2489,"nodeType":"UserDefinedTypeName","pathNode":{"id":2488,"name":"IERC20","nameLocations":["4378:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"4378:6:15"},"referencedDeclaration":1729,"src":"4378:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"}],"id":2496,"initialValue":{"arguments":[{"baseExpression":{"id":2492,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"4400:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2494,"indexExpression":{"id":2493,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"4408:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4400:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2491,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"4393:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4393:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"4378:33:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2501,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4454:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}],"id":2500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4446:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2499,"name":"address","nodeType":"ElementaryTypeName","src":"4446:7:15","typeDescriptions":{}}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4446:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2505,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"4469:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4461:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2503,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:15","typeDescriptions":{}}},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4461:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2497,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"4430:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4436:9:15","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1706,"src":"4430:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4430:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4485:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4430:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2525,"nodeType":"IfStatement","src":"4426:150:15","trueBody":{"id":2524,"nodeType":"Block","src":"4488:88:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":2515,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"4529:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4521:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2513,"name":"address","nodeType":"ElementaryTypeName","src":"4521:7:15","typeDescriptions":{}}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4521:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":2519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4547:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2518,"name":"uint256","nodeType":"ElementaryTypeName","src":"4547:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2517,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4542:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4542:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4556:3:15","memberName":"max","nodeType":"MemberAccess","src":"4542:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2510,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"4507:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4513:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1716,"src":"4507:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4507:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2523,"nodeType":"ExpressionStatement","src":"4507:53:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"4121:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2448,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"4125:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4133:6:15","memberName":"length","nodeType":"MemberAccess","src":"4125:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4121:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2527,"initializationExpression":{"assignments":[2444],"declarations":[{"constant":false,"id":2444,"mutability":"mutable","name":"i","nameLocation":"4114:1:15","nodeType":"VariableDeclaration","scope":2527,"src":"4106:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2443,"name":"uint256","nodeType":"ElementaryTypeName","src":"4106:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2446,"initialValue":{"hexValue":"30","id":2445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4118:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4106:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4141:3:15","subExpression":{"id":2451,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"4141:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2453,"nodeType":"ExpressionStatement","src":"4141:3:15"},"nodeType":"ForStatement","src":"4101:486:15"},{"expression":{"hexValue":"74727565","id":2528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4604:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2415,"id":2529,"nodeType":"Return","src":"4597:11:15"}]},"documentation":{"id":2405,"nodeType":"StructuredDocumentation","src":"3523:207:15","text":" @dev Initializes the assets and their weights for the pool.\n @param _assets The array of asset addresses.\n @param _weights The array of weights corresponding to each asset."},"id":2531,"implemented":true,"kind":"function","modifiers":[],"name":"initializeAssets","nameLocation":"3745:16:15","nodeType":"FunctionDefinition","parameters":{"id":2412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"mutability":"mutable","name":"_assets","nameLocation":"3779:7:15","nodeType":"VariableDeclaration","scope":2531,"src":"3762:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2406,"name":"address","nodeType":"ElementaryTypeName","src":"3762:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2407,"nodeType":"ArrayTypeName","src":"3762:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2411,"mutability":"mutable","name":"_weights","nameLocation":"3805:8:15","nodeType":"VariableDeclaration","scope":2531,"src":"3788:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2409,"name":"uint256","nodeType":"ElementaryTypeName","src":"3788:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2410,"nodeType":"ArrayTypeName","src":"3788:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3761:53:15"},"returnParameters":{"id":2415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2531,"src":"3833:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2413,"name":"bool","nodeType":"ElementaryTypeName","src":"3833:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3832:6:15"},"scope":4022,"src":"3736:880:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2632,"nodeType":"Block","src":"5109:815:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2543,"name":"isRebalanceNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"5128:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5128:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526562616c616e6365206e6f74206e6565646564","id":2545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5149:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""},"value":"Rebalance not needed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""}],"id":2542,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5120:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5120:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2547,"nodeType":"ExpressionStatement","src":"5120:52:15"},{"assignments":[2549,2552],"declarations":[{"constant":false,"id":2549,"mutability":"mutable","name":"totalValuation","nameLocation":"5192:14:15","nodeType":"VariableDeclaration","scope":2632,"src":"5184:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2548,"name":"uint256","nodeType":"ElementaryTypeName","src":"5184:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2552,"mutability":"mutable","name":"valuations","nameLocation":"5225:10:15","nodeType":"VariableDeclaration","scope":2632,"src":"5208:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2550,"name":"uint256","nodeType":"ElementaryTypeName","src":"5208:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2551,"nodeType":"ArrayTypeName","src":"5208:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2555,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2553,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"5239:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5239:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"5183:80:15"},{"assignments":[2560],"declarations":[{"constant":false,"id":2560,"mutability":"mutable","name":"amountsToAdd","nameLocation":"5301:12:15","nodeType":"VariableDeclaration","scope":2632,"src":"5284:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2558,"name":"uint256","nodeType":"ElementaryTypeName","src":"5284:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2559,"nodeType":"ArrayTypeName","src":"5284:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2565,"initialValue":{"arguments":[{"id":2562,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"5339:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2563,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"5355:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2561,"name":"_calculateAmountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"5316:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256[] memory) view returns (uint256[] memory)"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5316:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5284:82:15"},{"assignments":[2567],"declarations":[{"constant":false,"id":2567,"mutability":"mutable","name":"totalAddedLiquidity","nameLocation":"5393:19:15","nodeType":"VariableDeclaration","scope":2632,"src":"5385:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2566,"name":"uint256","nodeType":"ElementaryTypeName","src":"5385:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2571,"initialValue":{"arguments":[{"id":2569,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"5445:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2568,"name":"_calculateTotalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"5415:29:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) view returns (uint256)"}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5415:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5385:73:15"},{"expression":{"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2572,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"5471:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"id":2573,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"5494:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5471:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2575,"nodeType":"ExpressionStatement","src":"5471:36:15"},{"assignments":[2580],"declarations":[{"constant":false,"id":2580,"mutability":"mutable","name":"amounts","nameLocation":"5537:7:15","nodeType":"VariableDeclaration","scope":2632,"src":"5520:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"5520:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2579,"nodeType":"ArrayTypeName","src":"5520:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2587,"initialValue":{"arguments":[{"expression":{"id":2584,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"5561:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5572:6:15","memberName":"length","nodeType":"MemberAccess","src":"5561:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5547:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2581,"name":"uint256","nodeType":"ElementaryTypeName","src":"5551:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2582,"nodeType":"ArrayTypeName","src":"5551:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5520:59:15"},{"body":{"id":2617,"nodeType":"Block","src":"5642:138:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2599,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"5661:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2601,"indexExpression":{"id":2600,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"5674:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5661:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5679:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5661:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2616,"nodeType":"IfStatement","src":"5657:112:15","trueBody":{"id":2615,"nodeType":"Block","src":"5682:87:15","statements":[{"expression":{"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2604,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"5701:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2606,"indexExpression":{"id":2605,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"5709:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5701:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2608,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"5734:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2609,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"5737:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2611,"indexExpression":{"id":2610,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"5750:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5737:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2607,"name":"_calculateLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"5714:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5714:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5701:52:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2614,"nodeType":"ExpressionStatement","src":"5701:52:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2592,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"5612:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2593,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"5616:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5629:6:15","memberName":"length","nodeType":"MemberAccess","src":"5616:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5612:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2618,"initializationExpression":{"assignments":[2589],"declarations":[{"constant":false,"id":2589,"mutability":"mutable","name":"i","nameLocation":"5605:1:15","nodeType":"VariableDeclaration","scope":2618,"src":"5597:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"5597:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2591,"initialValue":{"hexValue":"30","id":2590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5609:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5597:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5637:3:15","subExpression":{"id":2596,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"5637:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2598,"nodeType":"ExpressionStatement","src":"5637:3:15"},"nodeType":"ForStatement","src":"5592:188:15"},{"expression":{"arguments":[{"id":2620,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"5798:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2621,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"5808:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2619,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"5792:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5792:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2623,"nodeType":"ExpressionStatement","src":"5792:36:15"},{"eventCall":{"arguments":[{"expression":{"id":2625,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5864:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5868:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5864:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2627,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"5876:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2624,"name":"WeightsRebalanced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"5846:17:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory)"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5846:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2629,"nodeType":"EmitStatement","src":"5841:48:15"},{"expression":{"id":2630,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"5909:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2541,"id":2631,"nodeType":"Return","src":"5902:14:15"}]},"documentation":{"id":2532,"nodeType":"StructuredDocumentation","src":"4624:385:15","text":" @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\n transferring the calculated amounts from the user to the pool, minting the total added liquidity,\n updating the reserves, and emitting an event to indicate the rebalancing of weights.\n @param receiver The address to receive the minted liquidity tokens."},"functionSelector":"0723c999","id":2633,"implemented":true,"kind":"function","modifiers":[{"id":2537,"kind":"modifierInvocation","modifierName":{"id":2536,"name":"onlyPeriphery","nameLocations":["5068:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2404,"src":"5068:13:15"},"nodeType":"ModifierInvocation","src":"5068:13:15"}],"name":"rebalanceWeights","nameLocation":"5024:16:15","nodeType":"FunctionDefinition","parameters":{"id":2535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2534,"mutability":"mutable","name":"receiver","nameLocation":"5049:8:15","nodeType":"VariableDeclaration","scope":2633,"src":"5041:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2533,"name":"address","nodeType":"ElementaryTypeName","src":"5041:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5040:18:15"},"returnParameters":{"id":2541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2633,"src":"5091:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2538,"name":"uint256","nodeType":"ElementaryTypeName","src":"5091:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2539,"nodeType":"ArrayTypeName","src":"5091:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5090:18:15"},"scope":4022,"src":"5015:909:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2718,"nodeType":"Block","src":"6900:642:15","statements":[{"assignments":[2650],"declarations":[{"constant":false,"id":2650,"mutability":"mutable","name":"_BPS_FEE","nameLocation":"6919:8:15","nodeType":"VariableDeclaration","scope":2718,"src":"6911:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2649,"name":"uint256","nodeType":"ElementaryTypeName","src":"6911:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2654,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2651,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"6930:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6939:10:15","memberName":"getBPS_FEE","nodeType":"MemberAccess","referencedDeclaration":4872,"src":"6930:19:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6930:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6911:40:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2656,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"6970:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2657,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"6983:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6970:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f742073776170207468652073616d6520746f6b656e","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6992:28:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f3b6914a8f4e42f0dc4d6fcf60d1470463793693c123b4b0782b9cd43668c23","typeString":"literal_string \"Cannot swap the same token\""},"value":"Cannot swap the same token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f3b6914a8f4e42f0dc4d6fcf60d1470463793693c123b4b0782b9cd43668c23","typeString":"literal_string \"Cannot swap the same token\""}],"id":2655,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6962:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6962:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2661,"nodeType":"ExpressionStatement","src":"6962:59:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2663,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"7040:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7049:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7040:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":2666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7052:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":2662,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7032:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2668,"nodeType":"ExpressionStatement","src":"7032:55:15"},{"assignments":[2670],"declarations":[{"constant":false,"id":2670,"mutability":"mutable","name":"receivedAmount","nameLocation":"7108:14:15","nodeType":"VariableDeclaration","scope":2718,"src":"7100:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2669,"name":"uint256","nodeType":"ElementaryTypeName","src":"7100:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2676,"initialValue":{"arguments":[{"id":2672,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"7138:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2673,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"7149:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2674,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"7158:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2671,"name":"getAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"7125:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7125:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7100:65:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2679,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"7200:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2678,"name":"getAssetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"7184:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7184:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2681,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"7212:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7184:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204c6971756964697479","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7228:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8","typeString":"literal_string \"Insufficient Liquidity\""},"value":"Insufficient Liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8","typeString":"literal_string \"Insufficient Liquidity\""}],"id":2677,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7176:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7176:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2685,"nodeType":"ExpressionStatement","src":"7176:77:15"},{"assignments":[2687],"declarations":[{"constant":false,"id":2687,"mutability":"mutable","name":"fee","nameLocation":"7274:3:15","nodeType":"VariableDeclaration","scope":2718,"src":"7266:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2686,"name":"uint256","nodeType":"ElementaryTypeName","src":"7266:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2694,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2688,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"7281:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2689,"name":"_BPS_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"7298:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7281:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2691,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7280:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7310:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"7280:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7266:49:15"},{"expression":{"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2695,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"7326:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2696,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"7338:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2697,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"7355:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7326:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2700,"nodeType":"ExpressionStatement","src":"7326:32:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2702,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"7379:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7391:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7379:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e7420746f2073656e64206d7573742062652067726561746572207468616e2030","id":2705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7394:39:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_293eab1376cea4527a492c75c5b4d240032b8920c86961428e65758e4fd3daec","typeString":"literal_string \"Amount to send must be greater than 0\""},"value":"Amount to send must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_293eab1376cea4527a492c75c5b4d240032b8920c86961428e65758e4fd3daec","typeString":"literal_string \"Amount to send must be greater than 0\""}],"id":2701,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7371:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7371:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2707,"nodeType":"ExpressionStatement","src":"7371:63:15"},{"eventCall":{"arguments":[{"id":2709,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"7457:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2710,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"7467:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2711,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"7478:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2712,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"7487:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2713,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"7495:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2708,"name":"Swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"7452:4:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7452:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2715,"nodeType":"EmitStatement","src":"7447:58:15"},{"expression":{"id":2716,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"7525:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2648,"id":2717,"nodeType":"Return","src":"7518:16:15"}]},"documentation":{"id":2634,"nodeType":"StructuredDocumentation","src":"5932:785:15","text":" @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\n Requirements:\n - `fromToken` and `toToken` must be different tokens.\n - `amount` must be greater than zero.\n - Sufficient liquidity of `toToken` must be available in the contract.\n Emits a `Swap` event with the details of the swap.\n Updates the reserves after the swap.\n @param fromToken The address of the token to swap from.\n @param toToken The address of the token to swap to.\n @param amount The amount of `fromToken` to swap.\n @param receiver The address to receive the swapped tokens.\n @return amountOut The amount of `toToken` received after the swap."},"functionSelector":"6e81221c","id":2719,"implemented":true,"kind":"function","modifiers":[{"id":2645,"kind":"modifierInvocation","modifierName":{"id":2644,"name":"nonReentrant","nameLocations":["6859:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2071,"src":"6859:12:15"},"nodeType":"ModifierInvocation","src":"6859:12:15"}],"name":"swap","nameLocation":"6732:4:15","nodeType":"FunctionDefinition","parameters":{"id":2643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2636,"mutability":"mutable","name":"fromToken","nameLocation":"6755:9:15","nodeType":"VariableDeclaration","scope":2719,"src":"6747:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2635,"name":"address","nodeType":"ElementaryTypeName","src":"6747:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2638,"mutability":"mutable","name":"toToken","nameLocation":"6783:7:15","nodeType":"VariableDeclaration","scope":2719,"src":"6775:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2637,"name":"address","nodeType":"ElementaryTypeName","src":"6775:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2640,"mutability":"mutable","name":"amount","nameLocation":"6809:6:15","nodeType":"VariableDeclaration","scope":2719,"src":"6801:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2639,"name":"uint256","nodeType":"ElementaryTypeName","src":"6801:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2642,"mutability":"mutable","name":"receiver","nameLocation":"6834:8:15","nodeType":"VariableDeclaration","scope":2719,"src":"6826:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2641,"name":"address","nodeType":"ElementaryTypeName","src":"6826:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6736:113:15"},"returnParameters":{"id":2648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2647,"mutability":"mutable","name":"amountOut","nameLocation":"6889:9:15","nodeType":"VariableDeclaration","scope":2719,"src":"6881:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2646,"name":"uint256","nodeType":"ElementaryTypeName","src":"6881:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6880:19:15"},"scope":4022,"src":"6723:819:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2882,"nodeType":"Block","src":"7846:1265:15","statements":[{"assignments":[2733],"declarations":[{"constant":false,"id":2733,"mutability":"mutable","name":"totalSupply","nameLocation":"7865:11:15","nodeType":"VariableDeclaration","scope":2882,"src":"7857:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2732,"name":"uint256","nodeType":"ElementaryTypeName","src":"7857:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2736,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2734,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"7879:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7879:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7857:35:15"},{"assignments":[2738],"declarations":[{"constant":false,"id":2738,"mutability":"mutable","name":"totalValue","nameLocation":"7911:10:15","nodeType":"VariableDeclaration","scope":2882,"src":"7903:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2737,"name":"uint256","nodeType":"ElementaryTypeName","src":"7903:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2740,"initialValue":{"hexValue":"30","id":2739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7924:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7903:22:15"},{"assignments":[2745],"declarations":[{"constant":false,"id":2745,"mutability":"mutable","name":"_reserves","nameLocation":"7953:9:15","nodeType":"VariableDeclaration","scope":2882,"src":"7936:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2743,"name":"uint256","nodeType":"ElementaryTypeName","src":"7936:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2744,"nodeType":"ArrayTypeName","src":"7936:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2748,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2746,"name":"getReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"7965:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7965:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7936:42:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2750,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"7997:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8008:6:15","memberName":"length","nodeType":"MemberAccess","src":"7997:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2752,"name":"_reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"8018:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8028:6:15","memberName":"length","nodeType":"MemberAccess","src":"8018:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207265736572766573206c656e677468","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8036:25:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_788ce755d61da147edad70af92467c8a383af859573990e9defde5b6e0bdf24d","typeString":"literal_string \"Invalid reserves length\""},"value":"Invalid reserves length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_788ce755d61da147edad70af92467c8a383af859573990e9defde5b6e0bdf24d","typeString":"literal_string \"Invalid reserves length\""}],"id":2749,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7989:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7989:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2757,"nodeType":"ExpressionStatement","src":"7989:73:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2759,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"8081:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8092:6:15","memberName":"length","nodeType":"MemberAccess","src":"8081:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8101:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8081:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20617373657473","id":2763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8104:11:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_195739df032cb3c07c5ed70a4cae73c5d077df4296263c6db3d1f3b4671efbd0","typeString":"literal_string \"No assets\""},"value":"No assets"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_195739df032cb3c07c5ed70a4cae73c5d077df4296263c6db3d1f3b4671efbd0","typeString":"literal_string \"No assets\""}],"id":2758,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8073:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8073:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2765,"nodeType":"ExpressionStatement","src":"8073:43:15"},{"body":{"id":2812,"nodeType":"Block","src":"8177:319:15","statements":[{"assignments":[2778],"declarations":[{"constant":false,"id":2778,"mutability":"mutable","name":"asset","nameLocation":"8200:5:15","nodeType":"VariableDeclaration","scope":2812,"src":"8192:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2777,"name":"address","nodeType":"ElementaryTypeName","src":"8192:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2783,"initialValue":{"expression":{"baseExpression":{"id":2779,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"8208:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2781,"indexExpression":{"id":2780,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"8219:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8208:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2249_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":2782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8222:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2246,"src":"8208:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8192:35:15"},{"assignments":[2785],"declarations":[{"constant":false,"id":2785,"mutability":"mutable","name":"valuation","nameLocation":"8250:9:15","nodeType":"VariableDeclaration","scope":2812,"src":"8242:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2784,"name":"uint256","nodeType":"ElementaryTypeName","src":"8242:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2786,"nodeType":"VariableDeclarationStatement","src":"8242:17:15"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2787,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"8278:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2788,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"8287:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8278:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2798,"nodeType":"IfStatement","src":"8274:108:15","trueBody":{"id":2797,"nodeType":"Block","src":"8298:84:15","statements":[{"expression":{"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2790,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"8317:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2791,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"8329:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2793,"indexExpression":{"id":2792,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"8337:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8329:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8317:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2795,"nodeType":"ExpressionStatement","src":"8317:22:15"},{"id":2796,"nodeType":"Continue","src":"8358:8:15"}]}},{"expression":{"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2799,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"8396:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2801,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"8428:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2802,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"8435:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2804,"indexExpression":{"id":2803,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"8443:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8435:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2800,"name":"_convertTokenToBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"8408:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8408:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8396:50:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2807,"nodeType":"ExpressionStatement","src":"8396:50:15"},{"expression":{"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2808,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"8461:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2809,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"8475:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8461:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2811,"nodeType":"ExpressionStatement","src":"8461:23:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2770,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"8149:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2771,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"8153:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8164:6:15","memberName":"length","nodeType":"MemberAccess","src":"8153:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8149:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2813,"initializationExpression":{"assignments":[2767],"declarations":[{"constant":false,"id":2767,"mutability":"mutable","name":"i","nameLocation":"8142:1:15","nodeType":"VariableDeclaration","scope":2813,"src":"8134:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2766,"name":"uint256","nodeType":"ElementaryTypeName","src":"8134:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2769,"initialValue":{"hexValue":"30","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8146:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8134:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8172:3:15","subExpression":{"id":2774,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"8172:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2776,"nodeType":"ExpressionStatement","src":"8172:3:15"},"nodeType":"ForStatement","src":"8129:367:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2815,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"8516:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8529:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8516:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c2076616c7565206d7573742062652067726561746572207468616e2030","id":2818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8532:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e8ec4a06d76118e3b24afbc30b183e086aa6aaa6e137c81160fc8d59e1a33e3f","typeString":"literal_string \"Total value must be greater than 0\""},"value":"Total value must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e8ec4a06d76118e3b24afbc30b183e086aa6aaa6e137c81160fc8d59e1a33e3f","typeString":"literal_string \"Total value must be greater than 0\""}],"id":2814,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8508:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8508:61:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2820,"nodeType":"ExpressionStatement","src":"8508:61:15"},{"assignments":[2822],"declarations":[{"constant":false,"id":2822,"mutability":"mutable","name":"toMint","nameLocation":"8590:6:15","nodeType":"VariableDeclaration","scope":2882,"src":"8582:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2821,"name":"uint256","nodeType":"ElementaryTypeName","src":"8582:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2823,"nodeType":"VariableDeclarationStatement","src":"8582:14:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2824,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"8613:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8628:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8613:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2861,"nodeType":"Block","src":"8699:267:15","statements":[{"assignments":[2835,null],"declarations":[{"constant":false,"id":2835,"mutability":"mutable","name":"totalLiquidity","nameLocation":"8723:14:15","nodeType":"VariableDeclaration","scope":2861,"src":"8715:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2834,"name":"uint256","nodeType":"ElementaryTypeName","src":"8715:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":2838,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2836,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"8743:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8743:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8714:53:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2840,"name":"totalLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"8790:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8807:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8790:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c206c6971756964697479206d7573742062652067726561746572207468616e2030","id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8810:40:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_a245c00c976af272c663e732300fe860097516364a0d92887494f54e860fa54c","typeString":"literal_string \"Total liquidity must be greater than 0\""},"value":"Total liquidity must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a245c00c976af272c663e732300fe860097516364a0d92887494f54e860fa54c","typeString":"literal_string \"Total liquidity must be greater than 0\""}],"id":2839,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8782:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8782:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2845,"nodeType":"ExpressionStatement","src":"8782:69:15"},{"expression":{"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2846,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"8866:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2847,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"8877:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2848,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"8890:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8877:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8876:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2851,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"8907:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8876:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8875:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2854,"name":"totalLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"8923:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2855,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"8940:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8923:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2857,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8922:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8875:79:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8866:88:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2860,"nodeType":"ExpressionStatement","src":"8866:88:15"}]},"id":2862,"nodeType":"IfStatement","src":"8609:357:15","trueBody":{"id":2833,"nodeType":"Block","src":"8631:62:15","statements":[{"expression":{"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2827,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"8646:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2828,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"8655:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2829,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"8668:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8655:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8646:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2832,"nodeType":"ExpressionStatement","src":"8646:35:15"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2864,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"8984:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8994:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8984:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e74207174792069732030","id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8997:15:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_50327403b25acc6e0d15796c676b8320f8d9ffcece005326d31f4226e4f741bb","typeString":"literal_string \"Mint qty is 0\""},"value":"Mint qty is 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_50327403b25acc6e0d15796c676b8320f8d9ffcece005326d31f4226e4f741bb","typeString":"literal_string \"Mint qty is 0\""}],"id":2863,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8976:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2869,"nodeType":"ExpressionStatement","src":"8976:37:15"},{"expression":{"arguments":[{"id":2871,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"9032:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2872,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"9036:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2870,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"9026:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9026:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2874,"nodeType":"ExpressionStatement","src":"9026:17:15"},{"eventCall":{"arguments":[{"id":2876,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"9066:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2877,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"9070:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2875,"name":"Mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"9061:4:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9061:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2879,"nodeType":"EmitStatement","src":"9056:21:15"},{"expression":{"id":2880,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"9097:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2731,"id":2881,"nodeType":"Return","src":"9090:13:15"}]},"documentation":{"id":2720,"nodeType":"StructuredDocumentation","src":"7550:197:15","text":" @dev Mints new tokens and adds them to the specified address.\n @param to The address to which the new tokens will be minted.\n @return The amount of tokens minted."},"functionSelector":"de836ebd","id":2883,"implemented":true,"kind":"function","modifiers":[{"id":2728,"kind":"modifierInvocation","modifierName":{"id":2727,"name":"onlyPeriphery","nameLocations":["7814:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2404,"src":"7814:13:15"},"nodeType":"ModifierInvocation","src":"7814:13:15"}],"name":"mint","nameLocation":"7762:4:15","nodeType":"FunctionDefinition","parameters":{"id":2726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"to","nameLocation":"7775:2:15","nodeType":"VariableDeclaration","scope":2883,"src":"7767:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2721,"name":"address","nodeType":"ElementaryTypeName","src":"7767:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2725,"mutability":"mutable","name":"amounts","nameLocation":"7796:7:15","nodeType":"VariableDeclaration","scope":2883,"src":"7779:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2723,"name":"uint256","nodeType":"ElementaryTypeName","src":"7779:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2724,"nodeType":"ArrayTypeName","src":"7779:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7766:38:15"},"returnParameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2883,"src":"7837:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2729,"name":"uint256","nodeType":"ElementaryTypeName","src":"7837:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7836:9:15"},"scope":4022,"src":"7753:1358:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3052,"nodeType":"Block","src":"10208:1230:15","statements":[{"assignments":[2895],"declarations":[{"constant":false,"id":2895,"mutability":"mutable","name":"_BPS_FEE","nameLocation":"10227:8:15","nodeType":"VariableDeclaration","scope":3052,"src":"10219:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2894,"name":"uint256","nodeType":"ElementaryTypeName","src":"10219:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2899,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2896,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"10238:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10247:10:15","memberName":"getBPS_FEE","nodeType":"MemberAccess","referencedDeclaration":4872,"src":"10238:19:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10238:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10219:40:15"},{"assignments":[2901],"declarations":[{"constant":false,"id":2901,"mutability":"mutable","name":"periphery","nameLocation":"10278:9:15","nodeType":"VariableDeclaration","scope":3052,"src":"10270:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2900,"name":"address","nodeType":"ElementaryTypeName","src":"10270:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2905,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2902,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"10290:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10299:22:15","memberName":"getBaluniPoolPeriphery","nodeType":"MemberAccess","referencedDeclaration":4832,"src":"10290:31:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10290:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10270:53:15"},{"assignments":[2907],"declarations":[{"constant":false,"id":2907,"mutability":"mutable","name":"share","nameLocation":"10344:5:15","nodeType":"VariableDeclaration","scope":3052,"src":"10336:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2906,"name":"uint256","nodeType":"ElementaryTypeName","src":"10336:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2914,"initialValue":{"arguments":[{"arguments":[{"id":2911,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10370:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}],"id":2910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10362:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2909,"name":"address","nodeType":"ElementaryTypeName","src":"10362:7:15","typeDescriptions":{}}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10362:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2908,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"10352:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10352:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10336:40:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2916,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"10395:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10403:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10395:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5368617265206d7573742062652067726561746572207468616e2030","id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10406:30:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_37b2136db8906a0fa9dcfb36fa22f3e5724d70ae1dfd30e29853723b16bc684b","typeString":"literal_string \"Share must be greater than 0\""},"value":"Share must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_37b2136db8906a0fa9dcfb36fa22f3e5724d70ae1dfd30e29853723b16bc684b","typeString":"literal_string \"Share must be greater than 0\""}],"id":2915,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10387:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10387:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2921,"nodeType":"ExpressionStatement","src":"10387:50:15"},{"assignments":[2923],"declarations":[{"constant":false,"id":2923,"mutability":"mutable","name":"totalSupply","nameLocation":"10458:11:15","nodeType":"VariableDeclaration","scope":3052,"src":"10450:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2922,"name":"uint256","nodeType":"ElementaryTypeName","src":"10450:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2926,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2924,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"10472:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10472:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10450:35:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2928,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"10504:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10518:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10504:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206c6971756964697479","id":2931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10521:14:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31","typeString":"literal_string \"No liquidity\""},"value":"No liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31","typeString":"literal_string \"No liquidity\""}],"id":2927,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10496:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10496:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2933,"nodeType":"ExpressionStatement","src":"10496:40:15"},{"assignments":[2938],"declarations":[{"constant":false,"id":2938,"mutability":"mutable","name":"amounts","nameLocation":"10566:7:15","nodeType":"VariableDeclaration","scope":3052,"src":"10549:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2936,"name":"uint256","nodeType":"ElementaryTypeName","src":"10549:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2937,"nodeType":"ArrayTypeName","src":"10549:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2945,"initialValue":{"arguments":[{"expression":{"id":2942,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"10590:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10601:6:15","memberName":"length","nodeType":"MemberAccess","src":"10590:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10576:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2939,"name":"uint256","nodeType":"ElementaryTypeName","src":"10580:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2940,"nodeType":"ArrayTypeName","src":"10580:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10576:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10549:59:15"},{"assignments":[2947],"declarations":[{"constant":false,"id":2947,"mutability":"mutable","name":"fee","nameLocation":"10627:3:15","nodeType":"VariableDeclaration","scope":3052,"src":"10619:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2946,"name":"uint256","nodeType":"ElementaryTypeName","src":"10619:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2954,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2948,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"10634:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2949,"name":"_BPS_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"10642:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10634:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2951,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10633:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10654:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"10633:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10619:40:15"},{"assignments":[2956],"declarations":[{"constant":false,"id":2956,"mutability":"mutable","name":"shareAfterFee","nameLocation":"10678:13:15","nodeType":"VariableDeclaration","scope":3052,"src":"10670:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2955,"name":"uint256","nodeType":"ElementaryTypeName","src":"10670:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2960,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2957,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"10694:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2958,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"10702:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10694:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10670:35:15"},{"body":{"id":2999,"nodeType":"Block","src":"10766:256:15","statements":[{"assignments":[2973],"declarations":[{"constant":false,"id":2973,"mutability":"mutable","name":"assetBalance","nameLocation":"10789:12:15","nodeType":"VariableDeclaration","scope":2999,"src":"10781:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2972,"name":"uint256","nodeType":"ElementaryTypeName","src":"10781:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2987,"initialValue":{"arguments":[{"arguments":[{"id":2980,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10880:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}],"id":2979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2978,"name":"address","nodeType":"ElementaryTypeName","src":"10872:7:15","typeDescriptions":{}}},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":2982,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"10904:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2984,"indexExpression":{"id":2983,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"10915:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10904:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2249_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":2985,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10918:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2246,"src":"10904:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2975,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"10827:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2974,"name":"IBaluniV1PoolPeriphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"10804:22:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolPeriphery_$4639_$","typeString":"type(contract IBaluniV1PoolPeriphery)"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10804:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolPeriphery_$4639","typeString":"contract IBaluniV1PoolPeriphery"}},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10838:15:15","memberName":"getAssetReserve","nodeType":"MemberAccess","referencedDeclaration":4638,"src":"10804:49:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10804:134:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10781:157:15"},{"expression":{"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2988,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"10953:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2990,"indexExpression":{"id":2989,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"10961:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10953:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2991,"name":"assetBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"10967:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2992,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"10982:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10967:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2994,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10966:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2995,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"10999:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10966:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10953:57:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2998,"nodeType":"ExpressionStatement","src":"10953:57:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2965,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"10738:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2966,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"10742:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10753:6:15","memberName":"length","nodeType":"MemberAccess","src":"10742:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10738:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3000,"initializationExpression":{"assignments":[2962],"declarations":[{"constant":false,"id":2962,"mutability":"mutable","name":"i","nameLocation":"10731:1:15","nodeType":"VariableDeclaration","scope":3000,"src":"10723:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2961,"name":"uint256","nodeType":"ElementaryTypeName","src":"10723:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2964,"initialValue":{"hexValue":"30","id":2963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10735:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10723:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10761:3:15","subExpression":{"id":2969,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"10761:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2971,"nodeType":"ExpressionStatement","src":"10761:3:15"},"nodeType":"ForStatement","src":"10718:304:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3005,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11060:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}],"id":3004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11052:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3003,"name":"address","nodeType":"ElementaryTypeName","src":"11052:7:15","typeDescriptions":{}}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3002,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"11042:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11042:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3008,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"11070:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11042:41:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742042414c554e49206c6971756964697479","id":3010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11085:31:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc2f8692ca59eb8838d740ab96a08e7dab54c967cc56eb0a9b640ce78eb1103e","typeString":"literal_string \"Insufficient BALUNI liquidity\""},"value":"Insufficient BALUNI liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc2f8692ca59eb8838d740ab96a08e7dab54c967cc56eb0a9b640ce78eb1103e","typeString":"literal_string \"Insufficient BALUNI liquidity\""}],"id":3001,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11034:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11034:83:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3012,"nodeType":"ExpressionStatement","src":"11034:83:15"},{"assignments":[3014],"declarations":[{"constant":false,"id":3014,"mutability":"mutable","name":"treasury","nameLocation":"11138:8:15","nodeType":"VariableDeclaration","scope":3052,"src":"11130:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3013,"name":"address","nodeType":"ElementaryTypeName","src":"11130:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3018,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3015,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"11149:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11158:11:15","memberName":"getTreasury","nodeType":"MemberAccess","referencedDeclaration":4887,"src":"11149:20:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11149:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11130:41:15"},{"assignments":[3020],"declarations":[{"constant":false,"id":3020,"mutability":"mutable","name":"feeTransferSuccess","nameLocation":"11187:18:15","nodeType":"VariableDeclaration","scope":3052,"src":"11182:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3019,"name":"bool","nodeType":"ElementaryTypeName","src":"11182:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3031,"initialValue":{"arguments":[{"id":3028,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"11239:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3029,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"11249:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":3024,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11223:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}],"id":3023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11215:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3022,"name":"address","nodeType":"ElementaryTypeName","src":"11215:7:15","typeDescriptions":{}}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11215:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3021,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"11208:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11208:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11230:8:15","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"11208:30:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11208:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"11182:71:15"},{"expression":{"arguments":[{"id":3033,"name":"feeTransferSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"11272:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466565207472616e73666572206661696c6564","id":3034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11292:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""},"value":"Fee transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""}],"id":3032,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11264:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3036,"nodeType":"ExpressionStatement","src":"11264:50:15"},{"expression":{"arguments":[{"arguments":[{"id":3040,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11341:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}],"id":3039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11333:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3038,"name":"address","nodeType":"ElementaryTypeName","src":"11333:7:15","typeDescriptions":{}}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11333:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3042,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"11348:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3037,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"11327:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11327:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3044,"nodeType":"ExpressionStatement","src":"11327:35:15"},{"eventCall":{"arguments":[{"id":3046,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"11385:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3047,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"11389:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3045,"name":"Burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"11380:4:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11380:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3049,"nodeType":"EmitStatement","src":"11375:28:15"},{"expression":{"id":3050,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"11423:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2893,"id":3051,"nodeType":"Return","src":"11416:14:15"}]},"documentation":{"id":2884,"nodeType":"StructuredDocumentation","src":"9119:1007:15","text":" @dev Burns the pool tokens and transfers the underlying assets to the specified address.\n @param to The address to transfer the underlying assets to.\n @notice This function can only be called by the periphery contract.\n @notice The pool tokens must have a balance greater than 0.\n @notice The total supply of pool tokens must be greater than 0.\n @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\n @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\n @notice The function checks if the pool has sufficient liquidity before performing any transfers.\n @notice If any transfer fails, the function reverts the entire operation.\n @notice After the transfers, the function updates the reserves of the pool.\n @notice Emits a `Burn` event with the address and share of pool tokens burned."},"functionSelector":"89afcb44","id":3053,"implemented":true,"kind":"function","modifiers":[{"id":2889,"kind":"modifierInvocation","modifierName":{"id":2888,"name":"onlyPeriphery","nameLocations":["10167:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2404,"src":"10167:13:15"},"nodeType":"ModifierInvocation","src":"10167:13:15"}],"name":"burn","nameLocation":"10141:4:15","nodeType":"FunctionDefinition","parameters":{"id":2887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2886,"mutability":"mutable","name":"to","nameLocation":"10154:2:15","nodeType":"VariableDeclaration","scope":3053,"src":"10146:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2885,"name":"address","nodeType":"ElementaryTypeName","src":"10146:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10145:12:15"},"returnParameters":{"id":2893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3053,"src":"10190:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2890,"name":"uint256","nodeType":"ElementaryTypeName","src":"10190:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2891,"nodeType":"ArrayTypeName","src":"10190:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10189:18:15"},"scope":4022,"src":"10132:1306:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3097,"nodeType":"Block","src":"11941:285:15","statements":[{"assignments":[3067],"declarations":[{"constant":false,"id":3067,"mutability":"mutable","name":"baluniOracle","nameLocation":"11968:12:15","nodeType":"VariableDeclaration","scope":3097,"src":"11952:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$4519","typeString":"contract IBaluniV1Oracle"},"typeName":{"id":3066,"nodeType":"UserDefinedTypeName","pathNode":{"id":3065,"name":"IBaluniV1Oracle","nameLocations":["11952:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":4519,"src":"11952:15:15"},"referencedDeclaration":4519,"src":"11952:15:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$4519","typeString":"contract IBaluniV1Oracle"}},"visibility":"internal"}],"id":3073,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3069,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"11999:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12008:15:15","memberName":"getBaluniOracle","nodeType":"MemberAccess","referencedDeclaration":4822,"src":"11999:24:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11999:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3068,"name":"IBaluniV1Oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"11983:15:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Oracle_$4519_$","typeString":"type(contract IBaluniV1Oracle)"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11983:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$4519","typeString":"contract IBaluniV1Oracle"}},"nodeType":"VariableDeclarationStatement","src":"11952:74:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3075,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"12045:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12054:15:15","memberName":"getBaluniOracle","nodeType":"MemberAccess","referencedDeclaration":4822,"src":"12045:24:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12045:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12083:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12075:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3078,"name":"address","nodeType":"ElementaryTypeName","src":"12075:7:15","typeDescriptions":{}}},"id":3081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12075:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12045:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f7261636c652061646472657373","id":3083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12087:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3","typeString":"literal_string \"Invalid oracle address\""},"value":"Invalid oracle address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3","typeString":"literal_string \"Invalid oracle address\""}],"id":3074,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12037:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12037:75:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3085,"nodeType":"ExpressionStatement","src":"12037:75:15"},{"assignments":[3087],"declarations":[{"constant":false,"id":3087,"mutability":"mutable","name":"amountOut","nameLocation":"12131:9:15","nodeType":"VariableDeclaration","scope":3097,"src":"12123:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3086,"name":"uint256","nodeType":"ElementaryTypeName","src":"12123:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3094,"initialValue":{"arguments":[{"id":3090,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"12164:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3091,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"12175:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3092,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"12184:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3088,"name":"baluniOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"12143:12:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$4519","typeString":"contract IBaluniV1Oracle"}},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12156:7:15","memberName":"convert","nodeType":"MemberAccess","referencedDeclaration":4507,"src":"12143:20:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12143:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12123:68:15"},{"expression":{"id":3095,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"12209:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3064,"id":3096,"nodeType":"Return","src":"12202:16:15"}]},"documentation":{"id":3054,"nodeType":"StructuredDocumentation","src":"11446:385:15","text":" @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\n @param fromToken The address of the token being swapped from.\n @param toToken The address of the token being swapped to.\n @param amount The amount of `fromToken` being swapped.\n @return The amount of `toToken` that will be received."},"functionSelector":"4aa06652","id":3098,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"11846:12:15","nodeType":"FunctionDefinition","parameters":{"id":3061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3056,"mutability":"mutable","name":"fromToken","nameLocation":"11867:9:15","nodeType":"VariableDeclaration","scope":3098,"src":"11859:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3055,"name":"address","nodeType":"ElementaryTypeName","src":"11859:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3058,"mutability":"mutable","name":"toToken","nameLocation":"11886:7:15","nodeType":"VariableDeclaration","scope":3098,"src":"11878:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3057,"name":"address","nodeType":"ElementaryTypeName","src":"11878:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3060,"mutability":"mutable","name":"amount","nameLocation":"11903:6:15","nodeType":"VariableDeclaration","scope":3098,"src":"11895:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"11895:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11858:52:15"},"returnParameters":{"id":3064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3098,"src":"11932:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3062,"name":"uint256","nodeType":"ElementaryTypeName","src":"11932:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11931:9:15"},"scope":4022,"src":"11837:389:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3119,"nodeType":"Block","src":"12449:116:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3111,"name":"isRebalanceNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"12468:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12468:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526562616c616e6365206e6f74206e6565646564","id":3113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12489:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""},"value":"Rebalance not needed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""}],"id":3110,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12460:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12460:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3115,"nodeType":"ExpressionStatement","src":"12460:52:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3116,"name":"_performRebalanceIfNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"12530:25:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () returns (uint256[] memory,uint256[] memory)"}},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12530:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"functionReturnParameters":3109,"id":3118,"nodeType":"Return","src":"12523:34:15"}]},"documentation":{"id":3099,"nodeType":"StructuredDocumentation","src":"12234:44:15","text":" @dev Performs rebalance"},"functionSelector":"f47b45e8","id":3120,"implemented":true,"kind":"function","modifiers":[{"id":3102,"kind":"modifierInvocation","modifierName":{"id":3101,"name":"onlyPeriphery","nameLocations":["12347:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2404,"src":"12347:13:15"},"nodeType":"ModifierInvocation","src":"12347:13:15"}],"name":"performRebalanceIfNeeded","nameLocation":"12293:24:15","nodeType":"FunctionDefinition","parameters":{"id":3100,"nodeType":"ParameterList","parameters":[],"src":"12317:2:15"},"returnParameters":{"id":3109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3105,"mutability":"mutable","name":"amountsToAdd","nameLocation":"12396:12:15","nodeType":"VariableDeclaration","scope":3120,"src":"12379:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3103,"name":"uint256","nodeType":"ElementaryTypeName","src":"12379:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3104,"nodeType":"ArrayTypeName","src":"12379:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3108,"mutability":"mutable","name":"amountsToRemove","nameLocation":"12427:15:15","nodeType":"VariableDeclaration","scope":3120,"src":"12410:32:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3106,"name":"uint256","nodeType":"ElementaryTypeName","src":"12410:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3107,"nodeType":"ArrayTypeName","src":"12410:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12378:65:15"},"scope":4022,"src":"12284:281:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3227,"nodeType":"Block","src":"12950:764:15","statements":[{"assignments":[3131,3134],"declarations":[{"constant":false,"id":3131,"mutability":"mutable","name":"totVal","nameLocation":"12970:6:15","nodeType":"VariableDeclaration","scope":3227,"src":"12962:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3130,"name":"uint256","nodeType":"ElementaryTypeName","src":"12962:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3134,"mutability":"mutable","name":"valuations","nameLocation":"12995:10:15","nodeType":"VariableDeclaration","scope":3227,"src":"12978:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3132,"name":"uint256","nodeType":"ElementaryTypeName","src":"12978:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3133,"nodeType":"ArrayTypeName","src":"12978:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3137,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3135,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"13009:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13009:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12961:72:15"},{"assignments":[3139],"declarations":[{"constant":false,"id":3139,"mutability":"mutable","name":"numAssets","nameLocation":"13052:9:15","nodeType":"VariableDeclaration","scope":3227,"src":"13044:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"13044:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3142,"initialValue":{"expression":{"id":3140,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"13064:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13075:6:15","memberName":"length","nodeType":"MemberAccess","src":"13064:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13044:37:15"},{"expression":{"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3143,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"13094:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3147,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"13118:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13107:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":3144,"name":"bool","nodeType":"ElementaryTypeName","src":"13111:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3145,"nodeType":"ArrayTypeName","src":"13111:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13107:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"src":"13094:34:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3150,"nodeType":"ExpressionStatement","src":"13094:34:15"},{"expression":{"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3151,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"13139:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3155,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"13166:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13152:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3152,"name":"uint256","nodeType":"ElementaryTypeName","src":"13156:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3153,"nodeType":"ArrayTypeName","src":"13156:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13152:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"13139:37:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3158,"nodeType":"ExpressionStatement","src":"13139:37:15"},{"body":{"id":3221,"nodeType":"Block","src":"13229:434:15","statements":[{"assignments":[3170],"declarations":[{"constant":false,"id":3170,"mutability":"mutable","name":"currentWeight","nameLocation":"13252:13:15","nodeType":"VariableDeclaration","scope":3221,"src":"13244:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3169,"name":"uint256","nodeType":"ElementaryTypeName","src":"13244:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3179,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3171,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"13269:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3173,"indexExpression":{"id":3172,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"13280:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13269:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130303030","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13285:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"13269:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3176,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13268:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3177,"name":"totVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"13294:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13268:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13244:56:15"},{"assignments":[3181],"declarations":[{"constant":false,"id":3181,"mutability":"mutable","name":"targetWeight","nameLocation":"13323:12:15","nodeType":"VariableDeclaration","scope":3221,"src":"13315:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3180,"name":"uint256","nodeType":"ElementaryTypeName","src":"13315:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3186,"initialValue":{"expression":{"baseExpression":{"id":3182,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"13338:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3184,"indexExpression":{"id":3183,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"13349:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13338:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2249_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13352:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2248,"src":"13338:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13315:43:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3187,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"13379:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3188,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"13395:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13379:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3219,"nodeType":"Block","src":"13533:119:15","statements":[{"expression":{"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3205,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"13552:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3207,"indexExpression":{"id":3206,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"13563:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13552:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3208,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"13568:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3209,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"13583:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13568:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13552:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3212,"nodeType":"ExpressionStatement","src":"13552:44:15"},{"expression":{"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3213,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"13615:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3215,"indexExpression":{"id":3214,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"13626:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13615:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13631:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"13615:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3218,"nodeType":"ExpressionStatement","src":"13615:21:15"}]},"id":3220,"nodeType":"IfStatement","src":"13375:277:15","trueBody":{"id":3204,"nodeType":"Block","src":"13409:118:15","statements":[{"expression":{"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3190,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"13428:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3192,"indexExpression":{"id":3191,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"13439:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13428:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3193,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"13444:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3194,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"13460:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13444:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13428:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3197,"nodeType":"ExpressionStatement","src":"13428:44:15"},{"expression":{"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3198,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"13491:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3200,"indexExpression":{"id":3199,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"13502:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13491:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13507:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13491:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3203,"nodeType":"ExpressionStatement","src":"13491:20:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3163,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"13209:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3164,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"13213:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13209:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3222,"initializationExpression":{"assignments":[3160],"declarations":[{"constant":false,"id":3160,"mutability":"mutable","name":"i","nameLocation":"13202:1:15","nodeType":"VariableDeclaration","scope":3222,"src":"13194:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3159,"name":"uint256","nodeType":"ElementaryTypeName","src":"13194:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3162,"initialValue":{"hexValue":"30","id":3161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13206:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13194:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13224:3:15","subExpression":{"id":3166,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"13224:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3168,"nodeType":"ExpressionStatement","src":"13224:3:15"},"nodeType":"ForStatement","src":"13189:474:15"},{"expression":{"components":[{"id":3223,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"13683:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":3224,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"13695:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3225,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13682:24:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(bool[] memory,uint256[] memory)"}},"functionReturnParameters":3129,"id":3226,"nodeType":"Return","src":"13675:31:15"}]},"documentation":{"id":3121,"nodeType":"StructuredDocumentation","src":"12573:271:15","text":" @dev Returns the deviation between the current weights and target weights of the assets in the pool.\n @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight."},"functionSelector":"89ab3532","id":3228,"implemented":true,"kind":"function","modifiers":[],"name":"getDeviation","nameLocation":"12859:12:15","nodeType":"FunctionDefinition","parameters":{"id":3122,"nodeType":"ParameterList","parameters":[],"src":"12871:2:15"},"returnParameters":{"id":3129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3125,"mutability":"mutable","name":"directions","nameLocation":"12909:10:15","nodeType":"VariableDeclaration","scope":3228,"src":"12895:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3123,"name":"bool","nodeType":"ElementaryTypeName","src":"12895:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3124,"nodeType":"ArrayTypeName","src":"12895:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3128,"mutability":"mutable","name":"deviations","nameLocation":"12938:10:15","nodeType":"VariableDeclaration","scope":3228,"src":"12921:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3126,"name":"uint256","nodeType":"ElementaryTypeName","src":"12921:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3127,"nodeType":"ArrayTypeName","src":"12921:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12894:55:15"},"scope":4022,"src":"12850:864:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3256,"nodeType":"Block","src":"13978:199:15","statements":[{"assignments":[null,3240],"declarations":[null,{"constant":false,"id":3240,"mutability":"mutable","name":"usdValuations","nameLocation":"14009:13:15","nodeType":"VariableDeclaration","scope":3256,"src":"13992:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3238,"name":"uint256","nodeType":"ElementaryTypeName","src":"13992:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3239,"nodeType":"ArrayTypeName","src":"13992:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3243,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3241,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"14026:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14026:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"13989:61:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3245,"name":"assetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"14069:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3246,"name":"usdValuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"14082:13:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14096:6:15","memberName":"length","nodeType":"MemberAccess","src":"14082:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14069:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420617373657420696e646578","id":3249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14104:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b105b0b4a7ff5c11f41135d6d4600fd47da6168663f6cb1810745b08d83918","typeString":"literal_string \"Invalid asset index\""},"value":"Invalid asset index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b105b0b4a7ff5c11f41135d6d4600fd47da6168663f6cb1810745b08d83918","typeString":"literal_string \"Invalid asset index\""}],"id":3244,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14061:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14061:65:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3251,"nodeType":"ExpressionStatement","src":"14061:65:15"},{"expression":{"baseExpression":{"id":3252,"name":"usdValuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"14144:13:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3254,"indexExpression":{"id":3253,"name":"assetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"14158:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14144:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3235,"id":3255,"nodeType":"Return","src":"14137:32:15"}]},"documentation":{"id":3229,"nodeType":"StructuredDocumentation","src":"13722:174:15","text":" @dev Returns the liquidity of a specific asset in the pool.\n @param assetIndex The index of the asset.\n @return The liquidity of the asset."},"functionSelector":"cf8fa764","id":3257,"implemented":true,"kind":"function","modifiers":[],"name":"assetLiquidity","nameLocation":"13911:14:15","nodeType":"FunctionDefinition","parameters":{"id":3232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3231,"mutability":"mutable","name":"assetIndex","nameLocation":"13934:10:15","nodeType":"VariableDeclaration","scope":3257,"src":"13926:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3230,"name":"uint256","nodeType":"ElementaryTypeName","src":"13926:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13925:20:15"},"returnParameters":{"id":3235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3257,"src":"13969:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3233,"name":"uint256","nodeType":"ElementaryTypeName","src":"13969:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13968:9:15"},"scope":4022,"src":"13902:275:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3277,"nodeType":"Block","src":"14551:108:15","statements":[{"expression":{"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3266,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"14563:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3267,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"14573:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3268,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"14562:22:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3269,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"14587:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14587:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"src":"14562:49:15","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3272,"nodeType":"ExpressionStatement","src":"14562:49:15"},{"expression":{"components":[{"id":3273,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"14630:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3274,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"14640:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3275,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14629:22:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"functionReturnParameters":3265,"id":3276,"nodeType":"Return","src":"14622:29:15"}]},"documentation":{"id":3258,"nodeType":"StructuredDocumentation","src":"14185:257:15","text":" @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\n @return totalVal The total valuation of the pool.\n @return valuations An array of individual valuations."},"functionSelector":"36bf6e39","id":3278,"implemented":true,"kind":"function","modifiers":[],"name":"computeTotalValuation","nameLocation":"14457:21:15","nodeType":"FunctionDefinition","parameters":{"id":3259,"nodeType":"ParameterList","parameters":[],"src":"14478:2:15"},"returnParameters":{"id":3265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"totalVal","nameLocation":"14512:8:15","nodeType":"VariableDeclaration","scope":3278,"src":"14504:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3260,"name":"uint256","nodeType":"ElementaryTypeName","src":"14504:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3264,"mutability":"mutable","name":"valuations","nameLocation":"14539:10:15","nodeType":"VariableDeclaration","scope":3278,"src":"14522:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"14522:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3263,"nodeType":"ArrayTypeName","src":"14522:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14503:47:15"},"scope":4022,"src":"14448:211:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3291,"nodeType":"Block","src":"14841:92:15","statements":[{"assignments":[3285,null],"declarations":[{"constant":false,"id":3285,"mutability":"mutable","name":"totalVal","nameLocation":"14861:8:15","nodeType":"VariableDeclaration","scope":3291,"src":"14853:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3284,"name":"uint256","nodeType":"ElementaryTypeName","src":"14853:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":3288,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3286,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"14875:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14875:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"14852:47:15"},{"expression":{"id":3289,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"14917:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3283,"id":3290,"nodeType":"Return","src":"14910:15:15"}]},"documentation":{"id":3279,"nodeType":"StructuredDocumentation","src":"14667:115:15","text":" @dev Returns the total liquidity of the pool.\n @return The total liquidity of the pool."},"functionSelector":"1a686502","id":3292,"implemented":true,"kind":"function","modifiers":[],"name":"liquidity","nameLocation":"14797:9:15","nodeType":"FunctionDefinition","parameters":{"id":3280,"nodeType":"ParameterList","parameters":[],"src":"14806:2:15"},"returnParameters":{"id":3283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3292,"src":"14832:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3281,"name":"uint256","nodeType":"ElementaryTypeName","src":"14832:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14831:9:15"},"scope":4022,"src":"14788:145:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3343,"nodeType":"Block","src":"15105:361:15","statements":[{"assignments":[3299],"declarations":[{"constant":false,"id":3299,"mutability":"mutable","name":"baseDecimal","nameLocation":"15124:11:15","nodeType":"VariableDeclaration","scope":3343,"src":"15116:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3298,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3305,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3301,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"15153:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3300,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"15138:14:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1755_$","typeString":"type(contract IERC20Metadata)"}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15138:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1755","typeString":"contract IERC20Metadata"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15164:8:15","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1754,"src":"15138:34:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15138:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"15116:58:15"},{"assignments":[3307],"declarations":[{"constant":false,"id":3307,"mutability":"mutable","name":"factor","nameLocation":"15193:6:15","nodeType":"VariableDeclaration","scope":3343,"src":"15185:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3306,"name":"uint256","nodeType":"ElementaryTypeName","src":"15185:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3314,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15202:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3138","id":3309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15209:2:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3310,"name":"baseDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"15214:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15209:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3312,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15208:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15202:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15185:41:15"},{"assignments":[3316,null],"declarations":[{"constant":false,"id":3316,"mutability":"mutable","name":"totalVal","nameLocation":"15246:8:15","nodeType":"VariableDeclaration","scope":3343,"src":"15238:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3315,"name":"uint256","nodeType":"ElementaryTypeName","src":"15238:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":3319,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3317,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"15260:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15260:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"15237:47:15"},{"assignments":[3321],"declarations":[{"constant":false,"id":3321,"mutability":"mutable","name":"totalSupply","nameLocation":"15303:11:15","nodeType":"VariableDeclaration","scope":3343,"src":"15295:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3320,"name":"uint256","nodeType":"ElementaryTypeName","src":"15295:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3324,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3322,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"15317:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15317:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15295:35:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3325,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"15345:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15360:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15345:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3331,"nodeType":"IfStatement","src":"15341:57:15","trueBody":{"id":3330,"nodeType":"Block","src":"15363:35:15","statements":[{"expression":{"hexValue":"30","id":3328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15385:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3297,"id":3329,"nodeType":"Return","src":"15378:8:15"}]}},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3332,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"15418:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3333,"name":"factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"15429:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15418:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3335,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15417:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3336,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"15439:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15417:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3338,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15416:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3339,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"15454:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15416:41:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3341,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15415:43:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3297,"id":3342,"nodeType":"Return","src":"15408:50:15"}]},"documentation":{"id":3293,"nodeType":"StructuredDocumentation","src":"14941:105:15","text":" @dev Returns the unit price of the pool.\n @return The unit price of the pool."},"functionSelector":"e73faa2d","id":3344,"implemented":true,"kind":"function","modifiers":[],"name":"unitPrice","nameLocation":"15061:9:15","nodeType":"FunctionDefinition","parameters":{"id":3294,"nodeType":"ParameterList","parameters":[],"src":"15070:2:15"},"returnParameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3344,"src":"15096:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3295,"name":"uint256","nodeType":"ElementaryTypeName","src":"15096:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15095:9:15"},"scope":4022,"src":"15052:414:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3367,"nodeType":"Block","src":"15662:150:15","statements":[{"assignments":[3352],"declarations":[{"constant":false,"id":3352,"mutability":"mutable","name":"periphery","nameLocation":"15681:9:15","nodeType":"VariableDeclaration","scope":3367,"src":"15673:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3351,"name":"address","nodeType":"ElementaryTypeName","src":"15673:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3356,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3353,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"15693:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15702:22:15","memberName":"getBaluniPoolPeriphery","nodeType":"MemberAccess","referencedDeclaration":4832,"src":"15693:31:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15693:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15673:53:15"},{"expression":{"arguments":[{"arguments":[{"id":3363,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15798:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}],"id":3362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15790:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3361,"name":"address","nodeType":"ElementaryTypeName","src":"15790:7:15","typeDescriptions":{}}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15790:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3358,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"15767:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3357,"name":"IBaluniV1PoolPeriphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"15744:22:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolPeriphery_$4639_$","typeString":"type(contract IBaluniV1PoolPeriphery)"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15744:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolPeriphery_$4639","typeString":"contract IBaluniV1PoolPeriphery"}},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15778:11:15","memberName":"getReserves","nodeType":"MemberAccess","referencedDeclaration":4628,"src":"15744:45:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address) view external returns (uint256[] memory)"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15744:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3350,"id":3366,"nodeType":"Return","src":"15737:67:15"}]},"documentation":{"id":3345,"nodeType":"StructuredDocumentation","src":"15474:120:15","text":" @dev Returns an array of reserves for each asset in the pool.\n @return An array of reserves."},"functionSelector":"0902f1ac","id":3368,"implemented":true,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"15609:11:15","nodeType":"FunctionDefinition","parameters":{"id":3346,"nodeType":"ParameterList","parameters":[],"src":"15620:2:15"},"returnParameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3368,"src":"15644:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3347,"name":"uint256","nodeType":"ElementaryTypeName","src":"15644:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3348,"nodeType":"ArrayTypeName","src":"15644:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15643:18:15"},"scope":4022,"src":"15600:212:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3393,"nodeType":"Block","src":"16068:161:15","statements":[{"assignments":[3377],"declarations":[{"constant":false,"id":3377,"mutability":"mutable","name":"periphery","nameLocation":"16087:9:15","nodeType":"VariableDeclaration","scope":3393,"src":"16079:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3376,"name":"address","nodeType":"ElementaryTypeName","src":"16079:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3381,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3378,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"16099:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16108:22:15","memberName":"getBaluniPoolPeriphery","nodeType":"MemberAccess","referencedDeclaration":4832,"src":"16099:31:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16099:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16079:53:15"},{"expression":{"arguments":[{"arguments":[{"id":3388,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16208:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}],"id":3387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16200:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3386,"name":"address","nodeType":"ElementaryTypeName","src":"16200:7:15","typeDescriptions":{}}},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16200:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3390,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"16215:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3383,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"16173:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3382,"name":"IBaluniV1PoolPeriphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"16150:22:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolPeriphery_$4639_$","typeString":"type(contract IBaluniV1PoolPeriphery)"}},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16150:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolPeriphery_$4639","typeString":"contract IBaluniV1PoolPeriphery"}},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16184:15:15","memberName":"getAssetReserve","nodeType":"MemberAccess","referencedDeclaration":4638,"src":"16150:49:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16150:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3375,"id":3392,"nodeType":"Return","src":"16143:78:15"}]},"documentation":{"id":3369,"nodeType":"StructuredDocumentation","src":"15820:172:15","text":" @dev Returns the reserve amount of the specified asset.\n @param asset The address of the asset.\n @return The reserve amount of the asset."},"functionSelector":"b2b55d70","id":3394,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetReserve","nameLocation":"16007:15:15","nodeType":"FunctionDefinition","parameters":{"id":3372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3371,"mutability":"mutable","name":"asset","nameLocation":"16031:5:15","nodeType":"VariableDeclaration","scope":3394,"src":"16023:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3370,"name":"address","nodeType":"ElementaryTypeName","src":"16023:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16022:15:15"},"returnParameters":{"id":3375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3394,"src":"16059:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3373,"name":"uint256","nodeType":"ElementaryTypeName","src":"16059:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16058:9:15"},"scope":4022,"src":"15998:231:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3437,"nodeType":"Block","src":"16435:217:15","statements":[{"assignments":[3405],"declarations":[{"constant":false,"id":3405,"mutability":"mutable","name":"assets","nameLocation":"16463:6:15","nodeType":"VariableDeclaration","scope":3437,"src":"16446:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3403,"name":"address","nodeType":"ElementaryTypeName","src":"16446:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3404,"nodeType":"ArrayTypeName","src":"16446:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3412,"initialValue":{"arguments":[{"expression":{"id":3409,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"16486:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16497:6:15","memberName":"length","nodeType":"MemberAccess","src":"16486:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16472:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3406,"name":"address","nodeType":"ElementaryTypeName","src":"16476:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3407,"nodeType":"ArrayTypeName","src":"16476:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16472:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"16446:58:15"},{"body":{"id":3433,"nodeType":"Block","src":"16563:58:15","statements":[{"expression":{"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3424,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"16578:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3426,"indexExpression":{"id":3425,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"16585:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16578:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3427,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"16590:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3429,"indexExpression":{"id":3428,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"16601:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16590:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2249_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16604:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2246,"src":"16590:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16578:31:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3432,"nodeType":"ExpressionStatement","src":"16578:31:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3417,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"16535:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3418,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"16539:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16550:6:15","memberName":"length","nodeType":"MemberAccess","src":"16539:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16535:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3434,"initializationExpression":{"assignments":[3414],"declarations":[{"constant":false,"id":3414,"mutability":"mutable","name":"i","nameLocation":"16528:1:15","nodeType":"VariableDeclaration","scope":3434,"src":"16520:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3413,"name":"uint256","nodeType":"ElementaryTypeName","src":"16520:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3416,"initialValue":{"hexValue":"30","id":3415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16532:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16520:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16558:3:15","subExpression":{"id":3421,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"16558:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3423,"nodeType":"ExpressionStatement","src":"16558:3:15"},"nodeType":"ForStatement","src":"16515:106:15"},{"expression":{"id":3435,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"16638:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3400,"id":3436,"nodeType":"Return","src":"16631:13:15"}]},"documentation":{"id":3395,"nodeType":"StructuredDocumentation","src":"16237:130:15","text":" @dev Retrieves the list of assets in the pool.\n @return An array of addresses representing the assets."},"functionSelector":"67e4ac2c","id":3438,"implemented":true,"kind":"function","modifiers":[],"name":"getAssets","nameLocation":"16382:9:15","nodeType":"FunctionDefinition","parameters":{"id":3396,"nodeType":"ParameterList","parameters":[],"src":"16391:2:15"},"returnParameters":{"id":3400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3438,"src":"16417:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3397,"name":"address","nodeType":"ElementaryTypeName","src":"16417:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3398,"nodeType":"ArrayTypeName","src":"16417:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"16416:18:15"},"scope":4022,"src":"16373:279:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3481,"nodeType":"Block","src":"16893:221:15","statements":[{"assignments":[3449],"declarations":[{"constant":false,"id":3449,"mutability":"mutable","name":"weights","nameLocation":"16921:7:15","nodeType":"VariableDeclaration","scope":3481,"src":"16904:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3447,"name":"uint256","nodeType":"ElementaryTypeName","src":"16904:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3448,"nodeType":"ArrayTypeName","src":"16904:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3456,"initialValue":{"arguments":[{"expression":{"id":3453,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"16945:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16956:6:15","memberName":"length","nodeType":"MemberAccess","src":"16945:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16931:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3450,"name":"uint256","nodeType":"ElementaryTypeName","src":"16935:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3451,"nodeType":"ArrayTypeName","src":"16935:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16931:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"16904:59:15"},{"body":{"id":3477,"nodeType":"Block","src":"17022:60:15","statements":[{"expression":{"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3468,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"17037:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3470,"indexExpression":{"id":3469,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"17045:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17037:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3471,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"17050:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3473,"indexExpression":{"id":3472,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"17061:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17050:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2249_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3474,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17064:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2248,"src":"17050:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17037:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3476,"nodeType":"ExpressionStatement","src":"17037:33:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3461,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"16994:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3462,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"16998:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17009:6:15","memberName":"length","nodeType":"MemberAccess","src":"16998:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16994:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3478,"initializationExpression":{"assignments":[3458],"declarations":[{"constant":false,"id":3458,"mutability":"mutable","name":"i","nameLocation":"16987:1:15","nodeType":"VariableDeclaration","scope":3478,"src":"16979:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3457,"name":"uint256","nodeType":"ElementaryTypeName","src":"16979:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3460,"initialValue":{"hexValue":"30","id":3459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16991:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16979:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17017:3:15","subExpression":{"id":3465,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"17017:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3467,"nodeType":"ExpressionStatement","src":"17017:3:15"},"nodeType":"ForStatement","src":"16974:108:15"},{"expression":{"id":3479,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"17099:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3444,"id":3480,"nodeType":"Return","src":"17092:14:15"}]},"documentation":{"id":3439,"nodeType":"StructuredDocumentation","src":"16660:164:15","text":" @dev Retrieves the list of weights associated with the assets in the pool.\n @return An array of uint256 values representing the weights."},"functionSelector":"22acb867","id":3482,"implemented":true,"kind":"function","modifiers":[],"name":"getWeights","nameLocation":"16839:10:15","nodeType":"FunctionDefinition","parameters":{"id":3440,"nodeType":"ParameterList","parameters":[],"src":"16849:2:15"},"returnParameters":{"id":3444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3482,"src":"16875:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3441,"name":"uint256","nodeType":"ElementaryTypeName","src":"16875:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3442,"nodeType":"ArrayTypeName","src":"16875:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16874:18:15"},"scope":4022,"src":"16830:284:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3574,"nodeType":"Block","src":"17463:645:15","statements":[{"assignments":[3492],"declarations":[{"constant":false,"id":3492,"mutability":"mutable","name":"numAssets","nameLocation":"17482:9:15","nodeType":"VariableDeclaration","scope":3574,"src":"17474:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3491,"name":"uint256","nodeType":"ElementaryTypeName","src":"17474:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3495,"initialValue":{"expression":{"id":3493,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"17494:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17505:6:15","memberName":"length","nodeType":"MemberAccess","src":"17494:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17474:37:15"},{"expression":{"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3496,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"17522:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3500,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"17549:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17535:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3497,"name":"uint256","nodeType":"ElementaryTypeName","src":"17539:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3498,"nodeType":"ArrayTypeName","src":"17539:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17535:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"17522:37:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3503,"nodeType":"ExpressionStatement","src":"17522:37:15"},{"body":{"id":3568,"nodeType":"Block","src":"17610:445:15","statements":[{"assignments":[3515],"declarations":[{"constant":false,"id":3515,"mutability":"mutable","name":"asset","nameLocation":"17633:5:15","nodeType":"VariableDeclaration","scope":3568,"src":"17625:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3514,"name":"address","nodeType":"ElementaryTypeName","src":"17625:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3520,"initialValue":{"expression":{"baseExpression":{"id":3516,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"17641:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3518,"indexExpression":{"id":3517,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"17652:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17641:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2249_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17655:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2246,"src":"17641:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"17625:35:15"},{"assignments":[3522],"declarations":[{"constant":false,"id":3522,"mutability":"mutable","name":"assetReserve","nameLocation":"17683:12:15","nodeType":"VariableDeclaration","scope":3568,"src":"17675:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3521,"name":"uint256","nodeType":"ElementaryTypeName","src":"17675:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3529,"initialValue":{"arguments":[{"arguments":[{"id":3526,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"17722:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17714:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3524,"name":"address","nodeType":"ElementaryTypeName","src":"17714:7:15","typeDescriptions":{}}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17714:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3523,"name":"getAssetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"17698:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17698:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17675:54:15"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3532,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"17759:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17751:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3530,"name":"address","nodeType":"ElementaryTypeName","src":"17751:7:15","typeDescriptions":{}}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17751:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3534,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"17769:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17751:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3536,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17750:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3560,"nodeType":"Block","src":"17850:148:15","statements":[{"assignments":[3545],"declarations":[{"constant":false,"id":3545,"mutability":"mutable","name":"valuation","nameLocation":"17877:9:15","nodeType":"VariableDeclaration","scope":3560,"src":"17869:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3544,"name":"uint256","nodeType":"ElementaryTypeName","src":"17869:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3553,"initialValue":{"arguments":[{"arguments":[{"id":3549,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"17917:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17909:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3547,"name":"address","nodeType":"ElementaryTypeName","src":"17909:7:15","typeDescriptions":{}}},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17909:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3551,"name":"assetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"17925:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3546,"name":"_convertTokenToBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"17889:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17889:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17869:69:15"},{"expression":{"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3554,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"17957:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3556,"indexExpression":{"id":3555,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"17968:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17957:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3557,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"17973:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17957:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3559,"nodeType":"ExpressionStatement","src":"17957:25:15"}]},"id":3561,"nodeType":"IfStatement","src":"17746:252:15","trueBody":{"id":3543,"nodeType":"Block","src":"17781:63:15","statements":[{"expression":{"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3537,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"17800:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3539,"indexExpression":{"id":3538,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"17811:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17800:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3540,"name":"assetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"17816:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17800:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3542,"nodeType":"ExpressionStatement","src":"17800:28:15"}]}},{"expression":{"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3562,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"18012:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":3563,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"18030:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3565,"indexExpression":{"id":3564,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"18041:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18030:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18012:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3567,"nodeType":"ExpressionStatement","src":"18012:31:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3508,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"17590:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3509,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"17594:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17590:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3569,"initializationExpression":{"assignments":[3505],"declarations":[{"constant":false,"id":3505,"mutability":"mutable","name":"i","nameLocation":"17583:1:15","nodeType":"VariableDeclaration","scope":3569,"src":"17575:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3504,"name":"uint256","nodeType":"ElementaryTypeName","src":"17575:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3507,"initialValue":{"hexValue":"30","id":3506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17587:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17575:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17605:3:15","subExpression":{"id":3511,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"17605:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3513,"nodeType":"ExpressionStatement","src":"17605:3:15"},"nodeType":"ForStatement","src":"17570:485:15"},{"expression":{"components":[{"id":3570,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"18073:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3571,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"18089:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3572,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18072:28:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"functionReturnParameters":3490,"id":3573,"nodeType":"Return","src":"18065:35:15"}]},"documentation":{"id":3483,"nodeType":"StructuredDocumentation","src":"17122:225:15","text":" @dev Computes the total valuation of the assets in the pool.\n @return totalValuation The total valuation of the assets.\n @return valuations An array of valuations for each asset in the pool."},"id":3575,"implemented":true,"kind":"function","modifiers":[],"name":"_computeTotalValuation","nameLocation":"17362:22:15","nodeType":"FunctionDefinition","parameters":{"id":3484,"nodeType":"ParameterList","parameters":[],"src":"17384:2:15"},"returnParameters":{"id":3490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3486,"mutability":"mutable","name":"totalValuation","nameLocation":"17418:14:15","nodeType":"VariableDeclaration","scope":3575,"src":"17410:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3485,"name":"uint256","nodeType":"ElementaryTypeName","src":"17410:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3489,"mutability":"mutable","name":"valuations","nameLocation":"17451:10:15","nodeType":"VariableDeclaration","scope":3575,"src":"17434:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3487,"name":"uint256","nodeType":"ElementaryTypeName","src":"17434:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3488,"nodeType":"ArrayTypeName","src":"17434:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"17409:53:15"},"scope":4022,"src":"17353:755:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3804,"nodeType":"Block","src":"18595:1563:15","statements":[{"assignments":[3586],"declarations":[{"constant":false,"id":3586,"mutability":"mutable","name":"periphery","nameLocation":"18614:9:15","nodeType":"VariableDeclaration","scope":3804,"src":"18606:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3585,"name":"address","nodeType":"ElementaryTypeName","src":"18606:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3590,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3587,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"18626:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18635:22:15","memberName":"getBaluniPoolPeriphery","nodeType":"MemberAccess","referencedDeclaration":4832,"src":"18626:31:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18626:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"18606:53:15"},{"assignments":[3592],"declarations":[{"constant":false,"id":3592,"mutability":"mutable","name":"rebalancer","nameLocation":"18678:10:15","nodeType":"VariableDeclaration","scope":3804,"src":"18670:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3591,"name":"address","nodeType":"ElementaryTypeName","src":"18670:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3596,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3593,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"18691:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18700:19:15","memberName":"getBaluniRebalancer","nodeType":"MemberAccess","referencedDeclaration":4842,"src":"18691:28:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18691:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"18670:51:15"},{"assignments":[3601],"declarations":[{"constant":false,"id":3601,"mutability":"mutable","name":"assets","nameLocation":"18751:6:15","nodeType":"VariableDeclaration","scope":3804,"src":"18734:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3599,"name":"address","nodeType":"ElementaryTypeName","src":"18734:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3600,"nodeType":"ArrayTypeName","src":"18734:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3608,"initialValue":{"arguments":[{"expression":{"id":3605,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"18774:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18785:6:15","memberName":"length","nodeType":"MemberAccess","src":"18774:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18760:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3602,"name":"address","nodeType":"ElementaryTypeName","src":"18764:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3603,"nodeType":"ArrayTypeName","src":"18764:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18760:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18734:58:15"},{"assignments":[3613],"declarations":[{"constant":false,"id":3613,"mutability":"mutable","name":"weights","nameLocation":"18820:7:15","nodeType":"VariableDeclaration","scope":3804,"src":"18803:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3611,"name":"uint256","nodeType":"ElementaryTypeName","src":"18803:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3612,"nodeType":"ArrayTypeName","src":"18803:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3620,"initialValue":{"arguments":[{"expression":{"id":3617,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"18844:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18855:6:15","memberName":"length","nodeType":"MemberAccess","src":"18844:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18830:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3614,"name":"uint256","nodeType":"ElementaryTypeName","src":"18834:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3615,"nodeType":"ArrayTypeName","src":"18834:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18830:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18803:59:15"},{"assignments":[3625],"declarations":[{"constant":false,"id":3625,"mutability":"mutable","name":"peripheryBalancesB4","nameLocation":"18890:19:15","nodeType":"VariableDeclaration","scope":3804,"src":"18873:36:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3623,"name":"uint256","nodeType":"ElementaryTypeName","src":"18873:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3624,"nodeType":"ArrayTypeName","src":"18873:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3632,"initialValue":{"arguments":[{"expression":{"id":3629,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"18926:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18937:6:15","memberName":"length","nodeType":"MemberAccess","src":"18926:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18912:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3626,"name":"uint256","nodeType":"ElementaryTypeName","src":"18916:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3627,"nodeType":"ArrayTypeName","src":"18916:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18912:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18873:71:15"},{"assignments":[3637],"declarations":[{"constant":false,"id":3637,"mutability":"mutable","name":"peripheryBalancesAfter","nameLocation":"18972:22:15","nodeType":"VariableDeclaration","scope":3804,"src":"18955:39:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3635,"name":"uint256","nodeType":"ElementaryTypeName","src":"18955:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3636,"nodeType":"ArrayTypeName","src":"18955:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3644,"initialValue":{"arguments":[{"expression":{"id":3641,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"19011:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19022:6:15","memberName":"length","nodeType":"MemberAccess","src":"19011:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18997:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3638,"name":"uint256","nodeType":"ElementaryTypeName","src":"19001:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3639,"nodeType":"ArrayTypeName","src":"19001:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18997:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18955:74:15"},{"assignments":[3649],"declarations":[{"constant":false,"id":3649,"mutability":"mutable","name":"amountsToAdd","nameLocation":"19057:12:15","nodeType":"VariableDeclaration","scope":3804,"src":"19040:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3647,"name":"uint256","nodeType":"ElementaryTypeName","src":"19040:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3648,"nodeType":"ArrayTypeName","src":"19040:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3656,"initialValue":{"arguments":[{"expression":{"id":3653,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"19086:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19097:6:15","memberName":"length","nodeType":"MemberAccess","src":"19086:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19072:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3650,"name":"uint256","nodeType":"ElementaryTypeName","src":"19076:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3651,"nodeType":"ArrayTypeName","src":"19076:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19072:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"19040:64:15"},{"assignments":[3661],"declarations":[{"constant":false,"id":3661,"mutability":"mutable","name":"amountsToRemove","nameLocation":"19132:15:15","nodeType":"VariableDeclaration","scope":3804,"src":"19115:32:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3659,"name":"uint256","nodeType":"ElementaryTypeName","src":"19115:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3660,"nodeType":"ArrayTypeName","src":"19115:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3668,"initialValue":{"arguments":[{"expression":{"id":3665,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"19164:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19175:6:15","memberName":"length","nodeType":"MemberAccess","src":"19164:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19150:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3662,"name":"uint256","nodeType":"ElementaryTypeName","src":"19154:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3663,"nodeType":"ArrayTypeName","src":"19154:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19150:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"19115:67:15"},{"body":{"id":3711,"nodeType":"Block","src":"19243:184:15","statements":[{"expression":{"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3680,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"19258:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3682,"indexExpression":{"id":3681,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"19265:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19258:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3683,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"19270:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3685,"indexExpression":{"id":3684,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"19281:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19270:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2249_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3686,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19284:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2246,"src":"19270:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19258:31:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3688,"nodeType":"ExpressionStatement","src":"19258:31:15"},{"expression":{"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3689,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"19304:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3691,"indexExpression":{"id":3690,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"19312:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19304:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3692,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"19317:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3694,"indexExpression":{"id":3693,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"19328:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19317:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2249_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19331:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2248,"src":"19317:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19304:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3697,"nodeType":"ExpressionStatement","src":"19304:33:15"},{"expression":{"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3698,"name":"peripheryBalancesB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"19352:19:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3700,"indexExpression":{"id":3699,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"19372:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19352:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3707,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"19405:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":3702,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"19384:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3704,"indexExpression":{"id":3703,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"19391:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19384:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3701,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"19377:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19377:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19395:9:15","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"19377:27:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19377:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19352:63:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3710,"nodeType":"ExpressionStatement","src":"19352:63:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3673,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"19215:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3674,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"19219:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19230:6:15","memberName":"length","nodeType":"MemberAccess","src":"19219:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19215:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3712,"initializationExpression":{"assignments":[3670],"declarations":[{"constant":false,"id":3670,"mutability":"mutable","name":"i","nameLocation":"19208:1:15","nodeType":"VariableDeclaration","scope":3712,"src":"19200:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3669,"name":"uint256","nodeType":"ElementaryTypeName","src":"19200:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3672,"initialValue":{"hexValue":"30","id":3671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19212:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19200:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19238:3:15","subExpression":{"id":3677,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"19238:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3679,"nodeType":"ExpressionStatement","src":"19238:3:15"},"nodeType":"ForStatement","src":"19195:232:15"},{"assignments":[3717],"declarations":[{"constant":false,"id":3717,"mutability":"mutable","name":"balances","nameLocation":"19456:8:15","nodeType":"VariableDeclaration","scope":3804,"src":"19439:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3715,"name":"uint256","nodeType":"ElementaryTypeName","src":"19439:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3716,"nodeType":"ArrayTypeName","src":"19439:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3720,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3718,"name":"getReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"19467:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19467:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"19439:41:15"},{"expression":{"arguments":[{"id":3725,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"19535:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3726,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"19545:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":3727,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"19553:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3728,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"19562:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3729,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"19571:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3730,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"19582:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3731,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"19593:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3722,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"19513:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3721,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"19493:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$4724_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19493:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$4724","typeString":"contract IBaluniV1Rebalancer"}},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19525:9:15","memberName":"rebalance","nodeType":"MemberAccess","referencedDeclaration":4691,"src":"19493:41:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256[] memory,address[] memory,uint256[] memory,uint256,address,address,address) external"}},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19493:110:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3733,"nodeType":"ExpressionStatement","src":"19493:110:15"},{"body":{"id":3792,"nodeType":"Block","src":"19664:380:15","statements":[{"expression":{"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3745,"name":"peripheryBalancesAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"19679:22:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3747,"indexExpression":{"id":3746,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"19702:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19679:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3754,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"19735:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":3749,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"19714:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3751,"indexExpression":{"id":3750,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"19721:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19714:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3748,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"19707:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19707:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19725:9:15","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"19707:27:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19707:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19679:66:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3757,"nodeType":"ExpressionStatement","src":"19679:66:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3758,"name":"peripheryBalancesAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"19766:22:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3760,"indexExpression":{"id":3759,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"19789:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19766:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"baseExpression":{"id":3761,"name":"peripheryBalancesB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"19794:19:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3763,"indexExpression":{"id":3762,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"19814:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19794:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19766:50:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3790,"nodeType":"Block","src":"19927:106:15","statements":[{"expression":{"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3778,"name":"amountsToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"19946:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3780,"indexExpression":{"id":3779,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"19962:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19946:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3781,"name":"peripheryBalancesB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"19967:19:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3783,"indexExpression":{"id":3782,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"19987:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19967:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":3784,"name":"peripheryBalancesAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"19992:22:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3786,"indexExpression":{"id":3785,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"20015:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19992:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19967:50:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19946:71:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3789,"nodeType":"ExpressionStatement","src":"19946:71:15"}]},"id":3791,"nodeType":"IfStatement","src":"19762:271:15","trueBody":{"id":3777,"nodeType":"Block","src":"19818:103:15","statements":[{"expression":{"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3765,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"19837:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3767,"indexExpression":{"id":3766,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"19850:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19837:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3768,"name":"peripheryBalancesAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"19855:22:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3770,"indexExpression":{"id":3769,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"19878:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19855:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":3771,"name":"peripheryBalancesB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"19883:19:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3773,"indexExpression":{"id":3772,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"19903:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19883:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19855:50:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19837:68:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3776,"nodeType":"ExpressionStatement","src":"19837:68:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3738,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"19636:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3739,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"19640:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19651:6:15","memberName":"length","nodeType":"MemberAccess","src":"19640:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19636:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3793,"initializationExpression":{"assignments":[3735],"declarations":[{"constant":false,"id":3735,"mutability":"mutable","name":"i","nameLocation":"19629:1:15","nodeType":"VariableDeclaration","scope":3793,"src":"19621:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3734,"name":"uint256","nodeType":"ElementaryTypeName","src":"19621:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3737,"initialValue":{"hexValue":"30","id":3736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19633:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19621:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19659:3:15","subExpression":{"id":3742,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"19659:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3744,"nodeType":"ExpressionStatement","src":"19659:3:15"},"nodeType":"ForStatement","src":"19616:428:15"},{"eventCall":{"arguments":[{"expression":{"id":3795,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20080:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20084:6:15","memberName":"sender","nodeType":"MemberAccess","src":"20080:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3797,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"20092:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3794,"name":"RebalancePerformed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"20061:18:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address[] memory)"}},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20061:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3799,"nodeType":"EmitStatement","src":"20056:43:15"},{"expression":{"components":[{"id":3800,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"20120:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3801,"name":"amountsToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"20134:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3802,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20119:31:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"functionReturnParameters":3584,"id":3803,"nodeType":"Return","src":"20112:38:15"}]},"documentation":{"id":3576,"nodeType":"StructuredDocumentation","src":"18116:382:15","text":" @dev Performs rebalance if needed.\n This function retrieves the assets and weights from the `assetInfos` array,\n and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\n It emits a `RebalancePerformed` event after the rebalance is performed.\n @notice This function should only be called internally."},"id":3805,"implemented":true,"kind":"function","modifiers":[],"name":"_performRebalanceIfNeeded","nameLocation":"18513:25:15","nodeType":"FunctionDefinition","parameters":{"id":3577,"nodeType":"ParameterList","parameters":[],"src":"18538:2:15"},"returnParameters":{"id":3584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3805,"src":"18559:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3578,"name":"uint256","nodeType":"ElementaryTypeName","src":"18559:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3579,"nodeType":"ArrayTypeName","src":"18559:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3805,"src":"18577:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3581,"name":"uint256","nodeType":"ElementaryTypeName","src":"18577:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3582,"nodeType":"ArrayTypeName","src":"18577:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"18558:36:15"},"scope":4022,"src":"18504:1654:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3835,"nodeType":"Block","src":"20535:168:15","statements":[{"body":{"id":3831,"nodeType":"Block","src":"20594:65:15","statements":[{"expression":{"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3825,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"20609:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":3826,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"20632:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3828,"indexExpression":{"id":3827,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"20645:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20632:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20609:38:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3830,"nodeType":"ExpressionStatement","src":"20609:38:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3818,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"20566:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3819,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"20570:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20581:6:15","memberName":"length","nodeType":"MemberAccess","src":"20570:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20566:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3832,"initializationExpression":{"assignments":[3815],"declarations":[{"constant":false,"id":3815,"mutability":"mutable","name":"i","nameLocation":"20559:1:15","nodeType":"VariableDeclaration","scope":3832,"src":"20551:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3814,"name":"uint256","nodeType":"ElementaryTypeName","src":"20551:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3817,"initialValue":{"hexValue":"30","id":3816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20563:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20551:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"20589:3:15","subExpression":{"id":3822,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"20589:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3824,"nodeType":"ExpressionStatement","src":"20589:3:15"},"nodeType":"ForStatement","src":"20546:113:15"},{"expression":{"id":3833,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"20676:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3813,"id":3834,"nodeType":"Return","src":"20669:26:15"}]},"documentation":{"id":3806,"nodeType":"StructuredDocumentation","src":"20166:225:15","text":" @dev Calculates the total added liquidity based on the amounts to add.\n @param amountsToAdd An array of amounts to add for each asset.\n @return totalAddedLiquidity The total added liquidity."},"id":3836,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateTotalAddedLiquidity","nameLocation":"20406:29:15","nodeType":"FunctionDefinition","parameters":{"id":3810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3809,"mutability":"mutable","name":"amountsToAdd","nameLocation":"20463:12:15","nodeType":"VariableDeclaration","scope":3836,"src":"20446:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3807,"name":"uint256","nodeType":"ElementaryTypeName","src":"20446:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3808,"nodeType":"ArrayTypeName","src":"20446:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"20435:47:15"},"returnParameters":{"id":3813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3812,"mutability":"mutable","name":"totalAddedLiquidity","nameLocation":"20514:19:15","nodeType":"VariableDeclaration","scope":3836,"src":"20506:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3811,"name":"uint256","nodeType":"ElementaryTypeName","src":"20506:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20505:29:15"},"scope":4022,"src":"20397:306:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3901,"nodeType":"Block","src":"21210:391:15","statements":[{"expression":{"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3848,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"21221:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3852,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"21250:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21261:6:15","memberName":"length","nodeType":"MemberAccess","src":"21250:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"21236:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3849,"name":"uint256","nodeType":"ElementaryTypeName","src":"21240:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3850,"nodeType":"ArrayTypeName","src":"21240:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21236:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"21221:47:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3856,"nodeType":"ExpressionStatement","src":"21221:47:15"},{"body":{"id":3897,"nodeType":"Block","src":"21327:235:15","statements":[{"assignments":[3869],"declarations":[{"constant":false,"id":3869,"mutability":"mutable","name":"targetValuation","nameLocation":"21350:15:15","nodeType":"VariableDeclaration","scope":3897,"src":"21342:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3868,"name":"uint256","nodeType":"ElementaryTypeName","src":"21342:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3879,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3870,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"21369:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"baseExpression":{"id":3871,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"21386:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3873,"indexExpression":{"id":3872,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"21397:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21386:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2249_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3874,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21400:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2248,"src":"21386:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21369:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3876,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21368:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21410:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"21368:47:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21342:73:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3880,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"21434:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3882,"indexExpression":{"id":3881,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"21445:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21434:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3883,"name":"targetValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"21450:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21434:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3896,"nodeType":"IfStatement","src":"21430:121:15","trueBody":{"id":3895,"nodeType":"Block","src":"21467:84:15","statements":[{"expression":{"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3885,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"21486:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3887,"indexExpression":{"id":3886,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"21499:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21486:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3888,"name":"targetValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"21504:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":3889,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"21522:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3891,"indexExpression":{"id":3890,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"21533:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21522:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21504:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21486:49:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3894,"nodeType":"ExpressionStatement","src":"21486:49:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3861,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"21299:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3862,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"21303:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21314:6:15","memberName":"length","nodeType":"MemberAccess","src":"21303:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21299:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3898,"initializationExpression":{"assignments":[3858],"declarations":[{"constant":false,"id":3858,"mutability":"mutable","name":"i","nameLocation":"21292:1:15","nodeType":"VariableDeclaration","scope":3898,"src":"21284:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3857,"name":"uint256","nodeType":"ElementaryTypeName","src":"21284:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3860,"initialValue":{"hexValue":"30","id":3859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21296:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"21284:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21322:3:15","subExpression":{"id":3865,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"21322:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3867,"nodeType":"ExpressionStatement","src":"21322:3:15"},"nodeType":"ForStatement","src":"21279:283:15"},{"expression":{"id":3899,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"21581:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3847,"id":3900,"nodeType":"Return","src":"21574:19:15"}]},"documentation":{"id":3837,"nodeType":"StructuredDocumentation","src":"20711:329:15","text":" @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\n @param totalValuation The total valuation of the pool.\n @param valuations An array of current valuations for each asset.\n @return amountsToAdd An array of amounts to add to each asset."},"id":3902,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateAmountsToAdd","nameLocation":"21055:22:15","nodeType":"FunctionDefinition","parameters":{"id":3843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3839,"mutability":"mutable","name":"totalValuation","nameLocation":"21096:14:15","nodeType":"VariableDeclaration","scope":3902,"src":"21088:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3838,"name":"uint256","nodeType":"ElementaryTypeName","src":"21088:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3842,"mutability":"mutable","name":"valuations","nameLocation":"21138:10:15","nodeType":"VariableDeclaration","scope":3902,"src":"21121:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3840,"name":"uint256","nodeType":"ElementaryTypeName","src":"21121:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3841,"nodeType":"ArrayTypeName","src":"21121:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"21077:78:15"},"returnParameters":{"id":3847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3846,"mutability":"mutable","name":"amountsToAdd","nameLocation":"21196:12:15","nodeType":"VariableDeclaration","scope":3902,"src":"21179:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3844,"name":"uint256","nodeType":"ElementaryTypeName","src":"21179:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3845,"nodeType":"ArrayTypeName","src":"21179:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"21178:31:15"},"scope":4022,"src":"21046:555:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3940,"nodeType":"Block","src":"21980:264:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3912,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"21995:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3914,"indexExpression":{"id":3913,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"22006:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21995:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2249_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22013:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2246,"src":"21995:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3916,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"22022:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21995:36:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3920,"nodeType":"IfStatement","src":"21991:60:15","trueBody":{"expression":{"id":3918,"name":"amountToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"22040:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3911,"id":3919,"nodeType":"Return","src":"22033:18:15"}},{"assignments":[3922],"declarations":[{"constant":false,"id":3922,"mutability":"mutable","name":"tokenAmount","nameLocation":"22070:11:15","nodeType":"VariableDeclaration","scope":3940,"src":"22062:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3921,"name":"uint256","nodeType":"ElementaryTypeName","src":"22062:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3930,"initialValue":{"arguments":[{"expression":{"baseExpression":{"id":3924,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"22104:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2249_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3926,"indexExpression":{"id":3925,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"22115:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22104:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2249_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3927,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22122:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2246,"src":"22104:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3928,"name":"amountToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"22129:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3923,"name":"_convertBaseToToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"22084:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22084:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22062:79:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3932,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"22160:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22174:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22160:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e20616d6f756e7420746f20616464","id":3935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22177:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_231381c7ce9cab5a06140be844586c7572b2dd117d8de83c9f9bda39108cd19d","typeString":"literal_string \"Invalid token amount to add\""},"value":"Invalid token amount to add"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_231381c7ce9cab5a06140be844586c7572b2dd117d8de83c9f9bda39108cd19d","typeString":"literal_string \"Invalid token amount to add\""}],"id":3931,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22152:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22152:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3937,"nodeType":"ExpressionStatement","src":"22152:55:15"},{"expression":{"id":3938,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"22225:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3911,"id":3939,"nodeType":"Return","src":"22218:18:15"}]},"documentation":{"id":3903,"nodeType":"StructuredDocumentation","src":"21609:268:15","text":" @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\n @param index The index of the asset in the assetInfos array.\n @param amountToAdd The amount of native tokens to add as liquidity."},"id":3941,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateLiquidity","nameLocation":"21892:19:15","nodeType":"FunctionDefinition","parameters":{"id":3908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3905,"mutability":"mutable","name":"index","nameLocation":"21920:5:15","nodeType":"VariableDeclaration","scope":3941,"src":"21912:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"21912:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3907,"mutability":"mutable","name":"amountToAdd","nameLocation":"21935:11:15","nodeType":"VariableDeclaration","scope":3941,"src":"21927:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3906,"name":"uint256","nodeType":"ElementaryTypeName","src":"21927:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21911:36:15"},"returnParameters":{"id":3911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3941,"src":"21971:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3909,"name":"uint256","nodeType":"ElementaryTypeName","src":"21971:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21970:9:15"},"scope":4022,"src":"21883:361:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3957,"nodeType":"Block","src":"22639:66:15","statements":[{"expression":{"arguments":[{"id":3952,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"22670:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3953,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"22681:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3954,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"22690:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3951,"name":"getAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"22657:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22657:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3950,"id":3956,"nodeType":"Return","src":"22650:47:15"}]},"documentation":{"id":3942,"nodeType":"StructuredDocumentation","src":"22252:287:15","text":" @dev Converts the specified amount of native token to the corresponding token amount.\n @param toToken The address of the native token to convert from.\n @param amount The amount of native token to convert.\n @return The corresponding token amount."},"id":3958,"implemented":true,"kind":"function","modifiers":[],"name":"_convertBaseToToken","nameLocation":"22554:19:15","nodeType":"FunctionDefinition","parameters":{"id":3947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3944,"mutability":"mutable","name":"toToken","nameLocation":"22582:7:15","nodeType":"VariableDeclaration","scope":3958,"src":"22574:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3943,"name":"address","nodeType":"ElementaryTypeName","src":"22574:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3946,"mutability":"mutable","name":"amount","nameLocation":"22599:6:15","nodeType":"VariableDeclaration","scope":3958,"src":"22591:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3945,"name":"uint256","nodeType":"ElementaryTypeName","src":"22591:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22573:33:15"},"returnParameters":{"id":3950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3958,"src":"22630:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3948,"name":"uint256","nodeType":"ElementaryTypeName","src":"22630:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22629:9:15"},"scope":4022,"src":"22545:160:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3974,"nodeType":"Block","src":"23114:68:15","statements":[{"expression":{"arguments":[{"id":3969,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"23145:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3970,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"23156:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3971,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"23167:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3968,"name":"getAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"23132:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23132:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3967,"id":3973,"nodeType":"Return","src":"23125:49:15"}]},"documentation":{"id":3959,"nodeType":"StructuredDocumentation","src":"22713:287:15","text":" @dev Converts the specified token to the native token using the rebalancer contract.\n @param fromToken The address of the token to convert from.\n @param amount The amount of tokens to convert.\n @return tokenAmount The converted amount of tokens."},"id":3975,"implemented":true,"kind":"function","modifiers":[],"name":"_convertTokenToBase","nameLocation":"23015:19:15","nodeType":"FunctionDefinition","parameters":{"id":3964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3961,"mutability":"mutable","name":"fromToken","nameLocation":"23043:9:15","nodeType":"VariableDeclaration","scope":3975,"src":"23035:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3960,"name":"address","nodeType":"ElementaryTypeName","src":"23035:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3963,"mutability":"mutable","name":"amount","nameLocation":"23062:6:15","nodeType":"VariableDeclaration","scope":3975,"src":"23054:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3962,"name":"uint256","nodeType":"ElementaryTypeName","src":"23054:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23034:35:15"},"returnParameters":{"id":3967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3966,"mutability":"mutable","name":"tokenAmount","nameLocation":"23101:11:15","nodeType":"VariableDeclaration","scope":3975,"src":"23093:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3965,"name":"uint256","nodeType":"ElementaryTypeName","src":"23093:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23092:21:15"},"scope":4022,"src":"23006:176:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4020,"nodeType":"Block","src":"23469:290:15","statements":[{"assignments":[3985,3988],"declarations":[{"constant":false,"id":3985,"mutability":"mutable","name":"directions","nameLocation":"23495:10:15","nodeType":"VariableDeclaration","scope":4020,"src":"23481:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3983,"name":"bool","nodeType":"ElementaryTypeName","src":"23481:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3984,"nodeType":"ArrayTypeName","src":"23481:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3988,"mutability":"mutable","name":"deviations","nameLocation":"23524:10:15","nodeType":"VariableDeclaration","scope":4020,"src":"23507:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3986,"name":"uint256","nodeType":"ElementaryTypeName","src":"23507:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3987,"nodeType":"ArrayTypeName","src":"23507:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3991,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3989,"name":"getDeviation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"23538:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (bool[] memory,uint256[] memory)"}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(bool[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"23480:72:15"},{"body":{"id":4016,"nodeType":"Block","src":"23611:118:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4003,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"23630:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4005,"indexExpression":{"id":4004,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"23641:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23630:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4006,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"23647:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4008,"indexExpression":{"id":4007,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"23658:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23647:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4009,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"23663:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23647:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23630:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4015,"nodeType":"IfStatement","src":"23626:92:15","trueBody":{"id":4014,"nodeType":"Block","src":"23672:46:15","statements":[{"expression":{"hexValue":"74727565","id":4012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"23698:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3980,"id":4013,"nodeType":"Return","src":"23691:11:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3996,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"23583:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3997,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"23587:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23598:6:15","memberName":"length","nodeType":"MemberAccess","src":"23587:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23583:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4017,"initializationExpression":{"assignments":[3993],"declarations":[{"constant":false,"id":3993,"mutability":"mutable","name":"i","nameLocation":"23576:1:15","nodeType":"VariableDeclaration","scope":4017,"src":"23568:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3992,"name":"uint256","nodeType":"ElementaryTypeName","src":"23568:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3995,"initialValue":{"hexValue":"30","id":3994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23580:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23568:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23606:3:15","subExpression":{"id":4000,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"23606:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4002,"nodeType":"ExpressionStatement","src":"23606:3:15"},"nodeType":"ForStatement","src":"23563:166:15"},{"expression":{"hexValue":"66616c7365","id":4018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"23746:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3980,"id":4019,"nodeType":"Return","src":"23739:12:15"}]},"documentation":{"id":3976,"nodeType":"StructuredDocumentation","src":"23255:152:15","text":" @dev Checks if rebalancing is needed for the pool.\n @return A boolean value indicating whether rebalancing is needed or not."},"functionSelector":"8a77c8dc","id":4021,"implemented":true,"kind":"function","modifiers":[],"name":"isRebalanceNeeded","nameLocation":"23422:17:15","nodeType":"FunctionDefinition","parameters":{"id":3977,"nodeType":"ParameterList","parameters":[],"src":"23439:2:15"},"returnParameters":{"id":3980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4021,"src":"23463:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3978,"name":"bool","nodeType":"ElementaryTypeName","src":"23463:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"23462:6:15"},"scope":4022,"src":"23413:346:15","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":4023,"src":"1779:21983:15","usedErrors":[698,703,708,717,722,727,2052],"usedEvents":[1663,1672,2256,2263,2269,2275,2287]}],"src":"40:23724:15"},"id":15},"contracts/BaluniV1PoolFactory.sol":{"ast":{"absolutePath":"contracts/BaluniV1PoolFactory.sol","exportedSymbols":{"BaluniV1Pool":[4022],"BaluniV1PoolFactory":[4494],"Context":[2038],"ContextUpgradeable":[676],"ERC1967Utils":[1126],"ERC20":[1651],"IBaluniV1Oracle":[4519],"IBaluniV1PoolPeriphery":[4639],"IBaluniV1Rebalancer":[4724],"IBaluniV1Registry":[4898],"IERC1822Proxiable":[686],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755],"Initializable":[448],"OwnableUpgradeable":[194],"ReentrancyGuard":[2107],"UUPSUpgradeable":[630]},"id":4495,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":4024,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:16"},{"absolutePath":"contracts/BaluniV1Pool.sol","file":"./BaluniV1Pool.sol","id":4025,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4495,"sourceUnit":4023,"src":"1466:28:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":4026,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4495,"sourceUnit":195,"src":"1496:75:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":4027,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4495,"sourceUnit":449,"src":"1573:75:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":4028,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4495,"sourceUnit":631,"src":"1650:77:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Registry.sol","file":"./interfaces/IBaluniV1Registry.sol","id":4029,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4495,"sourceUnit":4899,"src":"1729:44:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4030,"name":"Initializable","nameLocations":["1809:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1809:13:16"},"id":4031,"nodeType":"InheritanceSpecifier","src":"1809:13:16"},{"baseName":{"id":4032,"name":"UUPSUpgradeable","nameLocations":["1824:15:16"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"1824:15:16"},"id":4033,"nodeType":"InheritanceSpecifier","src":"1824:15:16"},{"baseName":{"id":4034,"name":"OwnableUpgradeable","nameLocations":["1841:18:16"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"1841:18:16"},"id":4035,"nodeType":"InheritanceSpecifier","src":"1841:18:16"}],"canonicalName":"BaluniV1PoolFactory","contractDependencies":[4022],"contractKind":"contract","fullyImplemented":true,"id":4494,"linearizedBaseContracts":[4494,194,676,630,686,448],"name":"BaluniV1PoolFactory","nameLocation":"1786:19:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"41d1de97","id":4038,"mutability":"mutable","name":"allPools","nameLocation":"1884:8:16","nodeType":"VariableDeclaration","scope":4494,"src":"1867:25:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":4036,"name":"address","nodeType":"ElementaryTypeName","src":"1867:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4037,"nodeType":"ArrayTypeName","src":"1867:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"7b103999","id":4041,"mutability":"mutable","name":"registry","nameLocation":"1926:8:16","nodeType":"VariableDeclaration","scope":4494,"src":"1901:33:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"},"typeName":{"id":4040,"nodeType":"UserDefinedTypeName","pathNode":{"id":4039,"name":"IBaluniV1Registry","nameLocations":["1901:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":4898,"src":"1901:17:16"},"referencedDeclaration":4898,"src":"1901:17:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"visibility":"public"},{"constant":false,"functionSelector":"531aa03e","id":4047,"mutability":"mutable","name":"getPool","nameLocation":"1998:7:16","nodeType":"VariableDeclaration","scope":4494,"src":"1943:62:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"},"typeName":{"id":4046,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4042,"name":"address","nodeType":"ElementaryTypeName","src":"1951:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1943:47:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4045,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4043,"name":"address","nodeType":"ElementaryTypeName","src":"1970:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1962:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4044,"name":"address","nodeType":"ElementaryTypeName","src":"1981:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"0a4af51f99a910b453b81f2f9f5673acd70bf8895729e0a6de8e5e0908d89f2b","id":4054,"name":"PoolCreated","nameLocation":"2020:11:16","nodeType":"EventDefinition","parameters":{"id":4053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4049,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"2048:4:16","nodeType":"VariableDeclaration","scope":4054,"src":"2032:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4048,"name":"address","nodeType":"ElementaryTypeName","src":"2032:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4052,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"2064:6:16","nodeType":"VariableDeclaration","scope":4054,"src":"2054:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4050,"name":"address","nodeType":"ElementaryTypeName","src":"2054:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4051,"nodeType":"ArrayTypeName","src":"2054:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2031:40:16"},"src":"2014:58:16"},{"body":{"id":4075,"nodeType":"Block","src":"2138:130:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4061,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"2149:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2149:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4063,"nodeType":"ExpressionStatement","src":"2149:24:16"},{"expression":{"arguments":[{"expression":{"id":4065,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2199:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2203:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2199:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4064,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"2184:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2184:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4068,"nodeType":"ExpressionStatement","src":"2184:26:16"},{"expression":{"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4069,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"2221:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4071,"name":"_register","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"2250:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4070,"name":"IBaluniV1Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"2232:17:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Registry_$4898_$","typeString":"type(contract IBaluniV1Registry)"}},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2232:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"src":"2221:39:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"id":4074,"nodeType":"ExpressionStatement","src":"2221:39:16"}]},"functionSelector":"c4d66de8","id":4076,"implemented":true,"kind":"function","modifiers":[{"id":4059,"kind":"modifierInvocation","modifierName":{"id":4058,"name":"initializer","nameLocations":["2126:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"2126:11:16"},"nodeType":"ModifierInvocation","src":"2126:11:16"}],"name":"initialize","nameLocation":"2089:10:16","nodeType":"FunctionDefinition","parameters":{"id":4057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4056,"mutability":"mutable","name":"_register","nameLocation":"2108:9:16","nodeType":"VariableDeclaration","scope":4076,"src":"2100:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4055,"name":"address","nodeType":"ElementaryTypeName","src":"2100:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2099:19:16"},"returnParameters":{"id":4060,"nodeType":"ParameterList","parameters":[],"src":"2138:0:16"},"scope":4494,"src":"2080:188:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4092,"nodeType":"Block","src":"2365:58:16","statements":[{"expression":{"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4086,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"2376:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4088,"name":"_register","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"2405:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4087,"name":"IBaluniV1Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"2387:17:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Registry_$4898_$","typeString":"type(contract IBaluniV1Registry)"}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2387:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"src":"2376:39:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}},"id":4091,"nodeType":"ExpressionStatement","src":"2376:39:16"}]},"functionSelector":"8f2248bc","id":4093,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4083,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"2355:8:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":4084,"kind":"modifierInvocation","modifierName":{"id":4082,"name":"reinitializer","nameLocations":["2341:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":349,"src":"2341:13:16"},"nodeType":"ModifierInvocation","src":"2341:23:16"}],"name":"reinitialize","nameLocation":"2285:12:16","nodeType":"FunctionDefinition","parameters":{"id":4081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4078,"mutability":"mutable","name":"_register","nameLocation":"2306:9:16","nodeType":"VariableDeclaration","scope":4093,"src":"2298:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4077,"name":"address","nodeType":"ElementaryTypeName","src":"2298:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4080,"mutability":"mutable","name":"_version","nameLocation":"2324:8:16","nodeType":"VariableDeclaration","scope":4093,"src":"2317:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4079,"name":"uint64","nodeType":"ElementaryTypeName","src":"2317:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2297:36:16"},"returnParameters":{"id":4085,"nodeType":"ParameterList","parameters":[],"src":"2365:0:16"},"scope":4494,"src":"2276:147:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[584],"body":{"id":4101,"nodeType":"Block","src":"2513:2:16","statements":[]},"id":4102,"implemented":true,"kind":"function","modifiers":[{"id":4099,"kind":"modifierInvocation","modifierName":{"id":4098,"name":"onlyOwner","nameLocations":["2503:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"2503:9:16"},"nodeType":"ModifierInvocation","src":"2503:9:16"}],"name":"_authorizeUpgrade","nameLocation":"2440:17:16","nodeType":"FunctionDefinition","overrides":{"id":4097,"nodeType":"OverrideSpecifier","overrides":[],"src":"2494:8:16"},"parameters":{"id":4096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4095,"mutability":"mutable","name":"newImplementation","nameLocation":"2466:17:16","nodeType":"VariableDeclaration","scope":4102,"src":"2458:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4094,"name":"address","nodeType":"ElementaryTypeName","src":"2458:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2457:27:16"},"returnParameters":{"id":4100,"nodeType":"ParameterList","parameters":[],"src":"2513:0:16"},"scope":4494,"src":"2431:84:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4269,"nodeType":"Block","src":"3024:969:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4117,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"3043:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3050:6:16","memberName":"length","nodeType":"MemberAccess","src":"3043:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3059:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3043:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4174206c656173742074776f2061737365747320617265207265717569726564","id":4121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3062:34:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39cbcbdd9e6251e82f28a321c8ea534706a2cf624e365b64351e1f84ffc7ff8d","typeString":"literal_string \"At least two assets are required\""},"value":"At least two assets are required"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_39cbcbdd9e6251e82f28a321c8ea534706a2cf624e365b64351e1f84ffc7ff8d","typeString":"literal_string \"At least two assets are required\""}],"id":4116,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3035:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3035:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4123,"nodeType":"ExpressionStatement","src":"3035:62:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4125,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"3116:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3123:6:16","memberName":"length","nodeType":"MemberAccess","src":"3116:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4127,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"3133:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3141:6:16","memberName":"length","nodeType":"MemberAccess","src":"3133:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3116:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41737365747320616e642077656967687473206c656e677468206d69736d61746368","id":4130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3149:36:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""},"value":"Assets and weights length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""}],"id":4124,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3108:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:78:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4132,"nodeType":"ExpressionStatement","src":"3108:78:16"},{"body":{"id":4180,"nodeType":"Block","src":"3243:207:16","statements":[{"body":{"id":4178,"nodeType":"Block","src":"3306:133:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"baseExpression":{"id":4160,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"3341:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":4164,"indexExpression":{"baseExpression":{"id":4161,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"3349:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4163,"indexExpression":{"id":4162,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"3356:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3349:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3341:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4168,"indexExpression":{"baseExpression":{"id":4165,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"3360:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4167,"indexExpression":{"id":4166,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"3367:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3360:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3341:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3333:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4158,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:16","typeDescriptions":{}}},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3333:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3383:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3375:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4170,"name":"address","nodeType":"ElementaryTypeName","src":"3375:7:16","typeDescriptions":{}}},"id":4173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3375:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3333:52:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c20616c72656164792065786973747320666f7220746869732070616972","id":4175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3387:35:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_2258c7547209181d37eb4aebb58e4d2c60f10b97b943ea694f4dec24e242181e","typeString":"literal_string \"Pool already exists for this pair\""},"value":"Pool already exists for this pair"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2258c7547209181d37eb4aebb58e4d2c60f10b97b943ea694f4dec24e242181e","typeString":"literal_string \"Pool already exists for this pair\""}],"id":4157,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:98:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4177,"nodeType":"ExpressionStatement","src":"3325:98:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4150,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"3282:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4151,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"3286:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3293:6:16","memberName":"length","nodeType":"MemberAccess","src":"3286:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3282:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4179,"initializationExpression":{"assignments":[4145],"declarations":[{"constant":false,"id":4145,"mutability":"mutable","name":"j","nameLocation":"3271:1:16","nodeType":"VariableDeclaration","scope":4179,"src":"3263:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4144,"name":"uint256","nodeType":"ElementaryTypeName","src":"3263:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4149,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4146,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"3275:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3279:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3275:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3263:17:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3301:3:16","subExpression":{"id":4154,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"3301:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4156,"nodeType":"ExpressionStatement","src":"3301:3:16"},"nodeType":"ForStatement","src":"3258:181:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4137,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"3219:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4138,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"3223:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3230:6:16","memberName":"length","nodeType":"MemberAccess","src":"3223:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3219:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4181,"initializationExpression":{"assignments":[4134],"declarations":[{"constant":false,"id":4134,"mutability":"mutable","name":"i","nameLocation":"3212:1:16","nodeType":"VariableDeclaration","scope":4181,"src":"3204:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4133,"name":"uint256","nodeType":"ElementaryTypeName","src":"3204:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4136,"initialValue":{"hexValue":"30","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3216:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3204:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3238:3:16","subExpression":{"id":4141,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"3238:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4143,"nodeType":"ExpressionStatement","src":"3238:3:16"},"nodeType":"ForStatement","src":"3199:251:16"},{"assignments":[4184],"declarations":[{"constant":false,"id":4184,"mutability":"mutable","name":"newPool","nameLocation":"3475:7:16","nodeType":"VariableDeclaration","scope":4269,"src":"3462:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"},"typeName":{"id":4183,"nodeType":"UserDefinedTypeName","pathNode":{"id":4182,"name":"BaluniV1Pool","nameLocations":["3462:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":4022,"src":"3462:12:16"},"referencedDeclaration":4022,"src":"3462:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}},"visibility":"internal"}],"id":4196,"initialValue":{"arguments":[{"id":4188,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"3502:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":4189,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"3510:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4190,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"3519:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4193,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"3536:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBaluniV1Registry_$4898","typeString":"contract IBaluniV1Registry"}],"id":4192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3528:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4191,"name":"address","nodeType":"ElementaryTypeName","src":"3528:7:16","typeDescriptions":{}}},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3528:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"3485:16:16","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_BaluniV1Pool_$4022_$","typeString":"function (address[] memory,uint256[] memory,uint256,address) returns (contract BaluniV1Pool)"},"typeName":{"id":4186,"nodeType":"UserDefinedTypeName","pathNode":{"id":4185,"name":"BaluniV1Pool","nameLocations":["3489:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":4022,"src":"3489:12:16"},"referencedDeclaration":4022,"src":"3489:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}}},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3485:61:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"3462:84:16"},{"assignments":[4198],"declarations":[{"constant":false,"id":4198,"mutability":"mutable","name":"poolAddress","nameLocation":"3567:11:16","nodeType":"VariableDeclaration","scope":4269,"src":"3559:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4197,"name":"address","nodeType":"ElementaryTypeName","src":"3559:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4203,"initialValue":{"arguments":[{"id":4201,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"3589:7:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}],"id":4200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3581:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4199,"name":"address","nodeType":"ElementaryTypeName","src":"3581:7:16","typeDescriptions":{}}},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3581:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3559:38:16"},{"expression":{"arguments":[{"id":4207,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"3624:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4204,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"3610:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3619:4:16","memberName":"push","nodeType":"MemberAccess","src":"3610:13:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3610:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4209,"nodeType":"ExpressionStatement","src":"3610:26:16"},{"body":{"id":4260,"nodeType":"Block","src":"3691:214:16","statements":[{"body":{"id":4258,"nodeType":"Block","src":"3754:140:16","statements":[{"expression":{"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4234,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"3773:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":4241,"indexExpression":{"baseExpression":{"id":4235,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"3781:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4237,"indexExpression":{"id":4236,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"3788:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3781:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3773:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4242,"indexExpression":{"baseExpression":{"id":4238,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"3792:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4240,"indexExpression":{"id":4239,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"3799:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3792:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3773:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4243,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"3805:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3773:43:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4245,"nodeType":"ExpressionStatement","src":"3773:43:16"},{"expression":{"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4246,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"3835:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":4253,"indexExpression":{"baseExpression":{"id":4247,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"3843:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4249,"indexExpression":{"id":4248,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"3850:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3843:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3835:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4254,"indexExpression":{"baseExpression":{"id":4250,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"3854:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4252,"indexExpression":{"id":4251,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"3861:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3854:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3835:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4255,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"3867:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3835:43:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4257,"nodeType":"ExpressionStatement","src":"3835:43:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4227,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"3730:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4228,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"3734:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3741:6:16","memberName":"length","nodeType":"MemberAccess","src":"3734:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3730:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4259,"initializationExpression":{"assignments":[4222],"declarations":[{"constant":false,"id":4222,"mutability":"mutable","name":"j","nameLocation":"3719:1:16","nodeType":"VariableDeclaration","scope":4259,"src":"3711:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4221,"name":"uint256","nodeType":"ElementaryTypeName","src":"3711:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4226,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4223,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"3723:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3727:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3723:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3711:17:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3749:3:16","subExpression":{"id":4231,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"3749:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4233,"nodeType":"ExpressionStatement","src":"3749:3:16"},"nodeType":"ForStatement","src":"3706:188:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4214,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"3667:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4215,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"3671:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3678:6:16","memberName":"length","nodeType":"MemberAccess","src":"3671:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3667:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4261,"initializationExpression":{"assignments":[4211],"declarations":[{"constant":false,"id":4211,"mutability":"mutable","name":"i","nameLocation":"3660:1:16","nodeType":"VariableDeclaration","scope":4261,"src":"3652:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4210,"name":"uint256","nodeType":"ElementaryTypeName","src":"3652:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4213,"initialValue":{"hexValue":"30","id":4212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3664:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3652:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3686:3:16","subExpression":{"id":4218,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"3686:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4220,"nodeType":"ExpressionStatement","src":"3686:3:16"},"nodeType":"ForStatement","src":"3647:258:16"},{"eventCall":{"arguments":[{"id":4263,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"3934:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4264,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"3947:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":4262,"name":"PoolCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"3922:11:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address[] memory)"}},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3922:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4266,"nodeType":"EmitStatement","src":"3917:37:16"},{"expression":{"id":4267,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"3974:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4115,"id":4268,"nodeType":"Return","src":"3967:18:16"}]},"documentation":{"id":4103,"nodeType":"StructuredDocumentation","src":"2523:380:16","text":" @dev Creates a new BaluniV1Pool contract and registers it in the factory.\n @param assets The array of asset addresses to be included in the pool.\n @param weights The array of weights corresponding to each asset in the pool.\n @param trigger The trigger value for rebalancing the pool.\n @return The address of the newly created pool."},"functionSelector":"3069873b","id":4270,"implemented":true,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"2918:10:16","nodeType":"FunctionDefinition","parameters":{"id":4112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4106,"mutability":"mutable","name":"assets","nameLocation":"2946:6:16","nodeType":"VariableDeclaration","scope":4270,"src":"2929:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4104,"name":"address","nodeType":"ElementaryTypeName","src":"2929:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4105,"nodeType":"ArrayTypeName","src":"2929:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4109,"mutability":"mutable","name":"weights","nameLocation":"2971:7:16","nodeType":"VariableDeclaration","scope":4270,"src":"2954:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4107,"name":"uint256","nodeType":"ElementaryTypeName","src":"2954:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4108,"nodeType":"ArrayTypeName","src":"2954:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4111,"mutability":"mutable","name":"trigger","nameLocation":"2988:7:16","nodeType":"VariableDeclaration","scope":4270,"src":"2980:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4110,"name":"uint256","nodeType":"ElementaryTypeName","src":"2980:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2928:68:16"},"returnParameters":{"id":4115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4270,"src":"3015:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4113,"name":"address","nodeType":"ElementaryTypeName","src":"3015:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3014:9:16"},"scope":4494,"src":"2909:1084:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4279,"nodeType":"Block","src":"4188:34:16","statements":[{"expression":{"id":4277,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"4206:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":4276,"id":4278,"nodeType":"Return","src":"4199:15:16"}]},"documentation":{"id":4271,"nodeType":"StructuredDocumentation","src":"4001:117:16","text":" @dev Retrieves all the pools created by the factory.\n @return An array of pool addresses."},"functionSelector":"d88ff1f4","id":4280,"implemented":true,"kind":"function","modifiers":[],"name":"getAllPools","nameLocation":"4133:11:16","nodeType":"FunctionDefinition","parameters":{"id":4272,"nodeType":"ParameterList","parameters":[],"src":"4144:2:16"},"returnParameters":{"id":4276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4280,"src":"4170:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4273,"name":"address","nodeType":"ElementaryTypeName","src":"4170:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4274,"nodeType":"ArrayTypeName","src":"4170:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4169:18:16"},"scope":4494,"src":"4124:98:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4289,"nodeType":"Block","src":"4408:41:16","statements":[{"expression":{"expression":{"id":4286,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"4426:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4435:6:16","memberName":"length","nodeType":"MemberAccess","src":"4426:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4285,"id":4288,"nodeType":"Return","src":"4419:22:16"}]},"documentation":{"id":4281,"nodeType":"StructuredDocumentation","src":"4230:115:16","text":" @dev Retrieves the number of pools created by the factory.\n @return The count of pools."},"functionSelector":"b4ac6860","id":4290,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolsCount","nameLocation":"4360:13:16","nodeType":"FunctionDefinition","parameters":{"id":4282,"nodeType":"ParameterList","parameters":[],"src":"4373:2:16"},"returnParameters":{"id":4285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4290,"src":"4399:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4283,"name":"uint256","nodeType":"ElementaryTypeName","src":"4399:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4398:9:16"},"scope":4494,"src":"4351:98:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4310,"nodeType":"Block","src":"4711:98:16","statements":[{"assignments":[4301],"declarations":[{"constant":false,"id":4301,"mutability":"mutable","name":"pool","nameLocation":"4735:4:16","nodeType":"VariableDeclaration","scope":4310,"src":"4722:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"},"typeName":{"id":4300,"nodeType":"UserDefinedTypeName","pathNode":{"id":4299,"name":"BaluniV1Pool","nameLocations":["4722:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":4022,"src":"4722:12:16"},"referencedDeclaration":4022,"src":"4722:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}},"visibility":"internal"}],"id":4305,"initialValue":{"arguments":[{"id":4303,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"4755:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4302,"name":"BaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"4742:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BaluniV1Pool_$4022_$","typeString":"type(contract BaluniV1Pool)"}},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4742:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"4722:45:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4306,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"4785:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4790:9:16","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3438,"src":"4785:14:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4785:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4298,"id":4309,"nodeType":"Return","src":"4778:23:16"}]},"documentation":{"id":4291,"nodeType":"StructuredDocumentation","src":"4457:163:16","text":" @dev Retrieves the assets of a specific pool.\n @param poolAddress The address of the pool.\n @return An array of asset addresses."},"functionSelector":"4276b97b","id":4311,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolAssets","nameLocation":"4635:13:16","nodeType":"FunctionDefinition","parameters":{"id":4294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4293,"mutability":"mutable","name":"poolAddress","nameLocation":"4657:11:16","nodeType":"VariableDeclaration","scope":4311,"src":"4649:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4292,"name":"address","nodeType":"ElementaryTypeName","src":"4649:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4648:21:16"},"returnParameters":{"id":4298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4311,"src":"4693:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4295,"name":"address","nodeType":"ElementaryTypeName","src":"4693:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4296,"nodeType":"ArrayTypeName","src":"4693:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4692:18:16"},"scope":4494,"src":"4626:183:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4330,"nodeType":"Block","src":"5141:58:16","statements":[{"expression":{"arguments":[{"baseExpression":{"baseExpression":{"id":4323,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"5167:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":4325,"indexExpression":{"id":4324,"name":"asset1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"5175:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5167:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4327,"indexExpression":{"id":4326,"name":"asset2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"5183:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5167:23:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5159:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4321,"name":"address","nodeType":"ElementaryTypeName","src":"5159:7:16","typeDescriptions":{}}},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5159:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4320,"id":4329,"nodeType":"Return","src":"5152:39:16"}]},"documentation":{"id":4312,"nodeType":"StructuredDocumentation","src":"4817:229:16","text":" @dev Retrieves the pool address based on the given assets.\n @param asset1 The address of the first asset.\n @param asset2 The address of the second asset.\n @return The address of the pool."},"functionSelector":"2d5e94a7","id":4331,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolByAssets","nameLocation":"5061:15:16","nodeType":"FunctionDefinition","parameters":{"id":4317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4314,"mutability":"mutable","name":"asset1","nameLocation":"5085:6:16","nodeType":"VariableDeclaration","scope":4331,"src":"5077:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4313,"name":"address","nodeType":"ElementaryTypeName","src":"5077:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4316,"mutability":"mutable","name":"asset2","nameLocation":"5101:6:16","nodeType":"VariableDeclaration","scope":4331,"src":"5093:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4315,"name":"address","nodeType":"ElementaryTypeName","src":"5093:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5076:32:16"},"returnParameters":{"id":4320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4331,"src":"5132:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4318,"name":"address","nodeType":"ElementaryTypeName","src":"5132:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5131:9:16"},"scope":4494,"src":"5052:147:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4460,"nodeType":"Block","src":"5493:797:16","statements":[{"assignments":[4344],"declarations":[{"constant":false,"id":4344,"mutability":"mutable","name":"pools","nameLocation":"5521:5:16","nodeType":"VariableDeclaration","scope":4460,"src":"5504:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4342,"name":"address","nodeType":"ElementaryTypeName","src":"5504:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4343,"nodeType":"ArrayTypeName","src":"5504:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4351,"initialValue":{"arguments":[{"expression":{"id":4348,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"5543:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5552:6:16","memberName":"length","nodeType":"MemberAccess","src":"5543:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5529:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4345,"name":"address","nodeType":"ElementaryTypeName","src":"5533:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4346,"nodeType":"ArrayTypeName","src":"5533:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5504:55:16"},{"assignments":[4353],"declarations":[{"constant":false,"id":4353,"mutability":"mutable","name":"count","nameLocation":"5578:5:16","nodeType":"VariableDeclaration","scope":4460,"src":"5570:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4352,"name":"uint256","nodeType":"ElementaryTypeName","src":"5570:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4355,"initialValue":{"hexValue":"30","id":4354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5586:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5570:17:16"},{"body":{"id":4425,"nodeType":"Block","src":"5646:459:16","statements":[{"assignments":[4369],"declarations":[{"constant":false,"id":4369,"mutability":"mutable","name":"pool","nameLocation":"5674:4:16","nodeType":"VariableDeclaration","scope":4425,"src":"5661:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"},"typeName":{"id":4368,"nodeType":"UserDefinedTypeName","pathNode":{"id":4367,"name":"BaluniV1Pool","nameLocations":["5661:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":4022,"src":"5661:12:16"},"referencedDeclaration":4022,"src":"5661:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}},"visibility":"internal"}],"id":4375,"initialValue":{"arguments":[{"baseExpression":{"id":4371,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"5694:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4373,"indexExpression":{"id":4372,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"5703:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5694:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4370,"name":"BaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"5681:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BaluniV1Pool_$4022_$","typeString":"type(contract BaluniV1Pool)"}},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5681:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"5661:45:16"},{"assignments":[4380],"declarations":[{"constant":false,"id":4380,"mutability":"mutable","name":"assets","nameLocation":"5738:6:16","nodeType":"VariableDeclaration","scope":4425,"src":"5721:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4378,"name":"address","nodeType":"ElementaryTypeName","src":"5721:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4379,"nodeType":"ArrayTypeName","src":"5721:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4384,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4381,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"5747:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5752:9:16","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3438,"src":"5747:14:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5721:42:16"},{"body":{"id":4416,"nodeType":"Block","src":"5824:187:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4396,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"5847:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4398,"indexExpression":{"id":4397,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"5854:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5847:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4399,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"5860:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5847:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4415,"nodeType":"IfStatement","src":"5843:153:16","trueBody":{"id":4414,"nodeType":"Block","src":"5867:129:16","statements":[{"expression":{"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4401,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"5890:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4403,"indexExpression":{"id":4402,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"5896:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5890:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4406,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"5913:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$4022","typeString":"contract BaluniV1Pool"}],"id":4405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5905:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4404,"name":"address","nodeType":"ElementaryTypeName","src":"5905:7:16","typeDescriptions":{}}},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5890:28:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4409,"nodeType":"ExpressionStatement","src":"5890:28:16"},{"expression":{"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5941:7:16","subExpression":{"id":4410,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"5941:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4412,"nodeType":"ExpressionStatement","src":"5941:7:16"},{"id":4413,"nodeType":"Break","src":"5971:5:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4389,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"5800:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4390,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"5804:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5811:6:16","memberName":"length","nodeType":"MemberAccess","src":"5804:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5800:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4417,"initializationExpression":{"assignments":[4386],"declarations":[{"constant":false,"id":4386,"mutability":"mutable","name":"j","nameLocation":"5793:1:16","nodeType":"VariableDeclaration","scope":4417,"src":"5785:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4385,"name":"uint256","nodeType":"ElementaryTypeName","src":"5785:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4388,"initialValue":{"hexValue":"30","id":4387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5797:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5785:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5819:3:16","subExpression":{"id":4393,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"5819:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4395,"nodeType":"ExpressionStatement","src":"5819:3:16"},"nodeType":"ForStatement","src":"5780:231:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4418,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"6031:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4419,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"6040:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6046:6:16","memberName":"length","nodeType":"MemberAccess","src":"6040:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6031:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4424,"nodeType":"IfStatement","src":"6027:67:16","trueBody":{"id":4423,"nodeType":"Block","src":"6054:40:16","statements":[{"id":4422,"nodeType":"Break","src":"6073:5:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4360,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"5620:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4361,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"5624:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5633:6:16","memberName":"length","nodeType":"MemberAccess","src":"5624:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5620:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4426,"initializationExpression":{"assignments":[4357],"declarations":[{"constant":false,"id":4357,"mutability":"mutable","name":"i","nameLocation":"5613:1:16","nodeType":"VariableDeclaration","scope":4426,"src":"5605:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4356,"name":"uint256","nodeType":"ElementaryTypeName","src":"5605:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4359,"initialValue":{"hexValue":"30","id":4358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5617:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5605:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5641:3:16","subExpression":{"id":4364,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"5641:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4366,"nodeType":"ExpressionStatement","src":"5641:3:16"},"nodeType":"ForStatement","src":"5600:505:16"},{"assignments":[4431],"declarations":[{"constant":false,"id":4431,"mutability":"mutable","name":"result","nameLocation":"6134:6:16","nodeType":"VariableDeclaration","scope":4460,"src":"6117:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4429,"name":"address","nodeType":"ElementaryTypeName","src":"6117:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4430,"nodeType":"ArrayTypeName","src":"6117:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4437,"initialValue":{"arguments":[{"id":4435,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"6157:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6143:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4432,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4433,"nodeType":"ArrayTypeName","src":"6147:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6143:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6117:46:16"},{"body":{"id":4456,"nodeType":"Block","src":"6210:47:16","statements":[{"expression":{"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4448,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"6225:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4450,"indexExpression":{"id":4449,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"6232:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6225:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4451,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"6237:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4453,"indexExpression":{"id":4452,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"6243:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6237:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6225:20:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4455,"nodeType":"ExpressionStatement","src":"6225:20:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4442,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"6194:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4443,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"6198:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6194:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4457,"initializationExpression":{"assignments":[4439],"declarations":[{"constant":false,"id":4439,"mutability":"mutable","name":"i","nameLocation":"6187:1:16","nodeType":"VariableDeclaration","scope":4457,"src":"6179:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4438,"name":"uint256","nodeType":"ElementaryTypeName","src":"6179:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4441,"initialValue":{"hexValue":"30","id":4440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6191:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6179:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6205:3:16","subExpression":{"id":4445,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"6205:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4447,"nodeType":"ExpressionStatement","src":"6205:3:16"},"nodeType":"ForStatement","src":"6174:83:16"},{"expression":{"id":4458,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"6276:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4339,"id":4459,"nodeType":"Return","src":"6269:13:16"}]},"documentation":{"id":4332,"nodeType":"StructuredDocumentation","src":"5207:199:16","text":" @dev Returns an array of pool addresses that contain the specified token.\n @param token The address of the token to search for.\n @return An array of pool addresses."},"functionSelector":"b4340e6a","id":4461,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolsByAsset","nameLocation":"5421:15:16","nodeType":"FunctionDefinition","parameters":{"id":4335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4334,"mutability":"mutable","name":"token","nameLocation":"5445:5:16","nodeType":"VariableDeclaration","scope":4461,"src":"5437:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4333,"name":"address","nodeType":"ElementaryTypeName","src":"5437:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5436:15:16"},"returnParameters":{"id":4339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4461,"src":"5475:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4336,"name":"address","nodeType":"ElementaryTypeName","src":"5475:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4337,"nodeType":"ArrayTypeName","src":"5475:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"5474:18:16"},"scope":4494,"src":"5412:878:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4492,"nodeType":"Block","src":"6361:185:16","statements":[{"body":{"id":4488,"nodeType":"Block","src":"6418:98:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4479,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"6437:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4481,"indexExpression":{"id":4480,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"6446:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6437:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4482,"name":"_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"6452:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6437:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4487,"nodeType":"IfStatement","src":"6433:72:16","trueBody":{"id":4486,"nodeType":"Block","src":"6459:46:16","statements":[{"expression":{"hexValue":"74727565","id":4484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6485:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4467,"id":4485,"nodeType":"Return","src":"6478:11:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4472,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"6392:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4473,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"6396:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6405:6:16","memberName":"length","nodeType":"MemberAccess","src":"6396:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6392:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4489,"initializationExpression":{"assignments":[4469],"declarations":[{"constant":false,"id":4469,"mutability":"mutable","name":"i","nameLocation":"6385:1:16","nodeType":"VariableDeclaration","scope":4489,"src":"6377:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4468,"name":"uint256","nodeType":"ElementaryTypeName","src":"6377:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4471,"initialValue":{"hexValue":"30","id":4470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6389:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6377:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6413:3:16","subExpression":{"id":4476,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"6413:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4478,"nodeType":"ExpressionStatement","src":"6413:3:16"},"nodeType":"ForStatement","src":"6372:144:16"},{"expression":{"hexValue":"66616c7365","id":4490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6533:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4467,"id":4491,"nodeType":"Return","src":"6526:12:16"}]},"functionSelector":"89345efb","id":4493,"implemented":true,"kind":"function","modifiers":[],"name":"poolExist","nameLocation":"6307:9:16","nodeType":"FunctionDefinition","parameters":{"id":4464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4463,"mutability":"mutable","name":"_pool","nameLocation":"6325:5:16","nodeType":"VariableDeclaration","scope":4493,"src":"6317:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4462,"name":"address","nodeType":"ElementaryTypeName","src":"6317:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6316:15:16"},"returnParameters":{"id":4467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4493,"src":"6355:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4465,"name":"bool","nodeType":"ElementaryTypeName","src":"6355:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6354:6:16"},"scope":4494,"src":"6298:248:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4495,"src":"1777:4772:16","usedErrors":[30,35,211,214,475,480,858,871,1768,1771],"usedEvents":[41,219,837,4054]}],"src":"40:6511:16"},"id":16},"contracts/interfaces/IBaluniV1Oracle.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Oracle.sol","exportedSymbols":{"IBaluniV1Oracle":[4519]},"id":4520,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":4496,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Oracle","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4519,"linearizedBaseContracts":[4519],"name":"IBaluniV1Oracle","nameLocation":"77:15:17","nodeType":"ContractDefinition","nodes":[{"functionSelector":"248391ff","id":4507,"implemented":false,"kind":"function","modifiers":[],"name":"convert","nameLocation":"109:7:17","nodeType":"FunctionDefinition","parameters":{"id":4503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4498,"mutability":"mutable","name":"fromToken","nameLocation":"125:9:17","nodeType":"VariableDeclaration","scope":4507,"src":"117:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4497,"name":"address","nodeType":"ElementaryTypeName","src":"117:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4500,"mutability":"mutable","name":"toToken","nameLocation":"144:7:17","nodeType":"VariableDeclaration","scope":4507,"src":"136:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4499,"name":"address","nodeType":"ElementaryTypeName","src":"136:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4502,"mutability":"mutable","name":"amount","nameLocation":"161:6:17","nodeType":"VariableDeclaration","scope":4507,"src":"153:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4501,"name":"uint256","nodeType":"ElementaryTypeName","src":"153:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116:52:17"},"returnParameters":{"id":4506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4505,"mutability":"mutable","name":"valuation","nameLocation":"200:9:17","nodeType":"VariableDeclaration","scope":4507,"src":"192:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4504,"name":"uint256","nodeType":"ElementaryTypeName","src":"192:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"191:19:17"},"scope":4519,"src":"100:111:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b27b5e75","id":4518,"implemented":false,"kind":"function","modifiers":[],"name":"convertScaled","nameLocation":"228:13:17","nodeType":"FunctionDefinition","parameters":{"id":4514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4509,"mutability":"mutable","name":"fromToken","nameLocation":"260:9:17","nodeType":"VariableDeclaration","scope":4518,"src":"252:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4508,"name":"address","nodeType":"ElementaryTypeName","src":"252:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4511,"mutability":"mutable","name":"toToken","nameLocation":"288:7:17","nodeType":"VariableDeclaration","scope":4518,"src":"280:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4510,"name":"address","nodeType":"ElementaryTypeName","src":"280:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4513,"mutability":"mutable","name":"amount","nameLocation":"314:6:17","nodeType":"VariableDeclaration","scope":4518,"src":"306:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4512,"name":"uint256","nodeType":"ElementaryTypeName","src":"306:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"241:86:17"},"returnParameters":{"id":4517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4516,"mutability":"mutable","name":"valuation","nameLocation":"359:9:17","nodeType":"VariableDeclaration","scope":4518,"src":"351:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4515,"name":"uint256","nodeType":"ElementaryTypeName","src":"351:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"350:19:17"},"scope":4519,"src":"219:151:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4520,"src":"67:306:17","usedErrors":[],"usedEvents":[]}],"src":"40:335:17"},"id":17},"contracts/interfaces/IBaluniV1PoolPeriphery.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1PoolPeriphery.sol","exportedSymbols":{"IBaluniV1PoolPeriphery":[4639]},"id":4640,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":4521,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1PoolPeriphery","contractDependencies":[],"contractKind":"interface","documentation":{"id":4522,"nodeType":"StructuredDocumentation","src":"67:101:18","text":" @title IBaluniV1PoolPeriphery\n @dev Interface for the BaluniV1PoolPeriphery contract."},"fullyImplemented":false,"id":4639,"linearizedBaseContracts":[4639],"name":"IBaluniV1PoolPeriphery","nameLocation":"180:22:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4523,"nodeType":"StructuredDocumentation","src":"210:348:18","text":" @dev Swaps tokens in a BaluniV1Pool.\n @param fromToken The address of the token to swap from.\n @param toToken The address of the token to swap to.\n @param amount The amount of tokens to swap.\n @param receiver The address of the receiver.\n @return The amount of tokens received after the swap."},"functionSelector":"6e81221c","id":4536,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"573:4:18","nodeType":"FunctionDefinition","parameters":{"id":4532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4525,"mutability":"mutable","name":"fromToken","nameLocation":"586:9:18","nodeType":"VariableDeclaration","scope":4536,"src":"578:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4524,"name":"address","nodeType":"ElementaryTypeName","src":"578:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4527,"mutability":"mutable","name":"toToken","nameLocation":"605:7:18","nodeType":"VariableDeclaration","scope":4536,"src":"597:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4526,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4529,"mutability":"mutable","name":"amount","nameLocation":"622:6:18","nodeType":"VariableDeclaration","scope":4536,"src":"614:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4528,"name":"uint256","nodeType":"ElementaryTypeName","src":"614:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4531,"mutability":"mutable","name":"receiver","nameLocation":"638:8:18","nodeType":"VariableDeclaration","scope":4536,"src":"630:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4530,"name":"address","nodeType":"ElementaryTypeName","src":"630:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"577:70:18"},"returnParameters":{"id":4535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4536,"src":"666:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4533,"name":"uint256","nodeType":"ElementaryTypeName","src":"666:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"665:9:18"},"scope":4639,"src":"564:111:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4537,"nodeType":"StructuredDocumentation","src":"683:515:18","text":" @dev Performs batch swaps between multiple token pairs.\n @param fromTokens An array of addresses representing the tokens to swap from.\n @param toTokens An array of addresses representing the tokens to swap to.\n @param amounts An array of amounts representing the amounts to swap.\n @param receivers An array of addresses representing the receivers of the swapped tokens.\n @return An array of amounts representing the amounts of tokens received after the swaps."},"functionSelector":"e74e9b06","id":4555,"implemented":false,"kind":"function","modifiers":[],"name":"batchSwap","nameLocation":"1213:9:18","nodeType":"FunctionDefinition","parameters":{"id":4550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4540,"mutability":"mutable","name":"fromTokens","nameLocation":"1252:10:18","nodeType":"VariableDeclaration","scope":4555,"src":"1233:29:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4538,"name":"address","nodeType":"ElementaryTypeName","src":"1233:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4539,"nodeType":"ArrayTypeName","src":"1233:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4543,"mutability":"mutable","name":"toTokens","nameLocation":"1292:8:18","nodeType":"VariableDeclaration","scope":4555,"src":"1273:27:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4541,"name":"address","nodeType":"ElementaryTypeName","src":"1273:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4542,"nodeType":"ArrayTypeName","src":"1273:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4546,"mutability":"mutable","name":"amounts","nameLocation":"1330:7:18","nodeType":"VariableDeclaration","scope":4555,"src":"1311:26:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4544,"name":"uint256","nodeType":"ElementaryTypeName","src":"1311:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4545,"nodeType":"ArrayTypeName","src":"1311:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4549,"mutability":"mutable","name":"receivers","nameLocation":"1367:9:18","nodeType":"VariableDeclaration","scope":4555,"src":"1348:28:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4547,"name":"address","nodeType":"ElementaryTypeName","src":"1348:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4548,"nodeType":"ArrayTypeName","src":"1348:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1222:161:18"},"returnParameters":{"id":4554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4555,"src":"1402:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4551,"name":"uint256","nodeType":"ElementaryTypeName","src":"1402:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4552,"nodeType":"ArrayTypeName","src":"1402:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1401:18:18"},"scope":4639,"src":"1204:216:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4556,"nodeType":"StructuredDocumentation","src":"1428:160:18","text":" @dev Rebalances weights in a pool.\n @param poolAddress The address of the pool.\n @param receiver The address of the receiver."},"functionSelector":"ad414263","id":4563,"implemented":false,"kind":"function","modifiers":[],"name":"rebalanceWeights","nameLocation":"1603:16:18","nodeType":"FunctionDefinition","parameters":{"id":4561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4558,"mutability":"mutable","name":"poolAddress","nameLocation":"1628:11:18","nodeType":"VariableDeclaration","scope":4563,"src":"1620:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4557,"name":"address","nodeType":"ElementaryTypeName","src":"1620:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4560,"mutability":"mutable","name":"receiver","nameLocation":"1649:8:18","nodeType":"VariableDeclaration","scope":4563,"src":"1641:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4559,"name":"address","nodeType":"ElementaryTypeName","src":"1641:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1619:39:18"},"returnParameters":{"id":4562,"nodeType":"ParameterList","parameters":[],"src":"1667:0:18"},"scope":4639,"src":"1594:74:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4564,"nodeType":"StructuredDocumentation","src":"1676:243:18","text":" @dev Adds liquidity to a BaluniV1Pool.\n @param amounts An array of amounts for each asset to add as liquidity.\n @param poolAddress The address of the pool.\n @param receiver The address of the receiver."},"functionSelector":"ec0cd2eb","id":4576,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidity","nameLocation":"1934:12:18","nodeType":"FunctionDefinition","parameters":{"id":4572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4567,"mutability":"mutable","name":"amounts","nameLocation":"1964:7:18","nodeType":"VariableDeclaration","scope":4576,"src":"1947:24:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4565,"name":"uint256","nodeType":"ElementaryTypeName","src":"1947:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4566,"nodeType":"ArrayTypeName","src":"1947:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4569,"mutability":"mutable","name":"poolAddress","nameLocation":"1981:11:18","nodeType":"VariableDeclaration","scope":4576,"src":"1973:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4568,"name":"address","nodeType":"ElementaryTypeName","src":"1973:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4571,"mutability":"mutable","name":"receiver","nameLocation":"2002:8:18","nodeType":"VariableDeclaration","scope":4576,"src":"1994:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4570,"name":"address","nodeType":"ElementaryTypeName","src":"1994:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1946:65:18"},"returnParameters":{"id":4575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4576,"src":"2030:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4573,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2029:9:18"},"scope":4639,"src":"1925:114:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4577,"nodeType":"StructuredDocumentation","src":"2047:232:18","text":" @dev Removes liquidity from a BaluniV1Pool.\n @param share The amount of liquidity tokens to remove.\n @param poolAddress The address of the pool.\n @param receiver The address of the receiver."},"functionSelector":"f31abcc4","id":4586,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidity","nameLocation":"2294:15:18","nodeType":"FunctionDefinition","parameters":{"id":4584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4579,"mutability":"mutable","name":"share","nameLocation":"2318:5:18","nodeType":"VariableDeclaration","scope":4586,"src":"2310:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4578,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4581,"mutability":"mutable","name":"poolAddress","nameLocation":"2333:11:18","nodeType":"VariableDeclaration","scope":4586,"src":"2325:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4580,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4583,"mutability":"mutable","name":"receiver","nameLocation":"2354:8:18","nodeType":"VariableDeclaration","scope":4586,"src":"2346:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4582,"name":"address","nodeType":"ElementaryTypeName","src":"2346:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2309:54:18"},"returnParameters":{"id":4585,"nodeType":"ParameterList","parameters":[],"src":"2372:0:18"},"scope":4639,"src":"2285:88:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4587,"nodeType":"StructuredDocumentation","src":"2381:330:18","text":" @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\n @param fromToken The address of the token to swap from.\n @param toToken The address of the token to swap to.\n @param amount The amount of tokens to swap.\n @return The amount of tokens received after the swap."},"functionSelector":"4aa06652","id":4598,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"2726:12:18","nodeType":"FunctionDefinition","parameters":{"id":4594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4589,"mutability":"mutable","name":"fromToken","nameLocation":"2747:9:18","nodeType":"VariableDeclaration","scope":4598,"src":"2739:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4588,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4591,"mutability":"mutable","name":"toToken","nameLocation":"2766:7:18","nodeType":"VariableDeclaration","scope":4598,"src":"2758:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4590,"name":"address","nodeType":"ElementaryTypeName","src":"2758:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4593,"mutability":"mutable","name":"amount","nameLocation":"2783:6:18","nodeType":"VariableDeclaration","scope":4598,"src":"2775:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4592,"name":"uint256","nodeType":"ElementaryTypeName","src":"2775:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2738:52:18"},"returnParameters":{"id":4597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4598,"src":"2814:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4595,"name":"uint256","nodeType":"ElementaryTypeName","src":"2814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2813:9:18"},"scope":4639,"src":"2717:106:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4599,"nodeType":"StructuredDocumentation","src":"2831:147:18","text":" @dev Performs rebalance if needed for the given tokens.\n @param poolAddress The address of the token pool to rebalance."},"functionSelector":"5568081a","id":4604,"implemented":false,"kind":"function","modifiers":[],"name":"performRebalanceIfNeeded","nameLocation":"2993:24:18","nodeType":"FunctionDefinition","parameters":{"id":4602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4601,"mutability":"mutable","name":"poolAddress","nameLocation":"3026:11:18","nodeType":"VariableDeclaration","scope":4604,"src":"3018:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4600,"name":"address","nodeType":"ElementaryTypeName","src":"3018:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3017:21:18"},"returnParameters":{"id":4603,"nodeType":"ParameterList","parameters":[],"src":"3047:0:18"},"scope":4639,"src":"2984:64:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4605,"nodeType":"StructuredDocumentation","src":"3056:195:18","text":" @dev Returns an array of pool addresses that contain the given token.\n @param token The address of the token to search for.\n @return An array of pool addresses."},"functionSelector":"ae3cce1c","id":4613,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolsContainingToken","nameLocation":"3266:23:18","nodeType":"FunctionDefinition","parameters":{"id":4608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4607,"mutability":"mutable","name":"token","nameLocation":"3298:5:18","nodeType":"VariableDeclaration","scope":4613,"src":"3290:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4606,"name":"address","nodeType":"ElementaryTypeName","src":"3290:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3289:15:18"},"returnParameters":{"id":4612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4613,"src":"3328:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4609,"name":"address","nodeType":"ElementaryTypeName","src":"3328:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4610,"nodeType":"ArrayTypeName","src":"3328:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3327:18:18"},"scope":4639,"src":"3257:89:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4614,"nodeType":"StructuredDocumentation","src":"3354:98:18","text":" @dev Returns the version of the contract.\n @return The version string."},"functionSelector":"0d8e6e2c","id":4619,"implemented":false,"kind":"function","modifiers":[],"name":"getVersion","nameLocation":"3467:10:18","nodeType":"FunctionDefinition","parameters":{"id":4615,"nodeType":"ParameterList","parameters":[],"src":"3477:2:18"},"returnParameters":{"id":4618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4619,"src":"3503:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4616,"name":"uint64","nodeType":"ElementaryTypeName","src":"3503:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3502:8:18"},"scope":4639,"src":"3458:53:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4620,"nodeType":"StructuredDocumentation","src":"3519:142:18","text":" @dev Returns the reserves of the pool.\n @param pool The address of the pool.\n @return An array of reserves."},"functionSelector":"3e99c1e4","id":4628,"implemented":false,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"3676:11:18","nodeType":"FunctionDefinition","parameters":{"id":4623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4622,"mutability":"mutable","name":"pool","nameLocation":"3696:4:18","nodeType":"VariableDeclaration","scope":4628,"src":"3688:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4621,"name":"address","nodeType":"ElementaryTypeName","src":"3688:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3687:14:18"},"returnParameters":{"id":4627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4628,"src":"3725:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4624,"name":"uint256","nodeType":"ElementaryTypeName","src":"3725:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4625,"nodeType":"ArrayTypeName","src":"3725:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3724:18:18"},"scope":4639,"src":"3667:76:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4629,"nodeType":"StructuredDocumentation","src":"3751:210:18","text":" @dev Returns the reserve of a specific asset in a pool.\n @param pool The address of the pool.\n @param asset The address of the asset.\n @return The reserve of the asset."},"functionSelector":"a3e113fb","id":4638,"implemented":false,"kind":"function","modifiers":[],"name":"getAssetReserve","nameLocation":"3976:15:18","nodeType":"FunctionDefinition","parameters":{"id":4634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4631,"mutability":"mutable","name":"pool","nameLocation":"4000:4:18","nodeType":"VariableDeclaration","scope":4638,"src":"3992:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4630,"name":"address","nodeType":"ElementaryTypeName","src":"3992:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4633,"mutability":"mutable","name":"asset","nameLocation":"4014:5:18","nodeType":"VariableDeclaration","scope":4638,"src":"4006:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4632,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3991:29:18"},"returnParameters":{"id":4637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4638,"src":"4044:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4635,"name":"uint256","nodeType":"ElementaryTypeName","src":"4044:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4043:9:18"},"scope":4639,"src":"3967:86:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4640,"src":"170:3886:18","usedErrors":[],"usedEvents":[]}],"src":"40:4018:18"},"id":18},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Rebalancer.sol","exportedSymbols":{"IBaluniV1Rebalancer":[4724]},"id":4725,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":4641,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Rebalancer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4724,"linearizedBaseContracts":[4724],"name":"IBaluniV1Rebalancer","nameLocation":"77:19:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBaluniV1Rebalancer.RebalanceVars","id":4671,"members":[{"constant":false,"id":4643,"mutability":"mutable","name":"length","nameLocation":"144:6:19","nodeType":"VariableDeclaration","scope":4671,"src":"136:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4642,"name":"uint256","nodeType":"ElementaryTypeName","src":"136:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4645,"mutability":"mutable","name":"totalValue","nameLocation":"169:10:19","nodeType":"VariableDeclaration","scope":4671,"src":"161:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4644,"name":"uint256","nodeType":"ElementaryTypeName","src":"161:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4647,"mutability":"mutable","name":"finalUsdBalance","nameLocation":"198:15:19","nodeType":"VariableDeclaration","scope":4671,"src":"190:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4646,"name":"uint256","nodeType":"ElementaryTypeName","src":"190:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4649,"mutability":"mutable","name":"overweightVaultsLength","nameLocation":"232:22:19","nodeType":"VariableDeclaration","scope":4671,"src":"224:30:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4648,"name":"uint256","nodeType":"ElementaryTypeName","src":"224:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4651,"mutability":"mutable","name":"underweightVaultsLength","nameLocation":"273:23:19","nodeType":"VariableDeclaration","scope":4671,"src":"265:31:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4650,"name":"uint256","nodeType":"ElementaryTypeName","src":"265:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4653,"mutability":"mutable","name":"totalActiveWeight","nameLocation":"315:17:19","nodeType":"VariableDeclaration","scope":4671,"src":"307:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4652,"name":"uint256","nodeType":"ElementaryTypeName","src":"307:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4655,"mutability":"mutable","name":"amountOut","nameLocation":"351:9:19","nodeType":"VariableDeclaration","scope":4671,"src":"343:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4654,"name":"uint256","nodeType":"ElementaryTypeName","src":"343:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4658,"mutability":"mutable","name":"overweightVaults","nameLocation":"381:16:19","nodeType":"VariableDeclaration","scope":4671,"src":"371:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4656,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4657,"nodeType":"ArrayTypeName","src":"371:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4661,"mutability":"mutable","name":"overweightAmounts","nameLocation":"418:17:19","nodeType":"VariableDeclaration","scope":4671,"src":"408:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4659,"name":"uint256","nodeType":"ElementaryTypeName","src":"408:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4660,"nodeType":"ArrayTypeName","src":"408:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4664,"mutability":"mutable","name":"underweightVaults","nameLocation":"456:17:19","nodeType":"VariableDeclaration","scope":4671,"src":"446:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4662,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4663,"nodeType":"ArrayTypeName","src":"446:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4667,"mutability":"mutable","name":"underweightAmounts","nameLocation":"494:18:19","nodeType":"VariableDeclaration","scope":4671,"src":"484:28:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4665,"name":"uint256","nodeType":"ElementaryTypeName","src":"484:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4666,"nodeType":"ArrayTypeName","src":"484:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4670,"mutability":"mutable","name":"balances","nameLocation":"533:8:19","nodeType":"VariableDeclaration","scope":4671,"src":"523:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4668,"name":"uint256","nodeType":"ElementaryTypeName","src":"523:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4669,"nodeType":"ArrayTypeName","src":"523:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"RebalanceVars","nameLocation":"111:13:19","nodeType":"StructDefinition","scope":4724,"src":"104:445:19","visibility":"public"},{"functionSelector":"f0bf7714","id":4691,"implemented":false,"kind":"function","modifiers":[],"name":"rebalance","nameLocation":"584:9:19","nodeType":"FunctionDefinition","parameters":{"id":4689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4674,"mutability":"mutable","name":"balances","nameLocation":"621:8:19","nodeType":"VariableDeclaration","scope":4691,"src":"604:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4672,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4673,"nodeType":"ArrayTypeName","src":"604:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4677,"mutability":"mutable","name":"assets","nameLocation":"659:6:19","nodeType":"VariableDeclaration","scope":4691,"src":"640:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4675,"name":"address","nodeType":"ElementaryTypeName","src":"640:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4676,"nodeType":"ArrayTypeName","src":"640:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4680,"mutability":"mutable","name":"weights","nameLocation":"695:7:19","nodeType":"VariableDeclaration","scope":4691,"src":"676:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4678,"name":"uint256","nodeType":"ElementaryTypeName","src":"676:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4679,"nodeType":"ArrayTypeName","src":"676:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4682,"mutability":"mutable","name":"limit","nameLocation":"721:5:19","nodeType":"VariableDeclaration","scope":4691,"src":"713:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4681,"name":"uint256","nodeType":"ElementaryTypeName","src":"713:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4684,"mutability":"mutable","name":"sender","nameLocation":"745:6:19","nodeType":"VariableDeclaration","scope":4691,"src":"737:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4683,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4686,"mutability":"mutable","name":"receiver","nameLocation":"770:8:19","nodeType":"VariableDeclaration","scope":4691,"src":"762:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4685,"name":"address","nodeType":"ElementaryTypeName","src":"762:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4688,"mutability":"mutable","name":"baseAsset","nameLocation":"797:9:19","nodeType":"VariableDeclaration","scope":4691,"src":"789:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4687,"name":"address","nodeType":"ElementaryTypeName","src":"789:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"593:220:19"},"returnParameters":{"id":4690,"nodeType":"ParameterList","parameters":[],"src":"822:0:19"},"scope":4724,"src":"575:248:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"997146f5","id":4712,"implemented":false,"kind":"function","modifiers":[],"name":"checkRebalance","nameLocation":"840:14:19","nodeType":"FunctionDefinition","parameters":{"id":4707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4694,"mutability":"mutable","name":"balances","nameLocation":"882:8:19","nodeType":"VariableDeclaration","scope":4712,"src":"865:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4692,"name":"uint256","nodeType":"ElementaryTypeName","src":"865:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4693,"nodeType":"ArrayTypeName","src":"865:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4697,"mutability":"mutable","name":"assets","nameLocation":"920:6:19","nodeType":"VariableDeclaration","scope":4712,"src":"901:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4695,"name":"address","nodeType":"ElementaryTypeName","src":"901:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4696,"nodeType":"ArrayTypeName","src":"901:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4700,"mutability":"mutable","name":"weights","nameLocation":"956:7:19","nodeType":"VariableDeclaration","scope":4712,"src":"937:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4698,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4699,"nodeType":"ArrayTypeName","src":"937:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4702,"mutability":"mutable","name":"limit","nameLocation":"982:5:19","nodeType":"VariableDeclaration","scope":4712,"src":"974:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4701,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4704,"mutability":"mutable","name":"sender","nameLocation":"1006:6:19","nodeType":"VariableDeclaration","scope":4712,"src":"998:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4703,"name":"address","nodeType":"ElementaryTypeName","src":"998:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4706,"mutability":"mutable","name":"baseAsset","nameLocation":"1031:9:19","nodeType":"VariableDeclaration","scope":4712,"src":"1023:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4705,"name":"address","nodeType":"ElementaryTypeName","src":"1023:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"854:193:19"},"returnParameters":{"id":4711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4712,"src":"1071:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RebalanceVars_$4671_memory_ptr","typeString":"struct IBaluniV1Rebalancer.RebalanceVars"},"typeName":{"id":4709,"nodeType":"UserDefinedTypeName","pathNode":{"id":4708,"name":"RebalanceVars","nameLocations":["1071:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":4671,"src":"1071:13:19"},"referencedDeclaration":4671,"src":"1071:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_RebalanceVars_$4671_storage_ptr","typeString":"struct IBaluniV1Rebalancer.RebalanceVars"}},"visibility":"internal"}],"src":"1070:22:19"},"scope":4724,"src":"831:262:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"248391ff","id":4723,"implemented":false,"kind":"function","modifiers":[],"name":"convert","nameLocation":"1110:7:19","nodeType":"FunctionDefinition","parameters":{"id":4719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4714,"mutability":"mutable","name":"fromToken","nameLocation":"1126:9:19","nodeType":"VariableDeclaration","scope":4723,"src":"1118:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4713,"name":"address","nodeType":"ElementaryTypeName","src":"1118:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4716,"mutability":"mutable","name":"toToken","nameLocation":"1145:7:19","nodeType":"VariableDeclaration","scope":4723,"src":"1137:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4715,"name":"address","nodeType":"ElementaryTypeName","src":"1137:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4718,"mutability":"mutable","name":"amount","nameLocation":"1162:6:19","nodeType":"VariableDeclaration","scope":4723,"src":"1154:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4717,"name":"uint256","nodeType":"ElementaryTypeName","src":"1154:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1117:52:19"},"returnParameters":{"id":4722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4723,"src":"1193:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4720,"name":"uint256","nodeType":"ElementaryTypeName","src":"1193:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1192:9:19"},"scope":4724,"src":"1101:101:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4725,"src":"67:1138:19","usedErrors":[],"usedEvents":[]}],"src":"40:1167:19"},"id":19},"contracts/interfaces/IBaluniV1Registry.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Registry.sol","exportedSymbols":{"IBaluniV1Registry":[4898]},"id":4899,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":4726,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Registry","contractDependencies":[],"contractKind":"interface","documentation":{"id":4727,"nodeType":"StructuredDocumentation","src":"67:91:20","text":" @title IBaluniV1Registry\n @dev Interface for the BaluniV1Registry contract."},"fullyImplemented":false,"id":4898,"linearizedBaseContracts":[4898],"name":"IBaluniV1Registry","nameLocation":"170:17:20","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e04b677f","id":4732,"implemented":false,"kind":"function","modifiers":[],"name":"setUniswapFactory","nameLocation":"204:17:20","nodeType":"FunctionDefinition","parameters":{"id":4730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4729,"mutability":"mutable","name":"_uniswapFactory","nameLocation":"230:15:20","nodeType":"VariableDeclaration","scope":4732,"src":"222:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4728,"name":"address","nodeType":"ElementaryTypeName","src":"222:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"221:25:20"},"returnParameters":{"id":4731,"nodeType":"ParameterList","parameters":[],"src":"255:0:20"},"scope":4898,"src":"195:61:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bea9849e","id":4737,"implemented":false,"kind":"function","modifiers":[],"name":"setUniswapRouter","nameLocation":"273:16:20","nodeType":"FunctionDefinition","parameters":{"id":4735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4734,"mutability":"mutable","name":"_uniswapRouter","nameLocation":"298:14:20","nodeType":"VariableDeclaration","scope":4737,"src":"290:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4733,"name":"address","nodeType":"ElementaryTypeName","src":"290:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"289:24:20"},"returnParameters":{"id":4736,"nodeType":"ParameterList","parameters":[],"src":"322:0:20"},"scope":4898,"src":"264:59:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f1dccde7","id":4742,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniAgentFactory","nameLocation":"340:21:20","nodeType":"FunctionDefinition","parameters":{"id":4740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4739,"mutability":"mutable","name":"_baluniAgentFactory","nameLocation":"370:19:20","nodeType":"VariableDeclaration","scope":4742,"src":"362:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4738,"name":"address","nodeType":"ElementaryTypeName","src":"362:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"361:29:20"},"returnParameters":{"id":4741,"nodeType":"ParameterList","parameters":[],"src":"399:0:20"},"scope":4898,"src":"331:69:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"588c5b70","id":4747,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniPoolPeriphery","nameLocation":"417:22:20","nodeType":"FunctionDefinition","parameters":{"id":4745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4744,"mutability":"mutable","name":"_baluniPoolPeriphery","nameLocation":"448:20:20","nodeType":"VariableDeclaration","scope":4747,"src":"440:28:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4743,"name":"address","nodeType":"ElementaryTypeName","src":"440:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"439:30:20"},"returnParameters":{"id":4746,"nodeType":"ParameterList","parameters":[],"src":"478:0:20"},"scope":4898,"src":"408:71:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c3f5df5c","id":4752,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniSwapper","nameLocation":"496:16:20","nodeType":"FunctionDefinition","parameters":{"id":4750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4749,"mutability":"mutable","name":"_baluniSwapper","nameLocation":"521:14:20","nodeType":"VariableDeclaration","scope":4752,"src":"513:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4748,"name":"address","nodeType":"ElementaryTypeName","src":"513:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"512:24:20"},"returnParameters":{"id":4751,"nodeType":"ParameterList","parameters":[],"src":"545:0:20"},"scope":4898,"src":"487:59:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f5b84f64","id":4757,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniOracle","nameLocation":"563:15:20","nodeType":"FunctionDefinition","parameters":{"id":4755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4754,"mutability":"mutable","name":"_baluniOracle","nameLocation":"587:13:20","nodeType":"VariableDeclaration","scope":4757,"src":"579:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4753,"name":"address","nodeType":"ElementaryTypeName","src":"579:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"578:23:20"},"returnParameters":{"id":4756,"nodeType":"ParameterList","parameters":[],"src":"610:0:20"},"scope":4898,"src":"554:57:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8267c2c8","id":4762,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniPoolFactory","nameLocation":"628:20:20","nodeType":"FunctionDefinition","parameters":{"id":4760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4759,"mutability":"mutable","name":"_baluniPoolFactory","nameLocation":"657:18:20","nodeType":"VariableDeclaration","scope":4762,"src":"649:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4758,"name":"address","nodeType":"ElementaryTypeName","src":"649:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"648:28:20"},"returnParameters":{"id":4761,"nodeType":"ParameterList","parameters":[],"src":"685:0:20"},"scope":4898,"src":"619:67:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0241bffa","id":4767,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniRebalancer","nameLocation":"703:19:20","nodeType":"FunctionDefinition","parameters":{"id":4765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4764,"mutability":"mutable","name":"_baluniRebalancer","nameLocation":"731:17:20","nodeType":"VariableDeclaration","scope":4767,"src":"723:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4763,"name":"address","nodeType":"ElementaryTypeName","src":"723:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"722:27:20"},"returnParameters":{"id":4766,"nodeType":"ParameterList","parameters":[],"src":"758:0:20"},"scope":4898,"src":"694:65:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"400fb668","id":4772,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniRouter","nameLocation":"776:15:20","nodeType":"FunctionDefinition","parameters":{"id":4770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4769,"mutability":"mutable","name":"_baluniRouter","nameLocation":"800:13:20","nodeType":"VariableDeclaration","scope":4772,"src":"792:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4768,"name":"address","nodeType":"ElementaryTypeName","src":"792:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"791:23:20"},"returnParameters":{"id":4771,"nodeType":"ParameterList","parameters":[],"src":"823:0:20"},"scope":4898,"src":"767:57:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6c43274c","id":4777,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniRegistry","nameLocation":"841:17:20","nodeType":"FunctionDefinition","parameters":{"id":4775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4774,"mutability":"mutable","name":"_baluniRegistry","nameLocation":"867:15:20","nodeType":"VariableDeclaration","scope":4777,"src":"859:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4773,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"858:25:20"},"returnParameters":{"id":4776,"nodeType":"ParameterList","parameters":[],"src":"892:0:20"},"scope":4898,"src":"832:61:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b6fe9cc7","id":4782,"implemented":false,"kind":"function","modifiers":[],"name":"setWNATIVE","nameLocation":"910:10:20","nodeType":"FunctionDefinition","parameters":{"id":4780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4779,"mutability":"mutable","name":"_WNATIVE","nameLocation":"929:8:20","nodeType":"VariableDeclaration","scope":4782,"src":"921:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4778,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"920:18:20"},"returnParameters":{"id":4781,"nodeType":"ParameterList","parameters":[],"src":"947:0:20"},"scope":4898,"src":"901:47:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b3e089a2","id":4787,"implemented":false,"kind":"function","modifiers":[],"name":"setUSDC","nameLocation":"965:7:20","nodeType":"FunctionDefinition","parameters":{"id":4785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4784,"mutability":"mutable","name":"_USDC","nameLocation":"981:5:20","nodeType":"VariableDeclaration","scope":4787,"src":"973:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4783,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:20"},"returnParameters":{"id":4786,"nodeType":"ParameterList","parameters":[],"src":"996:0:20"},"scope":4898,"src":"956:41:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f0f44260","id":4792,"implemented":false,"kind":"function","modifiers":[],"name":"setTreasury","nameLocation":"1014:11:20","nodeType":"FunctionDefinition","parameters":{"id":4790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4789,"mutability":"mutable","name":"_treasury","nameLocation":"1034:9:20","nodeType":"VariableDeclaration","scope":4792,"src":"1026:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4788,"name":"address","nodeType":"ElementaryTypeName","src":"1026:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1025:19:20"},"returnParameters":{"id":4791,"nodeType":"ParameterList","parameters":[],"src":"1053:0:20"},"scope":4898,"src":"1005:49:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c08f786b","id":4797,"implemented":false,"kind":"function","modifiers":[],"name":"set1inchSpotAgg","nameLocation":"1071:15:20","nodeType":"FunctionDefinition","parameters":{"id":4795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4794,"mutability":"mutable","name":"__1inchSpotAgg","nameLocation":"1095:14:20","nodeType":"VariableDeclaration","scope":4797,"src":"1087:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4793,"name":"address","nodeType":"ElementaryTypeName","src":"1087:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1086:24:20"},"returnParameters":{"id":4796,"nodeType":"ParameterList","parameters":[],"src":"1119:0:20"},"scope":4898,"src":"1062:58:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9e6453f8","id":4802,"implemented":false,"kind":"function","modifiers":[],"name":"setBPS_FEE","nameLocation":"1137:10:20","nodeType":"FunctionDefinition","parameters":{"id":4800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4799,"mutability":"mutable","name":"__BPS_FEE","nameLocation":"1156:9:20","nodeType":"VariableDeclaration","scope":4802,"src":"1148:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4798,"name":"uint256","nodeType":"ElementaryTypeName","src":"1148:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1147:19:20"},"returnParameters":{"id":4801,"nodeType":"ParameterList","parameters":[],"src":"1175:0:20"},"scope":4898,"src":"1128:48:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3e6dfa36","id":4807,"implemented":false,"kind":"function","modifiers":[],"name":"getUniswapFactory","nameLocation":"1193:17:20","nodeType":"FunctionDefinition","parameters":{"id":4803,"nodeType":"ParameterList","parameters":[],"src":"1210:2:20"},"returnParameters":{"id":4806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4807,"src":"1236:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4804,"name":"address","nodeType":"ElementaryTypeName","src":"1236:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1235:9:20"},"scope":4898,"src":"1184:61:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"524900b5","id":4812,"implemented":false,"kind":"function","modifiers":[],"name":"getUniswapRouter","nameLocation":"1262:16:20","nodeType":"FunctionDefinition","parameters":{"id":4808,"nodeType":"ParameterList","parameters":[],"src":"1278:2:20"},"returnParameters":{"id":4811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4812,"src":"1304:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4809,"name":"address","nodeType":"ElementaryTypeName","src":"1304:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1303:9:20"},"scope":4898,"src":"1253:60:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"82755ebb","id":4817,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniSwapper","nameLocation":"1330:16:20","nodeType":"FunctionDefinition","parameters":{"id":4813,"nodeType":"ParameterList","parameters":[],"src":"1346:2:20"},"returnParameters":{"id":4816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4817,"src":"1372:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4814,"name":"address","nodeType":"ElementaryTypeName","src":"1372:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1371:9:20"},"scope":4898,"src":"1321:60:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"bb3ba04c","id":4822,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniOracle","nameLocation":"1398:15:20","nodeType":"FunctionDefinition","parameters":{"id":4818,"nodeType":"ParameterList","parameters":[],"src":"1413:2:20"},"returnParameters":{"id":4821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4822,"src":"1439:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4819,"name":"address","nodeType":"ElementaryTypeName","src":"1439:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1438:9:20"},"scope":4898,"src":"1389:59:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f5d2d998","id":4827,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniAgentFactory","nameLocation":"1465:21:20","nodeType":"FunctionDefinition","parameters":{"id":4823,"nodeType":"ParameterList","parameters":[],"src":"1486:2:20"},"returnParameters":{"id":4826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4827,"src":"1512:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4824,"name":"address","nodeType":"ElementaryTypeName","src":"1512:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1511:9:20"},"scope":4898,"src":"1456:65:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1acb6141","id":4832,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniPoolPeriphery","nameLocation":"1538:22:20","nodeType":"FunctionDefinition","parameters":{"id":4828,"nodeType":"ParameterList","parameters":[],"src":"1560:2:20"},"returnParameters":{"id":4831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4832,"src":"1586:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4829,"name":"address","nodeType":"ElementaryTypeName","src":"1586:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1585:9:20"},"scope":4898,"src":"1529:66:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7c6fd308","id":4837,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniPoolFactory","nameLocation":"1612:20:20","nodeType":"FunctionDefinition","parameters":{"id":4833,"nodeType":"ParameterList","parameters":[],"src":"1632:2:20"},"returnParameters":{"id":4836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4837,"src":"1658:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4834,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1657:9:20"},"scope":4898,"src":"1603:64:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cff49d68","id":4842,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniRebalancer","nameLocation":"1684:19:20","nodeType":"FunctionDefinition","parameters":{"id":4838,"nodeType":"ParameterList","parameters":[],"src":"1703:2:20"},"returnParameters":{"id":4841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4842,"src":"1729:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4839,"name":"address","nodeType":"ElementaryTypeName","src":"1729:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1728:9:20"},"scope":4898,"src":"1675:63:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"04cc7325","id":4847,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniRouter","nameLocation":"1755:15:20","nodeType":"FunctionDefinition","parameters":{"id":4843,"nodeType":"ParameterList","parameters":[],"src":"1770:2:20"},"returnParameters":{"id":4846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4847,"src":"1796:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4844,"name":"address","nodeType":"ElementaryTypeName","src":"1796:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1795:9:20"},"scope":4898,"src":"1746:59:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c9aba8ae","id":4852,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniRegistry","nameLocation":"1822:17:20","nodeType":"FunctionDefinition","parameters":{"id":4848,"nodeType":"ParameterList","parameters":[],"src":"1839:2:20"},"returnParameters":{"id":4851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4852,"src":"1865:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4849,"name":"address","nodeType":"ElementaryTypeName","src":"1865:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1864:9:20"},"scope":4898,"src":"1813:61:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6c9c0078","id":4857,"implemented":false,"kind":"function","modifiers":[],"name":"getWNATIVE","nameLocation":"1891:10:20","nodeType":"FunctionDefinition","parameters":{"id":4853,"nodeType":"ParameterList","parameters":[],"src":"1901:2:20"},"returnParameters":{"id":4856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4857,"src":"1927:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4854,"name":"address","nodeType":"ElementaryTypeName","src":"1927:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1926:9:20"},"scope":4898,"src":"1882:54:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1bf01e9b","id":4862,"implemented":false,"kind":"function","modifiers":[],"name":"getUSDC","nameLocation":"1953:7:20","nodeType":"FunctionDefinition","parameters":{"id":4858,"nodeType":"ParameterList","parameters":[],"src":"1960:2:20"},"returnParameters":{"id":4861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4862,"src":"1986:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4859,"name":"address","nodeType":"ElementaryTypeName","src":"1986:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1985:9:20"},"scope":4898,"src":"1944:51:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8e1c3a8a","id":4867,"implemented":false,"kind":"function","modifiers":[],"name":"get1inchSpotAgg","nameLocation":"2012:15:20","nodeType":"FunctionDefinition","parameters":{"id":4863,"nodeType":"ParameterList","parameters":[],"src":"2027:2:20"},"returnParameters":{"id":4866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4867,"src":"2053:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4864,"name":"address","nodeType":"ElementaryTypeName","src":"2053:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2052:9:20"},"scope":4898,"src":"2003:59:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"85462d6f","id":4872,"implemented":false,"kind":"function","modifiers":[],"name":"getBPS_FEE","nameLocation":"2079:10:20","nodeType":"FunctionDefinition","parameters":{"id":4868,"nodeType":"ParameterList","parameters":[],"src":"2089:2:20"},"returnParameters":{"id":4871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4872,"src":"2115:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4869,"name":"uint256","nodeType":"ElementaryTypeName","src":"2115:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2114:9:20"},"scope":4898,"src":"2070:54:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9380fb6f","id":4877,"implemented":false,"kind":"function","modifiers":[],"name":"getMAX_BPS_FEE","nameLocation":"2141:14:20","nodeType":"FunctionDefinition","parameters":{"id":4873,"nodeType":"ParameterList","parameters":[],"src":"2155:2:20"},"returnParameters":{"id":4876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4877,"src":"2181:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4874,"name":"uint256","nodeType":"ElementaryTypeName","src":"2181:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2180:9:20"},"scope":4898,"src":"2132:58:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4f4608a2","id":4882,"implemented":false,"kind":"function","modifiers":[],"name":"getBPS_BASE","nameLocation":"2207:11:20","nodeType":"FunctionDefinition","parameters":{"id":4878,"nodeType":"ParameterList","parameters":[],"src":"2218:2:20"},"returnParameters":{"id":4881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4882,"src":"2244:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4879,"name":"uint256","nodeType":"ElementaryTypeName","src":"2244:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2243:9:20"},"scope":4898,"src":"2198:55:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3b19e84a","id":4887,"implemented":false,"kind":"function","modifiers":[],"name":"getTreasury","nameLocation":"2270:11:20","nodeType":"FunctionDefinition","parameters":{"id":4883,"nodeType":"ParameterList","parameters":[],"src":"2281:2:20"},"returnParameters":{"id":4886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4887,"src":"2307:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4884,"name":"address","nodeType":"ElementaryTypeName","src":"2307:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2306:9:20"},"scope":4898,"src":"2261:55:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cc01e9a6","id":4892,"implemented":false,"kind":"function","modifiers":[],"name":"setStaticOracle","nameLocation":"2333:15:20","nodeType":"FunctionDefinition","parameters":{"id":4890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4889,"mutability":"mutable","name":"_staticOracle","nameLocation":"2357:13:20","nodeType":"VariableDeclaration","scope":4892,"src":"2349:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4888,"name":"address","nodeType":"ElementaryTypeName","src":"2349:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2348:23:20"},"returnParameters":{"id":4891,"nodeType":"ParameterList","parameters":[],"src":"2380:0:20"},"scope":4898,"src":"2324:57:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a5d2236f","id":4897,"implemented":false,"kind":"function","modifiers":[],"name":"getStaticOracle","nameLocation":"2398:15:20","nodeType":"FunctionDefinition","parameters":{"id":4893,"nodeType":"ParameterList","parameters":[],"src":"2413:2:20"},"returnParameters":{"id":4896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4897,"src":"2439:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4894,"name":"address","nodeType":"ElementaryTypeName","src":"2439:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2438:9:20"},"scope":4898,"src":"2389:59:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4899,"src":"160:2291:20","usedErrors":[],"usedEvents":[]}],"src":"40:2413:20"},"id":20}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"stateVariables":{"UPGRADE_INTERFACE_VERSION":{"details":"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."},"__self":{"custom:oz-upgrades-unsafe-allow":"state-variable-immutable"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.","errors":{"ERC1967InvalidAdmin(address)":[{"details":"The `admin` of the proxy is invalid."}],"ERC1967InvalidBeacon(address)":[{"details":"The `beacon` of the proxy is invalid."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}]},"events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"stateVariables":{"ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202ea536ad08b12bac4da368385961ddee2f4d624b0dab738eb233487e42140a6c64736f6c63430008190033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xA5 CALLDATASIZE 0xAD ADDMOD 0xB1 0x2B 0xAC 0x4D LOG3 PUSH9 0x385961DDEE2F4D624B 0xD 0xAB PUSH20 0x8EB233487E42140A6C64736F6C63430008190033 ","sourceMap":"449:6273:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;449:6273:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202ea536ad08b12bac4da368385961ddee2f4d624b0dab738eb233487e42140a6c64736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xA5 CALLDATASIZE 0xAD ADDMOD 0xB1 0x2B 0xAC 0x4D LOG3 PUSH9 0x385961DDEE2F4D624B 0xD 0xAB PUSH20 0x8EB233487E42140A6C64736F6C63430008190033 ","sourceMap":"449:6273:6:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17000","executionCost":"96","totalCost":"17096"},"internal":{"_checkNonPayable()":"infinite","_setAdmin(address)":"infinite","_setBeacon(address)":"infinite","_setImplementation(address)":"infinite","changeAdmin(address)":"infinite","getAdmin()":"infinite","getBeacon()":"infinite","getImplementation()":"infinite","upgradeBeaconToAndCall(address,bytes memory)":"infinite","upgradeToAndCall(address,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1159,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1165,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1167,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1169,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1171,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"AddressInsufficientBalance(address)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f2038cc5b642ee9a57478ee4f1c9222b83a9768ab29523707a16532388131a6564736f6c63430008190033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE SUB DUP13 0xC5 0xB6 TIMESTAMP 0xEE SWAP11 JUMPI SELFBALANCE DUP15 0xE4 CALL 0xC9 0x22 0x2B DUP4 0xA9 PUSH23 0x8AB29523707A16532388131A6564736F6C634300081900 CALLER ","sourceMap":"195:6066:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f2038cc5b642ee9a57478ee4f1c9222b83a9768ab29523707a16532388131a6564736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE SUB DUP13 0xC5 0xB6 TIMESTAMP 0xEE SWAP11 JUMPI SELFBALANCE DUP15 0xE4 CALL 0xC9 0x22 0x2B DUP4 0xA9 PUSH23 0x8AB29523707A16532388131A6564736F6C634300081900 CALLER ","sourceMap":"195:6066:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17000","executionCost":"96","totalCost":"17096"},"internal":{"_revert(bytes memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","errors":{"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2049,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122072f29379d66268d9b1608cb5aaba7b46da6cc1e63794f87e7b8fe627a065dbb964736f6c63430008190033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xF29379D66268D9B1608CB5AABA7B46DA6CC1E6 CALLDATACOPY SWAP5 0xF8 PUSH31 0x7B8FE627A065DBB964736F6C63430008190033000000000000000000000000 ","sourceMap":"1245:2685:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1245:2685:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122072f29379d66268d9b1608cb5aaba7b46da6cc1e63794f87e7b8fe627a065dbb964736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xF29379D66268D9B1608CB5AABA7B46DA6CC1E6 CALLDATACOPY SWAP5 0xF8 PUSH31 0x7B8FE627A065DBB964736F6C63430008190033000000000000000000000000 ","sourceMap":"1245:2685:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17000","executionCost":"96","totalCost":"17096"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/BaluniV1Pool.sol":{"BaluniV1Pool":{"abi":[{"inputs":[{"internalType":"address[]","name":"_assets","type":"address[]"},{"internalType":"uint256[]","name":"_weights","type":"uint256[]"},{"internalType":"uint256","name":"_trigger","type":"uint256"},{"internalType":"address","name":"_registry","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"sharesBurned","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"sharesMinted","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"by","type":"address"},{"indexed":false,"internalType":"address[]","name":"assets","type":"address[]"}],"name":"RebalancePerformed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"fromToken","type":"address"},{"indexed":true,"internalType":"address","name":"toToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"amountsAdded","type":"uint256[]"}],"name":"WeightsRebalanced","type":"event"},{"inputs":[],"name":"ONE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"assetInfos","outputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"weight","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetIndex","type":"uint256"}],"name":"assetLiquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"burn","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"computeTotalValuation","outputs":[{"internalType":"uint256","name":"totalVal","type":"uint256"},{"internalType":"uint256[]","name":"valuations","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAssets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeviation","outputs":[{"internalType":"bool[]","name":"directions","type":"bool[]"},{"internalType":"uint256[]","name":"deviations","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWeights","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isRebalanceNeeded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"performRebalanceIfNeeded","outputs":[{"internalType":"uint256[]","name":"amountsToAdd","type":"uint256[]"},{"internalType":"uint256[]","name":"amountsToRemove","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"rebalanceWeights","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"contract IBaluniV1Registry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"trigger","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"assetLiquidity(uint256)":{"details":"Returns the liquidity of a specific asset in the pool.","params":{"assetIndex":"The index of the asset."},"returns":{"_0":"The liquidity of the asset."}},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"burn(address)":{"details":"Burns the pool tokens and transfers the underlying assets to the specified address.","params":{"to":"The address to transfer the underlying assets to."}},"computeTotalValuation()":{"details":"Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.","returns":{"totalVal":"The total valuation of the pool.","valuations":"An array of individual valuations."}},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"getAmountOut(address,address,uint256)":{"details":"Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.","params":{"amount":"The amount of `fromToken` being swapped.","fromToken":"The address of the token being swapped from.","toToken":"The address of the token being swapped to."},"returns":{"_0":"The amount of `toToken` that will be received."}},"getAssetReserve(address)":{"details":"Returns the reserve amount of the specified asset.","params":{"asset":"The address of the asset."},"returns":{"_0":"The reserve amount of the asset."}},"getAssets()":{"details":"Retrieves the list of assets in the pool.","returns":{"_0":"An array of addresses representing the assets."}},"getDeviation()":{"details":"Returns the deviation between the current weights and target weights of the assets in the pool.","returns":{"directions":"An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight."}},"getReserves()":{"details":"Returns an array of reserves for each asset in the pool.","returns":{"_0":"An array of reserves."}},"getWeights()":{"details":"Retrieves the list of weights associated with the assets in the pool.","returns":{"_0":"An array of uint256 values representing the weights."}},"isRebalanceNeeded()":{"details":"Checks if rebalancing is needed for the pool.","returns":{"_0":"A boolean value indicating whether rebalancing is needed or not."}},"liquidity()":{"details":"Returns the total liquidity of the pool.","returns":{"_0":"The total liquidity of the pool."}},"mint(address,uint256[])":{"details":"Mints new tokens and adds them to the specified address.","params":{"to":"The address to which the new tokens will be minted."},"returns":{"_0":"The amount of tokens minted."}},"name()":{"details":"Returns the name of the token."},"performRebalanceIfNeeded()":{"details":"Performs rebalance"},"rebalanceWeights(address)":{"details":"Rebalances the weights of the pool by calculating the amounts to add for each token, transferring the calculated amounts from the user to the pool, minting the total added liquidity, updating the reserves, and emitting an event to indicate the rebalancing of weights.","params":{"receiver":"The address to receive the minted liquidity tokens."}},"swap(address,address,uint256,address)":{"details":"Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`. Requirements: - `fromToken` and `toToken` must be different tokens. - `amount` must be greater than zero. - Sufficient liquidity of `toToken` must be available in the contract. Emits a `Swap` event with the details of the swap. Updates the reserves after the swap.","params":{"amount":"The amount of `fromToken` to swap.","fromToken":"The address of the token to swap from.","receiver":"The address to receive the swapped tokens.","toToken":"The address of the token to swap to."},"returns":{"amountOut":"The amount of `toToken` received after the swap."}},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."},"unitPrice()":{"details":"Returns the unit price of the pool.","returns":{"_0":"The unit price of the pool."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1188":{"entryPoint":null,"id":1188,"parameterSlots":2,"returnSlots":0},"@_2060":{"entryPoint":null,"id":2060,"parameterSlots":0,"returnSlots":0},"@_2386":{"entryPoint":null,"id":2386,"parameterSlots":4,"returnSlots":0},"@initializeAssets_2531":{"entryPoint":651,"id":2531,"parameterSlots":2,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":1833,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_dyn_fromMemory":{"entryPoint":1860,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":2504,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256t_address_fromMemory":{"entryPoint":1968,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":2610,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":2587,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ced64e7a7e72856969cefe00640aa7f13f8db705f9748f7d3003a20bc61daa4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_391a75680d8ec99739af126cde56833526e4b720a416f24f1d7ee98c294a45b1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5cbb8d647918028d0523fccac550113bbbb71d463bbb8b573c02c32bc5cf2b89__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_795f8eca8a22be2e70f1d9bdebdbf85a1dc43e172c3964e13eac586b45ff2b92__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b3262886d4e83856703b764357b6a852eb26ef34a7982063b49217460e097ddc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ff1ef73e4333da4da038aba1312a1df349427c8859c23d4b6d4a7df22bfc1a19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":1751,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":1799,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2556,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":2237,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2313,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2181,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x32":{"entryPoint":2536,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1731,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:9459:21","nodeType":"YulBlock","src":"0:9459:21","statements":[{"nativeSrc":"6:3:21","nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nativeSrc":"46:95:21","nodeType":"YulBlock","src":"46:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"63:1:21","nodeType":"YulLiteral","src":"63:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"70:3:21","nodeType":"YulLiteral","src":"70:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"75:10:21","nodeType":"YulLiteral","src":"75:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"66:3:21","nodeType":"YulIdentifier","src":"66:3:21"},"nativeSrc":"66:20:21","nodeType":"YulFunctionCall","src":"66:20:21"}],"functionName":{"name":"mstore","nativeSrc":"56:6:21","nodeType":"YulIdentifier","src":"56:6:21"},"nativeSrc":"56:31:21","nodeType":"YulFunctionCall","src":"56:31:21"},"nativeSrc":"56:31:21","nodeType":"YulExpressionStatement","src":"56:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"103:1:21","nodeType":"YulLiteral","src":"103:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"106:4:21","nodeType":"YulLiteral","src":"106:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"96:6:21","nodeType":"YulIdentifier","src":"96:6:21"},"nativeSrc":"96:15:21","nodeType":"YulFunctionCall","src":"96:15:21"},"nativeSrc":"96:15:21","nodeType":"YulExpressionStatement","src":"96:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"127:1:21","nodeType":"YulLiteral","src":"127:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"130:4:21","nodeType":"YulLiteral","src":"130:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"120:6:21","nodeType":"YulIdentifier","src":"120:6:21"},"nativeSrc":"120:15:21","nodeType":"YulFunctionCall","src":"120:15:21"},"nativeSrc":"120:15:21","nodeType":"YulExpressionStatement","src":"120:15:21"}]},"name":"panic_error_0x41","nativeSrc":"14:127:21","nodeType":"YulFunctionDefinition","src":"14:127:21"},{"body":{"nativeSrc":"191:230:21","nodeType":"YulBlock","src":"191:230:21","statements":[{"nativeSrc":"201:19:21","nodeType":"YulAssignment","src":"201:19:21","value":{"arguments":[{"kind":"number","nativeSrc":"217:2:21","nodeType":"YulLiteral","src":"217:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"211:5:21","nodeType":"YulIdentifier","src":"211:5:21"},"nativeSrc":"211:9:21","nodeType":"YulFunctionCall","src":"211:9:21"},"variableNames":[{"name":"memPtr","nativeSrc":"201:6:21","nodeType":"YulIdentifier","src":"201:6:21"}]},{"nativeSrc":"229:58:21","nodeType":"YulVariableDeclaration","src":"229:58:21","value":{"arguments":[{"name":"memPtr","nativeSrc":"251:6:21","nodeType":"YulIdentifier","src":"251:6:21"},{"arguments":[{"arguments":[{"name":"size","nativeSrc":"267:4:21","nodeType":"YulIdentifier","src":"267:4:21"},{"kind":"number","nativeSrc":"273:2:21","nodeType":"YulLiteral","src":"273:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"263:3:21","nodeType":"YulIdentifier","src":"263:3:21"},"nativeSrc":"263:13:21","nodeType":"YulFunctionCall","src":"263:13:21"},{"arguments":[{"kind":"number","nativeSrc":"282:2:21","nodeType":"YulLiteral","src":"282:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"278:3:21","nodeType":"YulIdentifier","src":"278:3:21"},"nativeSrc":"278:7:21","nodeType":"YulFunctionCall","src":"278:7:21"}],"functionName":{"name":"and","nativeSrc":"259:3:21","nodeType":"YulIdentifier","src":"259:3:21"},"nativeSrc":"259:27:21","nodeType":"YulFunctionCall","src":"259:27:21"}],"functionName":{"name":"add","nativeSrc":"247:3:21","nodeType":"YulIdentifier","src":"247:3:21"},"nativeSrc":"247:40:21","nodeType":"YulFunctionCall","src":"247:40:21"},"variables":[{"name":"newFreePtr","nativeSrc":"233:10:21","nodeType":"YulTypedName","src":"233:10:21","type":""}]},{"body":{"nativeSrc":"362:22:21","nodeType":"YulBlock","src":"362:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"364:16:21","nodeType":"YulIdentifier","src":"364:16:21"},"nativeSrc":"364:18:21","nodeType":"YulFunctionCall","src":"364:18:21"},"nativeSrc":"364:18:21","nodeType":"YulExpressionStatement","src":"364:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"305:10:21","nodeType":"YulIdentifier","src":"305:10:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"325:2:21","nodeType":"YulLiteral","src":"325:2:21","type":"","value":"64"},{"kind":"number","nativeSrc":"329:1:21","nodeType":"YulLiteral","src":"329:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"321:3:21","nodeType":"YulIdentifier","src":"321:3:21"},"nativeSrc":"321:10:21","nodeType":"YulFunctionCall","src":"321:10:21"},{"kind":"number","nativeSrc":"333:1:21","nodeType":"YulLiteral","src":"333:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"317:3:21","nodeType":"YulIdentifier","src":"317:3:21"},"nativeSrc":"317:18:21","nodeType":"YulFunctionCall","src":"317:18:21"}],"functionName":{"name":"gt","nativeSrc":"302:2:21","nodeType":"YulIdentifier","src":"302:2:21"},"nativeSrc":"302:34:21","nodeType":"YulFunctionCall","src":"302:34:21"},{"arguments":[{"name":"newFreePtr","nativeSrc":"341:10:21","nodeType":"YulIdentifier","src":"341:10:21"},{"name":"memPtr","nativeSrc":"353:6:21","nodeType":"YulIdentifier","src":"353:6:21"}],"functionName":{"name":"lt","nativeSrc":"338:2:21","nodeType":"YulIdentifier","src":"338:2:21"},"nativeSrc":"338:22:21","nodeType":"YulFunctionCall","src":"338:22:21"}],"functionName":{"name":"or","nativeSrc":"299:2:21","nodeType":"YulIdentifier","src":"299:2:21"},"nativeSrc":"299:62:21","nodeType":"YulFunctionCall","src":"299:62:21"},"nativeSrc":"296:88:21","nodeType":"YulIf","src":"296:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"400:2:21","nodeType":"YulLiteral","src":"400:2:21","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"404:10:21","nodeType":"YulIdentifier","src":"404:10:21"}],"functionName":{"name":"mstore","nativeSrc":"393:6:21","nodeType":"YulIdentifier","src":"393:6:21"},"nativeSrc":"393:22:21","nodeType":"YulFunctionCall","src":"393:22:21"},"nativeSrc":"393:22:21","nodeType":"YulExpressionStatement","src":"393:22:21"}]},"name":"allocate_memory","nativeSrc":"146:275:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"171:4:21","nodeType":"YulTypedName","src":"171:4:21","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"180:6:21","nodeType":"YulTypedName","src":"180:6:21","type":""}],"src":"146:275:21"},{"body":{"nativeSrc":"495:114:21","nodeType":"YulBlock","src":"495:114:21","statements":[{"body":{"nativeSrc":"539:22:21","nodeType":"YulBlock","src":"539:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"541:16:21","nodeType":"YulIdentifier","src":"541:16:21"},"nativeSrc":"541:18:21","nodeType":"YulFunctionCall","src":"541:18:21"},"nativeSrc":"541:18:21","nodeType":"YulExpressionStatement","src":"541:18:21"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"511:6:21","nodeType":"YulIdentifier","src":"511:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"527:2:21","nodeType":"YulLiteral","src":"527:2:21","type":"","value":"64"},{"kind":"number","nativeSrc":"531:1:21","nodeType":"YulLiteral","src":"531:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"523:3:21","nodeType":"YulIdentifier","src":"523:3:21"},"nativeSrc":"523:10:21","nodeType":"YulFunctionCall","src":"523:10:21"},{"kind":"number","nativeSrc":"535:1:21","nodeType":"YulLiteral","src":"535:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"519:3:21","nodeType":"YulIdentifier","src":"519:3:21"},"nativeSrc":"519:18:21","nodeType":"YulFunctionCall","src":"519:18:21"}],"functionName":{"name":"gt","nativeSrc":"508:2:21","nodeType":"YulIdentifier","src":"508:2:21"},"nativeSrc":"508:30:21","nodeType":"YulFunctionCall","src":"508:30:21"},"nativeSrc":"505:56:21","nodeType":"YulIf","src":"505:56:21"},{"nativeSrc":"570:33:21","nodeType":"YulAssignment","src":"570:33:21","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"586:1:21","nodeType":"YulLiteral","src":"586:1:21","type":"","value":"5"},{"name":"length","nativeSrc":"589:6:21","nodeType":"YulIdentifier","src":"589:6:21"}],"functionName":{"name":"shl","nativeSrc":"582:3:21","nodeType":"YulIdentifier","src":"582:3:21"},"nativeSrc":"582:14:21","nodeType":"YulFunctionCall","src":"582:14:21"},{"kind":"number","nativeSrc":"598:4:21","nodeType":"YulLiteral","src":"598:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"578:3:21","nodeType":"YulIdentifier","src":"578:3:21"},"nativeSrc":"578:25:21","nodeType":"YulFunctionCall","src":"578:25:21"},"variableNames":[{"name":"size","nativeSrc":"570:4:21","nodeType":"YulIdentifier","src":"570:4:21"}]}]},"name":"array_allocation_size_array_address_dyn","nativeSrc":"426:183:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"475:6:21","nodeType":"YulTypedName","src":"475:6:21","type":""}],"returnVariables":[{"name":"size","nativeSrc":"486:4:21","nodeType":"YulTypedName","src":"486:4:21","type":""}],"src":"426:183:21"},{"body":{"nativeSrc":"674:117:21","nodeType":"YulBlock","src":"674:117:21","statements":[{"nativeSrc":"684:22:21","nodeType":"YulAssignment","src":"684:22:21","value":{"arguments":[{"name":"offset","nativeSrc":"699:6:21","nodeType":"YulIdentifier","src":"699:6:21"}],"functionName":{"name":"mload","nativeSrc":"693:5:21","nodeType":"YulIdentifier","src":"693:5:21"},"nativeSrc":"693:13:21","nodeType":"YulFunctionCall","src":"693:13:21"},"variableNames":[{"name":"value","nativeSrc":"684:5:21","nodeType":"YulIdentifier","src":"684:5:21"}]},{"body":{"nativeSrc":"769:16:21","nodeType":"YulBlock","src":"769:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"778:1:21","nodeType":"YulLiteral","src":"778:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"781:1:21","nodeType":"YulLiteral","src":"781:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"771:6:21","nodeType":"YulIdentifier","src":"771:6:21"},"nativeSrc":"771:12:21","nodeType":"YulFunctionCall","src":"771:12:21"},"nativeSrc":"771:12:21","nodeType":"YulExpressionStatement","src":"771:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"728:5:21","nodeType":"YulIdentifier","src":"728:5:21"},{"arguments":[{"name":"value","nativeSrc":"739:5:21","nodeType":"YulIdentifier","src":"739:5:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"754:3:21","nodeType":"YulLiteral","src":"754:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"759:1:21","nodeType":"YulLiteral","src":"759:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"750:3:21","nodeType":"YulIdentifier","src":"750:3:21"},"nativeSrc":"750:11:21","nodeType":"YulFunctionCall","src":"750:11:21"},{"kind":"number","nativeSrc":"763:1:21","nodeType":"YulLiteral","src":"763:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"746:3:21","nodeType":"YulIdentifier","src":"746:3:21"},"nativeSrc":"746:19:21","nodeType":"YulFunctionCall","src":"746:19:21"}],"functionName":{"name":"and","nativeSrc":"735:3:21","nodeType":"YulIdentifier","src":"735:3:21"},"nativeSrc":"735:31:21","nodeType":"YulFunctionCall","src":"735:31:21"}],"functionName":{"name":"eq","nativeSrc":"725:2:21","nodeType":"YulIdentifier","src":"725:2:21"},"nativeSrc":"725:42:21","nodeType":"YulFunctionCall","src":"725:42:21"}],"functionName":{"name":"iszero","nativeSrc":"718:6:21","nodeType":"YulIdentifier","src":"718:6:21"},"nativeSrc":"718:50:21","nodeType":"YulFunctionCall","src":"718:50:21"},"nativeSrc":"715:70:21","nodeType":"YulIf","src":"715:70:21"}]},"name":"abi_decode_address_fromMemory","nativeSrc":"614:177:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"653:6:21","nodeType":"YulTypedName","src":"653:6:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"664:5:21","nodeType":"YulTypedName","src":"664:5:21","type":""}],"src":"614:177:21"},{"body":{"nativeSrc":"871:590:21","nodeType":"YulBlock","src":"871:590:21","statements":[{"body":{"nativeSrc":"920:16:21","nodeType":"YulBlock","src":"920:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"929:1:21","nodeType":"YulLiteral","src":"929:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"932:1:21","nodeType":"YulLiteral","src":"932:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"922:6:21","nodeType":"YulIdentifier","src":"922:6:21"},"nativeSrc":"922:12:21","nodeType":"YulFunctionCall","src":"922:12:21"},"nativeSrc":"922:12:21","nodeType":"YulExpressionStatement","src":"922:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"899:6:21","nodeType":"YulIdentifier","src":"899:6:21"},{"kind":"number","nativeSrc":"907:4:21","nodeType":"YulLiteral","src":"907:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"895:3:21","nodeType":"YulIdentifier","src":"895:3:21"},"nativeSrc":"895:17:21","nodeType":"YulFunctionCall","src":"895:17:21"},{"name":"end","nativeSrc":"914:3:21","nodeType":"YulIdentifier","src":"914:3:21"}],"functionName":{"name":"slt","nativeSrc":"891:3:21","nodeType":"YulIdentifier","src":"891:3:21"},"nativeSrc":"891:27:21","nodeType":"YulFunctionCall","src":"891:27:21"}],"functionName":{"name":"iszero","nativeSrc":"884:6:21","nodeType":"YulIdentifier","src":"884:6:21"},"nativeSrc":"884:35:21","nodeType":"YulFunctionCall","src":"884:35:21"},"nativeSrc":"881:55:21","nodeType":"YulIf","src":"881:55:21"},{"nativeSrc":"945:23:21","nodeType":"YulVariableDeclaration","src":"945:23:21","value":{"arguments":[{"name":"offset","nativeSrc":"961:6:21","nodeType":"YulIdentifier","src":"961:6:21"}],"functionName":{"name":"mload","nativeSrc":"955:5:21","nodeType":"YulIdentifier","src":"955:5:21"},"nativeSrc":"955:13:21","nodeType":"YulFunctionCall","src":"955:13:21"},"variables":[{"name":"_1","nativeSrc":"949:2:21","nodeType":"YulTypedName","src":"949:2:21","type":""}]},{"nativeSrc":"977:14:21","nodeType":"YulVariableDeclaration","src":"977:14:21","value":{"kind":"number","nativeSrc":"987:4:21","nodeType":"YulLiteral","src":"987:4:21","type":"","value":"0x20"},"variables":[{"name":"_2","nativeSrc":"981:2:21","nodeType":"YulTypedName","src":"981:2:21","type":""}]},{"nativeSrc":"1000:71:21","nodeType":"YulVariableDeclaration","src":"1000:71:21","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"1067:2:21","nodeType":"YulIdentifier","src":"1067:2:21"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nativeSrc":"1027:39:21","nodeType":"YulIdentifier","src":"1027:39:21"},"nativeSrc":"1027:43:21","nodeType":"YulFunctionCall","src":"1027:43:21"}],"functionName":{"name":"allocate_memory","nativeSrc":"1011:15:21","nodeType":"YulIdentifier","src":"1011:15:21"},"nativeSrc":"1011:60:21","nodeType":"YulFunctionCall","src":"1011:60:21"},"variables":[{"name":"dst","nativeSrc":"1004:3:21","nodeType":"YulTypedName","src":"1004:3:21","type":""}]},{"nativeSrc":"1080:16:21","nodeType":"YulVariableDeclaration","src":"1080:16:21","value":{"name":"dst","nativeSrc":"1093:3:21","nodeType":"YulIdentifier","src":"1093:3:21"},"variables":[{"name":"dst_1","nativeSrc":"1084:5:21","nodeType":"YulTypedName","src":"1084:5:21","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"1112:3:21","nodeType":"YulIdentifier","src":"1112:3:21"},{"name":"_1","nativeSrc":"1117:2:21","nodeType":"YulIdentifier","src":"1117:2:21"}],"functionName":{"name":"mstore","nativeSrc":"1105:6:21","nodeType":"YulIdentifier","src":"1105:6:21"},"nativeSrc":"1105:15:21","nodeType":"YulFunctionCall","src":"1105:15:21"},"nativeSrc":"1105:15:21","nodeType":"YulExpressionStatement","src":"1105:15:21"},{"nativeSrc":"1129:21:21","nodeType":"YulAssignment","src":"1129:21:21","value":{"arguments":[{"name":"dst","nativeSrc":"1140:3:21","nodeType":"YulIdentifier","src":"1140:3:21"},{"kind":"number","nativeSrc":"1145:4:21","nodeType":"YulLiteral","src":"1145:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1136:3:21","nodeType":"YulIdentifier","src":"1136:3:21"},"nativeSrc":"1136:14:21","nodeType":"YulFunctionCall","src":"1136:14:21"},"variableNames":[{"name":"dst","nativeSrc":"1129:3:21","nodeType":"YulIdentifier","src":"1129:3:21"}]},{"nativeSrc":"1159:48:21","nodeType":"YulVariableDeclaration","src":"1159:48:21","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1181:6:21","nodeType":"YulIdentifier","src":"1181:6:21"},{"arguments":[{"kind":"number","nativeSrc":"1193:1:21","nodeType":"YulLiteral","src":"1193:1:21","type":"","value":"5"},{"name":"_1","nativeSrc":"1196:2:21","nodeType":"YulIdentifier","src":"1196:2:21"}],"functionName":{"name":"shl","nativeSrc":"1189:3:21","nodeType":"YulIdentifier","src":"1189:3:21"},"nativeSrc":"1189:10:21","nodeType":"YulFunctionCall","src":"1189:10:21"}],"functionName":{"name":"add","nativeSrc":"1177:3:21","nodeType":"YulIdentifier","src":"1177:3:21"},"nativeSrc":"1177:23:21","nodeType":"YulFunctionCall","src":"1177:23:21"},{"kind":"number","nativeSrc":"1202:4:21","nodeType":"YulLiteral","src":"1202:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1173:3:21","nodeType":"YulIdentifier","src":"1173:3:21"},"nativeSrc":"1173:34:21","nodeType":"YulFunctionCall","src":"1173:34:21"},"variables":[{"name":"srcEnd","nativeSrc":"1163:6:21","nodeType":"YulTypedName","src":"1163:6:21","type":""}]},{"body":{"nativeSrc":"1235:16:21","nodeType":"YulBlock","src":"1235:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1244:1:21","nodeType":"YulLiteral","src":"1244:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1247:1:21","nodeType":"YulLiteral","src":"1247:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1237:6:21","nodeType":"YulIdentifier","src":"1237:6:21"},"nativeSrc":"1237:12:21","nodeType":"YulFunctionCall","src":"1237:12:21"},"nativeSrc":"1237:12:21","nodeType":"YulExpressionStatement","src":"1237:12:21"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"1222:6:21","nodeType":"YulIdentifier","src":"1222:6:21"},{"name":"end","nativeSrc":"1230:3:21","nodeType":"YulIdentifier","src":"1230:3:21"}],"functionName":{"name":"gt","nativeSrc":"1219:2:21","nodeType":"YulIdentifier","src":"1219:2:21"},"nativeSrc":"1219:15:21","nodeType":"YulFunctionCall","src":"1219:15:21"},"nativeSrc":"1216:35:21","nodeType":"YulIf","src":"1216:35:21"},{"nativeSrc":"1260:28:21","nodeType":"YulVariableDeclaration","src":"1260:28:21","value":{"arguments":[{"name":"offset","nativeSrc":"1275:6:21","nodeType":"YulIdentifier","src":"1275:6:21"},{"kind":"number","nativeSrc":"1283:4:21","nodeType":"YulLiteral","src":"1283:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1271:3:21","nodeType":"YulIdentifier","src":"1271:3:21"},"nativeSrc":"1271:17:21","nodeType":"YulFunctionCall","src":"1271:17:21"},"variables":[{"name":"src","nativeSrc":"1264:3:21","nodeType":"YulTypedName","src":"1264:3:21","type":""}]},{"body":{"nativeSrc":"1353:79:21","nodeType":"YulBlock","src":"1353:79:21","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"1374:3:21","nodeType":"YulIdentifier","src":"1374:3:21"},{"arguments":[{"name":"src","nativeSrc":"1385:3:21","nodeType":"YulIdentifier","src":"1385:3:21"}],"functionName":{"name":"mload","nativeSrc":"1379:5:21","nodeType":"YulIdentifier","src":"1379:5:21"},"nativeSrc":"1379:10:21","nodeType":"YulFunctionCall","src":"1379:10:21"}],"functionName":{"name":"mstore","nativeSrc":"1367:6:21","nodeType":"YulIdentifier","src":"1367:6:21"},"nativeSrc":"1367:23:21","nodeType":"YulFunctionCall","src":"1367:23:21"},"nativeSrc":"1367:23:21","nodeType":"YulExpressionStatement","src":"1367:23:21"},{"nativeSrc":"1403:19:21","nodeType":"YulAssignment","src":"1403:19:21","value":{"arguments":[{"name":"dst","nativeSrc":"1414:3:21","nodeType":"YulIdentifier","src":"1414:3:21"},{"name":"_2","nativeSrc":"1419:2:21","nodeType":"YulIdentifier","src":"1419:2:21"}],"functionName":{"name":"add","nativeSrc":"1410:3:21","nodeType":"YulIdentifier","src":"1410:3:21"},"nativeSrc":"1410:12:21","nodeType":"YulFunctionCall","src":"1410:12:21"},"variableNames":[{"name":"dst","nativeSrc":"1403:3:21","nodeType":"YulIdentifier","src":"1403:3:21"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"1308:3:21","nodeType":"YulIdentifier","src":"1308:3:21"},{"name":"srcEnd","nativeSrc":"1313:6:21","nodeType":"YulIdentifier","src":"1313:6:21"}],"functionName":{"name":"lt","nativeSrc":"1305:2:21","nodeType":"YulIdentifier","src":"1305:2:21"},"nativeSrc":"1305:15:21","nodeType":"YulFunctionCall","src":"1305:15:21"},"nativeSrc":"1297:135:21","nodeType":"YulForLoop","post":{"nativeSrc":"1321:23:21","nodeType":"YulBlock","src":"1321:23:21","statements":[{"nativeSrc":"1323:19:21","nodeType":"YulAssignment","src":"1323:19:21","value":{"arguments":[{"name":"src","nativeSrc":"1334:3:21","nodeType":"YulIdentifier","src":"1334:3:21"},{"name":"_2","nativeSrc":"1339:2:21","nodeType":"YulIdentifier","src":"1339:2:21"}],"functionName":{"name":"add","nativeSrc":"1330:3:21","nodeType":"YulIdentifier","src":"1330:3:21"},"nativeSrc":"1330:12:21","nodeType":"YulFunctionCall","src":"1330:12:21"},"variableNames":[{"name":"src","nativeSrc":"1323:3:21","nodeType":"YulIdentifier","src":"1323:3:21"}]}]},"pre":{"nativeSrc":"1301:3:21","nodeType":"YulBlock","src":"1301:3:21","statements":[]},"src":"1297:135:21"},{"nativeSrc":"1441:14:21","nodeType":"YulAssignment","src":"1441:14:21","value":{"name":"dst_1","nativeSrc":"1450:5:21","nodeType":"YulIdentifier","src":"1450:5:21"},"variableNames":[{"name":"array","nativeSrc":"1441:5:21","nodeType":"YulIdentifier","src":"1441:5:21"}]}]},"name":"abi_decode_array_uint256_dyn_fromMemory","nativeSrc":"796:665:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"845:6:21","nodeType":"YulTypedName","src":"845:6:21","type":""},{"name":"end","nativeSrc":"853:3:21","nodeType":"YulTypedName","src":"853:3:21","type":""}],"returnVariables":[{"name":"array","nativeSrc":"861:5:21","nodeType":"YulTypedName","src":"861:5:21","type":""}],"src":"796:665:21"},{"body":{"nativeSrc":"1648:1123:21","nodeType":"YulBlock","src":"1648:1123:21","statements":[{"body":{"nativeSrc":"1695:16:21","nodeType":"YulBlock","src":"1695:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1704:1:21","nodeType":"YulLiteral","src":"1704:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1707:1:21","nodeType":"YulLiteral","src":"1707:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1697:6:21","nodeType":"YulIdentifier","src":"1697:6:21"},"nativeSrc":"1697:12:21","nodeType":"YulFunctionCall","src":"1697:12:21"},"nativeSrc":"1697:12:21","nodeType":"YulExpressionStatement","src":"1697:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1669:7:21","nodeType":"YulIdentifier","src":"1669:7:21"},{"name":"headStart","nativeSrc":"1678:9:21","nodeType":"YulIdentifier","src":"1678:9:21"}],"functionName":{"name":"sub","nativeSrc":"1665:3:21","nodeType":"YulIdentifier","src":"1665:3:21"},"nativeSrc":"1665:23:21","nodeType":"YulFunctionCall","src":"1665:23:21"},{"kind":"number","nativeSrc":"1690:3:21","nodeType":"YulLiteral","src":"1690:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"1661:3:21","nodeType":"YulIdentifier","src":"1661:3:21"},"nativeSrc":"1661:33:21","nodeType":"YulFunctionCall","src":"1661:33:21"},"nativeSrc":"1658:53:21","nodeType":"YulIf","src":"1658:53:21"},{"nativeSrc":"1720:30:21","nodeType":"YulVariableDeclaration","src":"1720:30:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1740:9:21","nodeType":"YulIdentifier","src":"1740:9:21"}],"functionName":{"name":"mload","nativeSrc":"1734:5:21","nodeType":"YulIdentifier","src":"1734:5:21"},"nativeSrc":"1734:16:21","nodeType":"YulFunctionCall","src":"1734:16:21"},"variables":[{"name":"offset","nativeSrc":"1724:6:21","nodeType":"YulTypedName","src":"1724:6:21","type":""}]},{"nativeSrc":"1759:28:21","nodeType":"YulVariableDeclaration","src":"1759:28:21","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1777:2:21","nodeType":"YulLiteral","src":"1777:2:21","type":"","value":"64"},{"kind":"number","nativeSrc":"1781:1:21","nodeType":"YulLiteral","src":"1781:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1773:3:21","nodeType":"YulIdentifier","src":"1773:3:21"},"nativeSrc":"1773:10:21","nodeType":"YulFunctionCall","src":"1773:10:21"},{"kind":"number","nativeSrc":"1785:1:21","nodeType":"YulLiteral","src":"1785:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1769:3:21","nodeType":"YulIdentifier","src":"1769:3:21"},"nativeSrc":"1769:18:21","nodeType":"YulFunctionCall","src":"1769:18:21"},"variables":[{"name":"_1","nativeSrc":"1763:2:21","nodeType":"YulTypedName","src":"1763:2:21","type":""}]},{"body":{"nativeSrc":"1814:16:21","nodeType":"YulBlock","src":"1814:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1823:1:21","nodeType":"YulLiteral","src":"1823:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1826:1:21","nodeType":"YulLiteral","src":"1826:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1816:6:21","nodeType":"YulIdentifier","src":"1816:6:21"},"nativeSrc":"1816:12:21","nodeType":"YulFunctionCall","src":"1816:12:21"},"nativeSrc":"1816:12:21","nodeType":"YulExpressionStatement","src":"1816:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1802:6:21","nodeType":"YulIdentifier","src":"1802:6:21"},{"name":"_1","nativeSrc":"1810:2:21","nodeType":"YulIdentifier","src":"1810:2:21"}],"functionName":{"name":"gt","nativeSrc":"1799:2:21","nodeType":"YulIdentifier","src":"1799:2:21"},"nativeSrc":"1799:14:21","nodeType":"YulFunctionCall","src":"1799:14:21"},"nativeSrc":"1796:34:21","nodeType":"YulIf","src":"1796:34:21"},{"nativeSrc":"1839:32:21","nodeType":"YulVariableDeclaration","src":"1839:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1853:9:21","nodeType":"YulIdentifier","src":"1853:9:21"},{"name":"offset","nativeSrc":"1864:6:21","nodeType":"YulIdentifier","src":"1864:6:21"}],"functionName":{"name":"add","nativeSrc":"1849:3:21","nodeType":"YulIdentifier","src":"1849:3:21"},"nativeSrc":"1849:22:21","nodeType":"YulFunctionCall","src":"1849:22:21"},"variables":[{"name":"_2","nativeSrc":"1843:2:21","nodeType":"YulTypedName","src":"1843:2:21","type":""}]},{"body":{"nativeSrc":"1919:16:21","nodeType":"YulBlock","src":"1919:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1928:1:21","nodeType":"YulLiteral","src":"1928:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1931:1:21","nodeType":"YulLiteral","src":"1931:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1921:6:21","nodeType":"YulIdentifier","src":"1921:6:21"},"nativeSrc":"1921:12:21","nodeType":"YulFunctionCall","src":"1921:12:21"},"nativeSrc":"1921:12:21","nodeType":"YulExpressionStatement","src":"1921:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"1898:2:21","nodeType":"YulIdentifier","src":"1898:2:21"},{"kind":"number","nativeSrc":"1902:4:21","nodeType":"YulLiteral","src":"1902:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1894:3:21","nodeType":"YulIdentifier","src":"1894:3:21"},"nativeSrc":"1894:13:21","nodeType":"YulFunctionCall","src":"1894:13:21"},{"name":"dataEnd","nativeSrc":"1909:7:21","nodeType":"YulIdentifier","src":"1909:7:21"}],"functionName":{"name":"slt","nativeSrc":"1890:3:21","nodeType":"YulIdentifier","src":"1890:3:21"},"nativeSrc":"1890:27:21","nodeType":"YulFunctionCall","src":"1890:27:21"}],"functionName":{"name":"iszero","nativeSrc":"1883:6:21","nodeType":"YulIdentifier","src":"1883:6:21"},"nativeSrc":"1883:35:21","nodeType":"YulFunctionCall","src":"1883:35:21"},"nativeSrc":"1880:55:21","nodeType":"YulIf","src":"1880:55:21"},{"nativeSrc":"1944:19:21","nodeType":"YulVariableDeclaration","src":"1944:19:21","value":{"arguments":[{"name":"_2","nativeSrc":"1960:2:21","nodeType":"YulIdentifier","src":"1960:2:21"}],"functionName":{"name":"mload","nativeSrc":"1954:5:21","nodeType":"YulIdentifier","src":"1954:5:21"},"nativeSrc":"1954:9:21","nodeType":"YulFunctionCall","src":"1954:9:21"},"variables":[{"name":"_3","nativeSrc":"1948:2:21","nodeType":"YulTypedName","src":"1948:2:21","type":""}]},{"nativeSrc":"1972:14:21","nodeType":"YulVariableDeclaration","src":"1972:14:21","value":{"kind":"number","nativeSrc":"1982:4:21","nodeType":"YulLiteral","src":"1982:4:21","type":"","value":"0x20"},"variables":[{"name":"_4","nativeSrc":"1976:2:21","nodeType":"YulTypedName","src":"1976:2:21","type":""}]},{"nativeSrc":"1995:71:21","nodeType":"YulVariableDeclaration","src":"1995:71:21","value":{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"2062:2:21","nodeType":"YulIdentifier","src":"2062:2:21"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nativeSrc":"2022:39:21","nodeType":"YulIdentifier","src":"2022:39:21"},"nativeSrc":"2022:43:21","nodeType":"YulFunctionCall","src":"2022:43:21"}],"functionName":{"name":"allocate_memory","nativeSrc":"2006:15:21","nodeType":"YulIdentifier","src":"2006:15:21"},"nativeSrc":"2006:60:21","nodeType":"YulFunctionCall","src":"2006:60:21"},"variables":[{"name":"dst","nativeSrc":"1999:3:21","nodeType":"YulTypedName","src":"1999:3:21","type":""}]},{"nativeSrc":"2075:16:21","nodeType":"YulVariableDeclaration","src":"2075:16:21","value":{"name":"dst","nativeSrc":"2088:3:21","nodeType":"YulIdentifier","src":"2088:3:21"},"variables":[{"name":"dst_1","nativeSrc":"2079:5:21","nodeType":"YulTypedName","src":"2079:5:21","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"2107:3:21","nodeType":"YulIdentifier","src":"2107:3:21"},{"name":"_3","nativeSrc":"2112:2:21","nodeType":"YulIdentifier","src":"2112:2:21"}],"functionName":{"name":"mstore","nativeSrc":"2100:6:21","nodeType":"YulIdentifier","src":"2100:6:21"},"nativeSrc":"2100:15:21","nodeType":"YulFunctionCall","src":"2100:15:21"},"nativeSrc":"2100:15:21","nodeType":"YulExpressionStatement","src":"2100:15:21"},{"nativeSrc":"2124:19:21","nodeType":"YulAssignment","src":"2124:19:21","value":{"arguments":[{"name":"dst","nativeSrc":"2135:3:21","nodeType":"YulIdentifier","src":"2135:3:21"},{"name":"_4","nativeSrc":"2140:2:21","nodeType":"YulIdentifier","src":"2140:2:21"}],"functionName":{"name":"add","nativeSrc":"2131:3:21","nodeType":"YulIdentifier","src":"2131:3:21"},"nativeSrc":"2131:12:21","nodeType":"YulFunctionCall","src":"2131:12:21"},"variableNames":[{"name":"dst","nativeSrc":"2124:3:21","nodeType":"YulIdentifier","src":"2124:3:21"}]},{"nativeSrc":"2152:42:21","nodeType":"YulVariableDeclaration","src":"2152:42:21","value":{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"2174:2:21","nodeType":"YulIdentifier","src":"2174:2:21"},{"arguments":[{"kind":"number","nativeSrc":"2182:1:21","nodeType":"YulLiteral","src":"2182:1:21","type":"","value":"5"},{"name":"_3","nativeSrc":"2185:2:21","nodeType":"YulIdentifier","src":"2185:2:21"}],"functionName":{"name":"shl","nativeSrc":"2178:3:21","nodeType":"YulIdentifier","src":"2178:3:21"},"nativeSrc":"2178:10:21","nodeType":"YulFunctionCall","src":"2178:10:21"}],"functionName":{"name":"add","nativeSrc":"2170:3:21","nodeType":"YulIdentifier","src":"2170:3:21"},"nativeSrc":"2170:19:21","nodeType":"YulFunctionCall","src":"2170:19:21"},{"name":"_4","nativeSrc":"2191:2:21","nodeType":"YulIdentifier","src":"2191:2:21"}],"functionName":{"name":"add","nativeSrc":"2166:3:21","nodeType":"YulIdentifier","src":"2166:3:21"},"nativeSrc":"2166:28:21","nodeType":"YulFunctionCall","src":"2166:28:21"},"variables":[{"name":"srcEnd","nativeSrc":"2156:6:21","nodeType":"YulTypedName","src":"2156:6:21","type":""}]},{"body":{"nativeSrc":"2226:16:21","nodeType":"YulBlock","src":"2226:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2235:1:21","nodeType":"YulLiteral","src":"2235:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2238:1:21","nodeType":"YulLiteral","src":"2238:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2228:6:21","nodeType":"YulIdentifier","src":"2228:6:21"},"nativeSrc":"2228:12:21","nodeType":"YulFunctionCall","src":"2228:12:21"},"nativeSrc":"2228:12:21","nodeType":"YulExpressionStatement","src":"2228:12:21"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"2209:6:21","nodeType":"YulIdentifier","src":"2209:6:21"},{"name":"dataEnd","nativeSrc":"2217:7:21","nodeType":"YulIdentifier","src":"2217:7:21"}],"functionName":{"name":"gt","nativeSrc":"2206:2:21","nodeType":"YulIdentifier","src":"2206:2:21"},"nativeSrc":"2206:19:21","nodeType":"YulFunctionCall","src":"2206:19:21"},"nativeSrc":"2203:39:21","nodeType":"YulIf","src":"2203:39:21"},{"nativeSrc":"2251:22:21","nodeType":"YulVariableDeclaration","src":"2251:22:21","value":{"arguments":[{"name":"_2","nativeSrc":"2266:2:21","nodeType":"YulIdentifier","src":"2266:2:21"},{"name":"_4","nativeSrc":"2270:2:21","nodeType":"YulIdentifier","src":"2270:2:21"}],"functionName":{"name":"add","nativeSrc":"2262:3:21","nodeType":"YulIdentifier","src":"2262:3:21"},"nativeSrc":"2262:11:21","nodeType":"YulFunctionCall","src":"2262:11:21"},"variables":[{"name":"src","nativeSrc":"2255:3:21","nodeType":"YulTypedName","src":"2255:3:21","type":""}]},{"body":{"nativeSrc":"2338:103:21","nodeType":"YulBlock","src":"2338:103:21","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"2359:3:21","nodeType":"YulIdentifier","src":"2359:3:21"},{"arguments":[{"name":"src","nativeSrc":"2394:3:21","nodeType":"YulIdentifier","src":"2394:3:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"2364:29:21","nodeType":"YulIdentifier","src":"2364:29:21"},"nativeSrc":"2364:34:21","nodeType":"YulFunctionCall","src":"2364:34:21"}],"functionName":{"name":"mstore","nativeSrc":"2352:6:21","nodeType":"YulIdentifier","src":"2352:6:21"},"nativeSrc":"2352:47:21","nodeType":"YulFunctionCall","src":"2352:47:21"},"nativeSrc":"2352:47:21","nodeType":"YulExpressionStatement","src":"2352:47:21"},{"nativeSrc":"2412:19:21","nodeType":"YulAssignment","src":"2412:19:21","value":{"arguments":[{"name":"dst","nativeSrc":"2423:3:21","nodeType":"YulIdentifier","src":"2423:3:21"},{"name":"_4","nativeSrc":"2428:2:21","nodeType":"YulIdentifier","src":"2428:2:21"}],"functionName":{"name":"add","nativeSrc":"2419:3:21","nodeType":"YulIdentifier","src":"2419:3:21"},"nativeSrc":"2419:12:21","nodeType":"YulFunctionCall","src":"2419:12:21"},"variableNames":[{"name":"dst","nativeSrc":"2412:3:21","nodeType":"YulIdentifier","src":"2412:3:21"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"2293:3:21","nodeType":"YulIdentifier","src":"2293:3:21"},{"name":"srcEnd","nativeSrc":"2298:6:21","nodeType":"YulIdentifier","src":"2298:6:21"}],"functionName":{"name":"lt","nativeSrc":"2290:2:21","nodeType":"YulIdentifier","src":"2290:2:21"},"nativeSrc":"2290:15:21","nodeType":"YulFunctionCall","src":"2290:15:21"},"nativeSrc":"2282:159:21","nodeType":"YulForLoop","post":{"nativeSrc":"2306:23:21","nodeType":"YulBlock","src":"2306:23:21","statements":[{"nativeSrc":"2308:19:21","nodeType":"YulAssignment","src":"2308:19:21","value":{"arguments":[{"name":"src","nativeSrc":"2319:3:21","nodeType":"YulIdentifier","src":"2319:3:21"},{"name":"_4","nativeSrc":"2324:2:21","nodeType":"YulIdentifier","src":"2324:2:21"}],"functionName":{"name":"add","nativeSrc":"2315:3:21","nodeType":"YulIdentifier","src":"2315:3:21"},"nativeSrc":"2315:12:21","nodeType":"YulFunctionCall","src":"2315:12:21"},"variableNames":[{"name":"src","nativeSrc":"2308:3:21","nodeType":"YulIdentifier","src":"2308:3:21"}]}]},"pre":{"nativeSrc":"2286:3:21","nodeType":"YulBlock","src":"2286:3:21","statements":[]},"src":"2282:159:21"},{"nativeSrc":"2450:15:21","nodeType":"YulAssignment","src":"2450:15:21","value":{"name":"dst_1","nativeSrc":"2460:5:21","nodeType":"YulIdentifier","src":"2460:5:21"},"variableNames":[{"name":"value0","nativeSrc":"2450:6:21","nodeType":"YulIdentifier","src":"2450:6:21"}]},{"nativeSrc":"2474:41:21","nodeType":"YulVariableDeclaration","src":"2474:41:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2500:9:21","nodeType":"YulIdentifier","src":"2500:9:21"},{"name":"_4","nativeSrc":"2511:2:21","nodeType":"YulIdentifier","src":"2511:2:21"}],"functionName":{"name":"add","nativeSrc":"2496:3:21","nodeType":"YulIdentifier","src":"2496:3:21"},"nativeSrc":"2496:18:21","nodeType":"YulFunctionCall","src":"2496:18:21"}],"functionName":{"name":"mload","nativeSrc":"2490:5:21","nodeType":"YulIdentifier","src":"2490:5:21"},"nativeSrc":"2490:25:21","nodeType":"YulFunctionCall","src":"2490:25:21"},"variables":[{"name":"offset_1","nativeSrc":"2478:8:21","nodeType":"YulTypedName","src":"2478:8:21","type":""}]},{"body":{"nativeSrc":"2544:16:21","nodeType":"YulBlock","src":"2544:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2553:1:21","nodeType":"YulLiteral","src":"2553:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2556:1:21","nodeType":"YulLiteral","src":"2556:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2546:6:21","nodeType":"YulIdentifier","src":"2546:6:21"},"nativeSrc":"2546:12:21","nodeType":"YulFunctionCall","src":"2546:12:21"},"nativeSrc":"2546:12:21","nodeType":"YulExpressionStatement","src":"2546:12:21"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"2530:8:21","nodeType":"YulIdentifier","src":"2530:8:21"},{"name":"_1","nativeSrc":"2540:2:21","nodeType":"YulIdentifier","src":"2540:2:21"}],"functionName":{"name":"gt","nativeSrc":"2527:2:21","nodeType":"YulIdentifier","src":"2527:2:21"},"nativeSrc":"2527:16:21","nodeType":"YulFunctionCall","src":"2527:16:21"},"nativeSrc":"2524:36:21","nodeType":"YulIf","src":"2524:36:21"},{"nativeSrc":"2569:84:21","nodeType":"YulAssignment","src":"2569:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2623:9:21","nodeType":"YulIdentifier","src":"2623:9:21"},{"name":"offset_1","nativeSrc":"2634:8:21","nodeType":"YulIdentifier","src":"2634:8:21"}],"functionName":{"name":"add","nativeSrc":"2619:3:21","nodeType":"YulIdentifier","src":"2619:3:21"},"nativeSrc":"2619:24:21","nodeType":"YulFunctionCall","src":"2619:24:21"},{"name":"dataEnd","nativeSrc":"2645:7:21","nodeType":"YulIdentifier","src":"2645:7:21"}],"functionName":{"name":"abi_decode_array_uint256_dyn_fromMemory","nativeSrc":"2579:39:21","nodeType":"YulIdentifier","src":"2579:39:21"},"nativeSrc":"2579:74:21","nodeType":"YulFunctionCall","src":"2579:74:21"},"variableNames":[{"name":"value1","nativeSrc":"2569:6:21","nodeType":"YulIdentifier","src":"2569:6:21"}]},{"nativeSrc":"2662:35:21","nodeType":"YulAssignment","src":"2662:35:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2682:9:21","nodeType":"YulIdentifier","src":"2682:9:21"},{"kind":"number","nativeSrc":"2693:2:21","nodeType":"YulLiteral","src":"2693:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2678:3:21","nodeType":"YulIdentifier","src":"2678:3:21"},"nativeSrc":"2678:18:21","nodeType":"YulFunctionCall","src":"2678:18:21"}],"functionName":{"name":"mload","nativeSrc":"2672:5:21","nodeType":"YulIdentifier","src":"2672:5:21"},"nativeSrc":"2672:25:21","nodeType":"YulFunctionCall","src":"2672:25:21"},"variableNames":[{"name":"value2","nativeSrc":"2662:6:21","nodeType":"YulIdentifier","src":"2662:6:21"}]},{"nativeSrc":"2706:59:21","nodeType":"YulAssignment","src":"2706:59:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2750:9:21","nodeType":"YulIdentifier","src":"2750:9:21"},{"kind":"number","nativeSrc":"2761:2:21","nodeType":"YulLiteral","src":"2761:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2746:3:21","nodeType":"YulIdentifier","src":"2746:3:21"},"nativeSrc":"2746:18:21","nodeType":"YulFunctionCall","src":"2746:18:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"2716:29:21","nodeType":"YulIdentifier","src":"2716:29:21"},"nativeSrc":"2716:49:21","nodeType":"YulFunctionCall","src":"2716:49:21"},"variableNames":[{"name":"value3","nativeSrc":"2706:6:21","nodeType":"YulIdentifier","src":"2706:6:21"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256t_address_fromMemory","nativeSrc":"1466:1305:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1590:9:21","nodeType":"YulTypedName","src":"1590:9:21","type":""},{"name":"dataEnd","nativeSrc":"1601:7:21","nodeType":"YulTypedName","src":"1601:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1613:6:21","nodeType":"YulTypedName","src":"1613:6:21","type":""},{"name":"value1","nativeSrc":"1621:6:21","nodeType":"YulTypedName","src":"1621:6:21","type":""},{"name":"value2","nativeSrc":"1629:6:21","nodeType":"YulTypedName","src":"1629:6:21","type":""},{"name":"value3","nativeSrc":"1637:6:21","nodeType":"YulTypedName","src":"1637:6:21","type":""}],"src":"1466:1305:21"},{"body":{"nativeSrc":"2831:325:21","nodeType":"YulBlock","src":"2831:325:21","statements":[{"nativeSrc":"2841:22:21","nodeType":"YulAssignment","src":"2841:22:21","value":{"arguments":[{"kind":"number","nativeSrc":"2855:1:21","nodeType":"YulLiteral","src":"2855:1:21","type":"","value":"1"},{"name":"data","nativeSrc":"2858:4:21","nodeType":"YulIdentifier","src":"2858:4:21"}],"functionName":{"name":"shr","nativeSrc":"2851:3:21","nodeType":"YulIdentifier","src":"2851:3:21"},"nativeSrc":"2851:12:21","nodeType":"YulFunctionCall","src":"2851:12:21"},"variableNames":[{"name":"length","nativeSrc":"2841:6:21","nodeType":"YulIdentifier","src":"2841:6:21"}]},{"nativeSrc":"2872:38:21","nodeType":"YulVariableDeclaration","src":"2872:38:21","value":{"arguments":[{"name":"data","nativeSrc":"2902:4:21","nodeType":"YulIdentifier","src":"2902:4:21"},{"kind":"number","nativeSrc":"2908:1:21","nodeType":"YulLiteral","src":"2908:1:21","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"2898:3:21","nodeType":"YulIdentifier","src":"2898:3:21"},"nativeSrc":"2898:12:21","nodeType":"YulFunctionCall","src":"2898:12:21"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"2876:18:21","nodeType":"YulTypedName","src":"2876:18:21","type":""}]},{"body":{"nativeSrc":"2949:31:21","nodeType":"YulBlock","src":"2949:31:21","statements":[{"nativeSrc":"2951:27:21","nodeType":"YulAssignment","src":"2951:27:21","value":{"arguments":[{"name":"length","nativeSrc":"2965:6:21","nodeType":"YulIdentifier","src":"2965:6:21"},{"kind":"number","nativeSrc":"2973:4:21","nodeType":"YulLiteral","src":"2973:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"2961:3:21","nodeType":"YulIdentifier","src":"2961:3:21"},"nativeSrc":"2961:17:21","nodeType":"YulFunctionCall","src":"2961:17:21"},"variableNames":[{"name":"length","nativeSrc":"2951:6:21","nodeType":"YulIdentifier","src":"2951:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2929:18:21","nodeType":"YulIdentifier","src":"2929:18:21"}],"functionName":{"name":"iszero","nativeSrc":"2922:6:21","nodeType":"YulIdentifier","src":"2922:6:21"},"nativeSrc":"2922:26:21","nodeType":"YulFunctionCall","src":"2922:26:21"},"nativeSrc":"2919:61:21","nodeType":"YulIf","src":"2919:61:21"},{"body":{"nativeSrc":"3039:111:21","nodeType":"YulBlock","src":"3039:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3060:1:21","nodeType":"YulLiteral","src":"3060:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3067:3:21","nodeType":"YulLiteral","src":"3067:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"3072:10:21","nodeType":"YulLiteral","src":"3072:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3063:3:21","nodeType":"YulIdentifier","src":"3063:3:21"},"nativeSrc":"3063:20:21","nodeType":"YulFunctionCall","src":"3063:20:21"}],"functionName":{"name":"mstore","nativeSrc":"3053:6:21","nodeType":"YulIdentifier","src":"3053:6:21"},"nativeSrc":"3053:31:21","nodeType":"YulFunctionCall","src":"3053:31:21"},"nativeSrc":"3053:31:21","nodeType":"YulExpressionStatement","src":"3053:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3104:1:21","nodeType":"YulLiteral","src":"3104:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"3107:4:21","nodeType":"YulLiteral","src":"3107:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"3097:6:21","nodeType":"YulIdentifier","src":"3097:6:21"},"nativeSrc":"3097:15:21","nodeType":"YulFunctionCall","src":"3097:15:21"},"nativeSrc":"3097:15:21","nodeType":"YulExpressionStatement","src":"3097:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3132:1:21","nodeType":"YulLiteral","src":"3132:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3135:4:21","nodeType":"YulLiteral","src":"3135:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3125:6:21","nodeType":"YulIdentifier","src":"3125:6:21"},"nativeSrc":"3125:15:21","nodeType":"YulFunctionCall","src":"3125:15:21"},"nativeSrc":"3125:15:21","nodeType":"YulExpressionStatement","src":"3125:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2995:18:21","nodeType":"YulIdentifier","src":"2995:18:21"},{"arguments":[{"name":"length","nativeSrc":"3018:6:21","nodeType":"YulIdentifier","src":"3018:6:21"},{"kind":"number","nativeSrc":"3026:2:21","nodeType":"YulLiteral","src":"3026:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"3015:2:21","nodeType":"YulIdentifier","src":"3015:2:21"},"nativeSrc":"3015:14:21","nodeType":"YulFunctionCall","src":"3015:14:21"}],"functionName":{"name":"eq","nativeSrc":"2992:2:21","nodeType":"YulIdentifier","src":"2992:2:21"},"nativeSrc":"2992:38:21","nodeType":"YulFunctionCall","src":"2992:38:21"},"nativeSrc":"2989:161:21","nodeType":"YulIf","src":"2989:161:21"}]},"name":"extract_byte_array_length","nativeSrc":"2776:380:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"2811:4:21","nodeType":"YulTypedName","src":"2811:4:21","type":""}],"returnVariables":[{"name":"length","nativeSrc":"2820:6:21","nodeType":"YulTypedName","src":"2820:6:21","type":""}],"src":"2776:380:21"},{"body":{"nativeSrc":"3217:65:21","nodeType":"YulBlock","src":"3217:65:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3234:1:21","nodeType":"YulLiteral","src":"3234:1:21","type":"","value":"0"},{"name":"ptr","nativeSrc":"3237:3:21","nodeType":"YulIdentifier","src":"3237:3:21"}],"functionName":{"name":"mstore","nativeSrc":"3227:6:21","nodeType":"YulIdentifier","src":"3227:6:21"},"nativeSrc":"3227:14:21","nodeType":"YulFunctionCall","src":"3227:14:21"},"nativeSrc":"3227:14:21","nodeType":"YulExpressionStatement","src":"3227:14:21"},{"nativeSrc":"3250:26:21","nodeType":"YulAssignment","src":"3250:26:21","value":{"arguments":[{"kind":"number","nativeSrc":"3268:1:21","nodeType":"YulLiteral","src":"3268:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3271:4:21","nodeType":"YulLiteral","src":"3271:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"3258:9:21","nodeType":"YulIdentifier","src":"3258:9:21"},"nativeSrc":"3258:18:21","nodeType":"YulFunctionCall","src":"3258:18:21"},"variableNames":[{"name":"data","nativeSrc":"3250:4:21","nodeType":"YulIdentifier","src":"3250:4:21"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"3161:121:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"3200:3:21","nodeType":"YulTypedName","src":"3200:3:21","type":""}],"returnVariables":[{"name":"data","nativeSrc":"3208:4:21","nodeType":"YulTypedName","src":"3208:4:21","type":""}],"src":"3161:121:21"},{"body":{"nativeSrc":"3368:437:21","nodeType":"YulBlock","src":"3368:437:21","statements":[{"body":{"nativeSrc":"3401:398:21","nodeType":"YulBlock","src":"3401:398:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3422:1:21","nodeType":"YulLiteral","src":"3422:1:21","type":"","value":"0"},{"name":"array","nativeSrc":"3425:5:21","nodeType":"YulIdentifier","src":"3425:5:21"}],"functionName":{"name":"mstore","nativeSrc":"3415:6:21","nodeType":"YulIdentifier","src":"3415:6:21"},"nativeSrc":"3415:16:21","nodeType":"YulFunctionCall","src":"3415:16:21"},"nativeSrc":"3415:16:21","nodeType":"YulExpressionStatement","src":"3415:16:21"},{"nativeSrc":"3444:30:21","nodeType":"YulVariableDeclaration","src":"3444:30:21","value":{"arguments":[{"kind":"number","nativeSrc":"3466:1:21","nodeType":"YulLiteral","src":"3466:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3469:4:21","nodeType":"YulLiteral","src":"3469:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"3456:9:21","nodeType":"YulIdentifier","src":"3456:9:21"},"nativeSrc":"3456:18:21","nodeType":"YulFunctionCall","src":"3456:18:21"},"variables":[{"name":"data","nativeSrc":"3448:4:21","nodeType":"YulTypedName","src":"3448:4:21","type":""}]},{"nativeSrc":"3487:57:21","nodeType":"YulVariableDeclaration","src":"3487:57:21","value":{"arguments":[{"name":"data","nativeSrc":"3510:4:21","nodeType":"YulIdentifier","src":"3510:4:21"},{"arguments":[{"kind":"number","nativeSrc":"3520:1:21","nodeType":"YulLiteral","src":"3520:1:21","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"3527:10:21","nodeType":"YulIdentifier","src":"3527:10:21"},{"kind":"number","nativeSrc":"3539:2:21","nodeType":"YulLiteral","src":"3539:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3523:3:21","nodeType":"YulIdentifier","src":"3523:3:21"},"nativeSrc":"3523:19:21","nodeType":"YulFunctionCall","src":"3523:19:21"}],"functionName":{"name":"shr","nativeSrc":"3516:3:21","nodeType":"YulIdentifier","src":"3516:3:21"},"nativeSrc":"3516:27:21","nodeType":"YulFunctionCall","src":"3516:27:21"}],"functionName":{"name":"add","nativeSrc":"3506:3:21","nodeType":"YulIdentifier","src":"3506:3:21"},"nativeSrc":"3506:38:21","nodeType":"YulFunctionCall","src":"3506:38:21"},"variables":[{"name":"deleteStart","nativeSrc":"3491:11:21","nodeType":"YulTypedName","src":"3491:11:21","type":""}]},{"body":{"nativeSrc":"3581:23:21","nodeType":"YulBlock","src":"3581:23:21","statements":[{"nativeSrc":"3583:19:21","nodeType":"YulAssignment","src":"3583:19:21","value":{"name":"data","nativeSrc":"3598:4:21","nodeType":"YulIdentifier","src":"3598:4:21"},"variableNames":[{"name":"deleteStart","nativeSrc":"3583:11:21","nodeType":"YulIdentifier","src":"3583:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"3563:10:21","nodeType":"YulIdentifier","src":"3563:10:21"},{"kind":"number","nativeSrc":"3575:4:21","nodeType":"YulLiteral","src":"3575:4:21","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"3560:2:21","nodeType":"YulIdentifier","src":"3560:2:21"},"nativeSrc":"3560:20:21","nodeType":"YulFunctionCall","src":"3560:20:21"},"nativeSrc":"3557:47:21","nodeType":"YulIf","src":"3557:47:21"},{"nativeSrc":"3617:41:21","nodeType":"YulVariableDeclaration","src":"3617:41:21","value":{"arguments":[{"name":"data","nativeSrc":"3631:4:21","nodeType":"YulIdentifier","src":"3631:4:21"},{"arguments":[{"kind":"number","nativeSrc":"3641:1:21","nodeType":"YulLiteral","src":"3641:1:21","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"3648:3:21","nodeType":"YulIdentifier","src":"3648:3:21"},{"kind":"number","nativeSrc":"3653:2:21","nodeType":"YulLiteral","src":"3653:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3644:3:21","nodeType":"YulIdentifier","src":"3644:3:21"},"nativeSrc":"3644:12:21","nodeType":"YulFunctionCall","src":"3644:12:21"}],"functionName":{"name":"shr","nativeSrc":"3637:3:21","nodeType":"YulIdentifier","src":"3637:3:21"},"nativeSrc":"3637:20:21","nodeType":"YulFunctionCall","src":"3637:20:21"}],"functionName":{"name":"add","nativeSrc":"3627:3:21","nodeType":"YulIdentifier","src":"3627:3:21"},"nativeSrc":"3627:31:21","nodeType":"YulFunctionCall","src":"3627:31:21"},"variables":[{"name":"_1","nativeSrc":"3621:2:21","nodeType":"YulTypedName","src":"3621:2:21","type":""}]},{"nativeSrc":"3671:24:21","nodeType":"YulVariableDeclaration","src":"3671:24:21","value":{"name":"deleteStart","nativeSrc":"3684:11:21","nodeType":"YulIdentifier","src":"3684:11:21"},"variables":[{"name":"start","nativeSrc":"3675:5:21","nodeType":"YulTypedName","src":"3675:5:21","type":""}]},{"body":{"nativeSrc":"3769:20:21","nodeType":"YulBlock","src":"3769:20:21","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"3778:5:21","nodeType":"YulIdentifier","src":"3778:5:21"},{"kind":"number","nativeSrc":"3785:1:21","nodeType":"YulLiteral","src":"3785:1:21","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"3771:6:21","nodeType":"YulIdentifier","src":"3771:6:21"},"nativeSrc":"3771:16:21","nodeType":"YulFunctionCall","src":"3771:16:21"},"nativeSrc":"3771:16:21","nodeType":"YulExpressionStatement","src":"3771:16:21"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"3719:5:21","nodeType":"YulIdentifier","src":"3719:5:21"},{"name":"_1","nativeSrc":"3726:2:21","nodeType":"YulIdentifier","src":"3726:2:21"}],"functionName":{"name":"lt","nativeSrc":"3716:2:21","nodeType":"YulIdentifier","src":"3716:2:21"},"nativeSrc":"3716:13:21","nodeType":"YulFunctionCall","src":"3716:13:21"},"nativeSrc":"3708:81:21","nodeType":"YulForLoop","post":{"nativeSrc":"3730:26:21","nodeType":"YulBlock","src":"3730:26:21","statements":[{"nativeSrc":"3732:22:21","nodeType":"YulAssignment","src":"3732:22:21","value":{"arguments":[{"name":"start","nativeSrc":"3745:5:21","nodeType":"YulIdentifier","src":"3745:5:21"},{"kind":"number","nativeSrc":"3752:1:21","nodeType":"YulLiteral","src":"3752:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3741:3:21","nodeType":"YulIdentifier","src":"3741:3:21"},"nativeSrc":"3741:13:21","nodeType":"YulFunctionCall","src":"3741:13:21"},"variableNames":[{"name":"start","nativeSrc":"3732:5:21","nodeType":"YulIdentifier","src":"3732:5:21"}]}]},"pre":{"nativeSrc":"3712:3:21","nodeType":"YulBlock","src":"3712:3:21","statements":[]},"src":"3708:81:21"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"3384:3:21","nodeType":"YulIdentifier","src":"3384:3:21"},{"kind":"number","nativeSrc":"3389:2:21","nodeType":"YulLiteral","src":"3389:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"3381:2:21","nodeType":"YulIdentifier","src":"3381:2:21"},"nativeSrc":"3381:11:21","nodeType":"YulFunctionCall","src":"3381:11:21"},"nativeSrc":"3378:421:21","nodeType":"YulIf","src":"3378:421:21"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"3287:518:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"3340:5:21","nodeType":"YulTypedName","src":"3340:5:21","type":""},{"name":"len","nativeSrc":"3347:3:21","nodeType":"YulTypedName","src":"3347:3:21","type":""},{"name":"startIndex","nativeSrc":"3352:10:21","nodeType":"YulTypedName","src":"3352:10:21","type":""}],"src":"3287:518:21"},{"body":{"nativeSrc":"3895:81:21","nodeType":"YulBlock","src":"3895:81:21","statements":[{"nativeSrc":"3905:65:21","nodeType":"YulAssignment","src":"3905:65:21","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"3920:4:21","nodeType":"YulIdentifier","src":"3920:4:21"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3938:1:21","nodeType":"YulLiteral","src":"3938:1:21","type":"","value":"3"},{"name":"len","nativeSrc":"3941:3:21","nodeType":"YulIdentifier","src":"3941:3:21"}],"functionName":{"name":"shl","nativeSrc":"3934:3:21","nodeType":"YulIdentifier","src":"3934:3:21"},"nativeSrc":"3934:11:21","nodeType":"YulFunctionCall","src":"3934:11:21"},{"arguments":[{"kind":"number","nativeSrc":"3951:1:21","nodeType":"YulLiteral","src":"3951:1:21","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3947:3:21","nodeType":"YulIdentifier","src":"3947:3:21"},"nativeSrc":"3947:6:21","nodeType":"YulFunctionCall","src":"3947:6:21"}],"functionName":{"name":"shr","nativeSrc":"3930:3:21","nodeType":"YulIdentifier","src":"3930:3:21"},"nativeSrc":"3930:24:21","nodeType":"YulFunctionCall","src":"3930:24:21"}],"functionName":{"name":"not","nativeSrc":"3926:3:21","nodeType":"YulIdentifier","src":"3926:3:21"},"nativeSrc":"3926:29:21","nodeType":"YulFunctionCall","src":"3926:29:21"}],"functionName":{"name":"and","nativeSrc":"3916:3:21","nodeType":"YulIdentifier","src":"3916:3:21"},"nativeSrc":"3916:40:21","nodeType":"YulFunctionCall","src":"3916:40:21"},{"arguments":[{"kind":"number","nativeSrc":"3962:1:21","nodeType":"YulLiteral","src":"3962:1:21","type":"","value":"1"},{"name":"len","nativeSrc":"3965:3:21","nodeType":"YulIdentifier","src":"3965:3:21"}],"functionName":{"name":"shl","nativeSrc":"3958:3:21","nodeType":"YulIdentifier","src":"3958:3:21"},"nativeSrc":"3958:11:21","nodeType":"YulFunctionCall","src":"3958:11:21"}],"functionName":{"name":"or","nativeSrc":"3913:2:21","nodeType":"YulIdentifier","src":"3913:2:21"},"nativeSrc":"3913:57:21","nodeType":"YulFunctionCall","src":"3913:57:21"},"variableNames":[{"name":"used","nativeSrc":"3905:4:21","nodeType":"YulIdentifier","src":"3905:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"3810:166:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3872:4:21","nodeType":"YulTypedName","src":"3872:4:21","type":""},{"name":"len","nativeSrc":"3878:3:21","nodeType":"YulTypedName","src":"3878:3:21","type":""}],"returnVariables":[{"name":"used","nativeSrc":"3886:4:21","nodeType":"YulTypedName","src":"3886:4:21","type":""}],"src":"3810:166:21"},{"body":{"nativeSrc":"4077:1249:21","nodeType":"YulBlock","src":"4077:1249:21","statements":[{"nativeSrc":"4087:24:21","nodeType":"YulVariableDeclaration","src":"4087:24:21","value":{"arguments":[{"name":"src","nativeSrc":"4107:3:21","nodeType":"YulIdentifier","src":"4107:3:21"}],"functionName":{"name":"mload","nativeSrc":"4101:5:21","nodeType":"YulIdentifier","src":"4101:5:21"},"nativeSrc":"4101:10:21","nodeType":"YulFunctionCall","src":"4101:10:21"},"variables":[{"name":"newLen","nativeSrc":"4091:6:21","nodeType":"YulTypedName","src":"4091:6:21","type":""}]},{"body":{"nativeSrc":"4154:22:21","nodeType":"YulBlock","src":"4154:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4156:16:21","nodeType":"YulIdentifier","src":"4156:16:21"},"nativeSrc":"4156:18:21","nodeType":"YulFunctionCall","src":"4156:18:21"},"nativeSrc":"4156:18:21","nodeType":"YulExpressionStatement","src":"4156:18:21"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"4126:6:21","nodeType":"YulIdentifier","src":"4126:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4142:2:21","nodeType":"YulLiteral","src":"4142:2:21","type":"","value":"64"},{"kind":"number","nativeSrc":"4146:1:21","nodeType":"YulLiteral","src":"4146:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4138:3:21","nodeType":"YulIdentifier","src":"4138:3:21"},"nativeSrc":"4138:10:21","nodeType":"YulFunctionCall","src":"4138:10:21"},{"kind":"number","nativeSrc":"4150:1:21","nodeType":"YulLiteral","src":"4150:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4134:3:21","nodeType":"YulIdentifier","src":"4134:3:21"},"nativeSrc":"4134:18:21","nodeType":"YulFunctionCall","src":"4134:18:21"}],"functionName":{"name":"gt","nativeSrc":"4123:2:21","nodeType":"YulIdentifier","src":"4123:2:21"},"nativeSrc":"4123:30:21","nodeType":"YulFunctionCall","src":"4123:30:21"},"nativeSrc":"4120:56:21","nodeType":"YulIf","src":"4120:56:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4229:4:21","nodeType":"YulIdentifier","src":"4229:4:21"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"4267:4:21","nodeType":"YulIdentifier","src":"4267:4:21"}],"functionName":{"name":"sload","nativeSrc":"4261:5:21","nodeType":"YulIdentifier","src":"4261:5:21"},"nativeSrc":"4261:11:21","nodeType":"YulFunctionCall","src":"4261:11:21"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"4235:25:21","nodeType":"YulIdentifier","src":"4235:25:21"},"nativeSrc":"4235:38:21","nodeType":"YulFunctionCall","src":"4235:38:21"},{"name":"newLen","nativeSrc":"4275:6:21","nodeType":"YulIdentifier","src":"4275:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"4185:43:21","nodeType":"YulIdentifier","src":"4185:43:21"},"nativeSrc":"4185:97:21","nodeType":"YulFunctionCall","src":"4185:97:21"},"nativeSrc":"4185:97:21","nodeType":"YulExpressionStatement","src":"4185:97:21"},{"nativeSrc":"4291:18:21","nodeType":"YulVariableDeclaration","src":"4291:18:21","value":{"kind":"number","nativeSrc":"4308:1:21","nodeType":"YulLiteral","src":"4308:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"4295:9:21","nodeType":"YulTypedName","src":"4295:9:21","type":""}]},{"nativeSrc":"4318:23:21","nodeType":"YulVariableDeclaration","src":"4318:23:21","value":{"kind":"number","nativeSrc":"4337:4:21","nodeType":"YulLiteral","src":"4337:4:21","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nativeSrc":"4322:11:21","nodeType":"YulTypedName","src":"4322:11:21","type":""}]},{"nativeSrc":"4350:17:21","nodeType":"YulAssignment","src":"4350:17:21","value":{"kind":"number","nativeSrc":"4363:4:21","nodeType":"YulLiteral","src":"4363:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"4350:9:21","nodeType":"YulIdentifier","src":"4350:9:21"}]},{"cases":[{"body":{"nativeSrc":"4413:656:21","nodeType":"YulBlock","src":"4413:656:21","statements":[{"nativeSrc":"4427:35:21","nodeType":"YulVariableDeclaration","src":"4427:35:21","value":{"arguments":[{"name":"newLen","nativeSrc":"4446:6:21","nodeType":"YulIdentifier","src":"4446:6:21"},{"arguments":[{"kind":"number","nativeSrc":"4458:2:21","nodeType":"YulLiteral","src":"4458:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4454:3:21","nodeType":"YulIdentifier","src":"4454:3:21"},"nativeSrc":"4454:7:21","nodeType":"YulFunctionCall","src":"4454:7:21"}],"functionName":{"name":"and","nativeSrc":"4442:3:21","nodeType":"YulIdentifier","src":"4442:3:21"},"nativeSrc":"4442:20:21","nodeType":"YulFunctionCall","src":"4442:20:21"},"variables":[{"name":"loopEnd","nativeSrc":"4431:7:21","nodeType":"YulTypedName","src":"4431:7:21","type":""}]},{"nativeSrc":"4475:49:21","nodeType":"YulVariableDeclaration","src":"4475:49:21","value":{"arguments":[{"name":"slot","nativeSrc":"4519:4:21","nodeType":"YulIdentifier","src":"4519:4:21"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"4489:29:21","nodeType":"YulIdentifier","src":"4489:29:21"},"nativeSrc":"4489:35:21","nodeType":"YulFunctionCall","src":"4489:35:21"},"variables":[{"name":"dstPtr","nativeSrc":"4479:6:21","nodeType":"YulTypedName","src":"4479:6:21","type":""}]},{"nativeSrc":"4537:10:21","nodeType":"YulVariableDeclaration","src":"4537:10:21","value":{"kind":"number","nativeSrc":"4546:1:21","nodeType":"YulLiteral","src":"4546:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4541:1:21","nodeType":"YulTypedName","src":"4541:1:21","type":""}]},{"body":{"nativeSrc":"4624:172:21","nodeType":"YulBlock","src":"4624:172:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4649:6:21","nodeType":"YulIdentifier","src":"4649:6:21"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4667:3:21","nodeType":"YulIdentifier","src":"4667:3:21"},{"name":"srcOffset","nativeSrc":"4672:9:21","nodeType":"YulIdentifier","src":"4672:9:21"}],"functionName":{"name":"add","nativeSrc":"4663:3:21","nodeType":"YulIdentifier","src":"4663:3:21"},"nativeSrc":"4663:19:21","nodeType":"YulFunctionCall","src":"4663:19:21"}],"functionName":{"name":"mload","nativeSrc":"4657:5:21","nodeType":"YulIdentifier","src":"4657:5:21"},"nativeSrc":"4657:26:21","nodeType":"YulFunctionCall","src":"4657:26:21"}],"functionName":{"name":"sstore","nativeSrc":"4642:6:21","nodeType":"YulIdentifier","src":"4642:6:21"},"nativeSrc":"4642:42:21","nodeType":"YulFunctionCall","src":"4642:42:21"},"nativeSrc":"4642:42:21","nodeType":"YulExpressionStatement","src":"4642:42:21"},{"nativeSrc":"4701:24:21","nodeType":"YulAssignment","src":"4701:24:21","value":{"arguments":[{"name":"dstPtr","nativeSrc":"4715:6:21","nodeType":"YulIdentifier","src":"4715:6:21"},{"kind":"number","nativeSrc":"4723:1:21","nodeType":"YulLiteral","src":"4723:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4711:3:21","nodeType":"YulIdentifier","src":"4711:3:21"},"nativeSrc":"4711:14:21","nodeType":"YulFunctionCall","src":"4711:14:21"},"variableNames":[{"name":"dstPtr","nativeSrc":"4701:6:21","nodeType":"YulIdentifier","src":"4701:6:21"}]},{"nativeSrc":"4742:40:21","nodeType":"YulAssignment","src":"4742:40:21","value":{"arguments":[{"name":"srcOffset","nativeSrc":"4759:9:21","nodeType":"YulIdentifier","src":"4759:9:21"},{"name":"srcOffset_1","nativeSrc":"4770:11:21","nodeType":"YulIdentifier","src":"4770:11:21"}],"functionName":{"name":"add","nativeSrc":"4755:3:21","nodeType":"YulIdentifier","src":"4755:3:21"},"nativeSrc":"4755:27:21","nodeType":"YulFunctionCall","src":"4755:27:21"},"variableNames":[{"name":"srcOffset","nativeSrc":"4742:9:21","nodeType":"YulIdentifier","src":"4742:9:21"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4571:1:21","nodeType":"YulIdentifier","src":"4571:1:21"},{"name":"loopEnd","nativeSrc":"4574:7:21","nodeType":"YulIdentifier","src":"4574:7:21"}],"functionName":{"name":"lt","nativeSrc":"4568:2:21","nodeType":"YulIdentifier","src":"4568:2:21"},"nativeSrc":"4568:14:21","nodeType":"YulFunctionCall","src":"4568:14:21"},"nativeSrc":"4560:236:21","nodeType":"YulForLoop","post":{"nativeSrc":"4583:28:21","nodeType":"YulBlock","src":"4583:28:21","statements":[{"nativeSrc":"4585:24:21","nodeType":"YulAssignment","src":"4585:24:21","value":{"arguments":[{"name":"i","nativeSrc":"4594:1:21","nodeType":"YulIdentifier","src":"4594:1:21"},{"name":"srcOffset_1","nativeSrc":"4597:11:21","nodeType":"YulIdentifier","src":"4597:11:21"}],"functionName":{"name":"add","nativeSrc":"4590:3:21","nodeType":"YulIdentifier","src":"4590:3:21"},"nativeSrc":"4590:19:21","nodeType":"YulFunctionCall","src":"4590:19:21"},"variableNames":[{"name":"i","nativeSrc":"4585:1:21","nodeType":"YulIdentifier","src":"4585:1:21"}]}]},"pre":{"nativeSrc":"4564:3:21","nodeType":"YulBlock","src":"4564:3:21","statements":[]},"src":"4560:236:21"},{"body":{"nativeSrc":"4844:166:21","nodeType":"YulBlock","src":"4844:166:21","statements":[{"nativeSrc":"4862:43:21","nodeType":"YulVariableDeclaration","src":"4862:43:21","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4889:3:21","nodeType":"YulIdentifier","src":"4889:3:21"},{"name":"srcOffset","nativeSrc":"4894:9:21","nodeType":"YulIdentifier","src":"4894:9:21"}],"functionName":{"name":"add","nativeSrc":"4885:3:21","nodeType":"YulIdentifier","src":"4885:3:21"},"nativeSrc":"4885:19:21","nodeType":"YulFunctionCall","src":"4885:19:21"}],"functionName":{"name":"mload","nativeSrc":"4879:5:21","nodeType":"YulIdentifier","src":"4879:5:21"},"nativeSrc":"4879:26:21","nodeType":"YulFunctionCall","src":"4879:26:21"},"variables":[{"name":"lastValue","nativeSrc":"4866:9:21","nodeType":"YulTypedName","src":"4866:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4929:6:21","nodeType":"YulIdentifier","src":"4929:6:21"},{"arguments":[{"name":"lastValue","nativeSrc":"4941:9:21","nodeType":"YulIdentifier","src":"4941:9:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4968:1:21","nodeType":"YulLiteral","src":"4968:1:21","type":"","value":"3"},{"name":"newLen","nativeSrc":"4971:6:21","nodeType":"YulIdentifier","src":"4971:6:21"}],"functionName":{"name":"shl","nativeSrc":"4964:3:21","nodeType":"YulIdentifier","src":"4964:3:21"},"nativeSrc":"4964:14:21","nodeType":"YulFunctionCall","src":"4964:14:21"},{"kind":"number","nativeSrc":"4980:3:21","nodeType":"YulLiteral","src":"4980:3:21","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"4960:3:21","nodeType":"YulIdentifier","src":"4960:3:21"},"nativeSrc":"4960:24:21","nodeType":"YulFunctionCall","src":"4960:24:21"},{"arguments":[{"kind":"number","nativeSrc":"4990:1:21","nodeType":"YulLiteral","src":"4990:1:21","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4986:3:21","nodeType":"YulIdentifier","src":"4986:3:21"},"nativeSrc":"4986:6:21","nodeType":"YulFunctionCall","src":"4986:6:21"}],"functionName":{"name":"shr","nativeSrc":"4956:3:21","nodeType":"YulIdentifier","src":"4956:3:21"},"nativeSrc":"4956:37:21","nodeType":"YulFunctionCall","src":"4956:37:21"}],"functionName":{"name":"not","nativeSrc":"4952:3:21","nodeType":"YulIdentifier","src":"4952:3:21"},"nativeSrc":"4952:42:21","nodeType":"YulFunctionCall","src":"4952:42:21"}],"functionName":{"name":"and","nativeSrc":"4937:3:21","nodeType":"YulIdentifier","src":"4937:3:21"},"nativeSrc":"4937:58:21","nodeType":"YulFunctionCall","src":"4937:58:21"}],"functionName":{"name":"sstore","nativeSrc":"4922:6:21","nodeType":"YulIdentifier","src":"4922:6:21"},"nativeSrc":"4922:74:21","nodeType":"YulFunctionCall","src":"4922:74:21"},"nativeSrc":"4922:74:21","nodeType":"YulExpressionStatement","src":"4922:74:21"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"4815:7:21","nodeType":"YulIdentifier","src":"4815:7:21"},{"name":"newLen","nativeSrc":"4824:6:21","nodeType":"YulIdentifier","src":"4824:6:21"}],"functionName":{"name":"lt","nativeSrc":"4812:2:21","nodeType":"YulIdentifier","src":"4812:2:21"},"nativeSrc":"4812:19:21","nodeType":"YulFunctionCall","src":"4812:19:21"},"nativeSrc":"4809:201:21","nodeType":"YulIf","src":"4809:201:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5030:4:21","nodeType":"YulIdentifier","src":"5030:4:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5044:1:21","nodeType":"YulLiteral","src":"5044:1:21","type":"","value":"1"},{"name":"newLen","nativeSrc":"5047:6:21","nodeType":"YulIdentifier","src":"5047:6:21"}],"functionName":{"name":"shl","nativeSrc":"5040:3:21","nodeType":"YulIdentifier","src":"5040:3:21"},"nativeSrc":"5040:14:21","nodeType":"YulFunctionCall","src":"5040:14:21"},{"kind":"number","nativeSrc":"5056:1:21","nodeType":"YulLiteral","src":"5056:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5036:3:21","nodeType":"YulIdentifier","src":"5036:3:21"},"nativeSrc":"5036:22:21","nodeType":"YulFunctionCall","src":"5036:22:21"}],"functionName":{"name":"sstore","nativeSrc":"5023:6:21","nodeType":"YulIdentifier","src":"5023:6:21"},"nativeSrc":"5023:36:21","nodeType":"YulFunctionCall","src":"5023:36:21"},"nativeSrc":"5023:36:21","nodeType":"YulExpressionStatement","src":"5023:36:21"}]},"nativeSrc":"4406:663:21","nodeType":"YulCase","src":"4406:663:21","value":{"kind":"number","nativeSrc":"4411:1:21","nodeType":"YulLiteral","src":"4411:1:21","type":"","value":"1"}},{"body":{"nativeSrc":"5086:234:21","nodeType":"YulBlock","src":"5086:234:21","statements":[{"nativeSrc":"5100:14:21","nodeType":"YulVariableDeclaration","src":"5100:14:21","value":{"kind":"number","nativeSrc":"5113:1:21","nodeType":"YulLiteral","src":"5113:1:21","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"5104:5:21","nodeType":"YulTypedName","src":"5104:5:21","type":""}]},{"body":{"nativeSrc":"5149:67:21","nodeType":"YulBlock","src":"5149:67:21","statements":[{"nativeSrc":"5167:35:21","nodeType":"YulAssignment","src":"5167:35:21","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5186:3:21","nodeType":"YulIdentifier","src":"5186:3:21"},{"name":"srcOffset","nativeSrc":"5191:9:21","nodeType":"YulIdentifier","src":"5191:9:21"}],"functionName":{"name":"add","nativeSrc":"5182:3:21","nodeType":"YulIdentifier","src":"5182:3:21"},"nativeSrc":"5182:19:21","nodeType":"YulFunctionCall","src":"5182:19:21"}],"functionName":{"name":"mload","nativeSrc":"5176:5:21","nodeType":"YulIdentifier","src":"5176:5:21"},"nativeSrc":"5176:26:21","nodeType":"YulFunctionCall","src":"5176:26:21"},"variableNames":[{"name":"value","nativeSrc":"5167:5:21","nodeType":"YulIdentifier","src":"5167:5:21"}]}]},"condition":{"name":"newLen","nativeSrc":"5130:6:21","nodeType":"YulIdentifier","src":"5130:6:21"},"nativeSrc":"5127:89:21","nodeType":"YulIf","src":"5127:89:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5236:4:21","nodeType":"YulIdentifier","src":"5236:4:21"},{"arguments":[{"name":"value","nativeSrc":"5295:5:21","nodeType":"YulIdentifier","src":"5295:5:21"},{"name":"newLen","nativeSrc":"5302:6:21","nodeType":"YulIdentifier","src":"5302:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"5242:52:21","nodeType":"YulIdentifier","src":"5242:52:21"},"nativeSrc":"5242:67:21","nodeType":"YulFunctionCall","src":"5242:67:21"}],"functionName":{"name":"sstore","nativeSrc":"5229:6:21","nodeType":"YulIdentifier","src":"5229:6:21"},"nativeSrc":"5229:81:21","nodeType":"YulFunctionCall","src":"5229:81:21"},"nativeSrc":"5229:81:21","nodeType":"YulExpressionStatement","src":"5229:81:21"}]},"nativeSrc":"5078:242:21","nodeType":"YulCase","src":"5078:242:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"4386:6:21","nodeType":"YulIdentifier","src":"4386:6:21"},{"kind":"number","nativeSrc":"4394:2:21","nodeType":"YulLiteral","src":"4394:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4383:2:21","nodeType":"YulIdentifier","src":"4383:2:21"},"nativeSrc":"4383:14:21","nodeType":"YulFunctionCall","src":"4383:14:21"},"nativeSrc":"4376:944:21","nodeType":"YulSwitch","src":"4376:944:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"3981:1345:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"4062:4:21","nodeType":"YulTypedName","src":"4062:4:21","type":""},{"name":"src","nativeSrc":"4068:3:21","nodeType":"YulTypedName","src":"4068:3:21","type":""}],"src":"3981:1345:21"},{"body":{"nativeSrc":"5505:171:21","nodeType":"YulBlock","src":"5505:171:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5522:9:21","nodeType":"YulIdentifier","src":"5522:9:21"},{"kind":"number","nativeSrc":"5533:2:21","nodeType":"YulLiteral","src":"5533:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5515:6:21","nodeType":"YulIdentifier","src":"5515:6:21"},"nativeSrc":"5515:21:21","nodeType":"YulFunctionCall","src":"5515:21:21"},"nativeSrc":"5515:21:21","nodeType":"YulExpressionStatement","src":"5515:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5556:9:21","nodeType":"YulIdentifier","src":"5556:9:21"},{"kind":"number","nativeSrc":"5567:2:21","nodeType":"YulLiteral","src":"5567:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5552:3:21","nodeType":"YulIdentifier","src":"5552:3:21"},"nativeSrc":"5552:18:21","nodeType":"YulFunctionCall","src":"5552:18:21"},{"kind":"number","nativeSrc":"5572:2:21","nodeType":"YulLiteral","src":"5572:2:21","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"5545:6:21","nodeType":"YulIdentifier","src":"5545:6:21"},"nativeSrc":"5545:30:21","nodeType":"YulFunctionCall","src":"5545:30:21"},"nativeSrc":"5545:30:21","nodeType":"YulExpressionStatement","src":"5545:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5595:9:21","nodeType":"YulIdentifier","src":"5595:9:21"},{"kind":"number","nativeSrc":"5606:2:21","nodeType":"YulLiteral","src":"5606:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5591:3:21","nodeType":"YulIdentifier","src":"5591:3:21"},"nativeSrc":"5591:18:21","nodeType":"YulFunctionCall","src":"5591:18:21"},{"hexValue":"496e697469616c697a6174696f6e206661696c6564","kind":"string","nativeSrc":"5611:23:21","nodeType":"YulLiteral","src":"5611:23:21","type":"","value":"Initialization failed"}],"functionName":{"name":"mstore","nativeSrc":"5584:6:21","nodeType":"YulIdentifier","src":"5584:6:21"},"nativeSrc":"5584:51:21","nodeType":"YulFunctionCall","src":"5584:51:21"},"nativeSrc":"5584:51:21","nodeType":"YulExpressionStatement","src":"5584:51:21"},{"nativeSrc":"5644:26:21","nodeType":"YulAssignment","src":"5644:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5656:9:21","nodeType":"YulIdentifier","src":"5656:9:21"},{"kind":"number","nativeSrc":"5667:2:21","nodeType":"YulLiteral","src":"5667:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5652:3:21","nodeType":"YulIdentifier","src":"5652:3:21"},"nativeSrc":"5652:18:21","nodeType":"YulFunctionCall","src":"5652:18:21"},"variableNames":[{"name":"tail","nativeSrc":"5644:4:21","nodeType":"YulIdentifier","src":"5644:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ced64e7a7e72856969cefe00640aa7f13f8db705f9748f7d3003a20bc61daa4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5331:345:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5482:9:21","nodeType":"YulTypedName","src":"5482:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5496:4:21","nodeType":"YulTypedName","src":"5496:4:21","type":""}],"src":"5331:345:21"},{"body":{"nativeSrc":"5762:127:21","nodeType":"YulBlock","src":"5762:127:21","statements":[{"body":{"nativeSrc":"5808:16:21","nodeType":"YulBlock","src":"5808:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5817:1:21","nodeType":"YulLiteral","src":"5817:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5820:1:21","nodeType":"YulLiteral","src":"5820:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5810:6:21","nodeType":"YulIdentifier","src":"5810:6:21"},"nativeSrc":"5810:12:21","nodeType":"YulFunctionCall","src":"5810:12:21"},"nativeSrc":"5810:12:21","nodeType":"YulExpressionStatement","src":"5810:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5783:7:21","nodeType":"YulIdentifier","src":"5783:7:21"},{"name":"headStart","nativeSrc":"5792:9:21","nodeType":"YulIdentifier","src":"5792:9:21"}],"functionName":{"name":"sub","nativeSrc":"5779:3:21","nodeType":"YulIdentifier","src":"5779:3:21"},"nativeSrc":"5779:23:21","nodeType":"YulFunctionCall","src":"5779:23:21"},{"kind":"number","nativeSrc":"5804:2:21","nodeType":"YulLiteral","src":"5804:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5775:3:21","nodeType":"YulIdentifier","src":"5775:3:21"},"nativeSrc":"5775:32:21","nodeType":"YulFunctionCall","src":"5775:32:21"},"nativeSrc":"5772:52:21","nodeType":"YulIf","src":"5772:52:21"},{"nativeSrc":"5833:50:21","nodeType":"YulAssignment","src":"5833:50:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5873:9:21","nodeType":"YulIdentifier","src":"5873:9:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"5843:29:21","nodeType":"YulIdentifier","src":"5843:29:21"},"nativeSrc":"5843:40:21","nodeType":"YulFunctionCall","src":"5843:40:21"},"variableNames":[{"name":"value0","nativeSrc":"5833:6:21","nodeType":"YulIdentifier","src":"5833:6:21"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"5681:208:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5728:9:21","nodeType":"YulTypedName","src":"5728:9:21","type":""},{"name":"dataEnd","nativeSrc":"5739:7:21","nodeType":"YulTypedName","src":"5739:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5751:6:21","nodeType":"YulTypedName","src":"5751:6:21","type":""}],"src":"5681:208:21"},{"body":{"nativeSrc":"6068:176:21","nodeType":"YulBlock","src":"6068:176:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6085:9:21","nodeType":"YulIdentifier","src":"6085:9:21"},{"kind":"number","nativeSrc":"6096:2:21","nodeType":"YulLiteral","src":"6096:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6078:6:21","nodeType":"YulIdentifier","src":"6078:6:21"},"nativeSrc":"6078:21:21","nodeType":"YulFunctionCall","src":"6078:21:21"},"nativeSrc":"6078:21:21","nodeType":"YulExpressionStatement","src":"6078:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6119:9:21","nodeType":"YulIdentifier","src":"6119:9:21"},{"kind":"number","nativeSrc":"6130:2:21","nodeType":"YulLiteral","src":"6130:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6115:3:21","nodeType":"YulIdentifier","src":"6115:3:21"},"nativeSrc":"6115:18:21","nodeType":"YulFunctionCall","src":"6115:18:21"},{"kind":"number","nativeSrc":"6135:2:21","nodeType":"YulLiteral","src":"6135:2:21","type":"","value":"26"}],"functionName":{"name":"mstore","nativeSrc":"6108:6:21","nodeType":"YulIdentifier","src":"6108:6:21"},"nativeSrc":"6108:30:21","nodeType":"YulFunctionCall","src":"6108:30:21"},"nativeSrc":"6108:30:21","nodeType":"YulExpressionStatement","src":"6108:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6158:9:21","nodeType":"YulIdentifier","src":"6158:9:21"},{"kind":"number","nativeSrc":"6169:2:21","nodeType":"YulLiteral","src":"6169:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6154:3:21","nodeType":"YulIdentifier","src":"6154:3:21"},"nativeSrc":"6154:18:21","nodeType":"YulFunctionCall","src":"6154:18:21"},{"hexValue":"496e76616c696420626173652061737365742061646472657373","kind":"string","nativeSrc":"6174:28:21","nodeType":"YulLiteral","src":"6174:28:21","type":"","value":"Invalid base asset address"}],"functionName":{"name":"mstore","nativeSrc":"6147:6:21","nodeType":"YulIdentifier","src":"6147:6:21"},"nativeSrc":"6147:56:21","nodeType":"YulFunctionCall","src":"6147:56:21"},"nativeSrc":"6147:56:21","nodeType":"YulExpressionStatement","src":"6147:56:21"},{"nativeSrc":"6212:26:21","nodeType":"YulAssignment","src":"6212:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6224:9:21","nodeType":"YulIdentifier","src":"6224:9:21"},{"kind":"number","nativeSrc":"6235:2:21","nodeType":"YulLiteral","src":"6235:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6220:3:21","nodeType":"YulIdentifier","src":"6220:3:21"},"nativeSrc":"6220:18:21","nodeType":"YulFunctionCall","src":"6220:18:21"},"variableNames":[{"name":"tail","nativeSrc":"6212:4:21","nodeType":"YulIdentifier","src":"6212:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_391a75680d8ec99739af126cde56833526e4b720a416f24f1d7ee98c294a45b1__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5894:350:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6045:9:21","nodeType":"YulTypedName","src":"6045:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6059:4:21","nodeType":"YulTypedName","src":"6059:4:21","type":""}],"src":"5894:350:21"},{"body":{"nativeSrc":"6281:95:21","nodeType":"YulBlock","src":"6281:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6298:1:21","nodeType":"YulLiteral","src":"6298:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6305:3:21","nodeType":"YulLiteral","src":"6305:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"6310:10:21","nodeType":"YulLiteral","src":"6310:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6301:3:21","nodeType":"YulIdentifier","src":"6301:3:21"},"nativeSrc":"6301:20:21","nodeType":"YulFunctionCall","src":"6301:20:21"}],"functionName":{"name":"mstore","nativeSrc":"6291:6:21","nodeType":"YulIdentifier","src":"6291:6:21"},"nativeSrc":"6291:31:21","nodeType":"YulFunctionCall","src":"6291:31:21"},"nativeSrc":"6291:31:21","nodeType":"YulExpressionStatement","src":"6291:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6338:1:21","nodeType":"YulLiteral","src":"6338:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"6341:4:21","nodeType":"YulLiteral","src":"6341:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"6331:6:21","nodeType":"YulIdentifier","src":"6331:6:21"},"nativeSrc":"6331:15:21","nodeType":"YulFunctionCall","src":"6331:15:21"},"nativeSrc":"6331:15:21","nodeType":"YulExpressionStatement","src":"6331:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6362:1:21","nodeType":"YulLiteral","src":"6362:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"6365:4:21","nodeType":"YulLiteral","src":"6365:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6355:6:21","nodeType":"YulIdentifier","src":"6355:6:21"},"nativeSrc":"6355:15:21","nodeType":"YulFunctionCall","src":"6355:15:21"},"nativeSrc":"6355:15:21","nodeType":"YulExpressionStatement","src":"6355:15:21"}]},"name":"panic_error_0x32","nativeSrc":"6249:127:21","nodeType":"YulFunctionDefinition","src":"6249:127:21"},{"body":{"nativeSrc":"6429:174:21","nodeType":"YulBlock","src":"6429:174:21","statements":[{"nativeSrc":"6439:16:21","nodeType":"YulAssignment","src":"6439:16:21","value":{"arguments":[{"name":"x","nativeSrc":"6450:1:21","nodeType":"YulIdentifier","src":"6450:1:21"},{"name":"y","nativeSrc":"6453:1:21","nodeType":"YulIdentifier","src":"6453:1:21"}],"functionName":{"name":"add","nativeSrc":"6446:3:21","nodeType":"YulIdentifier","src":"6446:3:21"},"nativeSrc":"6446:9:21","nodeType":"YulFunctionCall","src":"6446:9:21"},"variableNames":[{"name":"sum","nativeSrc":"6439:3:21","nodeType":"YulIdentifier","src":"6439:3:21"}]},{"body":{"nativeSrc":"6486:111:21","nodeType":"YulBlock","src":"6486:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6507:1:21","nodeType":"YulLiteral","src":"6507:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6514:3:21","nodeType":"YulLiteral","src":"6514:3:21","type":"","value":"224"},{"kind":"number","nativeSrc":"6519:10:21","nodeType":"YulLiteral","src":"6519:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6510:3:21","nodeType":"YulIdentifier","src":"6510:3:21"},"nativeSrc":"6510:20:21","nodeType":"YulFunctionCall","src":"6510:20:21"}],"functionName":{"name":"mstore","nativeSrc":"6500:6:21","nodeType":"YulIdentifier","src":"6500:6:21"},"nativeSrc":"6500:31:21","nodeType":"YulFunctionCall","src":"6500:31:21"},"nativeSrc":"6500:31:21","nodeType":"YulExpressionStatement","src":"6500:31:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6551:1:21","nodeType":"YulLiteral","src":"6551:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"6554:4:21","nodeType":"YulLiteral","src":"6554:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"6544:6:21","nodeType":"YulIdentifier","src":"6544:6:21"},"nativeSrc":"6544:15:21","nodeType":"YulFunctionCall","src":"6544:15:21"},"nativeSrc":"6544:15:21","nodeType":"YulExpressionStatement","src":"6544:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6579:1:21","nodeType":"YulLiteral","src":"6579:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"6582:4:21","nodeType":"YulLiteral","src":"6582:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6572:6:21","nodeType":"YulIdentifier","src":"6572:6:21"},"nativeSrc":"6572:15:21","nodeType":"YulFunctionCall","src":"6572:15:21"},"nativeSrc":"6572:15:21","nodeType":"YulExpressionStatement","src":"6572:15:21"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"6470:1:21","nodeType":"YulIdentifier","src":"6470:1:21"},{"name":"sum","nativeSrc":"6473:3:21","nodeType":"YulIdentifier","src":"6473:3:21"}],"functionName":{"name":"gt","nativeSrc":"6467:2:21","nodeType":"YulIdentifier","src":"6467:2:21"},"nativeSrc":"6467:10:21","nodeType":"YulFunctionCall","src":"6467:10:21"},"nativeSrc":"6464:133:21","nodeType":"YulIf","src":"6464:133:21"}]},"name":"checked_add_t_uint256","nativeSrc":"6381:222:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6412:1:21","nodeType":"YulTypedName","src":"6412:1:21","type":""},{"name":"y","nativeSrc":"6415:1:21","nodeType":"YulTypedName","src":"6415:1:21","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"6421:3:21","nodeType":"YulTypedName","src":"6421:3:21","type":""}],"src":"6381:222:21"},{"body":{"nativeSrc":"6782:165:21","nodeType":"YulBlock","src":"6782:165:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6799:9:21","nodeType":"YulIdentifier","src":"6799:9:21"},{"kind":"number","nativeSrc":"6810:2:21","nodeType":"YulLiteral","src":"6810:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6792:6:21","nodeType":"YulIdentifier","src":"6792:6:21"},"nativeSrc":"6792:21:21","nodeType":"YulFunctionCall","src":"6792:21:21"},"nativeSrc":"6792:21:21","nodeType":"YulExpressionStatement","src":"6792:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6833:9:21","nodeType":"YulIdentifier","src":"6833:9:21"},{"kind":"number","nativeSrc":"6844:2:21","nodeType":"YulLiteral","src":"6844:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6829:3:21","nodeType":"YulIdentifier","src":"6829:3:21"},"nativeSrc":"6829:18:21","nodeType":"YulFunctionCall","src":"6829:18:21"},{"kind":"number","nativeSrc":"6849:2:21","nodeType":"YulLiteral","src":"6849:2:21","type":"","value":"15"}],"functionName":{"name":"mstore","nativeSrc":"6822:6:21","nodeType":"YulIdentifier","src":"6822:6:21"},"nativeSrc":"6822:30:21","nodeType":"YulFunctionCall","src":"6822:30:21"},"nativeSrc":"6822:30:21","nodeType":"YulExpressionStatement","src":"6822:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6872:9:21","nodeType":"YulIdentifier","src":"6872:9:21"},{"kind":"number","nativeSrc":"6883:2:21","nodeType":"YulLiteral","src":"6883:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6868:3:21","nodeType":"YulIdentifier","src":"6868:3:21"},"nativeSrc":"6868:18:21","nodeType":"YulFunctionCall","src":"6868:18:21"},{"hexValue":"496e76616c69642077656967687473","kind":"string","nativeSrc":"6888:17:21","nodeType":"YulLiteral","src":"6888:17:21","type":"","value":"Invalid weights"}],"functionName":{"name":"mstore","nativeSrc":"6861:6:21","nodeType":"YulIdentifier","src":"6861:6:21"},"nativeSrc":"6861:45:21","nodeType":"YulFunctionCall","src":"6861:45:21"},"nativeSrc":"6861:45:21","nodeType":"YulExpressionStatement","src":"6861:45:21"},{"nativeSrc":"6915:26:21","nodeType":"YulAssignment","src":"6915:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6927:9:21","nodeType":"YulIdentifier","src":"6927:9:21"},{"kind":"number","nativeSrc":"6938:2:21","nodeType":"YulLiteral","src":"6938:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6923:3:21","nodeType":"YulIdentifier","src":"6923:3:21"},"nativeSrc":"6923:18:21","nodeType":"YulFunctionCall","src":"6923:18:21"},"variableNames":[{"name":"tail","nativeSrc":"6915:4:21","nodeType":"YulIdentifier","src":"6915:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_5cbb8d647918028d0523fccac550113bbbb71d463bbb8b573c02c32bc5cf2b89__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6608:339:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6759:9:21","nodeType":"YulTypedName","src":"6759:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6773:4:21","nodeType":"YulTypedName","src":"6773:4:21","type":""}],"src":"6608:339:21"},{"body":{"nativeSrc":"7126:176:21","nodeType":"YulBlock","src":"7126:176:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7143:9:21","nodeType":"YulIdentifier","src":"7143:9:21"},{"kind":"number","nativeSrc":"7154:2:21","nodeType":"YulLiteral","src":"7154:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7136:6:21","nodeType":"YulIdentifier","src":"7136:6:21"},"nativeSrc":"7136:21:21","nodeType":"YulFunctionCall","src":"7136:21:21"},"nativeSrc":"7136:21:21","nodeType":"YulExpressionStatement","src":"7136:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7177:9:21","nodeType":"YulIdentifier","src":"7177:9:21"},{"kind":"number","nativeSrc":"7188:2:21","nodeType":"YulLiteral","src":"7188:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7173:3:21","nodeType":"YulIdentifier","src":"7173:3:21"},"nativeSrc":"7173:18:21","nodeType":"YulFunctionCall","src":"7173:18:21"},{"kind":"number","nativeSrc":"7193:2:21","nodeType":"YulLiteral","src":"7193:2:21","type":"","value":"26"}],"functionName":{"name":"mstore","nativeSrc":"7166:6:21","nodeType":"YulIdentifier","src":"7166:6:21"},"nativeSrc":"7166:30:21","nodeType":"YulFunctionCall","src":"7166:30:21"},"nativeSrc":"7166:30:21","nodeType":"YulExpressionStatement","src":"7166:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7216:9:21","nodeType":"YulIdentifier","src":"7216:9:21"},{"kind":"number","nativeSrc":"7227:2:21","nodeType":"YulLiteral","src":"7227:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7212:3:21","nodeType":"YulIdentifier","src":"7212:3:21"},"nativeSrc":"7212:18:21","nodeType":"YulFunctionCall","src":"7212:18:21"},{"hexValue":"496e76616c696420726562616c616e6365722061646472657373","kind":"string","nativeSrc":"7232:28:21","nodeType":"YulLiteral","src":"7232:28:21","type":"","value":"Invalid rebalancer address"}],"functionName":{"name":"mstore","nativeSrc":"7205:6:21","nodeType":"YulIdentifier","src":"7205:6:21"},"nativeSrc":"7205:56:21","nodeType":"YulFunctionCall","src":"7205:56:21"},"nativeSrc":"7205:56:21","nodeType":"YulExpressionStatement","src":"7205:56:21"},{"nativeSrc":"7270:26:21","nodeType":"YulAssignment","src":"7270:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"7282:9:21","nodeType":"YulIdentifier","src":"7282:9:21"},{"kind":"number","nativeSrc":"7293:2:21","nodeType":"YulLiteral","src":"7293:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7278:3:21","nodeType":"YulIdentifier","src":"7278:3:21"},"nativeSrc":"7278:18:21","nodeType":"YulFunctionCall","src":"7278:18:21"},"variableNames":[{"name":"tail","nativeSrc":"7270:4:21","nodeType":"YulIdentifier","src":"7270:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_b3262886d4e83856703b764357b6a852eb26ef34a7982063b49217460e097ddc__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6952:350:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7103:9:21","nodeType":"YulTypedName","src":"7103:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7117:4:21","nodeType":"YulTypedName","src":"7117:4:21","type":""}],"src":"6952:350:21"},{"body":{"nativeSrc":"7481:224:21","nodeType":"YulBlock","src":"7481:224:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7498:9:21","nodeType":"YulIdentifier","src":"7498:9:21"},{"kind":"number","nativeSrc":"7509:2:21","nodeType":"YulLiteral","src":"7509:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7491:6:21","nodeType":"YulIdentifier","src":"7491:6:21"},"nativeSrc":"7491:21:21","nodeType":"YulFunctionCall","src":"7491:21:21"},"nativeSrc":"7491:21:21","nodeType":"YulExpressionStatement","src":"7491:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7532:9:21","nodeType":"YulIdentifier","src":"7532:9:21"},{"kind":"number","nativeSrc":"7543:2:21","nodeType":"YulLiteral","src":"7543:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7528:3:21","nodeType":"YulIdentifier","src":"7528:3:21"},"nativeSrc":"7528:18:21","nodeType":"YulFunctionCall","src":"7528:18:21"},{"kind":"number","nativeSrc":"7548:2:21","nodeType":"YulLiteral","src":"7548:2:21","type":"","value":"34"}],"functionName":{"name":"mstore","nativeSrc":"7521:6:21","nodeType":"YulIdentifier","src":"7521:6:21"},"nativeSrc":"7521:30:21","nodeType":"YulFunctionCall","src":"7521:30:21"},"nativeSrc":"7521:30:21","nodeType":"YulExpressionStatement","src":"7521:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7571:9:21","nodeType":"YulIdentifier","src":"7571:9:21"},{"kind":"number","nativeSrc":"7582:2:21","nodeType":"YulLiteral","src":"7582:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7567:3:21","nodeType":"YulIdentifier","src":"7567:3:21"},"nativeSrc":"7567:18:21","nodeType":"YulFunctionCall","src":"7567:18:21"},{"hexValue":"41737365747320616e642077656967687473206c656e677468206d69736d6174","kind":"string","nativeSrc":"7587:34:21","nodeType":"YulLiteral","src":"7587:34:21","type":"","value":"Assets and weights length mismat"}],"functionName":{"name":"mstore","nativeSrc":"7560:6:21","nodeType":"YulIdentifier","src":"7560:6:21"},"nativeSrc":"7560:62:21","nodeType":"YulFunctionCall","src":"7560:62:21"},"nativeSrc":"7560:62:21","nodeType":"YulExpressionStatement","src":"7560:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7642:9:21","nodeType":"YulIdentifier","src":"7642:9:21"},{"kind":"number","nativeSrc":"7653:2:21","nodeType":"YulLiteral","src":"7653:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7638:3:21","nodeType":"YulIdentifier","src":"7638:3:21"},"nativeSrc":"7638:18:21","nodeType":"YulFunctionCall","src":"7638:18:21"},{"hexValue":"6368","kind":"string","nativeSrc":"7658:4:21","nodeType":"YulLiteral","src":"7658:4:21","type":"","value":"ch"}],"functionName":{"name":"mstore","nativeSrc":"7631:6:21","nodeType":"YulIdentifier","src":"7631:6:21"},"nativeSrc":"7631:32:21","nodeType":"YulFunctionCall","src":"7631:32:21"},"nativeSrc":"7631:32:21","nodeType":"YulExpressionStatement","src":"7631:32:21"},{"nativeSrc":"7672:27:21","nodeType":"YulAssignment","src":"7672:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"7684:9:21","nodeType":"YulIdentifier","src":"7684:9:21"},{"kind":"number","nativeSrc":"7695:3:21","nodeType":"YulLiteral","src":"7695:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7680:3:21","nodeType":"YulIdentifier","src":"7680:3:21"},"nativeSrc":"7680:19:21","nodeType":"YulFunctionCall","src":"7680:19:21"},"variableNames":[{"name":"tail","nativeSrc":"7672:4:21","nodeType":"YulIdentifier","src":"7672:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7307:398:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7458:9:21","nodeType":"YulTypedName","src":"7458:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7472:4:21","nodeType":"YulTypedName","src":"7472:4:21","type":""}],"src":"7307:398:21"},{"body":{"nativeSrc":"7884:171:21","nodeType":"YulBlock","src":"7884:171:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7901:9:21","nodeType":"YulIdentifier","src":"7901:9:21"},{"kind":"number","nativeSrc":"7912:2:21","nodeType":"YulLiteral","src":"7912:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7894:6:21","nodeType":"YulIdentifier","src":"7894:6:21"},"nativeSrc":"7894:21:21","nodeType":"YulFunctionCall","src":"7894:21:21"},"nativeSrc":"7894:21:21","nodeType":"YulExpressionStatement","src":"7894:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7935:9:21","nodeType":"YulIdentifier","src":"7935:9:21"},{"kind":"number","nativeSrc":"7946:2:21","nodeType":"YulLiteral","src":"7946:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7931:3:21","nodeType":"YulIdentifier","src":"7931:3:21"},"nativeSrc":"7931:18:21","nodeType":"YulFunctionCall","src":"7931:18:21"},{"kind":"number","nativeSrc":"7951:2:21","nodeType":"YulLiteral","src":"7951:2:21","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"7924:6:21","nodeType":"YulIdentifier","src":"7924:6:21"},"nativeSrc":"7924:30:21","nodeType":"YulFunctionCall","src":"7924:30:21"},"nativeSrc":"7924:30:21","nodeType":"YulExpressionStatement","src":"7924:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7974:9:21","nodeType":"YulIdentifier","src":"7974:9:21"},{"kind":"number","nativeSrc":"7985:2:21","nodeType":"YulLiteral","src":"7985:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7970:3:21","nodeType":"YulIdentifier","src":"7970:3:21"},"nativeSrc":"7970:18:21","nodeType":"YulFunctionCall","src":"7970:18:21"},{"hexValue":"496e76616c69642061737365742061646472657373","kind":"string","nativeSrc":"7990:23:21","nodeType":"YulLiteral","src":"7990:23:21","type":"","value":"Invalid asset address"}],"functionName":{"name":"mstore","nativeSrc":"7963:6:21","nodeType":"YulIdentifier","src":"7963:6:21"},"nativeSrc":"7963:51:21","nodeType":"YulFunctionCall","src":"7963:51:21"},"nativeSrc":"7963:51:21","nodeType":"YulExpressionStatement","src":"7963:51:21"},{"nativeSrc":"8023:26:21","nodeType":"YulAssignment","src":"8023:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"8035:9:21","nodeType":"YulIdentifier","src":"8035:9:21"},{"kind":"number","nativeSrc":"8046:2:21","nodeType":"YulLiteral","src":"8046:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8031:3:21","nodeType":"YulIdentifier","src":"8031:3:21"},"nativeSrc":"8031:18:21","nodeType":"YulFunctionCall","src":"8031:18:21"},"variableNames":[{"name":"tail","nativeSrc":"8023:4:21","nodeType":"YulIdentifier","src":"8023:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_795f8eca8a22be2e70f1d9bdebdbf85a1dc43e172c3964e13eac586b45ff2b92__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7710:345:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7861:9:21","nodeType":"YulTypedName","src":"7861:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7875:4:21","nodeType":"YulTypedName","src":"7875:4:21","type":""}],"src":"7710:345:21"},{"body":{"nativeSrc":"8234:164:21","nodeType":"YulBlock","src":"8234:164:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8251:9:21","nodeType":"YulIdentifier","src":"8251:9:21"},{"kind":"number","nativeSrc":"8262:2:21","nodeType":"YulLiteral","src":"8262:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8244:6:21","nodeType":"YulIdentifier","src":"8244:6:21"},"nativeSrc":"8244:21:21","nodeType":"YulFunctionCall","src":"8244:21:21"},"nativeSrc":"8244:21:21","nodeType":"YulExpressionStatement","src":"8244:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8285:9:21","nodeType":"YulIdentifier","src":"8285:9:21"},{"kind":"number","nativeSrc":"8296:2:21","nodeType":"YulLiteral","src":"8296:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8281:3:21","nodeType":"YulIdentifier","src":"8281:3:21"},"nativeSrc":"8281:18:21","nodeType":"YulFunctionCall","src":"8281:18:21"},{"kind":"number","nativeSrc":"8301:2:21","nodeType":"YulLiteral","src":"8301:2:21","type":"","value":"14"}],"functionName":{"name":"mstore","nativeSrc":"8274:6:21","nodeType":"YulIdentifier","src":"8274:6:21"},"nativeSrc":"8274:30:21","nodeType":"YulFunctionCall","src":"8274:30:21"},"nativeSrc":"8274:30:21","nodeType":"YulExpressionStatement","src":"8274:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8324:9:21","nodeType":"YulIdentifier","src":"8324:9:21"},{"kind":"number","nativeSrc":"8335:2:21","nodeType":"YulLiteral","src":"8335:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8320:3:21","nodeType":"YulIdentifier","src":"8320:3:21"},"nativeSrc":"8320:18:21","nodeType":"YulFunctionCall","src":"8320:18:21"},{"hexValue":"496e76616c696420776569676874","kind":"string","nativeSrc":"8340:16:21","nodeType":"YulLiteral","src":"8340:16:21","type":"","value":"Invalid weight"}],"functionName":{"name":"mstore","nativeSrc":"8313:6:21","nodeType":"YulIdentifier","src":"8313:6:21"},"nativeSrc":"8313:44:21","nodeType":"YulFunctionCall","src":"8313:44:21"},"nativeSrc":"8313:44:21","nodeType":"YulExpressionStatement","src":"8313:44:21"},{"nativeSrc":"8366:26:21","nodeType":"YulAssignment","src":"8366:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"8378:9:21","nodeType":"YulIdentifier","src":"8378:9:21"},{"kind":"number","nativeSrc":"8389:2:21","nodeType":"YulLiteral","src":"8389:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8374:3:21","nodeType":"YulIdentifier","src":"8374:3:21"},"nativeSrc":"8374:18:21","nodeType":"YulFunctionCall","src":"8374:18:21"},"variableNames":[{"name":"tail","nativeSrc":"8366:4:21","nodeType":"YulIdentifier","src":"8366:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_ff1ef73e4333da4da038aba1312a1df349427c8859c23d4b6d4a7df22bfc1a19__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8060:338:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8211:9:21","nodeType":"YulTypedName","src":"8211:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8225:4:21","nodeType":"YulTypedName","src":"8225:4:21","type":""}],"src":"8060:338:21"},{"body":{"nativeSrc":"8532:175:21","nodeType":"YulBlock","src":"8532:175:21","statements":[{"nativeSrc":"8542:26:21","nodeType":"YulAssignment","src":"8542:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"8554:9:21","nodeType":"YulIdentifier","src":"8554:9:21"},{"kind":"number","nativeSrc":"8565:2:21","nodeType":"YulLiteral","src":"8565:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8550:3:21","nodeType":"YulIdentifier","src":"8550:3:21"},"nativeSrc":"8550:18:21","nodeType":"YulFunctionCall","src":"8550:18:21"},"variableNames":[{"name":"tail","nativeSrc":"8542:4:21","nodeType":"YulIdentifier","src":"8542:4:21"}]},{"nativeSrc":"8577:29:21","nodeType":"YulVariableDeclaration","src":"8577:29:21","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8595:3:21","nodeType":"YulLiteral","src":"8595:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"8600:1:21","nodeType":"YulLiteral","src":"8600:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"8591:3:21","nodeType":"YulIdentifier","src":"8591:3:21"},"nativeSrc":"8591:11:21","nodeType":"YulFunctionCall","src":"8591:11:21"},{"kind":"number","nativeSrc":"8604:1:21","nodeType":"YulLiteral","src":"8604:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"8587:3:21","nodeType":"YulIdentifier","src":"8587:3:21"},"nativeSrc":"8587:19:21","nodeType":"YulFunctionCall","src":"8587:19:21"},"variables":[{"name":"_1","nativeSrc":"8581:2:21","nodeType":"YulTypedName","src":"8581:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8622:9:21","nodeType":"YulIdentifier","src":"8622:9:21"},{"arguments":[{"name":"value0","nativeSrc":"8637:6:21","nodeType":"YulIdentifier","src":"8637:6:21"},{"name":"_1","nativeSrc":"8645:2:21","nodeType":"YulIdentifier","src":"8645:2:21"}],"functionName":{"name":"and","nativeSrc":"8633:3:21","nodeType":"YulIdentifier","src":"8633:3:21"},"nativeSrc":"8633:15:21","nodeType":"YulFunctionCall","src":"8633:15:21"}],"functionName":{"name":"mstore","nativeSrc":"8615:6:21","nodeType":"YulIdentifier","src":"8615:6:21"},"nativeSrc":"8615:34:21","nodeType":"YulFunctionCall","src":"8615:34:21"},"nativeSrc":"8615:34:21","nodeType":"YulExpressionStatement","src":"8615:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8669:9:21","nodeType":"YulIdentifier","src":"8669:9:21"},{"kind":"number","nativeSrc":"8680:2:21","nodeType":"YulLiteral","src":"8680:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8665:3:21","nodeType":"YulIdentifier","src":"8665:3:21"},"nativeSrc":"8665:18:21","nodeType":"YulFunctionCall","src":"8665:18:21"},{"arguments":[{"name":"value1","nativeSrc":"8689:6:21","nodeType":"YulIdentifier","src":"8689:6:21"},{"name":"_1","nativeSrc":"8697:2:21","nodeType":"YulIdentifier","src":"8697:2:21"}],"functionName":{"name":"and","nativeSrc":"8685:3:21","nodeType":"YulIdentifier","src":"8685:3:21"},"nativeSrc":"8685:15:21","nodeType":"YulFunctionCall","src":"8685:15:21"}],"functionName":{"name":"mstore","nativeSrc":"8658:6:21","nodeType":"YulIdentifier","src":"8658:6:21"},"nativeSrc":"8658:43:21","nodeType":"YulFunctionCall","src":"8658:43:21"},"nativeSrc":"8658:43:21","nodeType":"YulExpressionStatement","src":"8658:43:21"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"8403:304:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8493:9:21","nodeType":"YulTypedName","src":"8493:9:21","type":""},{"name":"value1","nativeSrc":"8504:6:21","nodeType":"YulTypedName","src":"8504:6:21","type":""},{"name":"value0","nativeSrc":"8512:6:21","nodeType":"YulTypedName","src":"8512:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8523:4:21","nodeType":"YulTypedName","src":"8523:4:21","type":""}],"src":"8403:304:21"},{"body":{"nativeSrc":"8793:103:21","nodeType":"YulBlock","src":"8793:103:21","statements":[{"body":{"nativeSrc":"8839:16:21","nodeType":"YulBlock","src":"8839:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8848:1:21","nodeType":"YulLiteral","src":"8848:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"8851:1:21","nodeType":"YulLiteral","src":"8851:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8841:6:21","nodeType":"YulIdentifier","src":"8841:6:21"},"nativeSrc":"8841:12:21","nodeType":"YulFunctionCall","src":"8841:12:21"},"nativeSrc":"8841:12:21","nodeType":"YulExpressionStatement","src":"8841:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8814:7:21","nodeType":"YulIdentifier","src":"8814:7:21"},{"name":"headStart","nativeSrc":"8823:9:21","nodeType":"YulIdentifier","src":"8823:9:21"}],"functionName":{"name":"sub","nativeSrc":"8810:3:21","nodeType":"YulIdentifier","src":"8810:3:21"},"nativeSrc":"8810:23:21","nodeType":"YulFunctionCall","src":"8810:23:21"},{"kind":"number","nativeSrc":"8835:2:21","nodeType":"YulLiteral","src":"8835:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"8806:3:21","nodeType":"YulIdentifier","src":"8806:3:21"},"nativeSrc":"8806:32:21","nodeType":"YulFunctionCall","src":"8806:32:21"},"nativeSrc":"8803:52:21","nodeType":"YulIf","src":"8803:52:21"},{"nativeSrc":"8864:26:21","nodeType":"YulAssignment","src":"8864:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"8880:9:21","nodeType":"YulIdentifier","src":"8880:9:21"}],"functionName":{"name":"mload","nativeSrc":"8874:5:21","nodeType":"YulIdentifier","src":"8874:5:21"},"nativeSrc":"8874:16:21","nodeType":"YulFunctionCall","src":"8874:16:21"},"variableNames":[{"name":"value0","nativeSrc":"8864:6:21","nodeType":"YulIdentifier","src":"8864:6:21"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"8712:184:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8759:9:21","nodeType":"YulTypedName","src":"8759:9:21","type":""},{"name":"dataEnd","nativeSrc":"8770:7:21","nodeType":"YulTypedName","src":"8770:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8782:6:21","nodeType":"YulTypedName","src":"8782:6:21","type":""}],"src":"8712:184:21"},{"body":{"nativeSrc":"9030:145:21","nodeType":"YulBlock","src":"9030:145:21","statements":[{"nativeSrc":"9040:26:21","nodeType":"YulAssignment","src":"9040:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"9052:9:21","nodeType":"YulIdentifier","src":"9052:9:21"},{"kind":"number","nativeSrc":"9063:2:21","nodeType":"YulLiteral","src":"9063:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9048:3:21","nodeType":"YulIdentifier","src":"9048:3:21"},"nativeSrc":"9048:18:21","nodeType":"YulFunctionCall","src":"9048:18:21"},"variableNames":[{"name":"tail","nativeSrc":"9040:4:21","nodeType":"YulIdentifier","src":"9040:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9082:9:21","nodeType":"YulIdentifier","src":"9082:9:21"},{"arguments":[{"name":"value0","nativeSrc":"9097:6:21","nodeType":"YulIdentifier","src":"9097:6:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9113:3:21","nodeType":"YulLiteral","src":"9113:3:21","type":"","value":"160"},{"kind":"number","nativeSrc":"9118:1:21","nodeType":"YulLiteral","src":"9118:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"9109:3:21","nodeType":"YulIdentifier","src":"9109:3:21"},"nativeSrc":"9109:11:21","nodeType":"YulFunctionCall","src":"9109:11:21"},{"kind":"number","nativeSrc":"9122:1:21","nodeType":"YulLiteral","src":"9122:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"9105:3:21","nodeType":"YulIdentifier","src":"9105:3:21"},"nativeSrc":"9105:19:21","nodeType":"YulFunctionCall","src":"9105:19:21"}],"functionName":{"name":"and","nativeSrc":"9093:3:21","nodeType":"YulIdentifier","src":"9093:3:21"},"nativeSrc":"9093:32:21","nodeType":"YulFunctionCall","src":"9093:32:21"}],"functionName":{"name":"mstore","nativeSrc":"9075:6:21","nodeType":"YulIdentifier","src":"9075:6:21"},"nativeSrc":"9075:51:21","nodeType":"YulFunctionCall","src":"9075:51:21"},"nativeSrc":"9075:51:21","nodeType":"YulExpressionStatement","src":"9075:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9146:9:21","nodeType":"YulIdentifier","src":"9146:9:21"},{"kind":"number","nativeSrc":"9157:2:21","nodeType":"YulLiteral","src":"9157:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9142:3:21","nodeType":"YulIdentifier","src":"9142:3:21"},"nativeSrc":"9142:18:21","nodeType":"YulFunctionCall","src":"9142:18:21"},{"name":"value1","nativeSrc":"9162:6:21","nodeType":"YulIdentifier","src":"9162:6:21"}],"functionName":{"name":"mstore","nativeSrc":"9135:6:21","nodeType":"YulIdentifier","src":"9135:6:21"},"nativeSrc":"9135:34:21","nodeType":"YulFunctionCall","src":"9135:34:21"},"nativeSrc":"9135:34:21","nodeType":"YulExpressionStatement","src":"9135:34:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"8901:274:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8991:9:21","nodeType":"YulTypedName","src":"8991:9:21","type":""},{"name":"value1","nativeSrc":"9002:6:21","nodeType":"YulTypedName","src":"9002:6:21","type":""},{"name":"value0","nativeSrc":"9010:6:21","nodeType":"YulTypedName","src":"9010:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9021:4:21","nodeType":"YulTypedName","src":"9021:4:21","type":""}],"src":"8901:274:21"},{"body":{"nativeSrc":"9258:199:21","nodeType":"YulBlock","src":"9258:199:21","statements":[{"body":{"nativeSrc":"9304:16:21","nodeType":"YulBlock","src":"9304:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9313:1:21","nodeType":"YulLiteral","src":"9313:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"9316:1:21","nodeType":"YulLiteral","src":"9316:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9306:6:21","nodeType":"YulIdentifier","src":"9306:6:21"},"nativeSrc":"9306:12:21","nodeType":"YulFunctionCall","src":"9306:12:21"},"nativeSrc":"9306:12:21","nodeType":"YulExpressionStatement","src":"9306:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9279:7:21","nodeType":"YulIdentifier","src":"9279:7:21"},{"name":"headStart","nativeSrc":"9288:9:21","nodeType":"YulIdentifier","src":"9288:9:21"}],"functionName":{"name":"sub","nativeSrc":"9275:3:21","nodeType":"YulIdentifier","src":"9275:3:21"},"nativeSrc":"9275:23:21","nodeType":"YulFunctionCall","src":"9275:23:21"},{"kind":"number","nativeSrc":"9300:2:21","nodeType":"YulLiteral","src":"9300:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"9271:3:21","nodeType":"YulIdentifier","src":"9271:3:21"},"nativeSrc":"9271:32:21","nodeType":"YulFunctionCall","src":"9271:32:21"},"nativeSrc":"9268:52:21","nodeType":"YulIf","src":"9268:52:21"},{"nativeSrc":"9329:29:21","nodeType":"YulVariableDeclaration","src":"9329:29:21","value":{"arguments":[{"name":"headStart","nativeSrc":"9348:9:21","nodeType":"YulIdentifier","src":"9348:9:21"}],"functionName":{"name":"mload","nativeSrc":"9342:5:21","nodeType":"YulIdentifier","src":"9342:5:21"},"nativeSrc":"9342:16:21","nodeType":"YulFunctionCall","src":"9342:16:21"},"variables":[{"name":"value","nativeSrc":"9333:5:21","nodeType":"YulTypedName","src":"9333:5:21","type":""}]},{"body":{"nativeSrc":"9411:16:21","nodeType":"YulBlock","src":"9411:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9420:1:21","nodeType":"YulLiteral","src":"9420:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"9423:1:21","nodeType":"YulLiteral","src":"9423:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9413:6:21","nodeType":"YulIdentifier","src":"9413:6:21"},"nativeSrc":"9413:12:21","nodeType":"YulFunctionCall","src":"9413:12:21"},"nativeSrc":"9413:12:21","nodeType":"YulExpressionStatement","src":"9413:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9380:5:21","nodeType":"YulIdentifier","src":"9380:5:21"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9401:5:21","nodeType":"YulIdentifier","src":"9401:5:21"}],"functionName":{"name":"iszero","nativeSrc":"9394:6:21","nodeType":"YulIdentifier","src":"9394:6:21"},"nativeSrc":"9394:13:21","nodeType":"YulFunctionCall","src":"9394:13:21"}],"functionName":{"name":"iszero","nativeSrc":"9387:6:21","nodeType":"YulIdentifier","src":"9387:6:21"},"nativeSrc":"9387:21:21","nodeType":"YulFunctionCall","src":"9387:21:21"}],"functionName":{"name":"eq","nativeSrc":"9377:2:21","nodeType":"YulIdentifier","src":"9377:2:21"},"nativeSrc":"9377:32:21","nodeType":"YulFunctionCall","src":"9377:32:21"}],"functionName":{"name":"iszero","nativeSrc":"9370:6:21","nodeType":"YulIdentifier","src":"9370:6:21"},"nativeSrc":"9370:40:21","nodeType":"YulFunctionCall","src":"9370:40:21"},"nativeSrc":"9367:60:21","nodeType":"YulIf","src":"9367:60:21"},{"nativeSrc":"9436:15:21","nodeType":"YulAssignment","src":"9436:15:21","value":{"name":"value","nativeSrc":"9446:5:21","nodeType":"YulIdentifier","src":"9446:5:21"},"variableNames":[{"name":"value0","nativeSrc":"9436:6:21","nodeType":"YulIdentifier","src":"9436:6:21"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"9180:277:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9224:9:21","nodeType":"YulTypedName","src":"9224:9:21","type":""},{"name":"dataEnd","nativeSrc":"9235:7:21","nodeType":"YulTypedName","src":"9235:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9247:6:21","nodeType":"YulTypedName","src":"9247:6:21","type":""}],"src":"9180:277:21"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_uint256_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, _1)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address_fromMemory(src))\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := mload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_0ced64e7a7e72856969cefe00640aa7f13f8db705f9748f7d3003a20bc61daa4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Initialization failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_391a75680d8ec99739af126cde56833526e4b720a416f24f1d7ee98c294a45b1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Invalid base asset address\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_5cbb8d647918028d0523fccac550113bbbb71d463bbb8b573c02c32bc5cf2b89__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid weights\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b3262886d4e83856703b764357b6a852eb26ef34a7982063b49217460e097ddc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Invalid rebalancer address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Assets and weights length mismat\")\n        mstore(add(headStart, 96), \"ch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_795f8eca8a22be2e70f1d9bdebdbf85a1dc43e172c3964e13eac586b45ff2b92__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid asset address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ff1ef73e4333da4da038aba1312a1df349427c8859c23d4b6d4a7df22bfc1a19__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Invalid weight\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561000f575f80fd5b5060405161401538038061401583398101604081905261002e916107b0565b60405180604001604052806009815260200168042616c756e69204c560bc1b81525060405180604001604052806009815260200168042414c554e492d4c560bc1b81525081600390816100819190610909565b50600461008e8282610909565b5050600160055550600b80546001600160a01b0319166001600160a01b038316179055670de0b6b3a76400006008555f6100c8858561028b565b90508061011c5760405162461bcd60e51b815260206004820152601560248201527f496e697469616c697a6174696f6e206661696c6564000000000000000000000060448201526064015b60405180910390fd5b6007839055600b5460408051631bf01e9b60e01b815290516001600160a01b0390921691631bf01e9b916004808201926020929091908290030181865afa158015610169573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061018d91906109c8565b600980546001600160a01b0319166001600160a01b0392909216918217905564e8d4a51000600a556102015760405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964206261736520617373657420616464726573730000000000006044820152606401610113565b5f805b855181101561023c5785818151811061021f5761021f6109e8565b60200260200101518261023291906109fc565b9150600101610204565b5080612710146102805760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207765696768747360881b6044820152606401610113565b505050505050610a51565b5f80600b5f9054906101000a90046001600160a01b03166001600160a01b031663cff49d686040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102dd573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061030191906109c8565b90505f6001600160a01b0316600b5f9054906101000a90046001600160a01b03166001600160a01b031663cff49d686040518163ffffffff1660e01b8152600401602060405180830381865afa15801561035d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061038191906109c8565b6001600160a01b0316036103d75760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420726562616c616e63657220616464726573730000000000006044820152606401610113565b82518451146104335760405162461bcd60e51b815260206004820152602260248201527f41737365747320616e642077656967687473206c656e677468206d69736d61746044820152610c6d60f31b6064820152608401610113565b5f5b84518110156106b6575f6001600160a01b031685828151811061045a5761045a6109e8565b60200260200101516001600160a01b0316036104b85760405162461bcd60e51b815260206004820152601560248201527f496e76616c6964206173736574206164647265737300000000000000000000006044820152606401610113565b5f8482815181106104cb576104cb6109e8565b6020026020010151116105115760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081dd95a59da1d60921b6044820152606401610113565b60066040518060400160405280878481518110610530576105306109e8565b60200260200101516001600160a01b03168152602001868481518110610558576105586109e8565b6020908102919091018101519091528254600180820185555f948552828520845160029093020180546001600160a01b0319166001600160a01b03909316929092178255929091015191015585518690839081106105b8576105b86109e8565b6020908102919091010151604051636eb1769f60e11b81523060048201526001600160a01b0385811660248301529192509082169063dd62ed3e90604401602060405180830381865afa158015610611573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106359190610a1b565b5f036106ad5760405163095ea7b360e01b81526001600160a01b0384811660048301525f19602483015282169063095ea7b3906044016020604051808303815f875af1158015610687573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106ab9190610a32565b505b50600101610435565b5060019150505b92915050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b03811182821017156106ff576106ff6106c3565b604052919050565b5f6001600160401b0382111561071f5761071f6106c3565b5060051b60200190565b80516001600160a01b038116811461073f575f80fd5b919050565b5f82601f830112610753575f80fd5b8151602061076861076383610707565b6106d7565b8083825260208201915060208460051b870101935086841115610789575f80fd5b602086015b848110156107a5578051835291830191830161078e565b509695505050505050565b5f805f80608085870312156107c3575f80fd5b84516001600160401b03808211156107d9575f80fd5b818701915087601f8301126107ec575f80fd5b815160206107fc61076383610707565b82815260059290921b8401810191818101908b84111561081a575f80fd5b948201945b8386101561083f5761083086610729565b8252948201949082019061081f565b918a0151919850909350505080821115610857575f80fd5b5061086487828801610744565b9350506040850151915061087a60608601610729565b905092959194509250565b600181811c9082168061089957607f821691505b6020821081036108b757634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561090457805f5260205f20601f840160051c810160208510156108e25750805b601f840160051c820191505b81811015610901575f81556001016108ee565b50505b505050565b81516001600160401b03811115610922576109226106c3565b610936816109308454610885565b846108bd565b602080601f831160018114610969575f84156109525750858301515b5f19600386901b1c1916600185901b1785556109c0565b5f85815260208120601f198616915b8281101561099757888601518255948401946001909101908401610978565b50858210156109b457878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f602082840312156109d8575f80fd5b6109e182610729565b9392505050565b634e487b7160e01b5f52603260045260245ffd5b808201808211156106bd57634e487b7160e01b5f52601160045260245ffd5b5f60208284031215610a2b575f80fd5b5051919050565b5f60208284031215610a42575f80fd5b815180151581146109e1575f80fd5b6135b780610a5e5f395ff3fe608060405234801561000f575f80fd5b50600436106101d1575f3560e01c80637fec8d38116100fe578063c2ee3a081161009e578063dd62ed3e1161006e578063dd62ed3e146103ef578063de836ebd14610427578063e73faa2d1461043a578063f47b45e814610442575f80fd5b8063c2ee3a081461038e578063cdf456e114610397578063cf8fa764146103aa578063d14ef46d146103bd575f80fd5b80638a77c8dc116100d95780638a77c8dc1461035857806395d89b4114610360578063a9059cbb14610368578063b2b55d701461037b575f80fd5b80637fec8d381461032657806389ab35321461032f57806389afcb4414610345575f80fd5b806323b872dd1161017457806367e4ac2c1161014457806367e4ac2c146102ab5780636e81221c146102c057806370a08231146102d35780637b103999146102fb575f80fd5b806323b872dd14610260578063313ce5671461027357806336bf6e39146102825780634aa0665214610298575f80fd5b8063095ea7b3116101af578063095ea7b31461021b57806318160ddd1461023e5780631a6865021461025057806322acb86714610258575f80fd5b806306fdde03146101d55780630723c999146101f35780630902f1ac14610213575b5f80fd5b6101dd610458565b6040516101ea9190612ddd565b60405180910390f35b610206610201366004612e47565b6104e8565b6040516101ea9190612e9c565b610206610762565b61022e610229366004612eae565b610881565b60405190151581526020016101ea565b6002545b6040519081526020016101ea565b61024261089a565b6102066108ab565b61022e61026e366004612ed8565b61094b565b604051601281526020016101ea565b61028a61096e565b6040516101ea929190612f16565b6102426102a6366004612ed8565b610982565b6102b3610b6b565b6040516101ea9190612f66565b6102426102ce366004612f78565b610c26565b6102426102e1366004612e47565b6001600160a01b03165f9081526020819052604090205490565b600b5461030e906001600160a01b031681565b6040516001600160a01b0390911681526020016101ea565b61024260075481565b610337610edb565b6040516101ea929190612fc8565b610206610353366004612e47565b611096565b61022e6116a9565b6101dd611723565b61022e610376366004612eae565b611732565b610242610389366004612e47565b61173f565b61024260085481565b60095461030e906001600160a01b031681565b6102426103b8366004613017565b611847565b6103d06103cb366004613017565b6118c6565b604080516001600160a01b0390931683526020830191909152016101ea565b6102426103fd36600461302e565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b610242610435366004613104565b6118fc565b610242611d12565b61044a611dfa565b6040516101ea9291906131aa565b606060038054610467906131d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610493906131d7565b80156104de5780601f106104b5576101008083540402835291602001916104de565b820191905f5260205f20905b8154815290600101906020018083116104c157829003601f168201915b5050505050905090565b60605f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa15801561053b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061055f9190613222565b9050336001600160a01b038216146105be5760405162461bcd60e51b815260206004820152600e60248201527f4f6e6c792050657269706865727900000000000000000000000000000000000060448201526064015b60405180910390fd5b6105c66116a9565b6106125760405162461bcd60e51b815260206004820152601460248201527f526562616c616e6365206e6f74206e656564656400000000000000000000000060448201526064016105b5565b5f8061061c611f31565b915091505f61062b8383612061565b90505f61063782612163565b9050600a5481610647919061326a565b6006549091505f9067ffffffffffffffff81111561066757610667613065565b604051908082528060200260200182016040528015610690578160200160208202803683370190505b5090505f5b8351811015610709575f8482815181106106b1576106b1613281565b60200260200101511115610701576106e2818583815181106106d5576106d5613281565b602002602001015161219f565b8282815181106106f4576106f4613281565b6020026020010181815250505b600101610695565b50610714888361226f565b336001600160a01b03167fa95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e8460405161074d9190612e9c565b60405180910390a29550505050505b50919050565b60605f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107b5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107d99190613222565b6040517f3e99c1e40000000000000000000000000000000000000000000000000000000081523060048201529091506001600160a01b03821690633e99c1e4906024015f60405180830381865afa158015610836573d5f803e3d5ffd5b505050506040513d5f823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261087b91908101906132ae565b91505090565b5f3361088e8185856122c0565b60019150505b92915050565b5f806108a4611f31565b5092915050565b6006546060905f9067ffffffffffffffff8111156108cb576108cb613065565b6040519080825280602002602001820160405280156108f4578160200160208202803683370190505b5090505f5b60065481101561075c576006818154811061091657610916613281565b905f5260205f2090600202016001015482828151811061093857610938613281565b60209081029190910101526001016108f9565b5f336109588582856122d2565b610963858585612385565b506001949350505050565b5f6060610979611f31565b90939092509050565b5f80600b5f9054906101000a90046001600160a01b03166001600160a01b031663bb3ba04c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109d4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109f89190613222565b90505f6001600160a01b0316600b5f9054906101000a90046001600160a01b03166001600160a01b031663bb3ba04c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a54573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a789190613222565b6001600160a01b031603610ace5760405162461bcd60e51b815260206004820152601660248201527f496e76616c6964206f7261636c6520616464726573730000000000000000000060448201526064016105b5565b6040517f248391ff0000000000000000000000000000000000000000000000000000000081526001600160a01b0386811660048301528581166024830152604482018590525f919083169063248391ff90606401602060405180830381865afa158015610b3d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b61919061333a565b9695505050505050565b6006546060905f9067ffffffffffffffff811115610b8b57610b8b613065565b604051908082528060200260200182016040528015610bb4578160200160208202803683370190505b5090505f5b60065481101561075c5760068181548110610bd657610bd6613281565b5f91825260209091206002909102015482516001600160a01b0390911690839083908110610c0657610c06613281565b6001600160a01b0390921660209283029190910190910152600101610bb9565b5f610c2f612414565b600b54604080517f85462d6f00000000000000000000000000000000000000000000000000000000815290515f926001600160a01b0316916385462d6f9160048083019260209291908290030181865afa158015610c8f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cb3919061333a565b9050846001600160a01b0316866001600160a01b031603610d165760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742073776170207468652073616d6520746f6b656e00000000000060448201526064016105b5565b5f8411610d655760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064016105b5565b5f610d71878787610982565b905080610d7d8761173f565b1015610dcb5760405162461bcd60e51b815260206004820152601660248201527f496e73756666696369656e74204c69717569646974790000000000000000000060448201526064016105b5565b5f612710610dd9848461326a565b610de39190613351565b9050610def8183613389565b93505f8411610e665760405162461bcd60e51b815260206004820152602560248201527f416d6f756e7420746f2073656e64206d7573742062652067726561746572207460448201527f68616e203000000000000000000000000000000000000000000000000000000060648201526084016105b5565b866001600160a01b0316886001600160a01b0316866001600160a01b03167fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460628988604051610ebe929190918252602082015260400190565b60405180910390a4505050610ed36001600555565b949350505050565b6060805f80610ee8611f31565b60065491935091508067ffffffffffffffff811115610f0957610f09613065565b604051908082528060200260200182016040528015610f32578160200160208202803683370190505b5094508067ffffffffffffffff811115610f4e57610f4e613065565b604051908082528060200260200182016040528015610f77578160200160208202803683370190505b5093505f5b8181101561108e575f84848381518110610f9857610f98613281565b6020026020010151612710610fad919061326a565b610fb79190613351565b90505f60068381548110610fcd57610fcd613281565b905f5260205f2090600202016001015490508082111561103857610ff18183613389565b87848151811061100357611003613281565b602002602001018181525050600188848151811061102357611023613281565b91151560209283029190910190910152611084565b6110428282613389565b87848151811061105457611054613281565b6020026020010181815250505f88848151811061107357611073613281565b911515602092830291909101909101525b5050600101610f7c565b505050509091565b60605f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110e9573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061110d9190613222565b9050336001600160a01b038216146111675760405162461bcd60e51b815260206004820152600e60248201527f4f6e6c792050657269706865727900000000000000000000000000000000000060448201526064016105b5565b600b54604080517f85462d6f00000000000000000000000000000000000000000000000000000000815290515f926001600160a01b0316916385462d6f9160048083019260209291908290030181865afa1580156111c7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111eb919061333a565b90505f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa15801561123e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112629190613222565b305f90815260208190526040902054909150806112c15760405162461bcd60e51b815260206004820152601c60248201527f5368617265206d7573742062652067726561746572207468616e20300000000060448201526064016105b5565b5f6112cb60025490565b90505f811161131c5760405162461bcd60e51b815260206004820152600c60248201527f4e6f206c6971756964697479000000000000000000000000000000000000000060448201526064016105b5565b6006545f9067ffffffffffffffff81111561133957611339613065565b604051908082528060200260200182016040528015611362578160200160208202803683370190505b5090505f612710611373878661326a565b61137d9190613351565b90505f61138a8286613389565b90505f5b60065481101561148e575f876001600160a01b031663a3e113fb30600685815481106113bc576113bc613281565b5f91825260209091206002909102015460405160e084901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa15801561142d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611451919061333a565b90508561145e848361326a565b6114689190613351565b85838151811061147a5761147a613281565b60209081029190910101525060010161138e565b50305f908152602081905260409020548111156114ed5760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e742042414c554e49206c697175696469747900000060448201526064016105b5565b600b54604080517f3b19e84a00000000000000000000000000000000000000000000000000000000815290515f926001600160a01b031691633b19e84a9160048083019260209291908290030181865afa15801561154d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115719190613222565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0382166004820152602481018590529091505f90309063a9059cbb906044016020604051808303815f875af11580156115d9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115fd919061339c565b90508061164c5760405162461bcd60e51b815260206004820152601360248201527f466565207472616e73666572206661696c65640000000000000000000000000060448201526064016105b5565b6116563084612457565b8b6001600160a01b03167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58460405161169191815260200190565b60405180910390a250929a9950505050505050505050565b5f805f6116b4610edb565b915091505f5b815181101561171a578281815181106116d5576116d5613281565b6020026020010151801561170357506007548282815181106116f9576116f9613281565b6020026020010151115b15611712576001935050505090565b6001016116ba565b505f9250505090565b606060048054610467906131d7565b5f3361088e818585612385565b5f80600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015611791573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117b59190613222565b6040517fa3e113fb0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b0385811660248301529192509082169063a3e113fb90604401602060405180830381865afa15801561181c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611840919061333a565b9392505050565b5f80611851611f31565b915050805183106118a45760405162461bcd60e51b815260206004820152601360248201527f496e76616c696420617373657420696e6465780000000000000000000000000060448201526064016105b5565b8083815181106118b6576118b6613281565b6020026020010151915050919050565b600681815481106118d5575f80fd5b5f918252602090912060029091020180546001909101546001600160a01b03909116915082565b5f80600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa15801561194e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119729190613222565b9050336001600160a01b038216146119cc5760405162461bcd60e51b815260206004820152600e60248201527f4f6e6c792050657269706865727900000000000000000000000000000000000060448201526064016105b5565b5f6119d660025490565b90505f806119e2610762565b805160065491925014611a375760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964207265736572766573206c656e67746800000000000000000060448201526064016105b5565b600654611a865760405162461bcd60e51b815260206004820152600960248201527f4e6f20617373657473000000000000000000000000000000000000000000000060448201526064016105b5565b5f5b600654811015611b24575f60068281548110611aa657611aa6613281565b5f91825260208220600290910201546009546001600160a01b039182169350168203611ae857888381518110611ade57611ade613281565b50611b1c92505050565b611b0b828a8581518110611afe57611afe613281565b60200260200101516124a4565b9050611b1781866133bb565b945050505b600101611a88565b505f8211611b9a5760405162461bcd60e51b815260206004820152602260248201527f546f74616c2076616c7565206d7573742062652067726561746572207468616e60448201527f203000000000000000000000000000000000000000000000000000000000000060648201526084016105b5565b5f835f03611bb657600a54611baf908461326a565b9050611c6b565b5f611bbf611f31565b5090505f8111611c375760405162461bcd60e51b815260206004820152602660248201527f546f74616c206c6971756964697479206d75737420626520677265617465722060448201527f7468616e2030000000000000000000000000000000000000000000000000000060648201526084016105b5565b600a54611c44908261326a565b85600a5486611c53919061326a565b611c5d919061326a565b611c679190613351565b9150505b805f03611cba5760405162461bcd60e51b815260206004820152600d60248201527f4d696e742071747920697320300000000000000000000000000000000000000060448201526064016105b5565b611cc4888261226f565b876001600160a01b03167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688582604051611cff91815260200190565b60405180910390a2979650505050505050565b5f8060095f9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d64573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d8891906133ce565b60ff1690505f611d99826012613389565b611da490600a61350c565b90505f611daf611f31565b5090505f611dbc60025490565b9050805f03611dcf575f94505050505090565b60085481611ddd858561326a565b611de79190613351565b611df1919061326a565b94505050505090565b6060805f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e4e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e729190613222565b9050336001600160a01b03821614611ecc5760405162461bcd60e51b815260206004820152600e60248201527f4f6e6c792050657269706865727900000000000000000000000000000000000060448201526064016105b5565b611ed46116a9565b611f205760405162461bcd60e51b815260206004820152601460248201527f526562616c616e6365206e6f74206e656564656400000000000000000000000060448201526064016105b5565b611f286124be565b92509250509091565b6006545f906060908067ffffffffffffffff811115611f5257611f52613065565b604051908082528060200260200182016040528015611f7b578160200160208202803683370190505b5091505f5b8181101561205b575f60068281548110611f9c57611f9c613281565b5f91825260208220600290910201546001600160a01b03169150611fbf8261173f565b6009549091506001600160a01b0390811690831603611ffc5780858481518110611feb57611feb613281565b60200260200101818152505061202a565b5f61200783836124a4565b90508086858151811061201c5761201c613281565b602002602001018181525050505b84838151811061203c5761203c613281565b60200260200101518661204f91906133bb565b95505050600101611f80565b50509091565b60065460609067ffffffffffffffff81111561207f5761207f613065565b6040519080825280602002602001820160405280156120a8578160200160208202803683370190505b5090505f5b6006548110156108a4575f612710600683815481106120ce576120ce613281565b905f5260205f20906002020160010154866120e9919061326a565b6120f39190613351565b90508084838151811061210857612108613281565b6020026020010151101561215a5783828151811061212857612128613281565b60200260200101518161213b9190613389565b83838151811061214d5761214d613281565b6020026020010181815250505b506001016120ad565b5f805b60065481101561075c5782818151811061218257612182613281565b60200260200101518261219591906133bb565b9150600101612166565b600954600680545f926001600160a01b03169190859081106121c3576121c3613281565b5f9182526020909120600290910201546001600160a01b0316036121e8575080610894565b5f61221e600685815481106121ff576121ff613281565b5f9182526020909120600290910201546001600160a01b031684612b81565b90505f81116118405760405162461bcd60e51b815260206004820152601b60248201527f496e76616c696420746f6b656e20616d6f756e7420746f20616464000000000060448201526064016105b5565b6001600160a01b0382166122b1576040517fec442f050000000000000000000000000000000000000000000000000000000081525f60048201526024016105b5565b6122bc5f8383612b9a565b5050565b6122cd8383836001612cd9565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461237f5781811015612371576040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015260248101829052604481018390526064016105b5565b61237f84848484035f612cd9565b50505050565b6001600160a01b0383166123c7576040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f60048201526024016105b5565b6001600160a01b038216612409576040517fec442f050000000000000000000000000000000000000000000000000000000081525f60048201526024016105b5565b6122cd838383612b9a565b600260055403612450576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600555565b6001600160a01b038216612499576040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f60048201526024016105b5565b6122bc825f83612b9a565b6009545f906118409084906001600160a01b031684610982565b6060805f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015612512573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906125369190613222565b90505f600b5f9054906101000a90046001600160a01b03166001600160a01b031663cff49d686040518163ffffffff1660e01b8152600401602060405180830381865afa158015612589573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906125ad9190613222565b6006549091505f9067ffffffffffffffff8111156125cd576125cd613065565b6040519080825280602002602001820160405280156125f6578160200160208202803683370190505b506006549091505f9067ffffffffffffffff81111561261757612617613065565b604051908082528060200260200182016040528015612640578160200160208202803683370190505b506006549091505f9067ffffffffffffffff81111561266157612661613065565b60405190808252806020026020018201604052801561268a578160200160208202803683370190505b506006549091505f9067ffffffffffffffff8111156126ab576126ab613065565b6040519080825280602002602001820160405280156126d4578160200160208202803683370190505b506006549091505f9067ffffffffffffffff8111156126f5576126f5613065565b60405190808252806020026020018201604052801561271e578160200160208202803683370190505b506006549091505f9067ffffffffffffffff81111561273f5761273f613065565b604051908082528060200260200182016040528015612768578160200160208202803683370190505b5090505f5b6006548110156128df576006818154811061278a5761278a613281565b5f91825260209091206002909102015487516001600160a01b03909116908890839081106127ba576127ba613281565b60200260200101906001600160a01b031690816001600160a01b031681525050600681815481106127ed576127ed613281565b905f5260205f2090600202016001015486828151811061280f5761280f613281565b60200260200101818152505086818151811061282d5761282d613281565b60209081029190910101516040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b038b81166004830152909116906370a0823190602401602060405180830381865afa158015612896573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906128ba919061333a565b8582815181106128cc576128cc613281565b602090810291909101015260010161276d565b505f6128e9610762565b9050876001600160a01b031663f0bf77148289896007548e8f60095f9054906101000a90046001600160a01b03166040518863ffffffff1660e01b81526004016129399796959493929190613517565b5f604051808303815f87803b158015612950575f80fd5b505af1158015612962573d5f803e3d5ffd5b505050505f5b600654811015612b2f5787818151811061298457612984613281565b60209081029190910101516040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b038c81166004830152909116906370a0823190602401602060405180830381865afa1580156129ed573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612a11919061333a565b858281518110612a2357612a23613281565b602002602001018181525050858181518110612a4157612a41613281565b6020026020010151858281518110612a5b57612a5b613281565b60200260200101511115612aca57858181518110612a7b57612a7b613281565b6020026020010151858281518110612a9557612a95613281565b6020026020010151612aa79190613389565b848281518110612ab957612ab9613281565b602002602001018181525050612b27565b848181518110612adc57612adc613281565b6020026020010151868281518110612af657612af6613281565b6020026020010151612b089190613389565b838281518110612b1a57612b1a613281565b6020026020010181815250505b600101612968565b50336001600160a01b03167f279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b888604051612b699190612f66565b60405180910390a25090999098509650505050505050565b6009545f90611840906001600160a01b03168484610982565b6001600160a01b038316612bc4578060025f828254612bb991906133bb565b90915550612c4d9050565b6001600160a01b0383165f9081526020819052604090205481811015612c2f576040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b038516600482015260248101829052604481018390526064016105b5565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216612c6957600280548290039055612c87565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612ccc91815260200190565b60405180910390a3505050565b6001600160a01b038416612d1b576040517fe602df050000000000000000000000000000000000000000000000000000000081525f60048201526024016105b5565b6001600160a01b038316612d5d576040517f94280d620000000000000000000000000000000000000000000000000000000081525f60048201526024016105b5565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561237f57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051612dcf91815260200190565b60405180910390a350505050565b602081525f82518060208401528060208501604085015e5f6040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b6001600160a01b0381168114612e44575f80fd5b50565b5f60208284031215612e57575f80fd5b813561184081612e30565b5f815180845260208085019450602084015f5b83811015612e9157815187529582019590820190600101612e75565b509495945050505050565b602081525f6118406020830184612e62565b5f8060408385031215612ebf575f80fd5b8235612eca81612e30565b946020939093013593505050565b5f805f60608486031215612eea575f80fd5b8335612ef581612e30565b92506020840135612f0581612e30565b929592945050506040919091013590565b828152604060208201525f610ed36040830184612e62565b5f815180845260208085019450602084015f5b83811015612e915781516001600160a01b031687529582019590820190600101612f41565b602081525f6118406020830184612f2e565b5f805f8060808587031215612f8b575f80fd5b8435612f9681612e30565b93506020850135612fa681612e30565b9250604085013591506060850135612fbd81612e30565b939692955090935050565b604080825283519082018190525f906020906060840190828701845b82811015613002578151151584529284019290840190600101612fe4565b5050508381036020850152610b618186612e62565b5f60208284031215613027575f80fd5b5035919050565b5f806040838503121561303f575f80fd5b823561304a81612e30565b9150602083013561305a81612e30565b809150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156130d9576130d9613065565b604052919050565b5f67ffffffffffffffff8211156130fa576130fa613065565b5060051b60200190565b5f8060408385031215613115575f80fd5b823561312081612e30565b915060208381013567ffffffffffffffff81111561313c575f80fd5b8401601f8101861361314c575f80fd5b803561315f61315a826130e1565b613092565b81815260059190911b8201830190838101908883111561317d575f80fd5b928401925b8284101561319b57833582529284019290840190613182565b80955050505050509250929050565b604081525f6131bc6040830185612e62565b82810360208401526131ce8185612e62565b95945050505050565b600181811c908216806131eb57607f821691505b60208210810361075c577f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60208284031215613232575f80fd5b815161184081612e30565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b80820281158282048414176108945761089461323d565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f60208083850312156132bf575f80fd5b825167ffffffffffffffff8111156132d5575f80fd5b8301601f810185136132e5575f80fd5b80516132f361315a826130e1565b81815260059190911b82018301908381019087831115613311575f80fd5b928401925b8284101561332f57835182529284019290840190613316565b979650505050505050565b5f6020828403121561334a575f80fd5b5051919050565b5f82613384577f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b500490565b818103818111156108945761089461323d565b5f602082840312156133ac575f80fd5b81518015158114611840575f80fd5b808201808211156108945761089461323d565b5f602082840312156133de575f80fd5b815160ff81168114611840575f80fd5b600181815b8085111561344757817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561342d5761342d61323d565b8085161561343a57918102915b93841c93908002906133f3565b509250929050565b5f8261345d57506001610894565b8161346957505f610894565b816001811461347f5760028114613489576134a5565b6001915050610894565b60ff84111561349a5761349a61323d565b50506001821b610894565b5060208310610133831016604e8410600b84101617156134c8575081810a610894565b6134d283836133ee565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156135045761350461323d565b029392505050565b5f611840838361344f565b60e081525f61352960e083018a612e62565b828103602084015261353b818a612f2e565b9050828103604084015261354f8189612e62565b606084019790975250506001600160a01b03938416608082015291831660a083015290911660c090910152939250505056fea2646970667358221220c6a3d61ca15c544b3045ee0408c13fc0224f13afedd5e0a99e72d6ead0660a5f64736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4015 CODESIZE SUB DUP1 PUSH2 0x4015 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x7B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x42616C756E69204C5 PUSH1 0xBC SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x42414C554E492D4C5 PUSH1 0xBC SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x909 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x8E DUP3 DUP3 PUSH2 0x909 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x5 SSTORE POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SSTORE PUSH0 PUSH2 0xC8 DUP6 DUP6 PUSH2 0x28B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x11C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A6174696F6E206661696C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP4 SWAP1 SSTORE PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1BF01E9B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x1BF01E9B SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x169 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH5 0xE8D4A51000 PUSH1 0xA SSTORE PUSH2 0x201 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420626173652061737365742061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x113 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x23C JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x21F JUMPI PUSH2 0x21F PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x9FC JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x204 JUMP JUMPDEST POP DUP1 PUSH2 0x2710 EQ PUSH2 0x280 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642077656967687473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x113 JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0xA51 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x35D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726562616C616E6365722061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x113 JUMP JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH2 0x433 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x113 JUMP JUMPDEST PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6B6 JUMPI PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x45A JUMPI PUSH2 0x45A PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x113 JUMP JUMPDEST PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4CB JUMPI PUSH2 0x4CB PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x511 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081DD95A59DA1D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x113 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x530 JUMPI PUSH2 0x530 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x558 JUMPI PUSH2 0x558 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP6 SSTORE PUSH0 SWAP5 DUP6 MSTORE DUP3 DUP6 KECCAK256 DUP5 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP3 SSTORE SWAP3 SWAP1 SWAP2 ADD MLOAD SWAP2 ADD SSTORE DUP6 MLOAD DUP7 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x5B8 JUMPI PUSH2 0x5B8 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x611 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x635 SWAP2 SWAP1 PUSH2 0xA1B JUMP JUMPDEST PUSH0 SUB PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH0 NOT PUSH1 0x24 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x687 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6AB SWAP2 SWAP1 PUSH2 0xA32 JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x435 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x6FF JUMPI PUSH2 0x6FF PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x71F JUMPI PUSH2 0x71F PUSH2 0x6C3 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x73F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x753 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x768 PUSH2 0x763 DUP4 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x789 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x7A5 JUMPI DUP1 MLOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x78E JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x7C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x7D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7EC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x7FC PUSH2 0x763 DUP4 PUSH2 0x707 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP12 DUP5 GT ISZERO PUSH2 0x81A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x83F JUMPI PUSH2 0x830 DUP7 PUSH2 0x729 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x81F JUMP JUMPDEST SWAP2 DUP11 ADD MLOAD SWAP2 SWAP9 POP SWAP1 SWAP4 POP POP POP DUP1 DUP3 GT ISZERO PUSH2 0x857 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x864 DUP8 DUP3 DUP9 ADD PUSH2 0x744 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH2 0x87A PUSH1 0x60 DUP7 ADD PUSH2 0x729 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x899 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x8B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x904 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x8E2 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x901 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x8EE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x922 JUMPI PUSH2 0x922 PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0x936 DUP2 PUSH2 0x930 DUP5 SLOAD PUSH2 0x885 JUMP JUMPDEST DUP5 PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x969 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x952 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x9C0 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x997 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x978 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x9B4 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9E1 DUP3 PUSH2 0x729 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6BD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA2B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA42 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x9E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x35B7 DUP1 PUSH2 0xA5E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FEC8D38 GT PUSH2 0xFE JUMPI DUP1 PUSH4 0xC2EE3A08 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xDE836EBD EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0xF47B45E8 EQ PUSH2 0x442 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC2EE3A08 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xCDF456E1 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xCF8FA764 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xD14EF46D EQ PUSH2 0x3BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8A77C8DC GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x8A77C8DC EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xB2B55D70 EQ PUSH2 0x37B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7FEC8D38 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x89AB3532 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x345 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x174 JUMPI DUP1 PUSH4 0x67E4AC2C GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x67E4AC2C EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x2FB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x36BF6E39 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x298 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1AF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x22ACB867 EQ PUSH2 0x258 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x723C999 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x213 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1DD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x2DDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E47 JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST PUSH2 0x206 PUSH2 0x762 JUMP JUMPDEST PUSH2 0x22E PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAE JUMP JUMPDEST PUSH2 0x881 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EA JUMP JUMPDEST PUSH2 0x242 PUSH2 0x89A JUMP JUMPDEST PUSH2 0x206 PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x22E PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED8 JUMP JUMPDEST PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EA JUMP JUMPDEST PUSH2 0x28A PUSH2 0x96E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP3 SWAP2 SWAP1 PUSH2 0x2F16 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED8 JUMP JUMPDEST PUSH2 0x982 JUMP JUMPDEST PUSH2 0x2B3 PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x2F66 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x2F78 JUMP JUMPDEST PUSH2 0xC26 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x30E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EA JUMP JUMPDEST PUSH2 0x242 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x337 PUSH2 0xEDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP3 SWAP2 SWAP1 PUSH2 0x2FC8 JUMP JUMPDEST PUSH2 0x206 PUSH2 0x353 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E47 JUMP JUMPDEST PUSH2 0x1096 JUMP JUMPDEST PUSH2 0x22E PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x1723 JUMP JUMPDEST PUSH2 0x22E PUSH2 0x376 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAE JUMP JUMPDEST PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E47 JUMP JUMPDEST PUSH2 0x173F JUMP JUMPDEST PUSH2 0x242 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x30E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x3B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3017 JUMP JUMPDEST PUSH2 0x1847 JUMP JUMPDEST PUSH2 0x3D0 PUSH2 0x3CB CALLDATASIZE PUSH1 0x4 PUSH2 0x3017 JUMP JUMPDEST PUSH2 0x18C6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1EA JUMP JUMPDEST PUSH2 0x242 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x302E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x435 CALLDATASIZE PUSH1 0x4 PUSH2 0x3104 JUMP JUMPDEST PUSH2 0x18FC JUMP JUMPDEST PUSH2 0x242 PUSH2 0x1D12 JUMP JUMPDEST PUSH2 0x44A PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP3 SWAP2 SWAP1 PUSH2 0x31AA JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x467 SWAP1 PUSH2 0x31D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x493 SWAP1 PUSH2 0x31D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55F SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506572697068657279000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C6 PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x612 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526562616C616E6365206E6F74206E6565646564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x61C PUSH2 0x1F31 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH2 0x62B DUP4 DUP4 PUSH2 0x2061 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x637 DUP3 PUSH2 0x2163 JUMP JUMPDEST SWAP1 POP PUSH1 0xA SLOAD DUP2 PUSH2 0x647 SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x667 JUMPI PUSH2 0x667 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x690 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x709 JUMPI PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6B1 JUMPI PUSH2 0x6B1 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x701 JUMPI PUSH2 0x6E2 DUP2 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6D5 JUMPI PUSH2 0x6D5 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x219F JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6F4 JUMPI PUSH2 0x6F4 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x695 JUMP JUMPDEST POP PUSH2 0x714 DUP9 DUP4 PUSH2 0x226F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E DUP5 PUSH1 0x40 MLOAD PUSH2 0x74D SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP6 POP POP POP POP POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7B5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7D9 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x3E99C1E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x3E99C1E4 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x836 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x87B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x32AE JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x88E DUP2 DUP6 DUP6 PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8A4 PUSH2 0x1F31 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8CB JUMPI PUSH2 0x8CB PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8F4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x75C JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x916 JUMPI PUSH2 0x916 PUSH2 0x3281 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x938 JUMPI PUSH2 0x938 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x8F9 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x958 DUP6 DUP3 DUP6 PUSH2 0x22D2 JUMP JUMPDEST PUSH2 0x963 DUP6 DUP6 DUP6 PUSH2 0x2385 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH2 0x979 PUSH2 0x1F31 JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9D4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F8 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA54 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA78 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xACE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F7261636C65206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0x248391FF SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB3D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB61 SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB8B JUMPI PUSH2 0xB8B PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBB4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x75C JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xBD6 JUMPI PUSH2 0xBD6 PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xC06 JUMPI PUSH2 0xC06 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0xBB9 JUMP JUMPDEST PUSH0 PUSH2 0xC2F PUSH2 0x2414 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x85462D6F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x85462D6F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC8F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCB3 SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xD16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 DUP5 GT PUSH2 0xD65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 PUSH2 0xD71 DUP8 DUP8 DUP8 PUSH2 0x982 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xD7D DUP8 PUSH2 0x173F JUMP JUMPDEST LT ISZERO PUSH2 0xDCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH2 0xDD9 DUP5 DUP5 PUSH2 0x326A JUMP JUMPDEST PUSH2 0xDE3 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP1 POP PUSH2 0xDEF DUP2 DUP4 PUSH2 0x3389 JUMP JUMPDEST SWAP4 POP PUSH0 DUP5 GT PUSH2 0xE66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F2073656E64206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x68616E2030000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5B5 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 DUP10 DUP9 PUSH1 0x40 MLOAD PUSH2 0xEBE SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP PUSH2 0xED3 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH2 0xEE8 PUSH2 0x1F31 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP2 SWAP4 POP SWAP2 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF09 JUMPI PUSH2 0xF09 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF32 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF4E JUMPI PUSH2 0xF4E PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF77 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x108E JUMPI PUSH0 DUP5 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF98 JUMPI PUSH2 0xF98 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2710 PUSH2 0xFAD SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH2 0xFB7 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xFCD JUMPI PUSH2 0xFCD PUSH2 0x3281 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1038 JUMPI PUSH2 0xFF1 DUP2 DUP4 PUSH2 0x3389 JUMP JUMPDEST DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1003 JUMPI PUSH2 0x1003 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1023 JUMPI PUSH2 0x1023 PUSH2 0x3281 JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH2 0x1084 JUMP JUMPDEST PUSH2 0x1042 DUP3 DUP3 PUSH2 0x3389 JUMP JUMPDEST DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1054 JUMPI PUSH2 0x1054 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1073 JUMPI PUSH2 0x1073 PUSH2 0x3281 JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xF7C JUMP JUMPDEST POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x110D SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1167 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506572697068657279000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x85462D6F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x85462D6F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11C7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11EB SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x123E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1262 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x12C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 PUSH2 0x12CB PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x131C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1339 JUMPI PUSH2 0x1339 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1362 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH2 0x2710 PUSH2 0x1373 DUP8 DUP7 PUSH2 0x326A JUMP JUMPDEST PUSH2 0x137D SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x138A DUP3 DUP7 PUSH2 0x3389 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x148E JUMPI PUSH0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA3E113FB ADDRESS PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x13BC JUMPI PUSH2 0x13BC PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP5 SWAP1 SHL PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x142D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1451 SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x145E DUP5 DUP4 PUSH2 0x326A JUMP JUMPDEST PUSH2 0x1468 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x147A JUMPI PUSH2 0x147A PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x138E JUMP JUMPDEST POP ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x14ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742042414C554E49206C6971756964697479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x3B19E84A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x3B19E84A SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x154D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1571 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH0 SWAP1 ADDRESS SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15D9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15FD SWAP2 SWAP1 PUSH2 0x339C JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x164C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x1656 ADDRESS DUP5 PUSH2 0x2457 JUMP JUMPDEST DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1691 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP3 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x16B4 PUSH2 0xEDB JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x171A JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x16D5 JUMPI PUSH2 0x16D5 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP1 ISZERO PUSH2 0x1703 JUMPI POP PUSH1 0x7 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x16F9 JUMPI PUSH2 0x16F9 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT JUMPDEST ISZERO PUSH2 0x1712 JUMPI PUSH1 0x1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x16BA JUMP JUMPDEST POP PUSH0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x467 SWAP1 PUSH2 0x31D7 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x88E DUP2 DUP6 DUP6 PUSH2 0x2385 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1791 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17B5 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA3E113FB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xA3E113FB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x181C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1840 SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1851 PUSH2 0x1F31 JUMP JUMPDEST SWAP2 POP POP DUP1 MLOAD DUP4 LT PUSH2 0x18A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420696E64657800000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST DUP1 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x18B6 JUMPI PUSH2 0x18B6 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x18D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x194E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1972 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x19CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506572697068657279000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 PUSH2 0x19D6 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0x19E2 PUSH2 0x762 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x6 SLOAD SWAP2 SWAP3 POP EQ PUSH2 0x1A37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1A86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206173736574730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1B24 JUMPI PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1AA6 JUMPI PUSH2 0x1AA6 PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 POP AND DUP3 SUB PUSH2 0x1AE8 JUMPI DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1ADE JUMPI PUSH2 0x1ADE PUSH2 0x3281 JUMP JUMPDEST POP PUSH2 0x1B1C SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1B0B DUP3 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1AFE JUMPI PUSH2 0x1AFE PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x24A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B17 DUP2 DUP7 PUSH2 0x33BB JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1A88 JUMP JUMPDEST POP PUSH0 DUP3 GT PUSH2 0x1B9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 DUP4 PUSH0 SUB PUSH2 0x1BB6 JUMPI PUSH1 0xA SLOAD PUSH2 0x1BAF SWAP1 DUP5 PUSH2 0x326A JUMP JUMPDEST SWAP1 POP PUSH2 0x1C6B JUMP JUMPDEST PUSH0 PUSH2 0x1BBF PUSH2 0x1F31 JUMP JUMPDEST POP SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1C37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E20300000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1C44 SWAP1 DUP3 PUSH2 0x326A JUMP JUMPDEST DUP6 PUSH1 0xA SLOAD DUP7 PUSH2 0x1C53 SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH2 0x1C5D SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH2 0x1C67 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x1CBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420717479206973203000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x1CC4 DUP9 DUP3 PUSH2 0x226F JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1CFF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D64 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D88 SWAP2 SWAP1 PUSH2 0x33CE JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH2 0x1D99 DUP3 PUSH1 0x12 PUSH2 0x3389 JUMP JUMPDEST PUSH2 0x1DA4 SWAP1 PUSH1 0xA PUSH2 0x350C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1DAF PUSH2 0x1F31 JUMP JUMPDEST POP SWAP1 POP PUSH0 PUSH2 0x1DBC PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0x1DCF JUMPI PUSH0 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 PUSH2 0x1DDD DUP6 DUP6 PUSH2 0x326A JUMP JUMPDEST PUSH2 0x1DE7 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST PUSH2 0x1DF1 SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E4E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E72 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1ECC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506572697068657279000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x1ED4 PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x1F20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526562616C616E6365206E6F74206E6565646564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x1F28 PUSH2 0x24BE JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH0 SWAP1 PUSH1 0x60 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F52 JUMPI PUSH2 0x1F52 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F7B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x205B JUMPI PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1F9C JUMPI PUSH2 0x1F9C PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x1FBF DUP3 PUSH2 0x173F JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x1FFC JUMPI DUP1 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1FEB JUMPI PUSH2 0x1FEB PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x202A JUMP JUMPDEST PUSH0 PUSH2 0x2007 DUP4 DUP4 PUSH2 0x24A4 JUMP JUMPDEST SWAP1 POP DUP1 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x201C JUMPI PUSH2 0x201C PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x203C JUMPI PUSH2 0x203C PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH2 0x204F SWAP2 SWAP1 PUSH2 0x33BB JUMP JUMPDEST SWAP6 POP POP POP PUSH1 0x1 ADD PUSH2 0x1F80 JUMP JUMPDEST POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x207F JUMPI PUSH2 0x207F PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20A8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x8A4 JUMPI PUSH0 PUSH2 0x2710 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x20CE JUMPI PUSH2 0x20CE PUSH2 0x3281 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 PUSH2 0x20E9 SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH2 0x20F3 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2108 JUMPI PUSH2 0x2108 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD LT ISZERO PUSH2 0x215A JUMPI DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2128 JUMPI PUSH2 0x2128 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 PUSH2 0x213B SWAP2 SWAP1 PUSH2 0x3389 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x214D JUMPI PUSH2 0x214D PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x20AD JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x75C JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2182 JUMPI PUSH2 0x2182 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x2195 SWAP2 SWAP1 PUSH2 0x33BB JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x2166 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x21C3 JUMPI PUSH2 0x21C3 PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x21E8 JUMPI POP DUP1 PUSH2 0x894 JUMP JUMPDEST PUSH0 PUSH2 0x221E PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x21FF JUMPI PUSH2 0x21FF PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x2B81 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1840 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x22B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x22BC PUSH0 DUP4 DUP4 PUSH2 0x2B9A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x22CD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2CD9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x237F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2371 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x237F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x2CD9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x23C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2409 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x22CD DUP4 DUP4 DUP4 PUSH2 0x2B9A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0x2450 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2499 JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x22BC DUP3 PUSH0 DUP4 PUSH2 0x2B9A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH0 SWAP1 PUSH2 0x1840 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2512 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2536 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2589 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25AD SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25CD JUMPI PUSH2 0x25CD PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x25F6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2617 JUMPI PUSH2 0x2617 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2640 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2661 JUMPI PUSH2 0x2661 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x268A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26AB JUMPI PUSH2 0x26AB PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x26D4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26F5 JUMPI PUSH2 0x26F5 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x271E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x273F JUMPI PUSH2 0x273F PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2768 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x28DF JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x278A JUMPI PUSH2 0x278A PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x27BA JUMPI PUSH2 0x27BA PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x27ED JUMPI PUSH2 0x27ED PUSH2 0x3281 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x280F JUMPI PUSH2 0x280F PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP7 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x282D JUMPI PUSH2 0x282D PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2896 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28BA SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x28CC JUMPI PUSH2 0x28CC PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x276D JUMP JUMPDEST POP PUSH0 PUSH2 0x28E9 PUSH2 0x762 JUMP JUMPDEST SWAP1 POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF0BF7714 DUP3 DUP10 DUP10 PUSH1 0x7 SLOAD DUP15 DUP16 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2939 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3517 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2950 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2962 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2B2F JUMPI DUP8 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2984 JUMPI PUSH2 0x2984 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29ED JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A11 SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A23 JUMPI PUSH2 0x2A23 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2A41 JUMPI PUSH2 0x2A41 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A5B JUMPI PUSH2 0x2A5B PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x2ACA JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2A7B JUMPI PUSH2 0x2A7B PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A95 JUMPI PUSH2 0x2A95 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2AA7 SWAP2 SWAP1 PUSH2 0x3389 JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2AB9 JUMPI PUSH2 0x2AB9 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2B27 JUMP JUMPDEST DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2ADC JUMPI PUSH2 0x2ADC PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2AF6 JUMPI PUSH2 0x2AF6 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2B08 SWAP2 SWAP1 PUSH2 0x3389 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2B1A JUMPI PUSH2 0x2B1A PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2968 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 DUP9 PUSH1 0x40 MLOAD PUSH2 0x2B69 SWAP2 SWAP1 PUSH2 0x2F66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP1 SWAP10 SWAP1 SWAP9 POP SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH0 SWAP1 PUSH2 0x1840 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2BC4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2BB9 SWAP2 SWAP1 PUSH2 0x33BB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2C4D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2C2F JUMPI PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2C69 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x2C87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2CCC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2D1B JUMPI PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2D5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x237F JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2DCF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E44 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E57 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1840 DUP2 PUSH2 0x2E30 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E91 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2E75 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x1840 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E62 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EBF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2ECA DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2EEA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2EF5 DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2F05 DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0xED3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2E62 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E91 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2F41 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x1840 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2F2E JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2F8B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2F96 DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x2FA6 DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x2FBD DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3002 JUMPI DUP2 MLOAD ISZERO ISZERO DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2FE4 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0xB61 DUP2 DUP7 PUSH2 0x2E62 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3027 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x303F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x304A DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x305A DUP2 PUSH2 0x2E30 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x30D9 JUMPI PUSH2 0x30D9 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x30FA JUMPI PUSH2 0x30FA PUSH2 0x3065 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3115 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3120 DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x313C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x314C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x315F PUSH2 0x315A DUP3 PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x3092 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP9 DUP4 GT ISZERO PUSH2 0x317D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x319B JUMPI DUP4 CALLDATALOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x3182 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x31BC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2E62 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x31CE DUP2 DUP6 PUSH2 0x2E62 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x31EB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x75C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3232 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1840 DUP2 PUSH2 0x2E30 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x894 JUMPI PUSH2 0x894 PUSH2 0x323D JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32BF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x32E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x32F3 PUSH2 0x315A DUP3 PUSH2 0x30E1 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x3311 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x332F JUMPI DUP4 MLOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x3316 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x334A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x3384 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x894 JUMPI PUSH2 0x894 PUSH2 0x323D JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33AC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1840 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x894 JUMPI PUSH2 0x894 PUSH2 0x323D JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33DE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1840 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x3447 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x342D JUMPI PUSH2 0x342D PUSH2 0x323D JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x343A JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x33F3 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x345D JUMPI POP PUSH1 0x1 PUSH2 0x894 JUMP JUMPDEST DUP2 PUSH2 0x3469 JUMPI POP PUSH0 PUSH2 0x894 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x347F JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3489 JUMPI PUSH2 0x34A5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x894 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x349A JUMPI PUSH2 0x349A PUSH2 0x323D JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x894 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x34C8 JUMPI POP DUP2 DUP2 EXP PUSH2 0x894 JUMP JUMPDEST PUSH2 0x34D2 DUP4 DUP4 PUSH2 0x33EE JUMP JUMPDEST DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x3504 JUMPI PUSH2 0x3504 PUSH2 0x323D JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1840 DUP4 DUP4 PUSH2 0x344F JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE PUSH0 PUSH2 0x3529 PUSH1 0xE0 DUP4 ADD DUP11 PUSH2 0x2E62 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x353B DUP2 DUP11 PUSH2 0x2F2E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x354F DUP2 DUP10 PUSH2 0x2E62 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x80 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 LOG3 0xD6 SHR LOG1 TLOAD SLOAD 0x4B ADDRESS GASLIMIT 0xEE DIV ADDMOD 0xC1 EXTCODEHASH 0xC0 0x22 0x4F SGT 0xAF 0xED 0xD5 0xE0 0xA9 SWAP15 PUSH19 0xD6EAD0660A5F64736F6C634300081900330000 ","sourceMap":"1779:21983:15:-:0;;;2566:771;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1896:113:8;;;;;;;;;;;;;-1:-1:-1;;;1896:113:8;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:8;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:8;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;1713:1:13;1917:7;:21;-1:-1:-1;2754:8:15::1;:39:::0;;-1:-1:-1;;;;;;2754:39:15::1;-1:-1:-1::0;;;;;2754:39:15;::::1;;::::0;;2812:4:::1;2806:3;:10:::0;-1:-1:-1;2843:35:15::1;2860:7:::0;2869:8;2843:16:::1;:35::i;:::-;2829:49;;2897:6;2889:40;;;::::0;-1:-1:-1;;;2889:40:15;;5533:2:21;2889:40:15::1;::::0;::::1;5515:21:21::0;5572:2;5552:18;;;5545:30;5611:23;5591:18;;;5584:51;5652:18;;2889:40:15::1;;;;;;;;;2942:7;:18:::0;;;2985:8:::1;::::0;:18:::1;::::0;;-1:-1:-1;;;2985:18:15;;;;-1:-1:-1;;;;;2985:8:15;;::::1;::::0;:16:::1;::::0;:18:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;:8;:18:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2973:9;:30:::0;;-1:-1:-1;;;;;;2973:30:15::1;-1:-1:-1::0;;;;;2973:30:15;;;::::1;::::0;;::::1;::::0;;3032:14:::1;3016:13;:30:::0;3059:62:::1;;;::::0;-1:-1:-1;;;3059:62:15;;6096:2:21;3059:62:15::1;::::0;::::1;6078:21:21::0;6135:2;6115:18;;;6108:30;6174:28;6154:18;;;6147:56;6220:18;;3059:62:15::1;5894:350:21::0;3059:62:15::1;3134:19;3175:9:::0;3170:99:::1;3194:8;:15;3190:1;:19;3170:99;;;3246:8;3255:1;3246:11;;;;;;;;:::i;:::-;;;;;;;3231:26;;;;;:::i;:::-;::::0;-1:-1:-1;3211:3:15::1;;3170:99;;;;3289:11;3304:5;3289:20;3281:48;;;::::0;-1:-1:-1;;;3281:48:15;;6810:2:21;3281:48:15::1;::::0;::::1;6792:21:21::0;6849:2;6829:18;;;6822:30;-1:-1:-1;;;6868:18:21;;;6861:45;6923:18;;3281:48:15::1;6608:339:21::0;3281:48:15::1;2743:594;;2566:771:::0;;;;1779:21983;;3736:880;3833:4;3850:18;3871:8;;;;;;;;;-1:-1:-1;;;;;3871:8:15;-1:-1:-1;;;;;3871:28:15;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3850:51;;3964:1;-1:-1:-1;;;;;3922:44:15;:8;;;;;;;;;-1:-1:-1;;;;;3922:8:15;-1:-1:-1;;;;;3922:28:15;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3922:44:15;;3914:83;;;;-1:-1:-1;;;3914:83:15;;7154:2:21;3914:83:15;;;7136:21:21;7193:2;7173:18;;;7166:30;7232:28;7212:18;;;7205:56;7278:18;;3914:83:15;6952:350:21;3914:83:15;4034:8;:15;4016:7;:14;:33;4008:80;;;;-1:-1:-1;;;4008:80:15;;7509:2:21;4008:80:15;;;7491:21:21;7548:2;7528:18;;;7521:30;7587:34;7567:18;;;7560:62;-1:-1:-1;;;7638:18:21;;;7631:32;7680:19;;4008:80:15;7307:398:21;4008:80:15;4106:9;4101:486;4125:7;:14;4121:1;:18;4101:486;;;4191:1;-1:-1:-1;;;;;4169:24:15;:7;4177:1;4169:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4169:24:15;;4161:58;;;;-1:-1:-1;;;4161:58:15;;7912:2:21;4161:58:15;;;7894:21:21;7951:2;7931:18;;;7924:30;7990:23;7970:18;;;7963:51;8031:18;;4161:58:15;7710:345:21;4161:58:15;4256:1;4242:8;4251:1;4242:11;;;;;;;;:::i;:::-;;;;;;;:15;4234:42;;;;-1:-1:-1;;;4234:42:15;;8262:2:21;4234:42:15;;;8244:21:21;8301:2;8281:18;;;8274:30;-1:-1:-1;;;8320:18:21;;;8313:44;8374:18;;4234:42:15;8060:338:21;4234:42:15;4293:10;4309:51;;;;;;;;4327:7;4335:1;4327:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4309:51:15;;;;;4347:8;4356:1;4347:11;;;;;;;;:::i;:::-;;;;;;;;;;;;4309:51;;;4293:68;;;;;;;;-1:-1:-1;4293:68:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4293:68:15;-1:-1:-1;;;;;4293:68:15;;;;;;;;;;;;;;;;;4400:10;;;;4408:1;;4400:10;;;;;;:::i;:::-;;;;;;;;;;;4430:51;;-1:-1:-1;;;4430:51:15;;4454:4;4430:51;;;8615:34:21;-1:-1:-1;;;;;8685:15:21;;;8665:18;;;8658:43;4400:10:15;;-1:-1:-1;4430:15:15;;;;;;8550:18:21;;4430:51:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4485:1;4430:56;4426:150;;4507:53;;-1:-1:-1;;;4507:53:15;;-1:-1:-1;;;;;9093:32:21;;;4507:53:15;;;9075:51:21;-1:-1:-1;;9142:18:21;;;9135:34;4507:13:15;;;;;9048:18:21;;4507:53:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4426:150;-1:-1:-1;4141:3:15;;4101:486;;;;4604:4;4597:11;;;3736:880;;;;;:::o;14:127:21:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:21;247:40;;-1:-1:-1;;;;;302:34:21;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:21:o;426:183::-;486:4;-1:-1:-1;;;;;508:30:21;;505:56;;;541:18;;:::i;:::-;-1:-1:-1;586:1:21;582:14;598:4;578:25;;426:183::o;614:177::-;693:13;;-1:-1:-1;;;;;735:31:21;;725:42;;715:70;;781:1;778;771:12;715:70;614:177;;;:::o;796:665::-;861:5;914:3;907:4;899:6;895:17;891:27;881:55;;932:1;929;922:12;881:55;961:6;955:13;987:4;1011:60;1027:43;1067:2;1027:43;:::i;:::-;1011:60;:::i;:::-;1093:3;1117:2;1112:3;1105:15;1145:4;1140:3;1136:14;1129:21;;1202:4;1196:2;1193:1;1189:10;1181:6;1177:23;1173:34;1159:48;;1230:3;1222:6;1219:15;1216:35;;;1247:1;1244;1237:12;1216:35;1283:4;1275:6;1271:17;1297:135;1313:6;1308:3;1305:15;1297:135;;;1379:10;;1367:23;;1410:12;;;;1330;;1297:135;;;-1:-1:-1;1450:5:21;796:665;-1:-1:-1;;;;;;796:665:21:o;1466:1305::-;1613:6;1621;1629;1637;1690:3;1678:9;1669:7;1665:23;1661:33;1658:53;;;1707:1;1704;1697:12;1658:53;1734:16;;-1:-1:-1;;;;;1799:14:21;;;1796:34;;;1826:1;1823;1816:12;1796:34;1864:6;1853:9;1849:22;1839:32;;1909:7;1902:4;1898:2;1894:13;1890:27;1880:55;;1931:1;1928;1921:12;1880:55;1960:2;1954:9;1982:4;2006:60;2022:43;2062:2;2022:43;:::i;2006:60::-;2100:15;;;2182:1;2178:10;;;;2170:19;;2166:28;;;2131:12;;;;2206:19;;;2203:39;;;2238:1;2235;2228:12;2203:39;2262:11;;;;2282:159;2298:6;2293:3;2290:15;2282:159;;;2364:34;2394:3;2364:34;:::i;:::-;2352:47;;2315:12;;;;2419;;;;2282:159;;;2496:18;;;2490:25;2460:5;;-1:-1:-1;2490:25:21;;-1:-1:-1;;;2527:16:21;;;2524:36;;;2556:1;2553;2546:12;2524:36;;2579:74;2645:7;2634:8;2623:9;2619:24;2579:74;:::i;:::-;2569:84;;;2693:2;2682:9;2678:18;2672:25;2662:35;;2716:49;2761:2;2750:9;2746:18;2716:49;:::i;:::-;2706:59;;1466:1305;;;;;;;:::o;2776:380::-;2855:1;2851:12;;;;2898;;;2919:61;;2973:4;2965:6;2961:17;2951:27;;2919:61;3026:2;3018:6;3015:14;2995:18;2992:38;2989:161;;3072:10;3067:3;3063:20;3060:1;3053:31;3107:4;3104:1;3097:15;3135:4;3132:1;3125:15;2989:161;;2776:380;;;:::o;3287:518::-;3389:2;3384:3;3381:11;3378:421;;;3425:5;3422:1;3415:16;3469:4;3466:1;3456:18;3539:2;3527:10;3523:19;3520:1;3516:27;3510:4;3506:38;3575:4;3563:10;3560:20;3557:47;;;-1:-1:-1;3598:4:21;3557:47;3653:2;3648:3;3644:12;3641:1;3637:20;3631:4;3627:31;3617:41;;3708:81;3726:2;3719:5;3716:13;3708:81;;;3785:1;3771:16;;3752:1;3741:13;3708:81;;;3712:3;;3378:421;3287:518;;;:::o;3981:1345::-;4101:10;;-1:-1:-1;;;;;4123:30:21;;4120:56;;;4156:18;;:::i;:::-;4185:97;4275:6;4235:38;4267:4;4261:11;4235:38;:::i;:::-;4229:4;4185:97;:::i;:::-;4337:4;;4394:2;4383:14;;4411:1;4406:663;;;;5113:1;5130:6;5127:89;;;-1:-1:-1;5182:19:21;;;5176:26;5127:89;-1:-1:-1;;3938:1:21;3934:11;;;3930:24;3926:29;3916:40;3962:1;3958:11;;;3913:57;5229:81;;4376:944;;4406:663;3234:1;3227:14;;;3271:4;3258:18;;-1:-1:-1;;4442:20:21;;;4560:236;4574:7;4571:1;4568:14;4560:236;;;4663:19;;;4657:26;4642:42;;4755:27;;;;4723:1;4711:14;;;;4590:19;;4560:236;;;4564:3;4824:6;4815:7;4812:19;4809:201;;;4885:19;;;4879:26;-1:-1:-1;;4968:1:21;4964:14;;;4980:3;4960:24;4956:37;4952:42;4937:58;4922:74;;4809:201;;;5056:1;5047:6;5044:1;5040:14;5036:22;5030:4;5023:36;4376:944;;;;;3981:1345;;:::o;5681:208::-;5751:6;5804:2;5792:9;5783:7;5779:23;5775:32;5772:52;;;5820:1;5817;5810:12;5772:52;5843:40;5873:9;5843:40;:::i;:::-;5833:50;5681:208;-1:-1:-1;;;5681:208:21:o;6249:127::-;6310:10;6305:3;6301:20;6298:1;6291:31;6341:4;6338:1;6331:15;6365:4;6362:1;6355:15;6381:222;6446:9;;;6467:10;;;6464:133;;;6519:10;6514:3;6510:20;6507:1;6500:31;6554:4;6551:1;6544:15;6582:4;6579:1;6572:15;8712:184;8782:6;8835:2;8823:9;8814:7;8810:23;8806:32;8803:52;;;8851:1;8848;8841:12;8803:52;-1:-1:-1;8874:16:21;;8712:184;-1:-1:-1;8712:184:21:o;9180:277::-;9247:6;9300:2;9288:9;9279:7;9275:23;9271:32;9268:52;;;9316:1;9313;9306:12;9268:52;9348:9;9342:16;9401:5;9394:13;9387:21;9380:5;9377:32;9367:60;;9423:1;9420;9413:12;9180:277;1779:21983:15;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ONE_2237":{"entryPoint":null,"id":2237,"parameterSlots":0,"returnSlots":0},"@_approve_1542":{"entryPoint":8896,"id":1542,"parameterSlots":3,"returnSlots":0},"@_approve_1602":{"entryPoint":11481,"id":1602,"parameterSlots":4,"returnSlots":0},"@_burn_1524":{"entryPoint":9303,"id":1524,"parameterSlots":2,"returnSlots":0},"@_calculateAmountsToAdd_3902":{"entryPoint":8289,"id":3902,"parameterSlots":2,"returnSlots":1},"@_calculateLiquidity_3941":{"entryPoint":8607,"id":3941,"parameterSlots":2,"returnSlots":1},"@_calculateTotalAddedLiquidity_3836":{"entryPoint":8547,"id":3836,"parameterSlots":1,"returnSlots":1},"@_computeTotalValuation_3575":{"entryPoint":7985,"id":3575,"parameterSlots":0,"returnSlots":2},"@_convertBaseToToken_3958":{"entryPoint":11137,"id":3958,"parameterSlots":2,"returnSlots":1},"@_convertTokenToBase_3975":{"entryPoint":9380,"id":3975,"parameterSlots":2,"returnSlots":1},"@_mint_1491":{"entryPoint":8815,"id":1491,"parameterSlots":2,"returnSlots":0},"@_msgSender_2020":{"entryPoint":null,"id":2020,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_2095":{"entryPoint":null,"id":2095,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_2087":{"entryPoint":9236,"id":2087,"parameterSlots":0,"returnSlots":0},"@_performRebalanceIfNeeded_3805":{"entryPoint":9406,"id":3805,"parameterSlots":0,"returnSlots":2},"@_spendAllowance_1650":{"entryPoint":8914,"id":1650,"parameterSlots":3,"returnSlots":0},"@_transfer_1381":{"entryPoint":9093,"id":1381,"parameterSlots":3,"returnSlots":0},"@_update_1458":{"entryPoint":11162,"id":1458,"parameterSlots":3,"returnSlots":0},"@allowance_1278":{"entryPoint":null,"id":1278,"parameterSlots":2,"returnSlots":1},"@approve_1302":{"entryPoint":2177,"id":1302,"parameterSlots":2,"returnSlots":1},"@assetInfos_2233":{"entryPoint":6342,"id":2233,"parameterSlots":0,"returnSlots":0},"@assetLiquidity_3257":{"entryPoint":6215,"id":3257,"parameterSlots":1,"returnSlots":1},"@balanceOf_1237":{"entryPoint":null,"id":1237,"parameterSlots":1,"returnSlots":1},"@baseAsset_2239":{"entryPoint":null,"id":2239,"parameterSlots":0,"returnSlots":0},"@burn_3053":{"entryPoint":4246,"id":3053,"parameterSlots":1,"returnSlots":1},"@computeTotalValuation_3278":{"entryPoint":2414,"id":3278,"parameterSlots":0,"returnSlots":2},"@decimals_1215":{"entryPoint":null,"id":1215,"parameterSlots":0,"returnSlots":1},"@getAmountOut_3098":{"entryPoint":2434,"id":3098,"parameterSlots":3,"returnSlots":1},"@getAssetReserve_3394":{"entryPoint":5951,"id":3394,"parameterSlots":1,"returnSlots":1},"@getAssets_3438":{"entryPoint":2923,"id":3438,"parameterSlots":0,"returnSlots":1},"@getDeviation_3228":{"entryPoint":3803,"id":3228,"parameterSlots":0,"returnSlots":2},"@getReserves_3368":{"entryPoint":1890,"id":3368,"parameterSlots":0,"returnSlots":1},"@getWeights_3482":{"entryPoint":2219,"id":3482,"parameterSlots":0,"returnSlots":1},"@isRebalanceNeeded_4021":{"entryPoint":5801,"id":4021,"parameterSlots":0,"returnSlots":1},"@liquidity_3292":{"entryPoint":2202,"id":3292,"parameterSlots":0,"returnSlots":1},"@mint_2883":{"entryPoint":6396,"id":2883,"parameterSlots":2,"returnSlots":1},"@name_1197":{"entryPoint":1112,"id":1197,"parameterSlots":0,"returnSlots":1},"@performRebalanceIfNeeded_3120":{"entryPoint":7674,"id":3120,"parameterSlots":0,"returnSlots":2},"@rebalanceWeights_2633":{"entryPoint":1256,"id":2633,"parameterSlots":1,"returnSlots":1},"@registry_2244":{"entryPoint":null,"id":2244,"parameterSlots":0,"returnSlots":0},"@swap_2719":{"entryPoint":3110,"id":2719,"parameterSlots":4,"returnSlots":1},"@symbol_1206":{"entryPoint":5923,"id":1206,"parameterSlots":0,"returnSlots":1},"@totalSupply_1224":{"entryPoint":null,"id":1224,"parameterSlots":0,"returnSlots":1},"@transferFrom_1334":{"entryPoint":2379,"id":1334,"parameterSlots":3,"returnSlots":1},"@transfer_1261":{"entryPoint":5938,"id":1261,"parameterSlots":2,"returnSlots":1},"@trigger_2235":{"entryPoint":null,"id":2235,"parameterSlots":0,"returnSlots":0},"@unitPrice_3344":{"entryPoint":7442,"id":3344,"parameterSlots":0,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":11847,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":12834,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":12334,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":11992,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_address":{"entryPoint":12152,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12548,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":11950,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory":{"entryPoint":12974,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":13212,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":12311,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":13114,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint8_fromMemory":{"entryPoint":13262,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":12078,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":11874,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":12134,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_bool_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_bool_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":12232,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":11932,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address_t_address_t_address__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address_t_address_t_address__fromStack_reversed":{"entryPoint":13591,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":12714,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IBaluniV1Registry_$4898__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11741,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_195739df032cb3c07c5ed70a4cae73c5d077df4296263c6db3d1f3b4671efbd0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_231381c7ce9cab5a06140be844586c7572b2dd117d8de83c9f9bda39108cd19d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_293eab1376cea4527a492c75c5b4d240032b8920c86961428e65758e4fd3daec__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_37b2136db8906a0fa9dcfb36fa22f3e5724d70ae1dfd30e29853723b16bc684b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_50327403b25acc6e0d15796c676b8320f8d9ffcece005326d31f4226e4f741bb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6f3b6914a8f4e42f0dc4d6fcf60d1470463793693c123b4b0782b9cd43668c23__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_788ce755d61da147edad70af92467c8a383af859573990e9defde5b6e0bdf24d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a245c00c976af272c663e732300fe860097516364a0d92887494f54e860fa54c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e84ca658204d8225a6124393bf429fae79ddb71fa88578d833d3a2b9b5da52d2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e8ec4a06d76118e3b24afbc30b183e086aa6aaa6e137c81160fc8d59e1a33e3f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b105b0b4a7ff5c11f41135d6d4600fd47da6168663f6cb1810745b08d83918__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc2f8692ca59eb8838d740ab96a08e7dab54c967cc56eb0a9b640ce78eb1103e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":12054,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":12434,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":12513,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":13243,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":13137,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":13294,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":13580,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":13391,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":12906,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":13193,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":12759,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":12861,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":12929,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":12389,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":11824,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:22858:21","nodeType":"YulBlock","src":"0:22858:21","statements":[{"nativeSrc":"6:3:21","nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nativeSrc":"135:356:21","nodeType":"YulBlock","src":"135:356:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"152:9:21","nodeType":"YulIdentifier","src":"152:9:21"},{"kind":"number","nativeSrc":"163:2:21","nodeType":"YulLiteral","src":"163:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"145:6:21","nodeType":"YulIdentifier","src":"145:6:21"},"nativeSrc":"145:21:21","nodeType":"YulFunctionCall","src":"145:21:21"},"nativeSrc":"145:21:21","nodeType":"YulExpressionStatement","src":"145:21:21"},{"nativeSrc":"175:27:21","nodeType":"YulVariableDeclaration","src":"175:27:21","value":{"arguments":[{"name":"value0","nativeSrc":"195:6:21","nodeType":"YulIdentifier","src":"195:6:21"}],"functionName":{"name":"mload","nativeSrc":"189:5:21","nodeType":"YulIdentifier","src":"189:5:21"},"nativeSrc":"189:13:21","nodeType":"YulFunctionCall","src":"189:13:21"},"variables":[{"name":"length","nativeSrc":"179:6:21","nodeType":"YulTypedName","src":"179:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"222:9:21","nodeType":"YulIdentifier","src":"222:9:21"},{"kind":"number","nativeSrc":"233:2:21","nodeType":"YulLiteral","src":"233:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"218:3:21","nodeType":"YulIdentifier","src":"218:3:21"},"nativeSrc":"218:18:21","nodeType":"YulFunctionCall","src":"218:18:21"},{"name":"length","nativeSrc":"238:6:21","nodeType":"YulIdentifier","src":"238:6:21"}],"functionName":{"name":"mstore","nativeSrc":"211:6:21","nodeType":"YulIdentifier","src":"211:6:21"},"nativeSrc":"211:34:21","nodeType":"YulFunctionCall","src":"211:34:21"},"nativeSrc":"211:34:21","nodeType":"YulExpressionStatement","src":"211:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"264:9:21","nodeType":"YulIdentifier","src":"264:9:21"},{"kind":"number","nativeSrc":"275:2:21","nodeType":"YulLiteral","src":"275:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"260:3:21","nodeType":"YulIdentifier","src":"260:3:21"},"nativeSrc":"260:18:21","nodeType":"YulFunctionCall","src":"260:18:21"},{"arguments":[{"name":"value0","nativeSrc":"284:6:21","nodeType":"YulIdentifier","src":"284:6:21"},{"kind":"number","nativeSrc":"292:2:21","nodeType":"YulLiteral","src":"292:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"280:3:21","nodeType":"YulIdentifier","src":"280:3:21"},"nativeSrc":"280:15:21","nodeType":"YulFunctionCall","src":"280:15:21"},{"name":"length","nativeSrc":"297:6:21","nodeType":"YulIdentifier","src":"297:6:21"}],"functionName":{"name":"mcopy","nativeSrc":"254:5:21","nodeType":"YulIdentifier","src":"254:5:21"},"nativeSrc":"254:50:21","nodeType":"YulFunctionCall","src":"254:50:21"},"nativeSrc":"254:50:21","nodeType":"YulExpressionStatement","src":"254:50:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"328:9:21","nodeType":"YulIdentifier","src":"328:9:21"},{"name":"length","nativeSrc":"339:6:21","nodeType":"YulIdentifier","src":"339:6:21"}],"functionName":{"name":"add","nativeSrc":"324:3:21","nodeType":"YulIdentifier","src":"324:3:21"},"nativeSrc":"324:22:21","nodeType":"YulFunctionCall","src":"324:22:21"},{"kind":"number","nativeSrc":"348:2:21","nodeType":"YulLiteral","src":"348:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"320:3:21","nodeType":"YulIdentifier","src":"320:3:21"},"nativeSrc":"320:31:21","nodeType":"YulFunctionCall","src":"320:31:21"},{"kind":"number","nativeSrc":"353:1:21","nodeType":"YulLiteral","src":"353:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"313:6:21","nodeType":"YulIdentifier","src":"313:6:21"},"nativeSrc":"313:42:21","nodeType":"YulFunctionCall","src":"313:42:21"},"nativeSrc":"313:42:21","nodeType":"YulExpressionStatement","src":"313:42:21"},{"nativeSrc":"364:121:21","nodeType":"YulAssignment","src":"364:121:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"380:9:21","nodeType":"YulIdentifier","src":"380:9:21"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"399:6:21","nodeType":"YulIdentifier","src":"399:6:21"},{"kind":"number","nativeSrc":"407:2:21","nodeType":"YulLiteral","src":"407:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"395:3:21","nodeType":"YulIdentifier","src":"395:3:21"},"nativeSrc":"395:15:21","nodeType":"YulFunctionCall","src":"395:15:21"},{"kind":"number","nativeSrc":"412:66:21","nodeType":"YulLiteral","src":"412:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nativeSrc":"391:3:21","nodeType":"YulIdentifier","src":"391:3:21"},"nativeSrc":"391:88:21","nodeType":"YulFunctionCall","src":"391:88:21"}],"functionName":{"name":"add","nativeSrc":"376:3:21","nodeType":"YulIdentifier","src":"376:3:21"},"nativeSrc":"376:104:21","nodeType":"YulFunctionCall","src":"376:104:21"},{"kind":"number","nativeSrc":"482:2:21","nodeType":"YulLiteral","src":"482:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"372:3:21","nodeType":"YulIdentifier","src":"372:3:21"},"nativeSrc":"372:113:21","nodeType":"YulFunctionCall","src":"372:113:21"},"variableNames":[{"name":"tail","nativeSrc":"364:4:21","nodeType":"YulIdentifier","src":"364:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14:477:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"104:9:21","nodeType":"YulTypedName","src":"104:9:21","type":""},{"name":"value0","nativeSrc":"115:6:21","nodeType":"YulTypedName","src":"115:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"126:4:21","nodeType":"YulTypedName","src":"126:4:21","type":""}],"src":"14:477:21"},{"body":{"nativeSrc":"541:109:21","nodeType":"YulBlock","src":"541:109:21","statements":[{"body":{"nativeSrc":"628:16:21","nodeType":"YulBlock","src":"628:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"637:1:21","nodeType":"YulLiteral","src":"637:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"640:1:21","nodeType":"YulLiteral","src":"640:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"630:6:21","nodeType":"YulIdentifier","src":"630:6:21"},"nativeSrc":"630:12:21","nodeType":"YulFunctionCall","src":"630:12:21"},"nativeSrc":"630:12:21","nodeType":"YulExpressionStatement","src":"630:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"564:5:21","nodeType":"YulIdentifier","src":"564:5:21"},{"arguments":[{"name":"value","nativeSrc":"575:5:21","nodeType":"YulIdentifier","src":"575:5:21"},{"kind":"number","nativeSrc":"582:42:21","nodeType":"YulLiteral","src":"582:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"571:3:21","nodeType":"YulIdentifier","src":"571:3:21"},"nativeSrc":"571:54:21","nodeType":"YulFunctionCall","src":"571:54:21"}],"functionName":{"name":"eq","nativeSrc":"561:2:21","nodeType":"YulIdentifier","src":"561:2:21"},"nativeSrc":"561:65:21","nodeType":"YulFunctionCall","src":"561:65:21"}],"functionName":{"name":"iszero","nativeSrc":"554:6:21","nodeType":"YulIdentifier","src":"554:6:21"},"nativeSrc":"554:73:21","nodeType":"YulFunctionCall","src":"554:73:21"},"nativeSrc":"551:93:21","nodeType":"YulIf","src":"551:93:21"}]},"name":"validator_revert_address","nativeSrc":"496:154:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"530:5:21","nodeType":"YulTypedName","src":"530:5:21","type":""}],"src":"496:154:21"},{"body":{"nativeSrc":"725:177:21","nodeType":"YulBlock","src":"725:177:21","statements":[{"body":{"nativeSrc":"771:16:21","nodeType":"YulBlock","src":"771:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"780:1:21","nodeType":"YulLiteral","src":"780:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"783:1:21","nodeType":"YulLiteral","src":"783:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"773:6:21","nodeType":"YulIdentifier","src":"773:6:21"},"nativeSrc":"773:12:21","nodeType":"YulFunctionCall","src":"773:12:21"},"nativeSrc":"773:12:21","nodeType":"YulExpressionStatement","src":"773:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"746:7:21","nodeType":"YulIdentifier","src":"746:7:21"},{"name":"headStart","nativeSrc":"755:9:21","nodeType":"YulIdentifier","src":"755:9:21"}],"functionName":{"name":"sub","nativeSrc":"742:3:21","nodeType":"YulIdentifier","src":"742:3:21"},"nativeSrc":"742:23:21","nodeType":"YulFunctionCall","src":"742:23:21"},{"kind":"number","nativeSrc":"767:2:21","nodeType":"YulLiteral","src":"767:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"738:3:21","nodeType":"YulIdentifier","src":"738:3:21"},"nativeSrc":"738:32:21","nodeType":"YulFunctionCall","src":"738:32:21"},"nativeSrc":"735:52:21","nodeType":"YulIf","src":"735:52:21"},{"nativeSrc":"796:36:21","nodeType":"YulVariableDeclaration","src":"796:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"822:9:21","nodeType":"YulIdentifier","src":"822:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"809:12:21","nodeType":"YulIdentifier","src":"809:12:21"},"nativeSrc":"809:23:21","nodeType":"YulFunctionCall","src":"809:23:21"},"variables":[{"name":"value","nativeSrc":"800:5:21","nodeType":"YulTypedName","src":"800:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"866:5:21","nodeType":"YulIdentifier","src":"866:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"841:24:21","nodeType":"YulIdentifier","src":"841:24:21"},"nativeSrc":"841:31:21","nodeType":"YulFunctionCall","src":"841:31:21"},"nativeSrc":"841:31:21","nodeType":"YulExpressionStatement","src":"841:31:21"},{"nativeSrc":"881:15:21","nodeType":"YulAssignment","src":"881:15:21","value":{"name":"value","nativeSrc":"891:5:21","nodeType":"YulIdentifier","src":"891:5:21"},"variableNames":[{"name":"value0","nativeSrc":"881:6:21","nodeType":"YulIdentifier","src":"881:6:21"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"655:247:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"691:9:21","nodeType":"YulTypedName","src":"691:9:21","type":""},{"name":"dataEnd","nativeSrc":"702:7:21","nodeType":"YulTypedName","src":"702:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"714:6:21","nodeType":"YulTypedName","src":"714:6:21","type":""}],"src":"655:247:21"},{"body":{"nativeSrc":"968:378:21","nodeType":"YulBlock","src":"968:378:21","statements":[{"nativeSrc":"978:26:21","nodeType":"YulVariableDeclaration","src":"978:26:21","value":{"arguments":[{"name":"value","nativeSrc":"998:5:21","nodeType":"YulIdentifier","src":"998:5:21"}],"functionName":{"name":"mload","nativeSrc":"992:5:21","nodeType":"YulIdentifier","src":"992:5:21"},"nativeSrc":"992:12:21","nodeType":"YulFunctionCall","src":"992:12:21"},"variables":[{"name":"length","nativeSrc":"982:6:21","nodeType":"YulTypedName","src":"982:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"1020:3:21","nodeType":"YulIdentifier","src":"1020:3:21"},{"name":"length","nativeSrc":"1025:6:21","nodeType":"YulIdentifier","src":"1025:6:21"}],"functionName":{"name":"mstore","nativeSrc":"1013:6:21","nodeType":"YulIdentifier","src":"1013:6:21"},"nativeSrc":"1013:19:21","nodeType":"YulFunctionCall","src":"1013:19:21"},"nativeSrc":"1013:19:21","nodeType":"YulExpressionStatement","src":"1013:19:21"},{"nativeSrc":"1041:14:21","nodeType":"YulVariableDeclaration","src":"1041:14:21","value":{"kind":"number","nativeSrc":"1051:4:21","nodeType":"YulLiteral","src":"1051:4:21","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"1045:2:21","nodeType":"YulTypedName","src":"1045:2:21","type":""}]},{"nativeSrc":"1064:21:21","nodeType":"YulAssignment","src":"1064:21:21","value":{"arguments":[{"name":"pos","nativeSrc":"1075:3:21","nodeType":"YulIdentifier","src":"1075:3:21"},{"kind":"number","nativeSrc":"1080:4:21","nodeType":"YulLiteral","src":"1080:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1071:3:21","nodeType":"YulIdentifier","src":"1071:3:21"},"nativeSrc":"1071:14:21","nodeType":"YulFunctionCall","src":"1071:14:21"},"variableNames":[{"name":"pos","nativeSrc":"1064:3:21","nodeType":"YulIdentifier","src":"1064:3:21"}]},{"nativeSrc":"1094:30:21","nodeType":"YulVariableDeclaration","src":"1094:30:21","value":{"arguments":[{"name":"value","nativeSrc":"1112:5:21","nodeType":"YulIdentifier","src":"1112:5:21"},{"kind":"number","nativeSrc":"1119:4:21","nodeType":"YulLiteral","src":"1119:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1108:3:21","nodeType":"YulIdentifier","src":"1108:3:21"},"nativeSrc":"1108:16:21","nodeType":"YulFunctionCall","src":"1108:16:21"},"variables":[{"name":"srcPtr","nativeSrc":"1098:6:21","nodeType":"YulTypedName","src":"1098:6:21","type":""}]},{"nativeSrc":"1133:10:21","nodeType":"YulVariableDeclaration","src":"1133:10:21","value":{"kind":"number","nativeSrc":"1142:1:21","nodeType":"YulLiteral","src":"1142:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1137:1:21","nodeType":"YulTypedName","src":"1137:1:21","type":""}]},{"body":{"nativeSrc":"1201:120:21","nodeType":"YulBlock","src":"1201:120:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1222:3:21","nodeType":"YulIdentifier","src":"1222:3:21"},{"arguments":[{"name":"srcPtr","nativeSrc":"1233:6:21","nodeType":"YulIdentifier","src":"1233:6:21"}],"functionName":{"name":"mload","nativeSrc":"1227:5:21","nodeType":"YulIdentifier","src":"1227:5:21"},"nativeSrc":"1227:13:21","nodeType":"YulFunctionCall","src":"1227:13:21"}],"functionName":{"name":"mstore","nativeSrc":"1215:6:21","nodeType":"YulIdentifier","src":"1215:6:21"},"nativeSrc":"1215:26:21","nodeType":"YulFunctionCall","src":"1215:26:21"},"nativeSrc":"1215:26:21","nodeType":"YulExpressionStatement","src":"1215:26:21"},{"nativeSrc":"1254:19:21","nodeType":"YulAssignment","src":"1254:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"1265:3:21","nodeType":"YulIdentifier","src":"1265:3:21"},{"name":"_1","nativeSrc":"1270:2:21","nodeType":"YulIdentifier","src":"1270:2:21"}],"functionName":{"name":"add","nativeSrc":"1261:3:21","nodeType":"YulIdentifier","src":"1261:3:21"},"nativeSrc":"1261:12:21","nodeType":"YulFunctionCall","src":"1261:12:21"},"variableNames":[{"name":"pos","nativeSrc":"1254:3:21","nodeType":"YulIdentifier","src":"1254:3:21"}]},{"nativeSrc":"1286:25:21","nodeType":"YulAssignment","src":"1286:25:21","value":{"arguments":[{"name":"srcPtr","nativeSrc":"1300:6:21","nodeType":"YulIdentifier","src":"1300:6:21"},{"name":"_1","nativeSrc":"1308:2:21","nodeType":"YulIdentifier","src":"1308:2:21"}],"functionName":{"name":"add","nativeSrc":"1296:3:21","nodeType":"YulIdentifier","src":"1296:3:21"},"nativeSrc":"1296:15:21","nodeType":"YulFunctionCall","src":"1296:15:21"},"variableNames":[{"name":"srcPtr","nativeSrc":"1286:6:21","nodeType":"YulIdentifier","src":"1286:6:21"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1163:1:21","nodeType":"YulIdentifier","src":"1163:1:21"},{"name":"length","nativeSrc":"1166:6:21","nodeType":"YulIdentifier","src":"1166:6:21"}],"functionName":{"name":"lt","nativeSrc":"1160:2:21","nodeType":"YulIdentifier","src":"1160:2:21"},"nativeSrc":"1160:13:21","nodeType":"YulFunctionCall","src":"1160:13:21"},"nativeSrc":"1152:169:21","nodeType":"YulForLoop","post":{"nativeSrc":"1174:18:21","nodeType":"YulBlock","src":"1174:18:21","statements":[{"nativeSrc":"1176:14:21","nodeType":"YulAssignment","src":"1176:14:21","value":{"arguments":[{"name":"i","nativeSrc":"1185:1:21","nodeType":"YulIdentifier","src":"1185:1:21"},{"kind":"number","nativeSrc":"1188:1:21","nodeType":"YulLiteral","src":"1188:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1181:3:21","nodeType":"YulIdentifier","src":"1181:3:21"},"nativeSrc":"1181:9:21","nodeType":"YulFunctionCall","src":"1181:9:21"},"variableNames":[{"name":"i","nativeSrc":"1176:1:21","nodeType":"YulIdentifier","src":"1176:1:21"}]}]},"pre":{"nativeSrc":"1156:3:21","nodeType":"YulBlock","src":"1156:3:21","statements":[]},"src":"1152:169:21"},{"nativeSrc":"1330:10:21","nodeType":"YulAssignment","src":"1330:10:21","value":{"name":"pos","nativeSrc":"1337:3:21","nodeType":"YulIdentifier","src":"1337:3:21"},"variableNames":[{"name":"end","nativeSrc":"1330:3:21","nodeType":"YulIdentifier","src":"1330:3:21"}]}]},"name":"abi_encode_array_uint256_dyn","nativeSrc":"907:439:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"945:5:21","nodeType":"YulTypedName","src":"945:5:21","type":""},{"name":"pos","nativeSrc":"952:3:21","nodeType":"YulTypedName","src":"952:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"960:3:21","nodeType":"YulTypedName","src":"960:3:21","type":""}],"src":"907:439:21"},{"body":{"nativeSrc":"1502:110:21","nodeType":"YulBlock","src":"1502:110:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1519:9:21","nodeType":"YulIdentifier","src":"1519:9:21"},{"kind":"number","nativeSrc":"1530:2:21","nodeType":"YulLiteral","src":"1530:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1512:6:21","nodeType":"YulIdentifier","src":"1512:6:21"},"nativeSrc":"1512:21:21","nodeType":"YulFunctionCall","src":"1512:21:21"},"nativeSrc":"1512:21:21","nodeType":"YulExpressionStatement","src":"1512:21:21"},{"nativeSrc":"1542:64:21","nodeType":"YulAssignment","src":"1542:64:21","value":{"arguments":[{"name":"value0","nativeSrc":"1579:6:21","nodeType":"YulIdentifier","src":"1579:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"1591:9:21","nodeType":"YulIdentifier","src":"1591:9:21"},{"kind":"number","nativeSrc":"1602:2:21","nodeType":"YulLiteral","src":"1602:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1587:3:21","nodeType":"YulIdentifier","src":"1587:3:21"},"nativeSrc":"1587:18:21","nodeType":"YulFunctionCall","src":"1587:18:21"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"1550:28:21","nodeType":"YulIdentifier","src":"1550:28:21"},"nativeSrc":"1550:56:21","nodeType":"YulFunctionCall","src":"1550:56:21"},"variableNames":[{"name":"tail","nativeSrc":"1542:4:21","nodeType":"YulIdentifier","src":"1542:4:21"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"1351:261:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1471:9:21","nodeType":"YulTypedName","src":"1471:9:21","type":""},{"name":"value0","nativeSrc":"1482:6:21","nodeType":"YulTypedName","src":"1482:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1493:4:21","nodeType":"YulTypedName","src":"1493:4:21","type":""}],"src":"1351:261:21"},{"body":{"nativeSrc":"1704:228:21","nodeType":"YulBlock","src":"1704:228:21","statements":[{"body":{"nativeSrc":"1750:16:21","nodeType":"YulBlock","src":"1750:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1759:1:21","nodeType":"YulLiteral","src":"1759:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1762:1:21","nodeType":"YulLiteral","src":"1762:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1752:6:21","nodeType":"YulIdentifier","src":"1752:6:21"},"nativeSrc":"1752:12:21","nodeType":"YulFunctionCall","src":"1752:12:21"},"nativeSrc":"1752:12:21","nodeType":"YulExpressionStatement","src":"1752:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1725:7:21","nodeType":"YulIdentifier","src":"1725:7:21"},{"name":"headStart","nativeSrc":"1734:9:21","nodeType":"YulIdentifier","src":"1734:9:21"}],"functionName":{"name":"sub","nativeSrc":"1721:3:21","nodeType":"YulIdentifier","src":"1721:3:21"},"nativeSrc":"1721:23:21","nodeType":"YulFunctionCall","src":"1721:23:21"},{"kind":"number","nativeSrc":"1746:2:21","nodeType":"YulLiteral","src":"1746:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1717:3:21","nodeType":"YulIdentifier","src":"1717:3:21"},"nativeSrc":"1717:32:21","nodeType":"YulFunctionCall","src":"1717:32:21"},"nativeSrc":"1714:52:21","nodeType":"YulIf","src":"1714:52:21"},{"nativeSrc":"1775:36:21","nodeType":"YulVariableDeclaration","src":"1775:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1801:9:21","nodeType":"YulIdentifier","src":"1801:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"1788:12:21","nodeType":"YulIdentifier","src":"1788:12:21"},"nativeSrc":"1788:23:21","nodeType":"YulFunctionCall","src":"1788:23:21"},"variables":[{"name":"value","nativeSrc":"1779:5:21","nodeType":"YulTypedName","src":"1779:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1845:5:21","nodeType":"YulIdentifier","src":"1845:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"1820:24:21","nodeType":"YulIdentifier","src":"1820:24:21"},"nativeSrc":"1820:31:21","nodeType":"YulFunctionCall","src":"1820:31:21"},"nativeSrc":"1820:31:21","nodeType":"YulExpressionStatement","src":"1820:31:21"},{"nativeSrc":"1860:15:21","nodeType":"YulAssignment","src":"1860:15:21","value":{"name":"value","nativeSrc":"1870:5:21","nodeType":"YulIdentifier","src":"1870:5:21"},"variableNames":[{"name":"value0","nativeSrc":"1860:6:21","nodeType":"YulIdentifier","src":"1860:6:21"}]},{"nativeSrc":"1884:42:21","nodeType":"YulAssignment","src":"1884:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1911:9:21","nodeType":"YulIdentifier","src":"1911:9:21"},{"kind":"number","nativeSrc":"1922:2:21","nodeType":"YulLiteral","src":"1922:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1907:3:21","nodeType":"YulIdentifier","src":"1907:3:21"},"nativeSrc":"1907:18:21","nodeType":"YulFunctionCall","src":"1907:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"1894:12:21","nodeType":"YulIdentifier","src":"1894:12:21"},"nativeSrc":"1894:32:21","nodeType":"YulFunctionCall","src":"1894:32:21"},"variableNames":[{"name":"value1","nativeSrc":"1884:6:21","nodeType":"YulIdentifier","src":"1884:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1617:315:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1662:9:21","nodeType":"YulTypedName","src":"1662:9:21","type":""},{"name":"dataEnd","nativeSrc":"1673:7:21","nodeType":"YulTypedName","src":"1673:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1685:6:21","nodeType":"YulTypedName","src":"1685:6:21","type":""},{"name":"value1","nativeSrc":"1693:6:21","nodeType":"YulTypedName","src":"1693:6:21","type":""}],"src":"1617:315:21"},{"body":{"nativeSrc":"2032:92:21","nodeType":"YulBlock","src":"2032:92:21","statements":[{"nativeSrc":"2042:26:21","nodeType":"YulAssignment","src":"2042:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2054:9:21","nodeType":"YulIdentifier","src":"2054:9:21"},{"kind":"number","nativeSrc":"2065:2:21","nodeType":"YulLiteral","src":"2065:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2050:3:21","nodeType":"YulIdentifier","src":"2050:3:21"},"nativeSrc":"2050:18:21","nodeType":"YulFunctionCall","src":"2050:18:21"},"variableNames":[{"name":"tail","nativeSrc":"2042:4:21","nodeType":"YulIdentifier","src":"2042:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2084:9:21","nodeType":"YulIdentifier","src":"2084:9:21"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"2109:6:21","nodeType":"YulIdentifier","src":"2109:6:21"}],"functionName":{"name":"iszero","nativeSrc":"2102:6:21","nodeType":"YulIdentifier","src":"2102:6:21"},"nativeSrc":"2102:14:21","nodeType":"YulFunctionCall","src":"2102:14:21"}],"functionName":{"name":"iszero","nativeSrc":"2095:6:21","nodeType":"YulIdentifier","src":"2095:6:21"},"nativeSrc":"2095:22:21","nodeType":"YulFunctionCall","src":"2095:22:21"}],"functionName":{"name":"mstore","nativeSrc":"2077:6:21","nodeType":"YulIdentifier","src":"2077:6:21"},"nativeSrc":"2077:41:21","nodeType":"YulFunctionCall","src":"2077:41:21"},"nativeSrc":"2077:41:21","nodeType":"YulExpressionStatement","src":"2077:41:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1937:187:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2001:9:21","nodeType":"YulTypedName","src":"2001:9:21","type":""},{"name":"value0","nativeSrc":"2012:6:21","nodeType":"YulTypedName","src":"2012:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2023:4:21","nodeType":"YulTypedName","src":"2023:4:21","type":""}],"src":"1937:187:21"},{"body":{"nativeSrc":"2230:76:21","nodeType":"YulBlock","src":"2230:76:21","statements":[{"nativeSrc":"2240:26:21","nodeType":"YulAssignment","src":"2240:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2252:9:21","nodeType":"YulIdentifier","src":"2252:9:21"},{"kind":"number","nativeSrc":"2263:2:21","nodeType":"YulLiteral","src":"2263:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2248:3:21","nodeType":"YulIdentifier","src":"2248:3:21"},"nativeSrc":"2248:18:21","nodeType":"YulFunctionCall","src":"2248:18:21"},"variableNames":[{"name":"tail","nativeSrc":"2240:4:21","nodeType":"YulIdentifier","src":"2240:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2282:9:21","nodeType":"YulIdentifier","src":"2282:9:21"},{"name":"value0","nativeSrc":"2293:6:21","nodeType":"YulIdentifier","src":"2293:6:21"}],"functionName":{"name":"mstore","nativeSrc":"2275:6:21","nodeType":"YulIdentifier","src":"2275:6:21"},"nativeSrc":"2275:25:21","nodeType":"YulFunctionCall","src":"2275:25:21"},"nativeSrc":"2275:25:21","nodeType":"YulExpressionStatement","src":"2275:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"2129:177:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2199:9:21","nodeType":"YulTypedName","src":"2199:9:21","type":""},{"name":"value0","nativeSrc":"2210:6:21","nodeType":"YulTypedName","src":"2210:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2221:4:21","nodeType":"YulTypedName","src":"2221:4:21","type":""}],"src":"2129:177:21"},{"body":{"nativeSrc":"2415:352:21","nodeType":"YulBlock","src":"2415:352:21","statements":[{"body":{"nativeSrc":"2461:16:21","nodeType":"YulBlock","src":"2461:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2470:1:21","nodeType":"YulLiteral","src":"2470:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2473:1:21","nodeType":"YulLiteral","src":"2473:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2463:6:21","nodeType":"YulIdentifier","src":"2463:6:21"},"nativeSrc":"2463:12:21","nodeType":"YulFunctionCall","src":"2463:12:21"},"nativeSrc":"2463:12:21","nodeType":"YulExpressionStatement","src":"2463:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2436:7:21","nodeType":"YulIdentifier","src":"2436:7:21"},{"name":"headStart","nativeSrc":"2445:9:21","nodeType":"YulIdentifier","src":"2445:9:21"}],"functionName":{"name":"sub","nativeSrc":"2432:3:21","nodeType":"YulIdentifier","src":"2432:3:21"},"nativeSrc":"2432:23:21","nodeType":"YulFunctionCall","src":"2432:23:21"},{"kind":"number","nativeSrc":"2457:2:21","nodeType":"YulLiteral","src":"2457:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"2428:3:21","nodeType":"YulIdentifier","src":"2428:3:21"},"nativeSrc":"2428:32:21","nodeType":"YulFunctionCall","src":"2428:32:21"},"nativeSrc":"2425:52:21","nodeType":"YulIf","src":"2425:52:21"},{"nativeSrc":"2486:36:21","nodeType":"YulVariableDeclaration","src":"2486:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2512:9:21","nodeType":"YulIdentifier","src":"2512:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"2499:12:21","nodeType":"YulIdentifier","src":"2499:12:21"},"nativeSrc":"2499:23:21","nodeType":"YulFunctionCall","src":"2499:23:21"},"variables":[{"name":"value","nativeSrc":"2490:5:21","nodeType":"YulTypedName","src":"2490:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2556:5:21","nodeType":"YulIdentifier","src":"2556:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"2531:24:21","nodeType":"YulIdentifier","src":"2531:24:21"},"nativeSrc":"2531:31:21","nodeType":"YulFunctionCall","src":"2531:31:21"},"nativeSrc":"2531:31:21","nodeType":"YulExpressionStatement","src":"2531:31:21"},{"nativeSrc":"2571:15:21","nodeType":"YulAssignment","src":"2571:15:21","value":{"name":"value","nativeSrc":"2581:5:21","nodeType":"YulIdentifier","src":"2581:5:21"},"variableNames":[{"name":"value0","nativeSrc":"2571:6:21","nodeType":"YulIdentifier","src":"2571:6:21"}]},{"nativeSrc":"2595:47:21","nodeType":"YulVariableDeclaration","src":"2595:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2627:9:21","nodeType":"YulIdentifier","src":"2627:9:21"},{"kind":"number","nativeSrc":"2638:2:21","nodeType":"YulLiteral","src":"2638:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2623:3:21","nodeType":"YulIdentifier","src":"2623:3:21"},"nativeSrc":"2623:18:21","nodeType":"YulFunctionCall","src":"2623:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"2610:12:21","nodeType":"YulIdentifier","src":"2610:12:21"},"nativeSrc":"2610:32:21","nodeType":"YulFunctionCall","src":"2610:32:21"},"variables":[{"name":"value_1","nativeSrc":"2599:7:21","nodeType":"YulTypedName","src":"2599:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"2676:7:21","nodeType":"YulIdentifier","src":"2676:7:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"2651:24:21","nodeType":"YulIdentifier","src":"2651:24:21"},"nativeSrc":"2651:33:21","nodeType":"YulFunctionCall","src":"2651:33:21"},"nativeSrc":"2651:33:21","nodeType":"YulExpressionStatement","src":"2651:33:21"},{"nativeSrc":"2693:17:21","nodeType":"YulAssignment","src":"2693:17:21","value":{"name":"value_1","nativeSrc":"2703:7:21","nodeType":"YulIdentifier","src":"2703:7:21"},"variableNames":[{"name":"value1","nativeSrc":"2693:6:21","nodeType":"YulIdentifier","src":"2693:6:21"}]},{"nativeSrc":"2719:42:21","nodeType":"YulAssignment","src":"2719:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2746:9:21","nodeType":"YulIdentifier","src":"2746:9:21"},{"kind":"number","nativeSrc":"2757:2:21","nodeType":"YulLiteral","src":"2757:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2742:3:21","nodeType":"YulIdentifier","src":"2742:3:21"},"nativeSrc":"2742:18:21","nodeType":"YulFunctionCall","src":"2742:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"2729:12:21","nodeType":"YulIdentifier","src":"2729:12:21"},"nativeSrc":"2729:32:21","nodeType":"YulFunctionCall","src":"2729:32:21"},"variableNames":[{"name":"value2","nativeSrc":"2719:6:21","nodeType":"YulIdentifier","src":"2719:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"2311:456:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2365:9:21","nodeType":"YulTypedName","src":"2365:9:21","type":""},{"name":"dataEnd","nativeSrc":"2376:7:21","nodeType":"YulTypedName","src":"2376:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2388:6:21","nodeType":"YulTypedName","src":"2388:6:21","type":""},{"name":"value1","nativeSrc":"2396:6:21","nodeType":"YulTypedName","src":"2396:6:21","type":""},{"name":"value2","nativeSrc":"2404:6:21","nodeType":"YulTypedName","src":"2404:6:21","type":""}],"src":"2311:456:21"},{"body":{"nativeSrc":"2869:87:21","nodeType":"YulBlock","src":"2869:87:21","statements":[{"nativeSrc":"2879:26:21","nodeType":"YulAssignment","src":"2879:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2891:9:21","nodeType":"YulIdentifier","src":"2891:9:21"},{"kind":"number","nativeSrc":"2902:2:21","nodeType":"YulLiteral","src":"2902:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2887:3:21","nodeType":"YulIdentifier","src":"2887:3:21"},"nativeSrc":"2887:18:21","nodeType":"YulFunctionCall","src":"2887:18:21"},"variableNames":[{"name":"tail","nativeSrc":"2879:4:21","nodeType":"YulIdentifier","src":"2879:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2921:9:21","nodeType":"YulIdentifier","src":"2921:9:21"},{"arguments":[{"name":"value0","nativeSrc":"2936:6:21","nodeType":"YulIdentifier","src":"2936:6:21"},{"kind":"number","nativeSrc":"2944:4:21","nodeType":"YulLiteral","src":"2944:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"2932:3:21","nodeType":"YulIdentifier","src":"2932:3:21"},"nativeSrc":"2932:17:21","nodeType":"YulFunctionCall","src":"2932:17:21"}],"functionName":{"name":"mstore","nativeSrc":"2914:6:21","nodeType":"YulIdentifier","src":"2914:6:21"},"nativeSrc":"2914:36:21","nodeType":"YulFunctionCall","src":"2914:36:21"},"nativeSrc":"2914:36:21","nodeType":"YulExpressionStatement","src":"2914:36:21"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"2772:184:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2838:9:21","nodeType":"YulTypedName","src":"2838:9:21","type":""},{"name":"value0","nativeSrc":"2849:6:21","nodeType":"YulTypedName","src":"2849:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2860:4:21","nodeType":"YulTypedName","src":"2860:4:21","type":""}],"src":"2772:184:21"},{"body":{"nativeSrc":"3140:153:21","nodeType":"YulBlock","src":"3140:153:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3157:9:21","nodeType":"YulIdentifier","src":"3157:9:21"},{"name":"value0","nativeSrc":"3168:6:21","nodeType":"YulIdentifier","src":"3168:6:21"}],"functionName":{"name":"mstore","nativeSrc":"3150:6:21","nodeType":"YulIdentifier","src":"3150:6:21"},"nativeSrc":"3150:25:21","nodeType":"YulFunctionCall","src":"3150:25:21"},"nativeSrc":"3150:25:21","nodeType":"YulExpressionStatement","src":"3150:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3195:9:21","nodeType":"YulIdentifier","src":"3195:9:21"},{"kind":"number","nativeSrc":"3206:2:21","nodeType":"YulLiteral","src":"3206:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3191:3:21","nodeType":"YulIdentifier","src":"3191:3:21"},"nativeSrc":"3191:18:21","nodeType":"YulFunctionCall","src":"3191:18:21"},{"kind":"number","nativeSrc":"3211:2:21","nodeType":"YulLiteral","src":"3211:2:21","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"3184:6:21","nodeType":"YulIdentifier","src":"3184:6:21"},"nativeSrc":"3184:30:21","nodeType":"YulFunctionCall","src":"3184:30:21"},"nativeSrc":"3184:30:21","nodeType":"YulExpressionStatement","src":"3184:30:21"},{"nativeSrc":"3223:64:21","nodeType":"YulAssignment","src":"3223:64:21","value":{"arguments":[{"name":"value1","nativeSrc":"3260:6:21","nodeType":"YulIdentifier","src":"3260:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"3272:9:21","nodeType":"YulIdentifier","src":"3272:9:21"},{"kind":"number","nativeSrc":"3283:2:21","nodeType":"YulLiteral","src":"3283:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3268:3:21","nodeType":"YulIdentifier","src":"3268:3:21"},"nativeSrc":"3268:18:21","nodeType":"YulFunctionCall","src":"3268:18:21"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"3231:28:21","nodeType":"YulIdentifier","src":"3231:28:21"},"nativeSrc":"3231:56:21","nodeType":"YulFunctionCall","src":"3231:56:21"},"variableNames":[{"name":"tail","nativeSrc":"3223:4:21","nodeType":"YulIdentifier","src":"3223:4:21"}]}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"2961:332:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3101:9:21","nodeType":"YulTypedName","src":"3101:9:21","type":""},{"name":"value1","nativeSrc":"3112:6:21","nodeType":"YulTypedName","src":"3112:6:21","type":""},{"name":"value0","nativeSrc":"3120:6:21","nodeType":"YulTypedName","src":"3120:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3131:4:21","nodeType":"YulTypedName","src":"3131:4:21","type":""}],"src":"2961:332:21"},{"body":{"nativeSrc":"3359:427:21","nodeType":"YulBlock","src":"3359:427:21","statements":[{"nativeSrc":"3369:26:21","nodeType":"YulVariableDeclaration","src":"3369:26:21","value":{"arguments":[{"name":"value","nativeSrc":"3389:5:21","nodeType":"YulIdentifier","src":"3389:5:21"}],"functionName":{"name":"mload","nativeSrc":"3383:5:21","nodeType":"YulIdentifier","src":"3383:5:21"},"nativeSrc":"3383:12:21","nodeType":"YulFunctionCall","src":"3383:12:21"},"variables":[{"name":"length","nativeSrc":"3373:6:21","nodeType":"YulTypedName","src":"3373:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"3411:3:21","nodeType":"YulIdentifier","src":"3411:3:21"},{"name":"length","nativeSrc":"3416:6:21","nodeType":"YulIdentifier","src":"3416:6:21"}],"functionName":{"name":"mstore","nativeSrc":"3404:6:21","nodeType":"YulIdentifier","src":"3404:6:21"},"nativeSrc":"3404:19:21","nodeType":"YulFunctionCall","src":"3404:19:21"},"nativeSrc":"3404:19:21","nodeType":"YulExpressionStatement","src":"3404:19:21"},{"nativeSrc":"3432:14:21","nodeType":"YulVariableDeclaration","src":"3432:14:21","value":{"kind":"number","nativeSrc":"3442:4:21","nodeType":"YulLiteral","src":"3442:4:21","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"3436:2:21","nodeType":"YulTypedName","src":"3436:2:21","type":""}]},{"nativeSrc":"3455:21:21","nodeType":"YulAssignment","src":"3455:21:21","value":{"arguments":[{"name":"pos","nativeSrc":"3466:3:21","nodeType":"YulIdentifier","src":"3466:3:21"},{"kind":"number","nativeSrc":"3471:4:21","nodeType":"YulLiteral","src":"3471:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3462:3:21","nodeType":"YulIdentifier","src":"3462:3:21"},"nativeSrc":"3462:14:21","nodeType":"YulFunctionCall","src":"3462:14:21"},"variableNames":[{"name":"pos","nativeSrc":"3455:3:21","nodeType":"YulIdentifier","src":"3455:3:21"}]},{"nativeSrc":"3485:30:21","nodeType":"YulVariableDeclaration","src":"3485:30:21","value":{"arguments":[{"name":"value","nativeSrc":"3503:5:21","nodeType":"YulIdentifier","src":"3503:5:21"},{"kind":"number","nativeSrc":"3510:4:21","nodeType":"YulLiteral","src":"3510:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3499:3:21","nodeType":"YulIdentifier","src":"3499:3:21"},"nativeSrc":"3499:16:21","nodeType":"YulFunctionCall","src":"3499:16:21"},"variables":[{"name":"srcPtr","nativeSrc":"3489:6:21","nodeType":"YulTypedName","src":"3489:6:21","type":""}]},{"nativeSrc":"3524:10:21","nodeType":"YulVariableDeclaration","src":"3524:10:21","value":{"kind":"number","nativeSrc":"3533:1:21","nodeType":"YulLiteral","src":"3533:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3528:1:21","nodeType":"YulTypedName","src":"3528:1:21","type":""}]},{"body":{"nativeSrc":"3592:169:21","nodeType":"YulBlock","src":"3592:169:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3613:3:21","nodeType":"YulIdentifier","src":"3613:3:21"},{"arguments":[{"arguments":[{"name":"srcPtr","nativeSrc":"3628:6:21","nodeType":"YulIdentifier","src":"3628:6:21"}],"functionName":{"name":"mload","nativeSrc":"3622:5:21","nodeType":"YulIdentifier","src":"3622:5:21"},"nativeSrc":"3622:13:21","nodeType":"YulFunctionCall","src":"3622:13:21"},{"kind":"number","nativeSrc":"3637:42:21","nodeType":"YulLiteral","src":"3637:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3618:3:21","nodeType":"YulIdentifier","src":"3618:3:21"},"nativeSrc":"3618:62:21","nodeType":"YulFunctionCall","src":"3618:62:21"}],"functionName":{"name":"mstore","nativeSrc":"3606:6:21","nodeType":"YulIdentifier","src":"3606:6:21"},"nativeSrc":"3606:75:21","nodeType":"YulFunctionCall","src":"3606:75:21"},"nativeSrc":"3606:75:21","nodeType":"YulExpressionStatement","src":"3606:75:21"},{"nativeSrc":"3694:19:21","nodeType":"YulAssignment","src":"3694:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"3705:3:21","nodeType":"YulIdentifier","src":"3705:3:21"},{"name":"_1","nativeSrc":"3710:2:21","nodeType":"YulIdentifier","src":"3710:2:21"}],"functionName":{"name":"add","nativeSrc":"3701:3:21","nodeType":"YulIdentifier","src":"3701:3:21"},"nativeSrc":"3701:12:21","nodeType":"YulFunctionCall","src":"3701:12:21"},"variableNames":[{"name":"pos","nativeSrc":"3694:3:21","nodeType":"YulIdentifier","src":"3694:3:21"}]},{"nativeSrc":"3726:25:21","nodeType":"YulAssignment","src":"3726:25:21","value":{"arguments":[{"name":"srcPtr","nativeSrc":"3740:6:21","nodeType":"YulIdentifier","src":"3740:6:21"},{"name":"_1","nativeSrc":"3748:2:21","nodeType":"YulIdentifier","src":"3748:2:21"}],"functionName":{"name":"add","nativeSrc":"3736:3:21","nodeType":"YulIdentifier","src":"3736:3:21"},"nativeSrc":"3736:15:21","nodeType":"YulFunctionCall","src":"3736:15:21"},"variableNames":[{"name":"srcPtr","nativeSrc":"3726:6:21","nodeType":"YulIdentifier","src":"3726:6:21"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3554:1:21","nodeType":"YulIdentifier","src":"3554:1:21"},{"name":"length","nativeSrc":"3557:6:21","nodeType":"YulIdentifier","src":"3557:6:21"}],"functionName":{"name":"lt","nativeSrc":"3551:2:21","nodeType":"YulIdentifier","src":"3551:2:21"},"nativeSrc":"3551:13:21","nodeType":"YulFunctionCall","src":"3551:13:21"},"nativeSrc":"3543:218:21","nodeType":"YulForLoop","post":{"nativeSrc":"3565:18:21","nodeType":"YulBlock","src":"3565:18:21","statements":[{"nativeSrc":"3567:14:21","nodeType":"YulAssignment","src":"3567:14:21","value":{"arguments":[{"name":"i","nativeSrc":"3576:1:21","nodeType":"YulIdentifier","src":"3576:1:21"},{"kind":"number","nativeSrc":"3579:1:21","nodeType":"YulLiteral","src":"3579:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3572:3:21","nodeType":"YulIdentifier","src":"3572:3:21"},"nativeSrc":"3572:9:21","nodeType":"YulFunctionCall","src":"3572:9:21"},"variableNames":[{"name":"i","nativeSrc":"3567:1:21","nodeType":"YulIdentifier","src":"3567:1:21"}]}]},"pre":{"nativeSrc":"3547:3:21","nodeType":"YulBlock","src":"3547:3:21","statements":[]},"src":"3543:218:21"},{"nativeSrc":"3770:10:21","nodeType":"YulAssignment","src":"3770:10:21","value":{"name":"pos","nativeSrc":"3777:3:21","nodeType":"YulIdentifier","src":"3777:3:21"},"variableNames":[{"name":"end","nativeSrc":"3770:3:21","nodeType":"YulIdentifier","src":"3770:3:21"}]}]},"name":"abi_encode_array_address_dyn","nativeSrc":"3298:488:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3336:5:21","nodeType":"YulTypedName","src":"3336:5:21","type":""},{"name":"pos","nativeSrc":"3343:3:21","nodeType":"YulTypedName","src":"3343:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3351:3:21","nodeType":"YulTypedName","src":"3351:3:21","type":""}],"src":"3298:488:21"},{"body":{"nativeSrc":"3942:110:21","nodeType":"YulBlock","src":"3942:110:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3959:9:21","nodeType":"YulIdentifier","src":"3959:9:21"},{"kind":"number","nativeSrc":"3970:2:21","nodeType":"YulLiteral","src":"3970:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3952:6:21","nodeType":"YulIdentifier","src":"3952:6:21"},"nativeSrc":"3952:21:21","nodeType":"YulFunctionCall","src":"3952:21:21"},"nativeSrc":"3952:21:21","nodeType":"YulExpressionStatement","src":"3952:21:21"},{"nativeSrc":"3982:64:21","nodeType":"YulAssignment","src":"3982:64:21","value":{"arguments":[{"name":"value0","nativeSrc":"4019:6:21","nodeType":"YulIdentifier","src":"4019:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"4031:9:21","nodeType":"YulIdentifier","src":"4031:9:21"},{"kind":"number","nativeSrc":"4042:2:21","nodeType":"YulLiteral","src":"4042:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4027:3:21","nodeType":"YulIdentifier","src":"4027:3:21"},"nativeSrc":"4027:18:21","nodeType":"YulFunctionCall","src":"4027:18:21"}],"functionName":{"name":"abi_encode_array_address_dyn","nativeSrc":"3990:28:21","nodeType":"YulIdentifier","src":"3990:28:21"},"nativeSrc":"3990:56:21","nodeType":"YulFunctionCall","src":"3990:56:21"},"variableNames":[{"name":"tail","nativeSrc":"3982:4:21","nodeType":"YulIdentifier","src":"3982:4:21"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"3791:261:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3911:9:21","nodeType":"YulTypedName","src":"3911:9:21","type":""},{"name":"value0","nativeSrc":"3922:6:21","nodeType":"YulTypedName","src":"3922:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3933:4:21","nodeType":"YulTypedName","src":"3933:4:21","type":""}],"src":"3791:261:21"},{"body":{"nativeSrc":"4178:477:21","nodeType":"YulBlock","src":"4178:477:21","statements":[{"body":{"nativeSrc":"4225:16:21","nodeType":"YulBlock","src":"4225:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4234:1:21","nodeType":"YulLiteral","src":"4234:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"4237:1:21","nodeType":"YulLiteral","src":"4237:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4227:6:21","nodeType":"YulIdentifier","src":"4227:6:21"},"nativeSrc":"4227:12:21","nodeType":"YulFunctionCall","src":"4227:12:21"},"nativeSrc":"4227:12:21","nodeType":"YulExpressionStatement","src":"4227:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4199:7:21","nodeType":"YulIdentifier","src":"4199:7:21"},{"name":"headStart","nativeSrc":"4208:9:21","nodeType":"YulIdentifier","src":"4208:9:21"}],"functionName":{"name":"sub","nativeSrc":"4195:3:21","nodeType":"YulIdentifier","src":"4195:3:21"},"nativeSrc":"4195:23:21","nodeType":"YulFunctionCall","src":"4195:23:21"},{"kind":"number","nativeSrc":"4220:3:21","nodeType":"YulLiteral","src":"4220:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"4191:3:21","nodeType":"YulIdentifier","src":"4191:3:21"},"nativeSrc":"4191:33:21","nodeType":"YulFunctionCall","src":"4191:33:21"},"nativeSrc":"4188:53:21","nodeType":"YulIf","src":"4188:53:21"},{"nativeSrc":"4250:36:21","nodeType":"YulVariableDeclaration","src":"4250:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4276:9:21","nodeType":"YulIdentifier","src":"4276:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"4263:12:21","nodeType":"YulIdentifier","src":"4263:12:21"},"nativeSrc":"4263:23:21","nodeType":"YulFunctionCall","src":"4263:23:21"},"variables":[{"name":"value","nativeSrc":"4254:5:21","nodeType":"YulTypedName","src":"4254:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4320:5:21","nodeType":"YulIdentifier","src":"4320:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"4295:24:21","nodeType":"YulIdentifier","src":"4295:24:21"},"nativeSrc":"4295:31:21","nodeType":"YulFunctionCall","src":"4295:31:21"},"nativeSrc":"4295:31:21","nodeType":"YulExpressionStatement","src":"4295:31:21"},{"nativeSrc":"4335:15:21","nodeType":"YulAssignment","src":"4335:15:21","value":{"name":"value","nativeSrc":"4345:5:21","nodeType":"YulIdentifier","src":"4345:5:21"},"variableNames":[{"name":"value0","nativeSrc":"4335:6:21","nodeType":"YulIdentifier","src":"4335:6:21"}]},{"nativeSrc":"4359:47:21","nodeType":"YulVariableDeclaration","src":"4359:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4391:9:21","nodeType":"YulIdentifier","src":"4391:9:21"},{"kind":"number","nativeSrc":"4402:2:21","nodeType":"YulLiteral","src":"4402:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4387:3:21","nodeType":"YulIdentifier","src":"4387:3:21"},"nativeSrc":"4387:18:21","nodeType":"YulFunctionCall","src":"4387:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"4374:12:21","nodeType":"YulIdentifier","src":"4374:12:21"},"nativeSrc":"4374:32:21","nodeType":"YulFunctionCall","src":"4374:32:21"},"variables":[{"name":"value_1","nativeSrc":"4363:7:21","nodeType":"YulTypedName","src":"4363:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"4440:7:21","nodeType":"YulIdentifier","src":"4440:7:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"4415:24:21","nodeType":"YulIdentifier","src":"4415:24:21"},"nativeSrc":"4415:33:21","nodeType":"YulFunctionCall","src":"4415:33:21"},"nativeSrc":"4415:33:21","nodeType":"YulExpressionStatement","src":"4415:33:21"},{"nativeSrc":"4457:17:21","nodeType":"YulAssignment","src":"4457:17:21","value":{"name":"value_1","nativeSrc":"4467:7:21","nodeType":"YulIdentifier","src":"4467:7:21"},"variableNames":[{"name":"value1","nativeSrc":"4457:6:21","nodeType":"YulIdentifier","src":"4457:6:21"}]},{"nativeSrc":"4483:42:21","nodeType":"YulAssignment","src":"4483:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4510:9:21","nodeType":"YulIdentifier","src":"4510:9:21"},{"kind":"number","nativeSrc":"4521:2:21","nodeType":"YulLiteral","src":"4521:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4506:3:21","nodeType":"YulIdentifier","src":"4506:3:21"},"nativeSrc":"4506:18:21","nodeType":"YulFunctionCall","src":"4506:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"4493:12:21","nodeType":"YulIdentifier","src":"4493:12:21"},"nativeSrc":"4493:32:21","nodeType":"YulFunctionCall","src":"4493:32:21"},"variableNames":[{"name":"value2","nativeSrc":"4483:6:21","nodeType":"YulIdentifier","src":"4483:6:21"}]},{"nativeSrc":"4534:47:21","nodeType":"YulVariableDeclaration","src":"4534:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4566:9:21","nodeType":"YulIdentifier","src":"4566:9:21"},{"kind":"number","nativeSrc":"4577:2:21","nodeType":"YulLiteral","src":"4577:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4562:3:21","nodeType":"YulIdentifier","src":"4562:3:21"},"nativeSrc":"4562:18:21","nodeType":"YulFunctionCall","src":"4562:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"4549:12:21","nodeType":"YulIdentifier","src":"4549:12:21"},"nativeSrc":"4549:32:21","nodeType":"YulFunctionCall","src":"4549:32:21"},"variables":[{"name":"value_2","nativeSrc":"4538:7:21","nodeType":"YulTypedName","src":"4538:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_2","nativeSrc":"4615:7:21","nodeType":"YulIdentifier","src":"4615:7:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"4590:24:21","nodeType":"YulIdentifier","src":"4590:24:21"},"nativeSrc":"4590:33:21","nodeType":"YulFunctionCall","src":"4590:33:21"},"nativeSrc":"4590:33:21","nodeType":"YulExpressionStatement","src":"4590:33:21"},{"nativeSrc":"4632:17:21","nodeType":"YulAssignment","src":"4632:17:21","value":{"name":"value_2","nativeSrc":"4642:7:21","nodeType":"YulIdentifier","src":"4642:7:21"},"variableNames":[{"name":"value3","nativeSrc":"4632:6:21","nodeType":"YulIdentifier","src":"4632:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_address","nativeSrc":"4057:598:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4120:9:21","nodeType":"YulTypedName","src":"4120:9:21","type":""},{"name":"dataEnd","nativeSrc":"4131:7:21","nodeType":"YulTypedName","src":"4131:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4143:6:21","nodeType":"YulTypedName","src":"4143:6:21","type":""},{"name":"value1","nativeSrc":"4151:6:21","nodeType":"YulTypedName","src":"4151:6:21","type":""},{"name":"value2","nativeSrc":"4159:6:21","nodeType":"YulTypedName","src":"4159:6:21","type":""},{"name":"value3","nativeSrc":"4167:6:21","nodeType":"YulTypedName","src":"4167:6:21","type":""}],"src":"4057:598:21"},{"body":{"nativeSrc":"4787:125:21","nodeType":"YulBlock","src":"4787:125:21","statements":[{"nativeSrc":"4797:26:21","nodeType":"YulAssignment","src":"4797:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4809:9:21","nodeType":"YulIdentifier","src":"4809:9:21"},{"kind":"number","nativeSrc":"4820:2:21","nodeType":"YulLiteral","src":"4820:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4805:3:21","nodeType":"YulIdentifier","src":"4805:3:21"},"nativeSrc":"4805:18:21","nodeType":"YulFunctionCall","src":"4805:18:21"},"variableNames":[{"name":"tail","nativeSrc":"4797:4:21","nodeType":"YulIdentifier","src":"4797:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4839:9:21","nodeType":"YulIdentifier","src":"4839:9:21"},{"arguments":[{"name":"value0","nativeSrc":"4854:6:21","nodeType":"YulIdentifier","src":"4854:6:21"},{"kind":"number","nativeSrc":"4862:42:21","nodeType":"YulLiteral","src":"4862:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"4850:3:21","nodeType":"YulIdentifier","src":"4850:3:21"},"nativeSrc":"4850:55:21","nodeType":"YulFunctionCall","src":"4850:55:21"}],"functionName":{"name":"mstore","nativeSrc":"4832:6:21","nodeType":"YulIdentifier","src":"4832:6:21"},"nativeSrc":"4832:74:21","nodeType":"YulFunctionCall","src":"4832:74:21"},"nativeSrc":"4832:74:21","nodeType":"YulExpressionStatement","src":"4832:74:21"}]},"name":"abi_encode_tuple_t_contract$_IBaluniV1Registry_$4898__to_t_address__fromStack_reversed","nativeSrc":"4660:252:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4756:9:21","nodeType":"YulTypedName","src":"4756:9:21","type":""},{"name":"value0","nativeSrc":"4767:6:21","nodeType":"YulTypedName","src":"4767:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4778:4:21","nodeType":"YulTypedName","src":"4778:4:21","type":""}],"src":"4660:252:21"},{"body":{"nativeSrc":"5140:597:21","nodeType":"YulBlock","src":"5140:597:21","statements":[{"nativeSrc":"5150:32:21","nodeType":"YulVariableDeclaration","src":"5150:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5168:9:21","nodeType":"YulIdentifier","src":"5168:9:21"},{"kind":"number","nativeSrc":"5179:2:21","nodeType":"YulLiteral","src":"5179:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5164:3:21","nodeType":"YulIdentifier","src":"5164:3:21"},"nativeSrc":"5164:18:21","nodeType":"YulFunctionCall","src":"5164:18:21"},"variables":[{"name":"tail_1","nativeSrc":"5154:6:21","nodeType":"YulTypedName","src":"5154:6:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5198:9:21","nodeType":"YulIdentifier","src":"5198:9:21"},{"kind":"number","nativeSrc":"5209:2:21","nodeType":"YulLiteral","src":"5209:2:21","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"5191:6:21","nodeType":"YulIdentifier","src":"5191:6:21"},"nativeSrc":"5191:21:21","nodeType":"YulFunctionCall","src":"5191:21:21"},"nativeSrc":"5191:21:21","nodeType":"YulExpressionStatement","src":"5191:21:21"},{"nativeSrc":"5221:17:21","nodeType":"YulVariableDeclaration","src":"5221:17:21","value":{"name":"tail_1","nativeSrc":"5232:6:21","nodeType":"YulIdentifier","src":"5232:6:21"},"variables":[{"name":"pos","nativeSrc":"5225:3:21","nodeType":"YulTypedName","src":"5225:3:21","type":""}]},{"nativeSrc":"5247:27:21","nodeType":"YulVariableDeclaration","src":"5247:27:21","value":{"arguments":[{"name":"value0","nativeSrc":"5267:6:21","nodeType":"YulIdentifier","src":"5267:6:21"}],"functionName":{"name":"mload","nativeSrc":"5261:5:21","nodeType":"YulIdentifier","src":"5261:5:21"},"nativeSrc":"5261:13:21","nodeType":"YulFunctionCall","src":"5261:13:21"},"variables":[{"name":"length","nativeSrc":"5251:6:21","nodeType":"YulTypedName","src":"5251:6:21","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nativeSrc":"5290:6:21","nodeType":"YulIdentifier","src":"5290:6:21"},{"name":"length","nativeSrc":"5298:6:21","nodeType":"YulIdentifier","src":"5298:6:21"}],"functionName":{"name":"mstore","nativeSrc":"5283:6:21","nodeType":"YulIdentifier","src":"5283:6:21"},"nativeSrc":"5283:22:21","nodeType":"YulFunctionCall","src":"5283:22:21"},"nativeSrc":"5283:22:21","nodeType":"YulExpressionStatement","src":"5283:22:21"},{"nativeSrc":"5314:25:21","nodeType":"YulAssignment","src":"5314:25:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5325:9:21","nodeType":"YulIdentifier","src":"5325:9:21"},{"kind":"number","nativeSrc":"5336:2:21","nodeType":"YulLiteral","src":"5336:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5321:3:21","nodeType":"YulIdentifier","src":"5321:3:21"},"nativeSrc":"5321:18:21","nodeType":"YulFunctionCall","src":"5321:18:21"},"variableNames":[{"name":"pos","nativeSrc":"5314:3:21","nodeType":"YulIdentifier","src":"5314:3:21"}]},{"nativeSrc":"5348:14:21","nodeType":"YulVariableDeclaration","src":"5348:14:21","value":{"kind":"number","nativeSrc":"5358:4:21","nodeType":"YulLiteral","src":"5358:4:21","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"5352:2:21","nodeType":"YulTypedName","src":"5352:2:21","type":""}]},{"nativeSrc":"5371:31:21","nodeType":"YulVariableDeclaration","src":"5371:31:21","value":{"arguments":[{"name":"value0","nativeSrc":"5389:6:21","nodeType":"YulIdentifier","src":"5389:6:21"},{"kind":"number","nativeSrc":"5397:4:21","nodeType":"YulLiteral","src":"5397:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5385:3:21","nodeType":"YulIdentifier","src":"5385:3:21"},"nativeSrc":"5385:17:21","nodeType":"YulFunctionCall","src":"5385:17:21"},"variables":[{"name":"srcPtr","nativeSrc":"5375:6:21","nodeType":"YulTypedName","src":"5375:6:21","type":""}]},{"nativeSrc":"5411:10:21","nodeType":"YulVariableDeclaration","src":"5411:10:21","value":{"kind":"number","nativeSrc":"5420:1:21","nodeType":"YulLiteral","src":"5420:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5415:1:21","nodeType":"YulTypedName","src":"5415:1:21","type":""}]},{"body":{"nativeSrc":"5479:136:21","nodeType":"YulBlock","src":"5479:136:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5500:3:21","nodeType":"YulIdentifier","src":"5500:3:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"srcPtr","nativeSrc":"5525:6:21","nodeType":"YulIdentifier","src":"5525:6:21"}],"functionName":{"name":"mload","nativeSrc":"5519:5:21","nodeType":"YulIdentifier","src":"5519:5:21"},"nativeSrc":"5519:13:21","nodeType":"YulFunctionCall","src":"5519:13:21"}],"functionName":{"name":"iszero","nativeSrc":"5512:6:21","nodeType":"YulIdentifier","src":"5512:6:21"},"nativeSrc":"5512:21:21","nodeType":"YulFunctionCall","src":"5512:21:21"}],"functionName":{"name":"iszero","nativeSrc":"5505:6:21","nodeType":"YulIdentifier","src":"5505:6:21"},"nativeSrc":"5505:29:21","nodeType":"YulFunctionCall","src":"5505:29:21"}],"functionName":{"name":"mstore","nativeSrc":"5493:6:21","nodeType":"YulIdentifier","src":"5493:6:21"},"nativeSrc":"5493:42:21","nodeType":"YulFunctionCall","src":"5493:42:21"},"nativeSrc":"5493:42:21","nodeType":"YulExpressionStatement","src":"5493:42:21"},{"nativeSrc":"5548:19:21","nodeType":"YulAssignment","src":"5548:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"5559:3:21","nodeType":"YulIdentifier","src":"5559:3:21"},{"name":"_1","nativeSrc":"5564:2:21","nodeType":"YulIdentifier","src":"5564:2:21"}],"functionName":{"name":"add","nativeSrc":"5555:3:21","nodeType":"YulIdentifier","src":"5555:3:21"},"nativeSrc":"5555:12:21","nodeType":"YulFunctionCall","src":"5555:12:21"},"variableNames":[{"name":"pos","nativeSrc":"5548:3:21","nodeType":"YulIdentifier","src":"5548:3:21"}]},{"nativeSrc":"5580:25:21","nodeType":"YulAssignment","src":"5580:25:21","value":{"arguments":[{"name":"srcPtr","nativeSrc":"5594:6:21","nodeType":"YulIdentifier","src":"5594:6:21"},{"name":"_1","nativeSrc":"5602:2:21","nodeType":"YulIdentifier","src":"5602:2:21"}],"functionName":{"name":"add","nativeSrc":"5590:3:21","nodeType":"YulIdentifier","src":"5590:3:21"},"nativeSrc":"5590:15:21","nodeType":"YulFunctionCall","src":"5590:15:21"},"variableNames":[{"name":"srcPtr","nativeSrc":"5580:6:21","nodeType":"YulIdentifier","src":"5580:6:21"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5441:1:21","nodeType":"YulIdentifier","src":"5441:1:21"},{"name":"length","nativeSrc":"5444:6:21","nodeType":"YulIdentifier","src":"5444:6:21"}],"functionName":{"name":"lt","nativeSrc":"5438:2:21","nodeType":"YulIdentifier","src":"5438:2:21"},"nativeSrc":"5438:13:21","nodeType":"YulFunctionCall","src":"5438:13:21"},"nativeSrc":"5430:185:21","nodeType":"YulForLoop","post":{"nativeSrc":"5452:18:21","nodeType":"YulBlock","src":"5452:18:21","statements":[{"nativeSrc":"5454:14:21","nodeType":"YulAssignment","src":"5454:14:21","value":{"arguments":[{"name":"i","nativeSrc":"5463:1:21","nodeType":"YulIdentifier","src":"5463:1:21"},{"kind":"number","nativeSrc":"5466:1:21","nodeType":"YulLiteral","src":"5466:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5459:3:21","nodeType":"YulIdentifier","src":"5459:3:21"},"nativeSrc":"5459:9:21","nodeType":"YulFunctionCall","src":"5459:9:21"},"variableNames":[{"name":"i","nativeSrc":"5454:1:21","nodeType":"YulIdentifier","src":"5454:1:21"}]}]},"pre":{"nativeSrc":"5434:3:21","nodeType":"YulBlock","src":"5434:3:21","statements":[]},"src":"5430:185:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5635:9:21","nodeType":"YulIdentifier","src":"5635:9:21"},{"kind":"number","nativeSrc":"5646:4:21","nodeType":"YulLiteral","src":"5646:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5631:3:21","nodeType":"YulIdentifier","src":"5631:3:21"},"nativeSrc":"5631:20:21","nodeType":"YulFunctionCall","src":"5631:20:21"},{"arguments":[{"name":"pos","nativeSrc":"5657:3:21","nodeType":"YulIdentifier","src":"5657:3:21"},{"name":"headStart","nativeSrc":"5662:9:21","nodeType":"YulIdentifier","src":"5662:9:21"}],"functionName":{"name":"sub","nativeSrc":"5653:3:21","nodeType":"YulIdentifier","src":"5653:3:21"},"nativeSrc":"5653:19:21","nodeType":"YulFunctionCall","src":"5653:19:21"}],"functionName":{"name":"mstore","nativeSrc":"5624:6:21","nodeType":"YulIdentifier","src":"5624:6:21"},"nativeSrc":"5624:49:21","nodeType":"YulFunctionCall","src":"5624:49:21"},"nativeSrc":"5624:49:21","nodeType":"YulExpressionStatement","src":"5624:49:21"},{"nativeSrc":"5682:49:21","nodeType":"YulAssignment","src":"5682:49:21","value":{"arguments":[{"name":"value1","nativeSrc":"5719:6:21","nodeType":"YulIdentifier","src":"5719:6:21"},{"name":"pos","nativeSrc":"5727:3:21","nodeType":"YulIdentifier","src":"5727:3:21"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"5690:28:21","nodeType":"YulIdentifier","src":"5690:28:21"},"nativeSrc":"5690:41:21","nodeType":"YulFunctionCall","src":"5690:41:21"},"variableNames":[{"name":"tail","nativeSrc":"5682:4:21","nodeType":"YulIdentifier","src":"5682:4:21"}]}]},"name":"abi_encode_tuple_t_array$_t_bool_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_bool_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"4917:820:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5101:9:21","nodeType":"YulTypedName","src":"5101:9:21","type":""},{"name":"value1","nativeSrc":"5112:6:21","nodeType":"YulTypedName","src":"5112:6:21","type":""},{"name":"value0","nativeSrc":"5120:6:21","nodeType":"YulTypedName","src":"5120:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5131:4:21","nodeType":"YulTypedName","src":"5131:4:21","type":""}],"src":"4917:820:21"},{"body":{"nativeSrc":"5843:125:21","nodeType":"YulBlock","src":"5843:125:21","statements":[{"nativeSrc":"5853:26:21","nodeType":"YulAssignment","src":"5853:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5865:9:21","nodeType":"YulIdentifier","src":"5865:9:21"},{"kind":"number","nativeSrc":"5876:2:21","nodeType":"YulLiteral","src":"5876:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5861:3:21","nodeType":"YulIdentifier","src":"5861:3:21"},"nativeSrc":"5861:18:21","nodeType":"YulFunctionCall","src":"5861:18:21"},"variableNames":[{"name":"tail","nativeSrc":"5853:4:21","nodeType":"YulIdentifier","src":"5853:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5895:9:21","nodeType":"YulIdentifier","src":"5895:9:21"},{"arguments":[{"name":"value0","nativeSrc":"5910:6:21","nodeType":"YulIdentifier","src":"5910:6:21"},{"kind":"number","nativeSrc":"5918:42:21","nodeType":"YulLiteral","src":"5918:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"5906:3:21","nodeType":"YulIdentifier","src":"5906:3:21"},"nativeSrc":"5906:55:21","nodeType":"YulFunctionCall","src":"5906:55:21"}],"functionName":{"name":"mstore","nativeSrc":"5888:6:21","nodeType":"YulIdentifier","src":"5888:6:21"},"nativeSrc":"5888:74:21","nodeType":"YulFunctionCall","src":"5888:74:21"},"nativeSrc":"5888:74:21","nodeType":"YulExpressionStatement","src":"5888:74:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"5742:226:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5812:9:21","nodeType":"YulTypedName","src":"5812:9:21","type":""},{"name":"value0","nativeSrc":"5823:6:21","nodeType":"YulTypedName","src":"5823:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5834:4:21","nodeType":"YulTypedName","src":"5834:4:21","type":""}],"src":"5742:226:21"},{"body":{"nativeSrc":"6043:110:21","nodeType":"YulBlock","src":"6043:110:21","statements":[{"body":{"nativeSrc":"6089:16:21","nodeType":"YulBlock","src":"6089:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6098:1:21","nodeType":"YulLiteral","src":"6098:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"6101:1:21","nodeType":"YulLiteral","src":"6101:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6091:6:21","nodeType":"YulIdentifier","src":"6091:6:21"},"nativeSrc":"6091:12:21","nodeType":"YulFunctionCall","src":"6091:12:21"},"nativeSrc":"6091:12:21","nodeType":"YulExpressionStatement","src":"6091:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6064:7:21","nodeType":"YulIdentifier","src":"6064:7:21"},{"name":"headStart","nativeSrc":"6073:9:21","nodeType":"YulIdentifier","src":"6073:9:21"}],"functionName":{"name":"sub","nativeSrc":"6060:3:21","nodeType":"YulIdentifier","src":"6060:3:21"},"nativeSrc":"6060:23:21","nodeType":"YulFunctionCall","src":"6060:23:21"},{"kind":"number","nativeSrc":"6085:2:21","nodeType":"YulLiteral","src":"6085:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"6056:3:21","nodeType":"YulIdentifier","src":"6056:3:21"},"nativeSrc":"6056:32:21","nodeType":"YulFunctionCall","src":"6056:32:21"},"nativeSrc":"6053:52:21","nodeType":"YulIf","src":"6053:52:21"},{"nativeSrc":"6114:33:21","nodeType":"YulAssignment","src":"6114:33:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6137:9:21","nodeType":"YulIdentifier","src":"6137:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"6124:12:21","nodeType":"YulIdentifier","src":"6124:12:21"},"nativeSrc":"6124:23:21","nodeType":"YulFunctionCall","src":"6124:23:21"},"variableNames":[{"name":"value0","nativeSrc":"6114:6:21","nodeType":"YulIdentifier","src":"6114:6:21"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"5973:180:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6009:9:21","nodeType":"YulTypedName","src":"6009:9:21","type":""},{"name":"dataEnd","nativeSrc":"6020:7:21","nodeType":"YulTypedName","src":"6020:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6032:6:21","nodeType":"YulTypedName","src":"6032:6:21","type":""}],"src":"5973:180:21"},{"body":{"nativeSrc":"6287:168:21","nodeType":"YulBlock","src":"6287:168:21","statements":[{"nativeSrc":"6297:26:21","nodeType":"YulAssignment","src":"6297:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6309:9:21","nodeType":"YulIdentifier","src":"6309:9:21"},{"kind":"number","nativeSrc":"6320:2:21","nodeType":"YulLiteral","src":"6320:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6305:3:21","nodeType":"YulIdentifier","src":"6305:3:21"},"nativeSrc":"6305:18:21","nodeType":"YulFunctionCall","src":"6305:18:21"},"variableNames":[{"name":"tail","nativeSrc":"6297:4:21","nodeType":"YulIdentifier","src":"6297:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6339:9:21","nodeType":"YulIdentifier","src":"6339:9:21"},{"arguments":[{"name":"value0","nativeSrc":"6354:6:21","nodeType":"YulIdentifier","src":"6354:6:21"},{"kind":"number","nativeSrc":"6362:42:21","nodeType":"YulLiteral","src":"6362:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"6350:3:21","nodeType":"YulIdentifier","src":"6350:3:21"},"nativeSrc":"6350:55:21","nodeType":"YulFunctionCall","src":"6350:55:21"}],"functionName":{"name":"mstore","nativeSrc":"6332:6:21","nodeType":"YulIdentifier","src":"6332:6:21"},"nativeSrc":"6332:74:21","nodeType":"YulFunctionCall","src":"6332:74:21"},"nativeSrc":"6332:74:21","nodeType":"YulExpressionStatement","src":"6332:74:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6426:9:21","nodeType":"YulIdentifier","src":"6426:9:21"},{"kind":"number","nativeSrc":"6437:2:21","nodeType":"YulLiteral","src":"6437:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6422:3:21","nodeType":"YulIdentifier","src":"6422:3:21"},"nativeSrc":"6422:18:21","nodeType":"YulFunctionCall","src":"6422:18:21"},{"name":"value1","nativeSrc":"6442:6:21","nodeType":"YulIdentifier","src":"6442:6:21"}],"functionName":{"name":"mstore","nativeSrc":"6415:6:21","nodeType":"YulIdentifier","src":"6415:6:21"},"nativeSrc":"6415:34:21","nodeType":"YulFunctionCall","src":"6415:34:21"},"nativeSrc":"6415:34:21","nodeType":"YulExpressionStatement","src":"6415:34:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"6158:297:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6248:9:21","nodeType":"YulTypedName","src":"6248:9:21","type":""},{"name":"value1","nativeSrc":"6259:6:21","nodeType":"YulTypedName","src":"6259:6:21","type":""},{"name":"value0","nativeSrc":"6267:6:21","nodeType":"YulTypedName","src":"6267:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6278:4:21","nodeType":"YulTypedName","src":"6278:4:21","type":""}],"src":"6158:297:21"},{"body":{"nativeSrc":"6547:301:21","nodeType":"YulBlock","src":"6547:301:21","statements":[{"body":{"nativeSrc":"6593:16:21","nodeType":"YulBlock","src":"6593:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6602:1:21","nodeType":"YulLiteral","src":"6602:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"6605:1:21","nodeType":"YulLiteral","src":"6605:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6595:6:21","nodeType":"YulIdentifier","src":"6595:6:21"},"nativeSrc":"6595:12:21","nodeType":"YulFunctionCall","src":"6595:12:21"},"nativeSrc":"6595:12:21","nodeType":"YulExpressionStatement","src":"6595:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6568:7:21","nodeType":"YulIdentifier","src":"6568:7:21"},{"name":"headStart","nativeSrc":"6577:9:21","nodeType":"YulIdentifier","src":"6577:9:21"}],"functionName":{"name":"sub","nativeSrc":"6564:3:21","nodeType":"YulIdentifier","src":"6564:3:21"},"nativeSrc":"6564:23:21","nodeType":"YulFunctionCall","src":"6564:23:21"},{"kind":"number","nativeSrc":"6589:2:21","nodeType":"YulLiteral","src":"6589:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6560:3:21","nodeType":"YulIdentifier","src":"6560:3:21"},"nativeSrc":"6560:32:21","nodeType":"YulFunctionCall","src":"6560:32:21"},"nativeSrc":"6557:52:21","nodeType":"YulIf","src":"6557:52:21"},{"nativeSrc":"6618:36:21","nodeType":"YulVariableDeclaration","src":"6618:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6644:9:21","nodeType":"YulIdentifier","src":"6644:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"6631:12:21","nodeType":"YulIdentifier","src":"6631:12:21"},"nativeSrc":"6631:23:21","nodeType":"YulFunctionCall","src":"6631:23:21"},"variables":[{"name":"value","nativeSrc":"6622:5:21","nodeType":"YulTypedName","src":"6622:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6688:5:21","nodeType":"YulIdentifier","src":"6688:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"6663:24:21","nodeType":"YulIdentifier","src":"6663:24:21"},"nativeSrc":"6663:31:21","nodeType":"YulFunctionCall","src":"6663:31:21"},"nativeSrc":"6663:31:21","nodeType":"YulExpressionStatement","src":"6663:31:21"},{"nativeSrc":"6703:15:21","nodeType":"YulAssignment","src":"6703:15:21","value":{"name":"value","nativeSrc":"6713:5:21","nodeType":"YulIdentifier","src":"6713:5:21"},"variableNames":[{"name":"value0","nativeSrc":"6703:6:21","nodeType":"YulIdentifier","src":"6703:6:21"}]},{"nativeSrc":"6727:47:21","nodeType":"YulVariableDeclaration","src":"6727:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6759:9:21","nodeType":"YulIdentifier","src":"6759:9:21"},{"kind":"number","nativeSrc":"6770:2:21","nodeType":"YulLiteral","src":"6770:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6755:3:21","nodeType":"YulIdentifier","src":"6755:3:21"},"nativeSrc":"6755:18:21","nodeType":"YulFunctionCall","src":"6755:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"6742:12:21","nodeType":"YulIdentifier","src":"6742:12:21"},"nativeSrc":"6742:32:21","nodeType":"YulFunctionCall","src":"6742:32:21"},"variables":[{"name":"value_1","nativeSrc":"6731:7:21","nodeType":"YulTypedName","src":"6731:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"6808:7:21","nodeType":"YulIdentifier","src":"6808:7:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"6783:24:21","nodeType":"YulIdentifier","src":"6783:24:21"},"nativeSrc":"6783:33:21","nodeType":"YulFunctionCall","src":"6783:33:21"},"nativeSrc":"6783:33:21","nodeType":"YulExpressionStatement","src":"6783:33:21"},{"nativeSrc":"6825:17:21","nodeType":"YulAssignment","src":"6825:17:21","value":{"name":"value_1","nativeSrc":"6835:7:21","nodeType":"YulIdentifier","src":"6835:7:21"},"variableNames":[{"name":"value1","nativeSrc":"6825:6:21","nodeType":"YulIdentifier","src":"6825:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"6460:388:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6505:9:21","nodeType":"YulTypedName","src":"6505:9:21","type":""},{"name":"dataEnd","nativeSrc":"6516:7:21","nodeType":"YulTypedName","src":"6516:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6528:6:21","nodeType":"YulTypedName","src":"6528:6:21","type":""},{"name":"value1","nativeSrc":"6536:6:21","nodeType":"YulTypedName","src":"6536:6:21","type":""}],"src":"6460:388:21"},{"body":{"nativeSrc":"6885:152:21","nodeType":"YulBlock","src":"6885:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6902:1:21","nodeType":"YulLiteral","src":"6902:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"6905:77:21","nodeType":"YulLiteral","src":"6905:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6895:6:21","nodeType":"YulIdentifier","src":"6895:6:21"},"nativeSrc":"6895:88:21","nodeType":"YulFunctionCall","src":"6895:88:21"},"nativeSrc":"6895:88:21","nodeType":"YulExpressionStatement","src":"6895:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6999:1:21","nodeType":"YulLiteral","src":"6999:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"7002:4:21","nodeType":"YulLiteral","src":"7002:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"6992:6:21","nodeType":"YulIdentifier","src":"6992:6:21"},"nativeSrc":"6992:15:21","nodeType":"YulFunctionCall","src":"6992:15:21"},"nativeSrc":"6992:15:21","nodeType":"YulExpressionStatement","src":"6992:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7023:1:21","nodeType":"YulLiteral","src":"7023:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"7026:4:21","nodeType":"YulLiteral","src":"7026:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7016:6:21","nodeType":"YulIdentifier","src":"7016:6:21"},"nativeSrc":"7016:15:21","nodeType":"YulFunctionCall","src":"7016:15:21"},"nativeSrc":"7016:15:21","nodeType":"YulExpressionStatement","src":"7016:15:21"}]},"name":"panic_error_0x41","nativeSrc":"6853:184:21","nodeType":"YulFunctionDefinition","src":"6853:184:21"},{"body":{"nativeSrc":"7087:289:21","nodeType":"YulBlock","src":"7087:289:21","statements":[{"nativeSrc":"7097:19:21","nodeType":"YulAssignment","src":"7097:19:21","value":{"arguments":[{"kind":"number","nativeSrc":"7113:2:21","nodeType":"YulLiteral","src":"7113:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"7107:5:21","nodeType":"YulIdentifier","src":"7107:5:21"},"nativeSrc":"7107:9:21","nodeType":"YulFunctionCall","src":"7107:9:21"},"variableNames":[{"name":"memPtr","nativeSrc":"7097:6:21","nodeType":"YulIdentifier","src":"7097:6:21"}]},{"nativeSrc":"7125:117:21","nodeType":"YulVariableDeclaration","src":"7125:117:21","value":{"arguments":[{"name":"memPtr","nativeSrc":"7147:6:21","nodeType":"YulIdentifier","src":"7147:6:21"},{"arguments":[{"arguments":[{"name":"size","nativeSrc":"7163:4:21","nodeType":"YulIdentifier","src":"7163:4:21"},{"kind":"number","nativeSrc":"7169:2:21","nodeType":"YulLiteral","src":"7169:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"7159:3:21","nodeType":"YulIdentifier","src":"7159:3:21"},"nativeSrc":"7159:13:21","nodeType":"YulFunctionCall","src":"7159:13:21"},{"kind":"number","nativeSrc":"7174:66:21","nodeType":"YulLiteral","src":"7174:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nativeSrc":"7155:3:21","nodeType":"YulIdentifier","src":"7155:3:21"},"nativeSrc":"7155:86:21","nodeType":"YulFunctionCall","src":"7155:86:21"}],"functionName":{"name":"add","nativeSrc":"7143:3:21","nodeType":"YulIdentifier","src":"7143:3:21"},"nativeSrc":"7143:99:21","nodeType":"YulFunctionCall","src":"7143:99:21"},"variables":[{"name":"newFreePtr","nativeSrc":"7129:10:21","nodeType":"YulTypedName","src":"7129:10:21","type":""}]},{"body":{"nativeSrc":"7317:22:21","nodeType":"YulBlock","src":"7317:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7319:16:21","nodeType":"YulIdentifier","src":"7319:16:21"},"nativeSrc":"7319:18:21","nodeType":"YulFunctionCall","src":"7319:18:21"},"nativeSrc":"7319:18:21","nodeType":"YulExpressionStatement","src":"7319:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"7260:10:21","nodeType":"YulIdentifier","src":"7260:10:21"},{"kind":"number","nativeSrc":"7272:18:21","nodeType":"YulLiteral","src":"7272:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7257:2:21","nodeType":"YulIdentifier","src":"7257:2:21"},"nativeSrc":"7257:34:21","nodeType":"YulFunctionCall","src":"7257:34:21"},{"arguments":[{"name":"newFreePtr","nativeSrc":"7296:10:21","nodeType":"YulIdentifier","src":"7296:10:21"},{"name":"memPtr","nativeSrc":"7308:6:21","nodeType":"YulIdentifier","src":"7308:6:21"}],"functionName":{"name":"lt","nativeSrc":"7293:2:21","nodeType":"YulIdentifier","src":"7293:2:21"},"nativeSrc":"7293:22:21","nodeType":"YulFunctionCall","src":"7293:22:21"}],"functionName":{"name":"or","nativeSrc":"7254:2:21","nodeType":"YulIdentifier","src":"7254:2:21"},"nativeSrc":"7254:62:21","nodeType":"YulFunctionCall","src":"7254:62:21"},"nativeSrc":"7251:88:21","nodeType":"YulIf","src":"7251:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7355:2:21","nodeType":"YulLiteral","src":"7355:2:21","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"7359:10:21","nodeType":"YulIdentifier","src":"7359:10:21"}],"functionName":{"name":"mstore","nativeSrc":"7348:6:21","nodeType":"YulIdentifier","src":"7348:6:21"},"nativeSrc":"7348:22:21","nodeType":"YulFunctionCall","src":"7348:22:21"},"nativeSrc":"7348:22:21","nodeType":"YulExpressionStatement","src":"7348:22:21"}]},"name":"allocate_memory","nativeSrc":"7042:334:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"7067:4:21","nodeType":"YulTypedName","src":"7067:4:21","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"7076:6:21","nodeType":"YulTypedName","src":"7076:6:21","type":""}],"src":"7042:334:21"},{"body":{"nativeSrc":"7450:114:21","nodeType":"YulBlock","src":"7450:114:21","statements":[{"body":{"nativeSrc":"7494:22:21","nodeType":"YulBlock","src":"7494:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7496:16:21","nodeType":"YulIdentifier","src":"7496:16:21"},"nativeSrc":"7496:18:21","nodeType":"YulFunctionCall","src":"7496:18:21"},"nativeSrc":"7496:18:21","nodeType":"YulExpressionStatement","src":"7496:18:21"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"7466:6:21","nodeType":"YulIdentifier","src":"7466:6:21"},{"kind":"number","nativeSrc":"7474:18:21","nodeType":"YulLiteral","src":"7474:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7463:2:21","nodeType":"YulIdentifier","src":"7463:2:21"},"nativeSrc":"7463:30:21","nodeType":"YulFunctionCall","src":"7463:30:21"},"nativeSrc":"7460:56:21","nodeType":"YulIf","src":"7460:56:21"},{"nativeSrc":"7525:33:21","nodeType":"YulAssignment","src":"7525:33:21","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7541:1:21","nodeType":"YulLiteral","src":"7541:1:21","type":"","value":"5"},{"name":"length","nativeSrc":"7544:6:21","nodeType":"YulIdentifier","src":"7544:6:21"}],"functionName":{"name":"shl","nativeSrc":"7537:3:21","nodeType":"YulIdentifier","src":"7537:3:21"},"nativeSrc":"7537:14:21","nodeType":"YulFunctionCall","src":"7537:14:21"},{"kind":"number","nativeSrc":"7553:4:21","nodeType":"YulLiteral","src":"7553:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7533:3:21","nodeType":"YulIdentifier","src":"7533:3:21"},"nativeSrc":"7533:25:21","nodeType":"YulFunctionCall","src":"7533:25:21"},"variableNames":[{"name":"size","nativeSrc":"7525:4:21","nodeType":"YulIdentifier","src":"7525:4:21"}]}]},"name":"array_allocation_size_array_uint256_dyn","nativeSrc":"7381:183:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"7430:6:21","nodeType":"YulTypedName","src":"7430:6:21","type":""}],"returnVariables":[{"name":"size","nativeSrc":"7441:4:21","nodeType":"YulTypedName","src":"7441:4:21","type":""}],"src":"7381:183:21"},{"body":{"nativeSrc":"7681:914:21","nodeType":"YulBlock","src":"7681:914:21","statements":[{"body":{"nativeSrc":"7727:16:21","nodeType":"YulBlock","src":"7727:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7736:1:21","nodeType":"YulLiteral","src":"7736:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"7739:1:21","nodeType":"YulLiteral","src":"7739:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7729:6:21","nodeType":"YulIdentifier","src":"7729:6:21"},"nativeSrc":"7729:12:21","nodeType":"YulFunctionCall","src":"7729:12:21"},"nativeSrc":"7729:12:21","nodeType":"YulExpressionStatement","src":"7729:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7702:7:21","nodeType":"YulIdentifier","src":"7702:7:21"},{"name":"headStart","nativeSrc":"7711:9:21","nodeType":"YulIdentifier","src":"7711:9:21"}],"functionName":{"name":"sub","nativeSrc":"7698:3:21","nodeType":"YulIdentifier","src":"7698:3:21"},"nativeSrc":"7698:23:21","nodeType":"YulFunctionCall","src":"7698:23:21"},{"kind":"number","nativeSrc":"7723:2:21","nodeType":"YulLiteral","src":"7723:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"7694:3:21","nodeType":"YulIdentifier","src":"7694:3:21"},"nativeSrc":"7694:32:21","nodeType":"YulFunctionCall","src":"7694:32:21"},"nativeSrc":"7691:52:21","nodeType":"YulIf","src":"7691:52:21"},{"nativeSrc":"7752:36:21","nodeType":"YulVariableDeclaration","src":"7752:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"7778:9:21","nodeType":"YulIdentifier","src":"7778:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"7765:12:21","nodeType":"YulIdentifier","src":"7765:12:21"},"nativeSrc":"7765:23:21","nodeType":"YulFunctionCall","src":"7765:23:21"},"variables":[{"name":"value","nativeSrc":"7756:5:21","nodeType":"YulTypedName","src":"7756:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"7822:5:21","nodeType":"YulIdentifier","src":"7822:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"7797:24:21","nodeType":"YulIdentifier","src":"7797:24:21"},"nativeSrc":"7797:31:21","nodeType":"YulFunctionCall","src":"7797:31:21"},"nativeSrc":"7797:31:21","nodeType":"YulExpressionStatement","src":"7797:31:21"},{"nativeSrc":"7837:15:21","nodeType":"YulAssignment","src":"7837:15:21","value":{"name":"value","nativeSrc":"7847:5:21","nodeType":"YulIdentifier","src":"7847:5:21"},"variableNames":[{"name":"value0","nativeSrc":"7837:6:21","nodeType":"YulIdentifier","src":"7837:6:21"}]},{"nativeSrc":"7861:12:21","nodeType":"YulVariableDeclaration","src":"7861:12:21","value":{"kind":"number","nativeSrc":"7871:2:21","nodeType":"YulLiteral","src":"7871:2:21","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"7865:2:21","nodeType":"YulTypedName","src":"7865:2:21","type":""}]},{"nativeSrc":"7882:46:21","nodeType":"YulVariableDeclaration","src":"7882:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7913:9:21","nodeType":"YulIdentifier","src":"7913:9:21"},{"name":"_1","nativeSrc":"7924:2:21","nodeType":"YulIdentifier","src":"7924:2:21"}],"functionName":{"name":"add","nativeSrc":"7909:3:21","nodeType":"YulIdentifier","src":"7909:3:21"},"nativeSrc":"7909:18:21","nodeType":"YulFunctionCall","src":"7909:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"7896:12:21","nodeType":"YulIdentifier","src":"7896:12:21"},"nativeSrc":"7896:32:21","nodeType":"YulFunctionCall","src":"7896:32:21"},"variables":[{"name":"offset","nativeSrc":"7886:6:21","nodeType":"YulTypedName","src":"7886:6:21","type":""}]},{"body":{"nativeSrc":"7971:16:21","nodeType":"YulBlock","src":"7971:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7980:1:21","nodeType":"YulLiteral","src":"7980:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"7983:1:21","nodeType":"YulLiteral","src":"7983:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7973:6:21","nodeType":"YulIdentifier","src":"7973:6:21"},"nativeSrc":"7973:12:21","nodeType":"YulFunctionCall","src":"7973:12:21"},"nativeSrc":"7973:12:21","nodeType":"YulExpressionStatement","src":"7973:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"7943:6:21","nodeType":"YulIdentifier","src":"7943:6:21"},{"kind":"number","nativeSrc":"7951:18:21","nodeType":"YulLiteral","src":"7951:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7940:2:21","nodeType":"YulIdentifier","src":"7940:2:21"},"nativeSrc":"7940:30:21","nodeType":"YulFunctionCall","src":"7940:30:21"},"nativeSrc":"7937:50:21","nodeType":"YulIf","src":"7937:50:21"},{"nativeSrc":"7996:32:21","nodeType":"YulVariableDeclaration","src":"7996:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"8010:9:21","nodeType":"YulIdentifier","src":"8010:9:21"},{"name":"offset","nativeSrc":"8021:6:21","nodeType":"YulIdentifier","src":"8021:6:21"}],"functionName":{"name":"add","nativeSrc":"8006:3:21","nodeType":"YulIdentifier","src":"8006:3:21"},"nativeSrc":"8006:22:21","nodeType":"YulFunctionCall","src":"8006:22:21"},"variables":[{"name":"_2","nativeSrc":"8000:2:21","nodeType":"YulTypedName","src":"8000:2:21","type":""}]},{"body":{"nativeSrc":"8076:16:21","nodeType":"YulBlock","src":"8076:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8085:1:21","nodeType":"YulLiteral","src":"8085:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"8088:1:21","nodeType":"YulLiteral","src":"8088:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8078:6:21","nodeType":"YulIdentifier","src":"8078:6:21"},"nativeSrc":"8078:12:21","nodeType":"YulFunctionCall","src":"8078:12:21"},"nativeSrc":"8078:12:21","nodeType":"YulExpressionStatement","src":"8078:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"8055:2:21","nodeType":"YulIdentifier","src":"8055:2:21"},{"kind":"number","nativeSrc":"8059:4:21","nodeType":"YulLiteral","src":"8059:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"8051:3:21","nodeType":"YulIdentifier","src":"8051:3:21"},"nativeSrc":"8051:13:21","nodeType":"YulFunctionCall","src":"8051:13:21"},{"name":"dataEnd","nativeSrc":"8066:7:21","nodeType":"YulIdentifier","src":"8066:7:21"}],"functionName":{"name":"slt","nativeSrc":"8047:3:21","nodeType":"YulIdentifier","src":"8047:3:21"},"nativeSrc":"8047:27:21","nodeType":"YulFunctionCall","src":"8047:27:21"}],"functionName":{"name":"iszero","nativeSrc":"8040:6:21","nodeType":"YulIdentifier","src":"8040:6:21"},"nativeSrc":"8040:35:21","nodeType":"YulFunctionCall","src":"8040:35:21"},"nativeSrc":"8037:55:21","nodeType":"YulIf","src":"8037:55:21"},{"nativeSrc":"8101:26:21","nodeType":"YulVariableDeclaration","src":"8101:26:21","value":{"arguments":[{"name":"_2","nativeSrc":"8124:2:21","nodeType":"YulIdentifier","src":"8124:2:21"}],"functionName":{"name":"calldataload","nativeSrc":"8111:12:21","nodeType":"YulIdentifier","src":"8111:12:21"},"nativeSrc":"8111:16:21","nodeType":"YulFunctionCall","src":"8111:16:21"},"variables":[{"name":"_3","nativeSrc":"8105:2:21","nodeType":"YulTypedName","src":"8105:2:21","type":""}]},{"nativeSrc":"8136:71:21","nodeType":"YulVariableDeclaration","src":"8136:71:21","value":{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"8203:2:21","nodeType":"YulIdentifier","src":"8203:2:21"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nativeSrc":"8163:39:21","nodeType":"YulIdentifier","src":"8163:39:21"},"nativeSrc":"8163:43:21","nodeType":"YulFunctionCall","src":"8163:43:21"}],"functionName":{"name":"allocate_memory","nativeSrc":"8147:15:21","nodeType":"YulIdentifier","src":"8147:15:21"},"nativeSrc":"8147:60:21","nodeType":"YulFunctionCall","src":"8147:60:21"},"variables":[{"name":"dst","nativeSrc":"8140:3:21","nodeType":"YulTypedName","src":"8140:3:21","type":""}]},{"nativeSrc":"8216:16:21","nodeType":"YulVariableDeclaration","src":"8216:16:21","value":{"name":"dst","nativeSrc":"8229:3:21","nodeType":"YulIdentifier","src":"8229:3:21"},"variables":[{"name":"dst_1","nativeSrc":"8220:5:21","nodeType":"YulTypedName","src":"8220:5:21","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"8248:3:21","nodeType":"YulIdentifier","src":"8248:3:21"},{"name":"_3","nativeSrc":"8253:2:21","nodeType":"YulIdentifier","src":"8253:2:21"}],"functionName":{"name":"mstore","nativeSrc":"8241:6:21","nodeType":"YulIdentifier","src":"8241:6:21"},"nativeSrc":"8241:15:21","nodeType":"YulFunctionCall","src":"8241:15:21"},"nativeSrc":"8241:15:21","nodeType":"YulExpressionStatement","src":"8241:15:21"},{"nativeSrc":"8265:19:21","nodeType":"YulAssignment","src":"8265:19:21","value":{"arguments":[{"name":"dst","nativeSrc":"8276:3:21","nodeType":"YulIdentifier","src":"8276:3:21"},{"name":"_1","nativeSrc":"8281:2:21","nodeType":"YulIdentifier","src":"8281:2:21"}],"functionName":{"name":"add","nativeSrc":"8272:3:21","nodeType":"YulIdentifier","src":"8272:3:21"},"nativeSrc":"8272:12:21","nodeType":"YulFunctionCall","src":"8272:12:21"},"variableNames":[{"name":"dst","nativeSrc":"8265:3:21","nodeType":"YulIdentifier","src":"8265:3:21"}]},{"nativeSrc":"8293:42:21","nodeType":"YulVariableDeclaration","src":"8293:42:21","value":{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"8315:2:21","nodeType":"YulIdentifier","src":"8315:2:21"},{"arguments":[{"kind":"number","nativeSrc":"8323:1:21","nodeType":"YulLiteral","src":"8323:1:21","type":"","value":"5"},{"name":"_3","nativeSrc":"8326:2:21","nodeType":"YulIdentifier","src":"8326:2:21"}],"functionName":{"name":"shl","nativeSrc":"8319:3:21","nodeType":"YulIdentifier","src":"8319:3:21"},"nativeSrc":"8319:10:21","nodeType":"YulFunctionCall","src":"8319:10:21"}],"functionName":{"name":"add","nativeSrc":"8311:3:21","nodeType":"YulIdentifier","src":"8311:3:21"},"nativeSrc":"8311:19:21","nodeType":"YulFunctionCall","src":"8311:19:21"},{"name":"_1","nativeSrc":"8332:2:21","nodeType":"YulIdentifier","src":"8332:2:21"}],"functionName":{"name":"add","nativeSrc":"8307:3:21","nodeType":"YulIdentifier","src":"8307:3:21"},"nativeSrc":"8307:28:21","nodeType":"YulFunctionCall","src":"8307:28:21"},"variables":[{"name":"srcEnd","nativeSrc":"8297:6:21","nodeType":"YulTypedName","src":"8297:6:21","type":""}]},{"body":{"nativeSrc":"8367:16:21","nodeType":"YulBlock","src":"8367:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8376:1:21","nodeType":"YulLiteral","src":"8376:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"8379:1:21","nodeType":"YulLiteral","src":"8379:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8369:6:21","nodeType":"YulIdentifier","src":"8369:6:21"},"nativeSrc":"8369:12:21","nodeType":"YulFunctionCall","src":"8369:12:21"},"nativeSrc":"8369:12:21","nodeType":"YulExpressionStatement","src":"8369:12:21"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"8350:6:21","nodeType":"YulIdentifier","src":"8350:6:21"},{"name":"dataEnd","nativeSrc":"8358:7:21","nodeType":"YulIdentifier","src":"8358:7:21"}],"functionName":{"name":"gt","nativeSrc":"8347:2:21","nodeType":"YulIdentifier","src":"8347:2:21"},"nativeSrc":"8347:19:21","nodeType":"YulFunctionCall","src":"8347:19:21"},"nativeSrc":"8344:39:21","nodeType":"YulIf","src":"8344:39:21"},{"nativeSrc":"8392:22:21","nodeType":"YulVariableDeclaration","src":"8392:22:21","value":{"arguments":[{"name":"_2","nativeSrc":"8407:2:21","nodeType":"YulIdentifier","src":"8407:2:21"},{"name":"_1","nativeSrc":"8411:2:21","nodeType":"YulIdentifier","src":"8411:2:21"}],"functionName":{"name":"add","nativeSrc":"8403:3:21","nodeType":"YulIdentifier","src":"8403:3:21"},"nativeSrc":"8403:11:21","nodeType":"YulFunctionCall","src":"8403:11:21"},"variables":[{"name":"src","nativeSrc":"8396:3:21","nodeType":"YulTypedName","src":"8396:3:21","type":""}]},{"body":{"nativeSrc":"8479:86:21","nodeType":"YulBlock","src":"8479:86:21","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"8500:3:21","nodeType":"YulIdentifier","src":"8500:3:21"},{"arguments":[{"name":"src","nativeSrc":"8518:3:21","nodeType":"YulIdentifier","src":"8518:3:21"}],"functionName":{"name":"calldataload","nativeSrc":"8505:12:21","nodeType":"YulIdentifier","src":"8505:12:21"},"nativeSrc":"8505:17:21","nodeType":"YulFunctionCall","src":"8505:17:21"}],"functionName":{"name":"mstore","nativeSrc":"8493:6:21","nodeType":"YulIdentifier","src":"8493:6:21"},"nativeSrc":"8493:30:21","nodeType":"YulFunctionCall","src":"8493:30:21"},"nativeSrc":"8493:30:21","nodeType":"YulExpressionStatement","src":"8493:30:21"},{"nativeSrc":"8536:19:21","nodeType":"YulAssignment","src":"8536:19:21","value":{"arguments":[{"name":"dst","nativeSrc":"8547:3:21","nodeType":"YulIdentifier","src":"8547:3:21"},{"name":"_1","nativeSrc":"8552:2:21","nodeType":"YulIdentifier","src":"8552:2:21"}],"functionName":{"name":"add","nativeSrc":"8543:3:21","nodeType":"YulIdentifier","src":"8543:3:21"},"nativeSrc":"8543:12:21","nodeType":"YulFunctionCall","src":"8543:12:21"},"variableNames":[{"name":"dst","nativeSrc":"8536:3:21","nodeType":"YulIdentifier","src":"8536:3:21"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"8434:3:21","nodeType":"YulIdentifier","src":"8434:3:21"},{"name":"srcEnd","nativeSrc":"8439:6:21","nodeType":"YulIdentifier","src":"8439:6:21"}],"functionName":{"name":"lt","nativeSrc":"8431:2:21","nodeType":"YulIdentifier","src":"8431:2:21"},"nativeSrc":"8431:15:21","nodeType":"YulFunctionCall","src":"8431:15:21"},"nativeSrc":"8423:142:21","nodeType":"YulForLoop","post":{"nativeSrc":"8447:23:21","nodeType":"YulBlock","src":"8447:23:21","statements":[{"nativeSrc":"8449:19:21","nodeType":"YulAssignment","src":"8449:19:21","value":{"arguments":[{"name":"src","nativeSrc":"8460:3:21","nodeType":"YulIdentifier","src":"8460:3:21"},{"name":"_1","nativeSrc":"8465:2:21","nodeType":"YulIdentifier","src":"8465:2:21"}],"functionName":{"name":"add","nativeSrc":"8456:3:21","nodeType":"YulIdentifier","src":"8456:3:21"},"nativeSrc":"8456:12:21","nodeType":"YulFunctionCall","src":"8456:12:21"},"variableNames":[{"name":"src","nativeSrc":"8449:3:21","nodeType":"YulIdentifier","src":"8449:3:21"}]}]},"pre":{"nativeSrc":"8427:3:21","nodeType":"YulBlock","src":"8427:3:21","statements":[]},"src":"8423:142:21"},{"nativeSrc":"8574:15:21","nodeType":"YulAssignment","src":"8574:15:21","value":{"name":"dst_1","nativeSrc":"8584:5:21","nodeType":"YulIdentifier","src":"8584:5:21"},"variableNames":[{"name":"value1","nativeSrc":"8574:6:21","nodeType":"YulIdentifier","src":"8574:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7569:1026:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7639:9:21","nodeType":"YulTypedName","src":"7639:9:21","type":""},{"name":"dataEnd","nativeSrc":"7650:7:21","nodeType":"YulTypedName","src":"7650:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7662:6:21","nodeType":"YulTypedName","src":"7662:6:21","type":""},{"name":"value1","nativeSrc":"7670:6:21","nodeType":"YulTypedName","src":"7670:6:21","type":""}],"src":"7569:1026:21"},{"body":{"nativeSrc":"8829:236:21","nodeType":"YulBlock","src":"8829:236:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8846:9:21","nodeType":"YulIdentifier","src":"8846:9:21"},{"kind":"number","nativeSrc":"8857:2:21","nodeType":"YulLiteral","src":"8857:2:21","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"8839:6:21","nodeType":"YulIdentifier","src":"8839:6:21"},"nativeSrc":"8839:21:21","nodeType":"YulFunctionCall","src":"8839:21:21"},"nativeSrc":"8839:21:21","nodeType":"YulExpressionStatement","src":"8839:21:21"},{"nativeSrc":"8869:70:21","nodeType":"YulVariableDeclaration","src":"8869:70:21","value":{"arguments":[{"name":"value0","nativeSrc":"8912:6:21","nodeType":"YulIdentifier","src":"8912:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"8924:9:21","nodeType":"YulIdentifier","src":"8924:9:21"},{"kind":"number","nativeSrc":"8935:2:21","nodeType":"YulLiteral","src":"8935:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8920:3:21","nodeType":"YulIdentifier","src":"8920:3:21"},"nativeSrc":"8920:18:21","nodeType":"YulFunctionCall","src":"8920:18:21"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"8883:28:21","nodeType":"YulIdentifier","src":"8883:28:21"},"nativeSrc":"8883:56:21","nodeType":"YulFunctionCall","src":"8883:56:21"},"variables":[{"name":"tail_1","nativeSrc":"8873:6:21","nodeType":"YulTypedName","src":"8873:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8959:9:21","nodeType":"YulIdentifier","src":"8959:9:21"},{"kind":"number","nativeSrc":"8970:2:21","nodeType":"YulLiteral","src":"8970:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8955:3:21","nodeType":"YulIdentifier","src":"8955:3:21"},"nativeSrc":"8955:18:21","nodeType":"YulFunctionCall","src":"8955:18:21"},{"arguments":[{"name":"tail_1","nativeSrc":"8979:6:21","nodeType":"YulIdentifier","src":"8979:6:21"},{"name":"headStart","nativeSrc":"8987:9:21","nodeType":"YulIdentifier","src":"8987:9:21"}],"functionName":{"name":"sub","nativeSrc":"8975:3:21","nodeType":"YulIdentifier","src":"8975:3:21"},"nativeSrc":"8975:22:21","nodeType":"YulFunctionCall","src":"8975:22:21"}],"functionName":{"name":"mstore","nativeSrc":"8948:6:21","nodeType":"YulIdentifier","src":"8948:6:21"},"nativeSrc":"8948:50:21","nodeType":"YulFunctionCall","src":"8948:50:21"},"nativeSrc":"8948:50:21","nodeType":"YulExpressionStatement","src":"8948:50:21"},{"nativeSrc":"9007:52:21","nodeType":"YulAssignment","src":"9007:52:21","value":{"arguments":[{"name":"value1","nativeSrc":"9044:6:21","nodeType":"YulIdentifier","src":"9044:6:21"},{"name":"tail_1","nativeSrc":"9052:6:21","nodeType":"YulIdentifier","src":"9052:6:21"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"9015:28:21","nodeType":"YulIdentifier","src":"9015:28:21"},"nativeSrc":"9015:44:21","nodeType":"YulFunctionCall","src":"9015:44:21"},"variableNames":[{"name":"tail","nativeSrc":"9007:4:21","nodeType":"YulIdentifier","src":"9007:4:21"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"8600:465:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8790:9:21","nodeType":"YulTypedName","src":"8790:9:21","type":""},{"name":"value1","nativeSrc":"8801:6:21","nodeType":"YulTypedName","src":"8801:6:21","type":""},{"name":"value0","nativeSrc":"8809:6:21","nodeType":"YulTypedName","src":"8809:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8820:4:21","nodeType":"YulTypedName","src":"8820:4:21","type":""}],"src":"8600:465:21"},{"body":{"nativeSrc":"9125:382:21","nodeType":"YulBlock","src":"9125:382:21","statements":[{"nativeSrc":"9135:22:21","nodeType":"YulAssignment","src":"9135:22:21","value":{"arguments":[{"kind":"number","nativeSrc":"9149:1:21","nodeType":"YulLiteral","src":"9149:1:21","type":"","value":"1"},{"name":"data","nativeSrc":"9152:4:21","nodeType":"YulIdentifier","src":"9152:4:21"}],"functionName":{"name":"shr","nativeSrc":"9145:3:21","nodeType":"YulIdentifier","src":"9145:3:21"},"nativeSrc":"9145:12:21","nodeType":"YulFunctionCall","src":"9145:12:21"},"variableNames":[{"name":"length","nativeSrc":"9135:6:21","nodeType":"YulIdentifier","src":"9135:6:21"}]},{"nativeSrc":"9166:38:21","nodeType":"YulVariableDeclaration","src":"9166:38:21","value":{"arguments":[{"name":"data","nativeSrc":"9196:4:21","nodeType":"YulIdentifier","src":"9196:4:21"},{"kind":"number","nativeSrc":"9202:1:21","nodeType":"YulLiteral","src":"9202:1:21","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"9192:3:21","nodeType":"YulIdentifier","src":"9192:3:21"},"nativeSrc":"9192:12:21","nodeType":"YulFunctionCall","src":"9192:12:21"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"9170:18:21","nodeType":"YulTypedName","src":"9170:18:21","type":""}]},{"body":{"nativeSrc":"9243:31:21","nodeType":"YulBlock","src":"9243:31:21","statements":[{"nativeSrc":"9245:27:21","nodeType":"YulAssignment","src":"9245:27:21","value":{"arguments":[{"name":"length","nativeSrc":"9259:6:21","nodeType":"YulIdentifier","src":"9259:6:21"},{"kind":"number","nativeSrc":"9267:4:21","nodeType":"YulLiteral","src":"9267:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"9255:3:21","nodeType":"YulIdentifier","src":"9255:3:21"},"nativeSrc":"9255:17:21","nodeType":"YulFunctionCall","src":"9255:17:21"},"variableNames":[{"name":"length","nativeSrc":"9245:6:21","nodeType":"YulIdentifier","src":"9245:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"9223:18:21","nodeType":"YulIdentifier","src":"9223:18:21"}],"functionName":{"name":"iszero","nativeSrc":"9216:6:21","nodeType":"YulIdentifier","src":"9216:6:21"},"nativeSrc":"9216:26:21","nodeType":"YulFunctionCall","src":"9216:26:21"},"nativeSrc":"9213:61:21","nodeType":"YulIf","src":"9213:61:21"},{"body":{"nativeSrc":"9333:168:21","nodeType":"YulBlock","src":"9333:168:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9354:1:21","nodeType":"YulLiteral","src":"9354:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"9357:77:21","nodeType":"YulLiteral","src":"9357:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"9347:6:21","nodeType":"YulIdentifier","src":"9347:6:21"},"nativeSrc":"9347:88:21","nodeType":"YulFunctionCall","src":"9347:88:21"},"nativeSrc":"9347:88:21","nodeType":"YulExpressionStatement","src":"9347:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9455:1:21","nodeType":"YulLiteral","src":"9455:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"9458:4:21","nodeType":"YulLiteral","src":"9458:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"9448:6:21","nodeType":"YulIdentifier","src":"9448:6:21"},"nativeSrc":"9448:15:21","nodeType":"YulFunctionCall","src":"9448:15:21"},"nativeSrc":"9448:15:21","nodeType":"YulExpressionStatement","src":"9448:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9483:1:21","nodeType":"YulLiteral","src":"9483:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"9486:4:21","nodeType":"YulLiteral","src":"9486:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9476:6:21","nodeType":"YulIdentifier","src":"9476:6:21"},"nativeSrc":"9476:15:21","nodeType":"YulFunctionCall","src":"9476:15:21"},"nativeSrc":"9476:15:21","nodeType":"YulExpressionStatement","src":"9476:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"9289:18:21","nodeType":"YulIdentifier","src":"9289:18:21"},{"arguments":[{"name":"length","nativeSrc":"9312:6:21","nodeType":"YulIdentifier","src":"9312:6:21"},{"kind":"number","nativeSrc":"9320:2:21","nodeType":"YulLiteral","src":"9320:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"9309:2:21","nodeType":"YulIdentifier","src":"9309:2:21"},"nativeSrc":"9309:14:21","nodeType":"YulFunctionCall","src":"9309:14:21"}],"functionName":{"name":"eq","nativeSrc":"9286:2:21","nodeType":"YulIdentifier","src":"9286:2:21"},"nativeSrc":"9286:38:21","nodeType":"YulFunctionCall","src":"9286:38:21"},"nativeSrc":"9283:218:21","nodeType":"YulIf","src":"9283:218:21"}]},"name":"extract_byte_array_length","nativeSrc":"9070:437:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"9105:4:21","nodeType":"YulTypedName","src":"9105:4:21","type":""}],"returnVariables":[{"name":"length","nativeSrc":"9114:6:21","nodeType":"YulTypedName","src":"9114:6:21","type":""}],"src":"9070:437:21"},{"body":{"nativeSrc":"9593:170:21","nodeType":"YulBlock","src":"9593:170:21","statements":[{"body":{"nativeSrc":"9639:16:21","nodeType":"YulBlock","src":"9639:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9648:1:21","nodeType":"YulLiteral","src":"9648:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"9651:1:21","nodeType":"YulLiteral","src":"9651:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9641:6:21","nodeType":"YulIdentifier","src":"9641:6:21"},"nativeSrc":"9641:12:21","nodeType":"YulFunctionCall","src":"9641:12:21"},"nativeSrc":"9641:12:21","nodeType":"YulExpressionStatement","src":"9641:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9614:7:21","nodeType":"YulIdentifier","src":"9614:7:21"},{"name":"headStart","nativeSrc":"9623:9:21","nodeType":"YulIdentifier","src":"9623:9:21"}],"functionName":{"name":"sub","nativeSrc":"9610:3:21","nodeType":"YulIdentifier","src":"9610:3:21"},"nativeSrc":"9610:23:21","nodeType":"YulFunctionCall","src":"9610:23:21"},{"kind":"number","nativeSrc":"9635:2:21","nodeType":"YulLiteral","src":"9635:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"9606:3:21","nodeType":"YulIdentifier","src":"9606:3:21"},"nativeSrc":"9606:32:21","nodeType":"YulFunctionCall","src":"9606:32:21"},"nativeSrc":"9603:52:21","nodeType":"YulIf","src":"9603:52:21"},{"nativeSrc":"9664:29:21","nodeType":"YulVariableDeclaration","src":"9664:29:21","value":{"arguments":[{"name":"headStart","nativeSrc":"9683:9:21","nodeType":"YulIdentifier","src":"9683:9:21"}],"functionName":{"name":"mload","nativeSrc":"9677:5:21","nodeType":"YulIdentifier","src":"9677:5:21"},"nativeSrc":"9677:16:21","nodeType":"YulFunctionCall","src":"9677:16:21"},"variables":[{"name":"value","nativeSrc":"9668:5:21","nodeType":"YulTypedName","src":"9668:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9727:5:21","nodeType":"YulIdentifier","src":"9727:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"9702:24:21","nodeType":"YulIdentifier","src":"9702:24:21"},"nativeSrc":"9702:31:21","nodeType":"YulFunctionCall","src":"9702:31:21"},"nativeSrc":"9702:31:21","nodeType":"YulExpressionStatement","src":"9702:31:21"},{"nativeSrc":"9742:15:21","nodeType":"YulAssignment","src":"9742:15:21","value":{"name":"value","nativeSrc":"9752:5:21","nodeType":"YulIdentifier","src":"9752:5:21"},"variableNames":[{"name":"value0","nativeSrc":"9742:6:21","nodeType":"YulIdentifier","src":"9742:6:21"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"9512:251:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9559:9:21","nodeType":"YulTypedName","src":"9559:9:21","type":""},{"name":"dataEnd","nativeSrc":"9570:7:21","nodeType":"YulTypedName","src":"9570:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9582:6:21","nodeType":"YulTypedName","src":"9582:6:21","type":""}],"src":"9512:251:21"},{"body":{"nativeSrc":"9942:164:21","nodeType":"YulBlock","src":"9942:164:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9959:9:21","nodeType":"YulIdentifier","src":"9959:9:21"},{"kind":"number","nativeSrc":"9970:2:21","nodeType":"YulLiteral","src":"9970:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9952:6:21","nodeType":"YulIdentifier","src":"9952:6:21"},"nativeSrc":"9952:21:21","nodeType":"YulFunctionCall","src":"9952:21:21"},"nativeSrc":"9952:21:21","nodeType":"YulExpressionStatement","src":"9952:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9993:9:21","nodeType":"YulIdentifier","src":"9993:9:21"},{"kind":"number","nativeSrc":"10004:2:21","nodeType":"YulLiteral","src":"10004:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9989:3:21","nodeType":"YulIdentifier","src":"9989:3:21"},"nativeSrc":"9989:18:21","nodeType":"YulFunctionCall","src":"9989:18:21"},{"kind":"number","nativeSrc":"10009:2:21","nodeType":"YulLiteral","src":"10009:2:21","type":"","value":"14"}],"functionName":{"name":"mstore","nativeSrc":"9982:6:21","nodeType":"YulIdentifier","src":"9982:6:21"},"nativeSrc":"9982:30:21","nodeType":"YulFunctionCall","src":"9982:30:21"},"nativeSrc":"9982:30:21","nodeType":"YulExpressionStatement","src":"9982:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10032:9:21","nodeType":"YulIdentifier","src":"10032:9:21"},{"kind":"number","nativeSrc":"10043:2:21","nodeType":"YulLiteral","src":"10043:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10028:3:21","nodeType":"YulIdentifier","src":"10028:3:21"},"nativeSrc":"10028:18:21","nodeType":"YulFunctionCall","src":"10028:18:21"},{"hexValue":"4f6e6c7920506572697068657279","kind":"string","nativeSrc":"10048:16:21","nodeType":"YulLiteral","src":"10048:16:21","type":"","value":"Only Periphery"}],"functionName":{"name":"mstore","nativeSrc":"10021:6:21","nodeType":"YulIdentifier","src":"10021:6:21"},"nativeSrc":"10021:44:21","nodeType":"YulFunctionCall","src":"10021:44:21"},"nativeSrc":"10021:44:21","nodeType":"YulExpressionStatement","src":"10021:44:21"},{"nativeSrc":"10074:26:21","nodeType":"YulAssignment","src":"10074:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"10086:9:21","nodeType":"YulIdentifier","src":"10086:9:21"},{"kind":"number","nativeSrc":"10097:2:21","nodeType":"YulLiteral","src":"10097:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10082:3:21","nodeType":"YulIdentifier","src":"10082:3:21"},"nativeSrc":"10082:18:21","nodeType":"YulFunctionCall","src":"10082:18:21"},"variableNames":[{"name":"tail","nativeSrc":"10074:4:21","nodeType":"YulIdentifier","src":"10074:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_e84ca658204d8225a6124393bf429fae79ddb71fa88578d833d3a2b9b5da52d2__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9768:338:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9919:9:21","nodeType":"YulTypedName","src":"9919:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9933:4:21","nodeType":"YulTypedName","src":"9933:4:21","type":""}],"src":"9768:338:21"},{"body":{"nativeSrc":"10285:170:21","nodeType":"YulBlock","src":"10285:170:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10302:9:21","nodeType":"YulIdentifier","src":"10302:9:21"},{"kind":"number","nativeSrc":"10313:2:21","nodeType":"YulLiteral","src":"10313:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"10295:6:21","nodeType":"YulIdentifier","src":"10295:6:21"},"nativeSrc":"10295:21:21","nodeType":"YulFunctionCall","src":"10295:21:21"},"nativeSrc":"10295:21:21","nodeType":"YulExpressionStatement","src":"10295:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10336:9:21","nodeType":"YulIdentifier","src":"10336:9:21"},{"kind":"number","nativeSrc":"10347:2:21","nodeType":"YulLiteral","src":"10347:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10332:3:21","nodeType":"YulIdentifier","src":"10332:3:21"},"nativeSrc":"10332:18:21","nodeType":"YulFunctionCall","src":"10332:18:21"},{"kind":"number","nativeSrc":"10352:2:21","nodeType":"YulLiteral","src":"10352:2:21","type":"","value":"20"}],"functionName":{"name":"mstore","nativeSrc":"10325:6:21","nodeType":"YulIdentifier","src":"10325:6:21"},"nativeSrc":"10325:30:21","nodeType":"YulFunctionCall","src":"10325:30:21"},"nativeSrc":"10325:30:21","nodeType":"YulExpressionStatement","src":"10325:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10375:9:21","nodeType":"YulIdentifier","src":"10375:9:21"},{"kind":"number","nativeSrc":"10386:2:21","nodeType":"YulLiteral","src":"10386:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10371:3:21","nodeType":"YulIdentifier","src":"10371:3:21"},"nativeSrc":"10371:18:21","nodeType":"YulFunctionCall","src":"10371:18:21"},{"hexValue":"526562616c616e6365206e6f74206e6565646564","kind":"string","nativeSrc":"10391:22:21","nodeType":"YulLiteral","src":"10391:22:21","type":"","value":"Rebalance not needed"}],"functionName":{"name":"mstore","nativeSrc":"10364:6:21","nodeType":"YulIdentifier","src":"10364:6:21"},"nativeSrc":"10364:50:21","nodeType":"YulFunctionCall","src":"10364:50:21"},"nativeSrc":"10364:50:21","nodeType":"YulExpressionStatement","src":"10364:50:21"},{"nativeSrc":"10423:26:21","nodeType":"YulAssignment","src":"10423:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"10435:9:21","nodeType":"YulIdentifier","src":"10435:9:21"},{"kind":"number","nativeSrc":"10446:2:21","nodeType":"YulLiteral","src":"10446:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10431:3:21","nodeType":"YulIdentifier","src":"10431:3:21"},"nativeSrc":"10431:18:21","nodeType":"YulFunctionCall","src":"10431:18:21"},"variableNames":[{"name":"tail","nativeSrc":"10423:4:21","nodeType":"YulIdentifier","src":"10423:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10111:344:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10262:9:21","nodeType":"YulTypedName","src":"10262:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10276:4:21","nodeType":"YulTypedName","src":"10276:4:21","type":""}],"src":"10111:344:21"},{"body":{"nativeSrc":"10492:152:21","nodeType":"YulBlock","src":"10492:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10509:1:21","nodeType":"YulLiteral","src":"10509:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"10512:77:21","nodeType":"YulLiteral","src":"10512:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"10502:6:21","nodeType":"YulIdentifier","src":"10502:6:21"},"nativeSrc":"10502:88:21","nodeType":"YulFunctionCall","src":"10502:88:21"},"nativeSrc":"10502:88:21","nodeType":"YulExpressionStatement","src":"10502:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10606:1:21","nodeType":"YulLiteral","src":"10606:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"10609:4:21","nodeType":"YulLiteral","src":"10609:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"10599:6:21","nodeType":"YulIdentifier","src":"10599:6:21"},"nativeSrc":"10599:15:21","nodeType":"YulFunctionCall","src":"10599:15:21"},"nativeSrc":"10599:15:21","nodeType":"YulExpressionStatement","src":"10599:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10630:1:21","nodeType":"YulLiteral","src":"10630:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"10633:4:21","nodeType":"YulLiteral","src":"10633:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10623:6:21","nodeType":"YulIdentifier","src":"10623:6:21"},"nativeSrc":"10623:15:21","nodeType":"YulFunctionCall","src":"10623:15:21"},"nativeSrc":"10623:15:21","nodeType":"YulExpressionStatement","src":"10623:15:21"}]},"name":"panic_error_0x11","nativeSrc":"10460:184:21","nodeType":"YulFunctionDefinition","src":"10460:184:21"},{"body":{"nativeSrc":"10701:116:21","nodeType":"YulBlock","src":"10701:116:21","statements":[{"nativeSrc":"10711:20:21","nodeType":"YulAssignment","src":"10711:20:21","value":{"arguments":[{"name":"x","nativeSrc":"10726:1:21","nodeType":"YulIdentifier","src":"10726:1:21"},{"name":"y","nativeSrc":"10729:1:21","nodeType":"YulIdentifier","src":"10729:1:21"}],"functionName":{"name":"mul","nativeSrc":"10722:3:21","nodeType":"YulIdentifier","src":"10722:3:21"},"nativeSrc":"10722:9:21","nodeType":"YulFunctionCall","src":"10722:9:21"},"variableNames":[{"name":"product","nativeSrc":"10711:7:21","nodeType":"YulIdentifier","src":"10711:7:21"}]},{"body":{"nativeSrc":"10789:22:21","nodeType":"YulBlock","src":"10789:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10791:16:21","nodeType":"YulIdentifier","src":"10791:16:21"},"nativeSrc":"10791:18:21","nodeType":"YulFunctionCall","src":"10791:18:21"},"nativeSrc":"10791:18:21","nodeType":"YulExpressionStatement","src":"10791:18:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"10760:1:21","nodeType":"YulIdentifier","src":"10760:1:21"}],"functionName":{"name":"iszero","nativeSrc":"10753:6:21","nodeType":"YulIdentifier","src":"10753:6:21"},"nativeSrc":"10753:9:21","nodeType":"YulFunctionCall","src":"10753:9:21"},{"arguments":[{"name":"y","nativeSrc":"10767:1:21","nodeType":"YulIdentifier","src":"10767:1:21"},{"arguments":[{"name":"product","nativeSrc":"10774:7:21","nodeType":"YulIdentifier","src":"10774:7:21"},{"name":"x","nativeSrc":"10783:1:21","nodeType":"YulIdentifier","src":"10783:1:21"}],"functionName":{"name":"div","nativeSrc":"10770:3:21","nodeType":"YulIdentifier","src":"10770:3:21"},"nativeSrc":"10770:15:21","nodeType":"YulFunctionCall","src":"10770:15:21"}],"functionName":{"name":"eq","nativeSrc":"10764:2:21","nodeType":"YulIdentifier","src":"10764:2:21"},"nativeSrc":"10764:22:21","nodeType":"YulFunctionCall","src":"10764:22:21"}],"functionName":{"name":"or","nativeSrc":"10750:2:21","nodeType":"YulIdentifier","src":"10750:2:21"},"nativeSrc":"10750:37:21","nodeType":"YulFunctionCall","src":"10750:37:21"}],"functionName":{"name":"iszero","nativeSrc":"10743:6:21","nodeType":"YulIdentifier","src":"10743:6:21"},"nativeSrc":"10743:45:21","nodeType":"YulFunctionCall","src":"10743:45:21"},"nativeSrc":"10740:71:21","nodeType":"YulIf","src":"10740:71:21"}]},"name":"checked_mul_t_uint256","nativeSrc":"10649:168:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"10680:1:21","nodeType":"YulTypedName","src":"10680:1:21","type":""},{"name":"y","nativeSrc":"10683:1:21","nodeType":"YulTypedName","src":"10683:1:21","type":""}],"returnVariables":[{"name":"product","nativeSrc":"10689:7:21","nodeType":"YulTypedName","src":"10689:7:21","type":""}],"src":"10649:168:21"},{"body":{"nativeSrc":"10854:152:21","nodeType":"YulBlock","src":"10854:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10871:1:21","nodeType":"YulLiteral","src":"10871:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"10874:77:21","nodeType":"YulLiteral","src":"10874:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"10864:6:21","nodeType":"YulIdentifier","src":"10864:6:21"},"nativeSrc":"10864:88:21","nodeType":"YulFunctionCall","src":"10864:88:21"},"nativeSrc":"10864:88:21","nodeType":"YulExpressionStatement","src":"10864:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10968:1:21","nodeType":"YulLiteral","src":"10968:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"10971:4:21","nodeType":"YulLiteral","src":"10971:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"10961:6:21","nodeType":"YulIdentifier","src":"10961:6:21"},"nativeSrc":"10961:15:21","nodeType":"YulFunctionCall","src":"10961:15:21"},"nativeSrc":"10961:15:21","nodeType":"YulExpressionStatement","src":"10961:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10992:1:21","nodeType":"YulLiteral","src":"10992:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"10995:4:21","nodeType":"YulLiteral","src":"10995:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10985:6:21","nodeType":"YulIdentifier","src":"10985:6:21"},"nativeSrc":"10985:15:21","nodeType":"YulFunctionCall","src":"10985:15:21"},"nativeSrc":"10985:15:21","nodeType":"YulExpressionStatement","src":"10985:15:21"}]},"name":"panic_error_0x32","nativeSrc":"10822:184:21","nodeType":"YulFunctionDefinition","src":"10822:184:21"},{"body":{"nativeSrc":"11117:775:21","nodeType":"YulBlock","src":"11117:775:21","statements":[{"nativeSrc":"11127:12:21","nodeType":"YulVariableDeclaration","src":"11127:12:21","value":{"kind":"number","nativeSrc":"11137:2:21","nodeType":"YulLiteral","src":"11137:2:21","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"11131:2:21","nodeType":"YulTypedName","src":"11131:2:21","type":""}]},{"body":{"nativeSrc":"11184:16:21","nodeType":"YulBlock","src":"11184:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11193:1:21","nodeType":"YulLiteral","src":"11193:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"11196:1:21","nodeType":"YulLiteral","src":"11196:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11186:6:21","nodeType":"YulIdentifier","src":"11186:6:21"},"nativeSrc":"11186:12:21","nodeType":"YulFunctionCall","src":"11186:12:21"},"nativeSrc":"11186:12:21","nodeType":"YulExpressionStatement","src":"11186:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11159:7:21","nodeType":"YulIdentifier","src":"11159:7:21"},{"name":"headStart","nativeSrc":"11168:9:21","nodeType":"YulIdentifier","src":"11168:9:21"}],"functionName":{"name":"sub","nativeSrc":"11155:3:21","nodeType":"YulIdentifier","src":"11155:3:21"},"nativeSrc":"11155:23:21","nodeType":"YulFunctionCall","src":"11155:23:21"},{"name":"_1","nativeSrc":"11180:2:21","nodeType":"YulIdentifier","src":"11180:2:21"}],"functionName":{"name":"slt","nativeSrc":"11151:3:21","nodeType":"YulIdentifier","src":"11151:3:21"},"nativeSrc":"11151:32:21","nodeType":"YulFunctionCall","src":"11151:32:21"},"nativeSrc":"11148:52:21","nodeType":"YulIf","src":"11148:52:21"},{"nativeSrc":"11209:30:21","nodeType":"YulVariableDeclaration","src":"11209:30:21","value":{"arguments":[{"name":"headStart","nativeSrc":"11229:9:21","nodeType":"YulIdentifier","src":"11229:9:21"}],"functionName":{"name":"mload","nativeSrc":"11223:5:21","nodeType":"YulIdentifier","src":"11223:5:21"},"nativeSrc":"11223:16:21","nodeType":"YulFunctionCall","src":"11223:16:21"},"variables":[{"name":"offset","nativeSrc":"11213:6:21","nodeType":"YulTypedName","src":"11213:6:21","type":""}]},{"body":{"nativeSrc":"11282:16:21","nodeType":"YulBlock","src":"11282:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11291:1:21","nodeType":"YulLiteral","src":"11291:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"11294:1:21","nodeType":"YulLiteral","src":"11294:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11284:6:21","nodeType":"YulIdentifier","src":"11284:6:21"},"nativeSrc":"11284:12:21","nodeType":"YulFunctionCall","src":"11284:12:21"},"nativeSrc":"11284:12:21","nodeType":"YulExpressionStatement","src":"11284:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"11254:6:21","nodeType":"YulIdentifier","src":"11254:6:21"},{"kind":"number","nativeSrc":"11262:18:21","nodeType":"YulLiteral","src":"11262:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"11251:2:21","nodeType":"YulIdentifier","src":"11251:2:21"},"nativeSrc":"11251:30:21","nodeType":"YulFunctionCall","src":"11251:30:21"},"nativeSrc":"11248:50:21","nodeType":"YulIf","src":"11248:50:21"},{"nativeSrc":"11307:32:21","nodeType":"YulVariableDeclaration","src":"11307:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"11321:9:21","nodeType":"YulIdentifier","src":"11321:9:21"},{"name":"offset","nativeSrc":"11332:6:21","nodeType":"YulIdentifier","src":"11332:6:21"}],"functionName":{"name":"add","nativeSrc":"11317:3:21","nodeType":"YulIdentifier","src":"11317:3:21"},"nativeSrc":"11317:22:21","nodeType":"YulFunctionCall","src":"11317:22:21"},"variables":[{"name":"_2","nativeSrc":"11311:2:21","nodeType":"YulTypedName","src":"11311:2:21","type":""}]},{"body":{"nativeSrc":"11387:16:21","nodeType":"YulBlock","src":"11387:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11396:1:21","nodeType":"YulLiteral","src":"11396:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"11399:1:21","nodeType":"YulLiteral","src":"11399:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11389:6:21","nodeType":"YulIdentifier","src":"11389:6:21"},"nativeSrc":"11389:12:21","nodeType":"YulFunctionCall","src":"11389:12:21"},"nativeSrc":"11389:12:21","nodeType":"YulExpressionStatement","src":"11389:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"11366:2:21","nodeType":"YulIdentifier","src":"11366:2:21"},{"kind":"number","nativeSrc":"11370:4:21","nodeType":"YulLiteral","src":"11370:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"11362:3:21","nodeType":"YulIdentifier","src":"11362:3:21"},"nativeSrc":"11362:13:21","nodeType":"YulFunctionCall","src":"11362:13:21"},{"name":"dataEnd","nativeSrc":"11377:7:21","nodeType":"YulIdentifier","src":"11377:7:21"}],"functionName":{"name":"slt","nativeSrc":"11358:3:21","nodeType":"YulIdentifier","src":"11358:3:21"},"nativeSrc":"11358:27:21","nodeType":"YulFunctionCall","src":"11358:27:21"}],"functionName":{"name":"iszero","nativeSrc":"11351:6:21","nodeType":"YulIdentifier","src":"11351:6:21"},"nativeSrc":"11351:35:21","nodeType":"YulFunctionCall","src":"11351:35:21"},"nativeSrc":"11348:55:21","nodeType":"YulIf","src":"11348:55:21"},{"nativeSrc":"11412:19:21","nodeType":"YulVariableDeclaration","src":"11412:19:21","value":{"arguments":[{"name":"_2","nativeSrc":"11428:2:21","nodeType":"YulIdentifier","src":"11428:2:21"}],"functionName":{"name":"mload","nativeSrc":"11422:5:21","nodeType":"YulIdentifier","src":"11422:5:21"},"nativeSrc":"11422:9:21","nodeType":"YulFunctionCall","src":"11422:9:21"},"variables":[{"name":"_3","nativeSrc":"11416:2:21","nodeType":"YulTypedName","src":"11416:2:21","type":""}]},{"nativeSrc":"11440:71:21","nodeType":"YulVariableDeclaration","src":"11440:71:21","value":{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"11507:2:21","nodeType":"YulIdentifier","src":"11507:2:21"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nativeSrc":"11467:39:21","nodeType":"YulIdentifier","src":"11467:39:21"},"nativeSrc":"11467:43:21","nodeType":"YulFunctionCall","src":"11467:43:21"}],"functionName":{"name":"allocate_memory","nativeSrc":"11451:15:21","nodeType":"YulIdentifier","src":"11451:15:21"},"nativeSrc":"11451:60:21","nodeType":"YulFunctionCall","src":"11451:60:21"},"variables":[{"name":"dst","nativeSrc":"11444:3:21","nodeType":"YulTypedName","src":"11444:3:21","type":""}]},{"nativeSrc":"11520:16:21","nodeType":"YulVariableDeclaration","src":"11520:16:21","value":{"name":"dst","nativeSrc":"11533:3:21","nodeType":"YulIdentifier","src":"11533:3:21"},"variables":[{"name":"dst_1","nativeSrc":"11524:5:21","nodeType":"YulTypedName","src":"11524:5:21","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"11552:3:21","nodeType":"YulIdentifier","src":"11552:3:21"},{"name":"_3","nativeSrc":"11557:2:21","nodeType":"YulIdentifier","src":"11557:2:21"}],"functionName":{"name":"mstore","nativeSrc":"11545:6:21","nodeType":"YulIdentifier","src":"11545:6:21"},"nativeSrc":"11545:15:21","nodeType":"YulFunctionCall","src":"11545:15:21"},"nativeSrc":"11545:15:21","nodeType":"YulExpressionStatement","src":"11545:15:21"},{"nativeSrc":"11569:19:21","nodeType":"YulAssignment","src":"11569:19:21","value":{"arguments":[{"name":"dst","nativeSrc":"11580:3:21","nodeType":"YulIdentifier","src":"11580:3:21"},{"name":"_1","nativeSrc":"11585:2:21","nodeType":"YulIdentifier","src":"11585:2:21"}],"functionName":{"name":"add","nativeSrc":"11576:3:21","nodeType":"YulIdentifier","src":"11576:3:21"},"nativeSrc":"11576:12:21","nodeType":"YulFunctionCall","src":"11576:12:21"},"variableNames":[{"name":"dst","nativeSrc":"11569:3:21","nodeType":"YulIdentifier","src":"11569:3:21"}]},{"nativeSrc":"11597:42:21","nodeType":"YulVariableDeclaration","src":"11597:42:21","value":{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"11619:2:21","nodeType":"YulIdentifier","src":"11619:2:21"},{"arguments":[{"kind":"number","nativeSrc":"11627:1:21","nodeType":"YulLiteral","src":"11627:1:21","type":"","value":"5"},{"name":"_3","nativeSrc":"11630:2:21","nodeType":"YulIdentifier","src":"11630:2:21"}],"functionName":{"name":"shl","nativeSrc":"11623:3:21","nodeType":"YulIdentifier","src":"11623:3:21"},"nativeSrc":"11623:10:21","nodeType":"YulFunctionCall","src":"11623:10:21"}],"functionName":{"name":"add","nativeSrc":"11615:3:21","nodeType":"YulIdentifier","src":"11615:3:21"},"nativeSrc":"11615:19:21","nodeType":"YulFunctionCall","src":"11615:19:21"},{"name":"_1","nativeSrc":"11636:2:21","nodeType":"YulIdentifier","src":"11636:2:21"}],"functionName":{"name":"add","nativeSrc":"11611:3:21","nodeType":"YulIdentifier","src":"11611:3:21"},"nativeSrc":"11611:28:21","nodeType":"YulFunctionCall","src":"11611:28:21"},"variables":[{"name":"srcEnd","nativeSrc":"11601:6:21","nodeType":"YulTypedName","src":"11601:6:21","type":""}]},{"body":{"nativeSrc":"11671:16:21","nodeType":"YulBlock","src":"11671:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11680:1:21","nodeType":"YulLiteral","src":"11680:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"11683:1:21","nodeType":"YulLiteral","src":"11683:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11673:6:21","nodeType":"YulIdentifier","src":"11673:6:21"},"nativeSrc":"11673:12:21","nodeType":"YulFunctionCall","src":"11673:12:21"},"nativeSrc":"11673:12:21","nodeType":"YulExpressionStatement","src":"11673:12:21"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"11654:6:21","nodeType":"YulIdentifier","src":"11654:6:21"},{"name":"dataEnd","nativeSrc":"11662:7:21","nodeType":"YulIdentifier","src":"11662:7:21"}],"functionName":{"name":"gt","nativeSrc":"11651:2:21","nodeType":"YulIdentifier","src":"11651:2:21"},"nativeSrc":"11651:19:21","nodeType":"YulFunctionCall","src":"11651:19:21"},"nativeSrc":"11648:39:21","nodeType":"YulIf","src":"11648:39:21"},{"nativeSrc":"11696:22:21","nodeType":"YulVariableDeclaration","src":"11696:22:21","value":{"arguments":[{"name":"_2","nativeSrc":"11711:2:21","nodeType":"YulIdentifier","src":"11711:2:21"},{"name":"_1","nativeSrc":"11715:2:21","nodeType":"YulIdentifier","src":"11715:2:21"}],"functionName":{"name":"add","nativeSrc":"11707:3:21","nodeType":"YulIdentifier","src":"11707:3:21"},"nativeSrc":"11707:11:21","nodeType":"YulFunctionCall","src":"11707:11:21"},"variables":[{"name":"src","nativeSrc":"11700:3:21","nodeType":"YulTypedName","src":"11700:3:21","type":""}]},{"body":{"nativeSrc":"11783:79:21","nodeType":"YulBlock","src":"11783:79:21","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"11804:3:21","nodeType":"YulIdentifier","src":"11804:3:21"},{"arguments":[{"name":"src","nativeSrc":"11815:3:21","nodeType":"YulIdentifier","src":"11815:3:21"}],"functionName":{"name":"mload","nativeSrc":"11809:5:21","nodeType":"YulIdentifier","src":"11809:5:21"},"nativeSrc":"11809:10:21","nodeType":"YulFunctionCall","src":"11809:10:21"}],"functionName":{"name":"mstore","nativeSrc":"11797:6:21","nodeType":"YulIdentifier","src":"11797:6:21"},"nativeSrc":"11797:23:21","nodeType":"YulFunctionCall","src":"11797:23:21"},"nativeSrc":"11797:23:21","nodeType":"YulExpressionStatement","src":"11797:23:21"},{"nativeSrc":"11833:19:21","nodeType":"YulAssignment","src":"11833:19:21","value":{"arguments":[{"name":"dst","nativeSrc":"11844:3:21","nodeType":"YulIdentifier","src":"11844:3:21"},{"name":"_1","nativeSrc":"11849:2:21","nodeType":"YulIdentifier","src":"11849:2:21"}],"functionName":{"name":"add","nativeSrc":"11840:3:21","nodeType":"YulIdentifier","src":"11840:3:21"},"nativeSrc":"11840:12:21","nodeType":"YulFunctionCall","src":"11840:12:21"},"variableNames":[{"name":"dst","nativeSrc":"11833:3:21","nodeType":"YulIdentifier","src":"11833:3:21"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"11738:3:21","nodeType":"YulIdentifier","src":"11738:3:21"},{"name":"srcEnd","nativeSrc":"11743:6:21","nodeType":"YulIdentifier","src":"11743:6:21"}],"functionName":{"name":"lt","nativeSrc":"11735:2:21","nodeType":"YulIdentifier","src":"11735:2:21"},"nativeSrc":"11735:15:21","nodeType":"YulFunctionCall","src":"11735:15:21"},"nativeSrc":"11727:135:21","nodeType":"YulForLoop","post":{"nativeSrc":"11751:23:21","nodeType":"YulBlock","src":"11751:23:21","statements":[{"nativeSrc":"11753:19:21","nodeType":"YulAssignment","src":"11753:19:21","value":{"arguments":[{"name":"src","nativeSrc":"11764:3:21","nodeType":"YulIdentifier","src":"11764:3:21"},{"name":"_1","nativeSrc":"11769:2:21","nodeType":"YulIdentifier","src":"11769:2:21"}],"functionName":{"name":"add","nativeSrc":"11760:3:21","nodeType":"YulIdentifier","src":"11760:3:21"},"nativeSrc":"11760:12:21","nodeType":"YulFunctionCall","src":"11760:12:21"},"variableNames":[{"name":"src","nativeSrc":"11753:3:21","nodeType":"YulIdentifier","src":"11753:3:21"}]}]},"pre":{"nativeSrc":"11731:3:21","nodeType":"YulBlock","src":"11731:3:21","statements":[]},"src":"11727:135:21"},{"nativeSrc":"11871:15:21","nodeType":"YulAssignment","src":"11871:15:21","value":{"name":"dst_1","nativeSrc":"11881:5:21","nodeType":"YulIdentifier","src":"11881:5:21"},"variableNames":[{"name":"value0","nativeSrc":"11871:6:21","nodeType":"YulIdentifier","src":"11871:6:21"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nativeSrc":"11011:881:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11083:9:21","nodeType":"YulTypedName","src":"11083:9:21","type":""},{"name":"dataEnd","nativeSrc":"11094:7:21","nodeType":"YulTypedName","src":"11094:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11106:6:21","nodeType":"YulTypedName","src":"11106:6:21","type":""}],"src":"11011:881:21"},{"body":{"nativeSrc":"12071:172:21","nodeType":"YulBlock","src":"12071:172:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12088:9:21","nodeType":"YulIdentifier","src":"12088:9:21"},{"kind":"number","nativeSrc":"12099:2:21","nodeType":"YulLiteral","src":"12099:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"12081:6:21","nodeType":"YulIdentifier","src":"12081:6:21"},"nativeSrc":"12081:21:21","nodeType":"YulFunctionCall","src":"12081:21:21"},"nativeSrc":"12081:21:21","nodeType":"YulExpressionStatement","src":"12081:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12122:9:21","nodeType":"YulIdentifier","src":"12122:9:21"},{"kind":"number","nativeSrc":"12133:2:21","nodeType":"YulLiteral","src":"12133:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12118:3:21","nodeType":"YulIdentifier","src":"12118:3:21"},"nativeSrc":"12118:18:21","nodeType":"YulFunctionCall","src":"12118:18:21"},{"kind":"number","nativeSrc":"12138:2:21","nodeType":"YulLiteral","src":"12138:2:21","type":"","value":"22"}],"functionName":{"name":"mstore","nativeSrc":"12111:6:21","nodeType":"YulIdentifier","src":"12111:6:21"},"nativeSrc":"12111:30:21","nodeType":"YulFunctionCall","src":"12111:30:21"},"nativeSrc":"12111:30:21","nodeType":"YulExpressionStatement","src":"12111:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12161:9:21","nodeType":"YulIdentifier","src":"12161:9:21"},{"kind":"number","nativeSrc":"12172:2:21","nodeType":"YulLiteral","src":"12172:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12157:3:21","nodeType":"YulIdentifier","src":"12157:3:21"},"nativeSrc":"12157:18:21","nodeType":"YulFunctionCall","src":"12157:18:21"},{"hexValue":"496e76616c6964206f7261636c652061646472657373","kind":"string","nativeSrc":"12177:24:21","nodeType":"YulLiteral","src":"12177:24:21","type":"","value":"Invalid oracle address"}],"functionName":{"name":"mstore","nativeSrc":"12150:6:21","nodeType":"YulIdentifier","src":"12150:6:21"},"nativeSrc":"12150:52:21","nodeType":"YulFunctionCall","src":"12150:52:21"},"nativeSrc":"12150:52:21","nodeType":"YulExpressionStatement","src":"12150:52:21"},{"nativeSrc":"12211:26:21","nodeType":"YulAssignment","src":"12211:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"12223:9:21","nodeType":"YulIdentifier","src":"12223:9:21"},{"kind":"number","nativeSrc":"12234:2:21","nodeType":"YulLiteral","src":"12234:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12219:3:21","nodeType":"YulIdentifier","src":"12219:3:21"},"nativeSrc":"12219:18:21","nodeType":"YulFunctionCall","src":"12219:18:21"},"variableNames":[{"name":"tail","nativeSrc":"12211:4:21","nodeType":"YulIdentifier","src":"12211:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11897:346:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12048:9:21","nodeType":"YulTypedName","src":"12048:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12062:4:21","nodeType":"YulTypedName","src":"12062:4:21","type":""}],"src":"11897:346:21"},{"body":{"nativeSrc":"12405:241:21","nodeType":"YulBlock","src":"12405:241:21","statements":[{"nativeSrc":"12415:26:21","nodeType":"YulAssignment","src":"12415:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"12427:9:21","nodeType":"YulIdentifier","src":"12427:9:21"},{"kind":"number","nativeSrc":"12438:2:21","nodeType":"YulLiteral","src":"12438:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12423:3:21","nodeType":"YulIdentifier","src":"12423:3:21"},"nativeSrc":"12423:18:21","nodeType":"YulFunctionCall","src":"12423:18:21"},"variableNames":[{"name":"tail","nativeSrc":"12415:4:21","nodeType":"YulIdentifier","src":"12415:4:21"}]},{"nativeSrc":"12450:52:21","nodeType":"YulVariableDeclaration","src":"12450:52:21","value":{"kind":"number","nativeSrc":"12460:42:21","nodeType":"YulLiteral","src":"12460:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"12454:2:21","nodeType":"YulTypedName","src":"12454:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12518:9:21","nodeType":"YulIdentifier","src":"12518:9:21"},{"arguments":[{"name":"value0","nativeSrc":"12533:6:21","nodeType":"YulIdentifier","src":"12533:6:21"},{"name":"_1","nativeSrc":"12541:2:21","nodeType":"YulIdentifier","src":"12541:2:21"}],"functionName":{"name":"and","nativeSrc":"12529:3:21","nodeType":"YulIdentifier","src":"12529:3:21"},"nativeSrc":"12529:15:21","nodeType":"YulFunctionCall","src":"12529:15:21"}],"functionName":{"name":"mstore","nativeSrc":"12511:6:21","nodeType":"YulIdentifier","src":"12511:6:21"},"nativeSrc":"12511:34:21","nodeType":"YulFunctionCall","src":"12511:34:21"},"nativeSrc":"12511:34:21","nodeType":"YulExpressionStatement","src":"12511:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12565:9:21","nodeType":"YulIdentifier","src":"12565:9:21"},{"kind":"number","nativeSrc":"12576:2:21","nodeType":"YulLiteral","src":"12576:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12561:3:21","nodeType":"YulIdentifier","src":"12561:3:21"},"nativeSrc":"12561:18:21","nodeType":"YulFunctionCall","src":"12561:18:21"},{"arguments":[{"name":"value1","nativeSrc":"12585:6:21","nodeType":"YulIdentifier","src":"12585:6:21"},{"name":"_1","nativeSrc":"12593:2:21","nodeType":"YulIdentifier","src":"12593:2:21"}],"functionName":{"name":"and","nativeSrc":"12581:3:21","nodeType":"YulIdentifier","src":"12581:3:21"},"nativeSrc":"12581:15:21","nodeType":"YulFunctionCall","src":"12581:15:21"}],"functionName":{"name":"mstore","nativeSrc":"12554:6:21","nodeType":"YulIdentifier","src":"12554:6:21"},"nativeSrc":"12554:43:21","nodeType":"YulFunctionCall","src":"12554:43:21"},"nativeSrc":"12554:43:21","nodeType":"YulExpressionStatement","src":"12554:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12617:9:21","nodeType":"YulIdentifier","src":"12617:9:21"},{"kind":"number","nativeSrc":"12628:2:21","nodeType":"YulLiteral","src":"12628:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12613:3:21","nodeType":"YulIdentifier","src":"12613:3:21"},"nativeSrc":"12613:18:21","nodeType":"YulFunctionCall","src":"12613:18:21"},{"name":"value2","nativeSrc":"12633:6:21","nodeType":"YulIdentifier","src":"12633:6:21"}],"functionName":{"name":"mstore","nativeSrc":"12606:6:21","nodeType":"YulIdentifier","src":"12606:6:21"},"nativeSrc":"12606:34:21","nodeType":"YulFunctionCall","src":"12606:34:21"},"nativeSrc":"12606:34:21","nodeType":"YulExpressionStatement","src":"12606:34:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"12248:398:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12358:9:21","nodeType":"YulTypedName","src":"12358:9:21","type":""},{"name":"value2","nativeSrc":"12369:6:21","nodeType":"YulTypedName","src":"12369:6:21","type":""},{"name":"value1","nativeSrc":"12377:6:21","nodeType":"YulTypedName","src":"12377:6:21","type":""},{"name":"value0","nativeSrc":"12385:6:21","nodeType":"YulTypedName","src":"12385:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12396:4:21","nodeType":"YulTypedName","src":"12396:4:21","type":""}],"src":"12248:398:21"},{"body":{"nativeSrc":"12732:103:21","nodeType":"YulBlock","src":"12732:103:21","statements":[{"body":{"nativeSrc":"12778:16:21","nodeType":"YulBlock","src":"12778:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12787:1:21","nodeType":"YulLiteral","src":"12787:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"12790:1:21","nodeType":"YulLiteral","src":"12790:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12780:6:21","nodeType":"YulIdentifier","src":"12780:6:21"},"nativeSrc":"12780:12:21","nodeType":"YulFunctionCall","src":"12780:12:21"},"nativeSrc":"12780:12:21","nodeType":"YulExpressionStatement","src":"12780:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12753:7:21","nodeType":"YulIdentifier","src":"12753:7:21"},{"name":"headStart","nativeSrc":"12762:9:21","nodeType":"YulIdentifier","src":"12762:9:21"}],"functionName":{"name":"sub","nativeSrc":"12749:3:21","nodeType":"YulIdentifier","src":"12749:3:21"},"nativeSrc":"12749:23:21","nodeType":"YulFunctionCall","src":"12749:23:21"},{"kind":"number","nativeSrc":"12774:2:21","nodeType":"YulLiteral","src":"12774:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"12745:3:21","nodeType":"YulIdentifier","src":"12745:3:21"},"nativeSrc":"12745:32:21","nodeType":"YulFunctionCall","src":"12745:32:21"},"nativeSrc":"12742:52:21","nodeType":"YulIf","src":"12742:52:21"},{"nativeSrc":"12803:26:21","nodeType":"YulAssignment","src":"12803:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"12819:9:21","nodeType":"YulIdentifier","src":"12819:9:21"}],"functionName":{"name":"mload","nativeSrc":"12813:5:21","nodeType":"YulIdentifier","src":"12813:5:21"},"nativeSrc":"12813:16:21","nodeType":"YulFunctionCall","src":"12813:16:21"},"variableNames":[{"name":"value0","nativeSrc":"12803:6:21","nodeType":"YulIdentifier","src":"12803:6:21"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"12651:184:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12698:9:21","nodeType":"YulTypedName","src":"12698:9:21","type":""},{"name":"dataEnd","nativeSrc":"12709:7:21","nodeType":"YulTypedName","src":"12709:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12721:6:21","nodeType":"YulTypedName","src":"12721:6:21","type":""}],"src":"12651:184:21"},{"body":{"nativeSrc":"13014:176:21","nodeType":"YulBlock","src":"13014:176:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13031:9:21","nodeType":"YulIdentifier","src":"13031:9:21"},{"kind":"number","nativeSrc":"13042:2:21","nodeType":"YulLiteral","src":"13042:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"13024:6:21","nodeType":"YulIdentifier","src":"13024:6:21"},"nativeSrc":"13024:21:21","nodeType":"YulFunctionCall","src":"13024:21:21"},"nativeSrc":"13024:21:21","nodeType":"YulExpressionStatement","src":"13024:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13065:9:21","nodeType":"YulIdentifier","src":"13065:9:21"},{"kind":"number","nativeSrc":"13076:2:21","nodeType":"YulLiteral","src":"13076:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13061:3:21","nodeType":"YulIdentifier","src":"13061:3:21"},"nativeSrc":"13061:18:21","nodeType":"YulFunctionCall","src":"13061:18:21"},{"kind":"number","nativeSrc":"13081:2:21","nodeType":"YulLiteral","src":"13081:2:21","type":"","value":"26"}],"functionName":{"name":"mstore","nativeSrc":"13054:6:21","nodeType":"YulIdentifier","src":"13054:6:21"},"nativeSrc":"13054:30:21","nodeType":"YulFunctionCall","src":"13054:30:21"},"nativeSrc":"13054:30:21","nodeType":"YulExpressionStatement","src":"13054:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13104:9:21","nodeType":"YulIdentifier","src":"13104:9:21"},{"kind":"number","nativeSrc":"13115:2:21","nodeType":"YulLiteral","src":"13115:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13100:3:21","nodeType":"YulIdentifier","src":"13100:3:21"},"nativeSrc":"13100:18:21","nodeType":"YulFunctionCall","src":"13100:18:21"},{"hexValue":"43616e6e6f742073776170207468652073616d6520746f6b656e","kind":"string","nativeSrc":"13120:28:21","nodeType":"YulLiteral","src":"13120:28:21","type":"","value":"Cannot swap the same token"}],"functionName":{"name":"mstore","nativeSrc":"13093:6:21","nodeType":"YulIdentifier","src":"13093:6:21"},"nativeSrc":"13093:56:21","nodeType":"YulFunctionCall","src":"13093:56:21"},"nativeSrc":"13093:56:21","nodeType":"YulExpressionStatement","src":"13093:56:21"},{"nativeSrc":"13158:26:21","nodeType":"YulAssignment","src":"13158:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"13170:9:21","nodeType":"YulIdentifier","src":"13170:9:21"},{"kind":"number","nativeSrc":"13181:2:21","nodeType":"YulLiteral","src":"13181:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13166:3:21","nodeType":"YulIdentifier","src":"13166:3:21"},"nativeSrc":"13166:18:21","nodeType":"YulFunctionCall","src":"13166:18:21"},"variableNames":[{"name":"tail","nativeSrc":"13158:4:21","nodeType":"YulIdentifier","src":"13158:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_6f3b6914a8f4e42f0dc4d6fcf60d1470463793693c123b4b0782b9cd43668c23__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12840:350:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12991:9:21","nodeType":"YulTypedName","src":"12991:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13005:4:21","nodeType":"YulTypedName","src":"13005:4:21","type":""}],"src":"12840:350:21"},{"body":{"nativeSrc":"13369:182:21","nodeType":"YulBlock","src":"13369:182:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13386:9:21","nodeType":"YulIdentifier","src":"13386:9:21"},{"kind":"number","nativeSrc":"13397:2:21","nodeType":"YulLiteral","src":"13397:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"13379:6:21","nodeType":"YulIdentifier","src":"13379:6:21"},"nativeSrc":"13379:21:21","nodeType":"YulFunctionCall","src":"13379:21:21"},"nativeSrc":"13379:21:21","nodeType":"YulExpressionStatement","src":"13379:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13420:9:21","nodeType":"YulIdentifier","src":"13420:9:21"},{"kind":"number","nativeSrc":"13431:2:21","nodeType":"YulLiteral","src":"13431:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13416:3:21","nodeType":"YulIdentifier","src":"13416:3:21"},"nativeSrc":"13416:18:21","nodeType":"YulFunctionCall","src":"13416:18:21"},{"kind":"number","nativeSrc":"13436:2:21","nodeType":"YulLiteral","src":"13436:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"13409:6:21","nodeType":"YulIdentifier","src":"13409:6:21"},"nativeSrc":"13409:30:21","nodeType":"YulFunctionCall","src":"13409:30:21"},"nativeSrc":"13409:30:21","nodeType":"YulExpressionStatement","src":"13409:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13459:9:21","nodeType":"YulIdentifier","src":"13459:9:21"},{"kind":"number","nativeSrc":"13470:2:21","nodeType":"YulLiteral","src":"13470:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13455:3:21","nodeType":"YulIdentifier","src":"13455:3:21"},"nativeSrc":"13455:18:21","nodeType":"YulFunctionCall","src":"13455:18:21"},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","kind":"string","nativeSrc":"13475:34:21","nodeType":"YulLiteral","src":"13475:34:21","type":"","value":"Amount must be greater than zero"}],"functionName":{"name":"mstore","nativeSrc":"13448:6:21","nodeType":"YulIdentifier","src":"13448:6:21"},"nativeSrc":"13448:62:21","nodeType":"YulFunctionCall","src":"13448:62:21"},"nativeSrc":"13448:62:21","nodeType":"YulExpressionStatement","src":"13448:62:21"},{"nativeSrc":"13519:26:21","nodeType":"YulAssignment","src":"13519:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"13531:9:21","nodeType":"YulIdentifier","src":"13531:9:21"},{"kind":"number","nativeSrc":"13542:2:21","nodeType":"YulLiteral","src":"13542:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13527:3:21","nodeType":"YulIdentifier","src":"13527:3:21"},"nativeSrc":"13527:18:21","nodeType":"YulFunctionCall","src":"13527:18:21"},"variableNames":[{"name":"tail","nativeSrc":"13519:4:21","nodeType":"YulIdentifier","src":"13519:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13195:356:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13346:9:21","nodeType":"YulTypedName","src":"13346:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13360:4:21","nodeType":"YulTypedName","src":"13360:4:21","type":""}],"src":"13195:356:21"},{"body":{"nativeSrc":"13730:172:21","nodeType":"YulBlock","src":"13730:172:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13747:9:21","nodeType":"YulIdentifier","src":"13747:9:21"},{"kind":"number","nativeSrc":"13758:2:21","nodeType":"YulLiteral","src":"13758:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"13740:6:21","nodeType":"YulIdentifier","src":"13740:6:21"},"nativeSrc":"13740:21:21","nodeType":"YulFunctionCall","src":"13740:21:21"},"nativeSrc":"13740:21:21","nodeType":"YulExpressionStatement","src":"13740:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13781:9:21","nodeType":"YulIdentifier","src":"13781:9:21"},{"kind":"number","nativeSrc":"13792:2:21","nodeType":"YulLiteral","src":"13792:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13777:3:21","nodeType":"YulIdentifier","src":"13777:3:21"},"nativeSrc":"13777:18:21","nodeType":"YulFunctionCall","src":"13777:18:21"},{"kind":"number","nativeSrc":"13797:2:21","nodeType":"YulLiteral","src":"13797:2:21","type":"","value":"22"}],"functionName":{"name":"mstore","nativeSrc":"13770:6:21","nodeType":"YulIdentifier","src":"13770:6:21"},"nativeSrc":"13770:30:21","nodeType":"YulFunctionCall","src":"13770:30:21"},"nativeSrc":"13770:30:21","nodeType":"YulExpressionStatement","src":"13770:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13820:9:21","nodeType":"YulIdentifier","src":"13820:9:21"},{"kind":"number","nativeSrc":"13831:2:21","nodeType":"YulLiteral","src":"13831:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13816:3:21","nodeType":"YulIdentifier","src":"13816:3:21"},"nativeSrc":"13816:18:21","nodeType":"YulFunctionCall","src":"13816:18:21"},{"hexValue":"496e73756666696369656e74204c6971756964697479","kind":"string","nativeSrc":"13836:24:21","nodeType":"YulLiteral","src":"13836:24:21","type":"","value":"Insufficient Liquidity"}],"functionName":{"name":"mstore","nativeSrc":"13809:6:21","nodeType":"YulIdentifier","src":"13809:6:21"},"nativeSrc":"13809:52:21","nodeType":"YulFunctionCall","src":"13809:52:21"},"nativeSrc":"13809:52:21","nodeType":"YulExpressionStatement","src":"13809:52:21"},{"nativeSrc":"13870:26:21","nodeType":"YulAssignment","src":"13870:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"13882:9:21","nodeType":"YulIdentifier","src":"13882:9:21"},{"kind":"number","nativeSrc":"13893:2:21","nodeType":"YulLiteral","src":"13893:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13878:3:21","nodeType":"YulIdentifier","src":"13878:3:21"},"nativeSrc":"13878:18:21","nodeType":"YulFunctionCall","src":"13878:18:21"},"variableNames":[{"name":"tail","nativeSrc":"13870:4:21","nodeType":"YulIdentifier","src":"13870:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13556:346:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13707:9:21","nodeType":"YulTypedName","src":"13707:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13721:4:21","nodeType":"YulTypedName","src":"13721:4:21","type":""}],"src":"13556:346:21"},{"body":{"nativeSrc":"13953:228:21","nodeType":"YulBlock","src":"13953:228:21","statements":[{"body":{"nativeSrc":"13984:168:21","nodeType":"YulBlock","src":"13984:168:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14005:1:21","nodeType":"YulLiteral","src":"14005:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"14008:77:21","nodeType":"YulLiteral","src":"14008:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"13998:6:21","nodeType":"YulIdentifier","src":"13998:6:21"},"nativeSrc":"13998:88:21","nodeType":"YulFunctionCall","src":"13998:88:21"},"nativeSrc":"13998:88:21","nodeType":"YulExpressionStatement","src":"13998:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14106:1:21","nodeType":"YulLiteral","src":"14106:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"14109:4:21","nodeType":"YulLiteral","src":"14109:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"14099:6:21","nodeType":"YulIdentifier","src":"14099:6:21"},"nativeSrc":"14099:15:21","nodeType":"YulFunctionCall","src":"14099:15:21"},"nativeSrc":"14099:15:21","nodeType":"YulExpressionStatement","src":"14099:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14134:1:21","nodeType":"YulLiteral","src":"14134:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"14137:4:21","nodeType":"YulLiteral","src":"14137:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"14127:6:21","nodeType":"YulIdentifier","src":"14127:6:21"},"nativeSrc":"14127:15:21","nodeType":"YulFunctionCall","src":"14127:15:21"},"nativeSrc":"14127:15:21","nodeType":"YulExpressionStatement","src":"14127:15:21"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"13973:1:21","nodeType":"YulIdentifier","src":"13973:1:21"}],"functionName":{"name":"iszero","nativeSrc":"13966:6:21","nodeType":"YulIdentifier","src":"13966:6:21"},"nativeSrc":"13966:9:21","nodeType":"YulFunctionCall","src":"13966:9:21"},"nativeSrc":"13963:189:21","nodeType":"YulIf","src":"13963:189:21"},{"nativeSrc":"14161:14:21","nodeType":"YulAssignment","src":"14161:14:21","value":{"arguments":[{"name":"x","nativeSrc":"14170:1:21","nodeType":"YulIdentifier","src":"14170:1:21"},{"name":"y","nativeSrc":"14173:1:21","nodeType":"YulIdentifier","src":"14173:1:21"}],"functionName":{"name":"div","nativeSrc":"14166:3:21","nodeType":"YulIdentifier","src":"14166:3:21"},"nativeSrc":"14166:9:21","nodeType":"YulFunctionCall","src":"14166:9:21"},"variableNames":[{"name":"r","nativeSrc":"14161:1:21","nodeType":"YulIdentifier","src":"14161:1:21"}]}]},"name":"checked_div_t_uint256","nativeSrc":"13907:274:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13938:1:21","nodeType":"YulTypedName","src":"13938:1:21","type":""},{"name":"y","nativeSrc":"13941:1:21","nodeType":"YulTypedName","src":"13941:1:21","type":""}],"returnVariables":[{"name":"r","nativeSrc":"13947:1:21","nodeType":"YulTypedName","src":"13947:1:21","type":""}],"src":"13907:274:21"},{"body":{"nativeSrc":"14235:79:21","nodeType":"YulBlock","src":"14235:79:21","statements":[{"nativeSrc":"14245:17:21","nodeType":"YulAssignment","src":"14245:17:21","value":{"arguments":[{"name":"x","nativeSrc":"14257:1:21","nodeType":"YulIdentifier","src":"14257:1:21"},{"name":"y","nativeSrc":"14260:1:21","nodeType":"YulIdentifier","src":"14260:1:21"}],"functionName":{"name":"sub","nativeSrc":"14253:3:21","nodeType":"YulIdentifier","src":"14253:3:21"},"nativeSrc":"14253:9:21","nodeType":"YulFunctionCall","src":"14253:9:21"},"variableNames":[{"name":"diff","nativeSrc":"14245:4:21","nodeType":"YulIdentifier","src":"14245:4:21"}]},{"body":{"nativeSrc":"14286:22:21","nodeType":"YulBlock","src":"14286:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"14288:16:21","nodeType":"YulIdentifier","src":"14288:16:21"},"nativeSrc":"14288:18:21","nodeType":"YulFunctionCall","src":"14288:18:21"},"nativeSrc":"14288:18:21","nodeType":"YulExpressionStatement","src":"14288:18:21"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"14277:4:21","nodeType":"YulIdentifier","src":"14277:4:21"},{"name":"x","nativeSrc":"14283:1:21","nodeType":"YulIdentifier","src":"14283:1:21"}],"functionName":{"name":"gt","nativeSrc":"14274:2:21","nodeType":"YulIdentifier","src":"14274:2:21"},"nativeSrc":"14274:11:21","nodeType":"YulFunctionCall","src":"14274:11:21"},"nativeSrc":"14271:37:21","nodeType":"YulIf","src":"14271:37:21"}]},"name":"checked_sub_t_uint256","nativeSrc":"14186:128:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"14217:1:21","nodeType":"YulTypedName","src":"14217:1:21","type":""},{"name":"y","nativeSrc":"14220:1:21","nodeType":"YulTypedName","src":"14220:1:21","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"14226:4:21","nodeType":"YulTypedName","src":"14226:4:21","type":""}],"src":"14186:128:21"},{"body":{"nativeSrc":"14493:227:21","nodeType":"YulBlock","src":"14493:227:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14510:9:21","nodeType":"YulIdentifier","src":"14510:9:21"},{"kind":"number","nativeSrc":"14521:2:21","nodeType":"YulLiteral","src":"14521:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"14503:6:21","nodeType":"YulIdentifier","src":"14503:6:21"},"nativeSrc":"14503:21:21","nodeType":"YulFunctionCall","src":"14503:21:21"},"nativeSrc":"14503:21:21","nodeType":"YulExpressionStatement","src":"14503:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14544:9:21","nodeType":"YulIdentifier","src":"14544:9:21"},{"kind":"number","nativeSrc":"14555:2:21","nodeType":"YulLiteral","src":"14555:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14540:3:21","nodeType":"YulIdentifier","src":"14540:3:21"},"nativeSrc":"14540:18:21","nodeType":"YulFunctionCall","src":"14540:18:21"},{"kind":"number","nativeSrc":"14560:2:21","nodeType":"YulLiteral","src":"14560:2:21","type":"","value":"37"}],"functionName":{"name":"mstore","nativeSrc":"14533:6:21","nodeType":"YulIdentifier","src":"14533:6:21"},"nativeSrc":"14533:30:21","nodeType":"YulFunctionCall","src":"14533:30:21"},"nativeSrc":"14533:30:21","nodeType":"YulExpressionStatement","src":"14533:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14583:9:21","nodeType":"YulIdentifier","src":"14583:9:21"},{"kind":"number","nativeSrc":"14594:2:21","nodeType":"YulLiteral","src":"14594:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14579:3:21","nodeType":"YulIdentifier","src":"14579:3:21"},"nativeSrc":"14579:18:21","nodeType":"YulFunctionCall","src":"14579:18:21"},{"hexValue":"416d6f756e7420746f2073656e64206d75737420626520677265617465722074","kind":"string","nativeSrc":"14599:34:21","nodeType":"YulLiteral","src":"14599:34:21","type":"","value":"Amount to send must be greater t"}],"functionName":{"name":"mstore","nativeSrc":"14572:6:21","nodeType":"YulIdentifier","src":"14572:6:21"},"nativeSrc":"14572:62:21","nodeType":"YulFunctionCall","src":"14572:62:21"},"nativeSrc":"14572:62:21","nodeType":"YulExpressionStatement","src":"14572:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14654:9:21","nodeType":"YulIdentifier","src":"14654:9:21"},{"kind":"number","nativeSrc":"14665:2:21","nodeType":"YulLiteral","src":"14665:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14650:3:21","nodeType":"YulIdentifier","src":"14650:3:21"},"nativeSrc":"14650:18:21","nodeType":"YulFunctionCall","src":"14650:18:21"},{"hexValue":"68616e2030","kind":"string","nativeSrc":"14670:7:21","nodeType":"YulLiteral","src":"14670:7:21","type":"","value":"han 0"}],"functionName":{"name":"mstore","nativeSrc":"14643:6:21","nodeType":"YulIdentifier","src":"14643:6:21"},"nativeSrc":"14643:35:21","nodeType":"YulFunctionCall","src":"14643:35:21"},"nativeSrc":"14643:35:21","nodeType":"YulExpressionStatement","src":"14643:35:21"},{"nativeSrc":"14687:27:21","nodeType":"YulAssignment","src":"14687:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"14699:9:21","nodeType":"YulIdentifier","src":"14699:9:21"},{"kind":"number","nativeSrc":"14710:3:21","nodeType":"YulLiteral","src":"14710:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"14695:3:21","nodeType":"YulIdentifier","src":"14695:3:21"},"nativeSrc":"14695:19:21","nodeType":"YulFunctionCall","src":"14695:19:21"},"variableNames":[{"name":"tail","nativeSrc":"14687:4:21","nodeType":"YulIdentifier","src":"14687:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_293eab1376cea4527a492c75c5b4d240032b8920c86961428e65758e4fd3daec__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14319:401:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14470:9:21","nodeType":"YulTypedName","src":"14470:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14484:4:21","nodeType":"YulTypedName","src":"14484:4:21","type":""}],"src":"14319:401:21"},{"body":{"nativeSrc":"14854:119:21","nodeType":"YulBlock","src":"14854:119:21","statements":[{"nativeSrc":"14864:26:21","nodeType":"YulAssignment","src":"14864:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"14876:9:21","nodeType":"YulIdentifier","src":"14876:9:21"},{"kind":"number","nativeSrc":"14887:2:21","nodeType":"YulLiteral","src":"14887:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14872:3:21","nodeType":"YulIdentifier","src":"14872:3:21"},"nativeSrc":"14872:18:21","nodeType":"YulFunctionCall","src":"14872:18:21"},"variableNames":[{"name":"tail","nativeSrc":"14864:4:21","nodeType":"YulIdentifier","src":"14864:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14906:9:21","nodeType":"YulIdentifier","src":"14906:9:21"},{"name":"value0","nativeSrc":"14917:6:21","nodeType":"YulIdentifier","src":"14917:6:21"}],"functionName":{"name":"mstore","nativeSrc":"14899:6:21","nodeType":"YulIdentifier","src":"14899:6:21"},"nativeSrc":"14899:25:21","nodeType":"YulFunctionCall","src":"14899:25:21"},"nativeSrc":"14899:25:21","nodeType":"YulExpressionStatement","src":"14899:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14944:9:21","nodeType":"YulIdentifier","src":"14944:9:21"},{"kind":"number","nativeSrc":"14955:2:21","nodeType":"YulLiteral","src":"14955:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14940:3:21","nodeType":"YulIdentifier","src":"14940:3:21"},"nativeSrc":"14940:18:21","nodeType":"YulFunctionCall","src":"14940:18:21"},{"name":"value1","nativeSrc":"14960:6:21","nodeType":"YulIdentifier","src":"14960:6:21"}],"functionName":{"name":"mstore","nativeSrc":"14933:6:21","nodeType":"YulIdentifier","src":"14933:6:21"},"nativeSrc":"14933:34:21","nodeType":"YulFunctionCall","src":"14933:34:21"},"nativeSrc":"14933:34:21","nodeType":"YulExpressionStatement","src":"14933:34:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"14725:248:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14815:9:21","nodeType":"YulTypedName","src":"14815:9:21","type":""},{"name":"value1","nativeSrc":"14826:6:21","nodeType":"YulTypedName","src":"14826:6:21","type":""},{"name":"value0","nativeSrc":"14834:6:21","nodeType":"YulTypedName","src":"14834:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14845:4:21","nodeType":"YulTypedName","src":"14845:4:21","type":""}],"src":"14725:248:21"},{"body":{"nativeSrc":"15152:178:21","nodeType":"YulBlock","src":"15152:178:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15169:9:21","nodeType":"YulIdentifier","src":"15169:9:21"},{"kind":"number","nativeSrc":"15180:2:21","nodeType":"YulLiteral","src":"15180:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"15162:6:21","nodeType":"YulIdentifier","src":"15162:6:21"},"nativeSrc":"15162:21:21","nodeType":"YulFunctionCall","src":"15162:21:21"},"nativeSrc":"15162:21:21","nodeType":"YulExpressionStatement","src":"15162:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15203:9:21","nodeType":"YulIdentifier","src":"15203:9:21"},{"kind":"number","nativeSrc":"15214:2:21","nodeType":"YulLiteral","src":"15214:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15199:3:21","nodeType":"YulIdentifier","src":"15199:3:21"},"nativeSrc":"15199:18:21","nodeType":"YulFunctionCall","src":"15199:18:21"},{"kind":"number","nativeSrc":"15219:2:21","nodeType":"YulLiteral","src":"15219:2:21","type":"","value":"28"}],"functionName":{"name":"mstore","nativeSrc":"15192:6:21","nodeType":"YulIdentifier","src":"15192:6:21"},"nativeSrc":"15192:30:21","nodeType":"YulFunctionCall","src":"15192:30:21"},"nativeSrc":"15192:30:21","nodeType":"YulExpressionStatement","src":"15192:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15242:9:21","nodeType":"YulIdentifier","src":"15242:9:21"},{"kind":"number","nativeSrc":"15253:2:21","nodeType":"YulLiteral","src":"15253:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15238:3:21","nodeType":"YulIdentifier","src":"15238:3:21"},"nativeSrc":"15238:18:21","nodeType":"YulFunctionCall","src":"15238:18:21"},{"hexValue":"5368617265206d7573742062652067726561746572207468616e2030","kind":"string","nativeSrc":"15258:30:21","nodeType":"YulLiteral","src":"15258:30:21","type":"","value":"Share must be greater than 0"}],"functionName":{"name":"mstore","nativeSrc":"15231:6:21","nodeType":"YulIdentifier","src":"15231:6:21"},"nativeSrc":"15231:58:21","nodeType":"YulFunctionCall","src":"15231:58:21"},"nativeSrc":"15231:58:21","nodeType":"YulExpressionStatement","src":"15231:58:21"},{"nativeSrc":"15298:26:21","nodeType":"YulAssignment","src":"15298:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"15310:9:21","nodeType":"YulIdentifier","src":"15310:9:21"},{"kind":"number","nativeSrc":"15321:2:21","nodeType":"YulLiteral","src":"15321:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15306:3:21","nodeType":"YulIdentifier","src":"15306:3:21"},"nativeSrc":"15306:18:21","nodeType":"YulFunctionCall","src":"15306:18:21"},"variableNames":[{"name":"tail","nativeSrc":"15298:4:21","nodeType":"YulIdentifier","src":"15298:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_37b2136db8906a0fa9dcfb36fa22f3e5724d70ae1dfd30e29853723b16bc684b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14978:352:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15129:9:21","nodeType":"YulTypedName","src":"15129:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15143:4:21","nodeType":"YulTypedName","src":"15143:4:21","type":""}],"src":"14978:352:21"},{"body":{"nativeSrc":"15509:162:21","nodeType":"YulBlock","src":"15509:162:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15526:9:21","nodeType":"YulIdentifier","src":"15526:9:21"},{"kind":"number","nativeSrc":"15537:2:21","nodeType":"YulLiteral","src":"15537:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"15519:6:21","nodeType":"YulIdentifier","src":"15519:6:21"},"nativeSrc":"15519:21:21","nodeType":"YulFunctionCall","src":"15519:21:21"},"nativeSrc":"15519:21:21","nodeType":"YulExpressionStatement","src":"15519:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15560:9:21","nodeType":"YulIdentifier","src":"15560:9:21"},{"kind":"number","nativeSrc":"15571:2:21","nodeType":"YulLiteral","src":"15571:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15556:3:21","nodeType":"YulIdentifier","src":"15556:3:21"},"nativeSrc":"15556:18:21","nodeType":"YulFunctionCall","src":"15556:18:21"},{"kind":"number","nativeSrc":"15576:2:21","nodeType":"YulLiteral","src":"15576:2:21","type":"","value":"12"}],"functionName":{"name":"mstore","nativeSrc":"15549:6:21","nodeType":"YulIdentifier","src":"15549:6:21"},"nativeSrc":"15549:30:21","nodeType":"YulFunctionCall","src":"15549:30:21"},"nativeSrc":"15549:30:21","nodeType":"YulExpressionStatement","src":"15549:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15599:9:21","nodeType":"YulIdentifier","src":"15599:9:21"},{"kind":"number","nativeSrc":"15610:2:21","nodeType":"YulLiteral","src":"15610:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15595:3:21","nodeType":"YulIdentifier","src":"15595:3:21"},"nativeSrc":"15595:18:21","nodeType":"YulFunctionCall","src":"15595:18:21"},{"hexValue":"4e6f206c6971756964697479","kind":"string","nativeSrc":"15615:14:21","nodeType":"YulLiteral","src":"15615:14:21","type":"","value":"No liquidity"}],"functionName":{"name":"mstore","nativeSrc":"15588:6:21","nodeType":"YulIdentifier","src":"15588:6:21"},"nativeSrc":"15588:42:21","nodeType":"YulFunctionCall","src":"15588:42:21"},"nativeSrc":"15588:42:21","nodeType":"YulExpressionStatement","src":"15588:42:21"},{"nativeSrc":"15639:26:21","nodeType":"YulAssignment","src":"15639:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"15651:9:21","nodeType":"YulIdentifier","src":"15651:9:21"},{"kind":"number","nativeSrc":"15662:2:21","nodeType":"YulLiteral","src":"15662:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15647:3:21","nodeType":"YulIdentifier","src":"15647:3:21"},"nativeSrc":"15647:18:21","nodeType":"YulFunctionCall","src":"15647:18:21"},"variableNames":[{"name":"tail","nativeSrc":"15639:4:21","nodeType":"YulIdentifier","src":"15639:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15335:336:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15486:9:21","nodeType":"YulTypedName","src":"15486:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15500:4:21","nodeType":"YulTypedName","src":"15500:4:21","type":""}],"src":"15335:336:21"},{"body":{"nativeSrc":"15805:198:21","nodeType":"YulBlock","src":"15805:198:21","statements":[{"nativeSrc":"15815:26:21","nodeType":"YulAssignment","src":"15815:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"15827:9:21","nodeType":"YulIdentifier","src":"15827:9:21"},{"kind":"number","nativeSrc":"15838:2:21","nodeType":"YulLiteral","src":"15838:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15823:3:21","nodeType":"YulIdentifier","src":"15823:3:21"},"nativeSrc":"15823:18:21","nodeType":"YulFunctionCall","src":"15823:18:21"},"variableNames":[{"name":"tail","nativeSrc":"15815:4:21","nodeType":"YulIdentifier","src":"15815:4:21"}]},{"nativeSrc":"15850:52:21","nodeType":"YulVariableDeclaration","src":"15850:52:21","value":{"kind":"number","nativeSrc":"15860:42:21","nodeType":"YulLiteral","src":"15860:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"15854:2:21","nodeType":"YulTypedName","src":"15854:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15918:9:21","nodeType":"YulIdentifier","src":"15918:9:21"},{"arguments":[{"name":"value0","nativeSrc":"15933:6:21","nodeType":"YulIdentifier","src":"15933:6:21"},{"name":"_1","nativeSrc":"15941:2:21","nodeType":"YulIdentifier","src":"15941:2:21"}],"functionName":{"name":"and","nativeSrc":"15929:3:21","nodeType":"YulIdentifier","src":"15929:3:21"},"nativeSrc":"15929:15:21","nodeType":"YulFunctionCall","src":"15929:15:21"}],"functionName":{"name":"mstore","nativeSrc":"15911:6:21","nodeType":"YulIdentifier","src":"15911:6:21"},"nativeSrc":"15911:34:21","nodeType":"YulFunctionCall","src":"15911:34:21"},"nativeSrc":"15911:34:21","nodeType":"YulExpressionStatement","src":"15911:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15965:9:21","nodeType":"YulIdentifier","src":"15965:9:21"},{"kind":"number","nativeSrc":"15976:2:21","nodeType":"YulLiteral","src":"15976:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15961:3:21","nodeType":"YulIdentifier","src":"15961:3:21"},"nativeSrc":"15961:18:21","nodeType":"YulFunctionCall","src":"15961:18:21"},{"arguments":[{"name":"value1","nativeSrc":"15985:6:21","nodeType":"YulIdentifier","src":"15985:6:21"},{"name":"_1","nativeSrc":"15993:2:21","nodeType":"YulIdentifier","src":"15993:2:21"}],"functionName":{"name":"and","nativeSrc":"15981:3:21","nodeType":"YulIdentifier","src":"15981:3:21"},"nativeSrc":"15981:15:21","nodeType":"YulFunctionCall","src":"15981:15:21"}],"functionName":{"name":"mstore","nativeSrc":"15954:6:21","nodeType":"YulIdentifier","src":"15954:6:21"},"nativeSrc":"15954:43:21","nodeType":"YulFunctionCall","src":"15954:43:21"},"nativeSrc":"15954:43:21","nodeType":"YulExpressionStatement","src":"15954:43:21"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"15676:327:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15766:9:21","nodeType":"YulTypedName","src":"15766:9:21","type":""},{"name":"value1","nativeSrc":"15777:6:21","nodeType":"YulTypedName","src":"15777:6:21","type":""},{"name":"value0","nativeSrc":"15785:6:21","nodeType":"YulTypedName","src":"15785:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15796:4:21","nodeType":"YulTypedName","src":"15796:4:21","type":""}],"src":"15676:327:21"},{"body":{"nativeSrc":"16182:179:21","nodeType":"YulBlock","src":"16182:179:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"16199:9:21","nodeType":"YulIdentifier","src":"16199:9:21"},{"kind":"number","nativeSrc":"16210:2:21","nodeType":"YulLiteral","src":"16210:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"16192:6:21","nodeType":"YulIdentifier","src":"16192:6:21"},"nativeSrc":"16192:21:21","nodeType":"YulFunctionCall","src":"16192:21:21"},"nativeSrc":"16192:21:21","nodeType":"YulExpressionStatement","src":"16192:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16233:9:21","nodeType":"YulIdentifier","src":"16233:9:21"},{"kind":"number","nativeSrc":"16244:2:21","nodeType":"YulLiteral","src":"16244:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16229:3:21","nodeType":"YulIdentifier","src":"16229:3:21"},"nativeSrc":"16229:18:21","nodeType":"YulFunctionCall","src":"16229:18:21"},{"kind":"number","nativeSrc":"16249:2:21","nodeType":"YulLiteral","src":"16249:2:21","type":"","value":"29"}],"functionName":{"name":"mstore","nativeSrc":"16222:6:21","nodeType":"YulIdentifier","src":"16222:6:21"},"nativeSrc":"16222:30:21","nodeType":"YulFunctionCall","src":"16222:30:21"},"nativeSrc":"16222:30:21","nodeType":"YulExpressionStatement","src":"16222:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16272:9:21","nodeType":"YulIdentifier","src":"16272:9:21"},{"kind":"number","nativeSrc":"16283:2:21","nodeType":"YulLiteral","src":"16283:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16268:3:21","nodeType":"YulIdentifier","src":"16268:3:21"},"nativeSrc":"16268:18:21","nodeType":"YulFunctionCall","src":"16268:18:21"},{"hexValue":"496e73756666696369656e742042414c554e49206c6971756964697479","kind":"string","nativeSrc":"16288:31:21","nodeType":"YulLiteral","src":"16288:31:21","type":"","value":"Insufficient BALUNI liquidity"}],"functionName":{"name":"mstore","nativeSrc":"16261:6:21","nodeType":"YulIdentifier","src":"16261:6:21"},"nativeSrc":"16261:59:21","nodeType":"YulFunctionCall","src":"16261:59:21"},"nativeSrc":"16261:59:21","nodeType":"YulExpressionStatement","src":"16261:59:21"},{"nativeSrc":"16329:26:21","nodeType":"YulAssignment","src":"16329:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"16341:9:21","nodeType":"YulIdentifier","src":"16341:9:21"},{"kind":"number","nativeSrc":"16352:2:21","nodeType":"YulLiteral","src":"16352:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16337:3:21","nodeType":"YulIdentifier","src":"16337:3:21"},"nativeSrc":"16337:18:21","nodeType":"YulFunctionCall","src":"16337:18:21"},"variableNames":[{"name":"tail","nativeSrc":"16329:4:21","nodeType":"YulIdentifier","src":"16329:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc2f8692ca59eb8838d740ab96a08e7dab54c967cc56eb0a9b640ce78eb1103e__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16008:353:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16159:9:21","nodeType":"YulTypedName","src":"16159:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16173:4:21","nodeType":"YulTypedName","src":"16173:4:21","type":""}],"src":"16008:353:21"},{"body":{"nativeSrc":"16444:199:21","nodeType":"YulBlock","src":"16444:199:21","statements":[{"body":{"nativeSrc":"16490:16:21","nodeType":"YulBlock","src":"16490:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16499:1:21","nodeType":"YulLiteral","src":"16499:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"16502:1:21","nodeType":"YulLiteral","src":"16502:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"16492:6:21","nodeType":"YulIdentifier","src":"16492:6:21"},"nativeSrc":"16492:12:21","nodeType":"YulFunctionCall","src":"16492:12:21"},"nativeSrc":"16492:12:21","nodeType":"YulExpressionStatement","src":"16492:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"16465:7:21","nodeType":"YulIdentifier","src":"16465:7:21"},{"name":"headStart","nativeSrc":"16474:9:21","nodeType":"YulIdentifier","src":"16474:9:21"}],"functionName":{"name":"sub","nativeSrc":"16461:3:21","nodeType":"YulIdentifier","src":"16461:3:21"},"nativeSrc":"16461:23:21","nodeType":"YulFunctionCall","src":"16461:23:21"},{"kind":"number","nativeSrc":"16486:2:21","nodeType":"YulLiteral","src":"16486:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"16457:3:21","nodeType":"YulIdentifier","src":"16457:3:21"},"nativeSrc":"16457:32:21","nodeType":"YulFunctionCall","src":"16457:32:21"},"nativeSrc":"16454:52:21","nodeType":"YulIf","src":"16454:52:21"},{"nativeSrc":"16515:29:21","nodeType":"YulVariableDeclaration","src":"16515:29:21","value":{"arguments":[{"name":"headStart","nativeSrc":"16534:9:21","nodeType":"YulIdentifier","src":"16534:9:21"}],"functionName":{"name":"mload","nativeSrc":"16528:5:21","nodeType":"YulIdentifier","src":"16528:5:21"},"nativeSrc":"16528:16:21","nodeType":"YulFunctionCall","src":"16528:16:21"},"variables":[{"name":"value","nativeSrc":"16519:5:21","nodeType":"YulTypedName","src":"16519:5:21","type":""}]},{"body":{"nativeSrc":"16597:16:21","nodeType":"YulBlock","src":"16597:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16606:1:21","nodeType":"YulLiteral","src":"16606:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"16609:1:21","nodeType":"YulLiteral","src":"16609:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"16599:6:21","nodeType":"YulIdentifier","src":"16599:6:21"},"nativeSrc":"16599:12:21","nodeType":"YulFunctionCall","src":"16599:12:21"},"nativeSrc":"16599:12:21","nodeType":"YulExpressionStatement","src":"16599:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16566:5:21","nodeType":"YulIdentifier","src":"16566:5:21"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16587:5:21","nodeType":"YulIdentifier","src":"16587:5:21"}],"functionName":{"name":"iszero","nativeSrc":"16580:6:21","nodeType":"YulIdentifier","src":"16580:6:21"},"nativeSrc":"16580:13:21","nodeType":"YulFunctionCall","src":"16580:13:21"}],"functionName":{"name":"iszero","nativeSrc":"16573:6:21","nodeType":"YulIdentifier","src":"16573:6:21"},"nativeSrc":"16573:21:21","nodeType":"YulFunctionCall","src":"16573:21:21"}],"functionName":{"name":"eq","nativeSrc":"16563:2:21","nodeType":"YulIdentifier","src":"16563:2:21"},"nativeSrc":"16563:32:21","nodeType":"YulFunctionCall","src":"16563:32:21"}],"functionName":{"name":"iszero","nativeSrc":"16556:6:21","nodeType":"YulIdentifier","src":"16556:6:21"},"nativeSrc":"16556:40:21","nodeType":"YulFunctionCall","src":"16556:40:21"},"nativeSrc":"16553:60:21","nodeType":"YulIf","src":"16553:60:21"},{"nativeSrc":"16622:15:21","nodeType":"YulAssignment","src":"16622:15:21","value":{"name":"value","nativeSrc":"16632:5:21","nodeType":"YulIdentifier","src":"16632:5:21"},"variableNames":[{"name":"value0","nativeSrc":"16622:6:21","nodeType":"YulIdentifier","src":"16622:6:21"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"16366:277:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16410:9:21","nodeType":"YulTypedName","src":"16410:9:21","type":""},{"name":"dataEnd","nativeSrc":"16421:7:21","nodeType":"YulTypedName","src":"16421:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"16433:6:21","nodeType":"YulTypedName","src":"16433:6:21","type":""}],"src":"16366:277:21"},{"body":{"nativeSrc":"16822:169:21","nodeType":"YulBlock","src":"16822:169:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"16839:9:21","nodeType":"YulIdentifier","src":"16839:9:21"},{"kind":"number","nativeSrc":"16850:2:21","nodeType":"YulLiteral","src":"16850:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"16832:6:21","nodeType":"YulIdentifier","src":"16832:6:21"},"nativeSrc":"16832:21:21","nodeType":"YulFunctionCall","src":"16832:21:21"},"nativeSrc":"16832:21:21","nodeType":"YulExpressionStatement","src":"16832:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16873:9:21","nodeType":"YulIdentifier","src":"16873:9:21"},{"kind":"number","nativeSrc":"16884:2:21","nodeType":"YulLiteral","src":"16884:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16869:3:21","nodeType":"YulIdentifier","src":"16869:3:21"},"nativeSrc":"16869:18:21","nodeType":"YulFunctionCall","src":"16869:18:21"},{"kind":"number","nativeSrc":"16889:2:21","nodeType":"YulLiteral","src":"16889:2:21","type":"","value":"19"}],"functionName":{"name":"mstore","nativeSrc":"16862:6:21","nodeType":"YulIdentifier","src":"16862:6:21"},"nativeSrc":"16862:30:21","nodeType":"YulFunctionCall","src":"16862:30:21"},"nativeSrc":"16862:30:21","nodeType":"YulExpressionStatement","src":"16862:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16912:9:21","nodeType":"YulIdentifier","src":"16912:9:21"},{"kind":"number","nativeSrc":"16923:2:21","nodeType":"YulLiteral","src":"16923:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16908:3:21","nodeType":"YulIdentifier","src":"16908:3:21"},"nativeSrc":"16908:18:21","nodeType":"YulFunctionCall","src":"16908:18:21"},{"hexValue":"466565207472616e73666572206661696c6564","kind":"string","nativeSrc":"16928:21:21","nodeType":"YulLiteral","src":"16928:21:21","type":"","value":"Fee transfer failed"}],"functionName":{"name":"mstore","nativeSrc":"16901:6:21","nodeType":"YulIdentifier","src":"16901:6:21"},"nativeSrc":"16901:49:21","nodeType":"YulFunctionCall","src":"16901:49:21"},"nativeSrc":"16901:49:21","nodeType":"YulExpressionStatement","src":"16901:49:21"},{"nativeSrc":"16959:26:21","nodeType":"YulAssignment","src":"16959:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"16971:9:21","nodeType":"YulIdentifier","src":"16971:9:21"},{"kind":"number","nativeSrc":"16982:2:21","nodeType":"YulLiteral","src":"16982:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16967:3:21","nodeType":"YulIdentifier","src":"16967:3:21"},"nativeSrc":"16967:18:21","nodeType":"YulFunctionCall","src":"16967:18:21"},"variableNames":[{"name":"tail","nativeSrc":"16959:4:21","nodeType":"YulIdentifier","src":"16959:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16648:343:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16799:9:21","nodeType":"YulTypedName","src":"16799:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16813:4:21","nodeType":"YulTypedName","src":"16813:4:21","type":""}],"src":"16648:343:21"},{"body":{"nativeSrc":"17170:169:21","nodeType":"YulBlock","src":"17170:169:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17187:9:21","nodeType":"YulIdentifier","src":"17187:9:21"},{"kind":"number","nativeSrc":"17198:2:21","nodeType":"YulLiteral","src":"17198:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"17180:6:21","nodeType":"YulIdentifier","src":"17180:6:21"},"nativeSrc":"17180:21:21","nodeType":"YulFunctionCall","src":"17180:21:21"},"nativeSrc":"17180:21:21","nodeType":"YulExpressionStatement","src":"17180:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17221:9:21","nodeType":"YulIdentifier","src":"17221:9:21"},{"kind":"number","nativeSrc":"17232:2:21","nodeType":"YulLiteral","src":"17232:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17217:3:21","nodeType":"YulIdentifier","src":"17217:3:21"},"nativeSrc":"17217:18:21","nodeType":"YulFunctionCall","src":"17217:18:21"},{"kind":"number","nativeSrc":"17237:2:21","nodeType":"YulLiteral","src":"17237:2:21","type":"","value":"19"}],"functionName":{"name":"mstore","nativeSrc":"17210:6:21","nodeType":"YulIdentifier","src":"17210:6:21"},"nativeSrc":"17210:30:21","nodeType":"YulFunctionCall","src":"17210:30:21"},"nativeSrc":"17210:30:21","nodeType":"YulExpressionStatement","src":"17210:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17260:9:21","nodeType":"YulIdentifier","src":"17260:9:21"},{"kind":"number","nativeSrc":"17271:2:21","nodeType":"YulLiteral","src":"17271:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17256:3:21","nodeType":"YulIdentifier","src":"17256:3:21"},"nativeSrc":"17256:18:21","nodeType":"YulFunctionCall","src":"17256:18:21"},{"hexValue":"496e76616c696420617373657420696e646578","kind":"string","nativeSrc":"17276:21:21","nodeType":"YulLiteral","src":"17276:21:21","type":"","value":"Invalid asset index"}],"functionName":{"name":"mstore","nativeSrc":"17249:6:21","nodeType":"YulIdentifier","src":"17249:6:21"},"nativeSrc":"17249:49:21","nodeType":"YulFunctionCall","src":"17249:49:21"},"nativeSrc":"17249:49:21","nodeType":"YulExpressionStatement","src":"17249:49:21"},{"nativeSrc":"17307:26:21","nodeType":"YulAssignment","src":"17307:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"17319:9:21","nodeType":"YulIdentifier","src":"17319:9:21"},{"kind":"number","nativeSrc":"17330:2:21","nodeType":"YulLiteral","src":"17330:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17315:3:21","nodeType":"YulIdentifier","src":"17315:3:21"},"nativeSrc":"17315:18:21","nodeType":"YulFunctionCall","src":"17315:18:21"},"variableNames":[{"name":"tail","nativeSrc":"17307:4:21","nodeType":"YulIdentifier","src":"17307:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b105b0b4a7ff5c11f41135d6d4600fd47da6168663f6cb1810745b08d83918__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16996:343:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17147:9:21","nodeType":"YulTypedName","src":"17147:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17161:4:21","nodeType":"YulTypedName","src":"17161:4:21","type":""}],"src":"16996:343:21"},{"body":{"nativeSrc":"17518:173:21","nodeType":"YulBlock","src":"17518:173:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17535:9:21","nodeType":"YulIdentifier","src":"17535:9:21"},{"kind":"number","nativeSrc":"17546:2:21","nodeType":"YulLiteral","src":"17546:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"17528:6:21","nodeType":"YulIdentifier","src":"17528:6:21"},"nativeSrc":"17528:21:21","nodeType":"YulFunctionCall","src":"17528:21:21"},"nativeSrc":"17528:21:21","nodeType":"YulExpressionStatement","src":"17528:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17569:9:21","nodeType":"YulIdentifier","src":"17569:9:21"},{"kind":"number","nativeSrc":"17580:2:21","nodeType":"YulLiteral","src":"17580:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17565:3:21","nodeType":"YulIdentifier","src":"17565:3:21"},"nativeSrc":"17565:18:21","nodeType":"YulFunctionCall","src":"17565:18:21"},{"kind":"number","nativeSrc":"17585:2:21","nodeType":"YulLiteral","src":"17585:2:21","type":"","value":"23"}],"functionName":{"name":"mstore","nativeSrc":"17558:6:21","nodeType":"YulIdentifier","src":"17558:6:21"},"nativeSrc":"17558:30:21","nodeType":"YulFunctionCall","src":"17558:30:21"},"nativeSrc":"17558:30:21","nodeType":"YulExpressionStatement","src":"17558:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17608:9:21","nodeType":"YulIdentifier","src":"17608:9:21"},{"kind":"number","nativeSrc":"17619:2:21","nodeType":"YulLiteral","src":"17619:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17604:3:21","nodeType":"YulIdentifier","src":"17604:3:21"},"nativeSrc":"17604:18:21","nodeType":"YulFunctionCall","src":"17604:18:21"},{"hexValue":"496e76616c6964207265736572766573206c656e677468","kind":"string","nativeSrc":"17624:25:21","nodeType":"YulLiteral","src":"17624:25:21","type":"","value":"Invalid reserves length"}],"functionName":{"name":"mstore","nativeSrc":"17597:6:21","nodeType":"YulIdentifier","src":"17597:6:21"},"nativeSrc":"17597:53:21","nodeType":"YulFunctionCall","src":"17597:53:21"},"nativeSrc":"17597:53:21","nodeType":"YulExpressionStatement","src":"17597:53:21"},{"nativeSrc":"17659:26:21","nodeType":"YulAssignment","src":"17659:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"17671:9:21","nodeType":"YulIdentifier","src":"17671:9:21"},{"kind":"number","nativeSrc":"17682:2:21","nodeType":"YulLiteral","src":"17682:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17667:3:21","nodeType":"YulIdentifier","src":"17667:3:21"},"nativeSrc":"17667:18:21","nodeType":"YulFunctionCall","src":"17667:18:21"},"variableNames":[{"name":"tail","nativeSrc":"17659:4:21","nodeType":"YulIdentifier","src":"17659:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_788ce755d61da147edad70af92467c8a383af859573990e9defde5b6e0bdf24d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17344:347:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17495:9:21","nodeType":"YulTypedName","src":"17495:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17509:4:21","nodeType":"YulTypedName","src":"17509:4:21","type":""}],"src":"17344:347:21"},{"body":{"nativeSrc":"17870:158:21","nodeType":"YulBlock","src":"17870:158:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17887:9:21","nodeType":"YulIdentifier","src":"17887:9:21"},{"kind":"number","nativeSrc":"17898:2:21","nodeType":"YulLiteral","src":"17898:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"17880:6:21","nodeType":"YulIdentifier","src":"17880:6:21"},"nativeSrc":"17880:21:21","nodeType":"YulFunctionCall","src":"17880:21:21"},"nativeSrc":"17880:21:21","nodeType":"YulExpressionStatement","src":"17880:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17921:9:21","nodeType":"YulIdentifier","src":"17921:9:21"},{"kind":"number","nativeSrc":"17932:2:21","nodeType":"YulLiteral","src":"17932:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17917:3:21","nodeType":"YulIdentifier","src":"17917:3:21"},"nativeSrc":"17917:18:21","nodeType":"YulFunctionCall","src":"17917:18:21"},{"kind":"number","nativeSrc":"17937:1:21","nodeType":"YulLiteral","src":"17937:1:21","type":"","value":"9"}],"functionName":{"name":"mstore","nativeSrc":"17910:6:21","nodeType":"YulIdentifier","src":"17910:6:21"},"nativeSrc":"17910:29:21","nodeType":"YulFunctionCall","src":"17910:29:21"},"nativeSrc":"17910:29:21","nodeType":"YulExpressionStatement","src":"17910:29:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17959:9:21","nodeType":"YulIdentifier","src":"17959:9:21"},{"kind":"number","nativeSrc":"17970:2:21","nodeType":"YulLiteral","src":"17970:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17955:3:21","nodeType":"YulIdentifier","src":"17955:3:21"},"nativeSrc":"17955:18:21","nodeType":"YulFunctionCall","src":"17955:18:21"},{"hexValue":"4e6f20617373657473","kind":"string","nativeSrc":"17975:11:21","nodeType":"YulLiteral","src":"17975:11:21","type":"","value":"No assets"}],"functionName":{"name":"mstore","nativeSrc":"17948:6:21","nodeType":"YulIdentifier","src":"17948:6:21"},"nativeSrc":"17948:39:21","nodeType":"YulFunctionCall","src":"17948:39:21"},"nativeSrc":"17948:39:21","nodeType":"YulExpressionStatement","src":"17948:39:21"},{"nativeSrc":"17996:26:21","nodeType":"YulAssignment","src":"17996:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"18008:9:21","nodeType":"YulIdentifier","src":"18008:9:21"},{"kind":"number","nativeSrc":"18019:2:21","nodeType":"YulLiteral","src":"18019:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18004:3:21","nodeType":"YulIdentifier","src":"18004:3:21"},"nativeSrc":"18004:18:21","nodeType":"YulFunctionCall","src":"18004:18:21"},"variableNames":[{"name":"tail","nativeSrc":"17996:4:21","nodeType":"YulIdentifier","src":"17996:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_195739df032cb3c07c5ed70a4cae73c5d077df4296263c6db3d1f3b4671efbd0__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17696:332:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17847:9:21","nodeType":"YulTypedName","src":"17847:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17861:4:21","nodeType":"YulTypedName","src":"17861:4:21","type":""}],"src":"17696:332:21"},{"body":{"nativeSrc":"18081:77:21","nodeType":"YulBlock","src":"18081:77:21","statements":[{"nativeSrc":"18091:16:21","nodeType":"YulAssignment","src":"18091:16:21","value":{"arguments":[{"name":"x","nativeSrc":"18102:1:21","nodeType":"YulIdentifier","src":"18102:1:21"},{"name":"y","nativeSrc":"18105:1:21","nodeType":"YulIdentifier","src":"18105:1:21"}],"functionName":{"name":"add","nativeSrc":"18098:3:21","nodeType":"YulIdentifier","src":"18098:3:21"},"nativeSrc":"18098:9:21","nodeType":"YulFunctionCall","src":"18098:9:21"},"variableNames":[{"name":"sum","nativeSrc":"18091:3:21","nodeType":"YulIdentifier","src":"18091:3:21"}]},{"body":{"nativeSrc":"18130:22:21","nodeType":"YulBlock","src":"18130:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"18132:16:21","nodeType":"YulIdentifier","src":"18132:16:21"},"nativeSrc":"18132:18:21","nodeType":"YulFunctionCall","src":"18132:18:21"},"nativeSrc":"18132:18:21","nodeType":"YulExpressionStatement","src":"18132:18:21"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"18122:1:21","nodeType":"YulIdentifier","src":"18122:1:21"},{"name":"sum","nativeSrc":"18125:3:21","nodeType":"YulIdentifier","src":"18125:3:21"}],"functionName":{"name":"gt","nativeSrc":"18119:2:21","nodeType":"YulIdentifier","src":"18119:2:21"},"nativeSrc":"18119:10:21","nodeType":"YulFunctionCall","src":"18119:10:21"},"nativeSrc":"18116:36:21","nodeType":"YulIf","src":"18116:36:21"}]},"name":"checked_add_t_uint256","nativeSrc":"18033:125:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"18064:1:21","nodeType":"YulTypedName","src":"18064:1:21","type":""},{"name":"y","nativeSrc":"18067:1:21","nodeType":"YulTypedName","src":"18067:1:21","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"18073:3:21","nodeType":"YulTypedName","src":"18073:3:21","type":""}],"src":"18033:125:21"},{"body":{"nativeSrc":"18337:224:21","nodeType":"YulBlock","src":"18337:224:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18354:9:21","nodeType":"YulIdentifier","src":"18354:9:21"},{"kind":"number","nativeSrc":"18365:2:21","nodeType":"YulLiteral","src":"18365:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"18347:6:21","nodeType":"YulIdentifier","src":"18347:6:21"},"nativeSrc":"18347:21:21","nodeType":"YulFunctionCall","src":"18347:21:21"},"nativeSrc":"18347:21:21","nodeType":"YulExpressionStatement","src":"18347:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18388:9:21","nodeType":"YulIdentifier","src":"18388:9:21"},{"kind":"number","nativeSrc":"18399:2:21","nodeType":"YulLiteral","src":"18399:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18384:3:21","nodeType":"YulIdentifier","src":"18384:3:21"},"nativeSrc":"18384:18:21","nodeType":"YulFunctionCall","src":"18384:18:21"},{"kind":"number","nativeSrc":"18404:2:21","nodeType":"YulLiteral","src":"18404:2:21","type":"","value":"34"}],"functionName":{"name":"mstore","nativeSrc":"18377:6:21","nodeType":"YulIdentifier","src":"18377:6:21"},"nativeSrc":"18377:30:21","nodeType":"YulFunctionCall","src":"18377:30:21"},"nativeSrc":"18377:30:21","nodeType":"YulExpressionStatement","src":"18377:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18427:9:21","nodeType":"YulIdentifier","src":"18427:9:21"},{"kind":"number","nativeSrc":"18438:2:21","nodeType":"YulLiteral","src":"18438:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18423:3:21","nodeType":"YulIdentifier","src":"18423:3:21"},"nativeSrc":"18423:18:21","nodeType":"YulFunctionCall","src":"18423:18:21"},{"hexValue":"546f74616c2076616c7565206d7573742062652067726561746572207468616e","kind":"string","nativeSrc":"18443:34:21","nodeType":"YulLiteral","src":"18443:34:21","type":"","value":"Total value must be greater than"}],"functionName":{"name":"mstore","nativeSrc":"18416:6:21","nodeType":"YulIdentifier","src":"18416:6:21"},"nativeSrc":"18416:62:21","nodeType":"YulFunctionCall","src":"18416:62:21"},"nativeSrc":"18416:62:21","nodeType":"YulExpressionStatement","src":"18416:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18498:9:21","nodeType":"YulIdentifier","src":"18498:9:21"},{"kind":"number","nativeSrc":"18509:2:21","nodeType":"YulLiteral","src":"18509:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18494:3:21","nodeType":"YulIdentifier","src":"18494:3:21"},"nativeSrc":"18494:18:21","nodeType":"YulFunctionCall","src":"18494:18:21"},{"hexValue":"2030","kind":"string","nativeSrc":"18514:4:21","nodeType":"YulLiteral","src":"18514:4:21","type":"","value":" 0"}],"functionName":{"name":"mstore","nativeSrc":"18487:6:21","nodeType":"YulIdentifier","src":"18487:6:21"},"nativeSrc":"18487:32:21","nodeType":"YulFunctionCall","src":"18487:32:21"},"nativeSrc":"18487:32:21","nodeType":"YulExpressionStatement","src":"18487:32:21"},{"nativeSrc":"18528:27:21","nodeType":"YulAssignment","src":"18528:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"18540:9:21","nodeType":"YulIdentifier","src":"18540:9:21"},{"kind":"number","nativeSrc":"18551:3:21","nodeType":"YulLiteral","src":"18551:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"18536:3:21","nodeType":"YulIdentifier","src":"18536:3:21"},"nativeSrc":"18536:19:21","nodeType":"YulFunctionCall","src":"18536:19:21"},"variableNames":[{"name":"tail","nativeSrc":"18528:4:21","nodeType":"YulIdentifier","src":"18528:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_e8ec4a06d76118e3b24afbc30b183e086aa6aaa6e137c81160fc8d59e1a33e3f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18163:398:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18314:9:21","nodeType":"YulTypedName","src":"18314:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18328:4:21","nodeType":"YulTypedName","src":"18328:4:21","type":""}],"src":"18163:398:21"},{"body":{"nativeSrc":"18740:228:21","nodeType":"YulBlock","src":"18740:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18757:9:21","nodeType":"YulIdentifier","src":"18757:9:21"},{"kind":"number","nativeSrc":"18768:2:21","nodeType":"YulLiteral","src":"18768:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"18750:6:21","nodeType":"YulIdentifier","src":"18750:6:21"},"nativeSrc":"18750:21:21","nodeType":"YulFunctionCall","src":"18750:21:21"},"nativeSrc":"18750:21:21","nodeType":"YulExpressionStatement","src":"18750:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18791:9:21","nodeType":"YulIdentifier","src":"18791:9:21"},{"kind":"number","nativeSrc":"18802:2:21","nodeType":"YulLiteral","src":"18802:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18787:3:21","nodeType":"YulIdentifier","src":"18787:3:21"},"nativeSrc":"18787:18:21","nodeType":"YulFunctionCall","src":"18787:18:21"},{"kind":"number","nativeSrc":"18807:2:21","nodeType":"YulLiteral","src":"18807:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nativeSrc":"18780:6:21","nodeType":"YulIdentifier","src":"18780:6:21"},"nativeSrc":"18780:30:21","nodeType":"YulFunctionCall","src":"18780:30:21"},"nativeSrc":"18780:30:21","nodeType":"YulExpressionStatement","src":"18780:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18830:9:21","nodeType":"YulIdentifier","src":"18830:9:21"},{"kind":"number","nativeSrc":"18841:2:21","nodeType":"YulLiteral","src":"18841:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18826:3:21","nodeType":"YulIdentifier","src":"18826:3:21"},"nativeSrc":"18826:18:21","nodeType":"YulFunctionCall","src":"18826:18:21"},{"hexValue":"546f74616c206c6971756964697479206d757374206265206772656174657220","kind":"string","nativeSrc":"18846:34:21","nodeType":"YulLiteral","src":"18846:34:21","type":"","value":"Total liquidity must be greater "}],"functionName":{"name":"mstore","nativeSrc":"18819:6:21","nodeType":"YulIdentifier","src":"18819:6:21"},"nativeSrc":"18819:62:21","nodeType":"YulFunctionCall","src":"18819:62:21"},"nativeSrc":"18819:62:21","nodeType":"YulExpressionStatement","src":"18819:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18901:9:21","nodeType":"YulIdentifier","src":"18901:9:21"},{"kind":"number","nativeSrc":"18912:2:21","nodeType":"YulLiteral","src":"18912:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18897:3:21","nodeType":"YulIdentifier","src":"18897:3:21"},"nativeSrc":"18897:18:21","nodeType":"YulFunctionCall","src":"18897:18:21"},{"hexValue":"7468616e2030","kind":"string","nativeSrc":"18917:8:21","nodeType":"YulLiteral","src":"18917:8:21","type":"","value":"than 0"}],"functionName":{"name":"mstore","nativeSrc":"18890:6:21","nodeType":"YulIdentifier","src":"18890:6:21"},"nativeSrc":"18890:36:21","nodeType":"YulFunctionCall","src":"18890:36:21"},"nativeSrc":"18890:36:21","nodeType":"YulExpressionStatement","src":"18890:36:21"},{"nativeSrc":"18935:27:21","nodeType":"YulAssignment","src":"18935:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"18947:9:21","nodeType":"YulIdentifier","src":"18947:9:21"},{"kind":"number","nativeSrc":"18958:3:21","nodeType":"YulLiteral","src":"18958:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"18943:3:21","nodeType":"YulIdentifier","src":"18943:3:21"},"nativeSrc":"18943:19:21","nodeType":"YulFunctionCall","src":"18943:19:21"},"variableNames":[{"name":"tail","nativeSrc":"18935:4:21","nodeType":"YulIdentifier","src":"18935:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_a245c00c976af272c663e732300fe860097516364a0d92887494f54e860fa54c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18566:402:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18717:9:21","nodeType":"YulTypedName","src":"18717:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18731:4:21","nodeType":"YulTypedName","src":"18731:4:21","type":""}],"src":"18566:402:21"},{"body":{"nativeSrc":"19147:163:21","nodeType":"YulBlock","src":"19147:163:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"19164:9:21","nodeType":"YulIdentifier","src":"19164:9:21"},{"kind":"number","nativeSrc":"19175:2:21","nodeType":"YulLiteral","src":"19175:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"19157:6:21","nodeType":"YulIdentifier","src":"19157:6:21"},"nativeSrc":"19157:21:21","nodeType":"YulFunctionCall","src":"19157:21:21"},"nativeSrc":"19157:21:21","nodeType":"YulExpressionStatement","src":"19157:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19198:9:21","nodeType":"YulIdentifier","src":"19198:9:21"},{"kind":"number","nativeSrc":"19209:2:21","nodeType":"YulLiteral","src":"19209:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19194:3:21","nodeType":"YulIdentifier","src":"19194:3:21"},"nativeSrc":"19194:18:21","nodeType":"YulFunctionCall","src":"19194:18:21"},{"kind":"number","nativeSrc":"19214:2:21","nodeType":"YulLiteral","src":"19214:2:21","type":"","value":"13"}],"functionName":{"name":"mstore","nativeSrc":"19187:6:21","nodeType":"YulIdentifier","src":"19187:6:21"},"nativeSrc":"19187:30:21","nodeType":"YulFunctionCall","src":"19187:30:21"},"nativeSrc":"19187:30:21","nodeType":"YulExpressionStatement","src":"19187:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19237:9:21","nodeType":"YulIdentifier","src":"19237:9:21"},{"kind":"number","nativeSrc":"19248:2:21","nodeType":"YulLiteral","src":"19248:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19233:3:21","nodeType":"YulIdentifier","src":"19233:3:21"},"nativeSrc":"19233:18:21","nodeType":"YulFunctionCall","src":"19233:18:21"},{"hexValue":"4d696e74207174792069732030","kind":"string","nativeSrc":"19253:15:21","nodeType":"YulLiteral","src":"19253:15:21","type":"","value":"Mint qty is 0"}],"functionName":{"name":"mstore","nativeSrc":"19226:6:21","nodeType":"YulIdentifier","src":"19226:6:21"},"nativeSrc":"19226:43:21","nodeType":"YulFunctionCall","src":"19226:43:21"},"nativeSrc":"19226:43:21","nodeType":"YulExpressionStatement","src":"19226:43:21"},{"nativeSrc":"19278:26:21","nodeType":"YulAssignment","src":"19278:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"19290:9:21","nodeType":"YulIdentifier","src":"19290:9:21"},{"kind":"number","nativeSrc":"19301:2:21","nodeType":"YulLiteral","src":"19301:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19286:3:21","nodeType":"YulIdentifier","src":"19286:3:21"},"nativeSrc":"19286:18:21","nodeType":"YulFunctionCall","src":"19286:18:21"},"variableNames":[{"name":"tail","nativeSrc":"19278:4:21","nodeType":"YulIdentifier","src":"19278:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_50327403b25acc6e0d15796c676b8320f8d9ffcece005326d31f4226e4f741bb__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18973:337:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19124:9:21","nodeType":"YulTypedName","src":"19124:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19138:4:21","nodeType":"YulTypedName","src":"19138:4:21","type":""}],"src":"18973:337:21"},{"body":{"nativeSrc":"19394:194:21","nodeType":"YulBlock","src":"19394:194:21","statements":[{"body":{"nativeSrc":"19440:16:21","nodeType":"YulBlock","src":"19440:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19449:1:21","nodeType":"YulLiteral","src":"19449:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"19452:1:21","nodeType":"YulLiteral","src":"19452:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"19442:6:21","nodeType":"YulIdentifier","src":"19442:6:21"},"nativeSrc":"19442:12:21","nodeType":"YulFunctionCall","src":"19442:12:21"},"nativeSrc":"19442:12:21","nodeType":"YulExpressionStatement","src":"19442:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"19415:7:21","nodeType":"YulIdentifier","src":"19415:7:21"},{"name":"headStart","nativeSrc":"19424:9:21","nodeType":"YulIdentifier","src":"19424:9:21"}],"functionName":{"name":"sub","nativeSrc":"19411:3:21","nodeType":"YulIdentifier","src":"19411:3:21"},"nativeSrc":"19411:23:21","nodeType":"YulFunctionCall","src":"19411:23:21"},{"kind":"number","nativeSrc":"19436:2:21","nodeType":"YulLiteral","src":"19436:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"19407:3:21","nodeType":"YulIdentifier","src":"19407:3:21"},"nativeSrc":"19407:32:21","nodeType":"YulFunctionCall","src":"19407:32:21"},"nativeSrc":"19404:52:21","nodeType":"YulIf","src":"19404:52:21"},{"nativeSrc":"19465:29:21","nodeType":"YulVariableDeclaration","src":"19465:29:21","value":{"arguments":[{"name":"headStart","nativeSrc":"19484:9:21","nodeType":"YulIdentifier","src":"19484:9:21"}],"functionName":{"name":"mload","nativeSrc":"19478:5:21","nodeType":"YulIdentifier","src":"19478:5:21"},"nativeSrc":"19478:16:21","nodeType":"YulFunctionCall","src":"19478:16:21"},"variables":[{"name":"value","nativeSrc":"19469:5:21","nodeType":"YulTypedName","src":"19469:5:21","type":""}]},{"body":{"nativeSrc":"19542:16:21","nodeType":"YulBlock","src":"19542:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19551:1:21","nodeType":"YulLiteral","src":"19551:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"19554:1:21","nodeType":"YulLiteral","src":"19554:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"19544:6:21","nodeType":"YulIdentifier","src":"19544:6:21"},"nativeSrc":"19544:12:21","nodeType":"YulFunctionCall","src":"19544:12:21"},"nativeSrc":"19544:12:21","nodeType":"YulExpressionStatement","src":"19544:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"19516:5:21","nodeType":"YulIdentifier","src":"19516:5:21"},{"arguments":[{"name":"value","nativeSrc":"19527:5:21","nodeType":"YulIdentifier","src":"19527:5:21"},{"kind":"number","nativeSrc":"19534:4:21","nodeType":"YulLiteral","src":"19534:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"19523:3:21","nodeType":"YulIdentifier","src":"19523:3:21"},"nativeSrc":"19523:16:21","nodeType":"YulFunctionCall","src":"19523:16:21"}],"functionName":{"name":"eq","nativeSrc":"19513:2:21","nodeType":"YulIdentifier","src":"19513:2:21"},"nativeSrc":"19513:27:21","nodeType":"YulFunctionCall","src":"19513:27:21"}],"functionName":{"name":"iszero","nativeSrc":"19506:6:21","nodeType":"YulIdentifier","src":"19506:6:21"},"nativeSrc":"19506:35:21","nodeType":"YulFunctionCall","src":"19506:35:21"},"nativeSrc":"19503:55:21","nodeType":"YulIf","src":"19503:55:21"},{"nativeSrc":"19567:15:21","nodeType":"YulAssignment","src":"19567:15:21","value":{"name":"value","nativeSrc":"19577:5:21","nodeType":"YulIdentifier","src":"19577:5:21"},"variableNames":[{"name":"value0","nativeSrc":"19567:6:21","nodeType":"YulIdentifier","src":"19567:6:21"}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nativeSrc":"19315:273:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19360:9:21","nodeType":"YulTypedName","src":"19360:9:21","type":""},{"name":"dataEnd","nativeSrc":"19371:7:21","nodeType":"YulTypedName","src":"19371:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"19383:6:21","nodeType":"YulTypedName","src":"19383:6:21","type":""}],"src":"19315:273:21"},{"body":{"nativeSrc":"19657:412:21","nodeType":"YulBlock","src":"19657:412:21","statements":[{"nativeSrc":"19667:16:21","nodeType":"YulVariableDeclaration","src":"19667:16:21","value":{"kind":"number","nativeSrc":"19682:1:21","nodeType":"YulLiteral","src":"19682:1:21","type":"","value":"1"},"variables":[{"name":"power_1","nativeSrc":"19671:7:21","nodeType":"YulTypedName","src":"19671:7:21","type":""}]},{"nativeSrc":"19692:10:21","nodeType":"YulAssignment","src":"19692:10:21","value":{"kind":"number","nativeSrc":"19701:1:21","nodeType":"YulLiteral","src":"19701:1:21","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"19692:5:21","nodeType":"YulIdentifier","src":"19692:5:21"}]},{"nativeSrc":"19711:13:21","nodeType":"YulAssignment","src":"19711:13:21","value":{"name":"_base","nativeSrc":"19719:5:21","nodeType":"YulIdentifier","src":"19719:5:21"},"variableNames":[{"name":"base","nativeSrc":"19711:4:21","nodeType":"YulIdentifier","src":"19711:4:21"}]},{"body":{"nativeSrc":"19775:288:21","nodeType":"YulBlock","src":"19775:288:21","statements":[{"body":{"nativeSrc":"19880:22:21","nodeType":"YulBlock","src":"19880:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"19882:16:21","nodeType":"YulIdentifier","src":"19882:16:21"},"nativeSrc":"19882:18:21","nodeType":"YulFunctionCall","src":"19882:18:21"},"nativeSrc":"19882:18:21","nodeType":"YulExpressionStatement","src":"19882:18:21"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"19795:4:21","nodeType":"YulIdentifier","src":"19795:4:21"},{"arguments":[{"kind":"number","nativeSrc":"19805:66:21","nodeType":"YulLiteral","src":"19805:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"base","nativeSrc":"19873:4:21","nodeType":"YulIdentifier","src":"19873:4:21"}],"functionName":{"name":"div","nativeSrc":"19801:3:21","nodeType":"YulIdentifier","src":"19801:3:21"},"nativeSrc":"19801:77:21","nodeType":"YulFunctionCall","src":"19801:77:21"}],"functionName":{"name":"gt","nativeSrc":"19792:2:21","nodeType":"YulIdentifier","src":"19792:2:21"},"nativeSrc":"19792:87:21","nodeType":"YulFunctionCall","src":"19792:87:21"},"nativeSrc":"19789:113:21","nodeType":"YulIf","src":"19789:113:21"},{"body":{"nativeSrc":"19941:29:21","nodeType":"YulBlock","src":"19941:29:21","statements":[{"nativeSrc":"19943:25:21","nodeType":"YulAssignment","src":"19943:25:21","value":{"arguments":[{"name":"power","nativeSrc":"19956:5:21","nodeType":"YulIdentifier","src":"19956:5:21"},{"name":"base","nativeSrc":"19963:4:21","nodeType":"YulIdentifier","src":"19963:4:21"}],"functionName":{"name":"mul","nativeSrc":"19952:3:21","nodeType":"YulIdentifier","src":"19952:3:21"},"nativeSrc":"19952:16:21","nodeType":"YulFunctionCall","src":"19952:16:21"},"variableNames":[{"name":"power","nativeSrc":"19943:5:21","nodeType":"YulIdentifier","src":"19943:5:21"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"19922:8:21","nodeType":"YulIdentifier","src":"19922:8:21"},{"name":"power_1","nativeSrc":"19932:7:21","nodeType":"YulIdentifier","src":"19932:7:21"}],"functionName":{"name":"and","nativeSrc":"19918:3:21","nodeType":"YulIdentifier","src":"19918:3:21"},"nativeSrc":"19918:22:21","nodeType":"YulFunctionCall","src":"19918:22:21"},"nativeSrc":"19915:55:21","nodeType":"YulIf","src":"19915:55:21"},{"nativeSrc":"19983:23:21","nodeType":"YulAssignment","src":"19983:23:21","value":{"arguments":[{"name":"base","nativeSrc":"19995:4:21","nodeType":"YulIdentifier","src":"19995:4:21"},{"name":"base","nativeSrc":"20001:4:21","nodeType":"YulIdentifier","src":"20001:4:21"}],"functionName":{"name":"mul","nativeSrc":"19991:3:21","nodeType":"YulIdentifier","src":"19991:3:21"},"nativeSrc":"19991:15:21","nodeType":"YulFunctionCall","src":"19991:15:21"},"variableNames":[{"name":"base","nativeSrc":"19983:4:21","nodeType":"YulIdentifier","src":"19983:4:21"}]},{"nativeSrc":"20019:34:21","nodeType":"YulAssignment","src":"20019:34:21","value":{"arguments":[{"name":"power_1","nativeSrc":"20035:7:21","nodeType":"YulIdentifier","src":"20035:7:21"},{"name":"exponent","nativeSrc":"20044:8:21","nodeType":"YulIdentifier","src":"20044:8:21"}],"functionName":{"name":"shr","nativeSrc":"20031:3:21","nodeType":"YulIdentifier","src":"20031:3:21"},"nativeSrc":"20031:22:21","nodeType":"YulFunctionCall","src":"20031:22:21"},"variableNames":[{"name":"exponent","nativeSrc":"20019:8:21","nodeType":"YulIdentifier","src":"20019:8:21"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"19744:8:21","nodeType":"YulIdentifier","src":"19744:8:21"},{"name":"power_1","nativeSrc":"19754:7:21","nodeType":"YulIdentifier","src":"19754:7:21"}],"functionName":{"name":"gt","nativeSrc":"19741:2:21","nodeType":"YulIdentifier","src":"19741:2:21"},"nativeSrc":"19741:21:21","nodeType":"YulFunctionCall","src":"19741:21:21"},"nativeSrc":"19733:330:21","nodeType":"YulForLoop","post":{"nativeSrc":"19763:3:21","nodeType":"YulBlock","src":"19763:3:21","statements":[]},"pre":{"nativeSrc":"19737:3:21","nodeType":"YulBlock","src":"19737:3:21","statements":[]},"src":"19733:330:21"}]},"name":"checked_exp_helper","nativeSrc":"19593:476:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nativeSrc":"19621:5:21","nodeType":"YulTypedName","src":"19621:5:21","type":""},{"name":"exponent","nativeSrc":"19628:8:21","nodeType":"YulTypedName","src":"19628:8:21","type":""}],"returnVariables":[{"name":"power","nativeSrc":"19641:5:21","nodeType":"YulTypedName","src":"19641:5:21","type":""},{"name":"base","nativeSrc":"19648:4:21","nodeType":"YulTypedName","src":"19648:4:21","type":""}],"src":"19593:476:21"},{"body":{"nativeSrc":"20133:807:21","nodeType":"YulBlock","src":"20133:807:21","statements":[{"body":{"nativeSrc":"20171:52:21","nodeType":"YulBlock","src":"20171:52:21","statements":[{"nativeSrc":"20185:10:21","nodeType":"YulAssignment","src":"20185:10:21","value":{"kind":"number","nativeSrc":"20194:1:21","nodeType":"YulLiteral","src":"20194:1:21","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"20185:5:21","nodeType":"YulIdentifier","src":"20185:5:21"}]},{"nativeSrc":"20208:5:21","nodeType":"YulLeave","src":"20208:5:21"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"20153:8:21","nodeType":"YulIdentifier","src":"20153:8:21"}],"functionName":{"name":"iszero","nativeSrc":"20146:6:21","nodeType":"YulIdentifier","src":"20146:6:21"},"nativeSrc":"20146:16:21","nodeType":"YulFunctionCall","src":"20146:16:21"},"nativeSrc":"20143:80:21","nodeType":"YulIf","src":"20143:80:21"},{"body":{"nativeSrc":"20256:52:21","nodeType":"YulBlock","src":"20256:52:21","statements":[{"nativeSrc":"20270:10:21","nodeType":"YulAssignment","src":"20270:10:21","value":{"kind":"number","nativeSrc":"20279:1:21","nodeType":"YulLiteral","src":"20279:1:21","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"20270:5:21","nodeType":"YulIdentifier","src":"20270:5:21"}]},{"nativeSrc":"20293:5:21","nodeType":"YulLeave","src":"20293:5:21"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"20242:4:21","nodeType":"YulIdentifier","src":"20242:4:21"}],"functionName":{"name":"iszero","nativeSrc":"20235:6:21","nodeType":"YulIdentifier","src":"20235:6:21"},"nativeSrc":"20235:12:21","nodeType":"YulFunctionCall","src":"20235:12:21"},"nativeSrc":"20232:76:21","nodeType":"YulIf","src":"20232:76:21"},{"cases":[{"body":{"nativeSrc":"20344:52:21","nodeType":"YulBlock","src":"20344:52:21","statements":[{"nativeSrc":"20358:10:21","nodeType":"YulAssignment","src":"20358:10:21","value":{"kind":"number","nativeSrc":"20367:1:21","nodeType":"YulLiteral","src":"20367:1:21","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"20358:5:21","nodeType":"YulIdentifier","src":"20358:5:21"}]},{"nativeSrc":"20381:5:21","nodeType":"YulLeave","src":"20381:5:21"}]},"nativeSrc":"20337:59:21","nodeType":"YulCase","src":"20337:59:21","value":{"kind":"number","nativeSrc":"20342:1:21","nodeType":"YulLiteral","src":"20342:1:21","type":"","value":"1"}},{"body":{"nativeSrc":"20412:123:21","nodeType":"YulBlock","src":"20412:123:21","statements":[{"body":{"nativeSrc":"20447:22:21","nodeType":"YulBlock","src":"20447:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"20449:16:21","nodeType":"YulIdentifier","src":"20449:16:21"},"nativeSrc":"20449:18:21","nodeType":"YulFunctionCall","src":"20449:18:21"},"nativeSrc":"20449:18:21","nodeType":"YulExpressionStatement","src":"20449:18:21"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"20432:8:21","nodeType":"YulIdentifier","src":"20432:8:21"},{"kind":"number","nativeSrc":"20442:3:21","nodeType":"YulLiteral","src":"20442:3:21","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"20429:2:21","nodeType":"YulIdentifier","src":"20429:2:21"},"nativeSrc":"20429:17:21","nodeType":"YulFunctionCall","src":"20429:17:21"},"nativeSrc":"20426:43:21","nodeType":"YulIf","src":"20426:43:21"},{"nativeSrc":"20482:25:21","nodeType":"YulAssignment","src":"20482:25:21","value":{"arguments":[{"name":"exponent","nativeSrc":"20495:8:21","nodeType":"YulIdentifier","src":"20495:8:21"},{"kind":"number","nativeSrc":"20505:1:21","nodeType":"YulLiteral","src":"20505:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"20491:3:21","nodeType":"YulIdentifier","src":"20491:3:21"},"nativeSrc":"20491:16:21","nodeType":"YulFunctionCall","src":"20491:16:21"},"variableNames":[{"name":"power","nativeSrc":"20482:5:21","nodeType":"YulIdentifier","src":"20482:5:21"}]},{"nativeSrc":"20520:5:21","nodeType":"YulLeave","src":"20520:5:21"}]},"nativeSrc":"20405:130:21","nodeType":"YulCase","src":"20405:130:21","value":{"kind":"number","nativeSrc":"20410:1:21","nodeType":"YulLiteral","src":"20410:1:21","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"20324:4:21","nodeType":"YulIdentifier","src":"20324:4:21"},"nativeSrc":"20317:218:21","nodeType":"YulSwitch","src":"20317:218:21"},{"body":{"nativeSrc":"20633:70:21","nodeType":"YulBlock","src":"20633:70:21","statements":[{"nativeSrc":"20647:28:21","nodeType":"YulAssignment","src":"20647:28:21","value":{"arguments":[{"name":"base","nativeSrc":"20660:4:21","nodeType":"YulIdentifier","src":"20660:4:21"},{"name":"exponent","nativeSrc":"20666:8:21","nodeType":"YulIdentifier","src":"20666:8:21"}],"functionName":{"name":"exp","nativeSrc":"20656:3:21","nodeType":"YulIdentifier","src":"20656:3:21"},"nativeSrc":"20656:19:21","nodeType":"YulFunctionCall","src":"20656:19:21"},"variableNames":[{"name":"power","nativeSrc":"20647:5:21","nodeType":"YulIdentifier","src":"20647:5:21"}]},{"nativeSrc":"20688:5:21","nodeType":"YulLeave","src":"20688:5:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"20557:4:21","nodeType":"YulIdentifier","src":"20557:4:21"},{"kind":"number","nativeSrc":"20563:2:21","nodeType":"YulLiteral","src":"20563:2:21","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"20554:2:21","nodeType":"YulIdentifier","src":"20554:2:21"},"nativeSrc":"20554:12:21","nodeType":"YulFunctionCall","src":"20554:12:21"},{"arguments":[{"name":"exponent","nativeSrc":"20571:8:21","nodeType":"YulIdentifier","src":"20571:8:21"},{"kind":"number","nativeSrc":"20581:2:21","nodeType":"YulLiteral","src":"20581:2:21","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"20568:2:21","nodeType":"YulIdentifier","src":"20568:2:21"},"nativeSrc":"20568:16:21","nodeType":"YulFunctionCall","src":"20568:16:21"}],"functionName":{"name":"and","nativeSrc":"20550:3:21","nodeType":"YulIdentifier","src":"20550:3:21"},"nativeSrc":"20550:35:21","nodeType":"YulFunctionCall","src":"20550:35:21"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"20594:4:21","nodeType":"YulIdentifier","src":"20594:4:21"},{"kind":"number","nativeSrc":"20600:3:21","nodeType":"YulLiteral","src":"20600:3:21","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"20591:2:21","nodeType":"YulIdentifier","src":"20591:2:21"},"nativeSrc":"20591:13:21","nodeType":"YulFunctionCall","src":"20591:13:21"},{"arguments":[{"name":"exponent","nativeSrc":"20609:8:21","nodeType":"YulIdentifier","src":"20609:8:21"},{"kind":"number","nativeSrc":"20619:2:21","nodeType":"YulLiteral","src":"20619:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"20606:2:21","nodeType":"YulIdentifier","src":"20606:2:21"},"nativeSrc":"20606:16:21","nodeType":"YulFunctionCall","src":"20606:16:21"}],"functionName":{"name":"and","nativeSrc":"20587:3:21","nodeType":"YulIdentifier","src":"20587:3:21"},"nativeSrc":"20587:36:21","nodeType":"YulFunctionCall","src":"20587:36:21"}],"functionName":{"name":"or","nativeSrc":"20547:2:21","nodeType":"YulIdentifier","src":"20547:2:21"},"nativeSrc":"20547:77:21","nodeType":"YulFunctionCall","src":"20547:77:21"},"nativeSrc":"20544:159:21","nodeType":"YulIf","src":"20544:159:21"},{"nativeSrc":"20712:57:21","nodeType":"YulVariableDeclaration","src":"20712:57:21","value":{"arguments":[{"name":"base","nativeSrc":"20754:4:21","nodeType":"YulIdentifier","src":"20754:4:21"},{"name":"exponent","nativeSrc":"20760:8:21","nodeType":"YulIdentifier","src":"20760:8:21"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"20735:18:21","nodeType":"YulIdentifier","src":"20735:18:21"},"nativeSrc":"20735:34:21","nodeType":"YulFunctionCall","src":"20735:34:21"},"variables":[{"name":"power_1","nativeSrc":"20716:7:21","nodeType":"YulTypedName","src":"20716:7:21","type":""},{"name":"base_1","nativeSrc":"20725:6:21","nodeType":"YulTypedName","src":"20725:6:21","type":""}]},{"body":{"nativeSrc":"20874:22:21","nodeType":"YulBlock","src":"20874:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"20876:16:21","nodeType":"YulIdentifier","src":"20876:16:21"},"nativeSrc":"20876:18:21","nodeType":"YulFunctionCall","src":"20876:18:21"},"nativeSrc":"20876:18:21","nodeType":"YulExpressionStatement","src":"20876:18:21"}]},"condition":{"arguments":[{"name":"power_1","nativeSrc":"20784:7:21","nodeType":"YulIdentifier","src":"20784:7:21"},{"arguments":[{"kind":"number","nativeSrc":"20797:66:21","nodeType":"YulLiteral","src":"20797:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"base_1","nativeSrc":"20865:6:21","nodeType":"YulIdentifier","src":"20865:6:21"}],"functionName":{"name":"div","nativeSrc":"20793:3:21","nodeType":"YulIdentifier","src":"20793:3:21"},"nativeSrc":"20793:79:21","nodeType":"YulFunctionCall","src":"20793:79:21"}],"functionName":{"name":"gt","nativeSrc":"20781:2:21","nodeType":"YulIdentifier","src":"20781:2:21"},"nativeSrc":"20781:92:21","nodeType":"YulFunctionCall","src":"20781:92:21"},"nativeSrc":"20778:118:21","nodeType":"YulIf","src":"20778:118:21"},{"nativeSrc":"20905:29:21","nodeType":"YulAssignment","src":"20905:29:21","value":{"arguments":[{"name":"power_1","nativeSrc":"20918:7:21","nodeType":"YulIdentifier","src":"20918:7:21"},{"name":"base_1","nativeSrc":"20927:6:21","nodeType":"YulIdentifier","src":"20927:6:21"}],"functionName":{"name":"mul","nativeSrc":"20914:3:21","nodeType":"YulIdentifier","src":"20914:3:21"},"nativeSrc":"20914:20:21","nodeType":"YulFunctionCall","src":"20914:20:21"},"variableNames":[{"name":"power","nativeSrc":"20905:5:21","nodeType":"YulIdentifier","src":"20905:5:21"}]}]},"name":"checked_exp_unsigned","nativeSrc":"20074:866:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"20104:4:21","nodeType":"YulTypedName","src":"20104:4:21","type":""},{"name":"exponent","nativeSrc":"20110:8:21","nodeType":"YulTypedName","src":"20110:8:21","type":""}],"returnVariables":[{"name":"power","nativeSrc":"20123:5:21","nodeType":"YulTypedName","src":"20123:5:21","type":""}],"src":"20074:866:21"},{"body":{"nativeSrc":"21015:61:21","nodeType":"YulBlock","src":"21015:61:21","statements":[{"nativeSrc":"21025:45:21","nodeType":"YulAssignment","src":"21025:45:21","value":{"arguments":[{"name":"base","nativeSrc":"21055:4:21","nodeType":"YulIdentifier","src":"21055:4:21"},{"name":"exponent","nativeSrc":"21061:8:21","nodeType":"YulIdentifier","src":"21061:8:21"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"21034:20:21","nodeType":"YulIdentifier","src":"21034:20:21"},"nativeSrc":"21034:36:21","nodeType":"YulFunctionCall","src":"21034:36:21"},"variableNames":[{"name":"power","nativeSrc":"21025:5:21","nodeType":"YulIdentifier","src":"21025:5:21"}]}]},"name":"checked_exp_t_uint256_t_uint256","nativeSrc":"20945:131:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"20986:4:21","nodeType":"YulTypedName","src":"20986:4:21","type":""},{"name":"exponent","nativeSrc":"20992:8:21","nodeType":"YulTypedName","src":"20992:8:21","type":""}],"returnVariables":[{"name":"power","nativeSrc":"21005:5:21","nodeType":"YulTypedName","src":"21005:5:21","type":""}],"src":"20945:131:21"},{"body":{"nativeSrc":"21255:177:21","nodeType":"YulBlock","src":"21255:177:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"21272:9:21","nodeType":"YulIdentifier","src":"21272:9:21"},{"kind":"number","nativeSrc":"21283:2:21","nodeType":"YulLiteral","src":"21283:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"21265:6:21","nodeType":"YulIdentifier","src":"21265:6:21"},"nativeSrc":"21265:21:21","nodeType":"YulFunctionCall","src":"21265:21:21"},"nativeSrc":"21265:21:21","nodeType":"YulExpressionStatement","src":"21265:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21306:9:21","nodeType":"YulIdentifier","src":"21306:9:21"},{"kind":"number","nativeSrc":"21317:2:21","nodeType":"YulLiteral","src":"21317:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21302:3:21","nodeType":"YulIdentifier","src":"21302:3:21"},"nativeSrc":"21302:18:21","nodeType":"YulFunctionCall","src":"21302:18:21"},{"kind":"number","nativeSrc":"21322:2:21","nodeType":"YulLiteral","src":"21322:2:21","type":"","value":"27"}],"functionName":{"name":"mstore","nativeSrc":"21295:6:21","nodeType":"YulIdentifier","src":"21295:6:21"},"nativeSrc":"21295:30:21","nodeType":"YulFunctionCall","src":"21295:30:21"},"nativeSrc":"21295:30:21","nodeType":"YulExpressionStatement","src":"21295:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21345:9:21","nodeType":"YulIdentifier","src":"21345:9:21"},{"kind":"number","nativeSrc":"21356:2:21","nodeType":"YulLiteral","src":"21356:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21341:3:21","nodeType":"YulIdentifier","src":"21341:3:21"},"nativeSrc":"21341:18:21","nodeType":"YulFunctionCall","src":"21341:18:21"},{"hexValue":"496e76616c696420746f6b656e20616d6f756e7420746f20616464","kind":"string","nativeSrc":"21361:29:21","nodeType":"YulLiteral","src":"21361:29:21","type":"","value":"Invalid token amount to add"}],"functionName":{"name":"mstore","nativeSrc":"21334:6:21","nodeType":"YulIdentifier","src":"21334:6:21"},"nativeSrc":"21334:57:21","nodeType":"YulFunctionCall","src":"21334:57:21"},"nativeSrc":"21334:57:21","nodeType":"YulExpressionStatement","src":"21334:57:21"},{"nativeSrc":"21400:26:21","nodeType":"YulAssignment","src":"21400:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"21412:9:21","nodeType":"YulIdentifier","src":"21412:9:21"},{"kind":"number","nativeSrc":"21423:2:21","nodeType":"YulLiteral","src":"21423:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21408:3:21","nodeType":"YulIdentifier","src":"21408:3:21"},"nativeSrc":"21408:18:21","nodeType":"YulFunctionCall","src":"21408:18:21"},"variableNames":[{"name":"tail","nativeSrc":"21400:4:21","nodeType":"YulIdentifier","src":"21400:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_231381c7ce9cab5a06140be844586c7572b2dd117d8de83c9f9bda39108cd19d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"21081:351:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21232:9:21","nodeType":"YulTypedName","src":"21232:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21246:4:21","nodeType":"YulTypedName","src":"21246:4:21","type":""}],"src":"21081:351:21"},{"body":{"nativeSrc":"21594:211:21","nodeType":"YulBlock","src":"21594:211:21","statements":[{"nativeSrc":"21604:26:21","nodeType":"YulAssignment","src":"21604:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"21616:9:21","nodeType":"YulIdentifier","src":"21616:9:21"},{"kind":"number","nativeSrc":"21627:2:21","nodeType":"YulLiteral","src":"21627:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21612:3:21","nodeType":"YulIdentifier","src":"21612:3:21"},"nativeSrc":"21612:18:21","nodeType":"YulFunctionCall","src":"21612:18:21"},"variableNames":[{"name":"tail","nativeSrc":"21604:4:21","nodeType":"YulIdentifier","src":"21604:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"21646:9:21","nodeType":"YulIdentifier","src":"21646:9:21"},{"arguments":[{"name":"value0","nativeSrc":"21661:6:21","nodeType":"YulIdentifier","src":"21661:6:21"},{"kind":"number","nativeSrc":"21669:42:21","nodeType":"YulLiteral","src":"21669:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"21657:3:21","nodeType":"YulIdentifier","src":"21657:3:21"},"nativeSrc":"21657:55:21","nodeType":"YulFunctionCall","src":"21657:55:21"}],"functionName":{"name":"mstore","nativeSrc":"21639:6:21","nodeType":"YulIdentifier","src":"21639:6:21"},"nativeSrc":"21639:74:21","nodeType":"YulFunctionCall","src":"21639:74:21"},"nativeSrc":"21639:74:21","nodeType":"YulExpressionStatement","src":"21639:74:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21733:9:21","nodeType":"YulIdentifier","src":"21733:9:21"},{"kind":"number","nativeSrc":"21744:2:21","nodeType":"YulLiteral","src":"21744:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21729:3:21","nodeType":"YulIdentifier","src":"21729:3:21"},"nativeSrc":"21729:18:21","nodeType":"YulFunctionCall","src":"21729:18:21"},{"name":"value1","nativeSrc":"21749:6:21","nodeType":"YulIdentifier","src":"21749:6:21"}],"functionName":{"name":"mstore","nativeSrc":"21722:6:21","nodeType":"YulIdentifier","src":"21722:6:21"},"nativeSrc":"21722:34:21","nodeType":"YulFunctionCall","src":"21722:34:21"},"nativeSrc":"21722:34:21","nodeType":"YulExpressionStatement","src":"21722:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21776:9:21","nodeType":"YulIdentifier","src":"21776:9:21"},{"kind":"number","nativeSrc":"21787:2:21","nodeType":"YulLiteral","src":"21787:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21772:3:21","nodeType":"YulIdentifier","src":"21772:3:21"},"nativeSrc":"21772:18:21","nodeType":"YulFunctionCall","src":"21772:18:21"},{"name":"value2","nativeSrc":"21792:6:21","nodeType":"YulIdentifier","src":"21792:6:21"}],"functionName":{"name":"mstore","nativeSrc":"21765:6:21","nodeType":"YulIdentifier","src":"21765:6:21"},"nativeSrc":"21765:34:21","nodeType":"YulFunctionCall","src":"21765:34:21"},"nativeSrc":"21765:34:21","nodeType":"YulExpressionStatement","src":"21765:34:21"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"21437:368:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21547:9:21","nodeType":"YulTypedName","src":"21547:9:21","type":""},{"name":"value2","nativeSrc":"21558:6:21","nodeType":"YulTypedName","src":"21558:6:21","type":""},{"name":"value1","nativeSrc":"21566:6:21","nodeType":"YulTypedName","src":"21566:6:21","type":""},{"name":"value0","nativeSrc":"21574:6:21","nodeType":"YulTypedName","src":"21574:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21585:4:21","nodeType":"YulTypedName","src":"21585:4:21","type":""}],"src":"21437:368:21"},{"body":{"nativeSrc":"22229:627:21","nodeType":"YulBlock","src":"22229:627:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"22246:9:21","nodeType":"YulIdentifier","src":"22246:9:21"},{"kind":"number","nativeSrc":"22257:3:21","nodeType":"YulLiteral","src":"22257:3:21","type":"","value":"224"}],"functionName":{"name":"mstore","nativeSrc":"22239:6:21","nodeType":"YulIdentifier","src":"22239:6:21"},"nativeSrc":"22239:22:21","nodeType":"YulFunctionCall","src":"22239:22:21"},"nativeSrc":"22239:22:21","nodeType":"YulExpressionStatement","src":"22239:22:21"},{"nativeSrc":"22270:71:21","nodeType":"YulVariableDeclaration","src":"22270:71:21","value":{"arguments":[{"name":"value0","nativeSrc":"22313:6:21","nodeType":"YulIdentifier","src":"22313:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"22325:9:21","nodeType":"YulIdentifier","src":"22325:9:21"},{"kind":"number","nativeSrc":"22336:3:21","nodeType":"YulLiteral","src":"22336:3:21","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"22321:3:21","nodeType":"YulIdentifier","src":"22321:3:21"},"nativeSrc":"22321:19:21","nodeType":"YulFunctionCall","src":"22321:19:21"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"22284:28:21","nodeType":"YulIdentifier","src":"22284:28:21"},"nativeSrc":"22284:57:21","nodeType":"YulFunctionCall","src":"22284:57:21"},"variables":[{"name":"tail_1","nativeSrc":"22274:6:21","nodeType":"YulTypedName","src":"22274:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22361:9:21","nodeType":"YulIdentifier","src":"22361:9:21"},{"kind":"number","nativeSrc":"22372:2:21","nodeType":"YulLiteral","src":"22372:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22357:3:21","nodeType":"YulIdentifier","src":"22357:3:21"},"nativeSrc":"22357:18:21","nodeType":"YulFunctionCall","src":"22357:18:21"},{"arguments":[{"name":"tail_1","nativeSrc":"22381:6:21","nodeType":"YulIdentifier","src":"22381:6:21"},{"name":"headStart","nativeSrc":"22389:9:21","nodeType":"YulIdentifier","src":"22389:9:21"}],"functionName":{"name":"sub","nativeSrc":"22377:3:21","nodeType":"YulIdentifier","src":"22377:3:21"},"nativeSrc":"22377:22:21","nodeType":"YulFunctionCall","src":"22377:22:21"}],"functionName":{"name":"mstore","nativeSrc":"22350:6:21","nodeType":"YulIdentifier","src":"22350:6:21"},"nativeSrc":"22350:50:21","nodeType":"YulFunctionCall","src":"22350:50:21"},"nativeSrc":"22350:50:21","nodeType":"YulExpressionStatement","src":"22350:50:21"},{"nativeSrc":"22409:58:21","nodeType":"YulVariableDeclaration","src":"22409:58:21","value":{"arguments":[{"name":"value1","nativeSrc":"22452:6:21","nodeType":"YulIdentifier","src":"22452:6:21"},{"name":"tail_1","nativeSrc":"22460:6:21","nodeType":"YulIdentifier","src":"22460:6:21"}],"functionName":{"name":"abi_encode_array_address_dyn","nativeSrc":"22423:28:21","nodeType":"YulIdentifier","src":"22423:28:21"},"nativeSrc":"22423:44:21","nodeType":"YulFunctionCall","src":"22423:44:21"},"variables":[{"name":"tail_2","nativeSrc":"22413:6:21","nodeType":"YulTypedName","src":"22413:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22487:9:21","nodeType":"YulIdentifier","src":"22487:9:21"},{"kind":"number","nativeSrc":"22498:2:21","nodeType":"YulLiteral","src":"22498:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22483:3:21","nodeType":"YulIdentifier","src":"22483:3:21"},"nativeSrc":"22483:18:21","nodeType":"YulFunctionCall","src":"22483:18:21"},{"arguments":[{"name":"tail_2","nativeSrc":"22507:6:21","nodeType":"YulIdentifier","src":"22507:6:21"},{"name":"headStart","nativeSrc":"22515:9:21","nodeType":"YulIdentifier","src":"22515:9:21"}],"functionName":{"name":"sub","nativeSrc":"22503:3:21","nodeType":"YulIdentifier","src":"22503:3:21"},"nativeSrc":"22503:22:21","nodeType":"YulFunctionCall","src":"22503:22:21"}],"functionName":{"name":"mstore","nativeSrc":"22476:6:21","nodeType":"YulIdentifier","src":"22476:6:21"},"nativeSrc":"22476:50:21","nodeType":"YulFunctionCall","src":"22476:50:21"},"nativeSrc":"22476:50:21","nodeType":"YulExpressionStatement","src":"22476:50:21"},{"nativeSrc":"22535:52:21","nodeType":"YulAssignment","src":"22535:52:21","value":{"arguments":[{"name":"value2","nativeSrc":"22572:6:21","nodeType":"YulIdentifier","src":"22572:6:21"},{"name":"tail_2","nativeSrc":"22580:6:21","nodeType":"YulIdentifier","src":"22580:6:21"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"22543:28:21","nodeType":"YulIdentifier","src":"22543:28:21"},"nativeSrc":"22543:44:21","nodeType":"YulFunctionCall","src":"22543:44:21"},"variableNames":[{"name":"tail","nativeSrc":"22535:4:21","nodeType":"YulIdentifier","src":"22535:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22607:9:21","nodeType":"YulIdentifier","src":"22607:9:21"},{"kind":"number","nativeSrc":"22618:2:21","nodeType":"YulLiteral","src":"22618:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"22603:3:21","nodeType":"YulIdentifier","src":"22603:3:21"},"nativeSrc":"22603:18:21","nodeType":"YulFunctionCall","src":"22603:18:21"},{"name":"value3","nativeSrc":"22623:6:21","nodeType":"YulIdentifier","src":"22623:6:21"}],"functionName":{"name":"mstore","nativeSrc":"22596:6:21","nodeType":"YulIdentifier","src":"22596:6:21"},"nativeSrc":"22596:34:21","nodeType":"YulFunctionCall","src":"22596:34:21"},"nativeSrc":"22596:34:21","nodeType":"YulExpressionStatement","src":"22596:34:21"},{"nativeSrc":"22639:52:21","nodeType":"YulVariableDeclaration","src":"22639:52:21","value":{"kind":"number","nativeSrc":"22649:42:21","nodeType":"YulLiteral","src":"22649:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"22643:2:21","nodeType":"YulTypedName","src":"22643:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22711:9:21","nodeType":"YulIdentifier","src":"22711:9:21"},{"kind":"number","nativeSrc":"22722:3:21","nodeType":"YulLiteral","src":"22722:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"22707:3:21","nodeType":"YulIdentifier","src":"22707:3:21"},"nativeSrc":"22707:19:21","nodeType":"YulFunctionCall","src":"22707:19:21"},{"arguments":[{"name":"value4","nativeSrc":"22732:6:21","nodeType":"YulIdentifier","src":"22732:6:21"},{"name":"_1","nativeSrc":"22740:2:21","nodeType":"YulIdentifier","src":"22740:2:21"}],"functionName":{"name":"and","nativeSrc":"22728:3:21","nodeType":"YulIdentifier","src":"22728:3:21"},"nativeSrc":"22728:15:21","nodeType":"YulFunctionCall","src":"22728:15:21"}],"functionName":{"name":"mstore","nativeSrc":"22700:6:21","nodeType":"YulIdentifier","src":"22700:6:21"},"nativeSrc":"22700:44:21","nodeType":"YulFunctionCall","src":"22700:44:21"},"nativeSrc":"22700:44:21","nodeType":"YulExpressionStatement","src":"22700:44:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22764:9:21","nodeType":"YulIdentifier","src":"22764:9:21"},{"kind":"number","nativeSrc":"22775:3:21","nodeType":"YulLiteral","src":"22775:3:21","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"22760:3:21","nodeType":"YulIdentifier","src":"22760:3:21"},"nativeSrc":"22760:19:21","nodeType":"YulFunctionCall","src":"22760:19:21"},{"arguments":[{"name":"value5","nativeSrc":"22785:6:21","nodeType":"YulIdentifier","src":"22785:6:21"},{"name":"_1","nativeSrc":"22793:2:21","nodeType":"YulIdentifier","src":"22793:2:21"}],"functionName":{"name":"and","nativeSrc":"22781:3:21","nodeType":"YulIdentifier","src":"22781:3:21"},"nativeSrc":"22781:15:21","nodeType":"YulFunctionCall","src":"22781:15:21"}],"functionName":{"name":"mstore","nativeSrc":"22753:6:21","nodeType":"YulIdentifier","src":"22753:6:21"},"nativeSrc":"22753:44:21","nodeType":"YulFunctionCall","src":"22753:44:21"},"nativeSrc":"22753:44:21","nodeType":"YulExpressionStatement","src":"22753:44:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22817:9:21","nodeType":"YulIdentifier","src":"22817:9:21"},{"kind":"number","nativeSrc":"22828:3:21","nodeType":"YulLiteral","src":"22828:3:21","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"22813:3:21","nodeType":"YulIdentifier","src":"22813:3:21"},"nativeSrc":"22813:19:21","nodeType":"YulFunctionCall","src":"22813:19:21"},{"arguments":[{"name":"value6","nativeSrc":"22838:6:21","nodeType":"YulIdentifier","src":"22838:6:21"},{"name":"_1","nativeSrc":"22846:2:21","nodeType":"YulIdentifier","src":"22846:2:21"}],"functionName":{"name":"and","nativeSrc":"22834:3:21","nodeType":"YulIdentifier","src":"22834:3:21"},"nativeSrc":"22834:15:21","nodeType":"YulFunctionCall","src":"22834:15:21"}],"functionName":{"name":"mstore","nativeSrc":"22806:6:21","nodeType":"YulIdentifier","src":"22806:6:21"},"nativeSrc":"22806:44:21","nodeType":"YulFunctionCall","src":"22806:44:21"},"nativeSrc":"22806:44:21","nodeType":"YulExpressionStatement","src":"22806:44:21"}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address_t_address_t_address__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address_t_address_t_address__fromStack_reversed","nativeSrc":"21810:1046:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22150:9:21","nodeType":"YulTypedName","src":"22150:9:21","type":""},{"name":"value6","nativeSrc":"22161:6:21","nodeType":"YulTypedName","src":"22161:6:21","type":""},{"name":"value5","nativeSrc":"22169:6:21","nodeType":"YulTypedName","src":"22169:6:21","type":""},{"name":"value4","nativeSrc":"22177:6:21","nodeType":"YulTypedName","src":"22177:6:21","type":""},{"name":"value3","nativeSrc":"22185:6:21","nodeType":"YulTypedName","src":"22185:6:21","type":""},{"name":"value2","nativeSrc":"22193:6:21","nodeType":"YulTypedName","src":"22193:6:21","type":""},{"name":"value1","nativeSrc":"22201:6:21","nodeType":"YulTypedName","src":"22201:6:21","type":""},{"name":"value0","nativeSrc":"22209:6:21","nodeType":"YulTypedName","src":"22209:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22220:4:21","nodeType":"YulTypedName","src":"22220:4:21","type":""}],"src":"21810:1046:21"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_array_uint256_dyn(value1, add(headStart, 64))\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_address_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let value_2 := calldataload(add(headStart, 96))\n        validator_revert_address(value_2)\n        value3 := value_2\n    }\n    function abi_encode_tuple_t_contract$_IBaluniV1Registry_$4898__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_array$_t_bool_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_bool_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 64)\n        mstore(headStart, 64)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 96)\n        let _1 := 0x20\n        let srcPtr := add(value0, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, iszero(iszero(mload(srcPtr))))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, 0x20), sub(pos, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, pos)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_2, shl(5, _3)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n        }\n        value1 := dst_1\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e84ca658204d8225a6124393bf429fae79ddb71fa88578d833d3a2b9b5da52d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Only Periphery\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Rebalance not needed\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_2, shl(5, _3)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_encode_tuple_t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid oracle address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_6f3b6914a8f4e42f0dc4d6fcf60d1470463793693c123b4b0782b9cd43668c23__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Cannot swap the same token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Amount must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Insufficient Liquidity\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_293eab1376cea4527a492c75c5b4d240032b8920c86961428e65758e4fd3daec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Amount to send must be greater t\")\n        mstore(add(headStart, 96), \"han 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_37b2136db8906a0fa9dcfb36fa22f3e5724d70ae1dfd30e29853723b16bc684b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Share must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"No liquidity\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_fc2f8692ca59eb8838d740ab96a08e7dab54c967cc56eb0a9b640ce78eb1103e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Insufficient BALUNI liquidity\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Fee transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b105b0b4a7ff5c11f41135d6d4600fd47da6168663f6cb1810745b08d83918__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid asset index\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_788ce755d61da147edad70af92467c8a383af859573990e9defde5b6e0bdf24d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Invalid reserves length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_195739df032cb3c07c5ed70a4cae73c5d077df4296263c6db3d1f3b4671efbd0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"No assets\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_e8ec4a06d76118e3b24afbc30b183e086aa6aaa6e137c81160fc8d59e1a33e3f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Total value must be greater than\")\n        mstore(add(headStart, 96), \" 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a245c00c976af272c663e732300fe860097516364a0d92887494f54e860fa54c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Total liquidity must be greater \")\n        mstore(add(headStart, 96), \"than 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_50327403b25acc6e0d15796c676b8320f8d9ffcece005326d31f4226e4f741bb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Mint qty is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function abi_encode_tuple_t_stringliteral_231381c7ce9cab5a06140be844586c7572b2dd117d8de83c9f9bda39108cd19d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Invalid token amount to add\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address_t_address_t_address__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address_t_address_t_address__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 224)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 224))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_address_dyn(value1, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        tail := abi_encode_array_uint256_dyn(value2, tail_2)\n        mstore(add(headStart, 96), value3)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), and(value5, _1))\n        mstore(add(headStart, 192), and(value6, _1))\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561000f575f80fd5b50600436106101d1575f3560e01c80637fec8d38116100fe578063c2ee3a081161009e578063dd62ed3e1161006e578063dd62ed3e146103ef578063de836ebd14610427578063e73faa2d1461043a578063f47b45e814610442575f80fd5b8063c2ee3a081461038e578063cdf456e114610397578063cf8fa764146103aa578063d14ef46d146103bd575f80fd5b80638a77c8dc116100d95780638a77c8dc1461035857806395d89b4114610360578063a9059cbb14610368578063b2b55d701461037b575f80fd5b80637fec8d381461032657806389ab35321461032f57806389afcb4414610345575f80fd5b806323b872dd1161017457806367e4ac2c1161014457806367e4ac2c146102ab5780636e81221c146102c057806370a08231146102d35780637b103999146102fb575f80fd5b806323b872dd14610260578063313ce5671461027357806336bf6e39146102825780634aa0665214610298575f80fd5b8063095ea7b3116101af578063095ea7b31461021b57806318160ddd1461023e5780631a6865021461025057806322acb86714610258575f80fd5b806306fdde03146101d55780630723c999146101f35780630902f1ac14610213575b5f80fd5b6101dd610458565b6040516101ea9190612ddd565b60405180910390f35b610206610201366004612e47565b6104e8565b6040516101ea9190612e9c565b610206610762565b61022e610229366004612eae565b610881565b60405190151581526020016101ea565b6002545b6040519081526020016101ea565b61024261089a565b6102066108ab565b61022e61026e366004612ed8565b61094b565b604051601281526020016101ea565b61028a61096e565b6040516101ea929190612f16565b6102426102a6366004612ed8565b610982565b6102b3610b6b565b6040516101ea9190612f66565b6102426102ce366004612f78565b610c26565b6102426102e1366004612e47565b6001600160a01b03165f9081526020819052604090205490565b600b5461030e906001600160a01b031681565b6040516001600160a01b0390911681526020016101ea565b61024260075481565b610337610edb565b6040516101ea929190612fc8565b610206610353366004612e47565b611096565b61022e6116a9565b6101dd611723565b61022e610376366004612eae565b611732565b610242610389366004612e47565b61173f565b61024260085481565b60095461030e906001600160a01b031681565b6102426103b8366004613017565b611847565b6103d06103cb366004613017565b6118c6565b604080516001600160a01b0390931683526020830191909152016101ea565b6102426103fd36600461302e565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b610242610435366004613104565b6118fc565b610242611d12565b61044a611dfa565b6040516101ea9291906131aa565b606060038054610467906131d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610493906131d7565b80156104de5780601f106104b5576101008083540402835291602001916104de565b820191905f5260205f20905b8154815290600101906020018083116104c157829003601f168201915b5050505050905090565b60605f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa15801561053b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061055f9190613222565b9050336001600160a01b038216146105be5760405162461bcd60e51b815260206004820152600e60248201527f4f6e6c792050657269706865727900000000000000000000000000000000000060448201526064015b60405180910390fd5b6105c66116a9565b6106125760405162461bcd60e51b815260206004820152601460248201527f526562616c616e6365206e6f74206e656564656400000000000000000000000060448201526064016105b5565b5f8061061c611f31565b915091505f61062b8383612061565b90505f61063782612163565b9050600a5481610647919061326a565b6006549091505f9067ffffffffffffffff81111561066757610667613065565b604051908082528060200260200182016040528015610690578160200160208202803683370190505b5090505f5b8351811015610709575f8482815181106106b1576106b1613281565b60200260200101511115610701576106e2818583815181106106d5576106d5613281565b602002602001015161219f565b8282815181106106f4576106f4613281565b6020026020010181815250505b600101610695565b50610714888361226f565b336001600160a01b03167fa95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e8460405161074d9190612e9c565b60405180910390a29550505050505b50919050565b60605f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107b5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107d99190613222565b6040517f3e99c1e40000000000000000000000000000000000000000000000000000000081523060048201529091506001600160a01b03821690633e99c1e4906024015f60405180830381865afa158015610836573d5f803e3d5ffd5b505050506040513d5f823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261087b91908101906132ae565b91505090565b5f3361088e8185856122c0565b60019150505b92915050565b5f806108a4611f31565b5092915050565b6006546060905f9067ffffffffffffffff8111156108cb576108cb613065565b6040519080825280602002602001820160405280156108f4578160200160208202803683370190505b5090505f5b60065481101561075c576006818154811061091657610916613281565b905f5260205f2090600202016001015482828151811061093857610938613281565b60209081029190910101526001016108f9565b5f336109588582856122d2565b610963858585612385565b506001949350505050565b5f6060610979611f31565b90939092509050565b5f80600b5f9054906101000a90046001600160a01b03166001600160a01b031663bb3ba04c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109d4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109f89190613222565b90505f6001600160a01b0316600b5f9054906101000a90046001600160a01b03166001600160a01b031663bb3ba04c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a54573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a789190613222565b6001600160a01b031603610ace5760405162461bcd60e51b815260206004820152601660248201527f496e76616c6964206f7261636c6520616464726573730000000000000000000060448201526064016105b5565b6040517f248391ff0000000000000000000000000000000000000000000000000000000081526001600160a01b0386811660048301528581166024830152604482018590525f919083169063248391ff90606401602060405180830381865afa158015610b3d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b61919061333a565b9695505050505050565b6006546060905f9067ffffffffffffffff811115610b8b57610b8b613065565b604051908082528060200260200182016040528015610bb4578160200160208202803683370190505b5090505f5b60065481101561075c5760068181548110610bd657610bd6613281565b5f91825260209091206002909102015482516001600160a01b0390911690839083908110610c0657610c06613281565b6001600160a01b0390921660209283029190910190910152600101610bb9565b5f610c2f612414565b600b54604080517f85462d6f00000000000000000000000000000000000000000000000000000000815290515f926001600160a01b0316916385462d6f9160048083019260209291908290030181865afa158015610c8f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cb3919061333a565b9050846001600160a01b0316866001600160a01b031603610d165760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742073776170207468652073616d6520746f6b656e00000000000060448201526064016105b5565b5f8411610d655760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064016105b5565b5f610d71878787610982565b905080610d7d8761173f565b1015610dcb5760405162461bcd60e51b815260206004820152601660248201527f496e73756666696369656e74204c69717569646974790000000000000000000060448201526064016105b5565b5f612710610dd9848461326a565b610de39190613351565b9050610def8183613389565b93505f8411610e665760405162461bcd60e51b815260206004820152602560248201527f416d6f756e7420746f2073656e64206d7573742062652067726561746572207460448201527f68616e203000000000000000000000000000000000000000000000000000000060648201526084016105b5565b866001600160a01b0316886001600160a01b0316866001600160a01b03167fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460628988604051610ebe929190918252602082015260400190565b60405180910390a4505050610ed36001600555565b949350505050565b6060805f80610ee8611f31565b60065491935091508067ffffffffffffffff811115610f0957610f09613065565b604051908082528060200260200182016040528015610f32578160200160208202803683370190505b5094508067ffffffffffffffff811115610f4e57610f4e613065565b604051908082528060200260200182016040528015610f77578160200160208202803683370190505b5093505f5b8181101561108e575f84848381518110610f9857610f98613281565b6020026020010151612710610fad919061326a565b610fb79190613351565b90505f60068381548110610fcd57610fcd613281565b905f5260205f2090600202016001015490508082111561103857610ff18183613389565b87848151811061100357611003613281565b602002602001018181525050600188848151811061102357611023613281565b91151560209283029190910190910152611084565b6110428282613389565b87848151811061105457611054613281565b6020026020010181815250505f88848151811061107357611073613281565b911515602092830291909101909101525b5050600101610f7c565b505050509091565b60605f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110e9573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061110d9190613222565b9050336001600160a01b038216146111675760405162461bcd60e51b815260206004820152600e60248201527f4f6e6c792050657269706865727900000000000000000000000000000000000060448201526064016105b5565b600b54604080517f85462d6f00000000000000000000000000000000000000000000000000000000815290515f926001600160a01b0316916385462d6f9160048083019260209291908290030181865afa1580156111c7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111eb919061333a565b90505f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa15801561123e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112629190613222565b305f90815260208190526040902054909150806112c15760405162461bcd60e51b815260206004820152601c60248201527f5368617265206d7573742062652067726561746572207468616e20300000000060448201526064016105b5565b5f6112cb60025490565b90505f811161131c5760405162461bcd60e51b815260206004820152600c60248201527f4e6f206c6971756964697479000000000000000000000000000000000000000060448201526064016105b5565b6006545f9067ffffffffffffffff81111561133957611339613065565b604051908082528060200260200182016040528015611362578160200160208202803683370190505b5090505f612710611373878661326a565b61137d9190613351565b90505f61138a8286613389565b90505f5b60065481101561148e575f876001600160a01b031663a3e113fb30600685815481106113bc576113bc613281565b5f91825260209091206002909102015460405160e084901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa15801561142d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611451919061333a565b90508561145e848361326a565b6114689190613351565b85838151811061147a5761147a613281565b60209081029190910101525060010161138e565b50305f908152602081905260409020548111156114ed5760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e742042414c554e49206c697175696469747900000060448201526064016105b5565b600b54604080517f3b19e84a00000000000000000000000000000000000000000000000000000000815290515f926001600160a01b031691633b19e84a9160048083019260209291908290030181865afa15801561154d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115719190613222565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0382166004820152602481018590529091505f90309063a9059cbb906044016020604051808303815f875af11580156115d9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115fd919061339c565b90508061164c5760405162461bcd60e51b815260206004820152601360248201527f466565207472616e73666572206661696c65640000000000000000000000000060448201526064016105b5565b6116563084612457565b8b6001600160a01b03167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58460405161169191815260200190565b60405180910390a250929a9950505050505050505050565b5f805f6116b4610edb565b915091505f5b815181101561171a578281815181106116d5576116d5613281565b6020026020010151801561170357506007548282815181106116f9576116f9613281565b6020026020010151115b15611712576001935050505090565b6001016116ba565b505f9250505090565b606060048054610467906131d7565b5f3361088e818585612385565b5f80600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015611791573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117b59190613222565b6040517fa3e113fb0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b0385811660248301529192509082169063a3e113fb90604401602060405180830381865afa15801561181c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611840919061333a565b9392505050565b5f80611851611f31565b915050805183106118a45760405162461bcd60e51b815260206004820152601360248201527f496e76616c696420617373657420696e6465780000000000000000000000000060448201526064016105b5565b8083815181106118b6576118b6613281565b6020026020010151915050919050565b600681815481106118d5575f80fd5b5f918252602090912060029091020180546001909101546001600160a01b03909116915082565b5f80600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa15801561194e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119729190613222565b9050336001600160a01b038216146119cc5760405162461bcd60e51b815260206004820152600e60248201527f4f6e6c792050657269706865727900000000000000000000000000000000000060448201526064016105b5565b5f6119d660025490565b90505f806119e2610762565b805160065491925014611a375760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964207265736572766573206c656e67746800000000000000000060448201526064016105b5565b600654611a865760405162461bcd60e51b815260206004820152600960248201527f4e6f20617373657473000000000000000000000000000000000000000000000060448201526064016105b5565b5f5b600654811015611b24575f60068281548110611aa657611aa6613281565b5f91825260208220600290910201546009546001600160a01b039182169350168203611ae857888381518110611ade57611ade613281565b50611b1c92505050565b611b0b828a8581518110611afe57611afe613281565b60200260200101516124a4565b9050611b1781866133bb565b945050505b600101611a88565b505f8211611b9a5760405162461bcd60e51b815260206004820152602260248201527f546f74616c2076616c7565206d7573742062652067726561746572207468616e60448201527f203000000000000000000000000000000000000000000000000000000000000060648201526084016105b5565b5f835f03611bb657600a54611baf908461326a565b9050611c6b565b5f611bbf611f31565b5090505f8111611c375760405162461bcd60e51b815260206004820152602660248201527f546f74616c206c6971756964697479206d75737420626520677265617465722060448201527f7468616e2030000000000000000000000000000000000000000000000000000060648201526084016105b5565b600a54611c44908261326a565b85600a5486611c53919061326a565b611c5d919061326a565b611c679190613351565b9150505b805f03611cba5760405162461bcd60e51b815260206004820152600d60248201527f4d696e742071747920697320300000000000000000000000000000000000000060448201526064016105b5565b611cc4888261226f565b876001600160a01b03167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688582604051611cff91815260200190565b60405180910390a2979650505050505050565b5f8060095f9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d64573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d8891906133ce565b60ff1690505f611d99826012613389565b611da490600a61350c565b90505f611daf611f31565b5090505f611dbc60025490565b9050805f03611dcf575f94505050505090565b60085481611ddd858561326a565b611de79190613351565b611df1919061326a565b94505050505090565b6060805f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e4e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e729190613222565b9050336001600160a01b03821614611ecc5760405162461bcd60e51b815260206004820152600e60248201527f4f6e6c792050657269706865727900000000000000000000000000000000000060448201526064016105b5565b611ed46116a9565b611f205760405162461bcd60e51b815260206004820152601460248201527f526562616c616e6365206e6f74206e656564656400000000000000000000000060448201526064016105b5565b611f286124be565b92509250509091565b6006545f906060908067ffffffffffffffff811115611f5257611f52613065565b604051908082528060200260200182016040528015611f7b578160200160208202803683370190505b5091505f5b8181101561205b575f60068281548110611f9c57611f9c613281565b5f91825260208220600290910201546001600160a01b03169150611fbf8261173f565b6009549091506001600160a01b0390811690831603611ffc5780858481518110611feb57611feb613281565b60200260200101818152505061202a565b5f61200783836124a4565b90508086858151811061201c5761201c613281565b602002602001018181525050505b84838151811061203c5761203c613281565b60200260200101518661204f91906133bb565b95505050600101611f80565b50509091565b60065460609067ffffffffffffffff81111561207f5761207f613065565b6040519080825280602002602001820160405280156120a8578160200160208202803683370190505b5090505f5b6006548110156108a4575f612710600683815481106120ce576120ce613281565b905f5260205f20906002020160010154866120e9919061326a565b6120f39190613351565b90508084838151811061210857612108613281565b6020026020010151101561215a5783828151811061212857612128613281565b60200260200101518161213b9190613389565b83838151811061214d5761214d613281565b6020026020010181815250505b506001016120ad565b5f805b60065481101561075c5782818151811061218257612182613281565b60200260200101518261219591906133bb565b9150600101612166565b600954600680545f926001600160a01b03169190859081106121c3576121c3613281565b5f9182526020909120600290910201546001600160a01b0316036121e8575080610894565b5f61221e600685815481106121ff576121ff613281565b5f9182526020909120600290910201546001600160a01b031684612b81565b90505f81116118405760405162461bcd60e51b815260206004820152601b60248201527f496e76616c696420746f6b656e20616d6f756e7420746f20616464000000000060448201526064016105b5565b6001600160a01b0382166122b1576040517fec442f050000000000000000000000000000000000000000000000000000000081525f60048201526024016105b5565b6122bc5f8383612b9a565b5050565b6122cd8383836001612cd9565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461237f5781811015612371576040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015260248101829052604481018390526064016105b5565b61237f84848484035f612cd9565b50505050565b6001600160a01b0383166123c7576040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f60048201526024016105b5565b6001600160a01b038216612409576040517fec442f050000000000000000000000000000000000000000000000000000000081525f60048201526024016105b5565b6122cd838383612b9a565b600260055403612450576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600555565b6001600160a01b038216612499576040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f60048201526024016105b5565b6122bc825f83612b9a565b6009545f906118409084906001600160a01b031684610982565b6060805f600b5f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015612512573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906125369190613222565b90505f600b5f9054906101000a90046001600160a01b03166001600160a01b031663cff49d686040518163ffffffff1660e01b8152600401602060405180830381865afa158015612589573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906125ad9190613222565b6006549091505f9067ffffffffffffffff8111156125cd576125cd613065565b6040519080825280602002602001820160405280156125f6578160200160208202803683370190505b506006549091505f9067ffffffffffffffff81111561261757612617613065565b604051908082528060200260200182016040528015612640578160200160208202803683370190505b506006549091505f9067ffffffffffffffff81111561266157612661613065565b60405190808252806020026020018201604052801561268a578160200160208202803683370190505b506006549091505f9067ffffffffffffffff8111156126ab576126ab613065565b6040519080825280602002602001820160405280156126d4578160200160208202803683370190505b506006549091505f9067ffffffffffffffff8111156126f5576126f5613065565b60405190808252806020026020018201604052801561271e578160200160208202803683370190505b506006549091505f9067ffffffffffffffff81111561273f5761273f613065565b604051908082528060200260200182016040528015612768578160200160208202803683370190505b5090505f5b6006548110156128df576006818154811061278a5761278a613281565b5f91825260209091206002909102015487516001600160a01b03909116908890839081106127ba576127ba613281565b60200260200101906001600160a01b031690816001600160a01b031681525050600681815481106127ed576127ed613281565b905f5260205f2090600202016001015486828151811061280f5761280f613281565b60200260200101818152505086818151811061282d5761282d613281565b60209081029190910101516040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b038b81166004830152909116906370a0823190602401602060405180830381865afa158015612896573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906128ba919061333a565b8582815181106128cc576128cc613281565b602090810291909101015260010161276d565b505f6128e9610762565b9050876001600160a01b031663f0bf77148289896007548e8f60095f9054906101000a90046001600160a01b03166040518863ffffffff1660e01b81526004016129399796959493929190613517565b5f604051808303815f87803b158015612950575f80fd5b505af1158015612962573d5f803e3d5ffd5b505050505f5b600654811015612b2f5787818151811061298457612984613281565b60209081029190910101516040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b038c81166004830152909116906370a0823190602401602060405180830381865afa1580156129ed573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612a11919061333a565b858281518110612a2357612a23613281565b602002602001018181525050858181518110612a4157612a41613281565b6020026020010151858281518110612a5b57612a5b613281565b60200260200101511115612aca57858181518110612a7b57612a7b613281565b6020026020010151858281518110612a9557612a95613281565b6020026020010151612aa79190613389565b848281518110612ab957612ab9613281565b602002602001018181525050612b27565b848181518110612adc57612adc613281565b6020026020010151868281518110612af657612af6613281565b6020026020010151612b089190613389565b838281518110612b1a57612b1a613281565b6020026020010181815250505b600101612968565b50336001600160a01b03167f279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b888604051612b699190612f66565b60405180910390a25090999098509650505050505050565b6009545f90611840906001600160a01b03168484610982565b6001600160a01b038316612bc4578060025f828254612bb991906133bb565b90915550612c4d9050565b6001600160a01b0383165f9081526020819052604090205481811015612c2f576040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b038516600482015260248101829052604481018390526064016105b5565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216612c6957600280548290039055612c87565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612ccc91815260200190565b60405180910390a3505050565b6001600160a01b038416612d1b576040517fe602df050000000000000000000000000000000000000000000000000000000081525f60048201526024016105b5565b6001600160a01b038316612d5d576040517f94280d620000000000000000000000000000000000000000000000000000000081525f60048201526024016105b5565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561237f57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051612dcf91815260200190565b60405180910390a350505050565b602081525f82518060208401528060208501604085015e5f6040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b6001600160a01b0381168114612e44575f80fd5b50565b5f60208284031215612e57575f80fd5b813561184081612e30565b5f815180845260208085019450602084015f5b83811015612e9157815187529582019590820190600101612e75565b509495945050505050565b602081525f6118406020830184612e62565b5f8060408385031215612ebf575f80fd5b8235612eca81612e30565b946020939093013593505050565b5f805f60608486031215612eea575f80fd5b8335612ef581612e30565b92506020840135612f0581612e30565b929592945050506040919091013590565b828152604060208201525f610ed36040830184612e62565b5f815180845260208085019450602084015f5b83811015612e915781516001600160a01b031687529582019590820190600101612f41565b602081525f6118406020830184612f2e565b5f805f8060808587031215612f8b575f80fd5b8435612f9681612e30565b93506020850135612fa681612e30565b9250604085013591506060850135612fbd81612e30565b939692955090935050565b604080825283519082018190525f906020906060840190828701845b82811015613002578151151584529284019290840190600101612fe4565b5050508381036020850152610b618186612e62565b5f60208284031215613027575f80fd5b5035919050565b5f806040838503121561303f575f80fd5b823561304a81612e30565b9150602083013561305a81612e30565b809150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156130d9576130d9613065565b604052919050565b5f67ffffffffffffffff8211156130fa576130fa613065565b5060051b60200190565b5f8060408385031215613115575f80fd5b823561312081612e30565b915060208381013567ffffffffffffffff81111561313c575f80fd5b8401601f8101861361314c575f80fd5b803561315f61315a826130e1565b613092565b81815260059190911b8201830190838101908883111561317d575f80fd5b928401925b8284101561319b57833582529284019290840190613182565b80955050505050509250929050565b604081525f6131bc6040830185612e62565b82810360208401526131ce8185612e62565b95945050505050565b600181811c908216806131eb57607f821691505b60208210810361075c577f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60208284031215613232575f80fd5b815161184081612e30565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b80820281158282048414176108945761089461323d565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f60208083850312156132bf575f80fd5b825167ffffffffffffffff8111156132d5575f80fd5b8301601f810185136132e5575f80fd5b80516132f361315a826130e1565b81815260059190911b82018301908381019087831115613311575f80fd5b928401925b8284101561332f57835182529284019290840190613316565b979650505050505050565b5f6020828403121561334a575f80fd5b5051919050565b5f82613384577f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b500490565b818103818111156108945761089461323d565b5f602082840312156133ac575f80fd5b81518015158114611840575f80fd5b808201808211156108945761089461323d565b5f602082840312156133de575f80fd5b815160ff81168114611840575f80fd5b600181815b8085111561344757817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561342d5761342d61323d565b8085161561343a57918102915b93841c93908002906133f3565b509250929050565b5f8261345d57506001610894565b8161346957505f610894565b816001811461347f5760028114613489576134a5565b6001915050610894565b60ff84111561349a5761349a61323d565b50506001821b610894565b5060208310610133831016604e8410600b84101617156134c8575081810a610894565b6134d283836133ee565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156135045761350461323d565b029392505050565b5f611840838361344f565b60e081525f61352960e083018a612e62565b828103602084015261353b818a612f2e565b9050828103604084015261354f8189612e62565b606084019790975250506001600160a01b03938416608082015291831660a083015290911660c090910152939250505056fea2646970667358221220c6a3d61ca15c544b3045ee0408c13fc0224f13afedd5e0a99e72d6ead0660a5f64736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FEC8D38 GT PUSH2 0xFE JUMPI DUP1 PUSH4 0xC2EE3A08 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xDE836EBD EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0xF47B45E8 EQ PUSH2 0x442 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC2EE3A08 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xCDF456E1 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xCF8FA764 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xD14EF46D EQ PUSH2 0x3BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8A77C8DC GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x8A77C8DC EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xB2B55D70 EQ PUSH2 0x37B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7FEC8D38 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x89AB3532 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x345 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x174 JUMPI DUP1 PUSH4 0x67E4AC2C GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x67E4AC2C EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x2FB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x36BF6E39 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x298 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1AF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x22ACB867 EQ PUSH2 0x258 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x723C999 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x213 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1DD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x2DDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E47 JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST PUSH2 0x206 PUSH2 0x762 JUMP JUMPDEST PUSH2 0x22E PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAE JUMP JUMPDEST PUSH2 0x881 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EA JUMP JUMPDEST PUSH2 0x242 PUSH2 0x89A JUMP JUMPDEST PUSH2 0x206 PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x22E PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED8 JUMP JUMPDEST PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EA JUMP JUMPDEST PUSH2 0x28A PUSH2 0x96E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP3 SWAP2 SWAP1 PUSH2 0x2F16 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED8 JUMP JUMPDEST PUSH2 0x982 JUMP JUMPDEST PUSH2 0x2B3 PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x2F66 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x2F78 JUMP JUMPDEST PUSH2 0xC26 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x30E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EA JUMP JUMPDEST PUSH2 0x242 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x337 PUSH2 0xEDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP3 SWAP2 SWAP1 PUSH2 0x2FC8 JUMP JUMPDEST PUSH2 0x206 PUSH2 0x353 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E47 JUMP JUMPDEST PUSH2 0x1096 JUMP JUMPDEST PUSH2 0x22E PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x1723 JUMP JUMPDEST PUSH2 0x22E PUSH2 0x376 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAE JUMP JUMPDEST PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E47 JUMP JUMPDEST PUSH2 0x173F JUMP JUMPDEST PUSH2 0x242 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x30E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x3B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3017 JUMP JUMPDEST PUSH2 0x1847 JUMP JUMPDEST PUSH2 0x3D0 PUSH2 0x3CB CALLDATASIZE PUSH1 0x4 PUSH2 0x3017 JUMP JUMPDEST PUSH2 0x18C6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1EA JUMP JUMPDEST PUSH2 0x242 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x302E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x435 CALLDATASIZE PUSH1 0x4 PUSH2 0x3104 JUMP JUMPDEST PUSH2 0x18FC JUMP JUMPDEST PUSH2 0x242 PUSH2 0x1D12 JUMP JUMPDEST PUSH2 0x44A PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP3 SWAP2 SWAP1 PUSH2 0x31AA JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x467 SWAP1 PUSH2 0x31D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x493 SWAP1 PUSH2 0x31D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55F SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506572697068657279000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C6 PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x612 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526562616C616E6365206E6F74206E6565646564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x61C PUSH2 0x1F31 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH2 0x62B DUP4 DUP4 PUSH2 0x2061 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x637 DUP3 PUSH2 0x2163 JUMP JUMPDEST SWAP1 POP PUSH1 0xA SLOAD DUP2 PUSH2 0x647 SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x667 JUMPI PUSH2 0x667 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x690 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x709 JUMPI PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6B1 JUMPI PUSH2 0x6B1 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x701 JUMPI PUSH2 0x6E2 DUP2 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6D5 JUMPI PUSH2 0x6D5 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x219F JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6F4 JUMPI PUSH2 0x6F4 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x695 JUMP JUMPDEST POP PUSH2 0x714 DUP9 DUP4 PUSH2 0x226F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E DUP5 PUSH1 0x40 MLOAD PUSH2 0x74D SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP6 POP POP POP POP POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7B5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7D9 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x3E99C1E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x3E99C1E4 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x836 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x87B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x32AE JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x88E DUP2 DUP6 DUP6 PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8A4 PUSH2 0x1F31 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8CB JUMPI PUSH2 0x8CB PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8F4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x75C JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x916 JUMPI PUSH2 0x916 PUSH2 0x3281 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x938 JUMPI PUSH2 0x938 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x8F9 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x958 DUP6 DUP3 DUP6 PUSH2 0x22D2 JUMP JUMPDEST PUSH2 0x963 DUP6 DUP6 DUP6 PUSH2 0x2385 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH2 0x979 PUSH2 0x1F31 JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9D4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F8 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA54 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA78 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xACE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F7261636C65206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0x248391FF SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB3D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB61 SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB8B JUMPI PUSH2 0xB8B PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBB4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x75C JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xBD6 JUMPI PUSH2 0xBD6 PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xC06 JUMPI PUSH2 0xC06 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0xBB9 JUMP JUMPDEST PUSH0 PUSH2 0xC2F PUSH2 0x2414 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x85462D6F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x85462D6F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC8F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCB3 SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xD16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 DUP5 GT PUSH2 0xD65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 PUSH2 0xD71 DUP8 DUP8 DUP8 PUSH2 0x982 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xD7D DUP8 PUSH2 0x173F JUMP JUMPDEST LT ISZERO PUSH2 0xDCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH2 0xDD9 DUP5 DUP5 PUSH2 0x326A JUMP JUMPDEST PUSH2 0xDE3 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP1 POP PUSH2 0xDEF DUP2 DUP4 PUSH2 0x3389 JUMP JUMPDEST SWAP4 POP PUSH0 DUP5 GT PUSH2 0xE66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F2073656E64206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x68616E2030000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5B5 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 DUP10 DUP9 PUSH1 0x40 MLOAD PUSH2 0xEBE SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP PUSH2 0xED3 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH2 0xEE8 PUSH2 0x1F31 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP2 SWAP4 POP SWAP2 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF09 JUMPI PUSH2 0xF09 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF32 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF4E JUMPI PUSH2 0xF4E PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF77 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x108E JUMPI PUSH0 DUP5 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF98 JUMPI PUSH2 0xF98 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2710 PUSH2 0xFAD SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH2 0xFB7 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xFCD JUMPI PUSH2 0xFCD PUSH2 0x3281 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1038 JUMPI PUSH2 0xFF1 DUP2 DUP4 PUSH2 0x3389 JUMP JUMPDEST DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1003 JUMPI PUSH2 0x1003 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1023 JUMPI PUSH2 0x1023 PUSH2 0x3281 JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH2 0x1084 JUMP JUMPDEST PUSH2 0x1042 DUP3 DUP3 PUSH2 0x3389 JUMP JUMPDEST DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1054 JUMPI PUSH2 0x1054 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1073 JUMPI PUSH2 0x1073 PUSH2 0x3281 JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xF7C JUMP JUMPDEST POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x110D SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1167 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506572697068657279000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x85462D6F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x85462D6F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11C7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11EB SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x123E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1262 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x12C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 PUSH2 0x12CB PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x131C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1339 JUMPI PUSH2 0x1339 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1362 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH2 0x2710 PUSH2 0x1373 DUP8 DUP7 PUSH2 0x326A JUMP JUMPDEST PUSH2 0x137D SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x138A DUP3 DUP7 PUSH2 0x3389 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x148E JUMPI PUSH0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA3E113FB ADDRESS PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x13BC JUMPI PUSH2 0x13BC PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP5 SWAP1 SHL PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x142D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1451 SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x145E DUP5 DUP4 PUSH2 0x326A JUMP JUMPDEST PUSH2 0x1468 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x147A JUMPI PUSH2 0x147A PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x138E JUMP JUMPDEST POP ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x14ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742042414C554E49206C6971756964697479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x3B19E84A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x3B19E84A SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x154D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1571 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH0 SWAP1 ADDRESS SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15D9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15FD SWAP2 SWAP1 PUSH2 0x339C JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x164C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x1656 ADDRESS DUP5 PUSH2 0x2457 JUMP JUMPDEST DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1691 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP3 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x16B4 PUSH2 0xEDB JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x171A JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x16D5 JUMPI PUSH2 0x16D5 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP1 ISZERO PUSH2 0x1703 JUMPI POP PUSH1 0x7 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x16F9 JUMPI PUSH2 0x16F9 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT JUMPDEST ISZERO PUSH2 0x1712 JUMPI PUSH1 0x1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x16BA JUMP JUMPDEST POP PUSH0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x467 SWAP1 PUSH2 0x31D7 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x88E DUP2 DUP6 DUP6 PUSH2 0x2385 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1791 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17B5 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA3E113FB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xA3E113FB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x181C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1840 SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1851 PUSH2 0x1F31 JUMP JUMPDEST SWAP2 POP POP DUP1 MLOAD DUP4 LT PUSH2 0x18A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420696E64657800000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST DUP1 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x18B6 JUMPI PUSH2 0x18B6 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x18D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x194E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1972 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x19CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506572697068657279000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 PUSH2 0x19D6 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0x19E2 PUSH2 0x762 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x6 SLOAD SWAP2 SWAP3 POP EQ PUSH2 0x1A37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1A86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206173736574730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1B24 JUMPI PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1AA6 JUMPI PUSH2 0x1AA6 PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 POP AND DUP3 SUB PUSH2 0x1AE8 JUMPI DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1ADE JUMPI PUSH2 0x1ADE PUSH2 0x3281 JUMP JUMPDEST POP PUSH2 0x1B1C SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1B0B DUP3 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1AFE JUMPI PUSH2 0x1AFE PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x24A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B17 DUP2 DUP7 PUSH2 0x33BB JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1A88 JUMP JUMPDEST POP PUSH0 DUP3 GT PUSH2 0x1B9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 DUP4 PUSH0 SUB PUSH2 0x1BB6 JUMPI PUSH1 0xA SLOAD PUSH2 0x1BAF SWAP1 DUP5 PUSH2 0x326A JUMP JUMPDEST SWAP1 POP PUSH2 0x1C6B JUMP JUMPDEST PUSH0 PUSH2 0x1BBF PUSH2 0x1F31 JUMP JUMPDEST POP SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1C37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E20300000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1C44 SWAP1 DUP3 PUSH2 0x326A JUMP JUMPDEST DUP6 PUSH1 0xA SLOAD DUP7 PUSH2 0x1C53 SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH2 0x1C5D SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH2 0x1C67 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x1CBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420717479206973203000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x1CC4 DUP9 DUP3 PUSH2 0x226F JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1CFF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D64 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D88 SWAP2 SWAP1 PUSH2 0x33CE JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH2 0x1D99 DUP3 PUSH1 0x12 PUSH2 0x3389 JUMP JUMPDEST PUSH2 0x1DA4 SWAP1 PUSH1 0xA PUSH2 0x350C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1DAF PUSH2 0x1F31 JUMP JUMPDEST POP SWAP1 POP PUSH0 PUSH2 0x1DBC PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0x1DCF JUMPI PUSH0 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 PUSH2 0x1DDD DUP6 DUP6 PUSH2 0x326A JUMP JUMPDEST PUSH2 0x1DE7 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST PUSH2 0x1DF1 SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E4E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E72 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1ECC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506572697068657279000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x1ED4 PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x1F20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526562616C616E6365206E6F74206E6565646564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x1F28 PUSH2 0x24BE JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH0 SWAP1 PUSH1 0x60 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F52 JUMPI PUSH2 0x1F52 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F7B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x205B JUMPI PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1F9C JUMPI PUSH2 0x1F9C PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x1FBF DUP3 PUSH2 0x173F JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x1FFC JUMPI DUP1 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1FEB JUMPI PUSH2 0x1FEB PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x202A JUMP JUMPDEST PUSH0 PUSH2 0x2007 DUP4 DUP4 PUSH2 0x24A4 JUMP JUMPDEST SWAP1 POP DUP1 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x201C JUMPI PUSH2 0x201C PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x203C JUMPI PUSH2 0x203C PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH2 0x204F SWAP2 SWAP1 PUSH2 0x33BB JUMP JUMPDEST SWAP6 POP POP POP PUSH1 0x1 ADD PUSH2 0x1F80 JUMP JUMPDEST POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x207F JUMPI PUSH2 0x207F PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20A8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x8A4 JUMPI PUSH0 PUSH2 0x2710 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x20CE JUMPI PUSH2 0x20CE PUSH2 0x3281 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 PUSH2 0x20E9 SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH2 0x20F3 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2108 JUMPI PUSH2 0x2108 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD LT ISZERO PUSH2 0x215A JUMPI DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2128 JUMPI PUSH2 0x2128 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 PUSH2 0x213B SWAP2 SWAP1 PUSH2 0x3389 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x214D JUMPI PUSH2 0x214D PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x20AD JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x75C JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2182 JUMPI PUSH2 0x2182 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x2195 SWAP2 SWAP1 PUSH2 0x33BB JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x2166 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x21C3 JUMPI PUSH2 0x21C3 PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x21E8 JUMPI POP DUP1 PUSH2 0x894 JUMP JUMPDEST PUSH0 PUSH2 0x221E PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x21FF JUMPI PUSH2 0x21FF PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x2B81 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1840 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x22B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x22BC PUSH0 DUP4 DUP4 PUSH2 0x2B9A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x22CD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2CD9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x237F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2371 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x237F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x2CD9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x23C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2409 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x22CD DUP4 DUP4 DUP4 PUSH2 0x2B9A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0x2450 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2499 JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x22BC DUP3 PUSH0 DUP4 PUSH2 0x2B9A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH0 SWAP1 PUSH2 0x1840 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2512 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2536 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2589 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25AD SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25CD JUMPI PUSH2 0x25CD PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x25F6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2617 JUMPI PUSH2 0x2617 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2640 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2661 JUMPI PUSH2 0x2661 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x268A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26AB JUMPI PUSH2 0x26AB PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x26D4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26F5 JUMPI PUSH2 0x26F5 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x271E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x273F JUMPI PUSH2 0x273F PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2768 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x28DF JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x278A JUMPI PUSH2 0x278A PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x27BA JUMPI PUSH2 0x27BA PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x27ED JUMPI PUSH2 0x27ED PUSH2 0x3281 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x280F JUMPI PUSH2 0x280F PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP7 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x282D JUMPI PUSH2 0x282D PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2896 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28BA SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x28CC JUMPI PUSH2 0x28CC PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x276D JUMP JUMPDEST POP PUSH0 PUSH2 0x28E9 PUSH2 0x762 JUMP JUMPDEST SWAP1 POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF0BF7714 DUP3 DUP10 DUP10 PUSH1 0x7 SLOAD DUP15 DUP16 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2939 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3517 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2950 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2962 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2B2F JUMPI DUP8 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2984 JUMPI PUSH2 0x2984 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29ED JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A11 SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A23 JUMPI PUSH2 0x2A23 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2A41 JUMPI PUSH2 0x2A41 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A5B JUMPI PUSH2 0x2A5B PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x2ACA JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2A7B JUMPI PUSH2 0x2A7B PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A95 JUMPI PUSH2 0x2A95 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2AA7 SWAP2 SWAP1 PUSH2 0x3389 JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2AB9 JUMPI PUSH2 0x2AB9 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2B27 JUMP JUMPDEST DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2ADC JUMPI PUSH2 0x2ADC PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2AF6 JUMPI PUSH2 0x2AF6 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2B08 SWAP2 SWAP1 PUSH2 0x3389 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2B1A JUMPI PUSH2 0x2B1A PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2968 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 DUP9 PUSH1 0x40 MLOAD PUSH2 0x2B69 SWAP2 SWAP1 PUSH2 0x2F66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP1 SWAP10 SWAP1 SWAP9 POP SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH0 SWAP1 PUSH2 0x1840 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2BC4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2BB9 SWAP2 SWAP1 PUSH2 0x33BB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2C4D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2C2F JUMPI PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2C69 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x2C87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2CCC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2D1B JUMPI PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2D5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x237F JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2DCF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E44 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E57 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1840 DUP2 PUSH2 0x2E30 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E91 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2E75 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x1840 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E62 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EBF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2ECA DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2EEA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2EF5 DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2F05 DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0xED3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2E62 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E91 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2F41 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x1840 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2F2E JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2F8B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2F96 DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x2FA6 DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x2FBD DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3002 JUMPI DUP2 MLOAD ISZERO ISZERO DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2FE4 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0xB61 DUP2 DUP7 PUSH2 0x2E62 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3027 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x303F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x304A DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x305A DUP2 PUSH2 0x2E30 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x30D9 JUMPI PUSH2 0x30D9 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x30FA JUMPI PUSH2 0x30FA PUSH2 0x3065 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3115 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3120 DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x313C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x314C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x315F PUSH2 0x315A DUP3 PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x3092 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP9 DUP4 GT ISZERO PUSH2 0x317D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x319B JUMPI DUP4 CALLDATALOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x3182 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x31BC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2E62 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x31CE DUP2 DUP6 PUSH2 0x2E62 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x31EB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x75C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3232 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1840 DUP2 PUSH2 0x2E30 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x894 JUMPI PUSH2 0x894 PUSH2 0x323D JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32BF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x32E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x32F3 PUSH2 0x315A DUP3 PUSH2 0x30E1 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x3311 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x332F JUMPI DUP4 MLOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x3316 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x334A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x3384 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x894 JUMPI PUSH2 0x894 PUSH2 0x323D JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33AC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1840 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x894 JUMPI PUSH2 0x894 PUSH2 0x323D JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33DE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1840 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x3447 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x342D JUMPI PUSH2 0x342D PUSH2 0x323D JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x343A JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x33F3 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x345D JUMPI POP PUSH1 0x1 PUSH2 0x894 JUMP JUMPDEST DUP2 PUSH2 0x3469 JUMPI POP PUSH0 PUSH2 0x894 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x347F JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3489 JUMPI PUSH2 0x34A5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x894 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x349A JUMPI PUSH2 0x349A PUSH2 0x323D JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x894 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x34C8 JUMPI POP DUP2 DUP2 EXP PUSH2 0x894 JUMP JUMPDEST PUSH2 0x34D2 DUP4 DUP4 PUSH2 0x33EE JUMP JUMPDEST DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x3504 JUMPI PUSH2 0x3504 PUSH2 0x323D JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1840 DUP4 DUP4 PUSH2 0x344F JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE PUSH0 PUSH2 0x3529 PUSH1 0xE0 DUP4 ADD DUP11 PUSH2 0x2E62 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x353B DUP2 DUP11 PUSH2 0x2F2E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x354F DUP2 DUP10 PUSH2 0x2E62 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x80 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 LOG3 0xD6 SHR LOG1 TLOAD SLOAD 0x4B ADDRESS GASLIMIT 0xEE DIV ADDMOD 0xC1 EXTCODEHASH 0xC0 0x22 0x4F SGT 0xAF 0xED 0xD5 0xE0 0xA9 SWAP15 PUSH19 0xD6EAD0660A5F64736F6C634300081900330000 ","sourceMap":"1779:21983:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5015:909:15;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;15600:212::-;;;:::i;4293:186:8:-;;;;;;:::i;:::-;;:::i;:::-;;;2102:14:21;;2095:22;2077:41;;2065:2;2050:18;4293:186:8;1937:187:21;3144:97:8;3222:12;;3144:97;;;2275:25:21;;;2263:2;2248:18;3144:97:8;2129:177:21;14788:145:15;;;:::i;16830:284::-;;;:::i;5039:244:8:-;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;2914:36:21;;2902:2;2887:18;3002:82:8;2772:184:21;14448:211:15;;;:::i;:::-;;;;;;;;:::i;11837:389::-;;;;;;:::i;:::-;;:::i;16373:279::-;;;:::i;:::-;;;;;;;:::i;6723:819::-;;;;;;:::i;:::-;;:::i;3299:116:8:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:8;3364:7;3390:18;;;;;;;;;;;;3299:116;1995:33:15;;;;;-1:-1:-1;;;;;1995:33:15;;;;;;-1:-1:-1;;;;;4850:55:21;;;4832:74;;4820:2;4805:18;1995:33:15;4660:252:21;1872:22:15;;;;;;12850:864;;;:::i;:::-;;;;;;;;:::i;10132:1306::-;;;;;;:::i;:::-;;:::i;23413:346::-;;;:::i;2276:93:8:-;;;:::i;3610:178::-;;;;;;:::i;:::-;;:::i;15998:231:15:-;;;;;;:::i;:::-;;:::i;1901:18::-;;;;;;1926:24;;;;;-1:-1:-1;;;;;1926:24:15;;;13902:275;;;;;;:::i;:::-;;:::i;1834:29::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;6350:55:21;;;6332:74;;6437:2;6422:18;;6415:34;;;;6305:18;1834:29:15;6158:297:21;3846:140:8;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:8;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;7753:1358:15;;;;;;:::i;:::-;;:::i;15052:414::-;;;:::i;12284:281::-;;;:::i;:::-;;;;;;;;:::i;2074:89:8:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;5015:909:15:-;5091:16;3381:17;3401:8;;;;;;;;;-1:-1:-1;;;;;3401:8:15;-1:-1:-1;;;;;3401:31:15;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3381:53;-1:-1:-1;3453:10:15;-1:-1:-1;;;;;3453:23:15;;;3445:50;;;;-1:-1:-1;;;3445:50:15;;9970:2:21;3445:50:15;;;9952:21:21;10009:2;9989:18;;;9982:30;10048:16;10028:18;;;10021:44;10082:18;;3445:50:15;;;;;;;;;5128:19:::1;:17;:19::i;:::-;5120:52;;;::::0;-1:-1:-1;;;5120:52:15;;10313:2:21;5120:52:15::1;::::0;::::1;10295:21:21::0;10352:2;10332:18;;;10325:30;10391:22;10371:18;;;10364:50;10431:18;;5120:52:15::1;10111:344:21::0;5120:52:15::1;5184:22;5208:27:::0;5239:24:::1;:22;:24::i;:::-;5183:80;;;;5284:29;5316:50;5339:14;5355:10;5316:22;:50::i;:::-;5284:82;;5385:27;5415:43;5445:12;5415:29;:43::i;:::-;5385:73;;5494:13;;5471:36;;;;;:::i;:::-;5561:10;:17:::0;5471:36;;-1:-1:-1;5520:24:15::1;::::0;5547:32:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;5547:32:15::1;;5520:59;;5597:9;5592:188;5616:12;:19;5612:1;:23;5592:188;;;5679:1;5661:12;5674:1;5661:15;;;;;;;;:::i;:::-;;;;;;;:19;5657:112;;;5714:39;5734:1;5737:12;5750:1;5737:15;;;;;;;;:::i;:::-;;;;;;;5714:19;:39::i;:::-;5701:7;5709:1;5701:10;;;;;;;;:::i;:::-;;;;;;:52;;;::::0;::::1;5657:112;5637:3;;5592:188;;;;5792:36;5798:8;5808:19;5792:5;:36::i;:::-;5864:10;-1:-1:-1::0;;;;;5846:43:15::1;;5876:12;5846:43;;;;;;:::i;:::-;;;;;;;;5909:7:::0;-1:-1:-1;;;;;3506:1:15::1;3370:145:::0;5015:909;;;:::o;15600:212::-;15644:16;15673:17;15693:8;;;;;;;;;-1:-1:-1;;;;;15693:8:15;-1:-1:-1;;;;;15693:31:15;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15744:60;;;;;15798:4;15744:60;;;4832:74:21;15673:53:15;;-1:-1:-1;;;;;;15744:45:15;;;;;4805:18:21;;15744:60:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15737:67;;;15600:212;:::o;4293:186:8:-;4366:4;735:10:12;4420:31:8;735:10:12;4436:7:8;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;14788:145:15:-;14832:7;14853:16;14875:24;:22;:24::i;:::-;-1:-1:-1;14852:47:15;14788:145;-1:-1:-1;;14788:145:15:o;16830:284::-;16945:10;:17;16875:16;;16904:24;;16931:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16931:32:15;;16904:59;;16979:9;16974:108;16998:10;:17;16994:21;;16974:108;;;17050:10;17061:1;17050:13;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;17037:7;17045:1;17037:10;;;;;;;;:::i;:::-;;;;;;;;;;:33;17017:3;;16974:108;;5039:244:8;5126:4;735:10:12;5182:37:8;5198:4;735:10:12;5213:5:8;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:8;;5039:244;-1:-1:-1;;;;5039:244:8:o;14448:211:15:-;14504:16;14522:27;14587:24;:22;:24::i;:::-;14562:49;;;;-1:-1:-1;14448:211:15;-1:-1:-1;14448:211:15:o;11837:389::-;11932:7;11952:28;11999:8;;;;;;;;;-1:-1:-1;;;;;11999:8:15;-1:-1:-1;;;;;11999:24:15;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11952:74;;12083:1;-1:-1:-1;;;;;12045:40:15;:8;;;;;;;;;-1:-1:-1;;;;;12045:8:15;-1:-1:-1;;;;;12045:24:15;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12045:40:15;;12037:75;;;;-1:-1:-1;;;12037:75:15;;12099:2:21;12037:75:15;;;12081:21:21;12138:2;12118:18;;;12111:30;12177:24;12157:18;;;12150:52;12219:18;;12037:75:15;11897:346:21;12037:75:15;12143:48;;;;;-1:-1:-1;;;;;12529:15:21;;;12143:48:15;;;12511:34:21;12581:15;;;12561:18;;;12554:43;12613:18;;;12606:34;;;12123:17:15;;12143:20;;;;;;12423:18:21;;12143:48:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12123:68;11837:389;-1:-1:-1;;;;;;11837:389:15:o;16373:279::-;16486:10;:17;16417:16;;16446:23;;16472:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16472:32:15;;16446:58;;16520:9;16515:106;16539:10;:17;16535:21;;16515:106;;;16590:10;16601:1;16590:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:19;16578:9;;-1:-1:-1;;;;;16590:19:15;;;;16578:6;;16585:1;;16578:9;;;;;;:::i;:::-;-1:-1:-1;;;;;16578:31:15;;;:9;;;;;;;;;;;:31;16558:3;;16515:106;;6723:819;6881:17;2356:21:13;:19;:21::i;:::-;6930:8:15::1;::::0;:21:::1;::::0;;;;;;;6911:16:::1;::::0;-1:-1:-1;;;;;6930:8:15::1;::::0;:19:::1;::::0;:21:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:8;:21:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6911:40;;6983:7;-1:-1:-1::0;;;;;6970:20:15::1;:9;-1:-1:-1::0;;;;;6970:20:15::1;::::0;6962:59:::1;;;::::0;-1:-1:-1;;;6962:59:15;;13042:2:21;6962:59:15::1;::::0;::::1;13024:21:21::0;13081:2;13061:18;;;13054:30;13120:28;13100:18;;;13093:56;13166:18;;6962:59:15::1;12840:350:21::0;6962:59:15::1;7049:1;7040:6;:10;7032:55;;;::::0;-1:-1:-1;;;7032:55:15;;13397:2:21;7032:55:15::1;::::0;::::1;13379:21:21::0;;;13416:18;;;13409:30;13475:34;13455:18;;;13448:62;13527:18;;7032:55:15::1;13195:356:21::0;7032:55:15::1;7100:22;7125:40;7138:9;7149:7;7158:6;7125:12;:40::i;:::-;7100:65;;7212:14;7184:24;7200:7;7184:15;:24::i;:::-;:42;;7176:77;;;::::0;-1:-1:-1;;;7176:77:15;;13758:2:21;7176:77:15::1;::::0;::::1;13740:21:21::0;13797:2;13777:18;;;13770:30;13836:24;13816:18;;;13809:52;13878:18;;7176:77:15::1;13556:346:21::0;7176:77:15::1;7266:11;7310:5;7281:25;7298:8:::0;7281:14;:25:::1;:::i;:::-;7280:35;;;;:::i;:::-;7266:49:::0;-1:-1:-1;7338:20:15::1;7266:49:::0;7338:14;:20:::1;:::i;:::-;7326:32;;7391:1;7379:9;:13;7371:63;;;::::0;-1:-1:-1;;;7371:63:15;;14521:2:21;7371:63:15::1;::::0;::::1;14503:21:21::0;14560:2;14540:18;;;14533:30;14599:34;14579:18;;;14572:62;14670:7;14650:18;;;14643:35;14695:19;;7371:63:15::1;14319:401:21::0;7371:63:15::1;7478:7;-1:-1:-1::0;;;;;7452:53:15::1;7467:9;-1:-1:-1::0;;;;;7452:53:15::1;7457:8;-1:-1:-1::0;;;;;7452:53:15::1;;7487:6;7495:9;7452:53;;;;;;14899:25:21::0;;;14955:2;14940:18;;14933:34;14887:2;14872:18;;14725:248;7452:53:15::1;;;;;;;;7518:16;;;2398:20:13::0;1713:1;2924:7;:21;2744:208;2398:20;6723:819:15;;;;;;:::o;12850:864::-;12895:24;12921:27;12962:14;12978:27;13009:24;:22;:24::i;:::-;13064:10;:17;12961:72;;-1:-1:-1;12961:72:15;-1:-1:-1;13064:17:15;13107:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13107:21:15;;13094:34;;13166:9;13152:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13152:24:15;;13139:37;;13194:9;13189:474;13213:9;13209:1;:13;13189:474;;;13244:21;13294:6;13269:10;13280:1;13269:13;;;;;;;;:::i;:::-;;;;;;;13285:5;13269:21;;;;:::i;:::-;13268:32;;;;:::i;:::-;13244:56;;13315:20;13338:10;13349:1;13338:13;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;13315:43;;13395:12;13379:13;:28;13375:277;;;13444:28;13460:12;13444:13;:28;:::i;:::-;13428:10;13439:1;13428:13;;;;;;;;:::i;:::-;;;;;;:44;;;;;13507:4;13491:10;13502:1;13491:13;;;;;;;;:::i;:::-;:20;;;:13;;;;;;;;;;;:20;13375:277;;;13568:28;13583:13;13568:12;:28;:::i;:::-;13552:10;13563:1;13552:13;;;;;;;;:::i;:::-;;;;;;:44;;;;;13631:5;13615:10;13626:1;13615:13;;;;;;;;:::i;:::-;:21;;;:13;;;;;;;;;;;:21;13375:277;-1:-1:-1;;13224:3:15;;13189:474;;;;13675:31;;;12850:864;;:::o;10132:1306::-;10190:16;3381:17;3401:8;;;;;;;;;-1:-1:-1;;;;;3401:8:15;-1:-1:-1;;;;;3401:31:15;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3381:53;-1:-1:-1;3453:10:15;-1:-1:-1;;;;;3453:23:15;;;3445:50;;;;-1:-1:-1;;;3445:50:15;;9970:2:21;3445:50:15;;;9952:21:21;10009:2;9989:18;;;9982:30;10048:16;10028:18;;;10021:44;10082:18;;3445:50:15;9768:338:21;3445:50:15;10238:8:::1;::::0;:21:::1;::::0;;;;;;;10219:16:::1;::::0;-1:-1:-1;;;;;10238:8:15::1;::::0;:19:::1;::::0;:21:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:8;:21:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10219:40;;10270:17;10290:8;;;;;;;;;-1:-1:-1::0;;;;;10290:8:15::1;-1:-1:-1::0;;;;;10290:31:15::1;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10370:4;10336:13;3390:18:8::0;;;;;;;;;;;10270:53:15;;-1:-1:-1;10395:9:15;10387:50:::1;;;::::0;-1:-1:-1;;;10387:50:15;;15180:2:21;10387:50:15::1;::::0;::::1;15162:21:21::0;15219:2;15199:18;;;15192:30;15258;15238:18;;;15231:58;15306:18;;10387:50:15::1;14978:352:21::0;10387:50:15::1;10450:19;10472:13;3222:12:8::0;;;3144:97;10472:13:15::1;10450:35;;10518:1;10504:11;:15;10496:40;;;::::0;-1:-1:-1;;;10496:40:15;;15537:2:21;10496:40:15::1;::::0;::::1;15519:21:21::0;15576:2;15556:18;;;15549:30;15615:14;15595:18;;;15588:42;15647:18;;10496:40:15::1;15335:336:21::0;10496:40:15::1;10590:10;:17:::0;10549:24:::1;::::0;10576:32:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;10576:32:15::1;-1:-1:-1::0;10549:59:15;-1:-1:-1;10619:11:15::1;10654:5;10634:16;10642:8:::0;10634:5;:16:::1;:::i;:::-;10633:26;;;;:::i;:::-;10619:40:::0;-1:-1:-1;10670:21:15::1;10694:11;10619:40:::0;10694:5;:11:::1;:::i;:::-;10670:35;;10723:9;10718:304;10742:10;:17:::0;10738:21;::::1;10718:304;;;10781:20;10827:9;-1:-1:-1::0;;;;;10804:49:15::1;;10880:4;10904:10;10915:1;10904:13;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:19:::0;10804:134:::1;::::0;::::1;::::0;;;;;;;-1:-1:-1;;;;;15929:15:21;;;10804:134:15::1;::::0;::::1;15911:34:21::0;10904:19:15;::::1;15961:18:21::0;;;15954:43;15823:18;;10804:134:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10781:157:::0;-1:-1:-1;10999:11:15;10967:28:::1;10982:13:::0;10781:157;10967:28:::1;:::i;:::-;10966:44;;;;:::i;:::-;10953:7;10961:1;10953:10;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:57;-1:-1:-1;10761:3:15::1;;10718:304;;;-1:-1:-1::0;11060:4:15::1;3364:7:8::0;3390:18;;;;;;;;;;;11070:13:15;-1:-1:-1;11042:41:15::1;11034:83;;;::::0;-1:-1:-1;;;11034:83:15;;16210:2:21;11034:83:15::1;::::0;::::1;16192:21:21::0;16249:2;16229:18;;;16222:30;16288:31;16268:18;;;16261:59;16337:18;;11034:83:15::1;16008:353:21::0;11034:83:15::1;11149:8;::::0;:22:::1;::::0;;;;;;;11130:16:::1;::::0;-1:-1:-1;;;;;11149:8:15::1;::::0;:20:::1;::::0;:22:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:8;:22:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11208:45;::::0;;;;-1:-1:-1;;;;;6350:55:21;;11208:45:15::1;::::0;::::1;6332:74:21::0;6422:18;;;6415:34;;;11130:41:15;;-1:-1:-1;11182:23:15::1;::::0;11223:4:::1;::::0;11208:30:::1;::::0;6305:18:21;;11208:45:15::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11182:71;;11272:18;11264:50;;;::::0;-1:-1:-1;;;11264:50:15;;16850:2:21;11264:50:15::1;::::0;::::1;16832:21:21::0;16889:2;16869:18;;;16862:30;16928:21;16908:18;;;16901:49;16967:18;;11264:50:15::1;16648:343:21::0;11264:50:15::1;11327:35;11341:4;11348:13;11327:5;:35::i;:::-;11385:2;-1:-1:-1::0;;;;;11380:23:15::1;;11389:13;11380:23;;;;2275:25:21::0;;2263:2;2248:18;;2129:177;11380:23:15::1;;;;;;;;-1:-1:-1::0;11423:7:15;;10132:1306;-1:-1:-1;;;;;;;;;;10132:1306:15:o;23413:346::-;23463:4;23481:24;23507:27;23538:14;:12;:14::i;:::-;23480:72;;;;23568:9;23563:166;23587:10;:17;23583:1;:21;23563:166;;;23630:10;23641:1;23630:13;;;;;;;;:::i;:::-;;;;;;;:40;;;;;23663:7;;23647:10;23658:1;23647:13;;;;;;;;:::i;:::-;;;;;;;:23;23630:40;23626:92;;;23698:4;23691:11;;;;;23413:346;:::o;23626:92::-;23606:3;;23563:166;;;;23746:5;23739:12;;;;23413:346;:::o;2276:93:8:-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:12;3733:27:8;735:10:12;3750:2:8;3754:5;3733:9;:27::i;15998:231:15:-;16059:7;16079:17;16099:8;;;;;;;;;-1:-1:-1;;;;;16099:8:15;-1:-1:-1;;;;;16099:31:15;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16150:71;;;;;16208:4;16150:71;;;15911:34:21;-1:-1:-1;;;;;15981:15:21;;;15961:18;;;15954:43;16079:53:15;;-1:-1:-1;16150:49:15;;;;;;15823:18:21;;16150:71:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16143:78;15998:231;-1:-1:-1;;;15998:231:15:o;13902:275::-;13969:7;13992:30;14026:24;:22;:24::i;:::-;13989:61;;;14082:13;:20;14069:10;:33;14061:65;;;;-1:-1:-1;;;14061:65:15;;17198:2:21;14061:65:15;;;17180:21:21;17237:2;17217:18;;;17210:30;17276:21;17256:18;;;17249:49;17315:18;;14061:65:15;16996:343:21;14061:65:15;14144:13;14158:10;14144:25;;;;;;;;:::i;:::-;;;;;;;14137:32;;;13902:275;;;:::o;1834:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1834:29:15;;;;-1:-1:-1;1834:29:15;:::o;7753:1358::-;7837:7;3381:17;3401:8;;;;;;;;;-1:-1:-1;;;;;3401:8:15;-1:-1:-1;;;;;3401:31:15;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3381:53;-1:-1:-1;3453:10:15;-1:-1:-1;;;;;3453:23:15;;;3445:50;;;;-1:-1:-1;;;3445:50:15;;9970:2:21;3445:50:15;;;9952:21:21;10009:2;9989:18;;;9982:30;10048:16;10028:18;;;10021:44;10082:18;;3445:50:15;9768:338:21;3445:50:15;7857:19:::1;7879:13;3222:12:8::0;;;3144:97;7879:13:15::1;7857:35;;7903:18;7936:26:::0;7965:13:::1;:11;:13::i;:::-;8018:16:::0;;7997:10:::1;:17:::0;7936:42;;-1:-1:-1;7997:37:15::1;7989:73;;;::::0;-1:-1:-1;;;7989:73:15;;17546:2:21;7989:73:15::1;::::0;::::1;17528:21:21::0;17585:2;17565:18;;;17558:30;17624:25;17604:18;;;17597:53;17667:18;;7989:73:15::1;17344:347:21::0;7989:73:15::1;8081:10;:17:::0;8073:43:::1;;;::::0;-1:-1:-1;;;8073:43:15;;17898:2:21;8073:43:15::1;::::0;::::1;17880:21:21::0;17937:1;17917:18;;;17910:29;17975:11;17955:18;;;17948:39;18004:18;;8073:43:15::1;17696:332:21::0;8073:43:15::1;8134:9;8129:367;8153:10;:17:::0;8149:21;::::1;8129:367;;;8192:13;8208:10;8219:1;8208:13;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;;::::1;;:19:::0;8287:9:::1;::::0;-1:-1:-1;;;;;8208:19:15;;::::1;::::0;-1:-1:-1;8287:9:15::1;8278:18:::0;;8274:108:::1;;8329:7;8337:1;8329:10;;;;;;;;:::i;:::-;-1:-1:-1::0;8358:8:15::1;::::0;-1:-1:-1;;;8358:8:15::1;8274:108;8408:38;8428:5;8435:7;8443:1;8435:10;;;;;;;;:::i;:::-;;;;;;;8408:19;:38::i;:::-;8396:50:::0;-1:-1:-1;8461:23:15::1;8396:50:::0;8461:23;::::1;:::i;:::-;;;8177:319;;8129:367;8172:3;;8129:367;;;;8529:1;8516:10;:14;8508:61;;;::::0;-1:-1:-1;;;8508:61:15;;18365:2:21;8508:61:15::1;::::0;::::1;18347:21:21::0;18404:2;18384:18;;;18377:30;18443:34;18423:18;;;18416:62;18514:4;18494:18;;;18487:32;18536:19;;8508:61:15::1;18163:398:21::0;8508:61:15::1;8582:14;8613:11;8628:1;8613:16:::0;8609:357:::1;;8668:13;::::0;8655:26:::1;::::0;:10;:26:::1;:::i;:::-;8646:35;;8609:357;;;8715:22;8743:24;:22;:24::i;:::-;8714:53;;;8807:1;8790:14;:18;8782:69;;;::::0;-1:-1:-1;;;8782:69:15;;18768:2:21;8782:69:15::1;::::0;::::1;18750:21:21::0;18807:2;18787:18;;;18780:30;18846:34;18826:18;;;18819:62;18917:8;18897:18;;;18890:36;18943:19;;8782:69:15::1;18566:402:21::0;8782:69:15::1;8940:13;::::0;8923:30:::1;::::0;:14;:30:::1;:::i;:::-;8907:11;8890:13;;8877:10;:26;;;;:::i;:::-;8876:42;;;;:::i;:::-;8875:79;;;;:::i;:::-;8866:88;;8699:267;8609:357;8984:6;8994:1;8984:11:::0;8976:37:::1;;;::::0;-1:-1:-1;;;8976:37:15;;19175:2:21;8976:37:15::1;::::0;::::1;19157:21:21::0;19214:2;19194:18;;;19187:30;19253:15;19233:18;;;19226:43;19286:18;;8976:37:15::1;18973:337:21::0;8976:37:15::1;9026:17;9032:2;9036:6;9026:5;:17::i;:::-;9066:2;-1:-1:-1::0;;;;;9061:16:15::1;;9070:6;9061:16;;;;2275:25:21::0;;2263:2;2248:18;;2129:177;9061:16:15::1;;;;;;;;9097:6:::0;7753:1358;-1:-1:-1;;;;;;;7753:1358:15:o;15052:414::-;15096:7;15116:19;15153:9;;;;;;;;;-1:-1:-1;;;;;15153:9:15;-1:-1:-1;;;;;15138:34:15;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15116:58;;;-1:-1:-1;15185:14:15;15209:16;15116:58;15209:2;:16;:::i;:::-;15202:24;;:2;:24;:::i;:::-;15185:41;;15238:16;15260:24;:22;:24::i;:::-;15237:47;;;15295:19;15317:13;3222:12:8;;;3144:97;15317:13:15;15295:35;;15345:11;15360:1;15345:16;15341:57;;15385:1;15378:8;;;;;;15052:414;:::o;15341:57::-;15454:3;;15439:11;15418:17;15429:6;15418:8;:17;:::i;:::-;15417:33;;;;:::i;:::-;15416:41;;;;:::i;:::-;15408:50;;;;;;15052:414;:::o;12284:281::-;12379:29;12410:32;3381:17;3401:8;;;;;;;;;-1:-1:-1;;;;;3401:8:15;-1:-1:-1;;;;;3401:31:15;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3381:53;-1:-1:-1;3453:10:15;-1:-1:-1;;;;;3453:23:15;;;3445:50;;;;-1:-1:-1;;;3445:50:15;;9970:2:21;3445:50:15;;;9952:21:21;10009:2;9989:18;;;9982:30;10048:16;10028:18;;;10021:44;10082:18;;3445:50:15;9768:338:21;3445:50:15;12468:19:::1;:17;:19::i;:::-;12460:52;;;::::0;-1:-1:-1;;;12460:52:15;;10313:2:21;12460:52:15::1;::::0;::::1;10295:21:21::0;10352:2;10332:18;;;10325:30;10391:22;10371:18;;;10364:50;10431:18;;12460:52:15::1;10111:344:21::0;12460:52:15::1;12530:27;:25;:27::i;:::-;12523:34;;;;3370:145:::0;12284:281;;:::o;17353:755::-;17494:10;:17;17410:22;;17434:27;;17494:17;17535:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17535:24:15;;17522:37;;17575:9;17570:485;17594:9;17590:1;:13;17570:485;;;17625:13;17641:10;17652:1;17641:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;:19;-1:-1:-1;;;;;17641:19:15;;-1:-1:-1;17698:31:15;17641:19;17698:15;:31::i;:::-;17769:9;;17675:54;;-1:-1:-1;;;;;;17769:9:15;;;17751:27;;;;17746:252;;17816:12;17800:10;17811:1;17800:13;;;;;;;;:::i;:::-;;;;;;:28;;;;;17746:252;;;17869:17;17889:49;17917:5;17925:12;17889:19;:49::i;:::-;17869:69;;17973:9;17957:10;17968:1;17957:13;;;;;;;;:::i;:::-;;;;;;:25;;;;;17850:148;17746:252;18030:10;18041:1;18030:13;;;;;;;;:::i;:::-;;;;;;;18012:31;;;;;:::i;:::-;;-1:-1:-1;;;17605:3:15;;17570:485;;;;18065:35;17353:755;;:::o;21046:555::-;21250:10;:17;21179:29;;21236:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21236:32:15;;21221:47;;21284:9;21279:283;21303:10;:17;21299:21;;21279:283;;;21342:23;21410:5;21386:10;21397:1;21386:13;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;21369:14;:37;;;;:::i;:::-;21368:47;;;;:::i;:::-;21342:73;;21450:15;21434:10;21445:1;21434:13;;;;;;;;:::i;:::-;;;;;;;:31;21430:121;;;21522:10;21533:1;21522:13;;;;;;;;:::i;:::-;;;;;;;21504:15;:31;;;;:::i;:::-;21486:12;21499:1;21486:15;;;;;;;;:::i;:::-;;;;;;:49;;;;;21430:121;-1:-1:-1;21322:3:15;;21279:283;;20397:306;20506:27;;20546:113;20570:10;:17;20566:21;;20546:113;;;20632:12;20645:1;20632:15;;;;;;;;:::i;:::-;;;;;;;20609:38;;;;;:::i;:::-;;-1:-1:-1;20589:3:15;;20546:113;;21883:361;22022:9;;21995:10;:17;;21971:7;;-1:-1:-1;;;;;22022:9:15;;21995:10;22006:5;;21995:17;;;;;;:::i;:::-;;;;;;;;;;;;;;:23;-1:-1:-1;;;;;21995:23:15;:36;21991:60;;-1:-1:-1;22040:11:15;22033:18;;21991:60;22062:19;22084:57;22104:10;22115:5;22104:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:23;-1:-1:-1;;;;;22104:23:15;22129:11;22084:19;:57::i;:::-;22062:79;;22174:1;22160:11;:15;22152:55;;;;-1:-1:-1;;;22152:55:15;;21283:2:21;22152:55:15;;;21265:21:21;21322:2;21302:18;;;21295:30;21361:29;21341:18;;;21334:57;21408:18;;22152:55:15;21081:351:21;7721:208:8;-1:-1:-1;;;;;7791:21:8;;7787:91;;7835:32;;;;;7864:1;7835:32;;;4832:74:21;4805:18;;7835:32:8;4660:252:21;7787:91:8;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8989:128::-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:8;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;10848:17;10828:37;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;;;;-1:-1:-1;;;;;21657:55:21;;10936:60:8;;;21639:74:21;21729:18;;;21722:34;;;21772:18;;;21765:34;;;21612:18;;10936:60:8;21437:368:21;10881:130:8;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:8;;5735:86;;5780:30;;;;;5807:1;5780:30;;;4832:74:21;4805:18;;5780:30:8;4660:252:21;5735:86:8;-1:-1:-1;;;;;5834:16:8;;5830:86;;5873:32;;;;;5902:1;5873:32;;;4832:74:21;4805:18;;5873:32:8;4660:252:21;5830:86:8;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;2431:307:13:-;1755:1;2558:7;;:18;2554:86;;2599:30;;;;;;;;;;;;;;2554:86;1755:1;2714:7;:17;2431:307::o;8247:206:8:-;-1:-1:-1;;;;;8317:21:8;;8313:89;;8361:30;;;;;8388:1;8361:30;;;4832:74:21;4805:18;;8361:30:8;4660:252:21;8313:89:8;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;23006:176:15:-;23156:9;;23093:19;;23132:42;;23145:9;;-1:-1:-1;;;;;23156:9:15;23167:6;23132:12;:42::i;18504:1654::-;18559:16;18577;18606:17;18626:8;;;;;;;;;-1:-1:-1;;;;;18626:8:15;-1:-1:-1;;;;;18626:31:15;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18606:53;;18670:18;18691:8;;;;;;;;;-1:-1:-1;;;;;18691:8:15;-1:-1:-1;;;;;18691:28:15;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18774:10;:17;18670:51;;-1:-1:-1;18734:23:15;;18760:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18760:32:15;-1:-1:-1;18844:10:15;:17;18734:58;;-1:-1:-1;18803:24:15;;18830:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18830:32:15;-1:-1:-1;18926:10:15;:17;18803:59;;-1:-1:-1;18873:36:15;;18912:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18912:32:15;-1:-1:-1;19011:10:15;:17;18873:71;;-1:-1:-1;18955:39:15;;18997:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18997:32:15;-1:-1:-1;19086:10:15;:17;18955:74;;-1:-1:-1;19040:29:15;;19072:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19072:32:15;-1:-1:-1;19164:10:15;:17;19040:64;;-1:-1:-1;19115:32:15;;19150;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19150:32:15;;19115:67;;19200:9;19195:232;19219:10;:17;19215:21;;19195:232;;;19270:10;19281:1;19270:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:19;19258:9;;-1:-1:-1;;;;;19270:19:15;;;;19258:6;;19265:1;;19258:9;;;;;;:::i;:::-;;;;;;:31;-1:-1:-1;;;;;19258:31:15;;;-1:-1:-1;;;;;19258:31:15;;;;;19317:10;19328:1;19317:13;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;19304:7;19312:1;19304:10;;;;;;;;:::i;:::-;;;;;;:33;;;;;19384:6;19391:1;19384:9;;;;;;;;:::i;:::-;;;;;;;;;;;19377:38;;;;;-1:-1:-1;;;;;4850:55:21;;;19377:38:15;;;4832:74:21;19377:27:15;;;;;;4805:18:21;;19377:38:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19352:19;19372:1;19352:22;;;;;;;;:::i;:::-;;;;;;;;;;:63;19238:3;;19195:232;;;;19439:25;19467:13;:11;:13::i;:::-;19439:41;;19513:10;-1:-1:-1;;;;;19493:41:15;;19535:8;19545:6;19553:7;19562;;19571:9;19582;19593;;;;;;;;;-1:-1:-1;;;;;19593:9:15;19493:110;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19621:9;19616:428;19640:10;:17;19636:21;;19616:428;;;19714:6;19721:1;19714:9;;;;;;;;:::i;:::-;;;;;;;;;;;19707:38;;;;;-1:-1:-1;;;;;4850:55:21;;;19707:38:15;;;4832:74:21;19707:27:15;;;;;;4805:18:21;;19707:38:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19679:22;19702:1;19679:25;;;;;;;;:::i;:::-;;;;;;:66;;;;;19794:19;19814:1;19794:22;;;;;;;;:::i;:::-;;;;;;;19766;19789:1;19766:25;;;;;;;;:::i;:::-;;;;;;;:50;19762:271;;;19883:19;19903:1;19883:22;;;;;;;;:::i;:::-;;;;;;;19855;19878:1;19855:25;;;;;;;;:::i;:::-;;;;;;;:50;;;;:::i;:::-;19837:12;19850:1;19837:15;;;;;;;;:::i;:::-;;;;;;:68;;;;;19762:271;;;19992:22;20015:1;19992:25;;;;;;;;:::i;:::-;;;;;;;19967:19;19987:1;19967:22;;;;;;;;:::i;:::-;;;;;;;:50;;;;:::i;:::-;19946:15;19962:1;19946:18;;;;;;;;:::i;:::-;;;;;;:71;;;;;19762:271;19659:3;;19616:428;;;;20080:10;-1:-1:-1;;;;;20061:38:15;;20092:6;20061:38;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;20120:12:15;;20134:15;;-1:-1:-1;18504:1654:15;-1:-1:-1;;;;;;;18504:1654:15:o;22545:160::-;22670:9;;22630:7;;22657:40;;-1:-1:-1;;;;;22670:9:15;22681:7;22690:6;22657:12;:40::i;6271:1107:8:-;-1:-1:-1;;;;;6360:18:8;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:8;;-1:-1:-1;6356:540:8;;-1:-1:-1;;;;;6570:15:8;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;;;;-1:-1:-1;;;;;21657:55:21;;6649:50:8;;;21639:74:21;21729:18;;;21722:34;;;21772:18;;;21765:34;;;21612:18;;6649:50:8;21437:368:21;6599:115:8;-1:-1:-1;;;;;6834:15:8;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:8;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:8;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:8;7355:4;-1:-1:-1;;;;;7346:25:8;;7365:5;7346:25;;;;2275::21;;2263:2;2248:18;;2129:177;7346:25:8;;;;;;;;6271:1107;;;:::o;9949:432::-;-1:-1:-1;;;;;10061:19:8;;10057:89;;10103:32;;;;;10132:1;10103:32;;;4832:74:21;4805:18;;10103:32:8;4660:252:21;10057:89:8;-1:-1:-1;;;;;10159:21:8;;10155:90;;10203:31;;;;;10231:1;10203:31;;;4832:74:21;4805:18;;10203:31:8;4660:252:21;10155:90:8;-1:-1:-1;;;;;10254:18:8;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:8;10342:5;-1:-1:-1;;;;;10333:31:8;;10358:5;10333:31;;;;2275:25:21;;2263:2;2248:18;;2129:177;10333:31:8;;;;;;;;9949:432;;;;:::o;14:477:21:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;482:2;412:66;407:2;399:6;395:15;391:88;380:9;376:104;372:113;364:121;;;14:477;;;;:::o;496:154::-;-1:-1:-1;;;;;575:5:21;571:54;564:5;561:65;551:93;;640:1;637;630:12;551:93;496:154;:::o;655:247::-;714:6;767:2;755:9;746:7;742:23;738:32;735:52;;;783:1;780;773:12;735:52;822:9;809:23;841:31;866:5;841:31;:::i;907:439::-;960:3;998:5;992:12;1025:6;1020:3;1013:19;1051:4;1080;1075:3;1071:14;1064:21;;1119:4;1112:5;1108:16;1142:1;1152:169;1166:6;1163:1;1160:13;1152:169;;;1227:13;;1215:26;;1261:12;;;;1296:15;;;;1188:1;1181:9;1152:169;;;-1:-1:-1;1337:3:21;;907:439;-1:-1:-1;;;;;907:439:21:o;1351:261::-;1530:2;1519:9;1512:21;1493:4;1550:56;1602:2;1591:9;1587:18;1579:6;1550:56;:::i;1617:315::-;1685:6;1693;1746:2;1734:9;1725:7;1721:23;1717:32;1714:52;;;1762:1;1759;1752:12;1714:52;1801:9;1788:23;1820:31;1845:5;1820:31;:::i;:::-;1870:5;1922:2;1907:18;;;;1894:32;;-1:-1:-1;;;1617:315:21:o;2311:456::-;2388:6;2396;2404;2457:2;2445:9;2436:7;2432:23;2428:32;2425:52;;;2473:1;2470;2463:12;2425:52;2512:9;2499:23;2531:31;2556:5;2531:31;:::i;:::-;2581:5;-1:-1:-1;2638:2:21;2623:18;;2610:32;2651:33;2610:32;2651:33;:::i;:::-;2311:456;;2703:7;;-1:-1:-1;;;2757:2:21;2742:18;;;;2729:32;;2311:456::o;2961:332::-;3168:6;3157:9;3150:25;3211:2;3206;3195:9;3191:18;3184:30;3131:4;3231:56;3283:2;3272:9;3268:18;3260:6;3231:56;:::i;3298:488::-;3351:3;3389:5;3383:12;3416:6;3411:3;3404:19;3442:4;3471;3466:3;3462:14;3455:21;;3510:4;3503:5;3499:16;3533:1;3543:218;3557:6;3554:1;3551:13;3543:218;;;3622:13;;-1:-1:-1;;;;;3618:62:21;3606:75;;3701:12;;;;3736:15;;;;3579:1;3572:9;3543:218;;3791:261;3970:2;3959:9;3952:21;3933:4;3990:56;4042:2;4031:9;4027:18;4019:6;3990:56;:::i;4057:598::-;4143:6;4151;4159;4167;4220:3;4208:9;4199:7;4195:23;4191:33;4188:53;;;4237:1;4234;4227:12;4188:53;4276:9;4263:23;4295:31;4320:5;4295:31;:::i;:::-;4345:5;-1:-1:-1;4402:2:21;4387:18;;4374:32;4415:33;4374:32;4415:33;:::i;:::-;4467:7;-1:-1:-1;4521:2:21;4506:18;;4493:32;;-1:-1:-1;4577:2:21;4562:18;;4549:32;4590:33;4549:32;4590:33;:::i;:::-;4057:598;;;;-1:-1:-1;4057:598:21;;-1:-1:-1;;4057:598:21:o;4917:820::-;5179:2;5191:21;;;5261:13;;5164:18;;;5283:22;;;5131:4;;5358;;5336:2;5321:18;;;5385:17;;;5131:4;5430:185;5444:6;5441:1;5438:13;5430:185;;;5519:13;;5512:21;5505:29;5493:42;;5555:12;;;;5590:15;;;;5466:1;5459:9;5430:185;;;5434:3;;;5662:9;5657:3;5653:19;5646:4;5635:9;5631:20;5624:49;5690:41;5727:3;5719:6;5690:41;:::i;5973:180::-;6032:6;6085:2;6073:9;6064:7;6060:23;6056:32;6053:52;;;6101:1;6098;6091:12;6053:52;-1:-1:-1;6124:23:21;;5973:180;-1:-1:-1;5973:180:21:o;6460:388::-;6528:6;6536;6589:2;6577:9;6568:7;6564:23;6560:32;6557:52;;;6605:1;6602;6595:12;6557:52;6644:9;6631:23;6663:31;6688:5;6663:31;:::i;:::-;6713:5;-1:-1:-1;6770:2:21;6755:18;;6742:32;6783:33;6742:32;6783:33;:::i;:::-;6835:7;6825:17;;;6460:388;;;;;:::o;6853:184::-;6905:77;6902:1;6895:88;7002:4;6999:1;6992:15;7026:4;7023:1;7016:15;7042:334;7113:2;7107:9;7169:2;7159:13;;7174:66;7155:86;7143:99;;7272:18;7257:34;;7293:22;;;7254:62;7251:88;;;7319:18;;:::i;:::-;7355:2;7348:22;7042:334;;-1:-1:-1;7042:334:21:o;7381:183::-;7441:4;7474:18;7466:6;7463:30;7460:56;;;7496:18;;:::i;:::-;-1:-1:-1;7541:1:21;7537:14;7553:4;7533:25;;7381:183::o;7569:1026::-;7662:6;7670;7723:2;7711:9;7702:7;7698:23;7694:32;7691:52;;;7739:1;7736;7729:12;7691:52;7778:9;7765:23;7797:31;7822:5;7797:31;:::i;:::-;7847:5;-1:-1:-1;7871:2:21;7909:18;;;7896:32;7951:18;7940:30;;7937:50;;;7983:1;7980;7973:12;7937:50;8006:22;;8059:4;8051:13;;8047:27;-1:-1:-1;8037:55:21;;8088:1;8085;8078:12;8037:55;8124:2;8111:16;8147:60;8163:43;8203:2;8163:43;:::i;:::-;8147:60;:::i;:::-;8241:15;;;8323:1;8319:10;;;;8311:19;;8307:28;;;8272:12;;;;8347:19;;;8344:39;;;8379:1;8376;8369:12;8344:39;8403:11;;;;8423:142;8439:6;8434:3;8431:15;8423:142;;;8505:17;;8493:30;;8456:12;;;;8543;;;;8423:142;;;8584:5;8574:15;;;;;;;7569:1026;;;;;:::o;8600:465::-;8857:2;8846:9;8839:21;8820:4;8883:56;8935:2;8924:9;8920:18;8912:6;8883:56;:::i;:::-;8987:9;8979:6;8975:22;8970:2;8959:9;8955:18;8948:50;9015:44;9052:6;9044;9015:44;:::i;:::-;9007:52;8600:465;-1:-1:-1;;;;;8600:465:21:o;9070:437::-;9149:1;9145:12;;;;9192;;;9213:61;;9267:4;9259:6;9255:17;9245:27;;9213:61;9320:2;9312:6;9309:14;9289:18;9286:38;9283:218;;9357:77;9354:1;9347:88;9458:4;9455:1;9448:15;9486:4;9483:1;9476:15;9512:251;9582:6;9635:2;9623:9;9614:7;9610:23;9606:32;9603:52;;;9651:1;9648;9641:12;9603:52;9683:9;9677:16;9702:31;9727:5;9702:31;:::i;10460:184::-;10512:77;10509:1;10502:88;10609:4;10606:1;10599:15;10633:4;10630:1;10623:15;10649:168;10722:9;;;10753;;10770:15;;;10764:22;;10750:37;10740:71;;10791:18;;:::i;10822:184::-;10874:77;10871:1;10864:88;10971:4;10968:1;10961:15;10995:4;10992:1;10985:15;11011:881;11106:6;11137:2;11180;11168:9;11159:7;11155:23;11151:32;11148:52;;;11196:1;11193;11186:12;11148:52;11229:9;11223:16;11262:18;11254:6;11251:30;11248:50;;;11294:1;11291;11284:12;11248:50;11317:22;;11370:4;11362:13;;11358:27;-1:-1:-1;11348:55:21;;11399:1;11396;11389:12;11348:55;11428:2;11422:9;11451:60;11467:43;11507:2;11467:43;:::i;11451:60::-;11545:15;;;11627:1;11623:10;;;;11615:19;;11611:28;;;11576:12;;;;11651:19;;;11648:39;;;11683:1;11680;11673:12;11648:39;11707:11;;;;11727:135;11743:6;11738:3;11735:15;11727:135;;;11809:10;;11797:23;;11760:12;;;;11840;;;;11727:135;;;11881:5;11011:881;-1:-1:-1;;;;;;;11011:881:21:o;12651:184::-;12721:6;12774:2;12762:9;12753:7;12749:23;12745:32;12742:52;;;12790:1;12787;12780:12;12742:52;-1:-1:-1;12813:16:21;;12651:184;-1:-1:-1;12651:184:21:o;13907:274::-;13947:1;13973;13963:189;;14008:77;14005:1;13998:88;14109:4;14106:1;14099:15;14137:4;14134:1;14127:15;13963:189;-1:-1:-1;14166:9:21;;13907:274::o;14186:128::-;14253:9;;;14274:11;;;14271:37;;;14288:18;;:::i;16366:277::-;16433:6;16486:2;16474:9;16465:7;16461:23;16457:32;16454:52;;;16502:1;16499;16492:12;16454:52;16534:9;16528:16;16587:5;16580:13;16573:21;16566:5;16563:32;16553:60;;16609:1;16606;16599:12;18033:125;18098:9;;;18119:10;;;18116:36;;;18132:18;;:::i;19315:273::-;19383:6;19436:2;19424:9;19415:7;19411:23;19407:32;19404:52;;;19452:1;19449;19442:12;19404:52;19484:9;19478:16;19534:4;19527:5;19523:16;19516:5;19513:27;19503:55;;19554:1;19551;19544:12;19593:476;19682:1;19719:5;19682:1;19733:330;19754:7;19744:8;19741:21;19733:330;;;19873:4;19805:66;19801:77;19795:4;19792:87;19789:113;;;19882:18;;:::i;:::-;19932:7;19922:8;19918:22;19915:55;;;19952:16;;;;19915:55;20031:22;;;;19991:15;;;;19733:330;;;19737:3;19593:476;;;;;:::o;20074:866::-;20123:5;20153:8;20143:80;;-1:-1:-1;20194:1:21;20208:5;;20143:80;20242:4;20232:76;;-1:-1:-1;20279:1:21;20293:5;;20232:76;20324:4;20342:1;20337:59;;;;20410:1;20405:130;;;;20317:218;;20337:59;20367:1;20358:10;;20381:5;;;20405:130;20442:3;20432:8;20429:17;20426:43;;;20449:18;;:::i;:::-;-1:-1:-1;;20505:1:21;20491:16;;20520:5;;20317:218;;20619:2;20609:8;20606:16;20600:3;20594:4;20591:13;20587:36;20581:2;20571:8;20568:16;20563:2;20557:4;20554:12;20550:35;20547:77;20544:159;;;-1:-1:-1;20656:19:21;;;20688:5;;20544:159;20735:34;20760:8;20754:4;20735:34;:::i;:::-;20865:6;20797:66;20793:79;20784:7;20781:92;20778:118;;;20876:18;;:::i;:::-;20914:20;;20074:866;-1:-1:-1;;;20074:866:21:o;20945:131::-;21005:5;21034:36;21061:8;21055:4;21034:36;:::i;21810:1046::-;22257:3;22246:9;22239:22;22220:4;22284:57;22336:3;22325:9;22321:19;22313:6;22284:57;:::i;:::-;22389:9;22381:6;22377:22;22372:2;22361:9;22357:18;22350:50;22423:44;22460:6;22452;22423:44;:::i;:::-;22409:58;;22515:9;22507:6;22503:22;22498:2;22487:9;22483:18;22476:50;22543:44;22580:6;22572;22543:44;:::i;:::-;22618:2;22603:18;;22596:34;;;;-1:-1:-1;;;;;;;22728:15:21;;;22722:3;22707:19;;22700:44;22781:15;;;22775:3;22760:19;;22753:44;22834:15;;;22828:3;22813:19;;;22806:44;22535:52;21810:1046;-1:-1:-1;;;21810:1046:21:o"},"gasEstimates":{"creation":{"codeDepositCost":"2750200","executionCost":"infinite","totalCost":"infinite"},"external":{"ONE()":"2339","allowance(address,address)":"infinite","approve(address,uint256)":"24752","assetInfos(uint256)":"6881","assetLiquidity(uint256)":"infinite","balanceOf(address)":"2620","baseAsset()":"2403","burn(address)":"infinite","computeTotalValuation()":"infinite","decimals()":"244","getAmountOut(address,address,uint256)":"infinite","getAssetReserve(address)":"infinite","getAssets()":"infinite","getDeviation()":"infinite","getReserves()":"infinite","getWeights()":"infinite","isRebalanceNeeded()":"infinite","liquidity()":"infinite","mint(address,uint256[])":"infinite","name()":"infinite","performRebalanceIfNeeded()":"infinite","rebalanceWeights(address)":"infinite","registry()":"2447","swap(address,address,uint256,address)":"infinite","symbol()":"infinite","totalSupply()":"2348","transfer(address,uint256)":"51299","transferFrom(address,address,uint256)":"infinite","trigger()":"2340","unitPrice()":"infinite"},"internal":{"_calculateAmountsToAdd(uint256,uint256[] memory)":"infinite","_calculateLiquidity(uint256,uint256)":"infinite","_calculateTotalAddedLiquidity(uint256[] memory)":"infinite","_computeTotalValuation()":"infinite","_convertBaseToToken(address,uint256)":"infinite","_convertTokenToBase(address,uint256)":"infinite","_performRebalanceIfNeeded()":"infinite","initializeAssets(address[] memory,uint256[] memory)":"infinite"}},"methodIdentifiers":{"ONE()":"c2ee3a08","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","assetInfos(uint256)":"d14ef46d","assetLiquidity(uint256)":"cf8fa764","balanceOf(address)":"70a08231","baseAsset()":"cdf456e1","burn(address)":"89afcb44","computeTotalValuation()":"36bf6e39","decimals()":"313ce567","getAmountOut(address,address,uint256)":"4aa06652","getAssetReserve(address)":"b2b55d70","getAssets()":"67e4ac2c","getDeviation()":"89ab3532","getReserves()":"0902f1ac","getWeights()":"22acb867","isRebalanceNeeded()":"8a77c8dc","liquidity()":"1a686502","mint(address,uint256[])":"de836ebd","name()":"06fdde03","performRebalanceIfNeeded()":"f47b45e8","rebalanceWeights(address)":"0723c999","registry()":"7b103999","swap(address,address,uint256,address)":"6e81221c","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","trigger()":"7fec8d38","unitPrice()":"e73faa2d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_trigger\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesBurned\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesMinted\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"RebalancePerformed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amountsAdded\",\"type\":\"uint256[]\"}],\"name\":\"WeightsRebalanced\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assetInfos\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetIndex\",\"type\":\"uint256\"}],\"name\":\"assetLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"computeTotalValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalVal\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"valuations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeviation\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"directions\",\"type\":\"bool[]\"},{\"internalType\":\"uint256[]\",\"name\":\"deviations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRebalanceNeeded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performRebalanceIfNeeded\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsToAdd\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsToRemove\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"rebalanceWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IBaluniV1Registry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trigger\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"assetLiquidity(uint256)\":{\"details\":\"Returns the liquidity of a specific asset in the pool.\",\"params\":{\"assetIndex\":\"The index of the asset.\"},\"returns\":{\"_0\":\"The liquidity of the asset.\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address)\":{\"details\":\"Burns the pool tokens and transfers the underlying assets to the specified address.\",\"params\":{\"to\":\"The address to transfer the underlying assets to.\"}},\"computeTotalValuation()\":{\"details\":\"Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\",\"returns\":{\"totalVal\":\"The total valuation of the pool.\",\"valuations\":\"An array of individual valuations.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getAmountOut(address,address,uint256)\":{\"details\":\"Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\",\"params\":{\"amount\":\"The amount of `fromToken` being swapped.\",\"fromToken\":\"The address of the token being swapped from.\",\"toToken\":\"The address of the token being swapped to.\"},\"returns\":{\"_0\":\"The amount of `toToken` that will be received.\"}},\"getAssetReserve(address)\":{\"details\":\"Returns the reserve amount of the specified asset.\",\"params\":{\"asset\":\"The address of the asset.\"},\"returns\":{\"_0\":\"The reserve amount of the asset.\"}},\"getAssets()\":{\"details\":\"Retrieves the list of assets in the pool.\",\"returns\":{\"_0\":\"An array of addresses representing the assets.\"}},\"getDeviation()\":{\"details\":\"Returns the deviation between the current weights and target weights of the assets in the pool.\",\"returns\":{\"directions\":\"An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\"}},\"getReserves()\":{\"details\":\"Returns an array of reserves for each asset in the pool.\",\"returns\":{\"_0\":\"An array of reserves.\"}},\"getWeights()\":{\"details\":\"Retrieves the list of weights associated with the assets in the pool.\",\"returns\":{\"_0\":\"An array of uint256 values representing the weights.\"}},\"isRebalanceNeeded()\":{\"details\":\"Checks if rebalancing is needed for the pool.\",\"returns\":{\"_0\":\"A boolean value indicating whether rebalancing is needed or not.\"}},\"liquidity()\":{\"details\":\"Returns the total liquidity of the pool.\",\"returns\":{\"_0\":\"The total liquidity of the pool.\"}},\"mint(address,uint256[])\":{\"details\":\"Mints new tokens and adds them to the specified address.\",\"params\":{\"to\":\"The address to which the new tokens will be minted.\"},\"returns\":{\"_0\":\"The amount of tokens minted.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"performRebalanceIfNeeded()\":{\"details\":\"Performs rebalance\"},\"rebalanceWeights(address)\":{\"details\":\"Rebalances the weights of the pool by calculating the amounts to add for each token, transferring the calculated amounts from the user to the pool, minting the total added liquidity, updating the reserves, and emitting an event to indicate the rebalancing of weights.\",\"params\":{\"receiver\":\"The address to receive the minted liquidity tokens.\"}},\"swap(address,address,uint256,address)\":{\"details\":\"Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`. Requirements: - `fromToken` and `toToken` must be different tokens. - `amount` must be greater than zero. - Sufficient liquidity of `toToken` must be available in the contract. Emits a `Swap` event with the details of the swap. Updates the reserves after the swap.\",\"params\":{\"amount\":\"The amount of `fromToken` to swap.\",\"fromToken\":\"The address of the token to swap from.\",\"receiver\":\"The address to receive the swapped tokens.\",\"toToken\":\"The address of the token to swap to.\"},\"returns\":{\"amountOut\":\"The amount of `toToken` received after the swap.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"unitPrice()\":{\"details\":\"Returns the unit price of the pool.\",\"returns\":{\"_0\":\"The unit price of the pool.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(address)\":{\"notice\":\"This function can only be called by the periphery contract.The pool tokens must have a balance greater than 0.The total supply of pool tokens must be greater than 0.The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.The function checks if the pool has sufficient liquidity before performing any transfers.If any transfer fails, the function reverts the entire operation.After the transfers, the function updates the reserves of the pool.Emits a `Burn` event with the address and share of pool tokens burned.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaluniV1Pool.sol\":\"BaluniV1Pool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"contracts/BaluniV1Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\n\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\nimport '@openzeppelin/contracts/utils/ReentrancyGuard.sol';\\r\\n\\r\\nimport './interfaces/IBaluniV1PoolPeriphery.sol';\\r\\nimport './interfaces/IBaluniV1Registry.sol';\\r\\nimport './interfaces/IBaluniV1Rebalancer.sol';\\r\\nimport './interfaces/IBaluniV1Oracle.sol';\\r\\n\\r\\ncontract BaluniV1Pool is ERC20, ReentrancyGuard {\\r\\n    AssetInfo[] public assetInfos;\\r\\n\\r\\n    uint256 public trigger;\\r\\n    uint256 public ONE;\\r\\n    address public baseAsset;\\r\\n    uint256 private scalingFactor;\\r\\n\\r\\n    IBaluniV1Registry public registry;\\r\\n\\r\\n    struct AssetInfo {\\r\\n        address asset;\\r\\n        uint256 weight;\\r\\n    }\\r\\n\\r\\n    event RebalancePerformed(address indexed by, address[] assets);\\r\\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\\r\\n    event Burn(address indexed user, uint256 sharesBurned);\\r\\n    event Mint(address indexed to, uint256 sharesMinted);\\r\\n    event Swap(\\r\\n        address indexed user,\\r\\n        address indexed fromToken,\\r\\n        address indexed toToken,\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOut\\r\\n    );\\r\\n\\r\\n    constructor(\\r\\n        address[] memory _assets,\\r\\n        uint256[] memory _weights,\\r\\n        uint256 _trigger,\\r\\n        address _registry\\r\\n    ) ERC20('Baluni LP', 'BALUNI-LP') {\\r\\n        registry = IBaluniV1Registry(_registry);\\r\\n\\r\\n        ONE = 1e18;\\r\\n\\r\\n        bool result = initializeAssets(_assets, _weights);\\r\\n        require(result, 'Initialization failed');\\r\\n\\r\\n        trigger = _trigger;\\r\\n\\r\\n        baseAsset = registry.getUSDC();\\r\\n\\r\\n        scalingFactor = 10 ** (18 - 6);\\r\\n\\r\\n        require(baseAsset != address(0), 'Invalid base asset address');\\r\\n\\r\\n        uint256 totalWeight = 0;\\r\\n\\r\\n        for (uint256 i = 0; i < _weights.length; i++) {\\r\\n            totalWeight += _weights[i];\\r\\n        }\\r\\n\\r\\n        require(totalWeight == 10000, 'Invalid weights');\\r\\n    }\\r\\n\\r\\n    modifier onlyPeriphery() {\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n        require(msg.sender == periphery, 'Only Periphery');\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the assets and their weights for the pool.\\r\\n     * @param _assets The array of asset addresses.\\r\\n     * @param _weights The array of weights corresponding to each asset.\\r\\n     */\\r\\n    function initializeAssets(address[] memory _assets, uint256[] memory _weights) internal returns (bool) {\\r\\n        address rebalancer = registry.getBaluniRebalancer();\\r\\n\\r\\n        require(registry.getBaluniRebalancer() != address(0), 'Invalid rebalancer address');\\r\\n        require(_assets.length == _weights.length, 'Assets and weights length mismatch');\\r\\n\\r\\n        for (uint256 i = 0; i < _assets.length; i++) {\\r\\n            require(_assets[i] != address(0), 'Invalid asset address');\\r\\n            require(_weights[i] > 0, 'Invalid weight');\\r\\n\\r\\n            assetInfos.push(AssetInfo({asset: _assets[i], weight: _weights[i]}));\\r\\n\\r\\n            IERC20 asset = IERC20(_assets[i]);\\r\\n            if (asset.allowance(address(this), address(rebalancer)) == 0) {\\r\\n                asset.approve(address(rebalancer), type(uint256).max);\\r\\n            }\\r\\n        }\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\\r\\n     * transferring the calculated amounts from the user to the pool, minting the total added liquidity,\\r\\n     * updating the reserves, and emitting an event to indicate the rebalancing of weights.\\r\\n     * @param receiver The address to receive the minted liquidity tokens.\\r\\n     */\\r\\n    function rebalanceWeights(address receiver) external onlyPeriphery returns (uint256[] memory) {\\r\\n        require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n        (uint256 totalValuation, uint256[] memory valuations) = _computeTotalValuation(); // 6dec\\r\\n\\r\\n        uint256[] memory amountsToAdd = _calculateAmountsToAdd(totalValuation, valuations); // 6dec\\r\\n        uint256 totalAddedLiquidity = _calculateTotalAddedLiquidity(amountsToAdd);\\r\\n\\r\\n        totalAddedLiquidity *= scalingFactor;\\r\\n\\r\\n        uint256[] memory amounts = new uint256[](assetInfos.length);\\r\\n\\r\\n        for (uint256 i = 0; i < amountsToAdd.length; i++) {\\r\\n            if (amountsToAdd[i] > 0) {\\r\\n                amounts[i] = _calculateLiquidity(i, amountsToAdd[i]);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _mint(receiver, totalAddedLiquidity);\\r\\n\\r\\n        emit WeightsRebalanced(msg.sender, amountsToAdd);\\r\\n\\r\\n        return amounts;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - `fromToken` and `toToken` must be different tokens.\\r\\n     * - `amount` must be greater than zero.\\r\\n     * - Sufficient liquidity of `toToken` must be available in the contract.\\r\\n     *\\r\\n     * Emits a `Swap` event with the details of the swap.\\r\\n     *\\r\\n     * Updates the reserves after the swap.\\r\\n     *\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of `fromToken` to swap.\\r\\n     * @param receiver The address to receive the swapped tokens.\\r\\n     * @return amountOut The amount of `toToken` received after the swap.\\r\\n     */\\r\\n    function swap(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external nonReentrant returns (uint256 amountOut) {\\r\\n        uint256 _BPS_FEE = registry.getBPS_FEE();\\r\\n        require(fromToken != toToken, 'Cannot swap the same token');\\r\\n        require(amount > 0, 'Amount must be greater than zero');\\r\\n\\r\\n        uint256 receivedAmount = getAmountOut(fromToken, toToken, amount);\\r\\n        require(getAssetReserve(toToken) >= receivedAmount, 'Insufficient Liquidity');\\r\\n\\r\\n        uint256 fee = (receivedAmount * _BPS_FEE) / 10000;\\r\\n        amountOut = receivedAmount - fee;\\r\\n\\r\\n        require(amountOut > 0, 'Amount to send must be greater than 0');\\r\\n\\r\\n        emit Swap(receiver, fromToken, toToken, amount, amountOut);\\r\\n\\r\\n        return amountOut;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Mints new tokens and adds them to the specified address.\\r\\n     * @param to The address to which the new tokens will be minted.\\r\\n     * @return The amount of tokens minted.\\r\\n     */\\r\\n    function mint(address to, uint256[] memory amounts) external onlyPeriphery returns (uint256) {\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        uint256 totalValue = 0;\\r\\n        uint256[] memory _reserves = getReserves();\\r\\n        require(assetInfos.length == _reserves.length, 'Invalid reserves length');\\r\\n        require(assetInfos.length > 0, 'No assets');\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            address asset = assetInfos[i].asset;\\r\\n            uint256 valuation;\\r\\n            if (asset == baseAsset) {\\r\\n                valuation = amounts[i];\\r\\n                continue;\\r\\n            }\\r\\n            valuation = _convertTokenToBase(asset, amounts[i]);\\r\\n            totalValue += valuation;\\r\\n        }\\r\\n\\r\\n        require(totalValue > 0, 'Total value must be greater than 0');\\r\\n\\r\\n        uint256 toMint;\\r\\n\\r\\n        if (totalSupply == 0) {\\r\\n            toMint = totalValue * scalingFactor;\\r\\n        } else {\\r\\n            (uint256 totalLiquidity, ) = _computeTotalValuation();\\r\\n            require(totalLiquidity > 0, 'Total liquidity must be greater than 0');\\r\\n            toMint = ((totalValue * scalingFactor) * totalSupply) / (totalLiquidity * scalingFactor);\\r\\n        }\\r\\n        require(toMint != 0, 'Mint qty is 0');\\r\\n\\r\\n        _mint(to, toMint);\\r\\n\\r\\n        emit Mint(to, toMint);\\r\\n\\r\\n        return toMint;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Burns the pool tokens and transfers the underlying assets to the specified address.\\r\\n     * @param to The address to transfer the underlying assets to.\\r\\n     * @notice This function can only be called by the periphery contract.\\r\\n     * @notice The pool tokens must have a balance greater than 0.\\r\\n     * @notice The total supply of pool tokens must be greater than 0.\\r\\n     * @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\\r\\n     * @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\\r\\n     * @notice The function checks if the pool has sufficient liquidity before performing any transfers.\\r\\n     * @notice If any transfer fails, the function reverts the entire operation.\\r\\n     * @notice After the transfers, the function updates the reserves of the pool.\\r\\n     * @notice Emits a `Burn` event with the address and share of pool tokens burned.\\r\\n     */\\r\\n    function burn(address to) external onlyPeriphery returns (uint256[] memory) {\\r\\n        uint256 _BPS_FEE = registry.getBPS_FEE();\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n\\r\\n        uint256 share = balanceOf(address(this));\\r\\n        require(share > 0, 'Share must be greater than 0');\\r\\n\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        require(totalSupply > 0, 'No liquidity');\\r\\n\\r\\n        uint256[] memory amounts = new uint256[](assetInfos.length);\\r\\n        uint256 fee = (share * _BPS_FEE) / 10000;\\r\\n        uint256 shareAfterFee = share - fee;\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 assetBalance = IBaluniV1PoolPeriphery(periphery).getAssetReserve(\\r\\n                address(this),\\r\\n                assetInfos[i].asset\\r\\n            );\\r\\n            amounts[i] = (assetBalance * shareAfterFee) / totalSupply;\\r\\n        }\\r\\n\\r\\n        require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient BALUNI liquidity');\\r\\n\\r\\n        address treasury = registry.getTreasury();\\r\\n        bool feeTransferSuccess = IERC20(address(this)).transfer(treasury, fee);\\r\\n        require(feeTransferSuccess, 'Fee transfer failed');\\r\\n\\r\\n        _burn(address(this), shareAfterFee);\\r\\n\\r\\n        emit Burn(to, shareAfterFee);\\r\\n\\r\\n        return amounts;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\\r\\n     * @param fromToken The address of the token being swapped from.\\r\\n     * @param toToken The address of the token being swapped to.\\r\\n     * @param amount The amount of `fromToken` being swapped.\\r\\n     * @return The amount of `toToken` that will be received.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) public view returns (uint256) {\\r\\n        IBaluniV1Oracle baluniOracle = IBaluniV1Oracle(registry.getBaluniOracle());\\r\\n        require(registry.getBaluniOracle() != address(0), 'Invalid oracle address');\\r\\n        uint256 amountOut = baluniOracle.convert(fromToken, toToken, amount);\\r\\n        return amountOut;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance\\r\\n     */\\r\\n    function performRebalanceIfNeeded()\\r\\n        external\\r\\n        onlyPeriphery\\r\\n        returns (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove)\\r\\n    {\\r\\n        require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n        return _performRebalanceIfNeeded();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the deviation between the current weights and target weights of the assets in the pool.\\r\\n     * @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\\r\\n     */\\r\\n    function getDeviation() public view returns (bool[] memory directions, uint256[] memory deviations) {\\r\\n        (uint256 totVal, uint256[] memory valuations) = _computeTotalValuation();\\r\\n        uint256 numAssets = assetInfos.length;\\r\\n\\r\\n        directions = new bool[](numAssets);\\r\\n        deviations = new uint256[](numAssets);\\r\\n\\r\\n        for (uint256 i = 0; i < numAssets; i++) {\\r\\n            uint256 currentWeight = (valuations[i] * 10000) / totVal;\\r\\n            uint256 targetWeight = assetInfos[i].weight;\\r\\n\\r\\n            if (currentWeight > targetWeight) {\\r\\n                deviations[i] = currentWeight - targetWeight;\\r\\n                directions[i] = true;\\r\\n            } else {\\r\\n                deviations[i] = targetWeight - currentWeight;\\r\\n                directions[i] = false;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return (directions, deviations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the liquidity of a specific asset in the pool.\\r\\n     * @param assetIndex The index of the asset.\\r\\n     * @return The liquidity of the asset.\\r\\n     */\\r\\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256) {\\r\\n        (, uint256[] memory usdValuations) = _computeTotalValuation();\\r\\n        require(assetIndex < usdValuations.length, 'Invalid asset index');\\r\\n        return usdValuations[assetIndex];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\\r\\n     * @return totalVal The total valuation of the pool.\\r\\n     * @return valuations An array of individual valuations.\\r\\n     */\\r\\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations) {\\r\\n        (totalVal, valuations) = _computeTotalValuation();\\r\\n        return (totalVal, valuations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the total liquidity of the pool.\\r\\n     * @return The total liquidity of the pool.\\r\\n     */\\r\\n    function liquidity() external view returns (uint256) {\\r\\n        (uint256 totalVal, ) = _computeTotalValuation();\\r\\n        return totalVal;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the unit price of the pool.\\r\\n     * @return The unit price of the pool.\\r\\n     */\\r\\n    function unitPrice() external view returns (uint256) {\\r\\n        uint256 baseDecimal = IERC20Metadata(baseAsset).decimals();\\r\\n        uint256 factor = 10 ** (18 - baseDecimal);\\r\\n        (uint256 totalVal, ) = _computeTotalValuation();\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        if (totalSupply == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        return (((totalVal * factor) / totalSupply) * ONE);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of reserves for each asset in the pool.\\r\\n     * @return An array of reserves.\\r\\n     */\\r\\n    function getReserves() public view returns (uint256[] memory) {\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n        return IBaluniV1PoolPeriphery(periphery).getReserves(address(this));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserve amount of the specified asset.\\r\\n     * @param asset The address of the asset.\\r\\n     * @return The reserve amount of the asset.\\r\\n     */\\r\\n    function getAssetReserve(address asset) public view returns (uint256) {\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n        return IBaluniV1PoolPeriphery(periphery).getAssetReserve(address(this), asset);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the list of assets in the pool.\\r\\n     * @return An array of addresses representing the assets.\\r\\n     */\\r\\n    function getAssets() external view returns (address[] memory) {\\r\\n        address[] memory assets = new address[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            assets[i] = assetInfos[i].asset;\\r\\n        }\\r\\n        return assets;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the list of weights associated with the assets in the pool.\\r\\n     * @return An array of uint256 values representing the weights.\\r\\n     */\\r\\n    function getWeights() external view returns (uint256[] memory) {\\r\\n        uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            weights[i] = assetInfos[i].weight;\\r\\n        }\\r\\n        return weights;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Computes the total valuation of the assets in the pool.\\r\\n     * @return totalValuation The total valuation of the assets.\\r\\n     * @return valuations An array of valuations for each asset in the pool.\\r\\n     */\\r\\n    function _computeTotalValuation() internal view returns (uint256 totalValuation, uint256[] memory valuations) {\\r\\n        uint256 numAssets = assetInfos.length;\\r\\n        valuations = new uint256[](numAssets);\\r\\n        for (uint256 i = 0; i < numAssets; i++) {\\r\\n            address asset = assetInfos[i].asset;\\r\\n            uint256 assetReserve = getAssetReserve(address(asset));\\r\\n\\r\\n            if ((address(asset) == baseAsset)) {\\r\\n                valuations[i] = assetReserve;\\r\\n            } else {\\r\\n                uint256 valuation = _convertTokenToBase(address(asset), assetReserve);\\r\\n                valuations[i] = valuation;\\r\\n            }\\r\\n            totalValuation += valuations[i];\\r\\n        }\\r\\n        return (totalValuation, valuations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed.\\r\\n     * This function retrieves the assets and weights from the `assetInfos` array,\\r\\n     * and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\\r\\n     * It emits a `RebalancePerformed` event after the rebalance is performed.\\r\\n     * @notice This function should only be called internally.\\r\\n     */\\r\\n    function _performRebalanceIfNeeded() internal returns (uint256[] memory, uint256[] memory) {\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n        address rebalancer = registry.getBaluniRebalancer();\\r\\n\\r\\n        address[] memory assets = new address[](assetInfos.length);\\r\\n        uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n        uint256[] memory peripheryBalancesB4 = new uint256[](assetInfos.length);\\r\\n        uint256[] memory peripheryBalancesAfter = new uint256[](assetInfos.length);\\r\\n        uint256[] memory amountsToAdd = new uint256[](assetInfos.length);\\r\\n        uint256[] memory amountsToRemove = new uint256[](assetInfos.length);\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            assets[i] = assetInfos[i].asset;\\r\\n            weights[i] = assetInfos[i].weight;\\r\\n            peripheryBalancesB4[i] = IERC20(assets[i]).balanceOf(periphery);\\r\\n        }\\r\\n\\r\\n        uint256[] memory balances = getReserves();\\r\\n\\r\\n        IBaluniV1Rebalancer(rebalancer).rebalance(balances, assets, weights, trigger, periphery, periphery, baseAsset);\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            peripheryBalancesAfter[i] = IERC20(assets[i]).balanceOf(periphery);\\r\\n\\r\\n            if (peripheryBalancesAfter[i] > peripheryBalancesB4[i]) {\\r\\n                amountsToAdd[i] = peripheryBalancesAfter[i] - peripheryBalancesB4[i];\\r\\n            } else {\\r\\n                amountsToRemove[i] = peripheryBalancesB4[i] - peripheryBalancesAfter[i];\\r\\n            }\\r\\n        }\\r\\n\\r\\n        emit RebalancePerformed(msg.sender, assets);\\r\\n\\r\\n        return (amountsToAdd, amountsToRemove);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the total added liquidity based on the amounts to add.\\r\\n     * @param amountsToAdd An array of amounts to add for each asset.\\r\\n     * @return totalAddedLiquidity The total added liquidity.\\r\\n     */\\r\\n    function _calculateTotalAddedLiquidity(\\r\\n        uint256[] memory amountsToAdd\\r\\n    ) internal view returns (uint256 totalAddedLiquidity) {\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            totalAddedLiquidity += amountsToAdd[i];\\r\\n        }\\r\\n        return totalAddedLiquidity;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\\r\\n     * @param totalValuation The total valuation of the pool.\\r\\n     * @param valuations An array of current valuations for each asset.\\r\\n     * @return amountsToAdd An array of amounts to add to each asset.\\r\\n     */\\r\\n    function _calculateAmountsToAdd(\\r\\n        uint256 totalValuation,\\r\\n        uint256[] memory valuations\\r\\n    ) internal view returns (uint256[] memory amountsToAdd) {\\r\\n        amountsToAdd = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 targetValuation = (totalValuation * assetInfos[i].weight) / 10000;\\r\\n            if (valuations[i] < targetValuation) {\\r\\n                amountsToAdd[i] = targetValuation - valuations[i];\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return amountsToAdd;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\\r\\n     * @param index The index of the asset in the assetInfos array.\\r\\n     * @param amountToAdd The amount of native tokens to add as liquidity.\\r\\n     */\\r\\n    function _calculateLiquidity(uint256 index, uint256 amountToAdd) internal view returns (uint256) {\\r\\n        if (assetInfos[index].asset == baseAsset) return amountToAdd;\\r\\n        uint256 tokenAmount = _convertBaseToToken(assetInfos[index].asset, amountToAdd);\\r\\n        require(tokenAmount > 0, 'Invalid token amount to add');\\r\\n        return tokenAmount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified amount of native token to the corresponding token amount.\\r\\n     * @param toToken The address of the native token to convert from.\\r\\n     * @param amount The amount of native token to convert.\\r\\n     * @return The corresponding token amount.\\r\\n     */\\r\\n    function _convertBaseToToken(address toToken, uint256 amount) internal view returns (uint256) {\\r\\n        return getAmountOut(baseAsset, toToken, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified token to the native token using the rebalancer contract.\\r\\n     * @param fromToken The address of the token to convert from.\\r\\n     * @param amount The amount of tokens to convert.\\r\\n     * @return tokenAmount The converted amount of tokens.\\r\\n     */\\r\\n    function _convertTokenToBase(address fromToken, uint256 amount) internal view returns (uint256 tokenAmount) {\\r\\n        return getAmountOut(fromToken, baseAsset, amount);\\r\\n    }\\r\\n\\r\\n    // return true if one of the deviation overcome the trigger\\r\\n    /**\\r\\n     * @dev Checks if rebalancing is needed for the pool.\\r\\n     * @return A boolean value indicating whether rebalancing is needed or not.\\r\\n     */\\r\\n    function isRebalanceNeeded() public view returns (bool) {\\r\\n        (bool[] memory directions, uint256[] memory deviations) = getDeviation();\\r\\n        for (uint256 i = 0; i < deviations.length; i++) {\\r\\n            if (directions[i] && deviations[i] > trigger) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2c977e2a116eb8f71e61d674d3c7cbacda77f18a9a5a005960ac5cdef7ec8384\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Oracle.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Oracle {\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256 valuation);\\r\\n\\r\\n    function convertScaled(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) external view returns (uint256 valuation);\\r\\n}\\r\\n\",\"keccak256\":\"0x2bc62f7640b15a1772de630216f6fe6aa7a719cb6cf0255befdde19ec8de785a\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1PoolPeriphery\\r\\n * @dev Interface for the BaluniV1PoolPeriphery contract.\\r\\n */\\r\\ninterface IBaluniV1PoolPeriphery {\\r\\n    /**\\r\\n     * @dev Swaps tokens in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @param receiver The address of the receiver.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Performs batch swaps between multiple token pairs.\\r\\n     * @param fromTokens An array of addresses representing the tokens to swap from.\\r\\n     * @param toTokens An array of addresses representing the tokens to swap to.\\r\\n     * @param amounts An array of amounts representing the amounts to swap.\\r\\n     * @param receivers An array of addresses representing the receivers of the swapped tokens.\\r\\n     * @return An array of amounts representing the amounts of tokens received after the swaps.\\r\\n     */\\r\\n    function batchSwap(\\r\\n        address[] calldata fromTokens,\\r\\n        address[] calldata toTokens,\\r\\n        uint256[] calldata amounts,\\r\\n        address[] calldata receivers\\r\\n    ) external returns (uint256[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Rebalances weights in a pool.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function rebalanceWeights(address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Adds liquidity to a BaluniV1Pool.\\r\\n     * @param amounts An array of amounts for each asset to add as liquidity.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function addLiquidity(uint256[] memory amounts, address poolAddress, address receiver) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Removes liquidity from a BaluniV1Pool.\\r\\n     * @param share The amount of liquidity tokens to remove.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function removeLiquidity(uint256 share, address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed for the given tokens.\\r\\n     * @param poolAddress The address of the token pool to rebalance.\\r\\n     */\\r\\n    function performRebalanceIfNeeded(address poolAddress) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of pool addresses that contain the given token.\\r\\n     * @param token The address of the token to search for.\\r\\n     * @return An array of pool addresses.\\r\\n     */\\r\\n    function getPoolsContainingToken(address token) external view returns (address[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the version of the contract.\\r\\n     * @return The version string.\\r\\n     */\\r\\n    function getVersion() external view returns (uint64);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserves of the pool.\\r\\n     * @param pool The address of the pool.\\r\\n     * @return An array of reserves.\\r\\n     */\\r\\n    function getReserves(address pool) external view returns (uint256[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserve of a specific asset in a pool.\\r\\n     * @param pool The address of the pool.\\r\\n     * @param asset The address of the asset.\\r\\n     * @return The reserve of the asset.\\r\\n     */\\r\\n    function getAssetReserve(address pool, address asset) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x0d208337a9258876165804a1e3158e005dcdab6f38ced9147d2b05d951a0f54c\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n    struct RebalanceVars {\\r\\n        uint256 length;\\r\\n        uint256 totalValue;\\r\\n        uint256 finalUsdBalance;\\r\\n        uint256 overweightVaultsLength;\\r\\n        uint256 underweightVaultsLength;\\r\\n        uint256 totalActiveWeight;\\r\\n        uint256 amountOut;\\r\\n        uint256[] overweightVaults;\\r\\n        uint256[] overweightAmounts;\\r\\n        uint256[] underweightVaults;\\r\\n        uint256[] underweightAmounts;\\r\\n        uint256[] balances;\\r\\n    }\\r\\n\\r\\n    // Functions\\r\\n    function rebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address receiver,\\r\\n        address baseAsset\\r\\n    ) external;\\r\\n\\r\\n    function checkRebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address baseAsset\\r\\n    ) external view returns (RebalanceVars memory);\\r\\n\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x61c44c9208ab5c5638160706c4737e8032440e73054a90378d0b65559653d57a\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Registry.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1Registry\\r\\n * @dev Interface for the BaluniV1Registry contract.\\r\\n */\\r\\ninterface IBaluniV1Registry {\\r\\n    function setUniswapFactory(address _uniswapFactory) external;\\r\\n\\r\\n    function setUniswapRouter(address _uniswapRouter) external;\\r\\n\\r\\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\\r\\n\\r\\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\\r\\n\\r\\n    function setBaluniSwapper(address _baluniSwapper) external;\\r\\n\\r\\n    function setBaluniOracle(address _baluniOracle) external;\\r\\n\\r\\n    function setBaluniPoolFactory(address _baluniPoolFactory) external;\\r\\n\\r\\n    function setBaluniRebalancer(address _baluniRebalancer) external;\\r\\n\\r\\n    function setBaluniRouter(address _baluniRouter) external;\\r\\n\\r\\n    function setBaluniRegistry(address _baluniRegistry) external;\\r\\n\\r\\n    function setWNATIVE(address _WNATIVE) external;\\r\\n\\r\\n    function setUSDC(address _USDC) external;\\r\\n\\r\\n    function setTreasury(address _treasury) external;\\r\\n\\r\\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\\r\\n\\r\\n    function setBPS_FEE(uint256 __BPS_FEE) external;\\r\\n\\r\\n    function getUniswapFactory() external view returns (address);\\r\\n\\r\\n    function getUniswapRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniSwapper() external view returns (address);\\r\\n\\r\\n    function getBaluniOracle() external view returns (address);\\r\\n\\r\\n    function getBaluniAgentFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolPeriphery() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniRebalancer() external view returns (address);\\r\\n\\r\\n    function getBaluniRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniRegistry() external view returns (address);\\r\\n\\r\\n    function getWNATIVE() external view returns (address);\\r\\n\\r\\n    function getUSDC() external view returns (address);\\r\\n\\r\\n    function get1inchSpotAgg() external view returns (address);\\r\\n\\r\\n    function getBPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getMAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getBPS_BASE() external view returns (uint256);\\r\\n\\r\\n    function getTreasury() external view returns (address);\\r\\n\\r\\n    function setStaticOracle(address _staticOracle) external;\\r\\n\\r\\n    function getStaticOracle() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x846d9e23f2a9579307f6f9b453f9426e1083b2f550bb999315a4abc32a648570\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1159,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1165,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1167,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1169,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1171,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":2049,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_status","offset":0,"slot":"5","type":"t_uint256"},{"astId":2233,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"assetInfos","offset":0,"slot":"6","type":"t_array(t_struct(AssetInfo)2249_storage)dyn_storage"},{"astId":2235,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"trigger","offset":0,"slot":"7","type":"t_uint256"},{"astId":2237,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"ONE","offset":0,"slot":"8","type":"t_uint256"},{"astId":2239,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"baseAsset","offset":0,"slot":"9","type":"t_address"},{"astId":2241,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"scalingFactor","offset":0,"slot":"10","type":"t_uint256"},{"astId":2244,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"registry","offset":0,"slot":"11","type":"t_contract(IBaluniV1Registry)4898"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(AssetInfo)2249_storage)dyn_storage":{"base":"t_struct(AssetInfo)2249_storage","encoding":"dynamic_array","label":"struct BaluniV1Pool.AssetInfo[]","numberOfBytes":"32"},"t_contract(IBaluniV1Registry)4898":{"encoding":"inplace","label":"contract IBaluniV1Registry","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(AssetInfo)2249_storage":{"encoding":"inplace","label":"struct BaluniV1Pool.AssetInfo","members":[{"astId":2246,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"asset","offset":0,"slot":"0","type":"t_address"},{"astId":2248,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"weight","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"burn(address)":{"notice":"This function can only be called by the periphery contract.The pool tokens must have a balance greater than 0.The total supply of pool tokens must be greater than 0.The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.The function checks if the pool has sufficient liquidity before performing any transfers.If any transfer fails, the function reverts the entire operation.After the transfers, the function updates the reserves of the pool.Emits a `Burn` event with the address and share of pool tokens burned."}},"version":1}}},"contracts/BaluniV1PoolFactory.sol":{"BaluniV1PoolFactory":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"address[]","name":"assets","type":"address[]"}],"name":"PoolCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allPools","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"trigger","type":"uint256"}],"name":"createPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllPools","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"}],"name":"getPoolAssets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset1","type":"address"},{"internalType":"address","name":"asset2","type":"address"}],"name":"getPoolByAssets","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getPoolsByAsset","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_register","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_pool","type":"address"}],"name":"poolExist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"contract IBaluniV1Registry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_register","type":"address"},{"internalType":"uint64","name":"_version","type":"uint64"}],"name":"reinitialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"createPool(address[],uint256[],uint256)":{"details":"Creates a new BaluniV1Pool contract and registers it in the factory.","params":{"assets":"The array of asset addresses to be included in the pool.","trigger":"The trigger value for rebalancing the pool.","weights":"The array of weights corresponding to each asset in the pool."},"returns":{"_0":"The address of the newly created pool."}},"getAllPools()":{"details":"Retrieves all the pools created by the factory.","returns":{"_0":"An array of pool addresses."}},"getPoolAssets(address)":{"details":"Retrieves the assets of a specific pool.","params":{"poolAddress":"The address of the pool."},"returns":{"_0":"An array of asset addresses."}},"getPoolByAssets(address,address)":{"details":"Retrieves the pool address based on the given assets.","params":{"asset1":"The address of the first asset.","asset2":"The address of the second asset."},"returns":{"_0":"The address of the pool."}},"getPoolsByAsset(address)":{"details":"Returns an array of pool addresses that contain the specified token.","params":{"token":"The address of the token to search for."},"returns":{"_0":"An array of pool addresses."}},"getPoolsCount()":{"details":"Retrieves the number of pools created by the factory.","returns":{"_0":"The count of pools."}},"owner()":{"details":"Returns the address of the current owner."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x5BD2 PUSH2 0x39 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xFFF ADD MSTORE DUP2 DUP2 PUSH2 0x1028 ADD MSTORE PUSH2 0x11DD ADD MSTORE PUSH2 0x5BD2 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x123 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89345EFB GT PUSH2 0xA1 JUMPI DUP1 PUSH4 0xB4340E6A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xD88FF1F4 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3BA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB4340E6A EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0xB4AC6860 EQ PUSH2 0x374 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x89345EFB EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x8F2248BC EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x300 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F1EF286 GT PUSH2 0xF6 JUMPI DUP1 PUSH4 0x531AA03E GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x531AA03E EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x257 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D5E94A7 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x3069873B EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x41D1DE97 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x4276B97B EQ PUSH2 0x1A1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x132 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x141 CALLDATASIZE PUSH1 0x4 PUSH2 0x1636 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0x175A JUMP JUMPDEST PUSH2 0x407 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x19C CALLDATASIZE PUSH1 0x4 PUSH2 0x181E JUMP JUMPDEST PUSH2 0x8B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x1835 JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x18A5 JUMP JUMPDEST PUSH2 0x947 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH2 0x966 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x21E CALLDATASIZE PUSH1 0x4 PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x994 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x146 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0x290 CALLDATASIZE PUSH1 0x4 PUSH2 0x1835 JUMP JUMPDEST PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x146 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x1947 JUMP JUMPDEST PUSH2 0xA01 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x348 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x36F CALLDATASIZE PUSH1 0x4 PUSH2 0x1835 JUMP JUMPDEST PUSH2 0xB58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x1F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1835 JUMP JUMPDEST PUSH2 0xD86 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0xF3F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1835 JUMP JUMPDEST PUSH2 0xF9E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP5 MLOAD GT PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4174206C656173742074776F2061737365747320617265207265717569726564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH2 0x509 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6368000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x64A JUMPI PUSH0 PUSH2 0x520 DUP3 PUSH1 0x1 PUSH2 0x19E1 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x641 JUMPI PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 PUSH0 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x54B JUMPI PUSH2 0x54B PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x585 JUMPI PUSH2 0x585 PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD AND EQ PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20616C72656164792065786973747320666F72207468697320706169 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x523 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x50B JUMP JUMPDEST POP PUSH0 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH2 0x670 SWAP1 PUSH2 0x1615 JUMP JUMPDEST PUSH2 0x67D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x696 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE DUP2 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE SWAP1 SWAP2 POP DUP2 SWAP1 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x86B JUMPI PUSH0 PUSH2 0x711 DUP3 PUSH1 0x1 PUSH2 0x19E1 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0x862 JUMPI DUP3 PUSH1 0x2 PUSH0 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x733 JUMPI PUSH2 0x733 PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x76D JUMPI PUSH2 0x76D PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH0 DUP11 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7CD JUMPI PUSH2 0x7CD PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x807 JUMPI PUSH2 0x807 PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x714 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x6FC JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA4AF51F99A910B453B81F2F9F5673ACD70BF8895729E0A6DE8E5E0908D89F2B DUP8 PUSH1 0x40 MLOAD PUSH2 0x8A5 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x8C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP3 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x67E4AC2C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x920 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x8B1 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1A8E JUMP JUMPDEST PUSH2 0x94F PUSH2 0xFF4 JUMP JUMPDEST PUSH2 0x958 DUP3 PUSH2 0x10C4 JUMP JUMPDEST PUSH2 0x962 DUP3 DUP3 PUSH2 0x10CC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x96F PUSH2 0x11D2 JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH2 0x99C PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x9A5 PUSH0 PUSH2 0x12A8 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x9F9 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9CF JUMPI PUSH2 0x9CF PUSH2 0x19F4 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x9F1 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x9AA JUMP JUMPDEST POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xA4F JUMPI POP DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP2 AND LT ISZERO JUMPDEST ISZERO PUSH2 0xA86 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 SWAP1 SWAP3 AND DUP3 OR OR DUP3 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB77 JUMPI PUSH2 0xB77 PUSH2 0x166D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBA0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0xCE0 JUMPI PUSH0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBC2 JUMPI PUSH2 0xBC2 PUSH2 0x19F4 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x67E4AC2C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC1B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xC42 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1A8E JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xCC6 JUMPI DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC6B JUMPI PUSH2 0xC6B PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xCBE JUMPI DUP3 DUP7 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xC94 JUMPI PUSH2 0xC94 PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP5 PUSH2 0xCB6 DUP2 PUSH2 0x1B23 JUMP JUMPDEST SWAP6 POP POP PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xC46 JUMP JUMPDEST POP DUP5 MLOAD DUP5 SUB PUSH2 0xCD6 JUMPI POP POP PUSH2 0xCE0 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xBA6 JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCFB JUMPI PUSH2 0xCFB PUSH2 0x166D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD24 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD7D JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xD43 JUMPI PUSH2 0xD43 PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD5D JUMPI PUSH2 0xD5D PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0xD29 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xDD0 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xDEC JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xDFA JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xE31 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xE92 JUMPI DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x10000000000000000 OR DUP6 SSTORE JUMPDEST PUSH2 0xE9A PUSH2 0x1330 JUMP JUMPDEST PUSH2 0xEA3 CALLER PUSH2 0x1338 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0xF37 JUMPI DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xF94 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF76 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFA6 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST PUSH2 0xFF1 DUP2 PUSH2 0x12A8 JUMP JUMPDEST POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x108D JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1081 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFF1 PUSH2 0x1234 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1126 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1123 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1B5A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1167 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x11C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST PUSH2 0x11CD DUP4 DUP4 PUSH2 0x1349 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x1266 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x9A5 PUSH2 0x139E JUMP JUMPDEST PUSH2 0x1340 PUSH2 0x139E JUMP JUMPDEST PUSH2 0xFF1 DUP2 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x1352 DUP3 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1396 JUMPI PUSH2 0x11CD DUP3 DUP3 PUSH2 0x14B4 JUMP JUMPDEST PUSH2 0x962 PUSH2 0x1526 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFA6 PUSH2 0x139E JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x145B JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x14D0 SWAP2 SWAP1 PUSH2 0x1B71 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1508 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x150D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x151D DUP6 DUP4 DUP4 PUSH2 0x155E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1573 JUMPI PUSH2 0x156E DUP3 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x8B1 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x158A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x15CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST POP DUP1 PUSH2 0x8B1 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x15E3 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4015 DUP1 PUSH2 0x1B88 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFF1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1647 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1652 DUP2 PUSH2 0x1622 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1662 DUP2 PUSH2 0x1622 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x16C3 JUMPI PUSH2 0x16C3 PUSH2 0x166D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x16E4 JUMPI PUSH2 0x16E4 PUSH2 0x166D JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16FD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1712 PUSH2 0x170D DUP4 PUSH2 0x16CB JUMP JUMPDEST PUSH2 0x169A JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x1733 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x174F JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1738 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x176C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1783 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1796 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x17A6 PUSH2 0x170D DUP4 PUSH2 0x16CB JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP11 DUP5 GT ISZERO PUSH2 0x17C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x17EB JUMPI DUP6 CALLDATALOAD PUSH2 0x17DC DUP2 PUSH2 0x1622 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x17C9 JUMP JUMPDEST SWAP8 POP POP DUP8 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1800 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x180D DUP7 DUP3 DUP8 ADD PUSH2 0x16EE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x182E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1845 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8B1 DUP2 PUSH2 0x1622 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1888 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1863 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x8B1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1850 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x18C1 DUP2 PUSH2 0x1622 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x18DE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1903 JUMPI PUSH2 0x1903 PUSH2 0x166D JUMP JUMPDEST PUSH2 0x1915 DUP5 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0x169A JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP8 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x192A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1958 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1963 DUP2 PUSH2 0x1622 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1662 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x401 JUMPI PUSH2 0x401 PUSH2 0x19B4 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH0 PUSH2 0x1A33 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x1850 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 MLOAD DUP1 DUP4 MSTORE DUP8 DUP3 ADD SWAP3 DUP3 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A69 JUMPI DUP5 MLOAD DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1A4D JUMP JUMPDEST POP POP PUSH1 0x40 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A9F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1AC5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1AD3 PUSH2 0x170D DUP3 PUSH2 0x16CB JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x1AF1 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x1B18 JUMPI DUP4 MLOAD PUSH2 0x1B09 DUP2 PUSH2 0x1622 JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1AF6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1B53 JUMPI PUSH2 0x1B53 PUSH2 0x19B4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B6A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4015 CODESIZE SUB DUP1 PUSH2 0x4015 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x7B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x42616C756E69204C5 PUSH1 0xBC SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x42414C554E492D4C5 PUSH1 0xBC SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x909 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x8E DUP3 DUP3 PUSH2 0x909 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x5 SSTORE POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SSTORE PUSH0 PUSH2 0xC8 DUP6 DUP6 PUSH2 0x28B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x11C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A6174696F6E206661696C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP4 SWAP1 SSTORE PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1BF01E9B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x1BF01E9B SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x169 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH5 0xE8D4A51000 PUSH1 0xA SSTORE PUSH2 0x201 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420626173652061737365742061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x113 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x23C JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x21F JUMPI PUSH2 0x21F PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x9FC JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x204 JUMP JUMPDEST POP DUP1 PUSH2 0x2710 EQ PUSH2 0x280 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642077656967687473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x113 JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0xA51 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x35D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726562616C616E6365722061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x113 JUMP JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH2 0x433 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x113 JUMP JUMPDEST PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6B6 JUMPI PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x45A JUMPI PUSH2 0x45A PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x113 JUMP JUMPDEST PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4CB JUMPI PUSH2 0x4CB PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x511 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081DD95A59DA1D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x113 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x530 JUMPI PUSH2 0x530 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x558 JUMPI PUSH2 0x558 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP6 SSTORE PUSH0 SWAP5 DUP6 MSTORE DUP3 DUP6 KECCAK256 DUP5 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP3 SSTORE SWAP3 SWAP1 SWAP2 ADD MLOAD SWAP2 ADD SSTORE DUP6 MLOAD DUP7 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x5B8 JUMPI PUSH2 0x5B8 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x611 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x635 SWAP2 SWAP1 PUSH2 0xA1B JUMP JUMPDEST PUSH0 SUB PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH0 NOT PUSH1 0x24 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x687 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6AB SWAP2 SWAP1 PUSH2 0xA32 JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x435 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x6FF JUMPI PUSH2 0x6FF PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x71F JUMPI PUSH2 0x71F PUSH2 0x6C3 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x73F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x753 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x768 PUSH2 0x763 DUP4 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x789 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x7A5 JUMPI DUP1 MLOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x78E JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x7C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x7D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7EC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x7FC PUSH2 0x763 DUP4 PUSH2 0x707 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP12 DUP5 GT ISZERO PUSH2 0x81A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x83F JUMPI PUSH2 0x830 DUP7 PUSH2 0x729 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x81F JUMP JUMPDEST SWAP2 DUP11 ADD MLOAD SWAP2 SWAP9 POP SWAP1 SWAP4 POP POP POP DUP1 DUP3 GT ISZERO PUSH2 0x857 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x864 DUP8 DUP3 DUP9 ADD PUSH2 0x744 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH2 0x87A PUSH1 0x60 DUP7 ADD PUSH2 0x729 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x899 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x8B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x904 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x8E2 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x901 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x8EE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x922 JUMPI PUSH2 0x922 PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0x936 DUP2 PUSH2 0x930 DUP5 SLOAD PUSH2 0x885 JUMP JUMPDEST DUP5 PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x969 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x952 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x9C0 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x997 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x978 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x9B4 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9E1 DUP3 PUSH2 0x729 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6BD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA2B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA42 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x9E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x35B7 DUP1 PUSH2 0xA5E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FEC8D38 GT PUSH2 0xFE JUMPI DUP1 PUSH4 0xC2EE3A08 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xDE836EBD EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0xF47B45E8 EQ PUSH2 0x442 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC2EE3A08 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xCDF456E1 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xCF8FA764 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xD14EF46D EQ PUSH2 0x3BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8A77C8DC GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x8A77C8DC EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xB2B55D70 EQ PUSH2 0x37B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7FEC8D38 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x89AB3532 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x345 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x174 JUMPI DUP1 PUSH4 0x67E4AC2C GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x67E4AC2C EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x2FB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x36BF6E39 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x298 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1AF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x22ACB867 EQ PUSH2 0x258 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x723C999 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x213 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1DD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x2DDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E47 JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST PUSH2 0x206 PUSH2 0x762 JUMP JUMPDEST PUSH2 0x22E PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAE JUMP JUMPDEST PUSH2 0x881 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EA JUMP JUMPDEST PUSH2 0x242 PUSH2 0x89A JUMP JUMPDEST PUSH2 0x206 PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x22E PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED8 JUMP JUMPDEST PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EA JUMP JUMPDEST PUSH2 0x28A PUSH2 0x96E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP3 SWAP2 SWAP1 PUSH2 0x2F16 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED8 JUMP JUMPDEST PUSH2 0x982 JUMP JUMPDEST PUSH2 0x2B3 PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x2F66 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x2F78 JUMP JUMPDEST PUSH2 0xC26 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x30E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EA JUMP JUMPDEST PUSH2 0x242 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x337 PUSH2 0xEDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP3 SWAP2 SWAP1 PUSH2 0x2FC8 JUMP JUMPDEST PUSH2 0x206 PUSH2 0x353 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E47 JUMP JUMPDEST PUSH2 0x1096 JUMP JUMPDEST PUSH2 0x22E PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x1723 JUMP JUMPDEST PUSH2 0x22E PUSH2 0x376 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAE JUMP JUMPDEST PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E47 JUMP JUMPDEST PUSH2 0x173F JUMP JUMPDEST PUSH2 0x242 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x30E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x3B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3017 JUMP JUMPDEST PUSH2 0x1847 JUMP JUMPDEST PUSH2 0x3D0 PUSH2 0x3CB CALLDATASIZE PUSH1 0x4 PUSH2 0x3017 JUMP JUMPDEST PUSH2 0x18C6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1EA JUMP JUMPDEST PUSH2 0x242 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x302E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x435 CALLDATASIZE PUSH1 0x4 PUSH2 0x3104 JUMP JUMPDEST PUSH2 0x18FC JUMP JUMPDEST PUSH2 0x242 PUSH2 0x1D12 JUMP JUMPDEST PUSH2 0x44A PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP3 SWAP2 SWAP1 PUSH2 0x31AA JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x467 SWAP1 PUSH2 0x31D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x493 SWAP1 PUSH2 0x31D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55F SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506572697068657279000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C6 PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x612 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526562616C616E6365206E6F74206E6565646564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x61C PUSH2 0x1F31 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH2 0x62B DUP4 DUP4 PUSH2 0x2061 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x637 DUP3 PUSH2 0x2163 JUMP JUMPDEST SWAP1 POP PUSH1 0xA SLOAD DUP2 PUSH2 0x647 SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x667 JUMPI PUSH2 0x667 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x690 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x709 JUMPI PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6B1 JUMPI PUSH2 0x6B1 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x701 JUMPI PUSH2 0x6E2 DUP2 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6D5 JUMPI PUSH2 0x6D5 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x219F JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6F4 JUMPI PUSH2 0x6F4 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x695 JUMP JUMPDEST POP PUSH2 0x714 DUP9 DUP4 PUSH2 0x226F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E DUP5 PUSH1 0x40 MLOAD PUSH2 0x74D SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP6 POP POP POP POP POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7B5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7D9 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x3E99C1E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x3E99C1E4 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x836 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x87B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x32AE JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x88E DUP2 DUP6 DUP6 PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8A4 PUSH2 0x1F31 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8CB JUMPI PUSH2 0x8CB PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8F4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x75C JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x916 JUMPI PUSH2 0x916 PUSH2 0x3281 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x938 JUMPI PUSH2 0x938 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x8F9 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x958 DUP6 DUP3 DUP6 PUSH2 0x22D2 JUMP JUMPDEST PUSH2 0x963 DUP6 DUP6 DUP6 PUSH2 0x2385 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH2 0x979 PUSH2 0x1F31 JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9D4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F8 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA54 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA78 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xACE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F7261636C65206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0x248391FF SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB3D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB61 SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB8B JUMPI PUSH2 0xB8B PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBB4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x75C JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xBD6 JUMPI PUSH2 0xBD6 PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xC06 JUMPI PUSH2 0xC06 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0xBB9 JUMP JUMPDEST PUSH0 PUSH2 0xC2F PUSH2 0x2414 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x85462D6F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x85462D6F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC8F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCB3 SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xD16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 DUP5 GT PUSH2 0xD65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 PUSH2 0xD71 DUP8 DUP8 DUP8 PUSH2 0x982 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xD7D DUP8 PUSH2 0x173F JUMP JUMPDEST LT ISZERO PUSH2 0xDCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH2 0xDD9 DUP5 DUP5 PUSH2 0x326A JUMP JUMPDEST PUSH2 0xDE3 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP1 POP PUSH2 0xDEF DUP2 DUP4 PUSH2 0x3389 JUMP JUMPDEST SWAP4 POP PUSH0 DUP5 GT PUSH2 0xE66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F2073656E64206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x68616E2030000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5B5 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 DUP10 DUP9 PUSH1 0x40 MLOAD PUSH2 0xEBE SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP PUSH2 0xED3 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH2 0xEE8 PUSH2 0x1F31 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP2 SWAP4 POP SWAP2 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF09 JUMPI PUSH2 0xF09 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF32 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF4E JUMPI PUSH2 0xF4E PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF77 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x108E JUMPI PUSH0 DUP5 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF98 JUMPI PUSH2 0xF98 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2710 PUSH2 0xFAD SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH2 0xFB7 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xFCD JUMPI PUSH2 0xFCD PUSH2 0x3281 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1038 JUMPI PUSH2 0xFF1 DUP2 DUP4 PUSH2 0x3389 JUMP JUMPDEST DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1003 JUMPI PUSH2 0x1003 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1023 JUMPI PUSH2 0x1023 PUSH2 0x3281 JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH2 0x1084 JUMP JUMPDEST PUSH2 0x1042 DUP3 DUP3 PUSH2 0x3389 JUMP JUMPDEST DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1054 JUMPI PUSH2 0x1054 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1073 JUMPI PUSH2 0x1073 PUSH2 0x3281 JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xF7C JUMP JUMPDEST POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x110D SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1167 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506572697068657279000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x85462D6F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x85462D6F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11C7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11EB SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x123E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1262 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x12C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 PUSH2 0x12CB PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x131C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1339 JUMPI PUSH2 0x1339 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1362 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH2 0x2710 PUSH2 0x1373 DUP8 DUP7 PUSH2 0x326A JUMP JUMPDEST PUSH2 0x137D SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x138A DUP3 DUP7 PUSH2 0x3389 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x148E JUMPI PUSH0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA3E113FB ADDRESS PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x13BC JUMPI PUSH2 0x13BC PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP5 SWAP1 SHL PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x142D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1451 SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x145E DUP5 DUP4 PUSH2 0x326A JUMP JUMPDEST PUSH2 0x1468 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x147A JUMPI PUSH2 0x147A PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x138E JUMP JUMPDEST POP ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x14ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742042414C554E49206C6971756964697479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x3B19E84A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x3B19E84A SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x154D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1571 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH0 SWAP1 ADDRESS SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15D9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15FD SWAP2 SWAP1 PUSH2 0x339C JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x164C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x1656 ADDRESS DUP5 PUSH2 0x2457 JUMP JUMPDEST DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1691 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP3 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x16B4 PUSH2 0xEDB JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x171A JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x16D5 JUMPI PUSH2 0x16D5 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP1 ISZERO PUSH2 0x1703 JUMPI POP PUSH1 0x7 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x16F9 JUMPI PUSH2 0x16F9 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT JUMPDEST ISZERO PUSH2 0x1712 JUMPI PUSH1 0x1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x16BA JUMP JUMPDEST POP PUSH0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x467 SWAP1 PUSH2 0x31D7 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x88E DUP2 DUP6 DUP6 PUSH2 0x2385 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1791 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17B5 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA3E113FB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xA3E113FB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x181C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1840 SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1851 PUSH2 0x1F31 JUMP JUMPDEST SWAP2 POP POP DUP1 MLOAD DUP4 LT PUSH2 0x18A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420696E64657800000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST DUP1 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x18B6 JUMPI PUSH2 0x18B6 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x18D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x194E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1972 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x19CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506572697068657279000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 PUSH2 0x19D6 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0x19E2 PUSH2 0x762 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x6 SLOAD SWAP2 SWAP3 POP EQ PUSH2 0x1A37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1A86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206173736574730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1B24 JUMPI PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1AA6 JUMPI PUSH2 0x1AA6 PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 POP AND DUP3 SUB PUSH2 0x1AE8 JUMPI DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1ADE JUMPI PUSH2 0x1ADE PUSH2 0x3281 JUMP JUMPDEST POP PUSH2 0x1B1C SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1B0B DUP3 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1AFE JUMPI PUSH2 0x1AFE PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x24A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B17 DUP2 DUP7 PUSH2 0x33BB JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1A88 JUMP JUMPDEST POP PUSH0 DUP3 GT PUSH2 0x1B9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 DUP4 PUSH0 SUB PUSH2 0x1BB6 JUMPI PUSH1 0xA SLOAD PUSH2 0x1BAF SWAP1 DUP5 PUSH2 0x326A JUMP JUMPDEST SWAP1 POP PUSH2 0x1C6B JUMP JUMPDEST PUSH0 PUSH2 0x1BBF PUSH2 0x1F31 JUMP JUMPDEST POP SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1C37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E20300000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1C44 SWAP1 DUP3 PUSH2 0x326A JUMP JUMPDEST DUP6 PUSH1 0xA SLOAD DUP7 PUSH2 0x1C53 SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH2 0x1C5D SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH2 0x1C67 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x1CBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420717479206973203000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x1CC4 DUP9 DUP3 PUSH2 0x226F JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1CFF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D64 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D88 SWAP2 SWAP1 PUSH2 0x33CE JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH2 0x1D99 DUP3 PUSH1 0x12 PUSH2 0x3389 JUMP JUMPDEST PUSH2 0x1DA4 SWAP1 PUSH1 0xA PUSH2 0x350C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1DAF PUSH2 0x1F31 JUMP JUMPDEST POP SWAP1 POP PUSH0 PUSH2 0x1DBC PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0x1DCF JUMPI PUSH0 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 PUSH2 0x1DDD DUP6 DUP6 PUSH2 0x326A JUMP JUMPDEST PUSH2 0x1DE7 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST PUSH2 0x1DF1 SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E4E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E72 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1ECC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506572697068657279000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x1ED4 PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x1F20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526562616C616E6365206E6F74206E6565646564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x1F28 PUSH2 0x24BE JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH0 SWAP1 PUSH1 0x60 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F52 JUMPI PUSH2 0x1F52 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F7B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x205B JUMPI PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1F9C JUMPI PUSH2 0x1F9C PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x1FBF DUP3 PUSH2 0x173F JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x1FFC JUMPI DUP1 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1FEB JUMPI PUSH2 0x1FEB PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x202A JUMP JUMPDEST PUSH0 PUSH2 0x2007 DUP4 DUP4 PUSH2 0x24A4 JUMP JUMPDEST SWAP1 POP DUP1 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x201C JUMPI PUSH2 0x201C PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x203C JUMPI PUSH2 0x203C PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH2 0x204F SWAP2 SWAP1 PUSH2 0x33BB JUMP JUMPDEST SWAP6 POP POP POP PUSH1 0x1 ADD PUSH2 0x1F80 JUMP JUMPDEST POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x207F JUMPI PUSH2 0x207F PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20A8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x8A4 JUMPI PUSH0 PUSH2 0x2710 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x20CE JUMPI PUSH2 0x20CE PUSH2 0x3281 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 PUSH2 0x20E9 SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH2 0x20F3 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2108 JUMPI PUSH2 0x2108 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD LT ISZERO PUSH2 0x215A JUMPI DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2128 JUMPI PUSH2 0x2128 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 PUSH2 0x213B SWAP2 SWAP1 PUSH2 0x3389 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x214D JUMPI PUSH2 0x214D PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x20AD JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x75C JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2182 JUMPI PUSH2 0x2182 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x2195 SWAP2 SWAP1 PUSH2 0x33BB JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x2166 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x21C3 JUMPI PUSH2 0x21C3 PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x21E8 JUMPI POP DUP1 PUSH2 0x894 JUMP JUMPDEST PUSH0 PUSH2 0x221E PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x21FF JUMPI PUSH2 0x21FF PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x2B81 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1840 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x22B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x22BC PUSH0 DUP4 DUP4 PUSH2 0x2B9A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x22CD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2CD9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x237F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2371 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x237F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x2CD9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x23C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2409 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x22CD DUP4 DUP4 DUP4 PUSH2 0x2B9A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0x2450 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2499 JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x22BC DUP3 PUSH0 DUP4 PUSH2 0x2B9A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH0 SWAP1 PUSH2 0x1840 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2512 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2536 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2589 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25AD SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25CD JUMPI PUSH2 0x25CD PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x25F6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2617 JUMPI PUSH2 0x2617 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2640 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2661 JUMPI PUSH2 0x2661 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x268A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26AB JUMPI PUSH2 0x26AB PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x26D4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26F5 JUMPI PUSH2 0x26F5 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x271E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x273F JUMPI PUSH2 0x273F PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2768 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x28DF JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x278A JUMPI PUSH2 0x278A PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x27BA JUMPI PUSH2 0x27BA PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x27ED JUMPI PUSH2 0x27ED PUSH2 0x3281 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x280F JUMPI PUSH2 0x280F PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP7 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x282D JUMPI PUSH2 0x282D PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2896 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28BA SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x28CC JUMPI PUSH2 0x28CC PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x276D JUMP JUMPDEST POP PUSH0 PUSH2 0x28E9 PUSH2 0x762 JUMP JUMPDEST SWAP1 POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF0BF7714 DUP3 DUP10 DUP10 PUSH1 0x7 SLOAD DUP15 DUP16 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2939 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3517 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2950 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2962 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2B2F JUMPI DUP8 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2984 JUMPI PUSH2 0x2984 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29ED JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A11 SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A23 JUMPI PUSH2 0x2A23 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2A41 JUMPI PUSH2 0x2A41 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A5B JUMPI PUSH2 0x2A5B PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x2ACA JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2A7B JUMPI PUSH2 0x2A7B PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A95 JUMPI PUSH2 0x2A95 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2AA7 SWAP2 SWAP1 PUSH2 0x3389 JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2AB9 JUMPI PUSH2 0x2AB9 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2B27 JUMP JUMPDEST DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2ADC JUMPI PUSH2 0x2ADC PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2AF6 JUMPI PUSH2 0x2AF6 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2B08 SWAP2 SWAP1 PUSH2 0x3389 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2B1A JUMPI PUSH2 0x2B1A PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2968 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 DUP9 PUSH1 0x40 MLOAD PUSH2 0x2B69 SWAP2 SWAP1 PUSH2 0x2F66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP1 SWAP10 SWAP1 SWAP9 POP SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH0 SWAP1 PUSH2 0x1840 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2BC4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2BB9 SWAP2 SWAP1 PUSH2 0x33BB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2C4D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2C2F JUMPI PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2C69 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x2C87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2CCC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2D1B JUMPI PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2D5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x237F JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2DCF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E44 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E57 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1840 DUP2 PUSH2 0x2E30 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E91 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2E75 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x1840 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E62 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EBF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2ECA DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2EEA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2EF5 DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2F05 DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0xED3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2E62 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E91 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2F41 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x1840 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2F2E JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2F8B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2F96 DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x2FA6 DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x2FBD DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3002 JUMPI DUP2 MLOAD ISZERO ISZERO DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2FE4 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0xB61 DUP2 DUP7 PUSH2 0x2E62 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3027 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x303F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x304A DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x305A DUP2 PUSH2 0x2E30 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x30D9 JUMPI PUSH2 0x30D9 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x30FA JUMPI PUSH2 0x30FA PUSH2 0x3065 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3115 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3120 DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x313C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x314C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x315F PUSH2 0x315A DUP3 PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x3092 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP9 DUP4 GT ISZERO PUSH2 0x317D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x319B JUMPI DUP4 CALLDATALOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x3182 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x31BC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2E62 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x31CE DUP2 DUP6 PUSH2 0x2E62 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x31EB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x75C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3232 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1840 DUP2 PUSH2 0x2E30 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x894 JUMPI PUSH2 0x894 PUSH2 0x323D JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32BF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x32E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x32F3 PUSH2 0x315A DUP3 PUSH2 0x30E1 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x3311 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x332F JUMPI DUP4 MLOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x3316 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x334A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x3384 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x894 JUMPI PUSH2 0x894 PUSH2 0x323D JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33AC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1840 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x894 JUMPI PUSH2 0x894 PUSH2 0x323D JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33DE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1840 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x3447 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x342D JUMPI PUSH2 0x342D PUSH2 0x323D JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x343A JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x33F3 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x345D JUMPI POP PUSH1 0x1 PUSH2 0x894 JUMP JUMPDEST DUP2 PUSH2 0x3469 JUMPI POP PUSH0 PUSH2 0x894 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x347F JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3489 JUMPI PUSH2 0x34A5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x894 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x349A JUMPI PUSH2 0x349A PUSH2 0x323D JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x894 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x34C8 JUMPI POP DUP2 DUP2 EXP PUSH2 0x894 JUMP JUMPDEST PUSH2 0x34D2 DUP4 DUP4 PUSH2 0x33EE JUMP JUMPDEST DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x3504 JUMPI PUSH2 0x3504 PUSH2 0x323D JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1840 DUP4 DUP4 PUSH2 0x344F JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE PUSH0 PUSH2 0x3529 PUSH1 0xE0 DUP4 ADD DUP11 PUSH2 0x2E62 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x353B DUP2 DUP11 PUSH2 0x2F2E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x354F DUP2 DUP10 PUSH2 0x2E62 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x80 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 LOG3 0xD6 SHR LOG1 TLOAD SLOAD 0x4B ADDRESS GASLIMIT 0xEE DIV ADDMOD 0xC1 EXTCODEHASH 0xC0 0x22 0x4F SGT 0xAF 0xED 0xD5 0xE0 0xA9 SWAP15 PUSH19 0xD6EAD0660A5F64736F6C63430008190033A264 PUSH10 0x70667358221220BBF2D8 PUSH19 0x4007D56CB7EFBA9C340B588869BB1BEB915309 0xE3 GASPRICE 0xB2 0x28 EXTCODESIZE ADDRESS 0xE3 0x27 0xA6 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"1777:4772:16:-:0;;;1171:4:2;1128:48;;1777:4772:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@UPGRADE_INTERFACE_VERSION_472":{"entryPoint":null,"id":472,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_54":{"entryPoint":4920,"id":54,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_unchained_81":{"entryPoint":5125,"id":81,"parameterSlots":1,"returnSlots":0},"@__UUPSUpgradeable_init_502":{"entryPoint":4912,"id":502,"parameterSlots":0,"returnSlots":0},"@_authorizeUpgrade_4102":{"entryPoint":4292,"id":4102,"parameterSlots":1,"returnSlots":0},"@_checkInitializing_370":{"entryPoint":5022,"id":370,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_1125":{"entryPoint":5414,"id":1125,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_578":{"entryPoint":4562,"id":578,"parameterSlots":0,"returnSlots":0},"@_checkOwner_122":{"entryPoint":4660,"id":122,"parameterSlots":0,"returnSlots":0},"@_checkProxy_562":{"entryPoint":4084,"id":562,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_447":{"entryPoint":null,"id":447,"parameterSlots":0,"returnSlots":1},"@_getOwnableStorage_25":{"entryPoint":null,"id":25,"parameterSlots":0,"returnSlots":1},"@_isInitializing_438":{"entryPoint":null,"id":438,"parameterSlots":0,"returnSlots":1},"@_msgSender_658":{"entryPoint":null,"id":658,"parameterSlots":0,"returnSlots":1},"@_revert_2007":{"entryPoint":5587,"id":2007,"parameterSlots":1,"returnSlots":0},"@_setImplementation_911":{"entryPoint":5133,"id":911,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_193":{"entryPoint":4776,"id":193,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCallUUPS_629":{"entryPoint":4300,"id":629,"parameterSlots":2,"returnSlots":0},"@allPools_4038":{"entryPoint":2232,"id":4038,"parameterSlots":0,"returnSlots":0},"@createPool_4270":{"entryPoint":1031,"id":4270,"parameterSlots":3,"returnSlots":1},"@functionDelegateCall_1927":{"entryPoint":5300,"id":1927,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_2139":{"entryPoint":null,"id":2139,"parameterSlots":1,"returnSlots":1},"@getAllPools_4280":{"entryPoint":3903,"id":4280,"parameterSlots":0,"returnSlots":1},"@getImplementation_884":{"entryPoint":null,"id":884,"parameterSlots":0,"returnSlots":1},"@getPoolAssets_4311":{"entryPoint":2271,"id":4311,"parameterSlots":1,"returnSlots":1},"@getPoolByAssets_4331":{"entryPoint":985,"id":4331,"parameterSlots":2,"returnSlots":1},"@getPool_4047":{"entryPoint":null,"id":4047,"parameterSlots":0,"returnSlots":0},"@getPoolsByAsset_4461":{"entryPoint":2904,"id":4461,"parameterSlots":1,"returnSlots":1},"@getPoolsCount_4290":{"entryPoint":null,"id":4290,"parameterSlots":0,"returnSlots":1},"@initialize_4076":{"entryPoint":3462,"id":4076,"parameterSlots":1,"returnSlots":0},"@owner_105":{"entryPoint":null,"id":105,"parameterSlots":0,"returnSlots":1},"@poolExist_4493":{"entryPoint":2471,"id":4493,"parameterSlots":1,"returnSlots":1},"@proxiableUUID_520":{"entryPoint":2406,"id":520,"parameterSlots":0,"returnSlots":1},"@registry_4041":{"entryPoint":null,"id":4041,"parameterSlots":0,"returnSlots":0},"@reinitialize_4093":{"entryPoint":2561,"id":4093,"parameterSlots":2,"returnSlots":0},"@renounceOwnership_136":{"entryPoint":2452,"id":136,"parameterSlots":0,"returnSlots":0},"@transferOwnership_164":{"entryPoint":3998,"id":164,"parameterSlots":1,"returnSlots":0},"@upgradeToAndCall_540":{"entryPoint":2375,"id":540,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_945":{"entryPoint":4937,"id":945,"parameterSlots":2,"returnSlots":0},"@verifyCallResultFromTarget_1967":{"entryPoint":5470,"id":1967,"parameterSlots":3,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":5870,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6197,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5686,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":6309,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint64":{"entryPoint":6471,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":6798,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256":{"entryPoint":5978,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":7002,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6174,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":6224,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7025,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6291,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address__fromStack_reversed":{"entryPoint":6689,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IBaluniV1Registry_$4898__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6527,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2258c7547209181d37eb4aebb58e4d2c60f10b97b943ea694f4dec24e242181e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_39cbcbdd9e6251e82f28a321c8ea534706a2cf624e365b64351e1f84ffc7ff8d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":5786,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":5835,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6625,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":6947,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6580,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6644,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5741,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":5666,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:12107:21","nodeType":"YulBlock","src":"0:12107:21","statements":[{"nativeSrc":"6:3:21","nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nativeSrc":"59:109:21","nodeType":"YulBlock","src":"59:109:21","statements":[{"body":{"nativeSrc":"146:16:21","nodeType":"YulBlock","src":"146:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"155:1:21","nodeType":"YulLiteral","src":"155:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"158:1:21","nodeType":"YulLiteral","src":"158:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"148:6:21","nodeType":"YulIdentifier","src":"148:6:21"},"nativeSrc":"148:12:21","nodeType":"YulFunctionCall","src":"148:12:21"},"nativeSrc":"148:12:21","nodeType":"YulExpressionStatement","src":"148:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"82:5:21","nodeType":"YulIdentifier","src":"82:5:21"},{"arguments":[{"name":"value","nativeSrc":"93:5:21","nodeType":"YulIdentifier","src":"93:5:21"},{"kind":"number","nativeSrc":"100:42:21","nodeType":"YulLiteral","src":"100:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"89:3:21","nodeType":"YulIdentifier","src":"89:3:21"},"nativeSrc":"89:54:21","nodeType":"YulFunctionCall","src":"89:54:21"}],"functionName":{"name":"eq","nativeSrc":"79:2:21","nodeType":"YulIdentifier","src":"79:2:21"},"nativeSrc":"79:65:21","nodeType":"YulFunctionCall","src":"79:65:21"}],"functionName":{"name":"iszero","nativeSrc":"72:6:21","nodeType":"YulIdentifier","src":"72:6:21"},"nativeSrc":"72:73:21","nodeType":"YulFunctionCall","src":"72:73:21"},"nativeSrc":"69:93:21","nodeType":"YulIf","src":"69:93:21"}]},"name":"validator_revert_address","nativeSrc":"14:154:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"48:5:21","nodeType":"YulTypedName","src":"48:5:21","type":""}],"src":"14:154:21"},{"body":{"nativeSrc":"260:301:21","nodeType":"YulBlock","src":"260:301:21","statements":[{"body":{"nativeSrc":"306:16:21","nodeType":"YulBlock","src":"306:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"315:1:21","nodeType":"YulLiteral","src":"315:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"318:1:21","nodeType":"YulLiteral","src":"318:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"308:6:21","nodeType":"YulIdentifier","src":"308:6:21"},"nativeSrc":"308:12:21","nodeType":"YulFunctionCall","src":"308:12:21"},"nativeSrc":"308:12:21","nodeType":"YulExpressionStatement","src":"308:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"281:7:21","nodeType":"YulIdentifier","src":"281:7:21"},{"name":"headStart","nativeSrc":"290:9:21","nodeType":"YulIdentifier","src":"290:9:21"}],"functionName":{"name":"sub","nativeSrc":"277:3:21","nodeType":"YulIdentifier","src":"277:3:21"},"nativeSrc":"277:23:21","nodeType":"YulFunctionCall","src":"277:23:21"},{"kind":"number","nativeSrc":"302:2:21","nodeType":"YulLiteral","src":"302:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"273:3:21","nodeType":"YulIdentifier","src":"273:3:21"},"nativeSrc":"273:32:21","nodeType":"YulFunctionCall","src":"273:32:21"},"nativeSrc":"270:52:21","nodeType":"YulIf","src":"270:52:21"},{"nativeSrc":"331:36:21","nodeType":"YulVariableDeclaration","src":"331:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"357:9:21","nodeType":"YulIdentifier","src":"357:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"344:12:21","nodeType":"YulIdentifier","src":"344:12:21"},"nativeSrc":"344:23:21","nodeType":"YulFunctionCall","src":"344:23:21"},"variables":[{"name":"value","nativeSrc":"335:5:21","nodeType":"YulTypedName","src":"335:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"401:5:21","nodeType":"YulIdentifier","src":"401:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"376:24:21","nodeType":"YulIdentifier","src":"376:24:21"},"nativeSrc":"376:31:21","nodeType":"YulFunctionCall","src":"376:31:21"},"nativeSrc":"376:31:21","nodeType":"YulExpressionStatement","src":"376:31:21"},{"nativeSrc":"416:15:21","nodeType":"YulAssignment","src":"416:15:21","value":{"name":"value","nativeSrc":"426:5:21","nodeType":"YulIdentifier","src":"426:5:21"},"variableNames":[{"name":"value0","nativeSrc":"416:6:21","nodeType":"YulIdentifier","src":"416:6:21"}]},{"nativeSrc":"440:47:21","nodeType":"YulVariableDeclaration","src":"440:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"472:9:21","nodeType":"YulIdentifier","src":"472:9:21"},{"kind":"number","nativeSrc":"483:2:21","nodeType":"YulLiteral","src":"483:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"468:3:21","nodeType":"YulIdentifier","src":"468:3:21"},"nativeSrc":"468:18:21","nodeType":"YulFunctionCall","src":"468:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"455:12:21","nodeType":"YulIdentifier","src":"455:12:21"},"nativeSrc":"455:32:21","nodeType":"YulFunctionCall","src":"455:32:21"},"variables":[{"name":"value_1","nativeSrc":"444:7:21","nodeType":"YulTypedName","src":"444:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"521:7:21","nodeType":"YulIdentifier","src":"521:7:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"496:24:21","nodeType":"YulIdentifier","src":"496:24:21"},"nativeSrc":"496:33:21","nodeType":"YulFunctionCall","src":"496:33:21"},"nativeSrc":"496:33:21","nodeType":"YulExpressionStatement","src":"496:33:21"},{"nativeSrc":"538:17:21","nodeType":"YulAssignment","src":"538:17:21","value":{"name":"value_1","nativeSrc":"548:7:21","nodeType":"YulIdentifier","src":"548:7:21"},"variableNames":[{"name":"value1","nativeSrc":"538:6:21","nodeType":"YulIdentifier","src":"538:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"173:388:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"218:9:21","nodeType":"YulTypedName","src":"218:9:21","type":""},{"name":"dataEnd","nativeSrc":"229:7:21","nodeType":"YulTypedName","src":"229:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"241:6:21","nodeType":"YulTypedName","src":"241:6:21","type":""},{"name":"value1","nativeSrc":"249:6:21","nodeType":"YulTypedName","src":"249:6:21","type":""}],"src":"173:388:21"},{"body":{"nativeSrc":"667:125:21","nodeType":"YulBlock","src":"667:125:21","statements":[{"nativeSrc":"677:26:21","nodeType":"YulAssignment","src":"677:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"689:9:21","nodeType":"YulIdentifier","src":"689:9:21"},{"kind":"number","nativeSrc":"700:2:21","nodeType":"YulLiteral","src":"700:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"685:3:21","nodeType":"YulIdentifier","src":"685:3:21"},"nativeSrc":"685:18:21","nodeType":"YulFunctionCall","src":"685:18:21"},"variableNames":[{"name":"tail","nativeSrc":"677:4:21","nodeType":"YulIdentifier","src":"677:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"719:9:21","nodeType":"YulIdentifier","src":"719:9:21"},{"arguments":[{"name":"value0","nativeSrc":"734:6:21","nodeType":"YulIdentifier","src":"734:6:21"},{"kind":"number","nativeSrc":"742:42:21","nodeType":"YulLiteral","src":"742:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"730:3:21","nodeType":"YulIdentifier","src":"730:3:21"},"nativeSrc":"730:55:21","nodeType":"YulFunctionCall","src":"730:55:21"}],"functionName":{"name":"mstore","nativeSrc":"712:6:21","nodeType":"YulIdentifier","src":"712:6:21"},"nativeSrc":"712:74:21","nodeType":"YulFunctionCall","src":"712:74:21"},"nativeSrc":"712:74:21","nodeType":"YulExpressionStatement","src":"712:74:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"566:226:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"636:9:21","nodeType":"YulTypedName","src":"636:9:21","type":""},{"name":"value0","nativeSrc":"647:6:21","nodeType":"YulTypedName","src":"647:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"658:4:21","nodeType":"YulTypedName","src":"658:4:21","type":""}],"src":"566:226:21"},{"body":{"nativeSrc":"829:152:21","nodeType":"YulBlock","src":"829:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"846:1:21","nodeType":"YulLiteral","src":"846:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"849:77:21","nodeType":"YulLiteral","src":"849:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"839:6:21","nodeType":"YulIdentifier","src":"839:6:21"},"nativeSrc":"839:88:21","nodeType":"YulFunctionCall","src":"839:88:21"},"nativeSrc":"839:88:21","nodeType":"YulExpressionStatement","src":"839:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"943:1:21","nodeType":"YulLiteral","src":"943:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"946:4:21","nodeType":"YulLiteral","src":"946:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"936:6:21","nodeType":"YulIdentifier","src":"936:6:21"},"nativeSrc":"936:15:21","nodeType":"YulFunctionCall","src":"936:15:21"},"nativeSrc":"936:15:21","nodeType":"YulExpressionStatement","src":"936:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"967:1:21","nodeType":"YulLiteral","src":"967:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"970:4:21","nodeType":"YulLiteral","src":"970:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"960:6:21","nodeType":"YulIdentifier","src":"960:6:21"},"nativeSrc":"960:15:21","nodeType":"YulFunctionCall","src":"960:15:21"},"nativeSrc":"960:15:21","nodeType":"YulExpressionStatement","src":"960:15:21"}]},"name":"panic_error_0x41","nativeSrc":"797:184:21","nodeType":"YulFunctionDefinition","src":"797:184:21"},{"body":{"nativeSrc":"1031:289:21","nodeType":"YulBlock","src":"1031:289:21","statements":[{"nativeSrc":"1041:19:21","nodeType":"YulAssignment","src":"1041:19:21","value":{"arguments":[{"kind":"number","nativeSrc":"1057:2:21","nodeType":"YulLiteral","src":"1057:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1051:5:21","nodeType":"YulIdentifier","src":"1051:5:21"},"nativeSrc":"1051:9:21","nodeType":"YulFunctionCall","src":"1051:9:21"},"variableNames":[{"name":"memPtr","nativeSrc":"1041:6:21","nodeType":"YulIdentifier","src":"1041:6:21"}]},{"nativeSrc":"1069:117:21","nodeType":"YulVariableDeclaration","src":"1069:117:21","value":{"arguments":[{"name":"memPtr","nativeSrc":"1091:6:21","nodeType":"YulIdentifier","src":"1091:6:21"},{"arguments":[{"arguments":[{"name":"size","nativeSrc":"1107:4:21","nodeType":"YulIdentifier","src":"1107:4:21"},{"kind":"number","nativeSrc":"1113:2:21","nodeType":"YulLiteral","src":"1113:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1103:3:21","nodeType":"YulIdentifier","src":"1103:3:21"},"nativeSrc":"1103:13:21","nodeType":"YulFunctionCall","src":"1103:13:21"},{"kind":"number","nativeSrc":"1118:66:21","nodeType":"YulLiteral","src":"1118:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nativeSrc":"1099:3:21","nodeType":"YulIdentifier","src":"1099:3:21"},"nativeSrc":"1099:86:21","nodeType":"YulFunctionCall","src":"1099:86:21"}],"functionName":{"name":"add","nativeSrc":"1087:3:21","nodeType":"YulIdentifier","src":"1087:3:21"},"nativeSrc":"1087:99:21","nodeType":"YulFunctionCall","src":"1087:99:21"},"variables":[{"name":"newFreePtr","nativeSrc":"1073:10:21","nodeType":"YulTypedName","src":"1073:10:21","type":""}]},{"body":{"nativeSrc":"1261:22:21","nodeType":"YulBlock","src":"1261:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1263:16:21","nodeType":"YulIdentifier","src":"1263:16:21"},"nativeSrc":"1263:18:21","nodeType":"YulFunctionCall","src":"1263:18:21"},"nativeSrc":"1263:18:21","nodeType":"YulExpressionStatement","src":"1263:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1204:10:21","nodeType":"YulIdentifier","src":"1204:10:21"},{"kind":"number","nativeSrc":"1216:18:21","nodeType":"YulLiteral","src":"1216:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1201:2:21","nodeType":"YulIdentifier","src":"1201:2:21"},"nativeSrc":"1201:34:21","nodeType":"YulFunctionCall","src":"1201:34:21"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1240:10:21","nodeType":"YulIdentifier","src":"1240:10:21"},{"name":"memPtr","nativeSrc":"1252:6:21","nodeType":"YulIdentifier","src":"1252:6:21"}],"functionName":{"name":"lt","nativeSrc":"1237:2:21","nodeType":"YulIdentifier","src":"1237:2:21"},"nativeSrc":"1237:22:21","nodeType":"YulFunctionCall","src":"1237:22:21"}],"functionName":{"name":"or","nativeSrc":"1198:2:21","nodeType":"YulIdentifier","src":"1198:2:21"},"nativeSrc":"1198:62:21","nodeType":"YulFunctionCall","src":"1198:62:21"},"nativeSrc":"1195:88:21","nodeType":"YulIf","src":"1195:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1299:2:21","nodeType":"YulLiteral","src":"1299:2:21","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1303:10:21","nodeType":"YulIdentifier","src":"1303:10:21"}],"functionName":{"name":"mstore","nativeSrc":"1292:6:21","nodeType":"YulIdentifier","src":"1292:6:21"},"nativeSrc":"1292:22:21","nodeType":"YulFunctionCall","src":"1292:22:21"},"nativeSrc":"1292:22:21","nodeType":"YulExpressionStatement","src":"1292:22:21"}]},"name":"allocate_memory","nativeSrc":"986:334:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"1011:4:21","nodeType":"YulTypedName","src":"1011:4:21","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"1020:6:21","nodeType":"YulTypedName","src":"1020:6:21","type":""}],"src":"986:334:21"},{"body":{"nativeSrc":"1394:114:21","nodeType":"YulBlock","src":"1394:114:21","statements":[{"body":{"nativeSrc":"1438:22:21","nodeType":"YulBlock","src":"1438:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1440:16:21","nodeType":"YulIdentifier","src":"1440:16:21"},"nativeSrc":"1440:18:21","nodeType":"YulFunctionCall","src":"1440:18:21"},"nativeSrc":"1440:18:21","nodeType":"YulExpressionStatement","src":"1440:18:21"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1410:6:21","nodeType":"YulIdentifier","src":"1410:6:21"},{"kind":"number","nativeSrc":"1418:18:21","nodeType":"YulLiteral","src":"1418:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1407:2:21","nodeType":"YulIdentifier","src":"1407:2:21"},"nativeSrc":"1407:30:21","nodeType":"YulFunctionCall","src":"1407:30:21"},"nativeSrc":"1404:56:21","nodeType":"YulIf","src":"1404:56:21"},{"nativeSrc":"1469:33:21","nodeType":"YulAssignment","src":"1469:33:21","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1485:1:21","nodeType":"YulLiteral","src":"1485:1:21","type":"","value":"5"},{"name":"length","nativeSrc":"1488:6:21","nodeType":"YulIdentifier","src":"1488:6:21"}],"functionName":{"name":"shl","nativeSrc":"1481:3:21","nodeType":"YulIdentifier","src":"1481:3:21"},"nativeSrc":"1481:14:21","nodeType":"YulFunctionCall","src":"1481:14:21"},{"kind":"number","nativeSrc":"1497:4:21","nodeType":"YulLiteral","src":"1497:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1477:3:21","nodeType":"YulIdentifier","src":"1477:3:21"},"nativeSrc":"1477:25:21","nodeType":"YulFunctionCall","src":"1477:25:21"},"variableNames":[{"name":"size","nativeSrc":"1469:4:21","nodeType":"YulIdentifier","src":"1469:4:21"}]}]},"name":"array_allocation_size_array_address_dyn","nativeSrc":"1325:183:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"1374:6:21","nodeType":"YulTypedName","src":"1374:6:21","type":""}],"returnVariables":[{"name":"size","nativeSrc":"1385:4:21","nodeType":"YulTypedName","src":"1385:4:21","type":""}],"src":"1325:183:21"},{"body":{"nativeSrc":"1577:604:21","nodeType":"YulBlock","src":"1577:604:21","statements":[{"body":{"nativeSrc":"1626:16:21","nodeType":"YulBlock","src":"1626:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1635:1:21","nodeType":"YulLiteral","src":"1635:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1638:1:21","nodeType":"YulLiteral","src":"1638:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1628:6:21","nodeType":"YulIdentifier","src":"1628:6:21"},"nativeSrc":"1628:12:21","nodeType":"YulFunctionCall","src":"1628:12:21"},"nativeSrc":"1628:12:21","nodeType":"YulExpressionStatement","src":"1628:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1605:6:21","nodeType":"YulIdentifier","src":"1605:6:21"},{"kind":"number","nativeSrc":"1613:4:21","nodeType":"YulLiteral","src":"1613:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1601:3:21","nodeType":"YulIdentifier","src":"1601:3:21"},"nativeSrc":"1601:17:21","nodeType":"YulFunctionCall","src":"1601:17:21"},{"name":"end","nativeSrc":"1620:3:21","nodeType":"YulIdentifier","src":"1620:3:21"}],"functionName":{"name":"slt","nativeSrc":"1597:3:21","nodeType":"YulIdentifier","src":"1597:3:21"},"nativeSrc":"1597:27:21","nodeType":"YulFunctionCall","src":"1597:27:21"}],"functionName":{"name":"iszero","nativeSrc":"1590:6:21","nodeType":"YulIdentifier","src":"1590:6:21"},"nativeSrc":"1590:35:21","nodeType":"YulFunctionCall","src":"1590:35:21"},"nativeSrc":"1587:55:21","nodeType":"YulIf","src":"1587:55:21"},{"nativeSrc":"1651:30:21","nodeType":"YulVariableDeclaration","src":"1651:30:21","value":{"arguments":[{"name":"offset","nativeSrc":"1674:6:21","nodeType":"YulIdentifier","src":"1674:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"1661:12:21","nodeType":"YulIdentifier","src":"1661:12:21"},"nativeSrc":"1661:20:21","nodeType":"YulFunctionCall","src":"1661:20:21"},"variables":[{"name":"_1","nativeSrc":"1655:2:21","nodeType":"YulTypedName","src":"1655:2:21","type":""}]},{"nativeSrc":"1690:14:21","nodeType":"YulVariableDeclaration","src":"1690:14:21","value":{"kind":"number","nativeSrc":"1700:4:21","nodeType":"YulLiteral","src":"1700:4:21","type":"","value":"0x20"},"variables":[{"name":"_2","nativeSrc":"1694:2:21","nodeType":"YulTypedName","src":"1694:2:21","type":""}]},{"nativeSrc":"1713:71:21","nodeType":"YulVariableDeclaration","src":"1713:71:21","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"1780:2:21","nodeType":"YulIdentifier","src":"1780:2:21"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nativeSrc":"1740:39:21","nodeType":"YulIdentifier","src":"1740:39:21"},"nativeSrc":"1740:43:21","nodeType":"YulFunctionCall","src":"1740:43:21"}],"functionName":{"name":"allocate_memory","nativeSrc":"1724:15:21","nodeType":"YulIdentifier","src":"1724:15:21"},"nativeSrc":"1724:60:21","nodeType":"YulFunctionCall","src":"1724:60:21"},"variables":[{"name":"dst","nativeSrc":"1717:3:21","nodeType":"YulTypedName","src":"1717:3:21","type":""}]},{"nativeSrc":"1793:16:21","nodeType":"YulVariableDeclaration","src":"1793:16:21","value":{"name":"dst","nativeSrc":"1806:3:21","nodeType":"YulIdentifier","src":"1806:3:21"},"variables":[{"name":"dst_1","nativeSrc":"1797:5:21","nodeType":"YulTypedName","src":"1797:5:21","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"1825:3:21","nodeType":"YulIdentifier","src":"1825:3:21"},{"name":"_1","nativeSrc":"1830:2:21","nodeType":"YulIdentifier","src":"1830:2:21"}],"functionName":{"name":"mstore","nativeSrc":"1818:6:21","nodeType":"YulIdentifier","src":"1818:6:21"},"nativeSrc":"1818:15:21","nodeType":"YulFunctionCall","src":"1818:15:21"},"nativeSrc":"1818:15:21","nodeType":"YulExpressionStatement","src":"1818:15:21"},{"nativeSrc":"1842:21:21","nodeType":"YulAssignment","src":"1842:21:21","value":{"arguments":[{"name":"dst","nativeSrc":"1853:3:21","nodeType":"YulIdentifier","src":"1853:3:21"},{"kind":"number","nativeSrc":"1858:4:21","nodeType":"YulLiteral","src":"1858:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1849:3:21","nodeType":"YulIdentifier","src":"1849:3:21"},"nativeSrc":"1849:14:21","nodeType":"YulFunctionCall","src":"1849:14:21"},"variableNames":[{"name":"dst","nativeSrc":"1842:3:21","nodeType":"YulIdentifier","src":"1842:3:21"}]},{"nativeSrc":"1872:48:21","nodeType":"YulVariableDeclaration","src":"1872:48:21","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1894:6:21","nodeType":"YulIdentifier","src":"1894:6:21"},{"arguments":[{"kind":"number","nativeSrc":"1906:1:21","nodeType":"YulLiteral","src":"1906:1:21","type":"","value":"5"},{"name":"_1","nativeSrc":"1909:2:21","nodeType":"YulIdentifier","src":"1909:2:21"}],"functionName":{"name":"shl","nativeSrc":"1902:3:21","nodeType":"YulIdentifier","src":"1902:3:21"},"nativeSrc":"1902:10:21","nodeType":"YulFunctionCall","src":"1902:10:21"}],"functionName":{"name":"add","nativeSrc":"1890:3:21","nodeType":"YulIdentifier","src":"1890:3:21"},"nativeSrc":"1890:23:21","nodeType":"YulFunctionCall","src":"1890:23:21"},{"kind":"number","nativeSrc":"1915:4:21","nodeType":"YulLiteral","src":"1915:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1886:3:21","nodeType":"YulIdentifier","src":"1886:3:21"},"nativeSrc":"1886:34:21","nodeType":"YulFunctionCall","src":"1886:34:21"},"variables":[{"name":"srcEnd","nativeSrc":"1876:6:21","nodeType":"YulTypedName","src":"1876:6:21","type":""}]},{"body":{"nativeSrc":"1948:16:21","nodeType":"YulBlock","src":"1948:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1957:1:21","nodeType":"YulLiteral","src":"1957:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1960:1:21","nodeType":"YulLiteral","src":"1960:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1950:6:21","nodeType":"YulIdentifier","src":"1950:6:21"},"nativeSrc":"1950:12:21","nodeType":"YulFunctionCall","src":"1950:12:21"},"nativeSrc":"1950:12:21","nodeType":"YulExpressionStatement","src":"1950:12:21"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"1935:6:21","nodeType":"YulIdentifier","src":"1935:6:21"},{"name":"end","nativeSrc":"1943:3:21","nodeType":"YulIdentifier","src":"1943:3:21"}],"functionName":{"name":"gt","nativeSrc":"1932:2:21","nodeType":"YulIdentifier","src":"1932:2:21"},"nativeSrc":"1932:15:21","nodeType":"YulFunctionCall","src":"1932:15:21"},"nativeSrc":"1929:35:21","nodeType":"YulIf","src":"1929:35:21"},{"nativeSrc":"1973:28:21","nodeType":"YulVariableDeclaration","src":"1973:28:21","value":{"arguments":[{"name":"offset","nativeSrc":"1988:6:21","nodeType":"YulIdentifier","src":"1988:6:21"},{"kind":"number","nativeSrc":"1996:4:21","nodeType":"YulLiteral","src":"1996:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1984:3:21","nodeType":"YulIdentifier","src":"1984:3:21"},"nativeSrc":"1984:17:21","nodeType":"YulFunctionCall","src":"1984:17:21"},"variables":[{"name":"src","nativeSrc":"1977:3:21","nodeType":"YulTypedName","src":"1977:3:21","type":""}]},{"body":{"nativeSrc":"2066:86:21","nodeType":"YulBlock","src":"2066:86:21","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"2087:3:21","nodeType":"YulIdentifier","src":"2087:3:21"},{"arguments":[{"name":"src","nativeSrc":"2105:3:21","nodeType":"YulIdentifier","src":"2105:3:21"}],"functionName":{"name":"calldataload","nativeSrc":"2092:12:21","nodeType":"YulIdentifier","src":"2092:12:21"},"nativeSrc":"2092:17:21","nodeType":"YulFunctionCall","src":"2092:17:21"}],"functionName":{"name":"mstore","nativeSrc":"2080:6:21","nodeType":"YulIdentifier","src":"2080:6:21"},"nativeSrc":"2080:30:21","nodeType":"YulFunctionCall","src":"2080:30:21"},"nativeSrc":"2080:30:21","nodeType":"YulExpressionStatement","src":"2080:30:21"},{"nativeSrc":"2123:19:21","nodeType":"YulAssignment","src":"2123:19:21","value":{"arguments":[{"name":"dst","nativeSrc":"2134:3:21","nodeType":"YulIdentifier","src":"2134:3:21"},{"name":"_2","nativeSrc":"2139:2:21","nodeType":"YulIdentifier","src":"2139:2:21"}],"functionName":{"name":"add","nativeSrc":"2130:3:21","nodeType":"YulIdentifier","src":"2130:3:21"},"nativeSrc":"2130:12:21","nodeType":"YulFunctionCall","src":"2130:12:21"},"variableNames":[{"name":"dst","nativeSrc":"2123:3:21","nodeType":"YulIdentifier","src":"2123:3:21"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"2021:3:21","nodeType":"YulIdentifier","src":"2021:3:21"},{"name":"srcEnd","nativeSrc":"2026:6:21","nodeType":"YulIdentifier","src":"2026:6:21"}],"functionName":{"name":"lt","nativeSrc":"2018:2:21","nodeType":"YulIdentifier","src":"2018:2:21"},"nativeSrc":"2018:15:21","nodeType":"YulFunctionCall","src":"2018:15:21"},"nativeSrc":"2010:142:21","nodeType":"YulForLoop","post":{"nativeSrc":"2034:23:21","nodeType":"YulBlock","src":"2034:23:21","statements":[{"nativeSrc":"2036:19:21","nodeType":"YulAssignment","src":"2036:19:21","value":{"arguments":[{"name":"src","nativeSrc":"2047:3:21","nodeType":"YulIdentifier","src":"2047:3:21"},{"name":"_2","nativeSrc":"2052:2:21","nodeType":"YulIdentifier","src":"2052:2:21"}],"functionName":{"name":"add","nativeSrc":"2043:3:21","nodeType":"YulIdentifier","src":"2043:3:21"},"nativeSrc":"2043:12:21","nodeType":"YulFunctionCall","src":"2043:12:21"},"variableNames":[{"name":"src","nativeSrc":"2036:3:21","nodeType":"YulIdentifier","src":"2036:3:21"}]}]},"pre":{"nativeSrc":"2014:3:21","nodeType":"YulBlock","src":"2014:3:21","statements":[]},"src":"2010:142:21"},{"nativeSrc":"2161:14:21","nodeType":"YulAssignment","src":"2161:14:21","value":{"name":"dst_1","nativeSrc":"2170:5:21","nodeType":"YulIdentifier","src":"2170:5:21"},"variableNames":[{"name":"array","nativeSrc":"2161:5:21","nodeType":"YulIdentifier","src":"2161:5:21"}]}]},"name":"abi_decode_array_uint256_dyn","nativeSrc":"1513:668:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1551:6:21","nodeType":"YulTypedName","src":"1551:6:21","type":""},{"name":"end","nativeSrc":"1559:3:21","nodeType":"YulTypedName","src":"1559:3:21","type":""}],"returnVariables":[{"name":"array","nativeSrc":"1567:5:21","nodeType":"YulTypedName","src":"1567:5:21","type":""}],"src":"1513:668:21"},{"body":{"nativeSrc":"2340:1129:21","nodeType":"YulBlock","src":"2340:1129:21","statements":[{"body":{"nativeSrc":"2386:16:21","nodeType":"YulBlock","src":"2386:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2395:1:21","nodeType":"YulLiteral","src":"2395:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2398:1:21","nodeType":"YulLiteral","src":"2398:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2388:6:21","nodeType":"YulIdentifier","src":"2388:6:21"},"nativeSrc":"2388:12:21","nodeType":"YulFunctionCall","src":"2388:12:21"},"nativeSrc":"2388:12:21","nodeType":"YulExpressionStatement","src":"2388:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2361:7:21","nodeType":"YulIdentifier","src":"2361:7:21"},{"name":"headStart","nativeSrc":"2370:9:21","nodeType":"YulIdentifier","src":"2370:9:21"}],"functionName":{"name":"sub","nativeSrc":"2357:3:21","nodeType":"YulIdentifier","src":"2357:3:21"},"nativeSrc":"2357:23:21","nodeType":"YulFunctionCall","src":"2357:23:21"},{"kind":"number","nativeSrc":"2382:2:21","nodeType":"YulLiteral","src":"2382:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"2353:3:21","nodeType":"YulIdentifier","src":"2353:3:21"},"nativeSrc":"2353:32:21","nodeType":"YulFunctionCall","src":"2353:32:21"},"nativeSrc":"2350:52:21","nodeType":"YulIf","src":"2350:52:21"},{"nativeSrc":"2411:37:21","nodeType":"YulVariableDeclaration","src":"2411:37:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2438:9:21","nodeType":"YulIdentifier","src":"2438:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"2425:12:21","nodeType":"YulIdentifier","src":"2425:12:21"},"nativeSrc":"2425:23:21","nodeType":"YulFunctionCall","src":"2425:23:21"},"variables":[{"name":"offset","nativeSrc":"2415:6:21","nodeType":"YulTypedName","src":"2415:6:21","type":""}]},{"nativeSrc":"2457:28:21","nodeType":"YulVariableDeclaration","src":"2457:28:21","value":{"kind":"number","nativeSrc":"2467:18:21","nodeType":"YulLiteral","src":"2467:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"2461:2:21","nodeType":"YulTypedName","src":"2461:2:21","type":""}]},{"body":{"nativeSrc":"2512:16:21","nodeType":"YulBlock","src":"2512:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2521:1:21","nodeType":"YulLiteral","src":"2521:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2524:1:21","nodeType":"YulLiteral","src":"2524:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2514:6:21","nodeType":"YulIdentifier","src":"2514:6:21"},"nativeSrc":"2514:12:21","nodeType":"YulFunctionCall","src":"2514:12:21"},"nativeSrc":"2514:12:21","nodeType":"YulExpressionStatement","src":"2514:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"2500:6:21","nodeType":"YulIdentifier","src":"2500:6:21"},{"name":"_1","nativeSrc":"2508:2:21","nodeType":"YulIdentifier","src":"2508:2:21"}],"functionName":{"name":"gt","nativeSrc":"2497:2:21","nodeType":"YulIdentifier","src":"2497:2:21"},"nativeSrc":"2497:14:21","nodeType":"YulFunctionCall","src":"2497:14:21"},"nativeSrc":"2494:34:21","nodeType":"YulIf","src":"2494:34:21"},{"nativeSrc":"2537:32:21","nodeType":"YulVariableDeclaration","src":"2537:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2551:9:21","nodeType":"YulIdentifier","src":"2551:9:21"},{"name":"offset","nativeSrc":"2562:6:21","nodeType":"YulIdentifier","src":"2562:6:21"}],"functionName":{"name":"add","nativeSrc":"2547:3:21","nodeType":"YulIdentifier","src":"2547:3:21"},"nativeSrc":"2547:22:21","nodeType":"YulFunctionCall","src":"2547:22:21"},"variables":[{"name":"_2","nativeSrc":"2541:2:21","nodeType":"YulTypedName","src":"2541:2:21","type":""}]},{"body":{"nativeSrc":"2617:16:21","nodeType":"YulBlock","src":"2617:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2626:1:21","nodeType":"YulLiteral","src":"2626:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2629:1:21","nodeType":"YulLiteral","src":"2629:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2619:6:21","nodeType":"YulIdentifier","src":"2619:6:21"},"nativeSrc":"2619:12:21","nodeType":"YulFunctionCall","src":"2619:12:21"},"nativeSrc":"2619:12:21","nodeType":"YulExpressionStatement","src":"2619:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"2596:2:21","nodeType":"YulIdentifier","src":"2596:2:21"},{"kind":"number","nativeSrc":"2600:4:21","nodeType":"YulLiteral","src":"2600:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2592:3:21","nodeType":"YulIdentifier","src":"2592:3:21"},"nativeSrc":"2592:13:21","nodeType":"YulFunctionCall","src":"2592:13:21"},{"name":"dataEnd","nativeSrc":"2607:7:21","nodeType":"YulIdentifier","src":"2607:7:21"}],"functionName":{"name":"slt","nativeSrc":"2588:3:21","nodeType":"YulIdentifier","src":"2588:3:21"},"nativeSrc":"2588:27:21","nodeType":"YulFunctionCall","src":"2588:27:21"}],"functionName":{"name":"iszero","nativeSrc":"2581:6:21","nodeType":"YulIdentifier","src":"2581:6:21"},"nativeSrc":"2581:35:21","nodeType":"YulFunctionCall","src":"2581:35:21"},"nativeSrc":"2578:55:21","nodeType":"YulIf","src":"2578:55:21"},{"nativeSrc":"2642:26:21","nodeType":"YulVariableDeclaration","src":"2642:26:21","value":{"arguments":[{"name":"_2","nativeSrc":"2665:2:21","nodeType":"YulIdentifier","src":"2665:2:21"}],"functionName":{"name":"calldataload","nativeSrc":"2652:12:21","nodeType":"YulIdentifier","src":"2652:12:21"},"nativeSrc":"2652:16:21","nodeType":"YulFunctionCall","src":"2652:16:21"},"variables":[{"name":"_3","nativeSrc":"2646:2:21","nodeType":"YulTypedName","src":"2646:2:21","type":""}]},{"nativeSrc":"2677:14:21","nodeType":"YulVariableDeclaration","src":"2677:14:21","value":{"kind":"number","nativeSrc":"2687:4:21","nodeType":"YulLiteral","src":"2687:4:21","type":"","value":"0x20"},"variables":[{"name":"_4","nativeSrc":"2681:2:21","nodeType":"YulTypedName","src":"2681:2:21","type":""}]},{"nativeSrc":"2700:71:21","nodeType":"YulVariableDeclaration","src":"2700:71:21","value":{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"2767:2:21","nodeType":"YulIdentifier","src":"2767:2:21"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nativeSrc":"2727:39:21","nodeType":"YulIdentifier","src":"2727:39:21"},"nativeSrc":"2727:43:21","nodeType":"YulFunctionCall","src":"2727:43:21"}],"functionName":{"name":"allocate_memory","nativeSrc":"2711:15:21","nodeType":"YulIdentifier","src":"2711:15:21"},"nativeSrc":"2711:60:21","nodeType":"YulFunctionCall","src":"2711:60:21"},"variables":[{"name":"dst","nativeSrc":"2704:3:21","nodeType":"YulTypedName","src":"2704:3:21","type":""}]},{"nativeSrc":"2780:16:21","nodeType":"YulVariableDeclaration","src":"2780:16:21","value":{"name":"dst","nativeSrc":"2793:3:21","nodeType":"YulIdentifier","src":"2793:3:21"},"variables":[{"name":"dst_1","nativeSrc":"2784:5:21","nodeType":"YulTypedName","src":"2784:5:21","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"2812:3:21","nodeType":"YulIdentifier","src":"2812:3:21"},{"name":"_3","nativeSrc":"2817:2:21","nodeType":"YulIdentifier","src":"2817:2:21"}],"functionName":{"name":"mstore","nativeSrc":"2805:6:21","nodeType":"YulIdentifier","src":"2805:6:21"},"nativeSrc":"2805:15:21","nodeType":"YulFunctionCall","src":"2805:15:21"},"nativeSrc":"2805:15:21","nodeType":"YulExpressionStatement","src":"2805:15:21"},{"nativeSrc":"2829:19:21","nodeType":"YulAssignment","src":"2829:19:21","value":{"arguments":[{"name":"dst","nativeSrc":"2840:3:21","nodeType":"YulIdentifier","src":"2840:3:21"},{"name":"_4","nativeSrc":"2845:2:21","nodeType":"YulIdentifier","src":"2845:2:21"}],"functionName":{"name":"add","nativeSrc":"2836:3:21","nodeType":"YulIdentifier","src":"2836:3:21"},"nativeSrc":"2836:12:21","nodeType":"YulFunctionCall","src":"2836:12:21"},"variableNames":[{"name":"dst","nativeSrc":"2829:3:21","nodeType":"YulIdentifier","src":"2829:3:21"}]},{"nativeSrc":"2857:42:21","nodeType":"YulVariableDeclaration","src":"2857:42:21","value":{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"2879:2:21","nodeType":"YulIdentifier","src":"2879:2:21"},{"arguments":[{"kind":"number","nativeSrc":"2887:1:21","nodeType":"YulLiteral","src":"2887:1:21","type":"","value":"5"},{"name":"_3","nativeSrc":"2890:2:21","nodeType":"YulIdentifier","src":"2890:2:21"}],"functionName":{"name":"shl","nativeSrc":"2883:3:21","nodeType":"YulIdentifier","src":"2883:3:21"},"nativeSrc":"2883:10:21","nodeType":"YulFunctionCall","src":"2883:10:21"}],"functionName":{"name":"add","nativeSrc":"2875:3:21","nodeType":"YulIdentifier","src":"2875:3:21"},"nativeSrc":"2875:19:21","nodeType":"YulFunctionCall","src":"2875:19:21"},{"name":"_4","nativeSrc":"2896:2:21","nodeType":"YulIdentifier","src":"2896:2:21"}],"functionName":{"name":"add","nativeSrc":"2871:3:21","nodeType":"YulIdentifier","src":"2871:3:21"},"nativeSrc":"2871:28:21","nodeType":"YulFunctionCall","src":"2871:28:21"},"variables":[{"name":"srcEnd","nativeSrc":"2861:6:21","nodeType":"YulTypedName","src":"2861:6:21","type":""}]},{"body":{"nativeSrc":"2931:16:21","nodeType":"YulBlock","src":"2931:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2940:1:21","nodeType":"YulLiteral","src":"2940:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2943:1:21","nodeType":"YulLiteral","src":"2943:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2933:6:21","nodeType":"YulIdentifier","src":"2933:6:21"},"nativeSrc":"2933:12:21","nodeType":"YulFunctionCall","src":"2933:12:21"},"nativeSrc":"2933:12:21","nodeType":"YulExpressionStatement","src":"2933:12:21"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"2914:6:21","nodeType":"YulIdentifier","src":"2914:6:21"},{"name":"dataEnd","nativeSrc":"2922:7:21","nodeType":"YulIdentifier","src":"2922:7:21"}],"functionName":{"name":"gt","nativeSrc":"2911:2:21","nodeType":"YulIdentifier","src":"2911:2:21"},"nativeSrc":"2911:19:21","nodeType":"YulFunctionCall","src":"2911:19:21"},"nativeSrc":"2908:39:21","nodeType":"YulIf","src":"2908:39:21"},{"nativeSrc":"2956:22:21","nodeType":"YulVariableDeclaration","src":"2956:22:21","value":{"arguments":[{"name":"_2","nativeSrc":"2971:2:21","nodeType":"YulIdentifier","src":"2971:2:21"},{"name":"_4","nativeSrc":"2975:2:21","nodeType":"YulIdentifier","src":"2975:2:21"}],"functionName":{"name":"add","nativeSrc":"2967:3:21","nodeType":"YulIdentifier","src":"2967:3:21"},"nativeSrc":"2967:11:21","nodeType":"YulFunctionCall","src":"2967:11:21"},"variables":[{"name":"src","nativeSrc":"2960:3:21","nodeType":"YulTypedName","src":"2960:3:21","type":""}]},{"body":{"nativeSrc":"3043:161:21","nodeType":"YulBlock","src":"3043:161:21","statements":[{"nativeSrc":"3057:30:21","nodeType":"YulVariableDeclaration","src":"3057:30:21","value":{"arguments":[{"name":"src","nativeSrc":"3083:3:21","nodeType":"YulIdentifier","src":"3083:3:21"}],"functionName":{"name":"calldataload","nativeSrc":"3070:12:21","nodeType":"YulIdentifier","src":"3070:12:21"},"nativeSrc":"3070:17:21","nodeType":"YulFunctionCall","src":"3070:17:21"},"variables":[{"name":"value","nativeSrc":"3061:5:21","nodeType":"YulTypedName","src":"3061:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3125:5:21","nodeType":"YulIdentifier","src":"3125:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"3100:24:21","nodeType":"YulIdentifier","src":"3100:24:21"},"nativeSrc":"3100:31:21","nodeType":"YulFunctionCall","src":"3100:31:21"},"nativeSrc":"3100:31:21","nodeType":"YulExpressionStatement","src":"3100:31:21"},{"expression":{"arguments":[{"name":"dst","nativeSrc":"3151:3:21","nodeType":"YulIdentifier","src":"3151:3:21"},{"name":"value","nativeSrc":"3156:5:21","nodeType":"YulIdentifier","src":"3156:5:21"}],"functionName":{"name":"mstore","nativeSrc":"3144:6:21","nodeType":"YulIdentifier","src":"3144:6:21"},"nativeSrc":"3144:18:21","nodeType":"YulFunctionCall","src":"3144:18:21"},"nativeSrc":"3144:18:21","nodeType":"YulExpressionStatement","src":"3144:18:21"},{"nativeSrc":"3175:19:21","nodeType":"YulAssignment","src":"3175:19:21","value":{"arguments":[{"name":"dst","nativeSrc":"3186:3:21","nodeType":"YulIdentifier","src":"3186:3:21"},{"name":"_4","nativeSrc":"3191:2:21","nodeType":"YulIdentifier","src":"3191:2:21"}],"functionName":{"name":"add","nativeSrc":"3182:3:21","nodeType":"YulIdentifier","src":"3182:3:21"},"nativeSrc":"3182:12:21","nodeType":"YulFunctionCall","src":"3182:12:21"},"variableNames":[{"name":"dst","nativeSrc":"3175:3:21","nodeType":"YulIdentifier","src":"3175:3:21"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"2998:3:21","nodeType":"YulIdentifier","src":"2998:3:21"},{"name":"srcEnd","nativeSrc":"3003:6:21","nodeType":"YulIdentifier","src":"3003:6:21"}],"functionName":{"name":"lt","nativeSrc":"2995:2:21","nodeType":"YulIdentifier","src":"2995:2:21"},"nativeSrc":"2995:15:21","nodeType":"YulFunctionCall","src":"2995:15:21"},"nativeSrc":"2987:217:21","nodeType":"YulForLoop","post":{"nativeSrc":"3011:23:21","nodeType":"YulBlock","src":"3011:23:21","statements":[{"nativeSrc":"3013:19:21","nodeType":"YulAssignment","src":"3013:19:21","value":{"arguments":[{"name":"src","nativeSrc":"3024:3:21","nodeType":"YulIdentifier","src":"3024:3:21"},{"name":"_4","nativeSrc":"3029:2:21","nodeType":"YulIdentifier","src":"3029:2:21"}],"functionName":{"name":"add","nativeSrc":"3020:3:21","nodeType":"YulIdentifier","src":"3020:3:21"},"nativeSrc":"3020:12:21","nodeType":"YulFunctionCall","src":"3020:12:21"},"variableNames":[{"name":"src","nativeSrc":"3013:3:21","nodeType":"YulIdentifier","src":"3013:3:21"}]}]},"pre":{"nativeSrc":"2991:3:21","nodeType":"YulBlock","src":"2991:3:21","statements":[]},"src":"2987:217:21"},{"nativeSrc":"3213:15:21","nodeType":"YulAssignment","src":"3213:15:21","value":{"name":"dst_1","nativeSrc":"3223:5:21","nodeType":"YulIdentifier","src":"3223:5:21"},"variableNames":[{"name":"value0","nativeSrc":"3213:6:21","nodeType":"YulIdentifier","src":"3213:6:21"}]},{"nativeSrc":"3237:48:21","nodeType":"YulVariableDeclaration","src":"3237:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3270:9:21","nodeType":"YulIdentifier","src":"3270:9:21"},{"name":"_4","nativeSrc":"3281:2:21","nodeType":"YulIdentifier","src":"3281:2:21"}],"functionName":{"name":"add","nativeSrc":"3266:3:21","nodeType":"YulIdentifier","src":"3266:3:21"},"nativeSrc":"3266:18:21","nodeType":"YulFunctionCall","src":"3266:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"3253:12:21","nodeType":"YulIdentifier","src":"3253:12:21"},"nativeSrc":"3253:32:21","nodeType":"YulFunctionCall","src":"3253:32:21"},"variables":[{"name":"offset_1","nativeSrc":"3241:8:21","nodeType":"YulTypedName","src":"3241:8:21","type":""}]},{"body":{"nativeSrc":"3314:16:21","nodeType":"YulBlock","src":"3314:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3323:1:21","nodeType":"YulLiteral","src":"3323:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3326:1:21","nodeType":"YulLiteral","src":"3326:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3316:6:21","nodeType":"YulIdentifier","src":"3316:6:21"},"nativeSrc":"3316:12:21","nodeType":"YulFunctionCall","src":"3316:12:21"},"nativeSrc":"3316:12:21","nodeType":"YulExpressionStatement","src":"3316:12:21"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"3300:8:21","nodeType":"YulIdentifier","src":"3300:8:21"},{"name":"_1","nativeSrc":"3310:2:21","nodeType":"YulIdentifier","src":"3310:2:21"}],"functionName":{"name":"gt","nativeSrc":"3297:2:21","nodeType":"YulIdentifier","src":"3297:2:21"},"nativeSrc":"3297:16:21","nodeType":"YulFunctionCall","src":"3297:16:21"},"nativeSrc":"3294:36:21","nodeType":"YulIf","src":"3294:36:21"},{"nativeSrc":"3339:73:21","nodeType":"YulAssignment","src":"3339:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3382:9:21","nodeType":"YulIdentifier","src":"3382:9:21"},{"name":"offset_1","nativeSrc":"3393:8:21","nodeType":"YulIdentifier","src":"3393:8:21"}],"functionName":{"name":"add","nativeSrc":"3378:3:21","nodeType":"YulIdentifier","src":"3378:3:21"},"nativeSrc":"3378:24:21","nodeType":"YulFunctionCall","src":"3378:24:21"},{"name":"dataEnd","nativeSrc":"3404:7:21","nodeType":"YulIdentifier","src":"3404:7:21"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nativeSrc":"3349:28:21","nodeType":"YulIdentifier","src":"3349:28:21"},"nativeSrc":"3349:63:21","nodeType":"YulFunctionCall","src":"3349:63:21"},"variableNames":[{"name":"value1","nativeSrc":"3339:6:21","nodeType":"YulIdentifier","src":"3339:6:21"}]},{"nativeSrc":"3421:42:21","nodeType":"YulAssignment","src":"3421:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3448:9:21","nodeType":"YulIdentifier","src":"3448:9:21"},{"kind":"number","nativeSrc":"3459:2:21","nodeType":"YulLiteral","src":"3459:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3444:3:21","nodeType":"YulIdentifier","src":"3444:3:21"},"nativeSrc":"3444:18:21","nodeType":"YulFunctionCall","src":"3444:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"3431:12:21","nodeType":"YulIdentifier","src":"3431:12:21"},"nativeSrc":"3431:32:21","nodeType":"YulFunctionCall","src":"3431:32:21"},"variableNames":[{"name":"value2","nativeSrc":"3421:6:21","nodeType":"YulIdentifier","src":"3421:6:21"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256","nativeSrc":"2186:1283:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2290:9:21","nodeType":"YulTypedName","src":"2290:9:21","type":""},{"name":"dataEnd","nativeSrc":"2301:7:21","nodeType":"YulTypedName","src":"2301:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2313:6:21","nodeType":"YulTypedName","src":"2313:6:21","type":""},{"name":"value1","nativeSrc":"2321:6:21","nodeType":"YulTypedName","src":"2321:6:21","type":""},{"name":"value2","nativeSrc":"2329:6:21","nodeType":"YulTypedName","src":"2329:6:21","type":""}],"src":"2186:1283:21"},{"body":{"nativeSrc":"3544:110:21","nodeType":"YulBlock","src":"3544:110:21","statements":[{"body":{"nativeSrc":"3590:16:21","nodeType":"YulBlock","src":"3590:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3599:1:21","nodeType":"YulLiteral","src":"3599:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3602:1:21","nodeType":"YulLiteral","src":"3602:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3592:6:21","nodeType":"YulIdentifier","src":"3592:6:21"},"nativeSrc":"3592:12:21","nodeType":"YulFunctionCall","src":"3592:12:21"},"nativeSrc":"3592:12:21","nodeType":"YulExpressionStatement","src":"3592:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3565:7:21","nodeType":"YulIdentifier","src":"3565:7:21"},{"name":"headStart","nativeSrc":"3574:9:21","nodeType":"YulIdentifier","src":"3574:9:21"}],"functionName":{"name":"sub","nativeSrc":"3561:3:21","nodeType":"YulIdentifier","src":"3561:3:21"},"nativeSrc":"3561:23:21","nodeType":"YulFunctionCall","src":"3561:23:21"},{"kind":"number","nativeSrc":"3586:2:21","nodeType":"YulLiteral","src":"3586:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3557:3:21","nodeType":"YulIdentifier","src":"3557:3:21"},"nativeSrc":"3557:32:21","nodeType":"YulFunctionCall","src":"3557:32:21"},"nativeSrc":"3554:52:21","nodeType":"YulIf","src":"3554:52:21"},{"nativeSrc":"3615:33:21","nodeType":"YulAssignment","src":"3615:33:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3638:9:21","nodeType":"YulIdentifier","src":"3638:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"3625:12:21","nodeType":"YulIdentifier","src":"3625:12:21"},"nativeSrc":"3625:23:21","nodeType":"YulFunctionCall","src":"3625:23:21"},"variableNames":[{"name":"value0","nativeSrc":"3615:6:21","nodeType":"YulIdentifier","src":"3615:6:21"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"3474:180:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3510:9:21","nodeType":"YulTypedName","src":"3510:9:21","type":""},{"name":"dataEnd","nativeSrc":"3521:7:21","nodeType":"YulTypedName","src":"3521:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3533:6:21","nodeType":"YulTypedName","src":"3533:6:21","type":""}],"src":"3474:180:21"},{"body":{"nativeSrc":"3729:177:21","nodeType":"YulBlock","src":"3729:177:21","statements":[{"body":{"nativeSrc":"3775:16:21","nodeType":"YulBlock","src":"3775:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3784:1:21","nodeType":"YulLiteral","src":"3784:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3787:1:21","nodeType":"YulLiteral","src":"3787:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3777:6:21","nodeType":"YulIdentifier","src":"3777:6:21"},"nativeSrc":"3777:12:21","nodeType":"YulFunctionCall","src":"3777:12:21"},"nativeSrc":"3777:12:21","nodeType":"YulExpressionStatement","src":"3777:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3750:7:21","nodeType":"YulIdentifier","src":"3750:7:21"},{"name":"headStart","nativeSrc":"3759:9:21","nodeType":"YulIdentifier","src":"3759:9:21"}],"functionName":{"name":"sub","nativeSrc":"3746:3:21","nodeType":"YulIdentifier","src":"3746:3:21"},"nativeSrc":"3746:23:21","nodeType":"YulFunctionCall","src":"3746:23:21"},{"kind":"number","nativeSrc":"3771:2:21","nodeType":"YulLiteral","src":"3771:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3742:3:21","nodeType":"YulIdentifier","src":"3742:3:21"},"nativeSrc":"3742:32:21","nodeType":"YulFunctionCall","src":"3742:32:21"},"nativeSrc":"3739:52:21","nodeType":"YulIf","src":"3739:52:21"},{"nativeSrc":"3800:36:21","nodeType":"YulVariableDeclaration","src":"3800:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3826:9:21","nodeType":"YulIdentifier","src":"3826:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"3813:12:21","nodeType":"YulIdentifier","src":"3813:12:21"},"nativeSrc":"3813:23:21","nodeType":"YulFunctionCall","src":"3813:23:21"},"variables":[{"name":"value","nativeSrc":"3804:5:21","nodeType":"YulTypedName","src":"3804:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3870:5:21","nodeType":"YulIdentifier","src":"3870:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"3845:24:21","nodeType":"YulIdentifier","src":"3845:24:21"},"nativeSrc":"3845:31:21","nodeType":"YulFunctionCall","src":"3845:31:21"},"nativeSrc":"3845:31:21","nodeType":"YulExpressionStatement","src":"3845:31:21"},{"nativeSrc":"3885:15:21","nodeType":"YulAssignment","src":"3885:15:21","value":{"name":"value","nativeSrc":"3895:5:21","nodeType":"YulIdentifier","src":"3895:5:21"},"variableNames":[{"name":"value0","nativeSrc":"3885:6:21","nodeType":"YulIdentifier","src":"3885:6:21"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"3659:247:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3695:9:21","nodeType":"YulTypedName","src":"3695:9:21","type":""},{"name":"dataEnd","nativeSrc":"3706:7:21","nodeType":"YulTypedName","src":"3706:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3718:6:21","nodeType":"YulTypedName","src":"3718:6:21","type":""}],"src":"3659:247:21"},{"body":{"nativeSrc":"3972:427:21","nodeType":"YulBlock","src":"3972:427:21","statements":[{"nativeSrc":"3982:26:21","nodeType":"YulVariableDeclaration","src":"3982:26:21","value":{"arguments":[{"name":"value","nativeSrc":"4002:5:21","nodeType":"YulIdentifier","src":"4002:5:21"}],"functionName":{"name":"mload","nativeSrc":"3996:5:21","nodeType":"YulIdentifier","src":"3996:5:21"},"nativeSrc":"3996:12:21","nodeType":"YulFunctionCall","src":"3996:12:21"},"variables":[{"name":"length","nativeSrc":"3986:6:21","nodeType":"YulTypedName","src":"3986:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"4024:3:21","nodeType":"YulIdentifier","src":"4024:3:21"},{"name":"length","nativeSrc":"4029:6:21","nodeType":"YulIdentifier","src":"4029:6:21"}],"functionName":{"name":"mstore","nativeSrc":"4017:6:21","nodeType":"YulIdentifier","src":"4017:6:21"},"nativeSrc":"4017:19:21","nodeType":"YulFunctionCall","src":"4017:19:21"},"nativeSrc":"4017:19:21","nodeType":"YulExpressionStatement","src":"4017:19:21"},{"nativeSrc":"4045:14:21","nodeType":"YulVariableDeclaration","src":"4045:14:21","value":{"kind":"number","nativeSrc":"4055:4:21","nodeType":"YulLiteral","src":"4055:4:21","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"4049:2:21","nodeType":"YulTypedName","src":"4049:2:21","type":""}]},{"nativeSrc":"4068:21:21","nodeType":"YulAssignment","src":"4068:21:21","value":{"arguments":[{"name":"pos","nativeSrc":"4079:3:21","nodeType":"YulIdentifier","src":"4079:3:21"},{"kind":"number","nativeSrc":"4084:4:21","nodeType":"YulLiteral","src":"4084:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4075:3:21","nodeType":"YulIdentifier","src":"4075:3:21"},"nativeSrc":"4075:14:21","nodeType":"YulFunctionCall","src":"4075:14:21"},"variableNames":[{"name":"pos","nativeSrc":"4068:3:21","nodeType":"YulIdentifier","src":"4068:3:21"}]},{"nativeSrc":"4098:30:21","nodeType":"YulVariableDeclaration","src":"4098:30:21","value":{"arguments":[{"name":"value","nativeSrc":"4116:5:21","nodeType":"YulIdentifier","src":"4116:5:21"},{"kind":"number","nativeSrc":"4123:4:21","nodeType":"YulLiteral","src":"4123:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4112:3:21","nodeType":"YulIdentifier","src":"4112:3:21"},"nativeSrc":"4112:16:21","nodeType":"YulFunctionCall","src":"4112:16:21"},"variables":[{"name":"srcPtr","nativeSrc":"4102:6:21","nodeType":"YulTypedName","src":"4102:6:21","type":""}]},{"nativeSrc":"4137:10:21","nodeType":"YulVariableDeclaration","src":"4137:10:21","value":{"kind":"number","nativeSrc":"4146:1:21","nodeType":"YulLiteral","src":"4146:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4141:1:21","nodeType":"YulTypedName","src":"4141:1:21","type":""}]},{"body":{"nativeSrc":"4205:169:21","nodeType":"YulBlock","src":"4205:169:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4226:3:21","nodeType":"YulIdentifier","src":"4226:3:21"},{"arguments":[{"arguments":[{"name":"srcPtr","nativeSrc":"4241:6:21","nodeType":"YulIdentifier","src":"4241:6:21"}],"functionName":{"name":"mload","nativeSrc":"4235:5:21","nodeType":"YulIdentifier","src":"4235:5:21"},"nativeSrc":"4235:13:21","nodeType":"YulFunctionCall","src":"4235:13:21"},{"kind":"number","nativeSrc":"4250:42:21","nodeType":"YulLiteral","src":"4250:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"4231:3:21","nodeType":"YulIdentifier","src":"4231:3:21"},"nativeSrc":"4231:62:21","nodeType":"YulFunctionCall","src":"4231:62:21"}],"functionName":{"name":"mstore","nativeSrc":"4219:6:21","nodeType":"YulIdentifier","src":"4219:6:21"},"nativeSrc":"4219:75:21","nodeType":"YulFunctionCall","src":"4219:75:21"},"nativeSrc":"4219:75:21","nodeType":"YulExpressionStatement","src":"4219:75:21"},{"nativeSrc":"4307:19:21","nodeType":"YulAssignment","src":"4307:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"4318:3:21","nodeType":"YulIdentifier","src":"4318:3:21"},{"name":"_1","nativeSrc":"4323:2:21","nodeType":"YulIdentifier","src":"4323:2:21"}],"functionName":{"name":"add","nativeSrc":"4314:3:21","nodeType":"YulIdentifier","src":"4314:3:21"},"nativeSrc":"4314:12:21","nodeType":"YulFunctionCall","src":"4314:12:21"},"variableNames":[{"name":"pos","nativeSrc":"4307:3:21","nodeType":"YulIdentifier","src":"4307:3:21"}]},{"nativeSrc":"4339:25:21","nodeType":"YulAssignment","src":"4339:25:21","value":{"arguments":[{"name":"srcPtr","nativeSrc":"4353:6:21","nodeType":"YulIdentifier","src":"4353:6:21"},{"name":"_1","nativeSrc":"4361:2:21","nodeType":"YulIdentifier","src":"4361:2:21"}],"functionName":{"name":"add","nativeSrc":"4349:3:21","nodeType":"YulIdentifier","src":"4349:3:21"},"nativeSrc":"4349:15:21","nodeType":"YulFunctionCall","src":"4349:15:21"},"variableNames":[{"name":"srcPtr","nativeSrc":"4339:6:21","nodeType":"YulIdentifier","src":"4339:6:21"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4167:1:21","nodeType":"YulIdentifier","src":"4167:1:21"},{"name":"length","nativeSrc":"4170:6:21","nodeType":"YulIdentifier","src":"4170:6:21"}],"functionName":{"name":"lt","nativeSrc":"4164:2:21","nodeType":"YulIdentifier","src":"4164:2:21"},"nativeSrc":"4164:13:21","nodeType":"YulFunctionCall","src":"4164:13:21"},"nativeSrc":"4156:218:21","nodeType":"YulForLoop","post":{"nativeSrc":"4178:18:21","nodeType":"YulBlock","src":"4178:18:21","statements":[{"nativeSrc":"4180:14:21","nodeType":"YulAssignment","src":"4180:14:21","value":{"arguments":[{"name":"i","nativeSrc":"4189:1:21","nodeType":"YulIdentifier","src":"4189:1:21"},{"kind":"number","nativeSrc":"4192:1:21","nodeType":"YulLiteral","src":"4192:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4185:3:21","nodeType":"YulIdentifier","src":"4185:3:21"},"nativeSrc":"4185:9:21","nodeType":"YulFunctionCall","src":"4185:9:21"},"variableNames":[{"name":"i","nativeSrc":"4180:1:21","nodeType":"YulIdentifier","src":"4180:1:21"}]}]},"pre":{"nativeSrc":"4160:3:21","nodeType":"YulBlock","src":"4160:3:21","statements":[]},"src":"4156:218:21"},{"nativeSrc":"4383:10:21","nodeType":"YulAssignment","src":"4383:10:21","value":{"name":"pos","nativeSrc":"4390:3:21","nodeType":"YulIdentifier","src":"4390:3:21"},"variableNames":[{"name":"end","nativeSrc":"4383:3:21","nodeType":"YulIdentifier","src":"4383:3:21"}]}]},"name":"abi_encode_array_address_dyn","nativeSrc":"3911:488:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3949:5:21","nodeType":"YulTypedName","src":"3949:5:21","type":""},{"name":"pos","nativeSrc":"3956:3:21","nodeType":"YulTypedName","src":"3956:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3964:3:21","nodeType":"YulTypedName","src":"3964:3:21","type":""}],"src":"3911:488:21"},{"body":{"nativeSrc":"4555:110:21","nodeType":"YulBlock","src":"4555:110:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4572:9:21","nodeType":"YulIdentifier","src":"4572:9:21"},{"kind":"number","nativeSrc":"4583:2:21","nodeType":"YulLiteral","src":"4583:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4565:6:21","nodeType":"YulIdentifier","src":"4565:6:21"},"nativeSrc":"4565:21:21","nodeType":"YulFunctionCall","src":"4565:21:21"},"nativeSrc":"4565:21:21","nodeType":"YulExpressionStatement","src":"4565:21:21"},{"nativeSrc":"4595:64:21","nodeType":"YulAssignment","src":"4595:64:21","value":{"arguments":[{"name":"value0","nativeSrc":"4632:6:21","nodeType":"YulIdentifier","src":"4632:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"4644:9:21","nodeType":"YulIdentifier","src":"4644:9:21"},{"kind":"number","nativeSrc":"4655:2:21","nodeType":"YulLiteral","src":"4655:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4640:3:21","nodeType":"YulIdentifier","src":"4640:3:21"},"nativeSrc":"4640:18:21","nodeType":"YulFunctionCall","src":"4640:18:21"}],"functionName":{"name":"abi_encode_array_address_dyn","nativeSrc":"4603:28:21","nodeType":"YulIdentifier","src":"4603:28:21"},"nativeSrc":"4603:56:21","nodeType":"YulFunctionCall","src":"4603:56:21"},"variableNames":[{"name":"tail","nativeSrc":"4595:4:21","nodeType":"YulIdentifier","src":"4595:4:21"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"4404:261:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4524:9:21","nodeType":"YulTypedName","src":"4524:9:21","type":""},{"name":"value0","nativeSrc":"4535:6:21","nodeType":"YulTypedName","src":"4535:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4546:4:21","nodeType":"YulTypedName","src":"4546:4:21","type":""}],"src":"4404:261:21"},{"body":{"nativeSrc":"4766:861:21","nodeType":"YulBlock","src":"4766:861:21","statements":[{"body":{"nativeSrc":"4812:16:21","nodeType":"YulBlock","src":"4812:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4821:1:21","nodeType":"YulLiteral","src":"4821:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"4824:1:21","nodeType":"YulLiteral","src":"4824:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4814:6:21","nodeType":"YulIdentifier","src":"4814:6:21"},"nativeSrc":"4814:12:21","nodeType":"YulFunctionCall","src":"4814:12:21"},"nativeSrc":"4814:12:21","nodeType":"YulExpressionStatement","src":"4814:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4787:7:21","nodeType":"YulIdentifier","src":"4787:7:21"},{"name":"headStart","nativeSrc":"4796:9:21","nodeType":"YulIdentifier","src":"4796:9:21"}],"functionName":{"name":"sub","nativeSrc":"4783:3:21","nodeType":"YulIdentifier","src":"4783:3:21"},"nativeSrc":"4783:23:21","nodeType":"YulFunctionCall","src":"4783:23:21"},{"kind":"number","nativeSrc":"4808:2:21","nodeType":"YulLiteral","src":"4808:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4779:3:21","nodeType":"YulIdentifier","src":"4779:3:21"},"nativeSrc":"4779:32:21","nodeType":"YulFunctionCall","src":"4779:32:21"},"nativeSrc":"4776:52:21","nodeType":"YulIf","src":"4776:52:21"},{"nativeSrc":"4837:36:21","nodeType":"YulVariableDeclaration","src":"4837:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4863:9:21","nodeType":"YulIdentifier","src":"4863:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"4850:12:21","nodeType":"YulIdentifier","src":"4850:12:21"},"nativeSrc":"4850:23:21","nodeType":"YulFunctionCall","src":"4850:23:21"},"variables":[{"name":"value","nativeSrc":"4841:5:21","nodeType":"YulTypedName","src":"4841:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4907:5:21","nodeType":"YulIdentifier","src":"4907:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"4882:24:21","nodeType":"YulIdentifier","src":"4882:24:21"},"nativeSrc":"4882:31:21","nodeType":"YulFunctionCall","src":"4882:31:21"},"nativeSrc":"4882:31:21","nodeType":"YulExpressionStatement","src":"4882:31:21"},{"nativeSrc":"4922:15:21","nodeType":"YulAssignment","src":"4922:15:21","value":{"name":"value","nativeSrc":"4932:5:21","nodeType":"YulIdentifier","src":"4932:5:21"},"variableNames":[{"name":"value0","nativeSrc":"4922:6:21","nodeType":"YulIdentifier","src":"4922:6:21"}]},{"nativeSrc":"4946:12:21","nodeType":"YulVariableDeclaration","src":"4946:12:21","value":{"kind":"number","nativeSrc":"4956:2:21","nodeType":"YulLiteral","src":"4956:2:21","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"4950:2:21","nodeType":"YulTypedName","src":"4950:2:21","type":""}]},{"nativeSrc":"4967:46:21","nodeType":"YulVariableDeclaration","src":"4967:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4998:9:21","nodeType":"YulIdentifier","src":"4998:9:21"},{"name":"_1","nativeSrc":"5009:2:21","nodeType":"YulIdentifier","src":"5009:2:21"}],"functionName":{"name":"add","nativeSrc":"4994:3:21","nodeType":"YulIdentifier","src":"4994:3:21"},"nativeSrc":"4994:18:21","nodeType":"YulFunctionCall","src":"4994:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"4981:12:21","nodeType":"YulIdentifier","src":"4981:12:21"},"nativeSrc":"4981:32:21","nodeType":"YulFunctionCall","src":"4981:32:21"},"variables":[{"name":"offset","nativeSrc":"4971:6:21","nodeType":"YulTypedName","src":"4971:6:21","type":""}]},{"nativeSrc":"5022:28:21","nodeType":"YulVariableDeclaration","src":"5022:28:21","value":{"kind":"number","nativeSrc":"5032:18:21","nodeType":"YulLiteral","src":"5032:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nativeSrc":"5026:2:21","nodeType":"YulTypedName","src":"5026:2:21","type":""}]},{"body":{"nativeSrc":"5077:16:21","nodeType":"YulBlock","src":"5077:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5086:1:21","nodeType":"YulLiteral","src":"5086:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5089:1:21","nodeType":"YulLiteral","src":"5089:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5079:6:21","nodeType":"YulIdentifier","src":"5079:6:21"},"nativeSrc":"5079:12:21","nodeType":"YulFunctionCall","src":"5079:12:21"},"nativeSrc":"5079:12:21","nodeType":"YulExpressionStatement","src":"5079:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"5065:6:21","nodeType":"YulIdentifier","src":"5065:6:21"},{"name":"_2","nativeSrc":"5073:2:21","nodeType":"YulIdentifier","src":"5073:2:21"}],"functionName":{"name":"gt","nativeSrc":"5062:2:21","nodeType":"YulIdentifier","src":"5062:2:21"},"nativeSrc":"5062:14:21","nodeType":"YulFunctionCall","src":"5062:14:21"},"nativeSrc":"5059:34:21","nodeType":"YulIf","src":"5059:34:21"},{"nativeSrc":"5102:32:21","nodeType":"YulVariableDeclaration","src":"5102:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5116:9:21","nodeType":"YulIdentifier","src":"5116:9:21"},{"name":"offset","nativeSrc":"5127:6:21","nodeType":"YulIdentifier","src":"5127:6:21"}],"functionName":{"name":"add","nativeSrc":"5112:3:21","nodeType":"YulIdentifier","src":"5112:3:21"},"nativeSrc":"5112:22:21","nodeType":"YulFunctionCall","src":"5112:22:21"},"variables":[{"name":"_3","nativeSrc":"5106:2:21","nodeType":"YulTypedName","src":"5106:2:21","type":""}]},{"body":{"nativeSrc":"5182:16:21","nodeType":"YulBlock","src":"5182:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5191:1:21","nodeType":"YulLiteral","src":"5191:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5194:1:21","nodeType":"YulLiteral","src":"5194:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5184:6:21","nodeType":"YulIdentifier","src":"5184:6:21"},"nativeSrc":"5184:12:21","nodeType":"YulFunctionCall","src":"5184:12:21"},"nativeSrc":"5184:12:21","nodeType":"YulExpressionStatement","src":"5184:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"5161:2:21","nodeType":"YulIdentifier","src":"5161:2:21"},{"kind":"number","nativeSrc":"5165:4:21","nodeType":"YulLiteral","src":"5165:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"5157:3:21","nodeType":"YulIdentifier","src":"5157:3:21"},"nativeSrc":"5157:13:21","nodeType":"YulFunctionCall","src":"5157:13:21"},{"name":"dataEnd","nativeSrc":"5172:7:21","nodeType":"YulIdentifier","src":"5172:7:21"}],"functionName":{"name":"slt","nativeSrc":"5153:3:21","nodeType":"YulIdentifier","src":"5153:3:21"},"nativeSrc":"5153:27:21","nodeType":"YulFunctionCall","src":"5153:27:21"}],"functionName":{"name":"iszero","nativeSrc":"5146:6:21","nodeType":"YulIdentifier","src":"5146:6:21"},"nativeSrc":"5146:35:21","nodeType":"YulFunctionCall","src":"5146:35:21"},"nativeSrc":"5143:55:21","nodeType":"YulIf","src":"5143:55:21"},{"nativeSrc":"5207:26:21","nodeType":"YulVariableDeclaration","src":"5207:26:21","value":{"arguments":[{"name":"_3","nativeSrc":"5230:2:21","nodeType":"YulIdentifier","src":"5230:2:21"}],"functionName":{"name":"calldataload","nativeSrc":"5217:12:21","nodeType":"YulIdentifier","src":"5217:12:21"},"nativeSrc":"5217:16:21","nodeType":"YulFunctionCall","src":"5217:16:21"},"variables":[{"name":"_4","nativeSrc":"5211:2:21","nodeType":"YulTypedName","src":"5211:2:21","type":""}]},{"body":{"nativeSrc":"5256:22:21","nodeType":"YulBlock","src":"5256:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5258:16:21","nodeType":"YulIdentifier","src":"5258:16:21"},"nativeSrc":"5258:18:21","nodeType":"YulFunctionCall","src":"5258:18:21"},"nativeSrc":"5258:18:21","nodeType":"YulExpressionStatement","src":"5258:18:21"}]},"condition":{"arguments":[{"name":"_4","nativeSrc":"5248:2:21","nodeType":"YulIdentifier","src":"5248:2:21"},{"name":"_2","nativeSrc":"5252:2:21","nodeType":"YulIdentifier","src":"5252:2:21"}],"functionName":{"name":"gt","nativeSrc":"5245:2:21","nodeType":"YulIdentifier","src":"5245:2:21"},"nativeSrc":"5245:10:21","nodeType":"YulFunctionCall","src":"5245:10:21"},"nativeSrc":"5242:36:21","nodeType":"YulIf","src":"5242:36:21"},{"nativeSrc":"5287:125:21","nodeType":"YulVariableDeclaration","src":"5287:125:21","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_4","nativeSrc":"5328:2:21","nodeType":"YulIdentifier","src":"5328:2:21"},{"kind":"number","nativeSrc":"5332:4:21","nodeType":"YulLiteral","src":"5332:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"5324:3:21","nodeType":"YulIdentifier","src":"5324:3:21"},"nativeSrc":"5324:13:21","nodeType":"YulFunctionCall","src":"5324:13:21"},{"kind":"number","nativeSrc":"5339:66:21","nodeType":"YulLiteral","src":"5339:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nativeSrc":"5320:3:21","nodeType":"YulIdentifier","src":"5320:3:21"},"nativeSrc":"5320:86:21","nodeType":"YulFunctionCall","src":"5320:86:21"},{"name":"_1","nativeSrc":"5408:2:21","nodeType":"YulIdentifier","src":"5408:2:21"}],"functionName":{"name":"add","nativeSrc":"5316:3:21","nodeType":"YulIdentifier","src":"5316:3:21"},"nativeSrc":"5316:95:21","nodeType":"YulFunctionCall","src":"5316:95:21"}],"functionName":{"name":"allocate_memory","nativeSrc":"5300:15:21","nodeType":"YulIdentifier","src":"5300:15:21"},"nativeSrc":"5300:112:21","nodeType":"YulFunctionCall","src":"5300:112:21"},"variables":[{"name":"array","nativeSrc":"5291:5:21","nodeType":"YulTypedName","src":"5291:5:21","type":""}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"5428:5:21","nodeType":"YulIdentifier","src":"5428:5:21"},{"name":"_4","nativeSrc":"5435:2:21","nodeType":"YulIdentifier","src":"5435:2:21"}],"functionName":{"name":"mstore","nativeSrc":"5421:6:21","nodeType":"YulIdentifier","src":"5421:6:21"},"nativeSrc":"5421:17:21","nodeType":"YulFunctionCall","src":"5421:17:21"},"nativeSrc":"5421:17:21","nodeType":"YulExpressionStatement","src":"5421:17:21"},{"body":{"nativeSrc":"5484:16:21","nodeType":"YulBlock","src":"5484:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5493:1:21","nodeType":"YulLiteral","src":"5493:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5496:1:21","nodeType":"YulLiteral","src":"5496:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5486:6:21","nodeType":"YulIdentifier","src":"5486:6:21"},"nativeSrc":"5486:12:21","nodeType":"YulFunctionCall","src":"5486:12:21"},"nativeSrc":"5486:12:21","nodeType":"YulExpressionStatement","src":"5486:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"5461:2:21","nodeType":"YulIdentifier","src":"5461:2:21"},{"name":"_4","nativeSrc":"5465:2:21","nodeType":"YulIdentifier","src":"5465:2:21"}],"functionName":{"name":"add","nativeSrc":"5457:3:21","nodeType":"YulIdentifier","src":"5457:3:21"},"nativeSrc":"5457:11:21","nodeType":"YulFunctionCall","src":"5457:11:21"},{"name":"_1","nativeSrc":"5470:2:21","nodeType":"YulIdentifier","src":"5470:2:21"}],"functionName":{"name":"add","nativeSrc":"5453:3:21","nodeType":"YulIdentifier","src":"5453:3:21"},"nativeSrc":"5453:20:21","nodeType":"YulFunctionCall","src":"5453:20:21"},{"name":"dataEnd","nativeSrc":"5475:7:21","nodeType":"YulIdentifier","src":"5475:7:21"}],"functionName":{"name":"gt","nativeSrc":"5450:2:21","nodeType":"YulIdentifier","src":"5450:2:21"},"nativeSrc":"5450:33:21","nodeType":"YulFunctionCall","src":"5450:33:21"},"nativeSrc":"5447:53:21","nodeType":"YulIf","src":"5447:53:21"},{"expression":{"arguments":[{"arguments":[{"name":"array","nativeSrc":"5526:5:21","nodeType":"YulIdentifier","src":"5526:5:21"},{"name":"_1","nativeSrc":"5533:2:21","nodeType":"YulIdentifier","src":"5533:2:21"}],"functionName":{"name":"add","nativeSrc":"5522:3:21","nodeType":"YulIdentifier","src":"5522:3:21"},"nativeSrc":"5522:14:21","nodeType":"YulFunctionCall","src":"5522:14:21"},{"arguments":[{"name":"_3","nativeSrc":"5542:2:21","nodeType":"YulIdentifier","src":"5542:2:21"},{"name":"_1","nativeSrc":"5546:2:21","nodeType":"YulIdentifier","src":"5546:2:21"}],"functionName":{"name":"add","nativeSrc":"5538:3:21","nodeType":"YulIdentifier","src":"5538:3:21"},"nativeSrc":"5538:11:21","nodeType":"YulFunctionCall","src":"5538:11:21"},{"name":"_4","nativeSrc":"5551:2:21","nodeType":"YulIdentifier","src":"5551:2:21"}],"functionName":{"name":"calldatacopy","nativeSrc":"5509:12:21","nodeType":"YulIdentifier","src":"5509:12:21"},"nativeSrc":"5509:45:21","nodeType":"YulFunctionCall","src":"5509:45:21"},"nativeSrc":"5509:45:21","nodeType":"YulExpressionStatement","src":"5509:45:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nativeSrc":"5578:5:21","nodeType":"YulIdentifier","src":"5578:5:21"},{"name":"_4","nativeSrc":"5585:2:21","nodeType":"YulIdentifier","src":"5585:2:21"}],"functionName":{"name":"add","nativeSrc":"5574:3:21","nodeType":"YulIdentifier","src":"5574:3:21"},"nativeSrc":"5574:14:21","nodeType":"YulFunctionCall","src":"5574:14:21"},{"name":"_1","nativeSrc":"5590:2:21","nodeType":"YulIdentifier","src":"5590:2:21"}],"functionName":{"name":"add","nativeSrc":"5570:3:21","nodeType":"YulIdentifier","src":"5570:3:21"},"nativeSrc":"5570:23:21","nodeType":"YulFunctionCall","src":"5570:23:21"},{"kind":"number","nativeSrc":"5595:1:21","nodeType":"YulLiteral","src":"5595:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"5563:6:21","nodeType":"YulIdentifier","src":"5563:6:21"},"nativeSrc":"5563:34:21","nodeType":"YulFunctionCall","src":"5563:34:21"},"nativeSrc":"5563:34:21","nodeType":"YulExpressionStatement","src":"5563:34:21"},{"nativeSrc":"5606:15:21","nodeType":"YulAssignment","src":"5606:15:21","value":{"name":"array","nativeSrc":"5616:5:21","nodeType":"YulIdentifier","src":"5616:5:21"},"variableNames":[{"name":"value1","nativeSrc":"5606:6:21","nodeType":"YulIdentifier","src":"5606:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"4670:957:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4724:9:21","nodeType":"YulTypedName","src":"4724:9:21","type":""},{"name":"dataEnd","nativeSrc":"4735:7:21","nodeType":"YulTypedName","src":"4735:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4747:6:21","nodeType":"YulTypedName","src":"4747:6:21","type":""},{"name":"value1","nativeSrc":"4755:6:21","nodeType":"YulTypedName","src":"4755:6:21","type":""}],"src":"4670:957:21"},{"body":{"nativeSrc":"5733:76:21","nodeType":"YulBlock","src":"5733:76:21","statements":[{"nativeSrc":"5743:26:21","nodeType":"YulAssignment","src":"5743:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5755:9:21","nodeType":"YulIdentifier","src":"5755:9:21"},{"kind":"number","nativeSrc":"5766:2:21","nodeType":"YulLiteral","src":"5766:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5751:3:21","nodeType":"YulIdentifier","src":"5751:3:21"},"nativeSrc":"5751:18:21","nodeType":"YulFunctionCall","src":"5751:18:21"},"variableNames":[{"name":"tail","nativeSrc":"5743:4:21","nodeType":"YulIdentifier","src":"5743:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5785:9:21","nodeType":"YulIdentifier","src":"5785:9:21"},{"name":"value0","nativeSrc":"5796:6:21","nodeType":"YulIdentifier","src":"5796:6:21"}],"functionName":{"name":"mstore","nativeSrc":"5778:6:21","nodeType":"YulIdentifier","src":"5778:6:21"},"nativeSrc":"5778:25:21","nodeType":"YulFunctionCall","src":"5778:25:21"},"nativeSrc":"5778:25:21","nodeType":"YulExpressionStatement","src":"5778:25:21"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"5632:177:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5702:9:21","nodeType":"YulTypedName","src":"5702:9:21","type":""},{"name":"value0","nativeSrc":"5713:6:21","nodeType":"YulTypedName","src":"5713:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5724:4:21","nodeType":"YulTypedName","src":"5724:4:21","type":""}],"src":"5632:177:21"},{"body":{"nativeSrc":"5941:125:21","nodeType":"YulBlock","src":"5941:125:21","statements":[{"nativeSrc":"5951:26:21","nodeType":"YulAssignment","src":"5951:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5963:9:21","nodeType":"YulIdentifier","src":"5963:9:21"},{"kind":"number","nativeSrc":"5974:2:21","nodeType":"YulLiteral","src":"5974:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5959:3:21","nodeType":"YulIdentifier","src":"5959:3:21"},"nativeSrc":"5959:18:21","nodeType":"YulFunctionCall","src":"5959:18:21"},"variableNames":[{"name":"tail","nativeSrc":"5951:4:21","nodeType":"YulIdentifier","src":"5951:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5993:9:21","nodeType":"YulIdentifier","src":"5993:9:21"},{"arguments":[{"name":"value0","nativeSrc":"6008:6:21","nodeType":"YulIdentifier","src":"6008:6:21"},{"kind":"number","nativeSrc":"6016:42:21","nodeType":"YulLiteral","src":"6016:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"6004:3:21","nodeType":"YulIdentifier","src":"6004:3:21"},"nativeSrc":"6004:55:21","nodeType":"YulFunctionCall","src":"6004:55:21"}],"functionName":{"name":"mstore","nativeSrc":"5986:6:21","nodeType":"YulIdentifier","src":"5986:6:21"},"nativeSrc":"5986:74:21","nodeType":"YulFunctionCall","src":"5986:74:21"},"nativeSrc":"5986:74:21","nodeType":"YulExpressionStatement","src":"5986:74:21"}]},"name":"abi_encode_tuple_t_contract$_IBaluniV1Registry_$4898__to_t_address__fromStack_reversed","nativeSrc":"5814:252:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5910:9:21","nodeType":"YulTypedName","src":"5910:9:21","type":""},{"name":"value0","nativeSrc":"5921:6:21","nodeType":"YulTypedName","src":"5921:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5932:4:21","nodeType":"YulTypedName","src":"5932:4:21","type":""}],"src":"5814:252:21"},{"body":{"nativeSrc":"6166:92:21","nodeType":"YulBlock","src":"6166:92:21","statements":[{"nativeSrc":"6176:26:21","nodeType":"YulAssignment","src":"6176:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6188:9:21","nodeType":"YulIdentifier","src":"6188:9:21"},{"kind":"number","nativeSrc":"6199:2:21","nodeType":"YulLiteral","src":"6199:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6184:3:21","nodeType":"YulIdentifier","src":"6184:3:21"},"nativeSrc":"6184:18:21","nodeType":"YulFunctionCall","src":"6184:18:21"},"variableNames":[{"name":"tail","nativeSrc":"6176:4:21","nodeType":"YulIdentifier","src":"6176:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6218:9:21","nodeType":"YulIdentifier","src":"6218:9:21"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"6243:6:21","nodeType":"YulIdentifier","src":"6243:6:21"}],"functionName":{"name":"iszero","nativeSrc":"6236:6:21","nodeType":"YulIdentifier","src":"6236:6:21"},"nativeSrc":"6236:14:21","nodeType":"YulFunctionCall","src":"6236:14:21"}],"functionName":{"name":"iszero","nativeSrc":"6229:6:21","nodeType":"YulIdentifier","src":"6229:6:21"},"nativeSrc":"6229:22:21","nodeType":"YulFunctionCall","src":"6229:22:21"}],"functionName":{"name":"mstore","nativeSrc":"6211:6:21","nodeType":"YulIdentifier","src":"6211:6:21"},"nativeSrc":"6211:41:21","nodeType":"YulFunctionCall","src":"6211:41:21"},"nativeSrc":"6211:41:21","nodeType":"YulExpressionStatement","src":"6211:41:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"6071:187:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6135:9:21","nodeType":"YulTypedName","src":"6135:9:21","type":""},{"name":"value0","nativeSrc":"6146:6:21","nodeType":"YulTypedName","src":"6146:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6157:4:21","nodeType":"YulTypedName","src":"6157:4:21","type":""}],"src":"6071:187:21"},{"body":{"nativeSrc":"6349:341:21","nodeType":"YulBlock","src":"6349:341:21","statements":[{"body":{"nativeSrc":"6395:16:21","nodeType":"YulBlock","src":"6395:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6404:1:21","nodeType":"YulLiteral","src":"6404:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"6407:1:21","nodeType":"YulLiteral","src":"6407:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6397:6:21","nodeType":"YulIdentifier","src":"6397:6:21"},"nativeSrc":"6397:12:21","nodeType":"YulFunctionCall","src":"6397:12:21"},"nativeSrc":"6397:12:21","nodeType":"YulExpressionStatement","src":"6397:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6370:7:21","nodeType":"YulIdentifier","src":"6370:7:21"},{"name":"headStart","nativeSrc":"6379:9:21","nodeType":"YulIdentifier","src":"6379:9:21"}],"functionName":{"name":"sub","nativeSrc":"6366:3:21","nodeType":"YulIdentifier","src":"6366:3:21"},"nativeSrc":"6366:23:21","nodeType":"YulFunctionCall","src":"6366:23:21"},{"kind":"number","nativeSrc":"6391:2:21","nodeType":"YulLiteral","src":"6391:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6362:3:21","nodeType":"YulIdentifier","src":"6362:3:21"},"nativeSrc":"6362:32:21","nodeType":"YulFunctionCall","src":"6362:32:21"},"nativeSrc":"6359:52:21","nodeType":"YulIf","src":"6359:52:21"},{"nativeSrc":"6420:36:21","nodeType":"YulVariableDeclaration","src":"6420:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6446:9:21","nodeType":"YulIdentifier","src":"6446:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"6433:12:21","nodeType":"YulIdentifier","src":"6433:12:21"},"nativeSrc":"6433:23:21","nodeType":"YulFunctionCall","src":"6433:23:21"},"variables":[{"name":"value","nativeSrc":"6424:5:21","nodeType":"YulTypedName","src":"6424:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6490:5:21","nodeType":"YulIdentifier","src":"6490:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"6465:24:21","nodeType":"YulIdentifier","src":"6465:24:21"},"nativeSrc":"6465:31:21","nodeType":"YulFunctionCall","src":"6465:31:21"},"nativeSrc":"6465:31:21","nodeType":"YulExpressionStatement","src":"6465:31:21"},{"nativeSrc":"6505:15:21","nodeType":"YulAssignment","src":"6505:15:21","value":{"name":"value","nativeSrc":"6515:5:21","nodeType":"YulIdentifier","src":"6515:5:21"},"variableNames":[{"name":"value0","nativeSrc":"6505:6:21","nodeType":"YulIdentifier","src":"6505:6:21"}]},{"nativeSrc":"6529:47:21","nodeType":"YulVariableDeclaration","src":"6529:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6561:9:21","nodeType":"YulIdentifier","src":"6561:9:21"},{"kind":"number","nativeSrc":"6572:2:21","nodeType":"YulLiteral","src":"6572:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6557:3:21","nodeType":"YulIdentifier","src":"6557:3:21"},"nativeSrc":"6557:18:21","nodeType":"YulFunctionCall","src":"6557:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"6544:12:21","nodeType":"YulIdentifier","src":"6544:12:21"},"nativeSrc":"6544:32:21","nodeType":"YulFunctionCall","src":"6544:32:21"},"variables":[{"name":"value_1","nativeSrc":"6533:7:21","nodeType":"YulTypedName","src":"6533:7:21","type":""}]},{"body":{"nativeSrc":"6642:16:21","nodeType":"YulBlock","src":"6642:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6651:1:21","nodeType":"YulLiteral","src":"6651:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"6654:1:21","nodeType":"YulLiteral","src":"6654:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6644:6:21","nodeType":"YulIdentifier","src":"6644:6:21"},"nativeSrc":"6644:12:21","nodeType":"YulFunctionCall","src":"6644:12:21"},"nativeSrc":"6644:12:21","nodeType":"YulExpressionStatement","src":"6644:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nativeSrc":"6598:7:21","nodeType":"YulIdentifier","src":"6598:7:21"},{"arguments":[{"name":"value_1","nativeSrc":"6611:7:21","nodeType":"YulIdentifier","src":"6611:7:21"},{"kind":"number","nativeSrc":"6620:18:21","nodeType":"YulLiteral","src":"6620:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"6607:3:21","nodeType":"YulIdentifier","src":"6607:3:21"},"nativeSrc":"6607:32:21","nodeType":"YulFunctionCall","src":"6607:32:21"}],"functionName":{"name":"eq","nativeSrc":"6595:2:21","nodeType":"YulIdentifier","src":"6595:2:21"},"nativeSrc":"6595:45:21","nodeType":"YulFunctionCall","src":"6595:45:21"}],"functionName":{"name":"iszero","nativeSrc":"6588:6:21","nodeType":"YulIdentifier","src":"6588:6:21"},"nativeSrc":"6588:53:21","nodeType":"YulFunctionCall","src":"6588:53:21"},"nativeSrc":"6585:73:21","nodeType":"YulIf","src":"6585:73:21"},{"nativeSrc":"6667:17:21","nodeType":"YulAssignment","src":"6667:17:21","value":{"name":"value_1","nativeSrc":"6677:7:21","nodeType":"YulIdentifier","src":"6677:7:21"},"variableNames":[{"name":"value1","nativeSrc":"6667:6:21","nodeType":"YulIdentifier","src":"6667:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_uint64","nativeSrc":"6263:427:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6307:9:21","nodeType":"YulTypedName","src":"6307:9:21","type":""},{"name":"dataEnd","nativeSrc":"6318:7:21","nodeType":"YulTypedName","src":"6318:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6330:6:21","nodeType":"YulTypedName","src":"6330:6:21","type":""},{"name":"value1","nativeSrc":"6338:6:21","nodeType":"YulTypedName","src":"6338:6:21","type":""}],"src":"6263:427:21"},{"body":{"nativeSrc":"6816:356:21","nodeType":"YulBlock","src":"6816:356:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6833:9:21","nodeType":"YulIdentifier","src":"6833:9:21"},{"kind":"number","nativeSrc":"6844:2:21","nodeType":"YulLiteral","src":"6844:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6826:6:21","nodeType":"YulIdentifier","src":"6826:6:21"},"nativeSrc":"6826:21:21","nodeType":"YulFunctionCall","src":"6826:21:21"},"nativeSrc":"6826:21:21","nodeType":"YulExpressionStatement","src":"6826:21:21"},{"nativeSrc":"6856:27:21","nodeType":"YulVariableDeclaration","src":"6856:27:21","value":{"arguments":[{"name":"value0","nativeSrc":"6876:6:21","nodeType":"YulIdentifier","src":"6876:6:21"}],"functionName":{"name":"mload","nativeSrc":"6870:5:21","nodeType":"YulIdentifier","src":"6870:5:21"},"nativeSrc":"6870:13:21","nodeType":"YulFunctionCall","src":"6870:13:21"},"variables":[{"name":"length","nativeSrc":"6860:6:21","nodeType":"YulTypedName","src":"6860:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6903:9:21","nodeType":"YulIdentifier","src":"6903:9:21"},{"kind":"number","nativeSrc":"6914:2:21","nodeType":"YulLiteral","src":"6914:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6899:3:21","nodeType":"YulIdentifier","src":"6899:3:21"},"nativeSrc":"6899:18:21","nodeType":"YulFunctionCall","src":"6899:18:21"},{"name":"length","nativeSrc":"6919:6:21","nodeType":"YulIdentifier","src":"6919:6:21"}],"functionName":{"name":"mstore","nativeSrc":"6892:6:21","nodeType":"YulIdentifier","src":"6892:6:21"},"nativeSrc":"6892:34:21","nodeType":"YulFunctionCall","src":"6892:34:21"},"nativeSrc":"6892:34:21","nodeType":"YulExpressionStatement","src":"6892:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6945:9:21","nodeType":"YulIdentifier","src":"6945:9:21"},{"kind":"number","nativeSrc":"6956:2:21","nodeType":"YulLiteral","src":"6956:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6941:3:21","nodeType":"YulIdentifier","src":"6941:3:21"},"nativeSrc":"6941:18:21","nodeType":"YulFunctionCall","src":"6941:18:21"},{"arguments":[{"name":"value0","nativeSrc":"6965:6:21","nodeType":"YulIdentifier","src":"6965:6:21"},{"kind":"number","nativeSrc":"6973:2:21","nodeType":"YulLiteral","src":"6973:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6961:3:21","nodeType":"YulIdentifier","src":"6961:3:21"},"nativeSrc":"6961:15:21","nodeType":"YulFunctionCall","src":"6961:15:21"},{"name":"length","nativeSrc":"6978:6:21","nodeType":"YulIdentifier","src":"6978:6:21"}],"functionName":{"name":"mcopy","nativeSrc":"6935:5:21","nodeType":"YulIdentifier","src":"6935:5:21"},"nativeSrc":"6935:50:21","nodeType":"YulFunctionCall","src":"6935:50:21"},"nativeSrc":"6935:50:21","nodeType":"YulExpressionStatement","src":"6935:50:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7009:9:21","nodeType":"YulIdentifier","src":"7009:9:21"},{"name":"length","nativeSrc":"7020:6:21","nodeType":"YulIdentifier","src":"7020:6:21"}],"functionName":{"name":"add","nativeSrc":"7005:3:21","nodeType":"YulIdentifier","src":"7005:3:21"},"nativeSrc":"7005:22:21","nodeType":"YulFunctionCall","src":"7005:22:21"},{"kind":"number","nativeSrc":"7029:2:21","nodeType":"YulLiteral","src":"7029:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7001:3:21","nodeType":"YulIdentifier","src":"7001:3:21"},"nativeSrc":"7001:31:21","nodeType":"YulFunctionCall","src":"7001:31:21"},{"kind":"number","nativeSrc":"7034:1:21","nodeType":"YulLiteral","src":"7034:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"6994:6:21","nodeType":"YulIdentifier","src":"6994:6:21"},"nativeSrc":"6994:42:21","nodeType":"YulFunctionCall","src":"6994:42:21"},"nativeSrc":"6994:42:21","nodeType":"YulExpressionStatement","src":"6994:42:21"},{"nativeSrc":"7045:121:21","nodeType":"YulAssignment","src":"7045:121:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7061:9:21","nodeType":"YulIdentifier","src":"7061:9:21"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"7080:6:21","nodeType":"YulIdentifier","src":"7080:6:21"},{"kind":"number","nativeSrc":"7088:2:21","nodeType":"YulLiteral","src":"7088:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"7076:3:21","nodeType":"YulIdentifier","src":"7076:3:21"},"nativeSrc":"7076:15:21","nodeType":"YulFunctionCall","src":"7076:15:21"},{"kind":"number","nativeSrc":"7093:66:21","nodeType":"YulLiteral","src":"7093:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nativeSrc":"7072:3:21","nodeType":"YulIdentifier","src":"7072:3:21"},"nativeSrc":"7072:88:21","nodeType":"YulFunctionCall","src":"7072:88:21"}],"functionName":{"name":"add","nativeSrc":"7057:3:21","nodeType":"YulIdentifier","src":"7057:3:21"},"nativeSrc":"7057:104:21","nodeType":"YulFunctionCall","src":"7057:104:21"},{"kind":"number","nativeSrc":"7163:2:21","nodeType":"YulLiteral","src":"7163:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7053:3:21","nodeType":"YulIdentifier","src":"7053:3:21"},"nativeSrc":"7053:113:21","nodeType":"YulFunctionCall","src":"7053:113:21"},"variableNames":[{"name":"tail","nativeSrc":"7045:4:21","nodeType":"YulIdentifier","src":"7045:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6695:477:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6785:9:21","nodeType":"YulTypedName","src":"6785:9:21","type":""},{"name":"value0","nativeSrc":"6796:6:21","nodeType":"YulTypedName","src":"6796:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6807:4:21","nodeType":"YulTypedName","src":"6807:4:21","type":""}],"src":"6695:477:21"},{"body":{"nativeSrc":"7278:76:21","nodeType":"YulBlock","src":"7278:76:21","statements":[{"nativeSrc":"7288:26:21","nodeType":"YulAssignment","src":"7288:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"7300:9:21","nodeType":"YulIdentifier","src":"7300:9:21"},{"kind":"number","nativeSrc":"7311:2:21","nodeType":"YulLiteral","src":"7311:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7296:3:21","nodeType":"YulIdentifier","src":"7296:3:21"},"nativeSrc":"7296:18:21","nodeType":"YulFunctionCall","src":"7296:18:21"},"variableNames":[{"name":"tail","nativeSrc":"7288:4:21","nodeType":"YulIdentifier","src":"7288:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7330:9:21","nodeType":"YulIdentifier","src":"7330:9:21"},{"name":"value0","nativeSrc":"7341:6:21","nodeType":"YulIdentifier","src":"7341:6:21"}],"functionName":{"name":"mstore","nativeSrc":"7323:6:21","nodeType":"YulIdentifier","src":"7323:6:21"},"nativeSrc":"7323:25:21","nodeType":"YulFunctionCall","src":"7323:25:21"},"nativeSrc":"7323:25:21","nodeType":"YulExpressionStatement","src":"7323:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"7177:177:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7247:9:21","nodeType":"YulTypedName","src":"7247:9:21","type":""},{"name":"value0","nativeSrc":"7258:6:21","nodeType":"YulTypedName","src":"7258:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7269:4:21","nodeType":"YulTypedName","src":"7269:4:21","type":""}],"src":"7177:177:21"},{"body":{"nativeSrc":"7533:182:21","nodeType":"YulBlock","src":"7533:182:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7550:9:21","nodeType":"YulIdentifier","src":"7550:9:21"},{"kind":"number","nativeSrc":"7561:2:21","nodeType":"YulLiteral","src":"7561:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7543:6:21","nodeType":"YulIdentifier","src":"7543:6:21"},"nativeSrc":"7543:21:21","nodeType":"YulFunctionCall","src":"7543:21:21"},"nativeSrc":"7543:21:21","nodeType":"YulExpressionStatement","src":"7543:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7584:9:21","nodeType":"YulIdentifier","src":"7584:9:21"},{"kind":"number","nativeSrc":"7595:2:21","nodeType":"YulLiteral","src":"7595:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7580:3:21","nodeType":"YulIdentifier","src":"7580:3:21"},"nativeSrc":"7580:18:21","nodeType":"YulFunctionCall","src":"7580:18:21"},{"kind":"number","nativeSrc":"7600:2:21","nodeType":"YulLiteral","src":"7600:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7573:6:21","nodeType":"YulIdentifier","src":"7573:6:21"},"nativeSrc":"7573:30:21","nodeType":"YulFunctionCall","src":"7573:30:21"},"nativeSrc":"7573:30:21","nodeType":"YulExpressionStatement","src":"7573:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7623:9:21","nodeType":"YulIdentifier","src":"7623:9:21"},{"kind":"number","nativeSrc":"7634:2:21","nodeType":"YulLiteral","src":"7634:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7619:3:21","nodeType":"YulIdentifier","src":"7619:3:21"},"nativeSrc":"7619:18:21","nodeType":"YulFunctionCall","src":"7619:18:21"},{"hexValue":"4174206c656173742074776f2061737365747320617265207265717569726564","kind":"string","nativeSrc":"7639:34:21","nodeType":"YulLiteral","src":"7639:34:21","type":"","value":"At least two assets are required"}],"functionName":{"name":"mstore","nativeSrc":"7612:6:21","nodeType":"YulIdentifier","src":"7612:6:21"},"nativeSrc":"7612:62:21","nodeType":"YulFunctionCall","src":"7612:62:21"},"nativeSrc":"7612:62:21","nodeType":"YulExpressionStatement","src":"7612:62:21"},{"nativeSrc":"7683:26:21","nodeType":"YulAssignment","src":"7683:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"7695:9:21","nodeType":"YulIdentifier","src":"7695:9:21"},{"kind":"number","nativeSrc":"7706:2:21","nodeType":"YulLiteral","src":"7706:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7691:3:21","nodeType":"YulIdentifier","src":"7691:3:21"},"nativeSrc":"7691:18:21","nodeType":"YulFunctionCall","src":"7691:18:21"},"variableNames":[{"name":"tail","nativeSrc":"7683:4:21","nodeType":"YulIdentifier","src":"7683:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_39cbcbdd9e6251e82f28a321c8ea534706a2cf624e365b64351e1f84ffc7ff8d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7359:356:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7510:9:21","nodeType":"YulTypedName","src":"7510:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7524:4:21","nodeType":"YulTypedName","src":"7524:4:21","type":""}],"src":"7359:356:21"},{"body":{"nativeSrc":"7894:224:21","nodeType":"YulBlock","src":"7894:224:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7911:9:21","nodeType":"YulIdentifier","src":"7911:9:21"},{"kind":"number","nativeSrc":"7922:2:21","nodeType":"YulLiteral","src":"7922:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7904:6:21","nodeType":"YulIdentifier","src":"7904:6:21"},"nativeSrc":"7904:21:21","nodeType":"YulFunctionCall","src":"7904:21:21"},"nativeSrc":"7904:21:21","nodeType":"YulExpressionStatement","src":"7904:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7945:9:21","nodeType":"YulIdentifier","src":"7945:9:21"},{"kind":"number","nativeSrc":"7956:2:21","nodeType":"YulLiteral","src":"7956:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7941:3:21","nodeType":"YulIdentifier","src":"7941:3:21"},"nativeSrc":"7941:18:21","nodeType":"YulFunctionCall","src":"7941:18:21"},{"kind":"number","nativeSrc":"7961:2:21","nodeType":"YulLiteral","src":"7961:2:21","type":"","value":"34"}],"functionName":{"name":"mstore","nativeSrc":"7934:6:21","nodeType":"YulIdentifier","src":"7934:6:21"},"nativeSrc":"7934:30:21","nodeType":"YulFunctionCall","src":"7934:30:21"},"nativeSrc":"7934:30:21","nodeType":"YulExpressionStatement","src":"7934:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7984:9:21","nodeType":"YulIdentifier","src":"7984:9:21"},{"kind":"number","nativeSrc":"7995:2:21","nodeType":"YulLiteral","src":"7995:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7980:3:21","nodeType":"YulIdentifier","src":"7980:3:21"},"nativeSrc":"7980:18:21","nodeType":"YulFunctionCall","src":"7980:18:21"},{"hexValue":"41737365747320616e642077656967687473206c656e677468206d69736d6174","kind":"string","nativeSrc":"8000:34:21","nodeType":"YulLiteral","src":"8000:34:21","type":"","value":"Assets and weights length mismat"}],"functionName":{"name":"mstore","nativeSrc":"7973:6:21","nodeType":"YulIdentifier","src":"7973:6:21"},"nativeSrc":"7973:62:21","nodeType":"YulFunctionCall","src":"7973:62:21"},"nativeSrc":"7973:62:21","nodeType":"YulExpressionStatement","src":"7973:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8055:9:21","nodeType":"YulIdentifier","src":"8055:9:21"},{"kind":"number","nativeSrc":"8066:2:21","nodeType":"YulLiteral","src":"8066:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8051:3:21","nodeType":"YulIdentifier","src":"8051:3:21"},"nativeSrc":"8051:18:21","nodeType":"YulFunctionCall","src":"8051:18:21"},{"hexValue":"6368","kind":"string","nativeSrc":"8071:4:21","nodeType":"YulLiteral","src":"8071:4:21","type":"","value":"ch"}],"functionName":{"name":"mstore","nativeSrc":"8044:6:21","nodeType":"YulIdentifier","src":"8044:6:21"},"nativeSrc":"8044:32:21","nodeType":"YulFunctionCall","src":"8044:32:21"},"nativeSrc":"8044:32:21","nodeType":"YulExpressionStatement","src":"8044:32:21"},{"nativeSrc":"8085:27:21","nodeType":"YulAssignment","src":"8085:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"8097:9:21","nodeType":"YulIdentifier","src":"8097:9:21"},{"kind":"number","nativeSrc":"8108:3:21","nodeType":"YulLiteral","src":"8108:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8093:3:21","nodeType":"YulIdentifier","src":"8093:3:21"},"nativeSrc":"8093:19:21","nodeType":"YulFunctionCall","src":"8093:19:21"},"variableNames":[{"name":"tail","nativeSrc":"8085:4:21","nodeType":"YulIdentifier","src":"8085:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7720:398:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7871:9:21","nodeType":"YulTypedName","src":"7871:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7885:4:21","nodeType":"YulTypedName","src":"7885:4:21","type":""}],"src":"7720:398:21"},{"body":{"nativeSrc":"8155:152:21","nodeType":"YulBlock","src":"8155:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8172:1:21","nodeType":"YulLiteral","src":"8172:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"8175:77:21","nodeType":"YulLiteral","src":"8175:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"8165:6:21","nodeType":"YulIdentifier","src":"8165:6:21"},"nativeSrc":"8165:88:21","nodeType":"YulFunctionCall","src":"8165:88:21"},"nativeSrc":"8165:88:21","nodeType":"YulExpressionStatement","src":"8165:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8269:1:21","nodeType":"YulLiteral","src":"8269:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"8272:4:21","nodeType":"YulLiteral","src":"8272:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"8262:6:21","nodeType":"YulIdentifier","src":"8262:6:21"},"nativeSrc":"8262:15:21","nodeType":"YulFunctionCall","src":"8262:15:21"},"nativeSrc":"8262:15:21","nodeType":"YulExpressionStatement","src":"8262:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8293:1:21","nodeType":"YulLiteral","src":"8293:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"8296:4:21","nodeType":"YulLiteral","src":"8296:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8286:6:21","nodeType":"YulIdentifier","src":"8286:6:21"},"nativeSrc":"8286:15:21","nodeType":"YulFunctionCall","src":"8286:15:21"},"nativeSrc":"8286:15:21","nodeType":"YulExpressionStatement","src":"8286:15:21"}]},"name":"panic_error_0x11","nativeSrc":"8123:184:21","nodeType":"YulFunctionDefinition","src":"8123:184:21"},{"body":{"nativeSrc":"8360:77:21","nodeType":"YulBlock","src":"8360:77:21","statements":[{"nativeSrc":"8370:16:21","nodeType":"YulAssignment","src":"8370:16:21","value":{"arguments":[{"name":"x","nativeSrc":"8381:1:21","nodeType":"YulIdentifier","src":"8381:1:21"},{"name":"y","nativeSrc":"8384:1:21","nodeType":"YulIdentifier","src":"8384:1:21"}],"functionName":{"name":"add","nativeSrc":"8377:3:21","nodeType":"YulIdentifier","src":"8377:3:21"},"nativeSrc":"8377:9:21","nodeType":"YulFunctionCall","src":"8377:9:21"},"variableNames":[{"name":"sum","nativeSrc":"8370:3:21","nodeType":"YulIdentifier","src":"8370:3:21"}]},{"body":{"nativeSrc":"8409:22:21","nodeType":"YulBlock","src":"8409:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8411:16:21","nodeType":"YulIdentifier","src":"8411:16:21"},"nativeSrc":"8411:18:21","nodeType":"YulFunctionCall","src":"8411:18:21"},"nativeSrc":"8411:18:21","nodeType":"YulExpressionStatement","src":"8411:18:21"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"8401:1:21","nodeType":"YulIdentifier","src":"8401:1:21"},{"name":"sum","nativeSrc":"8404:3:21","nodeType":"YulIdentifier","src":"8404:3:21"}],"functionName":{"name":"gt","nativeSrc":"8398:2:21","nodeType":"YulIdentifier","src":"8398:2:21"},"nativeSrc":"8398:10:21","nodeType":"YulFunctionCall","src":"8398:10:21"},"nativeSrc":"8395:36:21","nodeType":"YulIf","src":"8395:36:21"}]},"name":"checked_add_t_uint256","nativeSrc":"8312:125:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"8343:1:21","nodeType":"YulTypedName","src":"8343:1:21","type":""},{"name":"y","nativeSrc":"8346:1:21","nodeType":"YulTypedName","src":"8346:1:21","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"8352:3:21","nodeType":"YulTypedName","src":"8352:3:21","type":""}],"src":"8312:125:21"},{"body":{"nativeSrc":"8474:152:21","nodeType":"YulBlock","src":"8474:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8491:1:21","nodeType":"YulLiteral","src":"8491:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"8494:77:21","nodeType":"YulLiteral","src":"8494:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"8484:6:21","nodeType":"YulIdentifier","src":"8484:6:21"},"nativeSrc":"8484:88:21","nodeType":"YulFunctionCall","src":"8484:88:21"},"nativeSrc":"8484:88:21","nodeType":"YulExpressionStatement","src":"8484:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8588:1:21","nodeType":"YulLiteral","src":"8588:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"8591:4:21","nodeType":"YulLiteral","src":"8591:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"8581:6:21","nodeType":"YulIdentifier","src":"8581:6:21"},"nativeSrc":"8581:15:21","nodeType":"YulFunctionCall","src":"8581:15:21"},"nativeSrc":"8581:15:21","nodeType":"YulExpressionStatement","src":"8581:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8612:1:21","nodeType":"YulLiteral","src":"8612:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"8615:4:21","nodeType":"YulLiteral","src":"8615:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8605:6:21","nodeType":"YulIdentifier","src":"8605:6:21"},"nativeSrc":"8605:15:21","nodeType":"YulFunctionCall","src":"8605:15:21"},"nativeSrc":"8605:15:21","nodeType":"YulExpressionStatement","src":"8605:15:21"}]},"name":"panic_error_0x32","nativeSrc":"8442:184:21","nodeType":"YulFunctionDefinition","src":"8442:184:21"},{"body":{"nativeSrc":"8805:223:21","nodeType":"YulBlock","src":"8805:223:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8822:9:21","nodeType":"YulIdentifier","src":"8822:9:21"},{"kind":"number","nativeSrc":"8833:2:21","nodeType":"YulLiteral","src":"8833:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8815:6:21","nodeType":"YulIdentifier","src":"8815:6:21"},"nativeSrc":"8815:21:21","nodeType":"YulFunctionCall","src":"8815:21:21"},"nativeSrc":"8815:21:21","nodeType":"YulExpressionStatement","src":"8815:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8856:9:21","nodeType":"YulIdentifier","src":"8856:9:21"},{"kind":"number","nativeSrc":"8867:2:21","nodeType":"YulLiteral","src":"8867:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8852:3:21","nodeType":"YulIdentifier","src":"8852:3:21"},"nativeSrc":"8852:18:21","nodeType":"YulFunctionCall","src":"8852:18:21"},{"kind":"number","nativeSrc":"8872:2:21","nodeType":"YulLiteral","src":"8872:2:21","type":"","value":"33"}],"functionName":{"name":"mstore","nativeSrc":"8845:6:21","nodeType":"YulIdentifier","src":"8845:6:21"},"nativeSrc":"8845:30:21","nodeType":"YulFunctionCall","src":"8845:30:21"},"nativeSrc":"8845:30:21","nodeType":"YulExpressionStatement","src":"8845:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8895:9:21","nodeType":"YulIdentifier","src":"8895:9:21"},{"kind":"number","nativeSrc":"8906:2:21","nodeType":"YulLiteral","src":"8906:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8891:3:21","nodeType":"YulIdentifier","src":"8891:3:21"},"nativeSrc":"8891:18:21","nodeType":"YulFunctionCall","src":"8891:18:21"},{"hexValue":"506f6f6c20616c72656164792065786973747320666f72207468697320706169","kind":"string","nativeSrc":"8911:34:21","nodeType":"YulLiteral","src":"8911:34:21","type":"","value":"Pool already exists for this pai"}],"functionName":{"name":"mstore","nativeSrc":"8884:6:21","nodeType":"YulIdentifier","src":"8884:6:21"},"nativeSrc":"8884:62:21","nodeType":"YulFunctionCall","src":"8884:62:21"},"nativeSrc":"8884:62:21","nodeType":"YulExpressionStatement","src":"8884:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8966:9:21","nodeType":"YulIdentifier","src":"8966:9:21"},{"kind":"number","nativeSrc":"8977:2:21","nodeType":"YulLiteral","src":"8977:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8962:3:21","nodeType":"YulIdentifier","src":"8962:3:21"},"nativeSrc":"8962:18:21","nodeType":"YulFunctionCall","src":"8962:18:21"},{"hexValue":"72","kind":"string","nativeSrc":"8982:3:21","nodeType":"YulLiteral","src":"8982:3:21","type":"","value":"r"}],"functionName":{"name":"mstore","nativeSrc":"8955:6:21","nodeType":"YulIdentifier","src":"8955:6:21"},"nativeSrc":"8955:31:21","nodeType":"YulFunctionCall","src":"8955:31:21"},"nativeSrc":"8955:31:21","nodeType":"YulExpressionStatement","src":"8955:31:21"},{"nativeSrc":"8995:27:21","nodeType":"YulAssignment","src":"8995:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"9007:9:21","nodeType":"YulIdentifier","src":"9007:9:21"},{"kind":"number","nativeSrc":"9018:3:21","nodeType":"YulLiteral","src":"9018:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"9003:3:21","nodeType":"YulIdentifier","src":"9003:3:21"},"nativeSrc":"9003:19:21","nodeType":"YulFunctionCall","src":"9003:19:21"},"variableNames":[{"name":"tail","nativeSrc":"8995:4:21","nodeType":"YulIdentifier","src":"8995:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_2258c7547209181d37eb4aebb58e4d2c60f10b97b943ea694f4dec24e242181e__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8631:397:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8782:9:21","nodeType":"YulTypedName","src":"8782:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8796:4:21","nodeType":"YulTypedName","src":"8796:4:21","type":""}],"src":"8631:397:21"},{"body":{"nativeSrc":"9318:712:21","nodeType":"YulBlock","src":"9318:712:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9335:9:21","nodeType":"YulIdentifier","src":"9335:9:21"},{"kind":"number","nativeSrc":"9346:3:21","nodeType":"YulLiteral","src":"9346:3:21","type":"","value":"128"}],"functionName":{"name":"mstore","nativeSrc":"9328:6:21","nodeType":"YulIdentifier","src":"9328:6:21"},"nativeSrc":"9328:22:21","nodeType":"YulFunctionCall","src":"9328:22:21"},"nativeSrc":"9328:22:21","nodeType":"YulExpressionStatement","src":"9328:22:21"},{"nativeSrc":"9359:71:21","nodeType":"YulVariableDeclaration","src":"9359:71:21","value":{"arguments":[{"name":"value0","nativeSrc":"9402:6:21","nodeType":"YulIdentifier","src":"9402:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"9414:9:21","nodeType":"YulIdentifier","src":"9414:9:21"},{"kind":"number","nativeSrc":"9425:3:21","nodeType":"YulLiteral","src":"9425:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"9410:3:21","nodeType":"YulIdentifier","src":"9410:3:21"},"nativeSrc":"9410:19:21","nodeType":"YulFunctionCall","src":"9410:19:21"}],"functionName":{"name":"abi_encode_array_address_dyn","nativeSrc":"9373:28:21","nodeType":"YulIdentifier","src":"9373:28:21"},"nativeSrc":"9373:57:21","nodeType":"YulFunctionCall","src":"9373:57:21"},"variables":[{"name":"tail_1","nativeSrc":"9363:6:21","nodeType":"YulTypedName","src":"9363:6:21","type":""}]},{"nativeSrc":"9439:12:21","nodeType":"YulVariableDeclaration","src":"9439:12:21","value":{"kind":"number","nativeSrc":"9449:2:21","nodeType":"YulLiteral","src":"9449:2:21","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"9443:2:21","nodeType":"YulTypedName","src":"9443:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9471:9:21","nodeType":"YulIdentifier","src":"9471:9:21"},{"kind":"number","nativeSrc":"9482:2:21","nodeType":"YulLiteral","src":"9482:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9467:3:21","nodeType":"YulIdentifier","src":"9467:3:21"},"nativeSrc":"9467:18:21","nodeType":"YulFunctionCall","src":"9467:18:21"},{"arguments":[{"name":"tail_1","nativeSrc":"9491:6:21","nodeType":"YulIdentifier","src":"9491:6:21"},{"name":"headStart","nativeSrc":"9499:9:21","nodeType":"YulIdentifier","src":"9499:9:21"}],"functionName":{"name":"sub","nativeSrc":"9487:3:21","nodeType":"YulIdentifier","src":"9487:3:21"},"nativeSrc":"9487:22:21","nodeType":"YulFunctionCall","src":"9487:22:21"}],"functionName":{"name":"mstore","nativeSrc":"9460:6:21","nodeType":"YulIdentifier","src":"9460:6:21"},"nativeSrc":"9460:50:21","nodeType":"YulFunctionCall","src":"9460:50:21"},"nativeSrc":"9460:50:21","nodeType":"YulExpressionStatement","src":"9460:50:21"},{"nativeSrc":"9519:17:21","nodeType":"YulVariableDeclaration","src":"9519:17:21","value":{"name":"tail_1","nativeSrc":"9530:6:21","nodeType":"YulIdentifier","src":"9530:6:21"},"variables":[{"name":"pos","nativeSrc":"9523:3:21","nodeType":"YulTypedName","src":"9523:3:21","type":""}]},{"nativeSrc":"9545:27:21","nodeType":"YulVariableDeclaration","src":"9545:27:21","value":{"arguments":[{"name":"value1","nativeSrc":"9565:6:21","nodeType":"YulIdentifier","src":"9565:6:21"}],"functionName":{"name":"mload","nativeSrc":"9559:5:21","nodeType":"YulIdentifier","src":"9559:5:21"},"nativeSrc":"9559:13:21","nodeType":"YulFunctionCall","src":"9559:13:21"},"variables":[{"name":"length","nativeSrc":"9549:6:21","nodeType":"YulTypedName","src":"9549:6:21","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nativeSrc":"9588:6:21","nodeType":"YulIdentifier","src":"9588:6:21"},{"name":"length","nativeSrc":"9596:6:21","nodeType":"YulIdentifier","src":"9596:6:21"}],"functionName":{"name":"mstore","nativeSrc":"9581:6:21","nodeType":"YulIdentifier","src":"9581:6:21"},"nativeSrc":"9581:22:21","nodeType":"YulFunctionCall","src":"9581:22:21"},"nativeSrc":"9581:22:21","nodeType":"YulExpressionStatement","src":"9581:22:21"},{"nativeSrc":"9612:22:21","nodeType":"YulAssignment","src":"9612:22:21","value":{"arguments":[{"name":"tail_1","nativeSrc":"9623:6:21","nodeType":"YulIdentifier","src":"9623:6:21"},{"kind":"number","nativeSrc":"9631:2:21","nodeType":"YulLiteral","src":"9631:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9619:3:21","nodeType":"YulIdentifier","src":"9619:3:21"},"nativeSrc":"9619:15:21","nodeType":"YulFunctionCall","src":"9619:15:21"},"variableNames":[{"name":"pos","nativeSrc":"9612:3:21","nodeType":"YulIdentifier","src":"9612:3:21"}]},{"nativeSrc":"9643:29:21","nodeType":"YulVariableDeclaration","src":"9643:29:21","value":{"arguments":[{"name":"value1","nativeSrc":"9661:6:21","nodeType":"YulIdentifier","src":"9661:6:21"},{"kind":"number","nativeSrc":"9669:2:21","nodeType":"YulLiteral","src":"9669:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9657:3:21","nodeType":"YulIdentifier","src":"9657:3:21"},"nativeSrc":"9657:15:21","nodeType":"YulFunctionCall","src":"9657:15:21"},"variables":[{"name":"srcPtr","nativeSrc":"9647:6:21","nodeType":"YulTypedName","src":"9647:6:21","type":""}]},{"nativeSrc":"9681:10:21","nodeType":"YulVariableDeclaration","src":"9681:10:21","value":{"kind":"number","nativeSrc":"9690:1:21","nodeType":"YulLiteral","src":"9690:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"9685:1:21","nodeType":"YulTypedName","src":"9685:1:21","type":""}]},{"body":{"nativeSrc":"9749:120:21","nodeType":"YulBlock","src":"9749:120:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9770:3:21","nodeType":"YulIdentifier","src":"9770:3:21"},{"arguments":[{"name":"srcPtr","nativeSrc":"9781:6:21","nodeType":"YulIdentifier","src":"9781:6:21"}],"functionName":{"name":"mload","nativeSrc":"9775:5:21","nodeType":"YulIdentifier","src":"9775:5:21"},"nativeSrc":"9775:13:21","nodeType":"YulFunctionCall","src":"9775:13:21"}],"functionName":{"name":"mstore","nativeSrc":"9763:6:21","nodeType":"YulIdentifier","src":"9763:6:21"},"nativeSrc":"9763:26:21","nodeType":"YulFunctionCall","src":"9763:26:21"},"nativeSrc":"9763:26:21","nodeType":"YulExpressionStatement","src":"9763:26:21"},{"nativeSrc":"9802:19:21","nodeType":"YulAssignment","src":"9802:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"9813:3:21","nodeType":"YulIdentifier","src":"9813:3:21"},{"name":"_1","nativeSrc":"9818:2:21","nodeType":"YulIdentifier","src":"9818:2:21"}],"functionName":{"name":"add","nativeSrc":"9809:3:21","nodeType":"YulIdentifier","src":"9809:3:21"},"nativeSrc":"9809:12:21","nodeType":"YulFunctionCall","src":"9809:12:21"},"variableNames":[{"name":"pos","nativeSrc":"9802:3:21","nodeType":"YulIdentifier","src":"9802:3:21"}]},{"nativeSrc":"9834:25:21","nodeType":"YulAssignment","src":"9834:25:21","value":{"arguments":[{"name":"srcPtr","nativeSrc":"9848:6:21","nodeType":"YulIdentifier","src":"9848:6:21"},{"name":"_1","nativeSrc":"9856:2:21","nodeType":"YulIdentifier","src":"9856:2:21"}],"functionName":{"name":"add","nativeSrc":"9844:3:21","nodeType":"YulIdentifier","src":"9844:3:21"},"nativeSrc":"9844:15:21","nodeType":"YulFunctionCall","src":"9844:15:21"},"variableNames":[{"name":"srcPtr","nativeSrc":"9834:6:21","nodeType":"YulIdentifier","src":"9834:6:21"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"9711:1:21","nodeType":"YulIdentifier","src":"9711:1:21"},{"name":"length","nativeSrc":"9714:6:21","nodeType":"YulIdentifier","src":"9714:6:21"}],"functionName":{"name":"lt","nativeSrc":"9708:2:21","nodeType":"YulIdentifier","src":"9708:2:21"},"nativeSrc":"9708:13:21","nodeType":"YulFunctionCall","src":"9708:13:21"},"nativeSrc":"9700:169:21","nodeType":"YulForLoop","post":{"nativeSrc":"9722:18:21","nodeType":"YulBlock","src":"9722:18:21","statements":[{"nativeSrc":"9724:14:21","nodeType":"YulAssignment","src":"9724:14:21","value":{"arguments":[{"name":"i","nativeSrc":"9733:1:21","nodeType":"YulIdentifier","src":"9733:1:21"},{"kind":"number","nativeSrc":"9736:1:21","nodeType":"YulLiteral","src":"9736:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9729:3:21","nodeType":"YulIdentifier","src":"9729:3:21"},"nativeSrc":"9729:9:21","nodeType":"YulFunctionCall","src":"9729:9:21"},"variableNames":[{"name":"i","nativeSrc":"9724:1:21","nodeType":"YulIdentifier","src":"9724:1:21"}]}]},"pre":{"nativeSrc":"9704:3:21","nodeType":"YulBlock","src":"9704:3:21","statements":[]},"src":"9700:169:21"},{"nativeSrc":"9878:11:21","nodeType":"YulAssignment","src":"9878:11:21","value":{"name":"pos","nativeSrc":"9886:3:21","nodeType":"YulIdentifier","src":"9886:3:21"},"variableNames":[{"name":"tail","nativeSrc":"9878:4:21","nodeType":"YulIdentifier","src":"9878:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9909:9:21","nodeType":"YulIdentifier","src":"9909:9:21"},{"kind":"number","nativeSrc":"9920:2:21","nodeType":"YulLiteral","src":"9920:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9905:3:21","nodeType":"YulIdentifier","src":"9905:3:21"},"nativeSrc":"9905:18:21","nodeType":"YulFunctionCall","src":"9905:18:21"},{"name":"value2","nativeSrc":"9925:6:21","nodeType":"YulIdentifier","src":"9925:6:21"}],"functionName":{"name":"mstore","nativeSrc":"9898:6:21","nodeType":"YulIdentifier","src":"9898:6:21"},"nativeSrc":"9898:34:21","nodeType":"YulFunctionCall","src":"9898:34:21"},"nativeSrc":"9898:34:21","nodeType":"YulExpressionStatement","src":"9898:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9952:9:21","nodeType":"YulIdentifier","src":"9952:9:21"},{"kind":"number","nativeSrc":"9963:2:21","nodeType":"YulLiteral","src":"9963:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9948:3:21","nodeType":"YulIdentifier","src":"9948:3:21"},"nativeSrc":"9948:18:21","nodeType":"YulFunctionCall","src":"9948:18:21"},{"arguments":[{"name":"value3","nativeSrc":"9972:6:21","nodeType":"YulIdentifier","src":"9972:6:21"},{"kind":"number","nativeSrc":"9980:42:21","nodeType":"YulLiteral","src":"9980:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"9968:3:21","nodeType":"YulIdentifier","src":"9968:3:21"},"nativeSrc":"9968:55:21","nodeType":"YulFunctionCall","src":"9968:55:21"}],"functionName":{"name":"mstore","nativeSrc":"9941:6:21","nodeType":"YulIdentifier","src":"9941:6:21"},"nativeSrc":"9941:83:21","nodeType":"YulFunctionCall","src":"9941:83:21"},"nativeSrc":"9941:83:21","nodeType":"YulExpressionStatement","src":"9941:83:21"}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address__fromStack_reversed","nativeSrc":"9033:997:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9263:9:21","nodeType":"YulTypedName","src":"9263:9:21","type":""},{"name":"value3","nativeSrc":"9274:6:21","nodeType":"YulTypedName","src":"9274:6:21","type":""},{"name":"value2","nativeSrc":"9282:6:21","nodeType":"YulTypedName","src":"9282:6:21","type":""},{"name":"value1","nativeSrc":"9290:6:21","nodeType":"YulTypedName","src":"9290:6:21","type":""},{"name":"value0","nativeSrc":"9298:6:21","nodeType":"YulTypedName","src":"9298:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9309:4:21","nodeType":"YulTypedName","src":"9309:4:21","type":""}],"src":"9033:997:21"},{"body":{"nativeSrc":"10141:850:21","nodeType":"YulBlock","src":"10141:850:21","statements":[{"nativeSrc":"10151:12:21","nodeType":"YulVariableDeclaration","src":"10151:12:21","value":{"kind":"number","nativeSrc":"10161:2:21","nodeType":"YulLiteral","src":"10161:2:21","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"10155:2:21","nodeType":"YulTypedName","src":"10155:2:21","type":""}]},{"body":{"nativeSrc":"10208:16:21","nodeType":"YulBlock","src":"10208:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10217:1:21","nodeType":"YulLiteral","src":"10217:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"10220:1:21","nodeType":"YulLiteral","src":"10220:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10210:6:21","nodeType":"YulIdentifier","src":"10210:6:21"},"nativeSrc":"10210:12:21","nodeType":"YulFunctionCall","src":"10210:12:21"},"nativeSrc":"10210:12:21","nodeType":"YulExpressionStatement","src":"10210:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10183:7:21","nodeType":"YulIdentifier","src":"10183:7:21"},{"name":"headStart","nativeSrc":"10192:9:21","nodeType":"YulIdentifier","src":"10192:9:21"}],"functionName":{"name":"sub","nativeSrc":"10179:3:21","nodeType":"YulIdentifier","src":"10179:3:21"},"nativeSrc":"10179:23:21","nodeType":"YulFunctionCall","src":"10179:23:21"},{"name":"_1","nativeSrc":"10204:2:21","nodeType":"YulIdentifier","src":"10204:2:21"}],"functionName":{"name":"slt","nativeSrc":"10175:3:21","nodeType":"YulIdentifier","src":"10175:3:21"},"nativeSrc":"10175:32:21","nodeType":"YulFunctionCall","src":"10175:32:21"},"nativeSrc":"10172:52:21","nodeType":"YulIf","src":"10172:52:21"},{"nativeSrc":"10233:30:21","nodeType":"YulVariableDeclaration","src":"10233:30:21","value":{"arguments":[{"name":"headStart","nativeSrc":"10253:9:21","nodeType":"YulIdentifier","src":"10253:9:21"}],"functionName":{"name":"mload","nativeSrc":"10247:5:21","nodeType":"YulIdentifier","src":"10247:5:21"},"nativeSrc":"10247:16:21","nodeType":"YulFunctionCall","src":"10247:16:21"},"variables":[{"name":"offset","nativeSrc":"10237:6:21","nodeType":"YulTypedName","src":"10237:6:21","type":""}]},{"body":{"nativeSrc":"10306:16:21","nodeType":"YulBlock","src":"10306:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10315:1:21","nodeType":"YulLiteral","src":"10315:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"10318:1:21","nodeType":"YulLiteral","src":"10318:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10308:6:21","nodeType":"YulIdentifier","src":"10308:6:21"},"nativeSrc":"10308:12:21","nodeType":"YulFunctionCall","src":"10308:12:21"},"nativeSrc":"10308:12:21","nodeType":"YulExpressionStatement","src":"10308:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"10278:6:21","nodeType":"YulIdentifier","src":"10278:6:21"},{"kind":"number","nativeSrc":"10286:18:21","nodeType":"YulLiteral","src":"10286:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10275:2:21","nodeType":"YulIdentifier","src":"10275:2:21"},"nativeSrc":"10275:30:21","nodeType":"YulFunctionCall","src":"10275:30:21"},"nativeSrc":"10272:50:21","nodeType":"YulIf","src":"10272:50:21"},{"nativeSrc":"10331:32:21","nodeType":"YulVariableDeclaration","src":"10331:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"10345:9:21","nodeType":"YulIdentifier","src":"10345:9:21"},{"name":"offset","nativeSrc":"10356:6:21","nodeType":"YulIdentifier","src":"10356:6:21"}],"functionName":{"name":"add","nativeSrc":"10341:3:21","nodeType":"YulIdentifier","src":"10341:3:21"},"nativeSrc":"10341:22:21","nodeType":"YulFunctionCall","src":"10341:22:21"},"variables":[{"name":"_2","nativeSrc":"10335:2:21","nodeType":"YulTypedName","src":"10335:2:21","type":""}]},{"body":{"nativeSrc":"10411:16:21","nodeType":"YulBlock","src":"10411:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10420:1:21","nodeType":"YulLiteral","src":"10420:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"10423:1:21","nodeType":"YulLiteral","src":"10423:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10413:6:21","nodeType":"YulIdentifier","src":"10413:6:21"},"nativeSrc":"10413:12:21","nodeType":"YulFunctionCall","src":"10413:12:21"},"nativeSrc":"10413:12:21","nodeType":"YulExpressionStatement","src":"10413:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"10390:2:21","nodeType":"YulIdentifier","src":"10390:2:21"},{"kind":"number","nativeSrc":"10394:4:21","nodeType":"YulLiteral","src":"10394:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"10386:3:21","nodeType":"YulIdentifier","src":"10386:3:21"},"nativeSrc":"10386:13:21","nodeType":"YulFunctionCall","src":"10386:13:21"},{"name":"dataEnd","nativeSrc":"10401:7:21","nodeType":"YulIdentifier","src":"10401:7:21"}],"functionName":{"name":"slt","nativeSrc":"10382:3:21","nodeType":"YulIdentifier","src":"10382:3:21"},"nativeSrc":"10382:27:21","nodeType":"YulFunctionCall","src":"10382:27:21"}],"functionName":{"name":"iszero","nativeSrc":"10375:6:21","nodeType":"YulIdentifier","src":"10375:6:21"},"nativeSrc":"10375:35:21","nodeType":"YulFunctionCall","src":"10375:35:21"},"nativeSrc":"10372:55:21","nodeType":"YulIf","src":"10372:55:21"},{"nativeSrc":"10436:19:21","nodeType":"YulVariableDeclaration","src":"10436:19:21","value":{"arguments":[{"name":"_2","nativeSrc":"10452:2:21","nodeType":"YulIdentifier","src":"10452:2:21"}],"functionName":{"name":"mload","nativeSrc":"10446:5:21","nodeType":"YulIdentifier","src":"10446:5:21"},"nativeSrc":"10446:9:21","nodeType":"YulFunctionCall","src":"10446:9:21"},"variables":[{"name":"_3","nativeSrc":"10440:2:21","nodeType":"YulTypedName","src":"10440:2:21","type":""}]},{"nativeSrc":"10464:71:21","nodeType":"YulVariableDeclaration","src":"10464:71:21","value":{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"10531:2:21","nodeType":"YulIdentifier","src":"10531:2:21"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nativeSrc":"10491:39:21","nodeType":"YulIdentifier","src":"10491:39:21"},"nativeSrc":"10491:43:21","nodeType":"YulFunctionCall","src":"10491:43:21"}],"functionName":{"name":"allocate_memory","nativeSrc":"10475:15:21","nodeType":"YulIdentifier","src":"10475:15:21"},"nativeSrc":"10475:60:21","nodeType":"YulFunctionCall","src":"10475:60:21"},"variables":[{"name":"dst","nativeSrc":"10468:3:21","nodeType":"YulTypedName","src":"10468:3:21","type":""}]},{"nativeSrc":"10544:16:21","nodeType":"YulVariableDeclaration","src":"10544:16:21","value":{"name":"dst","nativeSrc":"10557:3:21","nodeType":"YulIdentifier","src":"10557:3:21"},"variables":[{"name":"dst_1","nativeSrc":"10548:5:21","nodeType":"YulTypedName","src":"10548:5:21","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"10576:3:21","nodeType":"YulIdentifier","src":"10576:3:21"},{"name":"_3","nativeSrc":"10581:2:21","nodeType":"YulIdentifier","src":"10581:2:21"}],"functionName":{"name":"mstore","nativeSrc":"10569:6:21","nodeType":"YulIdentifier","src":"10569:6:21"},"nativeSrc":"10569:15:21","nodeType":"YulFunctionCall","src":"10569:15:21"},"nativeSrc":"10569:15:21","nodeType":"YulExpressionStatement","src":"10569:15:21"},{"nativeSrc":"10593:19:21","nodeType":"YulAssignment","src":"10593:19:21","value":{"arguments":[{"name":"dst","nativeSrc":"10604:3:21","nodeType":"YulIdentifier","src":"10604:3:21"},{"name":"_1","nativeSrc":"10609:2:21","nodeType":"YulIdentifier","src":"10609:2:21"}],"functionName":{"name":"add","nativeSrc":"10600:3:21","nodeType":"YulIdentifier","src":"10600:3:21"},"nativeSrc":"10600:12:21","nodeType":"YulFunctionCall","src":"10600:12:21"},"variableNames":[{"name":"dst","nativeSrc":"10593:3:21","nodeType":"YulIdentifier","src":"10593:3:21"}]},{"nativeSrc":"10621:42:21","nodeType":"YulVariableDeclaration","src":"10621:42:21","value":{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"10643:2:21","nodeType":"YulIdentifier","src":"10643:2:21"},{"arguments":[{"kind":"number","nativeSrc":"10651:1:21","nodeType":"YulLiteral","src":"10651:1:21","type":"","value":"5"},{"name":"_3","nativeSrc":"10654:2:21","nodeType":"YulIdentifier","src":"10654:2:21"}],"functionName":{"name":"shl","nativeSrc":"10647:3:21","nodeType":"YulIdentifier","src":"10647:3:21"},"nativeSrc":"10647:10:21","nodeType":"YulFunctionCall","src":"10647:10:21"}],"functionName":{"name":"add","nativeSrc":"10639:3:21","nodeType":"YulIdentifier","src":"10639:3:21"},"nativeSrc":"10639:19:21","nodeType":"YulFunctionCall","src":"10639:19:21"},{"name":"_1","nativeSrc":"10660:2:21","nodeType":"YulIdentifier","src":"10660:2:21"}],"functionName":{"name":"add","nativeSrc":"10635:3:21","nodeType":"YulIdentifier","src":"10635:3:21"},"nativeSrc":"10635:28:21","nodeType":"YulFunctionCall","src":"10635:28:21"},"variables":[{"name":"srcEnd","nativeSrc":"10625:6:21","nodeType":"YulTypedName","src":"10625:6:21","type":""}]},{"body":{"nativeSrc":"10695:16:21","nodeType":"YulBlock","src":"10695:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10704:1:21","nodeType":"YulLiteral","src":"10704:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"10707:1:21","nodeType":"YulLiteral","src":"10707:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10697:6:21","nodeType":"YulIdentifier","src":"10697:6:21"},"nativeSrc":"10697:12:21","nodeType":"YulFunctionCall","src":"10697:12:21"},"nativeSrc":"10697:12:21","nodeType":"YulExpressionStatement","src":"10697:12:21"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"10678:6:21","nodeType":"YulIdentifier","src":"10678:6:21"},{"name":"dataEnd","nativeSrc":"10686:7:21","nodeType":"YulIdentifier","src":"10686:7:21"}],"functionName":{"name":"gt","nativeSrc":"10675:2:21","nodeType":"YulIdentifier","src":"10675:2:21"},"nativeSrc":"10675:19:21","nodeType":"YulFunctionCall","src":"10675:19:21"},"nativeSrc":"10672:39:21","nodeType":"YulIf","src":"10672:39:21"},{"nativeSrc":"10720:22:21","nodeType":"YulVariableDeclaration","src":"10720:22:21","value":{"arguments":[{"name":"_2","nativeSrc":"10735:2:21","nodeType":"YulIdentifier","src":"10735:2:21"},{"name":"_1","nativeSrc":"10739:2:21","nodeType":"YulIdentifier","src":"10739:2:21"}],"functionName":{"name":"add","nativeSrc":"10731:3:21","nodeType":"YulIdentifier","src":"10731:3:21"},"nativeSrc":"10731:11:21","nodeType":"YulFunctionCall","src":"10731:11:21"},"variables":[{"name":"src","nativeSrc":"10724:3:21","nodeType":"YulTypedName","src":"10724:3:21","type":""}]},{"body":{"nativeSrc":"10807:154:21","nodeType":"YulBlock","src":"10807:154:21","statements":[{"nativeSrc":"10821:23:21","nodeType":"YulVariableDeclaration","src":"10821:23:21","value":{"arguments":[{"name":"src","nativeSrc":"10840:3:21","nodeType":"YulIdentifier","src":"10840:3:21"}],"functionName":{"name":"mload","nativeSrc":"10834:5:21","nodeType":"YulIdentifier","src":"10834:5:21"},"nativeSrc":"10834:10:21","nodeType":"YulFunctionCall","src":"10834:10:21"},"variables":[{"name":"value","nativeSrc":"10825:5:21","nodeType":"YulTypedName","src":"10825:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"10882:5:21","nodeType":"YulIdentifier","src":"10882:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"10857:24:21","nodeType":"YulIdentifier","src":"10857:24:21"},"nativeSrc":"10857:31:21","nodeType":"YulFunctionCall","src":"10857:31:21"},"nativeSrc":"10857:31:21","nodeType":"YulExpressionStatement","src":"10857:31:21"},{"expression":{"arguments":[{"name":"dst","nativeSrc":"10908:3:21","nodeType":"YulIdentifier","src":"10908:3:21"},{"name":"value","nativeSrc":"10913:5:21","nodeType":"YulIdentifier","src":"10913:5:21"}],"functionName":{"name":"mstore","nativeSrc":"10901:6:21","nodeType":"YulIdentifier","src":"10901:6:21"},"nativeSrc":"10901:18:21","nodeType":"YulFunctionCall","src":"10901:18:21"},"nativeSrc":"10901:18:21","nodeType":"YulExpressionStatement","src":"10901:18:21"},{"nativeSrc":"10932:19:21","nodeType":"YulAssignment","src":"10932:19:21","value":{"arguments":[{"name":"dst","nativeSrc":"10943:3:21","nodeType":"YulIdentifier","src":"10943:3:21"},{"name":"_1","nativeSrc":"10948:2:21","nodeType":"YulIdentifier","src":"10948:2:21"}],"functionName":{"name":"add","nativeSrc":"10939:3:21","nodeType":"YulIdentifier","src":"10939:3:21"},"nativeSrc":"10939:12:21","nodeType":"YulFunctionCall","src":"10939:12:21"},"variableNames":[{"name":"dst","nativeSrc":"10932:3:21","nodeType":"YulIdentifier","src":"10932:3:21"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"10762:3:21","nodeType":"YulIdentifier","src":"10762:3:21"},{"name":"srcEnd","nativeSrc":"10767:6:21","nodeType":"YulIdentifier","src":"10767:6:21"}],"functionName":{"name":"lt","nativeSrc":"10759:2:21","nodeType":"YulIdentifier","src":"10759:2:21"},"nativeSrc":"10759:15:21","nodeType":"YulFunctionCall","src":"10759:15:21"},"nativeSrc":"10751:210:21","nodeType":"YulForLoop","post":{"nativeSrc":"10775:23:21","nodeType":"YulBlock","src":"10775:23:21","statements":[{"nativeSrc":"10777:19:21","nodeType":"YulAssignment","src":"10777:19:21","value":{"arguments":[{"name":"src","nativeSrc":"10788:3:21","nodeType":"YulIdentifier","src":"10788:3:21"},{"name":"_1","nativeSrc":"10793:2:21","nodeType":"YulIdentifier","src":"10793:2:21"}],"functionName":{"name":"add","nativeSrc":"10784:3:21","nodeType":"YulIdentifier","src":"10784:3:21"},"nativeSrc":"10784:12:21","nodeType":"YulFunctionCall","src":"10784:12:21"},"variableNames":[{"name":"src","nativeSrc":"10777:3:21","nodeType":"YulIdentifier","src":"10777:3:21"}]}]},"pre":{"nativeSrc":"10755:3:21","nodeType":"YulBlock","src":"10755:3:21","statements":[]},"src":"10751:210:21"},{"nativeSrc":"10970:15:21","nodeType":"YulAssignment","src":"10970:15:21","value":{"name":"dst_1","nativeSrc":"10980:5:21","nodeType":"YulIdentifier","src":"10980:5:21"},"variableNames":[{"name":"value0","nativeSrc":"10970:6:21","nodeType":"YulIdentifier","src":"10970:6:21"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory","nativeSrc":"10035:956:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10107:9:21","nodeType":"YulTypedName","src":"10107:9:21","type":""},{"name":"dataEnd","nativeSrc":"10118:7:21","nodeType":"YulTypedName","src":"10118:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10130:6:21","nodeType":"YulTypedName","src":"10130:6:21","type":""}],"src":"10035:956:21"},{"body":{"nativeSrc":"11095:101:21","nodeType":"YulBlock","src":"11095:101:21","statements":[{"nativeSrc":"11105:26:21","nodeType":"YulAssignment","src":"11105:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"11117:9:21","nodeType":"YulIdentifier","src":"11117:9:21"},{"kind":"number","nativeSrc":"11128:2:21","nodeType":"YulLiteral","src":"11128:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11113:3:21","nodeType":"YulIdentifier","src":"11113:3:21"},"nativeSrc":"11113:18:21","nodeType":"YulFunctionCall","src":"11113:18:21"},"variableNames":[{"name":"tail","nativeSrc":"11105:4:21","nodeType":"YulIdentifier","src":"11105:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11147:9:21","nodeType":"YulIdentifier","src":"11147:9:21"},{"arguments":[{"name":"value0","nativeSrc":"11162:6:21","nodeType":"YulIdentifier","src":"11162:6:21"},{"kind":"number","nativeSrc":"11170:18:21","nodeType":"YulLiteral","src":"11170:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"11158:3:21","nodeType":"YulIdentifier","src":"11158:3:21"},"nativeSrc":"11158:31:21","nodeType":"YulFunctionCall","src":"11158:31:21"}],"functionName":{"name":"mstore","nativeSrc":"11140:6:21","nodeType":"YulIdentifier","src":"11140:6:21"},"nativeSrc":"11140:50:21","nodeType":"YulFunctionCall","src":"11140:50:21"},"nativeSrc":"11140:50:21","nodeType":"YulExpressionStatement","src":"11140:50:21"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"10996:200:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11064:9:21","nodeType":"YulTypedName","src":"11064:9:21","type":""},{"name":"value0","nativeSrc":"11075:6:21","nodeType":"YulTypedName","src":"11075:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11086:4:21","nodeType":"YulTypedName","src":"11086:4:21","type":""}],"src":"10996:200:21"},{"body":{"nativeSrc":"11248:148:21","nodeType":"YulBlock","src":"11248:148:21","statements":[{"body":{"nativeSrc":"11339:22:21","nodeType":"YulBlock","src":"11339:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"11341:16:21","nodeType":"YulIdentifier","src":"11341:16:21"},"nativeSrc":"11341:18:21","nodeType":"YulFunctionCall","src":"11341:18:21"},"nativeSrc":"11341:18:21","nodeType":"YulExpressionStatement","src":"11341:18:21"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"11264:5:21","nodeType":"YulIdentifier","src":"11264:5:21"},{"kind":"number","nativeSrc":"11271:66:21","nodeType":"YulLiteral","src":"11271:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"11261:2:21","nodeType":"YulIdentifier","src":"11261:2:21"},"nativeSrc":"11261:77:21","nodeType":"YulFunctionCall","src":"11261:77:21"},"nativeSrc":"11258:103:21","nodeType":"YulIf","src":"11258:103:21"},{"nativeSrc":"11370:20:21","nodeType":"YulAssignment","src":"11370:20:21","value":{"arguments":[{"name":"value","nativeSrc":"11381:5:21","nodeType":"YulIdentifier","src":"11381:5:21"},{"kind":"number","nativeSrc":"11388:1:21","nodeType":"YulLiteral","src":"11388:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"11377:3:21","nodeType":"YulIdentifier","src":"11377:3:21"},"nativeSrc":"11377:13:21","nodeType":"YulFunctionCall","src":"11377:13:21"},"variableNames":[{"name":"ret","nativeSrc":"11370:3:21","nodeType":"YulIdentifier","src":"11370:3:21"}]}]},"name":"increment_t_uint256","nativeSrc":"11201:195:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11230:5:21","nodeType":"YulTypedName","src":"11230:5:21","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"11240:3:21","nodeType":"YulTypedName","src":"11240:3:21","type":""}],"src":"11201:195:21"},{"body":{"nativeSrc":"11509:101:21","nodeType":"YulBlock","src":"11509:101:21","statements":[{"nativeSrc":"11519:26:21","nodeType":"YulAssignment","src":"11519:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"11531:9:21","nodeType":"YulIdentifier","src":"11531:9:21"},{"kind":"number","nativeSrc":"11542:2:21","nodeType":"YulLiteral","src":"11542:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11527:3:21","nodeType":"YulIdentifier","src":"11527:3:21"},"nativeSrc":"11527:18:21","nodeType":"YulFunctionCall","src":"11527:18:21"},"variableNames":[{"name":"tail","nativeSrc":"11519:4:21","nodeType":"YulIdentifier","src":"11519:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11561:9:21","nodeType":"YulIdentifier","src":"11561:9:21"},{"arguments":[{"name":"value0","nativeSrc":"11576:6:21","nodeType":"YulIdentifier","src":"11576:6:21"},{"kind":"number","nativeSrc":"11584:18:21","nodeType":"YulLiteral","src":"11584:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"11572:3:21","nodeType":"YulIdentifier","src":"11572:3:21"},"nativeSrc":"11572:31:21","nodeType":"YulFunctionCall","src":"11572:31:21"}],"functionName":{"name":"mstore","nativeSrc":"11554:6:21","nodeType":"YulIdentifier","src":"11554:6:21"},"nativeSrc":"11554:50:21","nodeType":"YulFunctionCall","src":"11554:50:21"},"nativeSrc":"11554:50:21","nodeType":"YulExpressionStatement","src":"11554:50:21"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"11401:209:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11478:9:21","nodeType":"YulTypedName","src":"11478:9:21","type":""},{"name":"value0","nativeSrc":"11489:6:21","nodeType":"YulTypedName","src":"11489:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11500:4:21","nodeType":"YulTypedName","src":"11500:4:21","type":""}],"src":"11401:209:21"},{"body":{"nativeSrc":"11696:103:21","nodeType":"YulBlock","src":"11696:103:21","statements":[{"body":{"nativeSrc":"11742:16:21","nodeType":"YulBlock","src":"11742:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11751:1:21","nodeType":"YulLiteral","src":"11751:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"11754:1:21","nodeType":"YulLiteral","src":"11754:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11744:6:21","nodeType":"YulIdentifier","src":"11744:6:21"},"nativeSrc":"11744:12:21","nodeType":"YulFunctionCall","src":"11744:12:21"},"nativeSrc":"11744:12:21","nodeType":"YulExpressionStatement","src":"11744:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11717:7:21","nodeType":"YulIdentifier","src":"11717:7:21"},{"name":"headStart","nativeSrc":"11726:9:21","nodeType":"YulIdentifier","src":"11726:9:21"}],"functionName":{"name":"sub","nativeSrc":"11713:3:21","nodeType":"YulIdentifier","src":"11713:3:21"},"nativeSrc":"11713:23:21","nodeType":"YulFunctionCall","src":"11713:23:21"},{"kind":"number","nativeSrc":"11738:2:21","nodeType":"YulLiteral","src":"11738:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"11709:3:21","nodeType":"YulIdentifier","src":"11709:3:21"},"nativeSrc":"11709:32:21","nodeType":"YulFunctionCall","src":"11709:32:21"},"nativeSrc":"11706:52:21","nodeType":"YulIf","src":"11706:52:21"},{"nativeSrc":"11767:26:21","nodeType":"YulAssignment","src":"11767:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"11783:9:21","nodeType":"YulIdentifier","src":"11783:9:21"}],"functionName":{"name":"mload","nativeSrc":"11777:5:21","nodeType":"YulIdentifier","src":"11777:5:21"},"nativeSrc":"11777:16:21","nodeType":"YulFunctionCall","src":"11777:16:21"},"variableNames":[{"name":"value0","nativeSrc":"11767:6:21","nodeType":"YulIdentifier","src":"11767:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"11615:184:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11662:9:21","nodeType":"YulTypedName","src":"11662:9:21","type":""},{"name":"dataEnd","nativeSrc":"11673:7:21","nodeType":"YulTypedName","src":"11673:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11685:6:21","nodeType":"YulTypedName","src":"11685:6:21","type":""}],"src":"11615:184:21"},{"body":{"nativeSrc":"11941:164:21","nodeType":"YulBlock","src":"11941:164:21","statements":[{"nativeSrc":"11951:27:21","nodeType":"YulVariableDeclaration","src":"11951:27:21","value":{"arguments":[{"name":"value0","nativeSrc":"11971:6:21","nodeType":"YulIdentifier","src":"11971:6:21"}],"functionName":{"name":"mload","nativeSrc":"11965:5:21","nodeType":"YulIdentifier","src":"11965:5:21"},"nativeSrc":"11965:13:21","nodeType":"YulFunctionCall","src":"11965:13:21"},"variables":[{"name":"length","nativeSrc":"11955:6:21","nodeType":"YulTypedName","src":"11955:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"11993:3:21","nodeType":"YulIdentifier","src":"11993:3:21"},{"arguments":[{"name":"value0","nativeSrc":"12002:6:21","nodeType":"YulIdentifier","src":"12002:6:21"},{"kind":"number","nativeSrc":"12010:4:21","nodeType":"YulLiteral","src":"12010:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11998:3:21","nodeType":"YulIdentifier","src":"11998:3:21"},"nativeSrc":"11998:17:21","nodeType":"YulFunctionCall","src":"11998:17:21"},{"name":"length","nativeSrc":"12017:6:21","nodeType":"YulIdentifier","src":"12017:6:21"}],"functionName":{"name":"mcopy","nativeSrc":"11987:5:21","nodeType":"YulIdentifier","src":"11987:5:21"},"nativeSrc":"11987:37:21","nodeType":"YulFunctionCall","src":"11987:37:21"},"nativeSrc":"11987:37:21","nodeType":"YulExpressionStatement","src":"11987:37:21"},{"nativeSrc":"12033:26:21","nodeType":"YulVariableDeclaration","src":"12033:26:21","value":{"arguments":[{"name":"pos","nativeSrc":"12047:3:21","nodeType":"YulIdentifier","src":"12047:3:21"},{"name":"length","nativeSrc":"12052:6:21","nodeType":"YulIdentifier","src":"12052:6:21"}],"functionName":{"name":"add","nativeSrc":"12043:3:21","nodeType":"YulIdentifier","src":"12043:3:21"},"nativeSrc":"12043:16:21","nodeType":"YulFunctionCall","src":"12043:16:21"},"variables":[{"name":"_1","nativeSrc":"12037:2:21","nodeType":"YulTypedName","src":"12037:2:21","type":""}]},{"expression":{"arguments":[{"name":"_1","nativeSrc":"12075:2:21","nodeType":"YulIdentifier","src":"12075:2:21"},{"kind":"number","nativeSrc":"12079:1:21","nodeType":"YulLiteral","src":"12079:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"12068:6:21","nodeType":"YulIdentifier","src":"12068:6:21"},"nativeSrc":"12068:13:21","nodeType":"YulFunctionCall","src":"12068:13:21"},"nativeSrc":"12068:13:21","nodeType":"YulExpressionStatement","src":"12068:13:21"},{"nativeSrc":"12090:9:21","nodeType":"YulAssignment","src":"12090:9:21","value":{"name":"_1","nativeSrc":"12097:2:21","nodeType":"YulIdentifier","src":"12097:2:21"},"variableNames":[{"name":"end","nativeSrc":"12090:3:21","nodeType":"YulIdentifier","src":"12090:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"11804:301:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11917:3:21","nodeType":"YulTypedName","src":"11917:3:21","type":""},{"name":"value0","nativeSrc":"11922:6:21","nodeType":"YulTypedName","src":"11922:6:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11933:3:21","nodeType":"YulTypedName","src":"11933:3:21","type":""}],"src":"11804:301:21"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, _1)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_address_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let array := allocate_memory(add(and(add(_4, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), _1))\n        mstore(array, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, _1), add(_3, _1), _4)\n        mstore(add(add(array, _4), _1), 0)\n        value1 := array\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IBaluniV1Registry_$4898__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint64(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, 0xffffffffffffffff))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_39cbcbdd9e6251e82f28a321c8ea534706a2cf624e365b64351e1f84ffc7ff8d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"At least two assets are required\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Assets and weights length mismat\")\n        mstore(add(headStart, 96), \"ch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_2258c7547209181d37eb4aebb58e4d2c60f10b97b943ea694f4dec24e242181e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Pool already exists for this pai\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_array_address_dyn(value0, add(headStart, 128))\n        let _1 := 32\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let pos := tail_1\n        let length := mload(value1)\n        mstore(tail_1, length)\n        pos := add(tail_1, 32)\n        let srcPtr := add(value1, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_2, shl(5, _3)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let value := mload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"468":[{"length":32,"start":4095},{"length":32,"start":4136},{"length":32,"start":4573}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x123 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89345EFB GT PUSH2 0xA1 JUMPI DUP1 PUSH4 0xB4340E6A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xD88FF1F4 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3BA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB4340E6A EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0xB4AC6860 EQ PUSH2 0x374 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x89345EFB EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x8F2248BC EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x300 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F1EF286 GT PUSH2 0xF6 JUMPI DUP1 PUSH4 0x531AA03E GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x531AA03E EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x257 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D5E94A7 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x3069873B EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x41D1DE97 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x4276B97B EQ PUSH2 0x1A1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x132 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x141 CALLDATASIZE PUSH1 0x4 PUSH2 0x1636 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0x175A JUMP JUMPDEST PUSH2 0x407 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x19C CALLDATASIZE PUSH1 0x4 PUSH2 0x181E JUMP JUMPDEST PUSH2 0x8B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x1835 JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x18A5 JUMP JUMPDEST PUSH2 0x947 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH2 0x966 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x21E CALLDATASIZE PUSH1 0x4 PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x994 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x146 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0x290 CALLDATASIZE PUSH1 0x4 PUSH2 0x1835 JUMP JUMPDEST PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x146 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x1947 JUMP JUMPDEST PUSH2 0xA01 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x348 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x36F CALLDATASIZE PUSH1 0x4 PUSH2 0x1835 JUMP JUMPDEST PUSH2 0xB58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x1F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1835 JUMP JUMPDEST PUSH2 0xD86 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0xF3F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1835 JUMP JUMPDEST PUSH2 0xF9E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP5 MLOAD GT PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4174206C656173742074776F2061737365747320617265207265717569726564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH2 0x509 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6368000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x64A JUMPI PUSH0 PUSH2 0x520 DUP3 PUSH1 0x1 PUSH2 0x19E1 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x641 JUMPI PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 PUSH0 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x54B JUMPI PUSH2 0x54B PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x585 JUMPI PUSH2 0x585 PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD AND EQ PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20616C72656164792065786973747320666F72207468697320706169 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x523 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x50B JUMP JUMPDEST POP PUSH0 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH2 0x670 SWAP1 PUSH2 0x1615 JUMP JUMPDEST PUSH2 0x67D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x696 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE DUP2 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE SWAP1 SWAP2 POP DUP2 SWAP1 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x86B JUMPI PUSH0 PUSH2 0x711 DUP3 PUSH1 0x1 PUSH2 0x19E1 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0x862 JUMPI DUP3 PUSH1 0x2 PUSH0 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x733 JUMPI PUSH2 0x733 PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x76D JUMPI PUSH2 0x76D PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH0 DUP11 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7CD JUMPI PUSH2 0x7CD PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x807 JUMPI PUSH2 0x807 PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x714 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x6FC JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA4AF51F99A910B453B81F2F9F5673ACD70BF8895729E0A6DE8E5E0908D89F2B DUP8 PUSH1 0x40 MLOAD PUSH2 0x8A5 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x8C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP3 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x67E4AC2C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x920 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x8B1 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1A8E JUMP JUMPDEST PUSH2 0x94F PUSH2 0xFF4 JUMP JUMPDEST PUSH2 0x958 DUP3 PUSH2 0x10C4 JUMP JUMPDEST PUSH2 0x962 DUP3 DUP3 PUSH2 0x10CC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x96F PUSH2 0x11D2 JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH2 0x99C PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x9A5 PUSH0 PUSH2 0x12A8 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x9F9 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9CF JUMPI PUSH2 0x9CF PUSH2 0x19F4 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x9F1 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x9AA JUMP JUMPDEST POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xA4F JUMPI POP DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP2 AND LT ISZERO JUMPDEST ISZERO PUSH2 0xA86 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 SWAP1 SWAP3 AND DUP3 OR OR DUP3 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB77 JUMPI PUSH2 0xB77 PUSH2 0x166D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBA0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0xCE0 JUMPI PUSH0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBC2 JUMPI PUSH2 0xBC2 PUSH2 0x19F4 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x67E4AC2C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC1B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xC42 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1A8E JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xCC6 JUMPI DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC6B JUMPI PUSH2 0xC6B PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xCBE JUMPI DUP3 DUP7 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xC94 JUMPI PUSH2 0xC94 PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP5 PUSH2 0xCB6 DUP2 PUSH2 0x1B23 JUMP JUMPDEST SWAP6 POP POP PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xC46 JUMP JUMPDEST POP DUP5 MLOAD DUP5 SUB PUSH2 0xCD6 JUMPI POP POP PUSH2 0xCE0 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xBA6 JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCFB JUMPI PUSH2 0xCFB PUSH2 0x166D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD24 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD7D JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xD43 JUMPI PUSH2 0xD43 PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD5D JUMPI PUSH2 0xD5D PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0xD29 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xDD0 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xDEC JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xDFA JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xE31 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xE92 JUMPI DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x10000000000000000 OR DUP6 SSTORE JUMPDEST PUSH2 0xE9A PUSH2 0x1330 JUMP JUMPDEST PUSH2 0xEA3 CALLER PUSH2 0x1338 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0xF37 JUMPI DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xF94 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF76 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFA6 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST PUSH2 0xFF1 DUP2 PUSH2 0x12A8 JUMP JUMPDEST POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x108D JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1081 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFF1 PUSH2 0x1234 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1126 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1123 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1B5A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1167 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x11C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST PUSH2 0x11CD DUP4 DUP4 PUSH2 0x1349 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x1266 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x9A5 PUSH2 0x139E JUMP JUMPDEST PUSH2 0x1340 PUSH2 0x139E JUMP JUMPDEST PUSH2 0xFF1 DUP2 PUSH2 0x1405 JUMP JUMPDEST PUSH2 0x1352 DUP3 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1396 JUMPI PUSH2 0x11CD DUP3 DUP3 PUSH2 0x14B4 JUMP JUMPDEST PUSH2 0x962 PUSH2 0x1526 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFA6 PUSH2 0x139E JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x145B JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x14D0 SWAP2 SWAP1 PUSH2 0x1B71 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1508 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x150D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x151D DUP6 DUP4 DUP4 PUSH2 0x155E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1573 JUMPI PUSH2 0x156E DUP3 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x8B1 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x158A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x15CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x46F JUMP JUMPDEST POP DUP1 PUSH2 0x8B1 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x15E3 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4015 DUP1 PUSH2 0x1B88 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFF1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1647 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1652 DUP2 PUSH2 0x1622 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1662 DUP2 PUSH2 0x1622 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x16C3 JUMPI PUSH2 0x16C3 PUSH2 0x166D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x16E4 JUMPI PUSH2 0x16E4 PUSH2 0x166D JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16FD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1712 PUSH2 0x170D DUP4 PUSH2 0x16CB JUMP JUMPDEST PUSH2 0x169A JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x1733 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x174F JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1738 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x176C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1783 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1796 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x17A6 PUSH2 0x170D DUP4 PUSH2 0x16CB JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP11 DUP5 GT ISZERO PUSH2 0x17C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x17EB JUMPI DUP6 CALLDATALOAD PUSH2 0x17DC DUP2 PUSH2 0x1622 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x17C9 JUMP JUMPDEST SWAP8 POP POP DUP8 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1800 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x180D DUP7 DUP3 DUP8 ADD PUSH2 0x16EE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x182E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1845 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8B1 DUP2 PUSH2 0x1622 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1888 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1863 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x8B1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1850 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x18C1 DUP2 PUSH2 0x1622 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x18DE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1903 JUMPI PUSH2 0x1903 PUSH2 0x166D JUMP JUMPDEST PUSH2 0x1915 DUP5 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0x169A JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP8 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x192A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1958 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1963 DUP2 PUSH2 0x1622 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1662 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x401 JUMPI PUSH2 0x401 PUSH2 0x19B4 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH0 PUSH2 0x1A33 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x1850 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 MLOAD DUP1 DUP4 MSTORE DUP8 DUP3 ADD SWAP3 DUP3 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A69 JUMPI DUP5 MLOAD DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1A4D JUMP JUMPDEST POP POP PUSH1 0x40 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A9F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1AC5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1AD3 PUSH2 0x170D DUP3 PUSH2 0x16CB JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x1AF1 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x1B18 JUMPI DUP4 MLOAD PUSH2 0x1B09 DUP2 PUSH2 0x1622 JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1AF6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1B53 JUMPI PUSH2 0x1B53 PUSH2 0x19B4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B6A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4015 CODESIZE SUB DUP1 PUSH2 0x4015 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x7B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x42616C756E69204C5 PUSH1 0xBC SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x42414C554E492D4C5 PUSH1 0xBC SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x909 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x8E DUP3 DUP3 PUSH2 0x909 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x5 SSTORE POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SSTORE PUSH0 PUSH2 0xC8 DUP6 DUP6 PUSH2 0x28B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x11C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A6174696F6E206661696C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP4 SWAP1 SSTORE PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1BF01E9B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x1BF01E9B SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x169 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH5 0xE8D4A51000 PUSH1 0xA SSTORE PUSH2 0x201 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420626173652061737365742061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x113 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x23C JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x21F JUMPI PUSH2 0x21F PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x9FC JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x204 JUMP JUMPDEST POP DUP1 PUSH2 0x2710 EQ PUSH2 0x280 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642077656967687473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x113 JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0xA51 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x35D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726562616C616E6365722061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x113 JUMP JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH2 0x433 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x113 JUMP JUMPDEST PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6B6 JUMPI PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x45A JUMPI PUSH2 0x45A PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x113 JUMP JUMPDEST PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4CB JUMPI PUSH2 0x4CB PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x511 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081DD95A59DA1D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x113 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x530 JUMPI PUSH2 0x530 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x558 JUMPI PUSH2 0x558 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP6 SSTORE PUSH0 SWAP5 DUP6 MSTORE DUP3 DUP6 KECCAK256 DUP5 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP3 SSTORE SWAP3 SWAP1 SWAP2 ADD MLOAD SWAP2 ADD SSTORE DUP6 MLOAD DUP7 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x5B8 JUMPI PUSH2 0x5B8 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x611 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x635 SWAP2 SWAP1 PUSH2 0xA1B JUMP JUMPDEST PUSH0 SUB PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH0 NOT PUSH1 0x24 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x687 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6AB SWAP2 SWAP1 PUSH2 0xA32 JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x435 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x6FF JUMPI PUSH2 0x6FF PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x71F JUMPI PUSH2 0x71F PUSH2 0x6C3 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x73F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x753 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x768 PUSH2 0x763 DUP4 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x789 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x7A5 JUMPI DUP1 MLOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x78E JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x7C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x7D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7EC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x7FC PUSH2 0x763 DUP4 PUSH2 0x707 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP12 DUP5 GT ISZERO PUSH2 0x81A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x83F JUMPI PUSH2 0x830 DUP7 PUSH2 0x729 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x81F JUMP JUMPDEST SWAP2 DUP11 ADD MLOAD SWAP2 SWAP9 POP SWAP1 SWAP4 POP POP POP DUP1 DUP3 GT ISZERO PUSH2 0x857 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x864 DUP8 DUP3 DUP9 ADD PUSH2 0x744 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH2 0x87A PUSH1 0x60 DUP7 ADD PUSH2 0x729 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x899 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x8B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x904 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x8E2 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x901 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x8EE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x922 JUMPI PUSH2 0x922 PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0x936 DUP2 PUSH2 0x930 DUP5 SLOAD PUSH2 0x885 JUMP JUMPDEST DUP5 PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x969 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x952 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x9C0 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x997 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x978 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x9B4 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9E1 DUP3 PUSH2 0x729 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6BD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA2B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA42 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x9E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x35B7 DUP1 PUSH2 0xA5E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FEC8D38 GT PUSH2 0xFE JUMPI DUP1 PUSH4 0xC2EE3A08 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xDE836EBD EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0xF47B45E8 EQ PUSH2 0x442 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC2EE3A08 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xCDF456E1 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xCF8FA764 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xD14EF46D EQ PUSH2 0x3BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8A77C8DC GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x8A77C8DC EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xB2B55D70 EQ PUSH2 0x37B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7FEC8D38 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x89AB3532 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x345 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x174 JUMPI DUP1 PUSH4 0x67E4AC2C GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x67E4AC2C EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x2FB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x36BF6E39 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x298 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1AF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x22ACB867 EQ PUSH2 0x258 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x723C999 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x213 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1DD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x2DDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E47 JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST PUSH2 0x206 PUSH2 0x762 JUMP JUMPDEST PUSH2 0x22E PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAE JUMP JUMPDEST PUSH2 0x881 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EA JUMP JUMPDEST PUSH2 0x242 PUSH2 0x89A JUMP JUMPDEST PUSH2 0x206 PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x22E PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED8 JUMP JUMPDEST PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EA JUMP JUMPDEST PUSH2 0x28A PUSH2 0x96E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP3 SWAP2 SWAP1 PUSH2 0x2F16 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED8 JUMP JUMPDEST PUSH2 0x982 JUMP JUMPDEST PUSH2 0x2B3 PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x2F66 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x2F78 JUMP JUMPDEST PUSH2 0xC26 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x30E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EA JUMP JUMPDEST PUSH2 0x242 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x337 PUSH2 0xEDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP3 SWAP2 SWAP1 PUSH2 0x2FC8 JUMP JUMPDEST PUSH2 0x206 PUSH2 0x353 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E47 JUMP JUMPDEST PUSH2 0x1096 JUMP JUMPDEST PUSH2 0x22E PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x1723 JUMP JUMPDEST PUSH2 0x22E PUSH2 0x376 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAE JUMP JUMPDEST PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E47 JUMP JUMPDEST PUSH2 0x173F JUMP JUMPDEST PUSH2 0x242 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x30E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x3B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3017 JUMP JUMPDEST PUSH2 0x1847 JUMP JUMPDEST PUSH2 0x3D0 PUSH2 0x3CB CALLDATASIZE PUSH1 0x4 PUSH2 0x3017 JUMP JUMPDEST PUSH2 0x18C6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1EA JUMP JUMPDEST PUSH2 0x242 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x302E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x435 CALLDATASIZE PUSH1 0x4 PUSH2 0x3104 JUMP JUMPDEST PUSH2 0x18FC JUMP JUMPDEST PUSH2 0x242 PUSH2 0x1D12 JUMP JUMPDEST PUSH2 0x44A PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP3 SWAP2 SWAP1 PUSH2 0x31AA JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x467 SWAP1 PUSH2 0x31D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x493 SWAP1 PUSH2 0x31D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55F SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506572697068657279000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C6 PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x612 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526562616C616E6365206E6F74206E6565646564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x61C PUSH2 0x1F31 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH2 0x62B DUP4 DUP4 PUSH2 0x2061 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x637 DUP3 PUSH2 0x2163 JUMP JUMPDEST SWAP1 POP PUSH1 0xA SLOAD DUP2 PUSH2 0x647 SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x667 JUMPI PUSH2 0x667 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x690 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x709 JUMPI PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6B1 JUMPI PUSH2 0x6B1 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x701 JUMPI PUSH2 0x6E2 DUP2 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6D5 JUMPI PUSH2 0x6D5 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x219F JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6F4 JUMPI PUSH2 0x6F4 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x695 JUMP JUMPDEST POP PUSH2 0x714 DUP9 DUP4 PUSH2 0x226F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E DUP5 PUSH1 0x40 MLOAD PUSH2 0x74D SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP6 POP POP POP POP POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7B5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7D9 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x3E99C1E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x3E99C1E4 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x836 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x87B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x32AE JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x88E DUP2 DUP6 DUP6 PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8A4 PUSH2 0x1F31 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8CB JUMPI PUSH2 0x8CB PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8F4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x75C JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x916 JUMPI PUSH2 0x916 PUSH2 0x3281 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x938 JUMPI PUSH2 0x938 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x8F9 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x958 DUP6 DUP3 DUP6 PUSH2 0x22D2 JUMP JUMPDEST PUSH2 0x963 DUP6 DUP6 DUP6 PUSH2 0x2385 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH2 0x979 PUSH2 0x1F31 JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9D4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F8 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA54 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA78 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xACE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F7261636C65206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0x248391FF SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB3D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB61 SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB8B JUMPI PUSH2 0xB8B PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBB4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x75C JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xBD6 JUMPI PUSH2 0xBD6 PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xC06 JUMPI PUSH2 0xC06 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0xBB9 JUMP JUMPDEST PUSH0 PUSH2 0xC2F PUSH2 0x2414 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x85462D6F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x85462D6F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC8F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCB3 SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xD16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 DUP5 GT PUSH2 0xD65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 PUSH2 0xD71 DUP8 DUP8 DUP8 PUSH2 0x982 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xD7D DUP8 PUSH2 0x173F JUMP JUMPDEST LT ISZERO PUSH2 0xDCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH2 0xDD9 DUP5 DUP5 PUSH2 0x326A JUMP JUMPDEST PUSH2 0xDE3 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP1 POP PUSH2 0xDEF DUP2 DUP4 PUSH2 0x3389 JUMP JUMPDEST SWAP4 POP PUSH0 DUP5 GT PUSH2 0xE66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F2073656E64206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x68616E2030000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5B5 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 DUP10 DUP9 PUSH1 0x40 MLOAD PUSH2 0xEBE SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP PUSH2 0xED3 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH2 0xEE8 PUSH2 0x1F31 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP2 SWAP4 POP SWAP2 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF09 JUMPI PUSH2 0xF09 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF32 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF4E JUMPI PUSH2 0xF4E PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF77 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x108E JUMPI PUSH0 DUP5 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF98 JUMPI PUSH2 0xF98 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2710 PUSH2 0xFAD SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH2 0xFB7 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xFCD JUMPI PUSH2 0xFCD PUSH2 0x3281 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1038 JUMPI PUSH2 0xFF1 DUP2 DUP4 PUSH2 0x3389 JUMP JUMPDEST DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1003 JUMPI PUSH2 0x1003 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1023 JUMPI PUSH2 0x1023 PUSH2 0x3281 JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH2 0x1084 JUMP JUMPDEST PUSH2 0x1042 DUP3 DUP3 PUSH2 0x3389 JUMP JUMPDEST DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1054 JUMPI PUSH2 0x1054 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1073 JUMPI PUSH2 0x1073 PUSH2 0x3281 JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xF7C JUMP JUMPDEST POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x110D SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1167 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506572697068657279000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x85462D6F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x85462D6F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11C7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11EB SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x123E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1262 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x12C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 PUSH2 0x12CB PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x131C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1339 JUMPI PUSH2 0x1339 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1362 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH2 0x2710 PUSH2 0x1373 DUP8 DUP7 PUSH2 0x326A JUMP JUMPDEST PUSH2 0x137D SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x138A DUP3 DUP7 PUSH2 0x3389 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x148E JUMPI PUSH0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA3E113FB ADDRESS PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x13BC JUMPI PUSH2 0x13BC PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP5 SWAP1 SHL PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x142D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1451 SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x145E DUP5 DUP4 PUSH2 0x326A JUMP JUMPDEST PUSH2 0x1468 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x147A JUMPI PUSH2 0x147A PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x138E JUMP JUMPDEST POP ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x14ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742042414C554E49206C6971756964697479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x3B19E84A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x3B19E84A SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x154D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1571 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH0 SWAP1 ADDRESS SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15D9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15FD SWAP2 SWAP1 PUSH2 0x339C JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x164C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x1656 ADDRESS DUP5 PUSH2 0x2457 JUMP JUMPDEST DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1691 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP3 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x16B4 PUSH2 0xEDB JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x171A JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x16D5 JUMPI PUSH2 0x16D5 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP1 ISZERO PUSH2 0x1703 JUMPI POP PUSH1 0x7 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x16F9 JUMPI PUSH2 0x16F9 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT JUMPDEST ISZERO PUSH2 0x1712 JUMPI PUSH1 0x1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x16BA JUMP JUMPDEST POP PUSH0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x467 SWAP1 PUSH2 0x31D7 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x88E DUP2 DUP6 DUP6 PUSH2 0x2385 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1791 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17B5 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA3E113FB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xA3E113FB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x181C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1840 SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1851 PUSH2 0x1F31 JUMP JUMPDEST SWAP2 POP POP DUP1 MLOAD DUP4 LT PUSH2 0x18A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420696E64657800000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST DUP1 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x18B6 JUMPI PUSH2 0x18B6 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x18D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x194E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1972 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x19CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506572697068657279000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 PUSH2 0x19D6 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0x19E2 PUSH2 0x762 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x6 SLOAD SWAP2 SWAP3 POP EQ PUSH2 0x1A37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1A86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206173736574730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1B24 JUMPI PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1AA6 JUMPI PUSH2 0x1AA6 PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 POP AND DUP3 SUB PUSH2 0x1AE8 JUMPI DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1ADE JUMPI PUSH2 0x1ADE PUSH2 0x3281 JUMP JUMPDEST POP PUSH2 0x1B1C SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1B0B DUP3 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1AFE JUMPI PUSH2 0x1AFE PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x24A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B17 DUP2 DUP7 PUSH2 0x33BB JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1A88 JUMP JUMPDEST POP PUSH0 DUP3 GT PUSH2 0x1B9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 DUP4 PUSH0 SUB PUSH2 0x1BB6 JUMPI PUSH1 0xA SLOAD PUSH2 0x1BAF SWAP1 DUP5 PUSH2 0x326A JUMP JUMPDEST SWAP1 POP PUSH2 0x1C6B JUMP JUMPDEST PUSH0 PUSH2 0x1BBF PUSH2 0x1F31 JUMP JUMPDEST POP SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1C37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E20300000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1C44 SWAP1 DUP3 PUSH2 0x326A JUMP JUMPDEST DUP6 PUSH1 0xA SLOAD DUP7 PUSH2 0x1C53 SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH2 0x1C5D SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH2 0x1C67 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x1CBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420717479206973203000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x1CC4 DUP9 DUP3 PUSH2 0x226F JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1CFF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D64 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D88 SWAP2 SWAP1 PUSH2 0x33CE JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH2 0x1D99 DUP3 PUSH1 0x12 PUSH2 0x3389 JUMP JUMPDEST PUSH2 0x1DA4 SWAP1 PUSH1 0xA PUSH2 0x350C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1DAF PUSH2 0x1F31 JUMP JUMPDEST POP SWAP1 POP PUSH0 PUSH2 0x1DBC PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0x1DCF JUMPI PUSH0 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 PUSH2 0x1DDD DUP6 DUP6 PUSH2 0x326A JUMP JUMPDEST PUSH2 0x1DE7 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST PUSH2 0x1DF1 SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E4E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E72 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1ECC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506572697068657279000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x1ED4 PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x1F20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526562616C616E6365206E6F74206E6565646564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x1F28 PUSH2 0x24BE JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH0 SWAP1 PUSH1 0x60 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F52 JUMPI PUSH2 0x1F52 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F7B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x205B JUMPI PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1F9C JUMPI PUSH2 0x1F9C PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x1FBF DUP3 PUSH2 0x173F JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x1FFC JUMPI DUP1 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1FEB JUMPI PUSH2 0x1FEB PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x202A JUMP JUMPDEST PUSH0 PUSH2 0x2007 DUP4 DUP4 PUSH2 0x24A4 JUMP JUMPDEST SWAP1 POP DUP1 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x201C JUMPI PUSH2 0x201C PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x203C JUMPI PUSH2 0x203C PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH2 0x204F SWAP2 SWAP1 PUSH2 0x33BB JUMP JUMPDEST SWAP6 POP POP POP PUSH1 0x1 ADD PUSH2 0x1F80 JUMP JUMPDEST POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x207F JUMPI PUSH2 0x207F PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20A8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x8A4 JUMPI PUSH0 PUSH2 0x2710 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x20CE JUMPI PUSH2 0x20CE PUSH2 0x3281 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 PUSH2 0x20E9 SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH2 0x20F3 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2108 JUMPI PUSH2 0x2108 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD LT ISZERO PUSH2 0x215A JUMPI DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2128 JUMPI PUSH2 0x2128 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 PUSH2 0x213B SWAP2 SWAP1 PUSH2 0x3389 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x214D JUMPI PUSH2 0x214D PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x20AD JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x75C JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2182 JUMPI PUSH2 0x2182 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x2195 SWAP2 SWAP1 PUSH2 0x33BB JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x2166 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x21C3 JUMPI PUSH2 0x21C3 PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x21E8 JUMPI POP DUP1 PUSH2 0x894 JUMP JUMPDEST PUSH0 PUSH2 0x221E PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x21FF JUMPI PUSH2 0x21FF PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x2B81 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1840 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x22B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x22BC PUSH0 DUP4 DUP4 PUSH2 0x2B9A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x22CD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2CD9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x237F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2371 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x237F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x2CD9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x23C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2409 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x22CD DUP4 DUP4 DUP4 PUSH2 0x2B9A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0x2450 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2499 JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x22BC DUP3 PUSH0 DUP4 PUSH2 0x2B9A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH0 SWAP1 PUSH2 0x1840 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2512 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2536 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2589 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25AD SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25CD JUMPI PUSH2 0x25CD PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x25F6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2617 JUMPI PUSH2 0x2617 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2640 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2661 JUMPI PUSH2 0x2661 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x268A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26AB JUMPI PUSH2 0x26AB PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x26D4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26F5 JUMPI PUSH2 0x26F5 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x271E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x273F JUMPI PUSH2 0x273F PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2768 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x28DF JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x278A JUMPI PUSH2 0x278A PUSH2 0x3281 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x27BA JUMPI PUSH2 0x27BA PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x27ED JUMPI PUSH2 0x27ED PUSH2 0x3281 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x280F JUMPI PUSH2 0x280F PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP7 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x282D JUMPI PUSH2 0x282D PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2896 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28BA SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x28CC JUMPI PUSH2 0x28CC PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x276D JUMP JUMPDEST POP PUSH0 PUSH2 0x28E9 PUSH2 0x762 JUMP JUMPDEST SWAP1 POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF0BF7714 DUP3 DUP10 DUP10 PUSH1 0x7 SLOAD DUP15 DUP16 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2939 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3517 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2950 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2962 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2B2F JUMPI DUP8 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2984 JUMPI PUSH2 0x2984 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29ED JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A11 SWAP2 SWAP1 PUSH2 0x333A JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A23 JUMPI PUSH2 0x2A23 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2A41 JUMPI PUSH2 0x2A41 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A5B JUMPI PUSH2 0x2A5B PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x2ACA JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2A7B JUMPI PUSH2 0x2A7B PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A95 JUMPI PUSH2 0x2A95 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2AA7 SWAP2 SWAP1 PUSH2 0x3389 JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2AB9 JUMPI PUSH2 0x2AB9 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2B27 JUMP JUMPDEST DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2ADC JUMPI PUSH2 0x2ADC PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2AF6 JUMPI PUSH2 0x2AF6 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2B08 SWAP2 SWAP1 PUSH2 0x3389 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2B1A JUMPI PUSH2 0x2B1A PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2968 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 DUP9 PUSH1 0x40 MLOAD PUSH2 0x2B69 SWAP2 SWAP1 PUSH2 0x2F66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP1 SWAP10 SWAP1 SWAP9 POP SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH0 SWAP1 PUSH2 0x1840 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2BC4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2BB9 SWAP2 SWAP1 PUSH2 0x33BB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2C4D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2C2F JUMPI PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2C69 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x2C87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2CCC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2D1B JUMPI PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2D5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x237F JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2DCF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E44 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E57 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1840 DUP2 PUSH2 0x2E30 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E91 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2E75 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x1840 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E62 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EBF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2ECA DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2EEA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2EF5 DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2F05 DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0xED3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2E62 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E91 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2F41 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x1840 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2F2E JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2F8B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2F96 DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x2FA6 DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x2FBD DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3002 JUMPI DUP2 MLOAD ISZERO ISZERO DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2FE4 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0xB61 DUP2 DUP7 PUSH2 0x2E62 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3027 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x303F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x304A DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x305A DUP2 PUSH2 0x2E30 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x30D9 JUMPI PUSH2 0x30D9 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x30FA JUMPI PUSH2 0x30FA PUSH2 0x3065 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3115 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3120 DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x313C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x314C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x315F PUSH2 0x315A DUP3 PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x3092 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP9 DUP4 GT ISZERO PUSH2 0x317D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x319B JUMPI DUP4 CALLDATALOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x3182 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x31BC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2E62 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x31CE DUP2 DUP6 PUSH2 0x2E62 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x31EB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x75C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3232 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1840 DUP2 PUSH2 0x2E30 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x894 JUMPI PUSH2 0x894 PUSH2 0x323D JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32BF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x32E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x32F3 PUSH2 0x315A DUP3 PUSH2 0x30E1 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x3311 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x332F JUMPI DUP4 MLOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x3316 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x334A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x3384 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x894 JUMPI PUSH2 0x894 PUSH2 0x323D JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33AC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1840 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x894 JUMPI PUSH2 0x894 PUSH2 0x323D JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33DE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1840 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x3447 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x342D JUMPI PUSH2 0x342D PUSH2 0x323D JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x343A JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x33F3 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x345D JUMPI POP PUSH1 0x1 PUSH2 0x894 JUMP JUMPDEST DUP2 PUSH2 0x3469 JUMPI POP PUSH0 PUSH2 0x894 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x347F JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3489 JUMPI PUSH2 0x34A5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x894 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x349A JUMPI PUSH2 0x349A PUSH2 0x323D JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x894 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x34C8 JUMPI POP DUP2 DUP2 EXP PUSH2 0x894 JUMP JUMPDEST PUSH2 0x34D2 DUP4 DUP4 PUSH2 0x33EE JUMP JUMPDEST DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x3504 JUMPI PUSH2 0x3504 PUSH2 0x323D JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1840 DUP4 DUP4 PUSH2 0x344F JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE PUSH0 PUSH2 0x3529 PUSH1 0xE0 DUP4 ADD DUP11 PUSH2 0x2E62 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x353B DUP2 DUP11 PUSH2 0x2F2E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x354F DUP2 DUP10 PUSH2 0x2E62 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x80 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 LOG3 0xD6 SHR LOG1 TLOAD SLOAD 0x4B ADDRESS GASLIMIT 0xEE DIV ADDMOD 0xC1 EXTCODEHASH 0xC0 0x22 0x4F SGT 0xAF 0xED 0xD5 0xE0 0xA9 SWAP15 PUSH19 0xD6EAD0660A5F64736F6C63430008190033A264 PUSH10 0x70667358221220BBF2D8 PUSH19 0x4007D56CB7EFBA9C340B588869BB1BEB915309 0xE3 GASPRICE 0xB2 0x28 EXTCODESIZE ADDRESS 0xE3 0x27 0xA6 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"1777:4772:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5052:147;;;;;;;;;;-1:-1:-1;5052:147:16;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;730:55:21;;;712:74;;700:2;685:18;5052:147:16;;;;;;;;2909:1084;;;;;;;;;;-1:-1:-1;2909:1084:16;;;;;:::i;:::-;;:::i;1867:25::-;;;;;;;;;;-1:-1:-1;1867:25:16;;;;;:::i;:::-;;:::i;4626:183::-;;;;;;;;;;-1:-1:-1;4626:183:16;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4158:214:2:-;;;;;;:::i;:::-;;:::i;:::-;;3705:134;;;;;;;;;;;;;:::i;:::-;;;5778:25:21;;;5766:2;5751:18;3705:134:2;5632:177:21;1943:62:16;;;;;;;;;;-1:-1:-1;1943:62:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1943:62:16;;;3155:101:0;;;;;;;;;;;;;:::i;1901:33:16:-;;;;;;;;;;-1:-1:-1;1901:33:16;;;;-1:-1:-1;;;;;1901:33:16;;;6298:248;;;;;;;;;;-1:-1:-1;6298:248:16;;;;;:::i;:::-;;:::i;:::-;;;6236:14:21;;6229:22;6211:41;;6199:2;6184:18;6298:248:16;6071:187:21;2441:144:0;;;;;;;;;;-1:-1:-1;1313:22:0;2570:8;-1:-1:-1;;;;;2570:8:0;2441:144;;2276:147:16;;;;;;;;;;-1:-1:-1;2276:147:16;;;;;:::i;:::-;;:::i;1819:58:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5412:878:16:-;;;;;;;;;;-1:-1:-1;5412:878:16;;;;;:::i;:::-;;:::i;4351:98::-;;;;;;;;;;-1:-1:-1;4399:7:16;4426:15;4351:98;;2080:188;;;;;;;;;;-1:-1:-1;2080:188:16;;;;;:::i;:::-;;:::i;4124:98::-;;;;;;;;;;;;;:::i;3405:215:0:-;;;;;;;;;;-1:-1:-1;3405:215:0;;;;;:::i;:::-;;:::i;5052:147:16:-;-1:-1:-1;;;;;5167:15:16;;;5132:7;5167:15;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;5052:147;;;;;:::o;2909:1084::-;3015:7;3059:1;3043:6;:13;:17;3035:62;;;;;;;7561:2:21;3035:62:16;;;7543:21:21;;;7580:18;;;7573:30;7639:34;7619:18;;;7612:62;7691:18;;3035:62:16;;;;;;;;;3133:7;:14;3116:6;:13;:31;3108:78;;;;;;;7922:2:21;3108:78:16;;;7904:21:21;7961:2;7941:18;;;7934:30;8000:34;7980:18;;;7973:62;8071:4;8051:18;;;8044:32;8093:19;;3108:78:16;7720:398:21;3108:78:16;3204:9;3199:251;3223:6;:13;3219:1;:17;3199:251;;;3263:9;3275:5;:1;3279;3275:5;:::i;:::-;3263:17;;3258:181;3286:6;:13;3282:1;:17;3258:181;;;3383:1;-1:-1:-1;;;;;3333:52:16;3341:7;:18;3349:6;3356:1;3349:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3341:18:16;-1:-1:-1;;;;;3341:18:16;;;;;;;;;;;;:29;3360:6;3367:1;3360:9;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3341:29:16;;;;;;;;;;;;;;-1:-1:-1;3341:29:16;;;3333:52;3325:98;;;;;;;8833:2:21;3325:98:16;;;8815:21:21;8872:2;8852:18;;;8845:30;8911:34;8891:18;;;8884:62;8982:3;8962:18;;;8955:31;9003:19;;3325:98:16;8631:397:21;3325:98:16;3301:3;;3258:181;;;-1:-1:-1;3238:3:16;;3199:251;;;;3462:20;3502:6;3510:7;3519;3536:8;;;;;;;;;-1:-1:-1;;;;;3536:8:16;3485:61;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3559:19:16;3610:26;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3610:26:16;;;;;;;-1:-1:-1;3610:26:16;;3647:258;3671:6;:13;3667:1;:17;3647:258;;;3711:9;3723:5;:1;3727;3723:5;:::i;:::-;3711:17;;3706:188;3734:6;:13;3730:1;:17;3706:188;;;3805:11;3773:7;:18;3781:6;3788:1;3781:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3773:18:16;-1:-1:-1;;;;;3773:18:16;;;;;;;;;;;;:29;3792:6;3799:1;3792:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3773:29:16;-1:-1:-1;;;;;3773:29:16;;;;;;;;;;;;;:43;;;;;-1:-1:-1;;;;;3773:43:16;;;;;-1:-1:-1;;;;;3773:43:16;;;;;;3867:11;3835:7;:18;3843:6;3850:1;3843:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3835:18:16;-1:-1:-1;;;;;3835:18:16;;;;;;;;;;;;:29;3854:6;3861:1;3854:9;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3835:29:16;;;;;;;;;;;;;;-1:-1:-1;3835:29:16;:43;;;;;;;;;;;;;;-1:-1:-1;3749:3:16;3706:188;;;-1:-1:-1;3686:3:16;;3647:258;;;;3934:11;-1:-1:-1;;;;;3922:32:16;;3947:6;3922:32;;;;;;:::i;:::-;;;;;;;;3974:11;-1:-1:-1;;2909:1084:16;;;;;;:::o;1867:25::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1867:25:16;;-1:-1:-1;1867:25:16;:::o;4626:183::-;4693:16;4722:17;4755:11;4722:45;;4785:4;-1:-1:-1;;;;;4785:14:16;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4785:16:16;;;;;;;;;;;;:::i;4158:214:2:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;1327:66:6::1;3705:134:2::0;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;6298:248:16:-;6355:4;;6372:144;6396:8;:15;6392:19;;6372:144;;;6452:5;-1:-1:-1;;;;;6437:20:16;:8;6446:1;6437:11;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;6437:11:16;:20;6433:72;;-1:-1:-1;6485:4:16;;6298:248;-1:-1:-1;;6298:248:16:o;6433:72::-;6413:3;;6372:144;;;-1:-1:-1;6533:5:16;;6298:248;-1:-1:-1;;6298:248:16:o;2276:147::-;8870:21:1;6431:15;;2355:8:16;;8870:21:1;6431:15;;;;;;:44;;-1:-1:-1;6450:14:1;;:25;;;;:14;;:25;;6431:44;6427:105;;;6498:23;;;;;;;;;;;;;;6427:105;6541:24;;6575:22;6541:24;;;6575:22;;;;;;;;;-1:-1:-1;2376:39:16;;;::::1;-1:-1:-1::0;;;;;2376:39:16;::::1;;::::0;;6618:23:1;;6575:22;6618:23;;;6656:20;;11140:50:21;;;6656:20:1;;11128:2:21;11113:18;6656:20:1;;;;;;;6291:392;2276:147:16;;;:::o;5412:878::-;5504:22;5543:15;;5475:16;;5504:22;5529:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5529:30:16;;5504:55;;5570:13;5605:9;5600:505;5624:8;:15;5620:19;;5600:505;;;5661:17;5694:8;5703:1;5694:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5694:11:16;5661:45;;5721:23;5747:4;-1:-1:-1;;;;;5747:14:16;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5747:16:16;;;;;;;;;;;;:::i;:::-;5721:42;;5785:9;5780:231;5804:6;:13;5800:1;:17;5780:231;;;5860:5;-1:-1:-1;;;;;5847:18:16;:6;5854:1;5847:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5847:18:16;;5843:153;;5913:4;5890:5;5896;5890:12;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5890:28:16;;;:12;;;;;;;;;;;:28;5941:7;;;;:::i;:::-;;;;5971:5;;5843:153;5819:3;;5780:231;;;;6040:5;:12;6031:5;:21;6027:67;;6073:5;;;;6027:67;-1:-1:-1;;5641:3:16;;5600:505;;;;6117:23;6157:5;6143:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6143:20:16;;6117:46;;6179:9;6174:83;6198:5;6194:1;:9;6174:83;;;6237:5;6243:1;6237:8;;;;;;;;:::i;:::-;;;;;;;6225:6;6232:1;6225:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6225:20:16;;;:9;;;;;;;;;;;:20;6205:3;;6174:83;;;-1:-1:-1;6276:6:16;5412:878;-1:-1:-1;;;;5412:878:16:o;2080:188::-;8870:21:1;4302:15;;;;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:1;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4951:18;;;;4968:1;4951:18;;;4979:67;;;;5013:22;;;;;;;;4979:67;2149:24:16::1;:22;:24::i;:::-;2184:26;2199:10;2184:14;:26::i;:::-;2221:8;:39:::0;;;::::1;-1:-1:-1::0;;;;;2221:39:16;::::1;;::::0;;5066:101:1;;;;5100:23;;;;;;5142:14;;-1:-1:-1;11140:50:21;;5142:14:1;;11128:2:21;11113:18;5142:14:1;;;;;;;5066:101;4092:1081;;;;;2080:188:16;:::o;4124:98::-;4170:16;4206:8;4199:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4199:15:16;;;;;;;;;;;;;;;;;;;;;;;4124:98;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:0;::::1;3485:91;;3534:31;::::0;::::1;::::0;;3562:1:::1;3534:31;::::0;::::1;712:74:21::0;685:18;;3534:31:0::1;566:226:21::0;3485:91:0::1;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;4599:312:2:-;4679:4;-1:-1:-1;;;;;4688:6:2;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:2;:32;1327:66:6;2035:53;-1:-1:-1;;;;;2035:53:6;;1957:138;4749:32:2;-1:-1:-1;;;;;4749:42:2;;;4671:120;4654:251;;;4865:29;;;;;;;;;;;;;;2431:84:16;2334:13:0;:11;:13::i;6052:538:2:-;6169:17;-1:-1:-1;;;;;6151:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:2;;;;;;;;-1:-1:-1;;6151:52:2;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;;;;-1:-1:-1;;;;;730:55:21;;6513:60:2;;;712:74:21;685:18;;6513:60:2;566:226:21;6147:437:2;1327:66:6;6245:40:2;;6241:120;;6312:34;;;;;;;;5778:25:21;;;5751:18;;6312:34:2;5632:177:21;6241:120:2;6374:54;6404:17;6423:4;6374:29;:54::i;:::-;6204:235;6052:538;;:::o;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:2;5094:23;;5090:145;;5195:29;;;;;;;;;;;;;;2658:162:0;966:10:3;2717:7:0;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:0;;2713:101;;2763:40;;;;;966:10:3;2763:40:0;;;712:74:21;685:18;;2763:40:0;566:226:21;3774:248:0;1313:22;3923:8;;3941:19;;;-1:-1:-1;;;;;3941:19:0;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;2968:67:2:-;6931:20:1;:18;:20::i;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;2779:335:6:-:0;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:6;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;7084:141:1:-;8870:21;8560:40;;;;;;7146:73;;7191:17;;;;;;;;;;;;;;1980:235:0;6931:20:1;:18;:20::i;2186:281:6:-;2263:17;-1:-1:-1;;;;;2263:29:6;;2296:1;2263:34;2259:119;;2320:47;;;;;-1:-1:-1;;;;;730:55:21;;2320:47:6;;;712:74:21;685:18;;2320:47:6;566:226:21;2259:119:6;1327:66;2387:73;;;;-1:-1:-1;;;;;2387:73:6;;;;;;;;;;2186:281::o;4106:253:11:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:11;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:11:o;6598:122:6:-;6648:9;:13;6644:70;;6684:19;;;;;;;;;;;;;;4625:582:11;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:11;;;:23;5045:49;5041:119;;;5121:24;;;;;-1:-1:-1;;;;;730:55:21;;5121:24:11;;;712:74:21;685:18;;5121:24:11;566:226:21;5041:119:11;-1:-1:-1;5180:10:11;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;:::o;14:154:21:-;-1:-1:-1;;;;;93:5:21;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:388;241:6;249;302:2;290:9;281:7;277:23;273:32;270:52;;;318:1;315;308:12;270:52;357:9;344:23;376:31;401:5;376:31;:::i;:::-;426:5;-1:-1:-1;483:2:21;468:18;;455:32;496:33;455:32;496:33;:::i;:::-;548:7;538:17;;;173:388;;;;;:::o;797:184::-;849:77;846:1;839:88;946:4;943:1;936:15;970:4;967:1;960:15;986:334;1057:2;1051:9;1113:2;1103:13;;-1:-1:-1;;1099:86:21;1087:99;;1216:18;1201:34;;1237:22;;;1198:62;1195:88;;;1263:18;;:::i;:::-;1299:2;1292:22;986:334;;-1:-1:-1;986:334:21:o;1325:183::-;1385:4;1418:18;1410:6;1407:30;1404:56;;;1440:18;;:::i;:::-;-1:-1:-1;1485:1:21;1481:14;1497:4;1477:25;;1325:183::o;1513:668::-;1567:5;1620:3;1613:4;1605:6;1601:17;1597:27;1587:55;;1638:1;1635;1628:12;1587:55;1674:6;1661:20;1700:4;1724:60;1740:43;1780:2;1740:43;:::i;:::-;1724:60;:::i;:::-;1806:3;1830:2;1825:3;1818:15;1858:4;1853:3;1849:14;1842:21;;1915:4;1909:2;1906:1;1902:10;1894:6;1890:23;1886:34;1872:48;;1943:3;1935:6;1932:15;1929:35;;;1960:1;1957;1950:12;1929:35;1996:4;1988:6;1984:17;2010:142;2026:6;2021:3;2018:15;2010:142;;;2092:17;;2080:30;;2130:12;;;;2043;;2010:142;;;-1:-1:-1;2170:5:21;1513:668;-1:-1:-1;;;;;;1513:668:21:o;2186:1283::-;2313:6;2321;2329;2382:2;2370:9;2361:7;2357:23;2353:32;2350:52;;;2398:1;2395;2388:12;2350:52;2438:9;2425:23;2467:18;2508:2;2500:6;2497:14;2494:34;;;2524:1;2521;2514:12;2494:34;2562:6;2551:9;2547:22;2537:32;;2607:7;2600:4;2596:2;2592:13;2588:27;2578:55;;2629:1;2626;2619:12;2578:55;2665:2;2652:16;2687:4;2711:60;2727:43;2767:2;2727:43;:::i;2711:60::-;2805:15;;;2887:1;2883:10;;;;2875:19;;2871:28;;;2836:12;;;;2911:19;;;2908:39;;;2943:1;2940;2933:12;2908:39;2967:11;;;;2987:217;3003:6;2998:3;2995:15;2987:217;;;3083:3;3070:17;3100:31;3125:5;3100:31;:::i;:::-;3144:18;;3020:12;;;;3182;;;;2987:217;;;3223:5;-1:-1:-1;;3266:18:21;;3253:32;;-1:-1:-1;;3297:16:21;;;3294:36;;;3326:1;3323;3316:12;3294:36;;3349:63;3404:7;3393:8;3382:9;3378:24;3349:63;:::i;:::-;3339:73;;;3459:2;3448:9;3444:18;3431:32;3421:42;;2186:1283;;;;;:::o;3474:180::-;3533:6;3586:2;3574:9;3565:7;3561:23;3557:32;3554:52;;;3602:1;3599;3592:12;3554:52;-1:-1:-1;3625:23:21;;3474:180;-1:-1:-1;3474:180:21:o;3659:247::-;3718:6;3771:2;3759:9;3750:7;3746:23;3742:32;3739:52;;;3787:1;3784;3777:12;3739:52;3826:9;3813:23;3845:31;3870:5;3845:31;:::i;3911:488::-;3964:3;4002:5;3996:12;4029:6;4024:3;4017:19;4055:4;4084;4079:3;4075:14;4068:21;;4123:4;4116:5;4112:16;4146:1;4156:218;4170:6;4167:1;4164:13;4156:218;;;4235:13;;-1:-1:-1;;;;;4231:62:21;4219:75;;4314:12;;;;4349:15;;;;4192:1;4185:9;4156:218;;;-1:-1:-1;4390:3:21;;3911:488;-1:-1:-1;;;;;3911:488:21:o;4404:261::-;4583:2;4572:9;4565:21;4546:4;4603:56;4655:2;4644:9;4640:18;4632:6;4603:56;:::i;4670:957::-;4747:6;4755;4808:2;4796:9;4787:7;4783:23;4779:32;4776:52;;;4824:1;4821;4814:12;4776:52;4863:9;4850:23;4882:31;4907:5;4882:31;:::i;:::-;4932:5;-1:-1:-1;4956:2:21;4994:18;;;4981:32;5032:18;5062:14;;;5059:34;;;5089:1;5086;5079:12;5059:34;5127:6;5116:9;5112:22;5102:32;;5172:7;5165:4;5161:2;5157:13;5153:27;5143:55;;5194:1;5191;5184:12;5143:55;5230:2;5217:16;5252:2;5248;5245:10;5242:36;;;5258:18;;:::i;:::-;5300:112;5408:2;-1:-1:-1;;5332:4:21;5328:2;5324:13;5320:86;5316:95;5300:112;:::i;:::-;5287:125;;5435:2;5428:5;5421:17;5475:7;5470:2;5465;5461;5457:11;5453:20;5450:33;5447:53;;;5496:1;5493;5486:12;5447:53;5551:2;5546;5542;5538:11;5533:2;5526:5;5522:14;5509:45;5595:1;5590:2;5585;5578:5;5574:14;5570:23;5563:34;;5616:5;5606:15;;;;;4670:957;;;;;:::o;6263:427::-;6330:6;6338;6391:2;6379:9;6370:7;6366:23;6362:32;6359:52;;;6407:1;6404;6397:12;6359:52;6446:9;6433:23;6465:31;6490:5;6465:31;:::i;:::-;6515:5;-1:-1:-1;6572:2:21;6557:18;;6544:32;6620:18;6607:32;;6595:45;;6585:73;;6654:1;6651;6644:12;6695:477;6844:2;6833:9;6826:21;6807:4;6876:6;6870:13;6919:6;6914:2;6903:9;6899:18;6892:34;6978:6;6973:2;6965:6;6961:15;6956:2;6945:9;6941:18;6935:50;7034:1;7029:2;7020:6;7009:9;7005:22;7001:31;6994:42;7163:2;-1:-1:-1;;7088:2:21;7080:6;7076:15;7072:88;7061:9;7057:104;7053:113;7045:121;;;6695:477;;;;:::o;8123:184::-;8175:77;8172:1;8165:88;8272:4;8269:1;8262:15;8296:4;8293:1;8286:15;8312:125;8377:9;;;8398:10;;;8395:36;;;8411:18;;:::i;8442:184::-;8494:77;8491:1;8484:88;8591:4;8588:1;8581:15;8615:4;8612:1;8605:15;9033:997;9346:3;9335:9;9328:22;9309:4;9373:57;9425:3;9414:9;9410:19;9402:6;9373:57;:::i;:::-;9487:22;;;9449:2;9467:18;;;9460:50;;;;9559:13;;9581:22;;;9657:15;;;;9619;;;9690:1;9700:169;9714:6;9711:1;9708:13;9700:169;;;9775:13;;9763:26;;9844:15;;;;9809:12;;;;9736:1;9729:9;9700:169;;;-1:-1:-1;;9920:2:21;9905:18;;9898:34;;;;-1:-1:-1;;;;;;;;9968:55:21;;;;9963:2;9948:18;;;9941:83;9886:3;9033:997;-1:-1:-1;;9033:997:21:o;10035:956::-;10130:6;10161:2;10204;10192:9;10183:7;10179:23;10175:32;10172:52;;;10220:1;10217;10210:12;10172:52;10253:9;10247:16;10286:18;10278:6;10275:30;10272:50;;;10318:1;10315;10308:12;10272:50;10341:22;;10394:4;10386:13;;10382:27;-1:-1:-1;10372:55:21;;10423:1;10420;10413:12;10372:55;10452:2;10446:9;10475:60;10491:43;10531:2;10491:43;:::i;10475:60::-;10569:15;;;10651:1;10647:10;;;;10639:19;;10635:28;;;10600:12;;;;10675:19;;;10672:39;;;10707:1;10704;10697:12;10672:39;10731:11;;;;10751:210;10767:6;10762:3;10759:15;10751:210;;;10840:3;10834:10;10857:31;10882:5;10857:31;:::i;:::-;10901:18;;10784:12;;;;10939;;;;10751:210;;;10980:5;10035:956;-1:-1:-1;;;;;;;10035:956:21:o;11201:195::-;11240:3;11271:66;11264:5;11261:77;11258:103;;11341:18;;:::i;:::-;-1:-1:-1;11388:1:21;11377:13;;11201:195::o;11615:184::-;11685:6;11738:2;11726:9;11717:7;11713:23;11709:32;11706:52;;;11754:1;11751;11744:12;11706:52;-1:-1:-1;11777:16:21;;11615:184;-1:-1:-1;11615:184:21:o;11804:301::-;11933:3;11971:6;11965:13;12017:6;12010:4;12002:6;11998:17;11993:3;11987:37;12079:1;12043:16;;12068:13;;;-1:-1:-1;12043:16:21;11804:301;-1:-1:-1;11804:301:21:o"},"gasEstimates":{"creation":{"codeDepositCost":"4701200","executionCost":"infinite","totalCost":"infinite"},"external":{"UPGRADE_INTERFACE_VERSION()":"infinite","allPools(uint256)":"4667","createPool(address[],uint256[],uint256)":"infinite","getAllPools()":"infinite","getPool(address,address)":"infinite","getPoolAssets(address)":"infinite","getPoolByAssets(address,address)":"infinite","getPoolsByAsset(address)":"infinite","getPoolsCount()":"2357","initialize(address)":"infinite","owner()":"2364","poolExist(address)":"infinite","proxiableUUID()":"infinite","registry()":"2414","reinitialize(address,uint64)":"78471","renounceOwnership()":"infinite","transferOwnership(address)":"infinite","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite"}},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","allPools(uint256)":"41d1de97","createPool(address[],uint256[],uint256)":"3069873b","getAllPools()":"d88ff1f4","getPool(address,address)":"531aa03e","getPoolAssets(address)":"4276b97b","getPoolByAssets(address,address)":"2d5e94a7","getPoolsByAsset(address)":"b4340e6a","getPoolsCount()":"b4ac6860","initialize(address)":"c4d66de8","owner()":"8da5cb5b","poolExist(address)":"89345efb","proxiableUUID()":"52d1902d","registry()":"7b103999","reinitialize(address,uint64)":"8f2248bc","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"trigger\",\"type\":\"uint256\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPools\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"getPoolAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset2\",\"type\":\"address\"}],\"name\":\"getPoolByAssets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolsByAsset\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_register\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"poolExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IBaluniV1Registry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_register\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_version\",\"type\":\"uint64\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"createPool(address[],uint256[],uint256)\":{\"details\":\"Creates a new BaluniV1Pool contract and registers it in the factory.\",\"params\":{\"assets\":\"The array of asset addresses to be included in the pool.\",\"trigger\":\"The trigger value for rebalancing the pool.\",\"weights\":\"The array of weights corresponding to each asset in the pool.\"},\"returns\":{\"_0\":\"The address of the newly created pool.\"}},\"getAllPools()\":{\"details\":\"Retrieves all the pools created by the factory.\",\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getPoolAssets(address)\":{\"details\":\"Retrieves the assets of a specific pool.\",\"params\":{\"poolAddress\":\"The address of the pool.\"},\"returns\":{\"_0\":\"An array of asset addresses.\"}},\"getPoolByAssets(address,address)\":{\"details\":\"Retrieves the pool address based on the given assets.\",\"params\":{\"asset1\":\"The address of the first asset.\",\"asset2\":\"The address of the second asset.\"},\"returns\":{\"_0\":\"The address of the pool.\"}},\"getPoolsByAsset(address)\":{\"details\":\"Returns an array of pool addresses that contain the specified token.\",\"params\":{\"token\":\"The address of the token to search for.\"},\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getPoolsCount()\":{\"details\":\"Retrieves the number of pools created by the factory.\",\"returns\":{\"_0\":\"The count of pools.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaluniV1PoolFactory.sol\":\"BaluniV1PoolFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"contracts/BaluniV1Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\n\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\nimport '@openzeppelin/contracts/utils/ReentrancyGuard.sol';\\r\\n\\r\\nimport './interfaces/IBaluniV1PoolPeriphery.sol';\\r\\nimport './interfaces/IBaluniV1Registry.sol';\\r\\nimport './interfaces/IBaluniV1Rebalancer.sol';\\r\\nimport './interfaces/IBaluniV1Oracle.sol';\\r\\n\\r\\ncontract BaluniV1Pool is ERC20, ReentrancyGuard {\\r\\n    AssetInfo[] public assetInfos;\\r\\n\\r\\n    uint256 public trigger;\\r\\n    uint256 public ONE;\\r\\n    address public baseAsset;\\r\\n    uint256 private scalingFactor;\\r\\n\\r\\n    IBaluniV1Registry public registry;\\r\\n\\r\\n    struct AssetInfo {\\r\\n        address asset;\\r\\n        uint256 weight;\\r\\n    }\\r\\n\\r\\n    event RebalancePerformed(address indexed by, address[] assets);\\r\\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\\r\\n    event Burn(address indexed user, uint256 sharesBurned);\\r\\n    event Mint(address indexed to, uint256 sharesMinted);\\r\\n    event Swap(\\r\\n        address indexed user,\\r\\n        address indexed fromToken,\\r\\n        address indexed toToken,\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOut\\r\\n    );\\r\\n\\r\\n    constructor(\\r\\n        address[] memory _assets,\\r\\n        uint256[] memory _weights,\\r\\n        uint256 _trigger,\\r\\n        address _registry\\r\\n    ) ERC20('Baluni LP', 'BALUNI-LP') {\\r\\n        registry = IBaluniV1Registry(_registry);\\r\\n\\r\\n        ONE = 1e18;\\r\\n\\r\\n        bool result = initializeAssets(_assets, _weights);\\r\\n        require(result, 'Initialization failed');\\r\\n\\r\\n        trigger = _trigger;\\r\\n\\r\\n        baseAsset = registry.getUSDC();\\r\\n\\r\\n        scalingFactor = 10 ** (18 - 6);\\r\\n\\r\\n        require(baseAsset != address(0), 'Invalid base asset address');\\r\\n\\r\\n        uint256 totalWeight = 0;\\r\\n\\r\\n        for (uint256 i = 0; i < _weights.length; i++) {\\r\\n            totalWeight += _weights[i];\\r\\n        }\\r\\n\\r\\n        require(totalWeight == 10000, 'Invalid weights');\\r\\n    }\\r\\n\\r\\n    modifier onlyPeriphery() {\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n        require(msg.sender == periphery, 'Only Periphery');\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the assets and their weights for the pool.\\r\\n     * @param _assets The array of asset addresses.\\r\\n     * @param _weights The array of weights corresponding to each asset.\\r\\n     */\\r\\n    function initializeAssets(address[] memory _assets, uint256[] memory _weights) internal returns (bool) {\\r\\n        address rebalancer = registry.getBaluniRebalancer();\\r\\n\\r\\n        require(registry.getBaluniRebalancer() != address(0), 'Invalid rebalancer address');\\r\\n        require(_assets.length == _weights.length, 'Assets and weights length mismatch');\\r\\n\\r\\n        for (uint256 i = 0; i < _assets.length; i++) {\\r\\n            require(_assets[i] != address(0), 'Invalid asset address');\\r\\n            require(_weights[i] > 0, 'Invalid weight');\\r\\n\\r\\n            assetInfos.push(AssetInfo({asset: _assets[i], weight: _weights[i]}));\\r\\n\\r\\n            IERC20 asset = IERC20(_assets[i]);\\r\\n            if (asset.allowance(address(this), address(rebalancer)) == 0) {\\r\\n                asset.approve(address(rebalancer), type(uint256).max);\\r\\n            }\\r\\n        }\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\\r\\n     * transferring the calculated amounts from the user to the pool, minting the total added liquidity,\\r\\n     * updating the reserves, and emitting an event to indicate the rebalancing of weights.\\r\\n     * @param receiver The address to receive the minted liquidity tokens.\\r\\n     */\\r\\n    function rebalanceWeights(address receiver) external onlyPeriphery returns (uint256[] memory) {\\r\\n        require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n        (uint256 totalValuation, uint256[] memory valuations) = _computeTotalValuation(); // 6dec\\r\\n\\r\\n        uint256[] memory amountsToAdd = _calculateAmountsToAdd(totalValuation, valuations); // 6dec\\r\\n        uint256 totalAddedLiquidity = _calculateTotalAddedLiquidity(amountsToAdd);\\r\\n\\r\\n        totalAddedLiquidity *= scalingFactor;\\r\\n\\r\\n        uint256[] memory amounts = new uint256[](assetInfos.length);\\r\\n\\r\\n        for (uint256 i = 0; i < amountsToAdd.length; i++) {\\r\\n            if (amountsToAdd[i] > 0) {\\r\\n                amounts[i] = _calculateLiquidity(i, amountsToAdd[i]);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _mint(receiver, totalAddedLiquidity);\\r\\n\\r\\n        emit WeightsRebalanced(msg.sender, amountsToAdd);\\r\\n\\r\\n        return amounts;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - `fromToken` and `toToken` must be different tokens.\\r\\n     * - `amount` must be greater than zero.\\r\\n     * - Sufficient liquidity of `toToken` must be available in the contract.\\r\\n     *\\r\\n     * Emits a `Swap` event with the details of the swap.\\r\\n     *\\r\\n     * Updates the reserves after the swap.\\r\\n     *\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of `fromToken` to swap.\\r\\n     * @param receiver The address to receive the swapped tokens.\\r\\n     * @return amountOut The amount of `toToken` received after the swap.\\r\\n     */\\r\\n    function swap(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external nonReentrant returns (uint256 amountOut) {\\r\\n        uint256 _BPS_FEE = registry.getBPS_FEE();\\r\\n        require(fromToken != toToken, 'Cannot swap the same token');\\r\\n        require(amount > 0, 'Amount must be greater than zero');\\r\\n\\r\\n        uint256 receivedAmount = getAmountOut(fromToken, toToken, amount);\\r\\n        require(getAssetReserve(toToken) >= receivedAmount, 'Insufficient Liquidity');\\r\\n\\r\\n        uint256 fee = (receivedAmount * _BPS_FEE) / 10000;\\r\\n        amountOut = receivedAmount - fee;\\r\\n\\r\\n        require(amountOut > 0, 'Amount to send must be greater than 0');\\r\\n\\r\\n        emit Swap(receiver, fromToken, toToken, amount, amountOut);\\r\\n\\r\\n        return amountOut;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Mints new tokens and adds them to the specified address.\\r\\n     * @param to The address to which the new tokens will be minted.\\r\\n     * @return The amount of tokens minted.\\r\\n     */\\r\\n    function mint(address to, uint256[] memory amounts) external onlyPeriphery returns (uint256) {\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        uint256 totalValue = 0;\\r\\n        uint256[] memory _reserves = getReserves();\\r\\n        require(assetInfos.length == _reserves.length, 'Invalid reserves length');\\r\\n        require(assetInfos.length > 0, 'No assets');\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            address asset = assetInfos[i].asset;\\r\\n            uint256 valuation;\\r\\n            if (asset == baseAsset) {\\r\\n                valuation = amounts[i];\\r\\n                continue;\\r\\n            }\\r\\n            valuation = _convertTokenToBase(asset, amounts[i]);\\r\\n            totalValue += valuation;\\r\\n        }\\r\\n\\r\\n        require(totalValue > 0, 'Total value must be greater than 0');\\r\\n\\r\\n        uint256 toMint;\\r\\n\\r\\n        if (totalSupply == 0) {\\r\\n            toMint = totalValue * scalingFactor;\\r\\n        } else {\\r\\n            (uint256 totalLiquidity, ) = _computeTotalValuation();\\r\\n            require(totalLiquidity > 0, 'Total liquidity must be greater than 0');\\r\\n            toMint = ((totalValue * scalingFactor) * totalSupply) / (totalLiquidity * scalingFactor);\\r\\n        }\\r\\n        require(toMint != 0, 'Mint qty is 0');\\r\\n\\r\\n        _mint(to, toMint);\\r\\n\\r\\n        emit Mint(to, toMint);\\r\\n\\r\\n        return toMint;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Burns the pool tokens and transfers the underlying assets to the specified address.\\r\\n     * @param to The address to transfer the underlying assets to.\\r\\n     * @notice This function can only be called by the periphery contract.\\r\\n     * @notice The pool tokens must have a balance greater than 0.\\r\\n     * @notice The total supply of pool tokens must be greater than 0.\\r\\n     * @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\\r\\n     * @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\\r\\n     * @notice The function checks if the pool has sufficient liquidity before performing any transfers.\\r\\n     * @notice If any transfer fails, the function reverts the entire operation.\\r\\n     * @notice After the transfers, the function updates the reserves of the pool.\\r\\n     * @notice Emits a `Burn` event with the address and share of pool tokens burned.\\r\\n     */\\r\\n    function burn(address to) external onlyPeriphery returns (uint256[] memory) {\\r\\n        uint256 _BPS_FEE = registry.getBPS_FEE();\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n\\r\\n        uint256 share = balanceOf(address(this));\\r\\n        require(share > 0, 'Share must be greater than 0');\\r\\n\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        require(totalSupply > 0, 'No liquidity');\\r\\n\\r\\n        uint256[] memory amounts = new uint256[](assetInfos.length);\\r\\n        uint256 fee = (share * _BPS_FEE) / 10000;\\r\\n        uint256 shareAfterFee = share - fee;\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 assetBalance = IBaluniV1PoolPeriphery(periphery).getAssetReserve(\\r\\n                address(this),\\r\\n                assetInfos[i].asset\\r\\n            );\\r\\n            amounts[i] = (assetBalance * shareAfterFee) / totalSupply;\\r\\n        }\\r\\n\\r\\n        require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient BALUNI liquidity');\\r\\n\\r\\n        address treasury = registry.getTreasury();\\r\\n        bool feeTransferSuccess = IERC20(address(this)).transfer(treasury, fee);\\r\\n        require(feeTransferSuccess, 'Fee transfer failed');\\r\\n\\r\\n        _burn(address(this), shareAfterFee);\\r\\n\\r\\n        emit Burn(to, shareAfterFee);\\r\\n\\r\\n        return amounts;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\\r\\n     * @param fromToken The address of the token being swapped from.\\r\\n     * @param toToken The address of the token being swapped to.\\r\\n     * @param amount The amount of `fromToken` being swapped.\\r\\n     * @return The amount of `toToken` that will be received.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) public view returns (uint256) {\\r\\n        IBaluniV1Oracle baluniOracle = IBaluniV1Oracle(registry.getBaluniOracle());\\r\\n        require(registry.getBaluniOracle() != address(0), 'Invalid oracle address');\\r\\n        uint256 amountOut = baluniOracle.convert(fromToken, toToken, amount);\\r\\n        return amountOut;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance\\r\\n     */\\r\\n    function performRebalanceIfNeeded()\\r\\n        external\\r\\n        onlyPeriphery\\r\\n        returns (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove)\\r\\n    {\\r\\n        require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n        return _performRebalanceIfNeeded();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the deviation between the current weights and target weights of the assets in the pool.\\r\\n     * @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\\r\\n     */\\r\\n    function getDeviation() public view returns (bool[] memory directions, uint256[] memory deviations) {\\r\\n        (uint256 totVal, uint256[] memory valuations) = _computeTotalValuation();\\r\\n        uint256 numAssets = assetInfos.length;\\r\\n\\r\\n        directions = new bool[](numAssets);\\r\\n        deviations = new uint256[](numAssets);\\r\\n\\r\\n        for (uint256 i = 0; i < numAssets; i++) {\\r\\n            uint256 currentWeight = (valuations[i] * 10000) / totVal;\\r\\n            uint256 targetWeight = assetInfos[i].weight;\\r\\n\\r\\n            if (currentWeight > targetWeight) {\\r\\n                deviations[i] = currentWeight - targetWeight;\\r\\n                directions[i] = true;\\r\\n            } else {\\r\\n                deviations[i] = targetWeight - currentWeight;\\r\\n                directions[i] = false;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return (directions, deviations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the liquidity of a specific asset in the pool.\\r\\n     * @param assetIndex The index of the asset.\\r\\n     * @return The liquidity of the asset.\\r\\n     */\\r\\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256) {\\r\\n        (, uint256[] memory usdValuations) = _computeTotalValuation();\\r\\n        require(assetIndex < usdValuations.length, 'Invalid asset index');\\r\\n        return usdValuations[assetIndex];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\\r\\n     * @return totalVal The total valuation of the pool.\\r\\n     * @return valuations An array of individual valuations.\\r\\n     */\\r\\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations) {\\r\\n        (totalVal, valuations) = _computeTotalValuation();\\r\\n        return (totalVal, valuations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the total liquidity of the pool.\\r\\n     * @return The total liquidity of the pool.\\r\\n     */\\r\\n    function liquidity() external view returns (uint256) {\\r\\n        (uint256 totalVal, ) = _computeTotalValuation();\\r\\n        return totalVal;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the unit price of the pool.\\r\\n     * @return The unit price of the pool.\\r\\n     */\\r\\n    function unitPrice() external view returns (uint256) {\\r\\n        uint256 baseDecimal = IERC20Metadata(baseAsset).decimals();\\r\\n        uint256 factor = 10 ** (18 - baseDecimal);\\r\\n        (uint256 totalVal, ) = _computeTotalValuation();\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        if (totalSupply == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        return (((totalVal * factor) / totalSupply) * ONE);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of reserves for each asset in the pool.\\r\\n     * @return An array of reserves.\\r\\n     */\\r\\n    function getReserves() public view returns (uint256[] memory) {\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n        return IBaluniV1PoolPeriphery(periphery).getReserves(address(this));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserve amount of the specified asset.\\r\\n     * @param asset The address of the asset.\\r\\n     * @return The reserve amount of the asset.\\r\\n     */\\r\\n    function getAssetReserve(address asset) public view returns (uint256) {\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n        return IBaluniV1PoolPeriphery(periphery).getAssetReserve(address(this), asset);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the list of assets in the pool.\\r\\n     * @return An array of addresses representing the assets.\\r\\n     */\\r\\n    function getAssets() external view returns (address[] memory) {\\r\\n        address[] memory assets = new address[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            assets[i] = assetInfos[i].asset;\\r\\n        }\\r\\n        return assets;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the list of weights associated with the assets in the pool.\\r\\n     * @return An array of uint256 values representing the weights.\\r\\n     */\\r\\n    function getWeights() external view returns (uint256[] memory) {\\r\\n        uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            weights[i] = assetInfos[i].weight;\\r\\n        }\\r\\n        return weights;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Computes the total valuation of the assets in the pool.\\r\\n     * @return totalValuation The total valuation of the assets.\\r\\n     * @return valuations An array of valuations for each asset in the pool.\\r\\n     */\\r\\n    function _computeTotalValuation() internal view returns (uint256 totalValuation, uint256[] memory valuations) {\\r\\n        uint256 numAssets = assetInfos.length;\\r\\n        valuations = new uint256[](numAssets);\\r\\n        for (uint256 i = 0; i < numAssets; i++) {\\r\\n            address asset = assetInfos[i].asset;\\r\\n            uint256 assetReserve = getAssetReserve(address(asset));\\r\\n\\r\\n            if ((address(asset) == baseAsset)) {\\r\\n                valuations[i] = assetReserve;\\r\\n            } else {\\r\\n                uint256 valuation = _convertTokenToBase(address(asset), assetReserve);\\r\\n                valuations[i] = valuation;\\r\\n            }\\r\\n            totalValuation += valuations[i];\\r\\n        }\\r\\n        return (totalValuation, valuations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed.\\r\\n     * This function retrieves the assets and weights from the `assetInfos` array,\\r\\n     * and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\\r\\n     * It emits a `RebalancePerformed` event after the rebalance is performed.\\r\\n     * @notice This function should only be called internally.\\r\\n     */\\r\\n    function _performRebalanceIfNeeded() internal returns (uint256[] memory, uint256[] memory) {\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n        address rebalancer = registry.getBaluniRebalancer();\\r\\n\\r\\n        address[] memory assets = new address[](assetInfos.length);\\r\\n        uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n        uint256[] memory peripheryBalancesB4 = new uint256[](assetInfos.length);\\r\\n        uint256[] memory peripheryBalancesAfter = new uint256[](assetInfos.length);\\r\\n        uint256[] memory amountsToAdd = new uint256[](assetInfos.length);\\r\\n        uint256[] memory amountsToRemove = new uint256[](assetInfos.length);\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            assets[i] = assetInfos[i].asset;\\r\\n            weights[i] = assetInfos[i].weight;\\r\\n            peripheryBalancesB4[i] = IERC20(assets[i]).balanceOf(periphery);\\r\\n        }\\r\\n\\r\\n        uint256[] memory balances = getReserves();\\r\\n\\r\\n        IBaluniV1Rebalancer(rebalancer).rebalance(balances, assets, weights, trigger, periphery, periphery, baseAsset);\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            peripheryBalancesAfter[i] = IERC20(assets[i]).balanceOf(periphery);\\r\\n\\r\\n            if (peripheryBalancesAfter[i] > peripheryBalancesB4[i]) {\\r\\n                amountsToAdd[i] = peripheryBalancesAfter[i] - peripheryBalancesB4[i];\\r\\n            } else {\\r\\n                amountsToRemove[i] = peripheryBalancesB4[i] - peripheryBalancesAfter[i];\\r\\n            }\\r\\n        }\\r\\n\\r\\n        emit RebalancePerformed(msg.sender, assets);\\r\\n\\r\\n        return (amountsToAdd, amountsToRemove);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the total added liquidity based on the amounts to add.\\r\\n     * @param amountsToAdd An array of amounts to add for each asset.\\r\\n     * @return totalAddedLiquidity The total added liquidity.\\r\\n     */\\r\\n    function _calculateTotalAddedLiquidity(\\r\\n        uint256[] memory amountsToAdd\\r\\n    ) internal view returns (uint256 totalAddedLiquidity) {\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            totalAddedLiquidity += amountsToAdd[i];\\r\\n        }\\r\\n        return totalAddedLiquidity;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\\r\\n     * @param totalValuation The total valuation of the pool.\\r\\n     * @param valuations An array of current valuations for each asset.\\r\\n     * @return amountsToAdd An array of amounts to add to each asset.\\r\\n     */\\r\\n    function _calculateAmountsToAdd(\\r\\n        uint256 totalValuation,\\r\\n        uint256[] memory valuations\\r\\n    ) internal view returns (uint256[] memory amountsToAdd) {\\r\\n        amountsToAdd = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 targetValuation = (totalValuation * assetInfos[i].weight) / 10000;\\r\\n            if (valuations[i] < targetValuation) {\\r\\n                amountsToAdd[i] = targetValuation - valuations[i];\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return amountsToAdd;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\\r\\n     * @param index The index of the asset in the assetInfos array.\\r\\n     * @param amountToAdd The amount of native tokens to add as liquidity.\\r\\n     */\\r\\n    function _calculateLiquidity(uint256 index, uint256 amountToAdd) internal view returns (uint256) {\\r\\n        if (assetInfos[index].asset == baseAsset) return amountToAdd;\\r\\n        uint256 tokenAmount = _convertBaseToToken(assetInfos[index].asset, amountToAdd);\\r\\n        require(tokenAmount > 0, 'Invalid token amount to add');\\r\\n        return tokenAmount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified amount of native token to the corresponding token amount.\\r\\n     * @param toToken The address of the native token to convert from.\\r\\n     * @param amount The amount of native token to convert.\\r\\n     * @return The corresponding token amount.\\r\\n     */\\r\\n    function _convertBaseToToken(address toToken, uint256 amount) internal view returns (uint256) {\\r\\n        return getAmountOut(baseAsset, toToken, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified token to the native token using the rebalancer contract.\\r\\n     * @param fromToken The address of the token to convert from.\\r\\n     * @param amount The amount of tokens to convert.\\r\\n     * @return tokenAmount The converted amount of tokens.\\r\\n     */\\r\\n    function _convertTokenToBase(address fromToken, uint256 amount) internal view returns (uint256 tokenAmount) {\\r\\n        return getAmountOut(fromToken, baseAsset, amount);\\r\\n    }\\r\\n\\r\\n    // return true if one of the deviation overcome the trigger\\r\\n    /**\\r\\n     * @dev Checks if rebalancing is needed for the pool.\\r\\n     * @return A boolean value indicating whether rebalancing is needed or not.\\r\\n     */\\r\\n    function isRebalanceNeeded() public view returns (bool) {\\r\\n        (bool[] memory directions, uint256[] memory deviations) = getDeviation();\\r\\n        for (uint256 i = 0; i < deviations.length; i++) {\\r\\n            if (directions[i] && deviations[i] > trigger) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2c977e2a116eb8f71e61d674d3c7cbacda77f18a9a5a005960ac5cdef7ec8384\",\"license\":\"GNU AGPLv3\"},\"contracts/BaluniV1PoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\nimport './BaluniV1Pool.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\\r\\nimport './interfaces/IBaluniV1Registry.sol';\\r\\n\\r\\ncontract BaluniV1PoolFactory is Initializable, UUPSUpgradeable, OwnableUpgradeable {\\r\\n    address[] public allPools;\\r\\n\\r\\n    IBaluniV1Registry public registry;\\r\\n\\r\\n    mapping(address => mapping(address => address)) public getPool;\\r\\n\\r\\n    event PoolCreated(address indexed pool, address[] assets);\\r\\n\\r\\n    function initialize(address _register) public initializer {\\r\\n        __UUPSUpgradeable_init();\\r\\n        __Ownable_init(msg.sender);\\r\\n        registry = IBaluniV1Registry(_register);\\r\\n    }\\r\\n\\r\\n    function reinitialize(address _register, uint64 _version) public reinitializer(_version) {\\r\\n        registry = IBaluniV1Registry(_register);\\r\\n    }\\r\\n\\r\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\r\\n\\r\\n    /**\\r\\n     * @dev Creates a new BaluniV1Pool contract and registers it in the factory.\\r\\n     * @param assets The array of asset addresses to be included in the pool.\\r\\n     * @param weights The array of weights corresponding to each asset in the pool.\\r\\n     * @param trigger The trigger value for rebalancing the pool.\\r\\n     * @return The address of the newly created pool.\\r\\n     */\\r\\n    function createPool(address[] memory assets, uint256[] memory weights, uint256 trigger) external returns (address) {\\r\\n        require(assets.length > 1, 'At least two assets are required');\\r\\n        require(assets.length == weights.length, 'Assets and weights length mismatch');\\r\\n\\r\\n        for (uint256 i = 0; i < assets.length; i++) {\\r\\n            for (uint256 j = i + 1; j < assets.length; j++) {\\r\\n                require(address(getPool[assets[i]][assets[j]]) == address(0), 'Pool already exists for this pair');\\r\\n            }\\r\\n        }\\r\\n\\r\\n        BaluniV1Pool newPool = new BaluniV1Pool(assets, weights, trigger, address(registry));\\r\\n\\r\\n        address poolAddress = address(newPool);\\r\\n\\r\\n        allPools.push(poolAddress);\\r\\n        for (uint256 i = 0; i < assets.length; i++) {\\r\\n            for (uint256 j = i + 1; j < assets.length; j++) {\\r\\n                getPool[assets[i]][assets[j]] = poolAddress;\\r\\n                getPool[assets[j]][assets[i]] = poolAddress;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        emit PoolCreated(poolAddress, assets);\\r\\n\\r\\n        return poolAddress;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves all the pools created by the factory.\\r\\n     * @return An array of pool addresses.\\r\\n     */\\r\\n    function getAllPools() external view returns (address[] memory) {\\r\\n        return allPools;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the number of pools created by the factory.\\r\\n     * @return The count of pools.\\r\\n     */\\r\\n    function getPoolsCount() external view returns (uint256) {\\r\\n        return allPools.length;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the assets of a specific pool.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @return An array of asset addresses.\\r\\n     */\\r\\n    function getPoolAssets(address poolAddress) external view returns (address[] memory) {\\r\\n        BaluniV1Pool pool = BaluniV1Pool(poolAddress);\\r\\n        return pool.getAssets();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the pool address based on the given assets.\\r\\n     * @param asset1 The address of the first asset.\\r\\n     * @param asset2 The address of the second asset.\\r\\n     * @return The address of the pool.\\r\\n     */\\r\\n    function getPoolByAssets(address asset1, address asset2) external view returns (address) {\\r\\n        return address(getPool[asset1][asset2]);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of pool addresses that contain the specified token.\\r\\n     * @param token The address of the token to search for.\\r\\n     * @return An array of pool addresses.\\r\\n     */\\r\\n    function getPoolsByAsset(address token) external view returns (address[] memory) {\\r\\n        address[] memory pools = new address[](allPools.length);\\r\\n        uint256 count = 0;\\r\\n\\r\\n        for (uint256 i = 0; i < allPools.length; i++) {\\r\\n            BaluniV1Pool pool = BaluniV1Pool(allPools[i]);\\r\\n            address[] memory assets = pool.getAssets();\\r\\n\\r\\n            for (uint256 j = 0; j < assets.length; j++) {\\r\\n                if (assets[j] == token) {\\r\\n                    pools[count] = address(pool);\\r\\n                    count++;\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            if (count == pools.length) {\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        address[] memory result = new address[](count);\\r\\n        for (uint256 i = 0; i < count; i++) {\\r\\n            result[i] = pools[i];\\r\\n        }\\r\\n\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    function poolExist(address _pool) external view returns (bool) {\\r\\n        for (uint256 i = 0; i < allPools.length; i++) {\\r\\n            if (allPools[i] == _pool) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1321c1404f360e3eddbb24fc343ba2d7d3a0bd8091df557d3b3d5a4f9e689124\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Oracle.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Oracle {\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256 valuation);\\r\\n\\r\\n    function convertScaled(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) external view returns (uint256 valuation);\\r\\n}\\r\\n\",\"keccak256\":\"0x2bc62f7640b15a1772de630216f6fe6aa7a719cb6cf0255befdde19ec8de785a\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1PoolPeriphery\\r\\n * @dev Interface for the BaluniV1PoolPeriphery contract.\\r\\n */\\r\\ninterface IBaluniV1PoolPeriphery {\\r\\n    /**\\r\\n     * @dev Swaps tokens in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @param receiver The address of the receiver.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Performs batch swaps between multiple token pairs.\\r\\n     * @param fromTokens An array of addresses representing the tokens to swap from.\\r\\n     * @param toTokens An array of addresses representing the tokens to swap to.\\r\\n     * @param amounts An array of amounts representing the amounts to swap.\\r\\n     * @param receivers An array of addresses representing the receivers of the swapped tokens.\\r\\n     * @return An array of amounts representing the amounts of tokens received after the swaps.\\r\\n     */\\r\\n    function batchSwap(\\r\\n        address[] calldata fromTokens,\\r\\n        address[] calldata toTokens,\\r\\n        uint256[] calldata amounts,\\r\\n        address[] calldata receivers\\r\\n    ) external returns (uint256[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Rebalances weights in a pool.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function rebalanceWeights(address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Adds liquidity to a BaluniV1Pool.\\r\\n     * @param amounts An array of amounts for each asset to add as liquidity.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function addLiquidity(uint256[] memory amounts, address poolAddress, address receiver) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Removes liquidity from a BaluniV1Pool.\\r\\n     * @param share The amount of liquidity tokens to remove.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function removeLiquidity(uint256 share, address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed for the given tokens.\\r\\n     * @param poolAddress The address of the token pool to rebalance.\\r\\n     */\\r\\n    function performRebalanceIfNeeded(address poolAddress) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of pool addresses that contain the given token.\\r\\n     * @param token The address of the token to search for.\\r\\n     * @return An array of pool addresses.\\r\\n     */\\r\\n    function getPoolsContainingToken(address token) external view returns (address[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the version of the contract.\\r\\n     * @return The version string.\\r\\n     */\\r\\n    function getVersion() external view returns (uint64);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserves of the pool.\\r\\n     * @param pool The address of the pool.\\r\\n     * @return An array of reserves.\\r\\n     */\\r\\n    function getReserves(address pool) external view returns (uint256[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserve of a specific asset in a pool.\\r\\n     * @param pool The address of the pool.\\r\\n     * @param asset The address of the asset.\\r\\n     * @return The reserve of the asset.\\r\\n     */\\r\\n    function getAssetReserve(address pool, address asset) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x0d208337a9258876165804a1e3158e005dcdab6f38ced9147d2b05d951a0f54c\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n    struct RebalanceVars {\\r\\n        uint256 length;\\r\\n        uint256 totalValue;\\r\\n        uint256 finalUsdBalance;\\r\\n        uint256 overweightVaultsLength;\\r\\n        uint256 underweightVaultsLength;\\r\\n        uint256 totalActiveWeight;\\r\\n        uint256 amountOut;\\r\\n        uint256[] overweightVaults;\\r\\n        uint256[] overweightAmounts;\\r\\n        uint256[] underweightVaults;\\r\\n        uint256[] underweightAmounts;\\r\\n        uint256[] balances;\\r\\n    }\\r\\n\\r\\n    // Functions\\r\\n    function rebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address receiver,\\r\\n        address baseAsset\\r\\n    ) external;\\r\\n\\r\\n    function checkRebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address baseAsset\\r\\n    ) external view returns (RebalanceVars memory);\\r\\n\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x61c44c9208ab5c5638160706c4737e8032440e73054a90378d0b65559653d57a\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Registry.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1Registry\\r\\n * @dev Interface for the BaluniV1Registry contract.\\r\\n */\\r\\ninterface IBaluniV1Registry {\\r\\n    function setUniswapFactory(address _uniswapFactory) external;\\r\\n\\r\\n    function setUniswapRouter(address _uniswapRouter) external;\\r\\n\\r\\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\\r\\n\\r\\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\\r\\n\\r\\n    function setBaluniSwapper(address _baluniSwapper) external;\\r\\n\\r\\n    function setBaluniOracle(address _baluniOracle) external;\\r\\n\\r\\n    function setBaluniPoolFactory(address _baluniPoolFactory) external;\\r\\n\\r\\n    function setBaluniRebalancer(address _baluniRebalancer) external;\\r\\n\\r\\n    function setBaluniRouter(address _baluniRouter) external;\\r\\n\\r\\n    function setBaluniRegistry(address _baluniRegistry) external;\\r\\n\\r\\n    function setWNATIVE(address _WNATIVE) external;\\r\\n\\r\\n    function setUSDC(address _USDC) external;\\r\\n\\r\\n    function setTreasury(address _treasury) external;\\r\\n\\r\\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\\r\\n\\r\\n    function setBPS_FEE(uint256 __BPS_FEE) external;\\r\\n\\r\\n    function getUniswapFactory() external view returns (address);\\r\\n\\r\\n    function getUniswapRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniSwapper() external view returns (address);\\r\\n\\r\\n    function getBaluniOracle() external view returns (address);\\r\\n\\r\\n    function getBaluniAgentFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolPeriphery() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniRebalancer() external view returns (address);\\r\\n\\r\\n    function getBaluniRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniRegistry() external view returns (address);\\r\\n\\r\\n    function getWNATIVE() external view returns (address);\\r\\n\\r\\n    function getUSDC() external view returns (address);\\r\\n\\r\\n    function get1inchSpotAgg() external view returns (address);\\r\\n\\r\\n    function getBPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getMAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getBPS_BASE() external view returns (uint256);\\r\\n\\r\\n    function getTreasury() external view returns (address);\\r\\n\\r\\n    function setStaticOracle(address _staticOracle) external;\\r\\n\\r\\n    function getStaticOracle() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x846d9e23f2a9579307f6f9b453f9426e1083b2f550bb999315a4abc32a648570\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4038,"contract":"contracts/BaluniV1PoolFactory.sol:BaluniV1PoolFactory","label":"allPools","offset":0,"slot":"0","type":"t_array(t_address)dyn_storage"},{"astId":4041,"contract":"contracts/BaluniV1PoolFactory.sol:BaluniV1PoolFactory","label":"registry","offset":0,"slot":"1","type":"t_contract(IBaluniV1Registry)4898"},{"astId":4047,"contract":"contracts/BaluniV1PoolFactory.sol:BaluniV1PoolFactory","label":"getPool","offset":0,"slot":"2","type":"t_mapping(t_address,t_mapping(t_address,t_address))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_contract(IBaluniV1Registry)4898":{"encoding":"inplace","label":"contract IBaluniV1Registry","numberOfBytes":"20"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_mapping(t_address,t_address))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => address))","numberOfBytes":"32","value":"t_mapping(t_address,t_address)"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Oracle.sol":{"IBaluniV1Oracle":{"abi":[{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convert","outputs":[{"internalType":"uint256","name":"valuation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convertScaled","outputs":[{"internalType":"uint256","name":"valuation","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"convert(address,address,uint256)":"248391ff","convertScaled(address,address,uint256)":"b27b5e75"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valuation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convertScaled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valuation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Oracle.sol\":\"IBaluniV1Oracle\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1Oracle.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Oracle {\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256 valuation);\\r\\n\\r\\n    function convertScaled(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) external view returns (uint256 valuation);\\r\\n}\\r\\n\",\"keccak256\":\"0x2bc62f7640b15a1772de630216f6fe6aa7a719cb6cf0255befdde19ec8de785a\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1PoolPeriphery.sol":{"IBaluniV1PoolPeriphery":{"abi":[{"inputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address","name":"poolAddress","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"name":"addLiquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"fromTokens","type":"address[]"},{"internalType":"address[]","name":"toTokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address[]","name":"receivers","type":"address[]"}],"name":"batchSwap","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getPoolsContainingToken","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getReserves","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVersion","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"}],"name":"performRebalanceIfNeeded","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"name":"rebalanceWeights","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"share","type":"uint256"},{"internalType":"address","name":"poolAddress","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"name":"removeLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the BaluniV1PoolPeriphery contract.","kind":"dev","methods":{"addLiquidity(uint256[],address,address)":{"details":"Adds liquidity to a BaluniV1Pool.","params":{"amounts":"An array of amounts for each asset to add as liquidity.","poolAddress":"The address of the pool.","receiver":"The address of the receiver."}},"batchSwap(address[],address[],uint256[],address[])":{"details":"Performs batch swaps between multiple token pairs.","params":{"amounts":"An array of amounts representing the amounts to swap.","fromTokens":"An array of addresses representing the tokens to swap from.","receivers":"An array of addresses representing the receivers of the swapped tokens.","toTokens":"An array of addresses representing the tokens to swap to."},"returns":{"_0":"An array of amounts representing the amounts of tokens received after the swaps."}},"getAmountOut(address,address,uint256)":{"details":"Gets the amount of tokens received after a swap in a BaluniV1Pool.","params":{"amount":"The amount of tokens to swap.","fromToken":"The address of the token to swap from.","toToken":"The address of the token to swap to."},"returns":{"_0":"The amount of tokens received after the swap."}},"getAssetReserve(address,address)":{"details":"Returns the reserve of a specific asset in a pool.","params":{"asset":"The address of the asset.","pool":"The address of the pool."},"returns":{"_0":"The reserve of the asset."}},"getPoolsContainingToken(address)":{"details":"Returns an array of pool addresses that contain the given token.","params":{"token":"The address of the token to search for."},"returns":{"_0":"An array of pool addresses."}},"getReserves(address)":{"details":"Returns the reserves of the pool.","params":{"pool":"The address of the pool."},"returns":{"_0":"An array of reserves."}},"getVersion()":{"details":"Returns the version of the contract.","returns":{"_0":"The version string."}},"performRebalanceIfNeeded(address)":{"details":"Performs rebalance if needed for the given tokens.","params":{"poolAddress":"The address of the token pool to rebalance."}},"rebalanceWeights(address,address)":{"details":"Rebalances weights in a pool.","params":{"poolAddress":"The address of the pool.","receiver":"The address of the receiver."}},"removeLiquidity(uint256,address,address)":{"details":"Removes liquidity from a BaluniV1Pool.","params":{"poolAddress":"The address of the pool.","receiver":"The address of the receiver.","share":"The amount of liquidity tokens to remove."}},"swap(address,address,uint256,address)":{"details":"Swaps tokens in a BaluniV1Pool.","params":{"amount":"The amount of tokens to swap.","fromToken":"The address of the token to swap from.","receiver":"The address of the receiver.","toToken":"The address of the token to swap to."},"returns":{"_0":"The amount of tokens received after the swap."}}},"title":"IBaluniV1PoolPeriphery","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"addLiquidity(uint256[],address,address)":"ec0cd2eb","batchSwap(address[],address[],uint256[],address[])":"e74e9b06","getAmountOut(address,address,uint256)":"4aa06652","getAssetReserve(address,address)":"a3e113fb","getPoolsContainingToken(address)":"ae3cce1c","getReserves(address)":"3e99c1e4","getVersion()":"0d8e6e2c","performRebalanceIfNeeded(address)":"5568081a","rebalanceWeights(address,address)":"ad414263","removeLiquidity(uint256,address,address)":"f31abcc4","swap(address,address,uint256,address)":"6e81221c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"fromTokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"toTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolsContainingToken\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"performRebalanceIfNeeded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"rebalanceWeights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the BaluniV1PoolPeriphery contract.\",\"kind\":\"dev\",\"methods\":{\"addLiquidity(uint256[],address,address)\":{\"details\":\"Adds liquidity to a BaluniV1Pool.\",\"params\":{\"amounts\":\"An array of amounts for each asset to add as liquidity.\",\"poolAddress\":\"The address of the pool.\",\"receiver\":\"The address of the receiver.\"}},\"batchSwap(address[],address[],uint256[],address[])\":{\"details\":\"Performs batch swaps between multiple token pairs.\",\"params\":{\"amounts\":\"An array of amounts representing the amounts to swap.\",\"fromTokens\":\"An array of addresses representing the tokens to swap from.\",\"receivers\":\"An array of addresses representing the receivers of the swapped tokens.\",\"toTokens\":\"An array of addresses representing the tokens to swap to.\"},\"returns\":{\"_0\":\"An array of amounts representing the amounts of tokens received after the swaps.\"}},\"getAmountOut(address,address,uint256)\":{\"details\":\"Gets the amount of tokens received after a swap in a BaluniV1Pool.\",\"params\":{\"amount\":\"The amount of tokens to swap.\",\"fromToken\":\"The address of the token to swap from.\",\"toToken\":\"The address of the token to swap to.\"},\"returns\":{\"_0\":\"The amount of tokens received after the swap.\"}},\"getAssetReserve(address,address)\":{\"details\":\"Returns the reserve of a specific asset in a pool.\",\"params\":{\"asset\":\"The address of the asset.\",\"pool\":\"The address of the pool.\"},\"returns\":{\"_0\":\"The reserve of the asset.\"}},\"getPoolsContainingToken(address)\":{\"details\":\"Returns an array of pool addresses that contain the given token.\",\"params\":{\"token\":\"The address of the token to search for.\"},\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getReserves(address)\":{\"details\":\"Returns the reserves of the pool.\",\"params\":{\"pool\":\"The address of the pool.\"},\"returns\":{\"_0\":\"An array of reserves.\"}},\"getVersion()\":{\"details\":\"Returns the version of the contract.\",\"returns\":{\"_0\":\"The version string.\"}},\"performRebalanceIfNeeded(address)\":{\"details\":\"Performs rebalance if needed for the given tokens.\",\"params\":{\"poolAddress\":\"The address of the token pool to rebalance.\"}},\"rebalanceWeights(address,address)\":{\"details\":\"Rebalances weights in a pool.\",\"params\":{\"poolAddress\":\"The address of the pool.\",\"receiver\":\"The address of the receiver.\"}},\"removeLiquidity(uint256,address,address)\":{\"details\":\"Removes liquidity from a BaluniV1Pool.\",\"params\":{\"poolAddress\":\"The address of the pool.\",\"receiver\":\"The address of the receiver.\",\"share\":\"The amount of liquidity tokens to remove.\"}},\"swap(address,address,uint256,address)\":{\"details\":\"Swaps tokens in a BaluniV1Pool.\",\"params\":{\"amount\":\"The amount of tokens to swap.\",\"fromToken\":\"The address of the token to swap from.\",\"receiver\":\"The address of the receiver.\",\"toToken\":\"The address of the token to swap to.\"},\"returns\":{\"_0\":\"The amount of tokens received after the swap.\"}}},\"title\":\"IBaluniV1PoolPeriphery\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":\"IBaluniV1PoolPeriphery\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1PoolPeriphery\\r\\n * @dev Interface for the BaluniV1PoolPeriphery contract.\\r\\n */\\r\\ninterface IBaluniV1PoolPeriphery {\\r\\n    /**\\r\\n     * @dev Swaps tokens in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @param receiver The address of the receiver.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Performs batch swaps between multiple token pairs.\\r\\n     * @param fromTokens An array of addresses representing the tokens to swap from.\\r\\n     * @param toTokens An array of addresses representing the tokens to swap to.\\r\\n     * @param amounts An array of amounts representing the amounts to swap.\\r\\n     * @param receivers An array of addresses representing the receivers of the swapped tokens.\\r\\n     * @return An array of amounts representing the amounts of tokens received after the swaps.\\r\\n     */\\r\\n    function batchSwap(\\r\\n        address[] calldata fromTokens,\\r\\n        address[] calldata toTokens,\\r\\n        uint256[] calldata amounts,\\r\\n        address[] calldata receivers\\r\\n    ) external returns (uint256[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Rebalances weights in a pool.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function rebalanceWeights(address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Adds liquidity to a BaluniV1Pool.\\r\\n     * @param amounts An array of amounts for each asset to add as liquidity.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function addLiquidity(uint256[] memory amounts, address poolAddress, address receiver) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Removes liquidity from a BaluniV1Pool.\\r\\n     * @param share The amount of liquidity tokens to remove.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function removeLiquidity(uint256 share, address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed for the given tokens.\\r\\n     * @param poolAddress The address of the token pool to rebalance.\\r\\n     */\\r\\n    function performRebalanceIfNeeded(address poolAddress) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of pool addresses that contain the given token.\\r\\n     * @param token The address of the token to search for.\\r\\n     * @return An array of pool addresses.\\r\\n     */\\r\\n    function getPoolsContainingToken(address token) external view returns (address[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the version of the contract.\\r\\n     * @return The version string.\\r\\n     */\\r\\n    function getVersion() external view returns (uint64);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserves of the pool.\\r\\n     * @param pool The address of the pool.\\r\\n     * @return An array of reserves.\\r\\n     */\\r\\n    function getReserves(address pool) external view returns (uint256[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserve of a specific asset in a pool.\\r\\n     * @param pool The address of the pool.\\r\\n     * @param asset The address of the asset.\\r\\n     * @return The reserve of the asset.\\r\\n     */\\r\\n    function getAssetReserve(address pool, address asset) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x0d208337a9258876165804a1e3158e005dcdab6f38ced9147d2b05d951a0f54c\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"IBaluniV1Rebalancer":{"abi":[{"inputs":[{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"checkRebalance","outputs":[{"components":[{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"uint256","name":"totalValue","type":"uint256"},{"internalType":"uint256","name":"finalUsdBalance","type":"uint256"},{"internalType":"uint256","name":"overweightVaultsLength","type":"uint256"},{"internalType":"uint256","name":"underweightVaultsLength","type":"uint256"},{"internalType":"uint256","name":"totalActiveWeight","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256[]","name":"overweightVaults","type":"uint256[]"},{"internalType":"uint256[]","name":"overweightAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"underweightVaults","type":"uint256[]"},{"internalType":"uint256[]","name":"underweightAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"}],"internalType":"struct IBaluniV1Rebalancer.RebalanceVars","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convert","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"rebalance","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkRebalance(uint256[],address[],uint256[],uint256,address,address)":"997146f5","convert(address,address,uint256)":"248391ff","rebalance(uint256[],address[],uint256[],uint256,address,address,address)":"f0bf7714"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"checkRebalance\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalUsdBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overweightVaultsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underweightVaultsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalActiveWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"overweightVaults\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"overweightAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underweightVaults\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underweightAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IBaluniV1Rebalancer.RebalanceVars\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Rebalancer.sol\":\"IBaluniV1Rebalancer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n    struct RebalanceVars {\\r\\n        uint256 length;\\r\\n        uint256 totalValue;\\r\\n        uint256 finalUsdBalance;\\r\\n        uint256 overweightVaultsLength;\\r\\n        uint256 underweightVaultsLength;\\r\\n        uint256 totalActiveWeight;\\r\\n        uint256 amountOut;\\r\\n        uint256[] overweightVaults;\\r\\n        uint256[] overweightAmounts;\\r\\n        uint256[] underweightVaults;\\r\\n        uint256[] underweightAmounts;\\r\\n        uint256[] balances;\\r\\n    }\\r\\n\\r\\n    // Functions\\r\\n    function rebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address receiver,\\r\\n        address baseAsset\\r\\n    ) external;\\r\\n\\r\\n    function checkRebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address baseAsset\\r\\n    ) external view returns (RebalanceVars memory);\\r\\n\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x61c44c9208ab5c5638160706c4737e8032440e73054a90378d0b65559653d57a\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Registry.sol":{"IBaluniV1Registry":{"abi":[{"inputs":[],"name":"get1inchSpotAgg","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBPS_BASE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniAgentFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniPoolFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniPoolPeriphery","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniRebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniSwapper","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMAX_BPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStaticOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTreasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUSDC","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUniswapFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUniswapRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWNATIVE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"__1inchSpotAgg","type":"address"}],"name":"set1inchSpotAgg","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"__BPS_FEE","type":"uint256"}],"name":"setBPS_FEE","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniAgentFactory","type":"address"}],"name":"setBaluniAgentFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniOracle","type":"address"}],"name":"setBaluniOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniPoolFactory","type":"address"}],"name":"setBaluniPoolFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniPoolPeriphery","type":"address"}],"name":"setBaluniPoolPeriphery","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniRebalancer","type":"address"}],"name":"setBaluniRebalancer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniRegistry","type":"address"}],"name":"setBaluniRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniRouter","type":"address"}],"name":"setBaluniRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniSwapper","type":"address"}],"name":"setBaluniSwapper","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_staticOracle","type":"address"}],"name":"setStaticOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_treasury","type":"address"}],"name":"setTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_USDC","type":"address"}],"name":"setUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_uniswapFactory","type":"address"}],"name":"setUniswapFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_uniswapRouter","type":"address"}],"name":"setUniswapRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_WNATIVE","type":"address"}],"name":"setWNATIVE","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the BaluniV1Registry contract.","kind":"dev","methods":{},"title":"IBaluniV1Registry","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"get1inchSpotAgg()":"8e1c3a8a","getBPS_BASE()":"4f4608a2","getBPS_FEE()":"85462d6f","getBaluniAgentFactory()":"f5d2d998","getBaluniOracle()":"bb3ba04c","getBaluniPoolFactory()":"7c6fd308","getBaluniPoolPeriphery()":"1acb6141","getBaluniRebalancer()":"cff49d68","getBaluniRegistry()":"c9aba8ae","getBaluniRouter()":"04cc7325","getBaluniSwapper()":"82755ebb","getMAX_BPS_FEE()":"9380fb6f","getStaticOracle()":"a5d2236f","getTreasury()":"3b19e84a","getUSDC()":"1bf01e9b","getUniswapFactory()":"3e6dfa36","getUniswapRouter()":"524900b5","getWNATIVE()":"6c9c0078","set1inchSpotAgg(address)":"c08f786b","setBPS_FEE(uint256)":"9e6453f8","setBaluniAgentFactory(address)":"f1dccde7","setBaluniOracle(address)":"f5b84f64","setBaluniPoolFactory(address)":"8267c2c8","setBaluniPoolPeriphery(address)":"588c5b70","setBaluniRebalancer(address)":"0241bffa","setBaluniRegistry(address)":"6c43274c","setBaluniRouter(address)":"400fb668","setBaluniSwapper(address)":"c3f5df5c","setStaticOracle(address)":"cc01e9a6","setTreasury(address)":"f0f44260","setUSDC(address)":"b3e089a2","setUniswapFactory(address)":"e04b677f","setUniswapRouter(address)":"bea9849e","setWNATIVE(address)":"b6fe9cc7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"get1inchSpotAgg\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBPS_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniAgentFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniPoolFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniPoolPeriphery\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniRebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniSwapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMAX_BPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStaticOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUSDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUniswapFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUniswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWNATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"__1inchSpotAgg\",\"type\":\"address\"}],\"name\":\"set1inchSpotAgg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__BPS_FEE\",\"type\":\"uint256\"}],\"name\":\"setBPS_FEE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniAgentFactory\",\"type\":\"address\"}],\"name\":\"setBaluniAgentFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniOracle\",\"type\":\"address\"}],\"name\":\"setBaluniOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniPoolFactory\",\"type\":\"address\"}],\"name\":\"setBaluniPoolFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniPoolPeriphery\",\"type\":\"address\"}],\"name\":\"setBaluniPoolPeriphery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniRebalancer\",\"type\":\"address\"}],\"name\":\"setBaluniRebalancer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniRegistry\",\"type\":\"address\"}],\"name\":\"setBaluniRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniRouter\",\"type\":\"address\"}],\"name\":\"setBaluniRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniSwapper\",\"type\":\"address\"}],\"name\":\"setBaluniSwapper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staticOracle\",\"type\":\"address\"}],\"name\":\"setStaticOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_USDC\",\"type\":\"address\"}],\"name\":\"setUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapFactory\",\"type\":\"address\"}],\"name\":\"setUniswapFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapRouter\",\"type\":\"address\"}],\"name\":\"setUniswapRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_WNATIVE\",\"type\":\"address\"}],\"name\":\"setWNATIVE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the BaluniV1Registry contract.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IBaluniV1Registry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Registry.sol\":\"IBaluniV1Registry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1Registry.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1Registry\\r\\n * @dev Interface for the BaluniV1Registry contract.\\r\\n */\\r\\ninterface IBaluniV1Registry {\\r\\n    function setUniswapFactory(address _uniswapFactory) external;\\r\\n\\r\\n    function setUniswapRouter(address _uniswapRouter) external;\\r\\n\\r\\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\\r\\n\\r\\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\\r\\n\\r\\n    function setBaluniSwapper(address _baluniSwapper) external;\\r\\n\\r\\n    function setBaluniOracle(address _baluniOracle) external;\\r\\n\\r\\n    function setBaluniPoolFactory(address _baluniPoolFactory) external;\\r\\n\\r\\n    function setBaluniRebalancer(address _baluniRebalancer) external;\\r\\n\\r\\n    function setBaluniRouter(address _baluniRouter) external;\\r\\n\\r\\n    function setBaluniRegistry(address _baluniRegistry) external;\\r\\n\\r\\n    function setWNATIVE(address _WNATIVE) external;\\r\\n\\r\\n    function setUSDC(address _USDC) external;\\r\\n\\r\\n    function setTreasury(address _treasury) external;\\r\\n\\r\\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\\r\\n\\r\\n    function setBPS_FEE(uint256 __BPS_FEE) external;\\r\\n\\r\\n    function getUniswapFactory() external view returns (address);\\r\\n\\r\\n    function getUniswapRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniSwapper() external view returns (address);\\r\\n\\r\\n    function getBaluniOracle() external view returns (address);\\r\\n\\r\\n    function getBaluniAgentFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolPeriphery() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniRebalancer() external view returns (address);\\r\\n\\r\\n    function getBaluniRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniRegistry() external view returns (address);\\r\\n\\r\\n    function getWNATIVE() external view returns (address);\\r\\n\\r\\n    function getUSDC() external view returns (address);\\r\\n\\r\\n    function get1inchSpotAgg() external view returns (address);\\r\\n\\r\\n    function getBPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getMAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getBPS_BASE() external view returns (uint256);\\r\\n\\r\\n    function getTreasury() external view returns (address);\\r\\n\\r\\n    function setStaticOracle(address _staticOracle) external;\\r\\n\\r\\n    function getStaticOracle() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x846d9e23f2a9579307f6f9b453f9426e1083b2f550bb999315a4abc32a648570\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}