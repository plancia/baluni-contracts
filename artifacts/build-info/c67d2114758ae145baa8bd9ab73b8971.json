{"id":"c67d2114758ae145baa8bd9ab73b8971","_format":"hh-sol-build-info-1","solcVersion":"0.8.25","solcLongVersion":"0.8.25+commit.b61c2a91","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/BaluniV1PoolPeriphery.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n/**\r\n *  __                  __                      __\r\n * /  |                /  |                    /  |\r\n * $$ |____    ______  $$ | __    __  _______  $$/\r\n * $$      \\  /      \\ $$ |/  |  /  |/       \\ /  |\r\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\r\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\r\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\__$$ |$$ |  $$ |$$ |\r\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\r\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\r\n *\r\n *\r\n *                  ,-\"\"\"\"-.\r\n *                ,'      _ `.\r\n *               /       )_)  \\\r\n *              :              :\r\n *              \\              /\r\n *               \\            /\r\n *                `.        ,'\r\n *                  `.    ,'\r\n *                    `.,'\r\n *                     /\\`.   ,-._\r\n *                         `-'    \\__\r\n *                              .\r\n *               s                \\\r\n *                                \\\\\r\n *                                 \\\\\r\n *                                  >\\/7\r\n *                              _.-(6'  \\\r\n *                             (=___._/` \\\r\n *                                  )  \\ |\r\n *                                 /   / |\r\n *                                /    > /\r\n *                               j    < _\\\r\n *                           _.-' :      ``.\r\n *                           \\ r=._\\        `.\r\n */\r\nimport './interfaces/IBaluniV1PoolFactory.sol';\r\nimport './interfaces/IBaluniV1Pool.sol';\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\r\n\r\n/**\r\n * @title BaluniV1PoolPeriphery\r\n * @dev This contract serves as the periphery contract for interacting with BaluniV1Pool contracts.\r\n * It provides functions for swapping tokens, adding liquidity, removing liquidity, and getting the amount out for a given swap.\r\n */\r\ncontract BaluniV1PoolPeriphery is Initializable, OwnableUpgradeable, UUPSUpgradeable {\r\n    IBaluniV1PoolFactory public poolFactory;\r\n\r\n    mapping(address => mapping(address => uint256)) public poolsReserves; // Mapping of token address to pool addresses (for quick lookup\r\n\r\n    /**\r\n     * @dev Initializes the contract by setting the pool factory address.\r\n     * @param _poolFactory The address of the BaluniV1PoolFactory contract.\r\n     */\r\n    function initialize(address _poolFactory) public initializer {\r\n        __UUPSUpgradeable_init();\r\n        __Ownable_init(msg.sender);\r\n        poolFactory = IBaluniV1PoolFactory(_poolFactory);\r\n    }\r\n\r\n    /**\r\n     * @dev Initializes the contract by setting the pool factory address.\r\n     * @param _poolFactory The address of the BaluniV1PoolFactory contract.\r\n     */\r\n    function reinitialize(address _poolFactory, uint64 version) public reinitializer(version) {\r\n        poolFactory = IBaluniV1PoolFactory(_poolFactory);\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to authorize an upgrade to a new implementation contract.\r\n     * @param newImplementation The address of the new implementation contract.\r\n     * @notice This function can only be called by the contract owner.\r\n     */\r\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\r\n\r\n    /**\r\n     * @dev Swaps tokens in a BaluniV1Pool.\r\n     * @param fromToken The address of the token to swap from.\r\n     * @param toToken The address of the token to swap to.\r\n     * @param amount The amount of tokens to swap.\r\n     * @return The amount of tokens received after the swap.\r\n     */\r\n    function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256) {\r\n        require(amount > 0, 'Amount must be greater than zero');\r\n\r\n        address poolAddress = poolFactory.getPoolByAssets(fromToken, toToken);\r\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\r\n\r\n        IERC20(fromToken).transferFrom(msg.sender, address(this), amount);\r\n\r\n        uint256 toSend = pool.swap(fromToken, toToken, amount, receiver);\r\n\r\n        poolsReserves[poolAddress][fromToken] += amount;\r\n        poolsReserves[poolAddress][toToken] -= toSend;\r\n\r\n        IERC20(toToken).transfer(receiver, toSend);\r\n\r\n        return toSend;\r\n    }\r\n\r\n    /**\r\n     * @dev Performs batch swaps between multiple token pairs.\r\n     * @param fromTokens An array of addresses representing the tokens to swap from.\r\n     * @param toTokens An array of addresses representing the tokens to swap to.\r\n     * @param amounts An array of amounts representing the amounts to swap.\r\n     * @param receivers An array of addresses representing the receivers of the swapped tokens.\r\n     * @return An array of amounts representing the amounts of tokens received after the swaps.\r\n     */\r\n    function batchSwap(\r\n        address[] calldata fromTokens,\r\n        address[] calldata toTokens,\r\n        uint256[] calldata amounts,\r\n        address[] calldata receivers\r\n    ) external returns (uint256[] memory) {\r\n        require(\r\n            fromTokens.length == toTokens.length &&\r\n                toTokens.length == amounts.length &&\r\n                amounts.length == receivers.length,\r\n            'Input arrays length mismatch'\r\n        );\r\n\r\n        uint256[] memory amountsOut = new uint256[](fromTokens.length);\r\n\r\n        for (uint256 i = 0; i < fromTokens.length; i++) {\r\n            require(amounts[i] > 0, 'Amount must be greater than zero');\r\n            address poolAddress = poolFactory.getPoolByAssets(fromTokens[i], toTokens[i]);\r\n            IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\r\n            IERC20(fromTokens[i]).transferFrom(msg.sender, address(this), amounts[i]);\r\n            uint256 amountOut = pool.swap(fromTokens[i], toTokens[i], amounts[i], receivers[i]);\r\n            poolsReserves[poolAddress][fromTokens[i]] += amounts[i];\r\n            poolsReserves[poolAddress][toTokens[i]] -= amountOut;\r\n            IERC20(toTokens[i]).transfer(receivers[i], amountOut);\r\n        }\r\n\r\n        return amountsOut;\r\n    }\r\n\r\n    function rebalanceWeights(address receiver, address poolAddress) external {\r\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\r\n        uint256[] memory amounts = pool.rebalanceWeights(receiver);\r\n        address[] memory assets = pool.getAssets();\r\n        for (uint256 i = 0; i < assets.length; i++) {\r\n            poolsReserves[poolAddress][assets[i]] += amounts[i];\r\n            IERC20(assets[i]).transferFrom(receiver, address(this), amounts[i]);\r\n        }\r\n    }\r\n\r\n    function smartSwap(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount,\r\n        address receiver\r\n    ) external returns (uint256) {\r\n        require(amount > 0, 'Amount must be greater than zero');\r\n\r\n        address[] memory pools = _findOptimalRoute(fromToken, toToken, amount);\r\n        require(pools.length > 0, 'No route found');\r\n\r\n        IERC20(fromToken).transferFrom(msg.sender, address(this), amount);\r\n\r\n        uint256 amountRemaining = amount;\r\n        address currentToken = fromToken;\r\n        for (uint256 i = 0; i < pools.length; i++) {\r\n            IBaluniV1Pool pool = IBaluniV1Pool(pools[i]);\r\n            address[] memory poolTokens = pool.getAssets();\r\n            uint256[] memory reserves = getReserves(pools[i]);\r\n\r\n            address nextToken;\r\n            for (uint256 j = 0; j < poolTokens.length; j++) {\r\n                if (poolTokens[j] != currentToken && reserves[j] > 0) {\r\n                    nextToken = poolTokens[j];\r\n                    break;\r\n                }\r\n            }\r\n\r\n            require(nextToken != address(0), 'No valid next token found');\r\n            require(pool.getAssetReserve(nextToken) >= amountRemaining, 'Insufficient liquidity in pool for swap');\r\n\r\n            uint256 amountOut = pool.swap(\r\n                currentToken,\r\n                nextToken,\r\n                amountRemaining,\r\n                i == pools.length - 1 ? receiver : address(this)\r\n            );\r\n\r\n            poolsReserves[pools[i]][currentToken] += amountRemaining;\r\n            poolsReserves[pools[i]][nextToken] -= amountOut;\r\n\r\n            currentToken = nextToken;\r\n            amountRemaining = amountOut;\r\n        }\r\n\r\n        return amountRemaining;\r\n    }\r\n\r\n    function _findOptimalRoute(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount\r\n    ) internal view returns (address[] memory) {\r\n        address[] memory allPools = poolFactory.getAllPools();\r\n        uint256 poolCount = allPools.length;\r\n\r\n        address[] memory path = new address[](poolCount);\r\n        uint256 pathLength = 0;\r\n        bool[] memory visited = new bool[](poolCount);\r\n\r\n        address[] memory queue = new address[](poolCount);\r\n        uint256 queueHead = 0;\r\n        uint256 queueTail = 0;\r\n\r\n        queue[queueTail++] = fromToken;\r\n\r\n        while (queueHead < queueTail) {\r\n            address currentToken = queue[queueHead++];\r\n            if (currentToken == toToken) {\r\n                address[] memory finalPath = new address[](pathLength);\r\n                for (uint256 i = 0; i < pathLength; i++) {\r\n                    finalPath[i] = path[i];\r\n                }\r\n                return finalPath;\r\n            }\r\n\r\n            for (uint256 i = 0; i < poolCount; i++) {\r\n                if (!visited[i]) {\r\n                    IBaluniV1Pool pool = IBaluniV1Pool(allPools[i]);\r\n                    address[] memory poolTokens = pool.getAssets();\r\n\r\n                    if (\r\n                        _containsToken(poolTokens, currentToken) && _hasSufficientLiquidity(pool, currentToken, amount)\r\n                    ) {\r\n                        address nextToken = _getOtherTokenInPool(poolTokens, currentToken);\r\n                        path[pathLength++] = allPools[i];\r\n                        queue[queueTail++] = nextToken;\r\n                        visited[i] = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        address[] memory addr = new address[](0);\r\n        return addr;\r\n    }\r\n\r\n    function _containsToken(address[] memory tokens, address token) internal pure returns (bool) {\r\n        for (uint256 i = 0; i < tokens.length; i++) {\r\n            if (tokens[i] == token) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function _hasSufficientLiquidity(IBaluniV1Pool pool, address token, uint256 amount) internal view returns (bool) {\r\n        uint256[] memory reserves = getReserves(address(pool));\r\n        address[] memory assets = pool.getAssets();\r\n        for (uint256 i = 0; i < assets.length; i++) {\r\n            if (assets[i] == token) {\r\n                return reserves[i] >= amount;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function _getOtherTokenInPool(address[] memory tokens, address token) internal pure returns (address) {\r\n        for (uint256 i = 0; i < tokens.length; i++) {\r\n            if (tokens[i] != token) {\r\n                return tokens[i];\r\n            }\r\n        }\r\n        revert('Token not found in pool');\r\n    }\r\n\r\n    /**\r\n     * @dev Adds liquidity to a BaluniV1Pool.\r\n     * @param amounts An array of amounts for each asset to add as liquidity.\r\n     */\r\n    function addLiquidity(uint256[] calldata amounts, address poolAddress, address receiver) external {\r\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\r\n        address[] memory assets = pool.getAssets();\r\n\r\n        for (uint256 i = 0; i < assets.length; i++) {\r\n            address asset = assets[i];\r\n            uint256 amount = amounts[i];\r\n            poolsReserves[poolAddress][asset] += amount;\r\n            IERC20(asset).transferFrom(msg.sender, address(this), amount);\r\n        }\r\n\r\n        pool.mint(receiver, amounts);\r\n    }\r\n\r\n    /**\r\n     * @dev Removes liquidity from a BaluniV1Pool.\r\n     * @param share The amount of liquidity tokens to remove.\r\n     * @param poolAddress The address of the BaluniV1Pool.\r\n     */\r\n    function removeLiquidity(uint256 share, address poolAddress, address receiver) external {\r\n        require(share > 0, 'Share must be greater than zero');\r\n        IERC20 poolToken = IERC20(poolAddress);\r\n\r\n        // Check allowance\r\n        uint256 allowance = poolToken.allowance(msg.sender, address(this));\r\n        require(allowance >= share, 'Insufficient allowance');\r\n\r\n        // Check balance\r\n        uint256 balance = poolToken.balanceOf(msg.sender);\r\n        require(balance >= share, 'Insufficient balance');\r\n\r\n        bool success = poolToken.transferFrom(msg.sender, poolAddress, share);\r\n        require(success, 'TransferFrom failed');\r\n\r\n        // bool success2 = poolToken.transfer(poolAddress, share);\r\n        // require(success2, 'Transfer failed');\r\n\r\n        uint256[] memory amountsOut = IBaluniV1Pool(poolAddress).burn(receiver);\r\n        address[] memory assets = IBaluniV1Pool(poolAddress).getAssets();\r\n\r\n        for (uint256 i = 0; i < assets.length; i++) {\r\n            require(IERC20(assets[i]).balanceOf(address(this)) >= amountsOut[i], 'Insufficient Liquidity');\r\n            poolsReserves[poolAddress][assets[i]] -= amountsOut[i];\r\n            bool assetTransferSuccess = IERC20(assets[i]).transfer(receiver, amountsOut[i]);\r\n            require(assetTransferSuccess, 'Asset transfer failed');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\r\n     * @param fromToken The address of the token to swap from.\r\n     * @param toToken The address of the token to swap to.\r\n     * @param amount The amount of tokens to swap.\r\n     * @return The amount of tokens received after the swap.\r\n     */\r\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256) {\r\n        address poolAddress = poolFactory.getPoolByAssets(fromToken, toToken);\r\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\r\n        return pool.getAmountOut(fromToken, toToken, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Performs rebalance if needed for the given tokens.\r\n     * @param poolAddress The address of the token pool to rebalance.\r\n     */\r\n    function performRebalanceIfNeeded(address poolAddress) external {\r\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\r\n        uint256 balance = IERC20(poolAddress).balanceOf(msg.sender);\r\n        uint256 totalSupply = IERC20(poolAddress).totalSupply();\r\n        require((balance * 10000) / totalSupply >= 100, 'Insufficient balance');\r\n        (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove) = pool.performRebalanceIfNeeded();\r\n\r\n        // update Pool reserves\r\n        address[] memory assets = pool.getAssets();\r\n        for (uint256 i = 0; i < assets.length; i++) {\r\n            poolsReserves[poolAddress][assets[i]] += amountsToAdd[i];\r\n            poolsReserves[poolAddress][assets[i]] -= amountsToRemove[i];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an array of pool addresses that contain the given token.\r\n     * @param token The address of the token to search for.\r\n     * @return An array of pool addresses.\r\n     */\r\n    function getPoolsContainingToken(address token) external view returns (address[] memory) {\r\n        return poolFactory.getPoolsByAsset(token);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the version of the contract.\r\n     * @return The version string.\r\n     */\r\n    function getVersion() external view returns (uint64) {\r\n        return _getInitializedVersion();\r\n    }\r\n\r\n    /**\r\n     * @dev Changes the address of the pool factory contract.\r\n     * Can only be called by the contract owner.\r\n     * @param _poolFactory The new address of the pool factory contract.\r\n     */\r\n    function changePoolFactory(address _poolFactory) external onlyOwner {\r\n        poolFactory = IBaluniV1PoolFactory(_poolFactory);\r\n    }\r\n\r\n    function getReserves(address pool) public view returns (uint256[] memory) {\r\n        address[] memory assets = IBaluniV1Pool(pool).getAssets();\r\n        uint256[] memory reserves = new uint256[](assets.length);\r\n        for (uint256 i = 0; i < assets.length; i++) {\r\n            reserves[i] = poolsReserves[pool][assets[i]];\r\n        }\r\n        return reserves;\r\n    }\r\n\r\n    function getAssetReserves(address pool, address asset) external view returns (uint256) {\r\n        return poolsReserves[pool][asset];\r\n    }\r\n}\r\n"},"contracts/interfaces/I1inchSpotAgg.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\n\r\ninterface I1inchSpotAgg {\r\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\r\n\r\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Agent.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1Agent {\r\n  struct Call {\r\n    address to;\r\n    uint256 value;\r\n    bytes data;\r\n  }\r\n\r\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\r\n}\r\n"},"contracts/interfaces/IBaluniV1Pool.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\r\n\r\ninterface IBaluniV1Pool {\r\n    // Views\r\n    function rebalancer() external view returns (address);\r\n\r\n    function assets(uint256 index) external view returns (address);\r\n\r\n    function weights(uint256 index) external view returns (uint256);\r\n\r\n    function trigger() external view returns (uint256);\r\n\r\n    function ONE() external view returns (uint256);\r\n\r\n    function router() external view returns (address);\r\n\r\n    function SWAP_FEE_BPS() external view returns (uint256);\r\n\r\n    function getReserves() external view returns (uint256[] memory);\r\n\r\n    function getAssets() external view returns (address[] memory);\r\n\r\n    function getAssetReserve(address asset) external view returns (uint256);\r\n\r\n    function getWeights() external view returns (uint256[] memory);\r\n\r\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\r\n\r\n    function performRebalanceIfNeeded()\r\n        external\r\n        returns (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove);\r\n\r\n    function getDeviation() external view returns (bool[] memory directions, uint256[] memory deviations);\r\n\r\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256);\r\n\r\n    function liquidity() external view returns (uint256);\r\n\r\n    function unitPrice() external view returns (uint256);\r\n\r\n    function swap(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount,\r\n        address receiver\r\n    ) external returns (uint256 toSend);\r\n\r\n    function mint(address to, uint256[] memory amounts) external returns (uint256);\r\n\r\n    function burn(address to) external returns (uint256[] memory);\r\n\r\n    function changeRebalancer(address _newRebalancer) external;\r\n\r\n    function changeRouter(address _newRouter) external;\r\n\r\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations);\r\n\r\n    function updateReserves(uint256[] memory amounts, bool increase) external;\r\n\r\n    function rebalanceWeights(address receiver) external returns (uint256[] memory);\r\n\r\n    struct AssetInfo {\r\n        address asset;\r\n        uint256 weight;\r\n    }\r\n\r\n    function assetInfos(uint _index) external view returns (AssetInfo memory);\r\n\r\n    // Events\r\n    event RebalancePerformed(address indexed by, address[] assets);\r\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\r\n    event Burn(address indexed user, uint256 sharesBurned);\r\n    event Mint(address indexed to, uint256 sharesMinted);\r\n    event Swap(\r\n        address indexed user,\r\n        address indexed fromToken,\r\n        address indexed toToken,\r\n        uint256 amountIn,\r\n        uint256 amountOut\r\n    );\r\n}\r\n"},"contracts/interfaces/IBaluniV1PoolFactory.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1PoolFactory {\r\n    function getPoolByAssets(address asset1, address asset2) external view returns (address);\r\n\r\n    function getPoolsByAsset(address token) external view returns (address[] memory);\r\n\r\n    function poolExist(address _pool) external view returns (bool);\r\n\r\n    function getAllPools() external view returns (address[] memory);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\nimport './IBaluniV1Router.sol';\r\n\r\ninterface IBaluniV1Rebalancer {\r\n  struct RebalanceVars {\r\n    uint256 length;\r\n    uint256 totalValue;\r\n    uint256 finalUsdBalance;\r\n    uint256 overweightVaultsLength;\r\n    uint256 underweightVaultsLength;\r\n    uint256 totalActiveWeight;\r\n    uint256 amountOut;\r\n    uint256[] overweightVaults;\r\n    uint256[] overweightAmounts;\r\n    uint256[] underweightVaults;\r\n    uint256[] underweightAmounts;\r\n    uint256[] balances;\r\n  }\r\n\r\n  // Variables\r\n  function baluniRouter() external view returns (address);\r\n\r\n  function USDC() external view returns (address);\r\n\r\n  function WNATIVE() external view returns (address);\r\n\r\n  function uniswapRouter() external view returns (address);\r\n\r\n  function uniswapFactory() external view returns (address);\r\n\r\n  function _1InchSpotAgg() external view returns (address);\r\n\r\n  function treasury() external view returns (address);\r\n\r\n  // Functions\r\n  function rebalance(\r\n    uint256[] memory balances,\r\n    address[] calldata assets,\r\n    uint256[] calldata weights,\r\n    uint256 limit,\r\n    address sender,\r\n    address receiver,\r\n    address baseAsset\r\n  ) external;\r\n\r\n  function checkRebalance(\r\n    uint256[] memory balances,\r\n    address[] calldata assets,\r\n    uint256[] calldata weights,\r\n    uint256 limit,\r\n    address sender,\r\n    address baseAsset\r\n  ) external view returns (RebalanceVars memory);\r\n\r\n  function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Router.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\r\nimport './I1inchSpotAgg.sol';\r\nimport './IBaluniV1Agent.sol';\r\n\r\ninterface IBaluniV1Router {\r\n  struct Call {\r\n    address to;\r\n    uint256 value;\r\n    bytes data;\r\n  }\r\n\r\n  // Variables\r\n  function _MAX_BPS_FEE() external view returns (uint256);\r\n\r\n  function _BPS_FEE() external view returns (uint256);\r\n\r\n  function _BPS_BASE() external view returns (uint256);\r\n\r\n  function getTokens() external view returns (address[] memory);\r\n\r\n  function USDC() external view returns (IERC20);\r\n\r\n  function WNATIVE() external view returns (address);\r\n\r\n  function oracle() external view returns (address);\r\n\r\n  function uniswapRouter() external view returns (address);\r\n\r\n  function uniswapFactory() external view returns (address);\r\n\r\n  function agentFactory() external view returns (address);\r\n\r\n  function marketOracle() external view returns (address);\r\n\r\n  function rebalancer() external view returns (address);\r\n\r\n  function treasury() external view returns (address);\r\n\r\n  // Functions\r\n  function initialize(\r\n    address _usdc,\r\n    address _wnative,\r\n    address _1inchSpotAgg,\r\n    address _uniRouter,\r\n    address _uniFactory,\r\n    address _rebalancer\r\n  ) external;\r\n\r\n  function reinitialize(\r\n    address _usdc,\r\n    address _wnative,\r\n    address _1inchSpotAgg,\r\n    address _uniRouter,\r\n    address _uniFactory,\r\n    address _rebalancer,\r\n    uint64 version\r\n  ) external;\r\n\r\n  function initializeMarketOracle(address _marketOracle) external;\r\n\r\n  function changeMarketOracle(address _marketOracle) external;\r\n\r\n  function changeBpsFee(uint256 _newFee) external;\r\n\r\n  function changeTreasury(address _newTreasury) external;\r\n\r\n  function changeRebalancer(address _newRebalancer) external;\r\n\r\n  function changeAgentFactory(address _agentFactory) external;\r\n\r\n  function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external;\r\n\r\n  function liquidate(address token) external;\r\n\r\n  function liquidateAll() external;\r\n\r\n  function burnERC20(uint256 burnAmount) external;\r\n\r\n  function burnUSDC(uint256 burnAmount) external;\r\n\r\n  function getAgentAddress(address _user) external view returns (address);\r\n\r\n  function mintWithUSDC(uint256 balAmountToMint) external;\r\n\r\n  function callRebalance(\r\n    address[] calldata assets,\r\n    uint256[] calldata weights,\r\n    address sender,\r\n    address receiver,\r\n    uint256 limit,\r\n    address baseAsset\r\n  ) external;\r\n\r\n  function requiredUSDCtoMint(uint256 balAmountToMint) external view returns (uint256);\r\n\r\n  function calculateTokenShare(\r\n    uint256 totalBaluni,\r\n    uint256 totalERC20Balance,\r\n    uint256 baluniAmount,\r\n    uint256 tokenDecimals\r\n  ) external pure returns (uint256);\r\n\r\n  function tokenValuation(uint256 amount, address token) external view returns (uint256);\r\n\r\n  function totalValuation() external view returns (uint256);\r\n\r\n  function getUSDCShareValue(uint256 amount) external view returns (uint256);\r\n\r\n  function fetchMarketPrices() external view returns (uint256, uint256);\r\n\r\n  function getVersion() external view returns (uint64);\r\n\r\n  function unitPrice() external view returns (uint256);\r\n  \r\n}\r\n"},"contracts/mock/MockRebalancer.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\nimport '../interfaces/IBaluniV1Rebalancer.sol';\r\n\r\ncontract MockRebalancer {\r\n    mapping(address => mapping(address => uint256)) public rates;\r\n\r\n    // Hardcoded rates\r\n    uint256 public constant USDC_TO_WETH_RATE = 256897185735855109411507118;\r\n    uint256 public constant USDC_TO_USDT_RATE = 1000983989838925640;\r\n    uint256 public constant USDC_TO_WBTC_RATE = 1463657468947761;\r\n    uint256 public constant USDC_TO_WMATIC_RATE = 1351148249095651365340914098616;\r\n\r\n    uint256 public constant WMATIC_TO_USDT_RATE = 747767;\r\n    uint256 public constant WMATIC_TO_USDC_RATE = 733905;\r\n    uint256 public constant WMATIC_TO_WBTC_RATE = 1080;\r\n    uint256 public constant WMATIC_TO_WETH_RATE = 189625582664100;\r\n\r\n    uint256 public constant WBTC_TO_WMATIC_RATE = 924778033538811846038762973579739;\r\n    uint256 public constant WBTC_TO_USDT_RATE = 681360233243484009138;\r\n    uint256 public constant WBTC_TO_WETH_RATE = 175476470939493533556108593598;\r\n    uint256 public constant WBTC_TO_USDC_RATE = 683003374554512029990;\r\n\r\n    uint256 public constant USDT_TO_WBTC_RATE = 1457844841452943;\r\n    uint256 public constant USDT_TO_USDC_RATE = 998588636583774074;\r\n    uint256 public constant USDT_TO_WETH_RATE = 256884484348670192973112135;\r\n    uint256 public constant USDT_TO_WMATIC_RATE = 1351542478738482785523886658083;\r\n\r\n    uint256 public constant WETH_TO_WMATIC_RATE = 5273576410685072782753;\r\n    uint256 public constant WETH_TO_USDC_RATE = 3836478742;\r\n    uint256 public constant WETH_TO_USDT_RATE = 3749163887;\r\n    uint256 public constant WETH_TO_WBTC_RATE = 5561821;\r\n\r\n    address public USDC;\r\n    address public WNATIVE;\r\n\r\n    address public treasury;\r\n\r\n    constructor(address usdt, address _usdc, address _wmatic, address weth, address wbtc) {\r\n        WNATIVE = _wmatic;\r\n        USDC = _usdc;\r\n        treasury = msg.sender;\r\n\r\n        rates[usdt][USDC] = USDT_TO_USDC_RATE;\r\n        rates[usdt][WNATIVE] = USDT_TO_WMATIC_RATE;\r\n        rates[usdt][wbtc] = USDT_TO_WBTC_RATE;\r\n        rates[usdt][weth] = USDT_TO_WETH_RATE;\r\n\r\n        rates[wbtc][usdt] = WBTC_TO_USDT_RATE;\r\n        rates[wbtc][WNATIVE] = WBTC_TO_WMATIC_RATE;\r\n        rates[wbtc][USDC] = WBTC_TO_USDC_RATE;\r\n        rates[wbtc][weth] = WBTC_TO_WETH_RATE;\r\n\r\n        rates[USDC][usdt] = USDC_TO_USDT_RATE;\r\n        rates[USDC][wbtc] = USDC_TO_WBTC_RATE;\r\n        rates[USDC][WNATIVE] = USDC_TO_WMATIC_RATE;\r\n        rates[USDC][weth] = USDC_TO_WETH_RATE;\r\n\r\n        rates[WNATIVE][wbtc] = WMATIC_TO_WBTC_RATE;\r\n        rates[WNATIVE][weth] = WMATIC_TO_WETH_RATE;\r\n        rates[WNATIVE][USDC] = WMATIC_TO_USDC_RATE;\r\n        rates[WNATIVE][usdt] = WMATIC_TO_USDT_RATE;\r\n\r\n        rates[weth][WNATIVE] = WETH_TO_WMATIC_RATE;\r\n        rates[weth][USDC] = WETH_TO_USDC_RATE;\r\n        rates[weth][usdt] = WETH_TO_USDC_RATE;\r\n        rates[weth][wbtc] = WETH_TO_WBTC_RATE;\r\n    }\r\n\r\n    function setRate(address fromToken, address toToken, uint256 rate) external {\r\n        rates[fromToken][toToken] = rate;\r\n    }\r\n\r\n    function getRate(IERC20 fromToken, IERC20 toToken, bool /*isBuying*/) external view returns (uint256) {\r\n        return rates[address(fromToken)][address(toToken)];\r\n    }\r\n\r\n    function getRateToEth(IERC20 fromToken, bool /*isBuying*/) external view returns (uint256) {\r\n        return rates[address(fromToken)][WNATIVE];\r\n    }\r\n\r\n    function rebalance(\r\n        address[] calldata /* assets */,\r\n        uint256[] calldata /* weights */,\r\n        address /* caller */,\r\n        address /* receiver */,\r\n        uint256 /* trigger */\r\n    ) external {}\r\n\r\n    function checkRebalance(\r\n        address[] calldata /* assets */,\r\n        uint256[] calldata /* weights */,\r\n        uint256[] calldata /* amounts */\r\n    ) external view returns (bool) {\r\n        return true;\r\n    }\r\n\r\n    function getBaluniRouter() external view returns (address) {\r\n        return address(0);\r\n    }\r\n\r\n    function getTreasury() external view returns (address) {\r\n        return treasury;\r\n    }\r\n\r\n    function setTreasury(address _treasury) external {\r\n        treasury = _treasury;\r\n    }\r\n\r\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256) {\r\n        uint256 rate;\r\n\r\n        uint8 fromDecimal = IERC20Metadata(fromToken).decimals();\r\n        uint8 toDecimal = IERC20Metadata(toToken).decimals();\r\n\r\n        uint256 numerator = 10 ** fromDecimal;\r\n        uint256 denominator = 10 ** toDecimal;\r\n\r\n        rate = rates[address(fromToken)][address(toToken)];\r\n        rate = (rate * numerator) / denominator;\r\n\r\n        uint256 tokenAmount = ((amount * rate) / 10 ** 18);\r\n\r\n        if (fromDecimal == toDecimal) {\r\n            return tokenAmount;\r\n        }\r\n\r\n        uint256 factor = 10 ** (fromDecimal > toDecimal ? fromDecimal - toDecimal : toDecimal - fromDecimal);\r\n\r\n        if (fromDecimal > toDecimal) {\r\n            tokenAmount /= factor;\r\n        } else {\r\n            tokenAmount *= factor;\r\n        }\r\n\r\n        return tokenAmount;\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":80000},"viaIR":true,"evmVersion":"cancun","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates","devdoc","userdoc"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n  --> contracts/mock/MockRebalancer.sol:91:5:\n   |\n91 |     function checkRebalance(\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":3859,"file":"contracts/mock/MockRebalancer.sol","start":3641},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n  --> contracts/mock/MockRebalancer.sol:99:5:\n   |\n99 |     function getBaluniRouter() external view returns (address) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":3962,"file":"contracts/mock/MockRebalancer.sol","start":3867},"type":"Warning"}],"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[676],"Initializable":[448],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":677,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":449,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":676,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,676,448],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nativeSrc":"1289:56:0","nodeType":"YulBlock","src":"1289:56:0","statements":[{"nativeSrc":"1303:32:0","nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:0","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:0","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[448]},"id":449,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":448,"linearizedBaseContracts":[448],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":448,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":448,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":269,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6357:20:1"},"referencedDeclaration":205,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":448,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7826:20:1"},"referencedDeclaration":205,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":448,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":448,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":448,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nativeSrc":"8846:55:1","nodeType":"YulBlock","src":"8846:55:1","statements":[{"nativeSrc":"8860:31:1","nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:1","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:1","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":443,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":208,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":445,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":447,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":442,"nodeType":"UserDefinedTypeName","pathNode":{"id":441,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"8795:20:1"},"referencedDeclaration":205,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":448,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":449,"src":"2349:6560:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[1126],"IERC1822Proxiable":[686],"Initializable":[448],"UUPSUpgradeable":[630]},"id":631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":450,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":687,"src":"141:88:2","symbolAliases":[{"foreign":{"id":451,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":1127,"src":"230:84:2","symbolAliases":[{"foreign":{"id":453,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":449,"src":"315:50:2","symbolAliases":[{"foreign":{"id":455,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":458,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1023:13:2"},"id":459,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":460,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":686,"src":"1038:17:2"},"id":461,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":630,"linearizedBaseContracts":[630,686,448],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":468,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":630,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":466,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":472,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":630,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":470,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":475,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":480,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":480,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":487,"nodeType":"Block","src":"2643:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2653:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2653:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"2653:13:2"},{"id":486,"nodeType":"PlaceholderStatement","src":"2676:1:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2124:493:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":488,"name":"onlyProxy","nameLocation":"2631:9:2","nodeType":"ModifierDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"2640:2:2"},"src":"2622:62:2","virtual":false,"visibility":"internal"},{"body":{"id":495,"nodeType":"Block","src":"2914:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":491,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"2924:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2924:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"2924:20:2"},{"id":494,"nodeType":"PlaceholderStatement","src":"2954:1:2"}]},"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"2690:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":496,"name":"notDelegated","nameLocation":"2899:12:2","nodeType":"ModifierDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"2911:2:2"},"src":"2890:72:2","virtual":false,"visibility":"internal"},{"body":{"id":501,"nodeType":"Block","src":"3028:7:2","statements":[]},"id":502,"implemented":true,"kind":"function","modifiers":[{"id":499,"kind":"modifierInvocation","modifierName":{"id":498,"name":"onlyInitializing","nameLocations":["3011:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3011:16:2"},"nodeType":"ModifierInvocation","src":"3011:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2977:22:2","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"2999:2:2"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"3028:0:2"},"scope":630,"src":"2968:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":507,"nodeType":"Block","src":"3111:7:2","statements":[]},"id":508,"implemented":true,"kind":"function","modifiers":[{"id":505,"kind":"modifierInvocation","modifierName":{"id":504,"name":"onlyInitializing","nameLocations":["3094:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3094:16:2"},"nodeType":"ModifierInvocation","src":"3094:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3050:32:2","nodeType":"FunctionDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"3082:2:2"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"3111:0:2"},"scope":630,"src":"3041:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[685],"body":{"id":519,"nodeType":"Block","src":"3783:56:2","statements":[{"expression":{"expression":{"id":516,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3800:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3813:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":853,"src":"3800:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":515,"id":518,"nodeType":"Return","src":"3793:39:2"}]},"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"3123:577:2","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":520,"implemented":true,"kind":"function","modifiers":[{"id":512,"kind":"modifierInvocation","modifierName":{"id":511,"name":"notDelegated","nameLocations":["3752:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":496,"src":"3752:12:2"},"nodeType":"ModifierInvocation","src":"3752:12:2"}],"name":"proxiableUUID","nameLocation":"3714:13:2","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"3727:2:2"},"returnParameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":520,"src":"3774:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3774:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3773:9:2"},"scope":630,"src":"3705:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":539,"nodeType":"Block","src":"4263:109:2","statements":[{"expression":{"arguments":[{"id":531,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4291:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":530,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4273:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4273:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"4273:36:2"},{"expression":{"arguments":[{"id":535,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4341:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"4360:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":534,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4319:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"4319:46:2"}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"3845:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":540,"implemented":true,"kind":"function","modifiers":[{"id":528,"kind":"modifierInvocation","modifierName":{"id":527,"name":"onlyProxy","nameLocations":["4253:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":488,"src":"4253:9:2"},"nodeType":"ModifierInvocation","src":"4253:9:2"}],"name":"upgradeToAndCall","nameLocation":"4167:16:2","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"newImplementation","nameLocation":"4192:17:2","nodeType":"VariableDeclaration","scope":540,"src":"4184:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"4184:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"data","nameLocation":"4224:4:2","nodeType":"VariableDeclaration","scope":540,"src":"4211:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":524,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4183:46:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"4263:0:2"},"scope":630,"src":"4158:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":561,"nodeType":"Block","src":"4644:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":546,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4679:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4671:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:2","typeDescriptions":{}}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4671:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":548,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4688:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4671:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":550,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"4749:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4762:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":884,"src":"4749:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4749:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":553,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4785:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4749:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4671:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":560,"nodeType":"IfStatement","src":"4654:251:2","trueBody":{"id":559,"nodeType":"Block","src":"4844:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":556,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"4865:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4865:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"RevertStatement","src":"4858:36:2"}]}}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"4378:216:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."},"id":562,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4608:11:2","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"4619:2:2"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"4644:0:2"},"scope":630,"src":"4599:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":577,"nodeType":"Block","src":"5080:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":568,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5102:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5094:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"5094:7:2","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":570,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"5111:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5094:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":576,"nodeType":"IfStatement","src":"5090:145:2","trueBody":{"id":575,"nodeType":"Block","src":"5119:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":572,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"5195:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5195:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":574,"nodeType":"RevertStatement","src":"5188:36:2"}]}}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"4917:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":578,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5037:18:2","nodeType":"FunctionDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"5055:2:2"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[],"src":"5080:0:2"},"scope":630,"src":"5028:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"5247:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":584,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5633:17:2","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"newImplementation","nameLocation":"5659:17:2","nodeType":"VariableDeclaration","scope":584,"src":"5651:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:27:2"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"5694:0:2"},"scope":630,"src":"5624:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"6137:453:2","statements":[{"clauses":[{"block":{"id":617,"nodeType":"Block","src":"6227:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":600,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6245:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":601,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6253:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6266:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":853,"src":"6253:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6245:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":609,"nodeType":"IfStatement","src":"6241:120:2","trueBody":{"id":608,"nodeType":"Block","src":"6287:74:2","statements":[{"errorCall":{"arguments":[{"id":605,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6341:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":604,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"6312:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6312:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"RevertStatement","src":"6305:41:2"}]}},{"expression":{"arguments":[{"id":613,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6404:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"6423:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":610,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6374:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6387:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":945,"src":"6374:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":616,"nodeType":"ExpressionStatement","src":"6374:54:2"}]},"errorName":"","id":618,"nodeType":"TryCatchClause","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"slot","nameLocation":"6221:4:2","nodeType":"VariableDeclaration","scope":618,"src":"6213:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6213:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6212:14:2"},"src":"6204:235:2"},{"block":{"id":625,"nodeType":"Block","src":"6446:138:2","statements":[{"errorCall":{"arguments":[{"id":622,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6555:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":619,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6513:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6526:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":858,"src":"6513:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6513:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":624,"nodeType":"RevertStatement","src":"6506:67:2"}]},"errorName":"","id":626,"nodeType":"TryCatchClause","src":"6440:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":593,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6169:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":592,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"6151:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$686_$","typeString":"type(contract IERC1822Proxiable)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$686","typeString":"contract IERC1822Proxiable"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6188:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":685,"src":"6151:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":627,"nodeType":"TryStatement","src":"6147:437:2"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"5701:346:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."},"id":629,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6061:21:2","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"newImplementation","nameLocation":"6091:17:2","nodeType":"VariableDeclaration","scope":629,"src":"6083:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"6083:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"data","nameLocation":"6123:4:2","nodeType":"VariableDeclaration","scope":629,"src":"6110:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"6110:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6082:46:2"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[],"src":"6137:0:2"},"scope":630,"src":"6052:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":631,"src":"986:5606:2","usedErrors":[211,214,475,480,858,871,1768,1771],"usedEvents":[219,837]}],"src":"115:6478:2"},"id":2},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[676],"Initializable":[448]},"id":677,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":632,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":677,"sourceUnit":449,"src":"126:63:3","symbolAliases":[{"foreign":{"id":633,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"134:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":636,"name":"Initializable","nameLocations":["728:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"728:13:3"},"id":637,"nodeType":"InheritanceSpecifier","src":"728:13:3"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"191:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":676,"linearizedBaseContracts":[676,448],"name":"ContextUpgradeable","nameLocation":"706:18:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":642,"nodeType":"Block","src":"800:7:3","statements":[]},"id":643,"implemented":true,"kind":"function","modifiers":[{"id":640,"kind":"modifierInvocation","modifierName":{"id":639,"name":"onlyInitializing","nameLocations":["783:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:3"},"nodeType":"ModifierInvocation","src":"783:16:3"}],"name":"__Context_init","nameLocation":"757:14:3","nodeType":"FunctionDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"771:2:3"},"returnParameters":{"id":641,"nodeType":"ParameterList","parameters":[],"src":"800:0:3"},"scope":676,"src":"748:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":648,"nodeType":"Block","src":"875:7:3","statements":[]},"id":649,"implemented":true,"kind":"function","modifiers":[{"id":646,"kind":"modifierInvocation","modifierName":{"id":645,"name":"onlyInitializing","nameLocations":["858:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:3"},"nodeType":"ModifierInvocation","src":"858:16:3"}],"name":"__Context_init_unchained","nameLocation":"822:24:3","nodeType":"FunctionDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[],"src":"846:2:3"},"returnParameters":{"id":647,"nodeType":"ParameterList","parameters":[],"src":"875:0:3"},"scope":676,"src":"813:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":657,"nodeType":"Block","src":"949:34:3","statements":[{"expression":{"expression":{"id":654,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:3","memberName":"sender","nodeType":"MemberAccess","src":"966:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":653,"id":656,"nodeType":"Return","src":"959:17:3"}]},"id":658,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:3","nodeType":"FunctionDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[],"src":"906:2:3"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":658,"src":"940:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:3"},"scope":676,"src":"887:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":666,"nodeType":"Block","src":"1056:32:3","statements":[{"expression":{"expression":{"id":663,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:3","memberName":"data","nodeType":"MemberAccess","src":"1073:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":662,"id":665,"nodeType":"Return","src":"1066:15:3"}]},"id":667,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:3","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[],"src":"1006:2:3"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":667,"src":"1040:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":660,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:3"},"scope":676,"src":"989:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":674,"nodeType":"Block","src":"1166:25:3","statements":[{"expression":{"hexValue":"30","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":671,"id":673,"nodeType":"Return","src":"1176:8:3"}]},"id":675,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:3","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[],"src":"1123:2:3"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":675,"src":"1157:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:3"},"scope":676,"src":"1094:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":677,"src":"688:505:3","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:3"},"id":3},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[686]},"id":687,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":678,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"139:203:4","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":686,"linearizedBaseContracts":[686],"name":"IERC1822Proxiable","nameLocation":"353:17:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"377:438:4","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":685,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"829:13:4","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"842:2:4"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":685,"src":"868:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"868:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"867:9:4"},"scope":686,"src":"820:57:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":687,"src":"343:536:4","usedErrors":[],"usedEvents":[]}],"src":"113:767:4"},"id":4},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[823],"IERC20Errors":[728],"IERC721Errors":[776]},"id":824,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":688,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"138:139:5","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":728,"linearizedBaseContracts":[728],"name":"IERC20Errors","nameLocation":"288:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":690,"nodeType":"StructuredDocumentation","src":"307:309:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":698,"name":"ERC20InsufficientBalance","nameLocation":"627:24:5","nodeType":"ErrorDefinition","parameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"sender","nameLocation":"660:6:5","nodeType":"VariableDeclaration","scope":698,"src":"652:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"balance","nameLocation":"676:7:5","nodeType":"VariableDeclaration","scope":698,"src":"668:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":696,"mutability":"mutable","name":"needed","nameLocation":"693:6:5","nodeType":"VariableDeclaration","scope":698,"src":"685:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":695,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:5"},"src":"621:80:5"},{"documentation":{"id":699,"nodeType":"StructuredDocumentation","src":"707:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":703,"name":"ERC20InvalidSender","nameLocation":"870:18:5","nodeType":"ErrorDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"sender","nameLocation":"897:6:5","nodeType":"VariableDeclaration","scope":703,"src":"889:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:5"},"src":"864:41:5"},{"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"911:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":708,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:5","nodeType":"ErrorDefinition","parameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:5","nodeType":"VariableDeclaration","scope":708,"src":"1102:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:5"},"src":"1075:45:5"},{"documentation":{"id":709,"nodeType":"StructuredDocumentation","src":"1126:345:5","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":717,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:5","nodeType":"ErrorDefinition","parameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"spender","nameLocation":"1517:7:5","nodeType":"VariableDeclaration","scope":717,"src":"1509:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":713,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:5","nodeType":"VariableDeclaration","scope":717,"src":"1526:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":712,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":715,"mutability":"mutable","name":"needed","nameLocation":"1553:6:5","nodeType":"VariableDeclaration","scope":717,"src":"1545:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:5"},"src":"1476:85:5"},{"documentation":{"id":718,"nodeType":"StructuredDocumentation","src":"1567:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":722,"name":"ERC20InvalidApprover","nameLocation":"1752:20:5","nodeType":"ErrorDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"mutability":"mutable","name":"approver","nameLocation":"1781:8:5","nodeType":"VariableDeclaration","scope":722,"src":"1773:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:5"},"src":"1746:45:5"},{"documentation":{"id":723,"nodeType":"StructuredDocumentation","src":"1797:195:5","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":727,"name":"ERC20InvalidSpender","nameLocation":"2003:19:5","nodeType":"ErrorDefinition","parameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"spender","nameLocation":"2031:7:5","nodeType":"VariableDeclaration","scope":727,"src":"2023:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:5"},"src":"1997:43:5"}],"scope":824,"src":"278:1764:5","usedErrors":[698,703,708,717,722,727],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":729,"nodeType":"StructuredDocumentation","src":"2044:141:5","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":776,"linearizedBaseContracts":[776],"name":"IERC721Errors","nameLocation":"2196:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"2216:219:5","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":734,"name":"ERC721InvalidOwner","nameLocation":"2446:18:5","nodeType":"ErrorDefinition","parameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"owner","nameLocation":"2473:5:5","nodeType":"VariableDeclaration","scope":734,"src":"2465:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:5"},"src":"2440:40:5"},{"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"2486:132:5","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":739,"name":"ERC721NonexistentToken","nameLocation":"2629:22:5","nodeType":"ErrorDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:5","nodeType":"VariableDeclaration","scope":739,"src":"2652:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":736,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:5"},"src":"2623:46:5"},{"documentation":{"id":740,"nodeType":"StructuredDocumentation","src":"2675:289:5","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":748,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:5","nodeType":"ErrorDefinition","parameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"sender","nameLocation":"3004:6:5","nodeType":"VariableDeclaration","scope":748,"src":"2996:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:5","nodeType":"VariableDeclaration","scope":748,"src":"3012:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"owner","nameLocation":"3037:5:5","nodeType":"VariableDeclaration","scope":748,"src":"3029:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:5"},"src":"2969:75:5"},{"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"3050:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":753,"name":"ERC721InvalidSender","nameLocation":"3213:19:5","nodeType":"ErrorDefinition","parameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"sender","nameLocation":"3241:6:5","nodeType":"VariableDeclaration","scope":753,"src":"3233:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:5"},"src":"3207:42:5"},{"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"3255:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":758,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:5","nodeType":"ErrorDefinition","parameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:5","nodeType":"VariableDeclaration","scope":758,"src":"3447:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:5"},"src":"3419:46:5"},{"documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"3471:247:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":765,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:5","nodeType":"ErrorDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"operator","nameLocation":"3764:8:5","nodeType":"VariableDeclaration","scope":765,"src":"3756:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":763,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:5","nodeType":"VariableDeclaration","scope":765,"src":"3774:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":762,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:5"},"src":"3723:68:5"},{"documentation":{"id":766,"nodeType":"StructuredDocumentation","src":"3797:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":770,"name":"ERC721InvalidApprover","nameLocation":"3982:21:5","nodeType":"ErrorDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":768,"mutability":"mutable","name":"approver","nameLocation":"4012:8:5","nodeType":"VariableDeclaration","scope":770,"src":"4004:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":767,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:5"},"src":"3976:46:5"},{"documentation":{"id":771,"nodeType":"StructuredDocumentation","src":"4028:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":775,"name":"ERC721InvalidOperator","nameLocation":"4236:21:5","nodeType":"ErrorDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"operator","nameLocation":"4266:8:5","nodeType":"VariableDeclaration","scope":775,"src":"4258:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:5"},"src":"4230:46:5"}],"scope":824,"src":"2186:2092:5","usedErrors":[734,739,748,753,758,765,770,775],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":777,"nodeType":"StructuredDocumentation","src":"4280:143:5","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":823,"linearizedBaseContracts":[823],"name":"IERC1155Errors","nameLocation":"4434:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":778,"nodeType":"StructuredDocumentation","src":"4455:361:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":788,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:5","nodeType":"ErrorDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"mutability":"mutable","name":"sender","nameLocation":"4862:6:5","nodeType":"VariableDeclaration","scope":788,"src":"4854:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"balance","nameLocation":"4878:7:5","nodeType":"VariableDeclaration","scope":788,"src":"4870:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"needed","nameLocation":"4895:6:5","nodeType":"VariableDeclaration","scope":788,"src":"4887:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":783,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:5","nodeType":"VariableDeclaration","scope":788,"src":"4903:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:5"},"src":"4821:99:5"},{"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"4926:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":793,"name":"ERC1155InvalidSender","nameLocation":"5089:20:5","nodeType":"ErrorDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"sender","nameLocation":"5118:6:5","nodeType":"VariableDeclaration","scope":793,"src":"5110:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:5"},"src":"5083:43:5"},{"documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"5132:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":798,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:5","nodeType":"ErrorDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:5","nodeType":"VariableDeclaration","scope":798,"src":"5325:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:5"},"src":"5296:47:5"},{"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"5349:256:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":805,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:5","nodeType":"ErrorDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"mutability":"mutable","name":"operator","nameLocation":"5653:8:5","nodeType":"VariableDeclaration","scope":805,"src":"5645:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":803,"mutability":"mutable","name":"owner","nameLocation":"5671:5:5","nodeType":"VariableDeclaration","scope":805,"src":"5663:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:5"},"src":"5610:68:5"},{"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"5684:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":810,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:5","nodeType":"ErrorDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"approver","nameLocation":"5900:8:5","nodeType":"VariableDeclaration","scope":810,"src":"5892:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:5"},"src":"5863:47:5"},{"documentation":{"id":811,"nodeType":"StructuredDocumentation","src":"5916:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":815,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:5","nodeType":"ErrorDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":813,"mutability":"mutable","name":"operator","nameLocation":"6155:8:5","nodeType":"VariableDeclaration","scope":815,"src":"6147:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:5"},"src":"6118:47:5"},{"documentation":{"id":816,"nodeType":"StructuredDocumentation","src":"6171:280:5","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":822,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:5","nodeType":"ErrorDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:5","nodeType":"VariableDeclaration","scope":822,"src":"6488:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:5","nodeType":"VariableDeclaration","scope":822,"src":"6507:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:5"},"src":"6456:73:5"}],"scope":824,"src":"4424:2107:5","usedErrors":[788,793,798,805,810,815,822],"usedEvents":[]}],"src":"112:6420:5"},"id":5},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[2008],"ERC1967Utils":[1126],"IBeacon":[1136],"StorageSlot":[2148]},"id":1127,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":825,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:6"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":827,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1127,"sourceUnit":1137,"src":"140:46:6","symbolAliases":[{"foreign":{"id":826,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"148:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":829,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1127,"sourceUnit":2009,"src":"187:48:6","symbolAliases":[{"foreign":{"id":828,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"195:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":831,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1127,"sourceUnit":2149,"src":"236:56:6","symbolAliases":[{"foreign":{"id":830,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"244:11:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":832,"nodeType":"StructuredDocumentation","src":"294:154:6","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."},"fullyImplemented":true,"id":1126,"linearizedBaseContracts":[1126],"name":"ERC1967Utils","nameLocation":"457:12:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"660:68:6","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":837,"name":"Upgraded","nameLocation":"739:8:6","nodeType":"EventDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"764:14:6","nodeType":"VariableDeclaration","scope":837,"src":"748:30:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"747:32:6"},"src":"733:47:6"},{"anonymous":false,"documentation":{"id":838,"nodeType":"StructuredDocumentation","src":"786:67:6","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":844,"name":"AdminChanged","nameLocation":"864:12:6","nodeType":"EventDefinition","parameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"885:13:6","nodeType":"VariableDeclaration","scope":844,"src":"877:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":842,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"908:8:6","nodeType":"VariableDeclaration","scope":844,"src":"900:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"876:41:6"},"src":"858:60:6"},{"anonymous":false,"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"924:59:6","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":849,"name":"BeaconUpgraded","nameLocation":"994:14:6","nodeType":"EventDefinition","parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"1025:6:6","nodeType":"VariableDeclaration","scope":849,"src":"1009:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1008:24:6"},"src":"988:45:6"},{"constant":true,"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"1039:170:6","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":853,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"1305:19:6","nodeType":"VariableDeclaration","scope":1126,"src":"1279:114:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1327:66:6","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":854,"nodeType":"StructuredDocumentation","src":"1400:69:6","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":858,"name":"ERC1967InvalidImplementation","nameLocation":"1480:28:6","nodeType":"ErrorDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"implementation","nameLocation":"1517:14:6","nodeType":"VariableDeclaration","scope":858,"src":"1509:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1508:24:6"},"src":"1474:59:6"},{"documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"1539:60:6","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":863,"name":"ERC1967InvalidAdmin","nameLocation":"1610:19:6","nodeType":"ErrorDefinition","parameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"admin","nameLocation":"1638:5:6","nodeType":"VariableDeclaration","scope":863,"src":"1630:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1629:15:6"},"src":"1604:41:6"},{"documentation":{"id":864,"nodeType":"StructuredDocumentation","src":"1651:61:6","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":868,"name":"ERC1967InvalidBeacon","nameLocation":"1723:20:6","nodeType":"ErrorDefinition","parameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"beacon","nameLocation":"1752:6:6","nodeType":"VariableDeclaration","scope":868,"src":"1744:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1743:16:6"},"src":"1717:43:6"},{"documentation":{"id":869,"nodeType":"StructuredDocumentation","src":"1766:82:6","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":871,"name":"ERC1967NonPayable","nameLocation":"1859:17:6","nodeType":"ErrorDefinition","parameters":{"id":870,"nodeType":"ParameterList","parameters":[],"src":"1876:2:6"},"src":"1853:26:6"},{"body":{"id":883,"nodeType":"Block","src":"2018:77:6","statements":[{"expression":{"expression":{"arguments":[{"id":879,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"2062:19:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":877,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"2035:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2148_$","typeString":"type(library StorageSlot)"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2047:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2070,"src":"2035:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2044_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2044_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2043,"src":"2035:53:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":876,"id":882,"nodeType":"Return","src":"2028:60:6"}]},"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"1885:67:6","text":" @dev Returns the current implementation address."},"id":884,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1966:17:6","nodeType":"FunctionDefinition","parameters":{"id":873,"nodeType":"ParameterList","parameters":[],"src":"1983:2:6"},"returnParameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":884,"src":"2009:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2008:9:6"},"scope":1126,"src":"1957:138:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":910,"nodeType":"Block","src":"2249:218:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":890,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2263:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2281:4:6","memberName":"code","nodeType":"MemberAccess","src":"2263:22:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2286:6:6","memberName":"length","nodeType":"MemberAccess","src":"2263:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2263:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":900,"nodeType":"IfStatement","src":"2259:119:6","trueBody":{"id":899,"nodeType":"Block","src":"2299:79:6","statements":[{"errorCall":{"arguments":[{"id":896,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2349:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":895,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"2320:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":898,"nodeType":"RevertStatement","src":"2313:54:6"}]}},{"expression":{"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":904,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"2414:19:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":901,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"2387:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2148_$","typeString":"type(library StorageSlot)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2399:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2070,"src":"2387:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2044_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2387:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2044_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":906,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2435:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2043,"src":"2387:53:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":907,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2443:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2387:73:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":909,"nodeType":"ExpressionStatement","src":"2387:73:6"}]},"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"2101:80:6","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":911,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"2195:18:6","nodeType":"FunctionDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"newImplementation","nameLocation":"2222:17:6","nodeType":"VariableDeclaration","scope":911,"src":"2214:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2213:27:6"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[],"src":"2249:0:6"},"scope":1126,"src":"2186:281:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":944,"nodeType":"Block","src":"2860:254:6","statements":[{"expression":{"arguments":[{"id":920,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"2889:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":919,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"2870:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2870:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":922,"nodeType":"ExpressionStatement","src":"2870:37:6"},{"eventCall":{"arguments":[{"id":924,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"2931:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":923,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2922:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":926,"nodeType":"EmitStatement","src":"2917:32:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":927,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"2964:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:6:6","memberName":"length","nodeType":"MemberAccess","src":"2964:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2964:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":942,"nodeType":"Block","src":"3065:43:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":939,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"3079:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":941,"nodeType":"ExpressionStatement","src":"3079:18:6"}]},"id":943,"nodeType":"IfStatement","src":"2960:148:6","trueBody":{"id":938,"nodeType":"Block","src":"2981:78:6","statements":[{"expression":{"arguments":[{"id":934,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3024:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":935,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3043:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":931,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"2995:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2008_$","typeString":"type(library Address)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:20:6","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"2995:28:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":937,"nodeType":"ExpressionStatement","src":"2995:53:6"}]}}]},"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"2473:301:6","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":945,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2788:16:6","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"newImplementation","nameLocation":"2813:17:6","nodeType":"VariableDeclaration","scope":945,"src":"2805:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"data","nameLocation":"2845:4:6","nodeType":"VariableDeclaration","scope":945,"src":"2832:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":915,"name":"bytes","nodeType":"ElementaryTypeName","src":"2832:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2804:46:6"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"2860:0:6"},"scope":1126,"src":"2779:335:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":946,"nodeType":"StructuredDocumentation","src":"3120:145:6","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":949,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"3361:10:6","nodeType":"VariableDeclaration","scope":1126,"src":"3335:105:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3335:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3374:66:6","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":961,"nodeType":"Block","src":"3844:68:6","statements":[{"expression":{"expression":{"arguments":[{"id":957,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"3888:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":955,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"3861:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2148_$","typeString":"type(library StorageSlot)"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3873:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2070,"src":"3861:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2044_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2044_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3900:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2043,"src":"3861:44:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":954,"id":960,"nodeType":"Return","src":"3854:51:6"}]},"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"3447:340:6","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":962,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3801:8:6","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[],"src":"3809:2:6"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":962,"src":"3835:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3834:9:6"},"scope":1126,"src":"3792:120:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":992,"nodeType":"Block","src":"4039:172:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":968,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"4053:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4065:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"4065:7:6","typeDescriptions":{}}},"id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4053:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":982,"nodeType":"IfStatement","src":"4049:91:6","trueBody":{"id":981,"nodeType":"Block","src":"4077:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4126:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4118:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"4118:7:6","typeDescriptions":{}}},"id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":974,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"4098:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":980,"nodeType":"RevertStatement","src":"4091:38:6"}]}},{"expression":{"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":986,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"4176:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":983,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"4149:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2148_$","typeString":"type(library StorageSlot)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4161:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2070,"src":"4149:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2044_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4149:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2044_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":988,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4188:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2043,"src":"4149:44:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":989,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"4196:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4149:55:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":991,"nodeType":"ExpressionStatement","src":"4149:55:6"}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"3918:71:6","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":993,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4003:9:6","nodeType":"FunctionDefinition","parameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"newAdmin","nameLocation":"4021:8:6","nodeType":"VariableDeclaration","scope":993,"src":"4013:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"4013:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4012:18:6"},"returnParameters":{"id":967,"nodeType":"ParameterList","parameters":[],"src":"4039:0:6"},"scope":1126,"src":"3994:217:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1009,"nodeType":"Block","src":"4379:85:6","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1000,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"4407:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1002,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"4419:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":999,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"4394:12:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4394:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1004,"nodeType":"EmitStatement","src":"4389:39:6"},{"expression":{"arguments":[{"id":1006,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"4448:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1005,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"4438:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1008,"nodeType":"ExpressionStatement","src":"4438:19:6"}]},"documentation":{"id":994,"nodeType":"StructuredDocumentation","src":"4217:109:6","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":1010,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"4340:11:6","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"newAdmin","nameLocation":"4360:8:6","nodeType":"VariableDeclaration","scope":1010,"src":"4352:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"4352:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4351:18:6"},"returnParameters":{"id":998,"nodeType":"ParameterList","parameters":[],"src":"4379:0:6"},"scope":1126,"src":"4331:133:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1011,"nodeType":"StructuredDocumentation","src":"4470:201:6","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":1014,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4767:11:6","nodeType":"VariableDeclaration","scope":1126,"src":"4741:106:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1012,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4741:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4781:66:6","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":1026,"nodeType":"Block","src":"4963:69:6","statements":[{"expression":{"expression":{"arguments":[{"id":1022,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"5007:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1020,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"4980:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2148_$","typeString":"type(library StorageSlot)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4992:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2070,"src":"4980:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2044_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4980:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2044_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2043,"src":"4980:45:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1019,"id":1025,"nodeType":"Return","src":"4973:52:6"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"4854:51:6","text":" @dev Returns the current beacon."},"id":1027,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4919:9:6","nodeType":"FunctionDefinition","parameters":{"id":1016,"nodeType":"ParameterList","parameters":[],"src":"4928:2:6"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1027,"src":"4954:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4953:9:6"},"scope":1126,"src":"4910:122:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1072,"nodeType":"Block","src":"5161:390:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1033,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5175:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5185:4:6","memberName":"code","nodeType":"MemberAccess","src":"5175:14:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5190:6:6","memberName":"length","nodeType":"MemberAccess","src":"5175:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5200:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5175:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1043,"nodeType":"IfStatement","src":"5171:95:6","trueBody":{"id":1042,"nodeType":"Block","src":"5203:63:6","statements":[{"errorCall":{"arguments":[{"id":1039,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5245:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1038,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"5224:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5224:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1041,"nodeType":"RevertStatement","src":"5217:38:6"}]}},{"expression":{"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1047,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"5303:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1044,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"5276:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2148_$","typeString":"type(library StorageSlot)"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5288:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2070,"src":"5276:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2044_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2044_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5316:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2043,"src":"5276:45:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1050,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5324:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5276:57:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1052,"nodeType":"ExpressionStatement","src":"5276:57:6"},{"assignments":[1054],"declarations":[{"constant":false,"id":1054,"mutability":"mutable","name":"beaconImplementation","nameLocation":"5352:20:6","nodeType":"VariableDeclaration","scope":1072,"src":"5344:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"5344:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1060,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1056,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5383:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1055,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"5375:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1136_$","typeString":"type(contract IBeacon)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1136","typeString":"contract IBeacon"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5394:14:6","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1135,"src":"5375:33:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5344:66:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1061,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"5424:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5445:4:6","memberName":"code","nodeType":"MemberAccess","src":"5424:25:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5450:6:6","memberName":"length","nodeType":"MemberAccess","src":"5424:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5460:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5424:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1071,"nodeType":"IfStatement","src":"5420:125:6","trueBody":{"id":1070,"nodeType":"Block","src":"5463:82:6","statements":[{"errorCall":{"arguments":[{"id":1067,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"5513:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1066,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"5484:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1069,"nodeType":"RevertStatement","src":"5477:57:6"}]}}]},"documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"5038:71:6","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":1073,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5123:10:6","nodeType":"FunctionDefinition","parameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"newBeacon","nameLocation":"5142:9:6","nodeType":"VariableDeclaration","scope":1073,"src":"5134:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"5134:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5133:19:6"},"returnParameters":{"id":1032,"nodeType":"ParameterList","parameters":[],"src":"5161:0:6"},"scope":1126,"src":"5114:437:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1110,"nodeType":"Block","src":"6155:254:6","statements":[{"expression":{"arguments":[{"id":1082,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6176:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1081,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"6165:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6165:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1084,"nodeType":"ExpressionStatement","src":"6165:21:6"},{"eventCall":{"arguments":[{"id":1086,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6216:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1085,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"6201:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6201:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1088,"nodeType":"EmitStatement","src":"6196:30:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1089,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"6241:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6246:6:6","memberName":"length","nodeType":"MemberAccess","src":"6241:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6255:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6241:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1108,"nodeType":"Block","src":"6360:43:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1105,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"6374:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1107,"nodeType":"ExpressionStatement","src":"6374:18:6"}]},"id":1109,"nodeType":"IfStatement","src":"6237:166:6","trueBody":{"id":1104,"nodeType":"Block","src":"6258:96:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1097,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6309:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1096,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"6301:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1136_$","typeString":"type(contract IBeacon)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1136","typeString":"contract IBeacon"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6320:14:6","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1135,"src":"6301:33:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1101,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"6338:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1093,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"6272:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2008_$","typeString":"type(library Address)"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6280:20:6","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"6272:28:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6272:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1103,"nodeType":"ExpressionStatement","src":"6272:71:6"}]}}]},"documentation":{"id":1074,"nodeType":"StructuredDocumentation","src":"5557:514:6","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":1111,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"6085:22:6","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"newBeacon","nameLocation":"6116:9:6","nodeType":"VariableDeclaration","scope":1111,"src":"6108:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"6108:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"data","nameLocation":"6140:4:6","nodeType":"VariableDeclaration","scope":1111,"src":"6127:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1077,"name":"bytes","nodeType":"ElementaryTypeName","src":"6127:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:38:6"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"6155:0:6"},"scope":1126,"src":"6076:333:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1124,"nodeType":"Block","src":"6634:86:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1115,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6648:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6652:5:6","memberName":"value","nodeType":"MemberAccess","src":"6648:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6648:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1123,"nodeType":"IfStatement","src":"6644:70:6","trueBody":{"id":1122,"nodeType":"Block","src":"6663:51:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1119,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"6684:17:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1121,"nodeType":"RevertStatement","src":"6677:26:6"}]}}]},"documentation":{"id":1112,"nodeType":"StructuredDocumentation","src":"6415:178:6","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6607:16:6","nodeType":"FunctionDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"6623:2:6"},"returnParameters":{"id":1114,"nodeType":"ParameterList","parameters":[],"src":"6634:0:6"},"scope":1126,"src":"6598:122:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1127,"src":"449:6273:6","usedErrors":[858,863,868,871],"usedEvents":[837,844,849]}],"src":"114:6609:6"},"id":6},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[1136]},"id":1137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1128,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"134:79:7","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":1136,"linearizedBaseContracts":[1136],"name":"IBeacon","nameLocation":"224:7:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1130,"nodeType":"StructuredDocumentation","src":"238:168:7","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":1135,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:7","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[],"src":"434:2:7"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1135,"src":"460:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:7"},"scope":1136,"src":"411:58:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1137,"src":"214:257:7","usedErrors":[],"usedEvents":[]}],"src":"108:364:7"},"id":7},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2038],"ERC20":[1651],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755]},"id":1652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":1730,"src":"131:36:8","symbolAliases":[{"foreign":{"id":1139,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"139:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":1756,"src":"168:63:8","symbolAliases":[{"foreign":{"id":1141,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"176:14:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":2039,"src":"232:48:8","symbolAliases":[{"foreign":{"id":1143,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"240:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":824,"src":"281:65:8","symbolAliases":[{"foreign":{"id":1145,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"289:12:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1148,"name":"Context","nameLocations":["1428:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2038,"src":"1428:7:8"},"id":1149,"nodeType":"InheritanceSpecifier","src":"1428:7:8"},{"baseName":{"id":1150,"name":"IERC20","nameLocations":["1437:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"1437:6:8"},"id":1151,"nodeType":"InheritanceSpecifier","src":"1437:6:8"},{"baseName":{"id":1152,"name":"IERC20Metadata","nameLocations":["1445:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1755,"src":"1445:14:8"},"id":1153,"nodeType":"InheritanceSpecifier","src":"1445:14:8"},{"baseName":{"id":1154,"name":"IERC20Errors","nameLocations":["1461:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":728,"src":"1461:12:8"},"id":1155,"nodeType":"InheritanceSpecifier","src":"1461:12:8"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1147,"nodeType":"StructuredDocumentation","src":"348:1052:8","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1651,"linearizedBaseContracts":[1651,728,1755,1729,2038],"name":"ERC20","nameLocation":"1419:5:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1159,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:8","nodeType":"VariableDeclaration","scope":1651,"src":"1480:53:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1158,"keyName":"account","keyNameLocation":"1496:7:8","keyType":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1165,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:8","nodeType":"VariableDeclaration","scope":1651,"src":"1540:83:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1164,"keyName":"account","keyNameLocation":"1556:7:8","keyType":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1163,"keyName":"spender","keyNameLocation":"1583:7:8","keyType":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1167,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:8","nodeType":"VariableDeclaration","scope":1651,"src":"1630:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1169,"mutability":"mutable","name":"_name","nameLocation":"1680:5:8","nodeType":"VariableDeclaration","scope":1651,"src":"1665:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1168,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1171,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:8","nodeType":"VariableDeclaration","scope":1651,"src":"1691:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1170,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1187,"nodeType":"Block","src":"1952:57:8","statements":[{"expression":{"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1179,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"1962:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1180,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"1970:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1182,"nodeType":"ExpressionStatement","src":"1962:13:8"},{"expression":{"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1183,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"1985:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1184,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"1995:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1186,"nodeType":"ExpressionStatement","src":"1985:17:8"}]},"documentation":{"id":1172,"nodeType":"StructuredDocumentation","src":"1720:171:8","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1188,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"name_","nameLocation":"1922:5:8","nodeType":"VariableDeclaration","scope":1188,"src":"1908:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1173,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:8","nodeType":"VariableDeclaration","scope":1188,"src":"1929:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1175,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:8"},"returnParameters":{"id":1178,"nodeType":"ParameterList","parameters":[],"src":"1952:0:8"},"scope":1651,"src":"1896:113:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1742],"body":{"id":1196,"nodeType":"Block","src":"2134:29:8","statements":[{"expression":{"id":1194,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"2151:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1193,"id":1195,"nodeType":"Return","src":"2144:12:8"}]},"documentation":{"id":1189,"nodeType":"StructuredDocumentation","src":"2015:54:8","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1197,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:8","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[],"src":"2087:2:8"},"returnParameters":{"id":1193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1197,"src":"2119:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1191,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:8"},"scope":1651,"src":"2074:89:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1748],"body":{"id":1205,"nodeType":"Block","src":"2338:31:8","statements":[{"expression":{"id":1203,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"2355:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1202,"id":1204,"nodeType":"Return","src":"2348:14:8"}]},"documentation":{"id":1198,"nodeType":"StructuredDocumentation","src":"2169:102:8","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:8","nodeType":"FunctionDefinition","parameters":{"id":1199,"nodeType":"ParameterList","parameters":[],"src":"2291:2:8"},"returnParameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1206,"src":"2323:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1200,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:8"},"scope":1651,"src":"2276:93:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1754],"body":{"id":1214,"nodeType":"Block","src":"3058:26:8","statements":[{"expression":{"hexValue":"3138","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1211,"id":1213,"nodeType":"Return","src":"3068:9:8"}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"2375:622:8","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:8","nodeType":"FunctionDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[],"src":"3019:2:8"},"returnParameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1215,"src":"3051:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1209,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:8"},"scope":1651,"src":"3002:82:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1678],"body":{"id":1223,"nodeType":"Block","src":"3205:36:8","statements":[{"expression":{"id":1221,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"3222:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1220,"id":1222,"nodeType":"Return","src":"3215:19:8"}]},"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"3090:49:8","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1224,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:8","nodeType":"FunctionDefinition","parameters":{"id":1217,"nodeType":"ParameterList","parameters":[],"src":"3164:2:8"},"returnParameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1224,"src":"3196:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:8"},"scope":1651,"src":"3144:97:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1686],"body":{"id":1236,"nodeType":"Block","src":"3373:42:8","statements":[{"expression":{"baseExpression":{"id":1232,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"3390:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1234,"indexExpression":{"id":1233,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"3400:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1231,"id":1235,"nodeType":"Return","src":"3383:25:8"}]},"documentation":{"id":1225,"nodeType":"StructuredDocumentation","src":"3247:47:8","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1237,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:8","nodeType":"FunctionDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"account","nameLocation":"3326:7:8","nodeType":"VariableDeclaration","scope":1237,"src":"3318:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:8"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1237,"src":"3364:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:8"},"scope":1651,"src":"3299:116:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1696],"body":{"id":1260,"nodeType":"Block","src":"3685:103:8","statements":[{"assignments":[1248],"declarations":[{"constant":false,"id":1248,"mutability":"mutable","name":"owner","nameLocation":"3703:5:8","nodeType":"VariableDeclaration","scope":1260,"src":"3695:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1251,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"3711:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:8"},{"expression":{"arguments":[{"id":1253,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"3743:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3750:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"3754:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1252,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"3733:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1257,"nodeType":"ExpressionStatement","src":"3733:27:8"},{"expression":{"hexValue":"74727565","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1246,"id":1259,"nodeType":"Return","src":"3770:11:8"}]},"documentation":{"id":1238,"nodeType":"StructuredDocumentation","src":"3421:184:8","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1261,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:8","nodeType":"FunctionDefinition","parameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"to","nameLocation":"3636:2:8","nodeType":"VariableDeclaration","scope":1261,"src":"3628:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"value","nameLocation":"3648:5:8","nodeType":"VariableDeclaration","scope":1261,"src":"3640:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:8"},"returnParameters":{"id":1246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1261,"src":"3679:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1244,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:8"},"scope":1651,"src":"3610:178:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1706],"body":{"id":1277,"nodeType":"Block","src":"3935:51:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1271,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"3952:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1273,"indexExpression":{"id":1272,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"3964:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1275,"indexExpression":{"id":1274,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"3971:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1270,"id":1276,"nodeType":"Return","src":"3945:34:8"}]},"documentation":{"id":1262,"nodeType":"StructuredDocumentation","src":"3794:47:8","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1278,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:8","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"owner","nameLocation":"3873:5:8","nodeType":"VariableDeclaration","scope":1278,"src":"3865:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1263,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1266,"mutability":"mutable","name":"spender","nameLocation":"3888:7:8","nodeType":"VariableDeclaration","scope":1278,"src":"3880:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:8"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1278,"src":"3926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:8"},"scope":1651,"src":"3846:140:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1716],"body":{"id":1301,"nodeType":"Block","src":"4372:107:8","statements":[{"assignments":[1289],"declarations":[{"constant":false,"id":1289,"mutability":"mutable","name":"owner","nameLocation":"4390:5:8","nodeType":"VariableDeclaration","scope":1301,"src":"4382:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1292,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1290,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"4398:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:8"},{"expression":{"arguments":[{"id":1294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"4429:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1295,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"4436:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"4445:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1293,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1542,1602],"referencedDeclaration":1542,"src":"4420:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1298,"nodeType":"ExpressionStatement","src":"4420:31:8"},{"expression":{"hexValue":"74727565","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1287,"id":1300,"nodeType":"Return","src":"4461:11:8"}]},"documentation":{"id":1279,"nodeType":"StructuredDocumentation","src":"3992:296:8","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1302,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:8","nodeType":"FunctionDefinition","parameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"spender","nameLocation":"4318:7:8","nodeType":"VariableDeclaration","scope":1302,"src":"4310:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1280,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1283,"mutability":"mutable","name":"value","nameLocation":"4335:5:8","nodeType":"VariableDeclaration","scope":1302,"src":"4327:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:8"},"returnParameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1302,"src":"4366:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1285,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:8"},"scope":1651,"src":"4293:186:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1728],"body":{"id":1333,"nodeType":"Block","src":"5132:151:8","statements":[{"assignments":[1315],"declarations":[{"constant":false,"id":1315,"mutability":"mutable","name":"spender","nameLocation":"5150:7:8","nodeType":"VariableDeclaration","scope":1333,"src":"5142:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1318,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1316,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"5160:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:8"},{"expression":{"arguments":[{"id":1320,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5198:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1321,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"5204:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5213:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1319,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"5182:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1324,"nodeType":"ExpressionStatement","src":"5182:37:8"},{"expression":{"arguments":[{"id":1326,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5239:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"5245:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5249:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1325,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"5229:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1330,"nodeType":"ExpressionStatement","src":"5229:26:8"},{"expression":{"hexValue":"74727565","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1313,"id":1332,"nodeType":"Return","src":"5265:11:8"}]},"documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"4485:549:8","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1334,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:8","nodeType":"FunctionDefinition","parameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"from","nameLocation":"5069:4:8","nodeType":"VariableDeclaration","scope":1334,"src":"5061:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1307,"mutability":"mutable","name":"to","nameLocation":"5083:2:8","nodeType":"VariableDeclaration","scope":1334,"src":"5075:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1306,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1309,"mutability":"mutable","name":"value","nameLocation":"5095:5:8","nodeType":"VariableDeclaration","scope":1334,"src":"5087:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1308,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:8"},"returnParameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1334,"src":"5126:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1311,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:8"},"scope":1651,"src":"5039:244:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1380,"nodeType":"Block","src":"5725:231:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5739:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:8","typeDescriptions":{}}},"id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1358,"nodeType":"IfStatement","src":"5735:86:8","trueBody":{"id":1357,"nodeType":"Block","src":"5759:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:8","typeDescriptions":{}}},"id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1350,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"5780:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1356,"nodeType":"RevertStatement","src":"5773:37:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"5834:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1360,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:8","typeDescriptions":{}}},"id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1373,"nodeType":"IfStatement","src":"5830:86:8","trueBody":{"id":1372,"nodeType":"Block","src":"5852:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:8","typeDescriptions":{}}},"id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1365,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"5873:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1371,"nodeType":"RevertStatement","src":"5866:39:8"}]}},{"expression":{"arguments":[{"id":1375,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5933:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"5939:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"5943:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1374,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"5925:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1379,"nodeType":"ExpressionStatement","src":"5925:24:8"}]},"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"5289:362:8","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1381,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:8","nodeType":"FunctionDefinition","parameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"from","nameLocation":"5683:4:8","nodeType":"VariableDeclaration","scope":1381,"src":"5675:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1339,"mutability":"mutable","name":"to","nameLocation":"5697:2:8","nodeType":"VariableDeclaration","scope":1381,"src":"5689:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"value","nameLocation":"5709:5:8","nodeType":"VariableDeclaration","scope":1381,"src":"5701:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:8"},"returnParameters":{"id":1343,"nodeType":"ParameterList","parameters":[],"src":"5725:0:8"},"scope":1651,"src":"5656:300:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1457,"nodeType":"Block","src":"6346:1032:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1391,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6360:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1392,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:8","typeDescriptions":{}}},"id":1395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1428,"nodeType":"Block","src":"6534:362:8","statements":[{"assignments":[1403],"declarations":[{"constant":false,"id":1403,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:8","nodeType":"VariableDeclaration","scope":1428,"src":"6548:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1402,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1407,"initialValue":{"baseExpression":{"id":1404,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6570:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1406,"indexExpression":{"id":1405,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6580:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1408,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"6603:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6617:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1418,"nodeType":"IfStatement","src":"6599:115:8","trueBody":{"id":1417,"nodeType":"Block","src":"6624:90:8","statements":[{"errorCall":{"arguments":[{"id":1412,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6674:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1413,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"6680:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6693:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1411,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"6649:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1416,"nodeType":"RevertStatement","src":"6642:57:8"}]}},{"id":1427,"nodeType":"UncheckedBlock","src":"6727:159:8","statements":[{"expression":{"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1419,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6834:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1421,"indexExpression":{"id":1420,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6844:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1422,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"6852:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6866:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1426,"nodeType":"ExpressionStatement","src":"6834:37:8"}]}]},"id":1429,"nodeType":"IfStatement","src":"6356:540:8","trueBody":{"id":1401,"nodeType":"Block","src":"6380:148:8","statements":[{"expression":{"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1397,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"6496:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6512:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1400,"nodeType":"ExpressionStatement","src":"6496:21:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1430,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"6910:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:8","typeDescriptions":{}}},"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1449,"nodeType":"Block","src":"7125:206:8","statements":[{"id":1448,"nodeType":"UncheckedBlock","src":"7139:182:8","statements":[{"expression":{"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1442,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7284:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1444,"indexExpression":{"id":1443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"7294:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7301:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1447,"nodeType":"ExpressionStatement","src":"7284:22:8"}]}]},"id":1450,"nodeType":"IfStatement","src":"6906:425:8","trueBody":{"id":1441,"nodeType":"Block","src":"6928:191:8","statements":[{"id":1440,"nodeType":"UncheckedBlock","src":"6942:167:8","statements":[{"expression":{"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1436,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"7073:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7089:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1439,"nodeType":"ExpressionStatement","src":"7073:21:8"}]}]}},{"eventCall":{"arguments":[{"id":1452,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"7355:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1453,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"7361:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7365:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1451,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"7346:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1456,"nodeType":"EmitStatement","src":"7341:30:8"}]},"documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"5962:304:8","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1458,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:8","nodeType":"FunctionDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"from","nameLocation":"6296:4:8","nodeType":"VariableDeclaration","scope":1458,"src":"6288:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1386,"mutability":"mutable","name":"to","nameLocation":"6310:2:8","nodeType":"VariableDeclaration","scope":1458,"src":"6302:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"value","nameLocation":"6322:5:8","nodeType":"VariableDeclaration","scope":1458,"src":"6314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:8"},"returnParameters":{"id":1390,"nodeType":"ParameterList","parameters":[],"src":"6346:0:8"},"scope":1651,"src":"6271:1107:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1490,"nodeType":"Block","src":"7777:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"7791:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:8","typeDescriptions":{}}},"id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1480,"nodeType":"IfStatement","src":"7787:91:8","trueBody":{"id":1479,"nodeType":"Block","src":"7814:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1473,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:8","typeDescriptions":{}}},"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1472,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"7835:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1478,"nodeType":"RevertStatement","src":"7828:39:8"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1482,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:8","typeDescriptions":{}}},"id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1486,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"7907:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"7916:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1481,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"7887:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1489,"nodeType":"ExpressionStatement","src":"7887:35:8"}]},"documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"7384:332:8","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1491,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:8","nodeType":"FunctionDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"account","nameLocation":"7744:7:8","nodeType":"VariableDeclaration","scope":1491,"src":"7736:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"value","nameLocation":"7761:5:8","nodeType":"VariableDeclaration","scope":1491,"src":"7753:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:8"},"returnParameters":{"id":1465,"nodeType":"ParameterList","parameters":[],"src":"7777:0:8"},"scope":1651,"src":"7721:208:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1523,"nodeType":"Block","src":"8303:150:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1499,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"8317:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:8","typeDescriptions":{}}},"id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1513,"nodeType":"IfStatement","src":"8313:89:8","trueBody":{"id":1512,"nodeType":"Block","src":"8340:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:8","typeDescriptions":{}}},"id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1505,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"8361:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1511,"nodeType":"RevertStatement","src":"8354:37:8"}]}},{"expression":{"arguments":[{"id":1515,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"8419:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:8","typeDescriptions":{}}},"id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"8440:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1514,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"8411:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1522,"nodeType":"ExpressionStatement","src":"8411:35:8"}]},"documentation":{"id":1492,"nodeType":"StructuredDocumentation","src":"7935:307:8","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1524,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:8","nodeType":"FunctionDefinition","parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"account","nameLocation":"8270:7:8","nodeType":"VariableDeclaration","scope":1524,"src":"8262:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"value","nameLocation":"8287:5:8","nodeType":"VariableDeclaration","scope":1524,"src":"8279:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:8"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[],"src":"8303:0:8"},"scope":1651,"src":"8247:206:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1541,"nodeType":"Block","src":"9063:54:8","statements":[{"expression":{"arguments":[{"id":1535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"9082:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1536,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"9089:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"9098:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1534,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1542,1602],"referencedDeclaration":1602,"src":"9073:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1540,"nodeType":"ExpressionStatement","src":"9073:37:8"}]},"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"8459:525:8","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1542,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:8","nodeType":"FunctionDefinition","parameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"owner","nameLocation":"9015:5:8","nodeType":"VariableDeclaration","scope":1542,"src":"9007:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1529,"mutability":"mutable","name":"spender","nameLocation":"9030:7:8","nodeType":"VariableDeclaration","scope":1542,"src":"9022:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1531,"mutability":"mutable","name":"value","nameLocation":"9047:5:8","nodeType":"VariableDeclaration","scope":1542,"src":"9039:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:8"},"returnParameters":{"id":1533,"nodeType":"ParameterList","parameters":[],"src":"9063:0:8"},"scope":1651,"src":"8989:128:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1601,"nodeType":"Block","src":"10047:334:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1554,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"10061:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1555,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:8","typeDescriptions":{}}},"id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1568,"nodeType":"IfStatement","src":"10057:89:8","trueBody":{"id":1567,"nodeType":"Block","src":"10082:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:8","typeDescriptions":{}}},"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1560,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10103:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1566,"nodeType":"RevertStatement","src":"10096:39:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1569,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10159:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1570,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:8","typeDescriptions":{}}},"id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1583,"nodeType":"IfStatement","src":"10155:90:8","trueBody":{"id":1582,"nodeType":"Block","src":"10182:63:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:8","typeDescriptions":{}}},"id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1575,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"10203:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1581,"nodeType":"RevertStatement","src":"10196:38:8"}]}},{"expression":{"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1584,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"10254:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1587,"indexExpression":{"id":1585,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"10266:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1588,"indexExpression":{"id":1586,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10273:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"10284:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1591,"nodeType":"ExpressionStatement","src":"10254:35:8"},{"condition":{"id":1592,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"10303:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1600,"nodeType":"IfStatement","src":"10299:76:8","trueBody":{"id":1599,"nodeType":"Block","src":"10314:61:8","statements":[{"eventCall":{"arguments":[{"id":1594,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"10342:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1595,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10349:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"10358:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1593,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"10333:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1598,"nodeType":"EmitStatement","src":"10328:36:8"}]}}]},"documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"9123:821:8","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1602,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:8","nodeType":"FunctionDefinition","parameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"owner","nameLocation":"9975:5:8","nodeType":"VariableDeclaration","scope":1602,"src":"9967:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1544,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1547,"mutability":"mutable","name":"spender","nameLocation":"9990:7:8","nodeType":"VariableDeclaration","scope":1602,"src":"9982:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1549,"mutability":"mutable","name":"value","nameLocation":"10007:5:8","nodeType":"VariableDeclaration","scope":1602,"src":"9999:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1551,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:8","nodeType":"VariableDeclaration","scope":1602,"src":"10014:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1550,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:8"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[],"src":"10047:0:8"},"scope":1651,"src":"9949:432:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1649,"nodeType":"Block","src":"10752:388:8","statements":[{"assignments":[1613],"declarations":[{"constant":false,"id":1613,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:8","nodeType":"VariableDeclaration","scope":1649,"src":"10762:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1612,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1618,"initialValue":{"arguments":[{"id":1615,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"10799:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1616,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"10806:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1614,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"10789:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1619,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10828:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1621,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:8","memberName":"max","nodeType":"MemberAccess","src":"10848:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1648,"nodeType":"IfStatement","src":"10824:310:8","trueBody":{"id":1647,"nodeType":"Block","src":"10867:267:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1626,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10885:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10904:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1636,"nodeType":"IfStatement","src":"10881:130:8","trueBody":{"id":1635,"nodeType":"Block","src":"10911:100:8","statements":[{"errorCall":{"arguments":[{"id":1630,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"10963:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1631,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10972:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10990:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1629,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"10936:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1634,"nodeType":"RevertStatement","src":"10929:67:8"}]}},{"id":1646,"nodeType":"UncheckedBlock","src":"11024:100:8","statements":[{"expression":{"arguments":[{"id":1638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"11061:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"11068:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1640,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"11077:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"11096:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1637,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1542,1602],"referencedDeclaration":1602,"src":"11052:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1645,"nodeType":"ExpressionStatement","src":"11052:57:8"}]}]}}]},"documentation":{"id":1603,"nodeType":"StructuredDocumentation","src":"10387:271:8","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1650,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:8","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"owner","nameLocation":"10696:5:8","nodeType":"VariableDeclaration","scope":1650,"src":"10688:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1604,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1607,"mutability":"mutable","name":"spender","nameLocation":"10711:7:8","nodeType":"VariableDeclaration","scope":1650,"src":"10703:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1609,"mutability":"mutable","name":"value","nameLocation":"10728:5:8","nodeType":"VariableDeclaration","scope":1650,"src":"10720:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:8"},"returnParameters":{"id":1611,"nodeType":"ParameterList","parameters":[],"src":"10752:0:8"},"scope":1651,"src":"10663:477:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1652,"src":"1401:9741:8","usedErrors":[698,703,708,717,722,727],"usedEvents":[1663,1672]}],"src":"105:11038:8"},"id":8},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1729]},"id":1730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1653,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"132:70:9","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1729,"linearizedBaseContracts":[1729],"name":"IERC20","nameLocation":"213:6:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1655,"nodeType":"StructuredDocumentation","src":"226:158:9","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1663,"name":"Transfer","nameLocation":"395:8:9","nodeType":"EventDefinition","parameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:9","nodeType":"VariableDeclaration","scope":1663,"src":"404:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1656,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1659,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:9","nodeType":"VariableDeclaration","scope":1663,"src":"426:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1661,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:9","nodeType":"VariableDeclaration","scope":1663,"src":"446:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:9"},"src":"389:72:9"},{"anonymous":false,"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"467:148:9","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1672,"name":"Approval","nameLocation":"626:8:9","nodeType":"EventDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:9","nodeType":"VariableDeclaration","scope":1672,"src":"635:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1668,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:9","nodeType":"VariableDeclaration","scope":1672,"src":"658:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1670,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:9","nodeType":"VariableDeclaration","scope":1672,"src":"683:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:9"},"src":"620:78:9"},{"documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"704:65:9","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1678,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:9","nodeType":"FunctionDefinition","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[],"src":"794:2:9"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1678,"src":"820:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:9"},"scope":1729,"src":"774:55:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"835:71:9","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1686,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:9","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"account","nameLocation":"938:7:9","nodeType":"VariableDeclaration","scope":1686,"src":"930:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1680,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:9"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1686,"src":"970:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:9"},"scope":1729,"src":"911:68:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1687,"nodeType":"StructuredDocumentation","src":"985:213:9","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1696,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:9","nodeType":"FunctionDefinition","parameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"to","nameLocation":"1229:2:9","nodeType":"VariableDeclaration","scope":1696,"src":"1221:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1691,"mutability":"mutable","name":"value","nameLocation":"1241:5:9","nodeType":"VariableDeclaration","scope":1696,"src":"1233:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:9"},"returnParameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1696,"src":"1266:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1693,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:9"},"scope":1729,"src":"1203:69:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"1278:264:9","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1706,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:9","nodeType":"FunctionDefinition","parameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"owner","nameLocation":"1574:5:9","nodeType":"VariableDeclaration","scope":1706,"src":"1566:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"spender","nameLocation":"1589:7:9","nodeType":"VariableDeclaration","scope":1706,"src":"1581:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:9"},"returnParameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1706,"src":"1621:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:9"},"scope":1729,"src":"1547:83:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"1636:667:9","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1716,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:9","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"spender","nameLocation":"2333:7:9","nodeType":"VariableDeclaration","scope":1716,"src":"2325:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1708,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1711,"mutability":"mutable","name":"value","nameLocation":"2350:5:9","nodeType":"VariableDeclaration","scope":1716,"src":"2342:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:9"},"returnParameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1716,"src":"2375:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1713,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:9"},"scope":1729,"src":"2308:73:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"2387:297:9","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1728,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:9","nodeType":"FunctionDefinition","parameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"from","nameLocation":"2719:4:9","nodeType":"VariableDeclaration","scope":1728,"src":"2711:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1718,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1721,"mutability":"mutable","name":"to","nameLocation":"2733:2:9","nodeType":"VariableDeclaration","scope":1728,"src":"2725:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1720,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1723,"mutability":"mutable","name":"value","nameLocation":"2745:5:9","nodeType":"VariableDeclaration","scope":1728,"src":"2737:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:9"},"returnParameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1728,"src":"2770:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1725,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:9"},"scope":1729,"src":"2689:87:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1730,"src":"203:2575:9","usedErrors":[],"usedEvents":[1663,1672]}],"src":"106:2673:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1729],"IERC20Metadata":[1755]},"id":1756,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1731,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1756,"sourceUnit":1730,"src":"151:37:10","symbolAliases":[{"foreign":{"id":1732,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"159:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1735,"name":"IERC20","nameLocations":["305:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"305:6:10"},"id":1736,"nodeType":"InheritanceSpecifier","src":"305:6:10"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1734,"nodeType":"StructuredDocumentation","src":"190:86:10","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":1755,"linearizedBaseContracts":[1755,1729],"name":"IERC20Metadata","nameLocation":"287:14:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1737,"nodeType":"StructuredDocumentation","src":"318:54:10","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1742,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:10","nodeType":"FunctionDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[],"src":"390:2:10"},"returnParameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1742,"src":"416:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1739,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:10"},"scope":1755,"src":"377:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1743,"nodeType":"StructuredDocumentation","src":"437:56:10","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1748,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:10","nodeType":"FunctionDefinition","parameters":{"id":1744,"nodeType":"ParameterList","parameters":[],"src":"513:2:10"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1748,"src":"539:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1745,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:10"},"scope":1755,"src":"498:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1749,"nodeType":"StructuredDocumentation","src":"560:65:10","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1754,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:10","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[],"src":"647:2:10"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1754,"src":"673:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1751,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:10"},"scope":1755,"src":"630:50:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1756,"src":"277:405:10","usedErrors":[],"usedEvents":[1663,1672]}],"src":"125:558:10"},"id":10},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2008]},"id":2009,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1757,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"127:67:11","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2008,"linearizedBaseContracts":[2008],"name":"Address","nameLocation":"203:7:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1759,"nodeType":"StructuredDocumentation","src":"217:94:11","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":1763,"name":"AddressInsufficientBalance","nameLocation":"322:26:11","nodeType":"ErrorDefinition","parameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"account","nameLocation":"357:7:11","nodeType":"VariableDeclaration","scope":1763,"src":"349:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:11"},"src":"316:50:11"},{"documentation":{"id":1764,"nodeType":"StructuredDocumentation","src":"372:75:11","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":1768,"name":"AddressEmptyCode","nameLocation":"458:16:11","nodeType":"ErrorDefinition","parameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"mutability":"mutable","name":"target","nameLocation":"483:6:11","nodeType":"VariableDeclaration","scope":1768,"src":"475:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1765,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:11"},"src":"452:39:11"},{"documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"497:89:11","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":1771,"name":"FailedInnerCall","nameLocation":"597:15:11","nodeType":"ErrorDefinition","parameters":{"id":1770,"nodeType":"ParameterList","parameters":[],"src":"612:2:11"},"src":"591:24:11"},{"body":{"id":1811,"nodeType":"Block","src":"1602:260:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1781,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1779,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:11","typeDescriptions":{}}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:11","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1784,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1640:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1794,"nodeType":"IfStatement","src":"1612:109:11","trueBody":{"id":1793,"nodeType":"Block","src":"1648:73:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1789,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1787,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:11","typeDescriptions":{}}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1786,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"1669:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1792,"nodeType":"RevertStatement","src":"1662:48:11"}]}},{"assignments":[1796,null],"declarations":[{"constant":false,"id":1796,"mutability":"mutable","name":"success","nameLocation":"1737:7:11","nodeType":"VariableDeclaration","scope":1811,"src":"1732:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1795,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1803,"initialValue":{"arguments":[{"hexValue":"","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1797,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"1750:9:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:11","memberName":"call","nodeType":"MemberAccess","src":"1750:14:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1799,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1772:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:11"},{"condition":{"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:11","subExpression":{"id":1804,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"1798:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1810,"nodeType":"IfStatement","src":"1793:63:11","trueBody":{"id":1809,"nodeType":"Block","src":"1807:49:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1806,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"1828:15:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1808,"nodeType":"RevertStatement","src":"1821:24:11"}]}}]},"documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"621:905:11","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1812,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:11","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:11","nodeType":"VariableDeclaration","scope":1812,"src":"1550:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1773,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1776,"mutability":"mutable","name":"amount","nameLocation":"1585:6:11","nodeType":"VariableDeclaration","scope":1812,"src":"1577:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:11"},"returnParameters":{"id":1778,"nodeType":"ParameterList","parameters":[],"src":"1602:0:11"},"scope":2008,"src":"1531:331:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1828,"nodeType":"Block","src":"2794:62:11","statements":[{"expression":{"arguments":[{"id":1823,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"2833:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1824,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"2841:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1822,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"2811:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1821,"id":1827,"nodeType":"Return","src":"2804:45:11"}]},"documentation":{"id":1813,"nodeType":"StructuredDocumentation","src":"1868:832:11","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":1829,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:11","nodeType":"FunctionDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"target","nameLocation":"2735:6:11","nodeType":"VariableDeclaration","scope":1829,"src":"2727:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1814,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"data","nameLocation":"2756:4:11","nodeType":"VariableDeclaration","scope":1829,"src":"2743:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1816,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:11"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1829,"src":"2780:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1819,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:11"},"scope":2008,"src":"2705:151:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1874,"nodeType":"Block","src":"3293:279:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1843,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1841,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:11","typeDescriptions":{}}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:11","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"3331:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1856,"nodeType":"IfStatement","src":"3303:108:11","trueBody":{"id":1855,"nodeType":"Block","src":"3338:73:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1851,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:11","typeDescriptions":{}}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1848,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"3359:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1854,"nodeType":"RevertStatement","src":"3352:48:11"}]}},{"assignments":[1858,1860],"declarations":[{"constant":false,"id":1858,"mutability":"mutable","name":"success","nameLocation":"3426:7:11","nodeType":"VariableDeclaration","scope":1874,"src":"3421:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1857,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1860,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:11","nodeType":"VariableDeclaration","scope":1874,"src":"3435:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1859,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1867,"initialValue":{"arguments":[{"id":1865,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"3488:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1861,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"3462:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:11","memberName":"call","nodeType":"MemberAccess","src":"3462:11:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"3481:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:11"},{"expression":{"arguments":[{"id":1869,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"3537:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1870,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"3545:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1871,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"3554:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1868,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"3510:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1840,"id":1873,"nodeType":"Return","src":"3503:62:11"}]},"documentation":{"id":1830,"nodeType":"StructuredDocumentation","src":"2862:313:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1875,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:11","nodeType":"FunctionDefinition","parameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"target","nameLocation":"3219:6:11","nodeType":"VariableDeclaration","scope":1875,"src":"3211:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1831,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"data","nameLocation":"3240:4:11","nodeType":"VariableDeclaration","scope":1875,"src":"3227:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1833,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"value","nameLocation":"3254:5:11","nodeType":"VariableDeclaration","scope":1875,"src":"3246:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:11"},"returnParameters":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1875,"src":"3279:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1838,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:11"},"scope":2008,"src":"3180:392:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1900,"nodeType":"Block","src":"3811:154:11","statements":[{"assignments":[1886,1888],"declarations":[{"constant":false,"id":1886,"mutability":"mutable","name":"success","nameLocation":"3827:7:11","nodeType":"VariableDeclaration","scope":1900,"src":"3822:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1885,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1888,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:11","nodeType":"VariableDeclaration","scope":1900,"src":"3836:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1887,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1893,"initialValue":{"arguments":[{"id":1891,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"3881:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1889,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"3863:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:11","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:11","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:11"},{"expression":{"arguments":[{"id":1895,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"3930:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1896,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"3938:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1897,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"3947:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1894,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"3903:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1884,"id":1899,"nodeType":"Return","src":"3896:62:11"}]},"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"3578:128:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":1901,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:11","nodeType":"FunctionDefinition","parameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"target","nameLocation":"3747:6:11","nodeType":"VariableDeclaration","scope":1901,"src":"3739:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1877,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1880,"mutability":"mutable","name":"data","nameLocation":"3768:4:11","nodeType":"VariableDeclaration","scope":1901,"src":"3755:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1879,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:11"},"returnParameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1901,"src":"3797:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1882,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:11"},"scope":2008,"src":"3711:254:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1926,"nodeType":"Block","src":"4203:156:11","statements":[{"assignments":[1912,1914],"declarations":[{"constant":false,"id":1912,"mutability":"mutable","name":"success","nameLocation":"4219:7:11","nodeType":"VariableDeclaration","scope":1926,"src":"4214:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1911,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1914,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:11","nodeType":"VariableDeclaration","scope":1926,"src":"4228:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1913,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1919,"initialValue":{"arguments":[{"id":1917,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"4275:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1915,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4255:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:11","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:11","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:11"},{"expression":{"arguments":[{"id":1921,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4324:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1922,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"4332:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1923,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"4341:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1920,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"4297:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1910,"id":1925,"nodeType":"Return","src":"4290:62:11"}]},"documentation":{"id":1902,"nodeType":"StructuredDocumentation","src":"3971:130:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":1927,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:11","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"target","nameLocation":"4144:6:11","nodeType":"VariableDeclaration","scope":1927,"src":"4136:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1903,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"data","nameLocation":"4165:4:11","nodeType":"VariableDeclaration","scope":1927,"src":"4152:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1905,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:11"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1927,"src":"4189:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1908,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:11"},"scope":2008,"src":"4106:253:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1966,"nodeType":"Block","src":"4783:424:11","statements":[{"condition":{"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:11","subExpression":{"id":1939,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"4798:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1964,"nodeType":"Block","src":"4857:344:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1946,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"5045:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:11","memberName":"length","nodeType":"MemberAccess","src":"5045:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1950,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"5071:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:11","memberName":"code","nodeType":"MemberAccess","src":"5071:11:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:11","memberName":"length","nodeType":"MemberAccess","src":"5071:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1961,"nodeType":"IfStatement","src":"5041:119:11","trueBody":{"id":1960,"nodeType":"Block","src":"5096:64:11","statements":[{"errorCall":{"arguments":[{"id":1957,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"5138:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1956,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"5121:16:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1959,"nodeType":"RevertStatement","src":"5114:31:11"}]}},{"expression":{"id":1962,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"5180:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1938,"id":1963,"nodeType":"Return","src":"5173:17:11"}]},"id":1965,"nodeType":"IfStatement","src":"4793:408:11","trueBody":{"id":1945,"nodeType":"Block","src":"4807:44:11","statements":[{"expression":{"arguments":[{"id":1942,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"4829:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1941,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"4821:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1944,"nodeType":"ExpressionStatement","src":"4821:19:11"}]}}]},"documentation":{"id":1928,"nodeType":"StructuredDocumentation","src":"4365:255:11","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":1967,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:11","nodeType":"FunctionDefinition","parameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"target","nameLocation":"4678:6:11","nodeType":"VariableDeclaration","scope":1967,"src":"4670:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1929,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1932,"mutability":"mutable","name":"success","nameLocation":"4699:7:11","nodeType":"VariableDeclaration","scope":1967,"src":"4694:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1931,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:11","nodeType":"VariableDeclaration","scope":1967,"src":"4716:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1933,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:11"},"returnParameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1967,"src":"4769:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1936,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:11"},"scope":2008,"src":"4625:582:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1988,"nodeType":"Block","src":"5509:122:11","statements":[{"condition":{"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:11","subExpression":{"id":1977,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"5524:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1986,"nodeType":"Block","src":"5583:42:11","statements":[{"expression":{"id":1984,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"5604:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1976,"id":1985,"nodeType":"Return","src":"5597:17:11"}]},"id":1987,"nodeType":"IfStatement","src":"5519:106:11","trueBody":{"id":1983,"nodeType":"Block","src":"5533:44:11","statements":[{"expression":{"arguments":[{"id":1980,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"5555:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1979,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"5547:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1982,"nodeType":"ExpressionStatement","src":"5547:19:11"}]}}]},"documentation":{"id":1968,"nodeType":"StructuredDocumentation","src":"5213:189:11","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":1989,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:11","nodeType":"FunctionDefinition","parameters":{"id":1973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"success","nameLocation":"5438:7:11","nodeType":"VariableDeclaration","scope":1989,"src":"5433:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1969,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:11","nodeType":"VariableDeclaration","scope":1989,"src":"5447:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1971,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:11"},"returnParameters":{"id":1976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1989,"src":"5495:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1974,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:11"},"scope":2008,"src":"5407:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2006,"nodeType":"Block","src":"5798:461:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1995,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"5874:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:11","memberName":"length","nodeType":"MemberAccess","src":"5874:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2004,"nodeType":"Block","src":"6204:49:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2001,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"6225:15:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2003,"nodeType":"RevertStatement","src":"6218:24:11"}]},"id":2005,"nodeType":"IfStatement","src":"5870:383:11","trueBody":{"id":2000,"nodeType":"Block","src":"5897:301:11","statements":[{"AST":{"nativeSrc":"6055:133:11","nodeType":"YulBlock","src":"6055:133:11","statements":[{"nativeSrc":"6073:40:11","nodeType":"YulVariableDeclaration","src":"6073:40:11","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:11","nodeType":"YulIdentifier","src":"6102:10:11"}],"functionName":{"name":"mload","nativeSrc":"6096:5:11","nodeType":"YulIdentifier","src":"6096:5:11"},"nativeSrc":"6096:17:11","nodeType":"YulFunctionCall","src":"6096:17:11"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:11","nodeType":"YulTypedName","src":"6077:15:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:11","nodeType":"YulLiteral","src":"6141:2:11","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:11","nodeType":"YulIdentifier","src":"6145:10:11"}],"functionName":{"name":"add","nativeSrc":"6137:3:11","nodeType":"YulIdentifier","src":"6137:3:11"},"nativeSrc":"6137:19:11","nodeType":"YulFunctionCall","src":"6137:19:11"},{"name":"returndata_size","nativeSrc":"6158:15:11","nodeType":"YulIdentifier","src":"6158:15:11"}],"functionName":{"name":"revert","nativeSrc":"6130:6:11","nodeType":"YulIdentifier","src":"6130:6:11"},"nativeSrc":"6130:44:11","nodeType":"YulFunctionCall","src":"6130:44:11"},"nativeSrc":"6130:44:11","nodeType":"YulExpressionStatement","src":"6130:44:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":1992,"isOffset":false,"isSlot":false,"src":"6102:10:11","valueSize":1},{"declaration":1992,"isOffset":false,"isSlot":false,"src":"6145:10:11","valueSize":1}],"id":1999,"nodeType":"InlineAssembly","src":"6046:142:11"}]}}]},"documentation":{"id":1990,"nodeType":"StructuredDocumentation","src":"5637:101:11","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":2007,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:11","nodeType":"FunctionDefinition","parameters":{"id":1993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1992,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:11","nodeType":"VariableDeclaration","scope":2007,"src":"5760:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1991,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:11"},"returnParameters":{"id":1994,"nodeType":"ParameterList","parameters":[],"src":"5798:0:11"},"scope":2008,"src":"5743:516:11","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2009,"src":"195:6066:11","usedErrors":[1763,1768,1771],"usedEvents":[]}],"src":"101:6161:11"},"id":11},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2038]},"id":2039,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2010,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"127:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2038,"linearizedBaseContracts":[2038],"name":"Context","nameLocation":"642:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2019,"nodeType":"Block","src":"718:34:12","statements":[{"expression":{"expression":{"id":2016,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:12","memberName":"sender","nodeType":"MemberAccess","src":"735:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2015,"id":2018,"nodeType":"Return","src":"728:17:12"}]},"id":2020,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:12","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[],"src":"675:2:12"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2020,"src":"709:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2013,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:12"},"scope":2038,"src":"656:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2028,"nodeType":"Block","src":"825:32:12","statements":[{"expression":{"expression":{"id":2025,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:12","memberName":"data","nodeType":"MemberAccess","src":"842:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2024,"id":2027,"nodeType":"Return","src":"835:15:12"}]},"id":2029,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:12","nodeType":"FunctionDefinition","parameters":{"id":2021,"nodeType":"ParameterList","parameters":[],"src":"775:2:12"},"returnParameters":{"id":2024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2029,"src":"809:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2022,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:12"},"scope":2038,"src":"758:99:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2036,"nodeType":"Block","src":"935:25:12","statements":[{"expression":{"hexValue":"30","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2033,"id":2035,"nodeType":"Return","src":"945:8:12"}]},"id":2037,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:12","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[],"src":"892:2:12"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2037,"src":"926:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:12"},"scope":2038,"src":"863:97:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2039,"src":"624:338:12","usedErrors":[],"usedEvents":[]}],"src":"101:862:12"},"id":12},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2148]},"id":2149,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2040,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2041,"nodeType":"StructuredDocumentation","src":"219:1025:13","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":2148,"linearizedBaseContracts":[2148],"name":"StorageSlot","nameLocation":"1253:11:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2044,"members":[{"constant":false,"id":2043,"mutability":"mutable","name":"value","nameLocation":"1308:5:13","nodeType":"VariableDeclaration","scope":2044,"src":"1300:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2042,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:13","nodeType":"StructDefinition","scope":2148,"src":"1271:49:13","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2047,"members":[{"constant":false,"id":2046,"mutability":"mutable","name":"value","nameLocation":"1360:5:13","nodeType":"VariableDeclaration","scope":2047,"src":"1355:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2045,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:13","nodeType":"StructDefinition","scope":2148,"src":"1326:46:13","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2050,"members":[{"constant":false,"id":2049,"mutability":"mutable","name":"value","nameLocation":"1415:5:13","nodeType":"VariableDeclaration","scope":2050,"src":"1407:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:13","nodeType":"StructDefinition","scope":2148,"src":"1378:49:13","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2053,"members":[{"constant":false,"id":2052,"mutability":"mutable","name":"value","nameLocation":"1470:5:13","nodeType":"VariableDeclaration","scope":2053,"src":"1462:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2051,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:13","nodeType":"StructDefinition","scope":2148,"src":"1433:49:13","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2056,"members":[{"constant":false,"id":2055,"mutability":"mutable","name":"value","nameLocation":"1523:5:13","nodeType":"VariableDeclaration","scope":2056,"src":"1516:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2054,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:13","nodeType":"StructDefinition","scope":2148,"src":"1488:47:13","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2059,"members":[{"constant":false,"id":2058,"mutability":"mutable","name":"value","nameLocation":"1574:5:13","nodeType":"VariableDeclaration","scope":2059,"src":"1568:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2057,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:13","nodeType":"StructDefinition","scope":2148,"src":"1541:45:13","visibility":"public"},{"body":{"id":2069,"nodeType":"Block","src":"1768:106:13","statements":[{"AST":{"nativeSrc":"1830:38:13","nodeType":"YulBlock","src":"1830:38:13","statements":[{"nativeSrc":"1844:14:13","nodeType":"YulAssignment","src":"1844:14:13","value":{"name":"slot","nativeSrc":"1854:4:13","nodeType":"YulIdentifier","src":"1854:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:13","nodeType":"YulIdentifier","src":"1844:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2066,"isOffset":false,"isSlot":true,"src":"1844:6:13","suffix":"slot","valueSize":1},{"declaration":2062,"isOffset":false,"isSlot":false,"src":"1854:4:13","valueSize":1}],"id":2068,"nodeType":"InlineAssembly","src":"1821:47:13"}]},"documentation":{"id":2060,"nodeType":"StructuredDocumentation","src":"1592:87:13","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2070,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:13","nodeType":"FunctionDefinition","parameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2062,"mutability":"mutable","name":"slot","nameLocation":"1716:4:13","nodeType":"VariableDeclaration","scope":2070,"src":"1708:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:13"},"returnParameters":{"id":2067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"mutability":"mutable","name":"r","nameLocation":"1765:1:13","nodeType":"VariableDeclaration","scope":2070,"src":"1745:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2044_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2065,"nodeType":"UserDefinedTypeName","pathNode":{"id":2064,"name":"AddressSlot","nameLocations":["1745:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2044,"src":"1745:11:13"},"referencedDeclaration":2044,"src":"1745:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2044_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:13"},"scope":2148,"src":"1684:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2080,"nodeType":"Block","src":"2056:106:13","statements":[{"AST":{"nativeSrc":"2118:38:13","nodeType":"YulBlock","src":"2118:38:13","statements":[{"nativeSrc":"2132:14:13","nodeType":"YulAssignment","src":"2132:14:13","value":{"name":"slot","nativeSrc":"2142:4:13","nodeType":"YulIdentifier","src":"2142:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:13","nodeType":"YulIdentifier","src":"2132:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2077,"isOffset":false,"isSlot":true,"src":"2132:6:13","suffix":"slot","valueSize":1},{"declaration":2073,"isOffset":false,"isSlot":false,"src":"2142:4:13","valueSize":1}],"id":2079,"nodeType":"InlineAssembly","src":"2109:47:13"}]},"documentation":{"id":2071,"nodeType":"StructuredDocumentation","src":"1880:87:13","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2081,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:13","nodeType":"FunctionDefinition","parameters":{"id":2074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"mutability":"mutable","name":"slot","nameLocation":"2004:4:13","nodeType":"VariableDeclaration","scope":2081,"src":"1996:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:13"},"returnParameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2077,"mutability":"mutable","name":"r","nameLocation":"2053:1:13","nodeType":"VariableDeclaration","scope":2081,"src":"2033:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2047_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2076,"nodeType":"UserDefinedTypeName","pathNode":{"id":2075,"name":"BooleanSlot","nameLocations":["2033:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2047,"src":"2033:11:13"},"referencedDeclaration":2047,"src":"2033:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2047_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:13"},"scope":2148,"src":"1972:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2091,"nodeType":"Block","src":"2344:106:13","statements":[{"AST":{"nativeSrc":"2406:38:13","nodeType":"YulBlock","src":"2406:38:13","statements":[{"nativeSrc":"2420:14:13","nodeType":"YulAssignment","src":"2420:14:13","value":{"name":"slot","nativeSrc":"2430:4:13","nodeType":"YulIdentifier","src":"2430:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:13","nodeType":"YulIdentifier","src":"2420:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2088,"isOffset":false,"isSlot":true,"src":"2420:6:13","suffix":"slot","valueSize":1},{"declaration":2084,"isOffset":false,"isSlot":false,"src":"2430:4:13","valueSize":1}],"id":2090,"nodeType":"InlineAssembly","src":"2397:47:13"}]},"documentation":{"id":2082,"nodeType":"StructuredDocumentation","src":"2168:87:13","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2092,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:13","nodeType":"FunctionDefinition","parameters":{"id":2085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2084,"mutability":"mutable","name":"slot","nameLocation":"2292:4:13","nodeType":"VariableDeclaration","scope":2092,"src":"2284:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2083,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:13"},"returnParameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2088,"mutability":"mutable","name":"r","nameLocation":"2341:1:13","nodeType":"VariableDeclaration","scope":2092,"src":"2321:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2050_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2087,"nodeType":"UserDefinedTypeName","pathNode":{"id":2086,"name":"Bytes32Slot","nameLocations":["2321:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2050,"src":"2321:11:13"},"referencedDeclaration":2050,"src":"2321:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2050_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:13"},"scope":2148,"src":"2260:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2102,"nodeType":"Block","src":"2632:106:13","statements":[{"AST":{"nativeSrc":"2694:38:13","nodeType":"YulBlock","src":"2694:38:13","statements":[{"nativeSrc":"2708:14:13","nodeType":"YulAssignment","src":"2708:14:13","value":{"name":"slot","nativeSrc":"2718:4:13","nodeType":"YulIdentifier","src":"2718:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:13","nodeType":"YulIdentifier","src":"2708:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2099,"isOffset":false,"isSlot":true,"src":"2708:6:13","suffix":"slot","valueSize":1},{"declaration":2095,"isOffset":false,"isSlot":false,"src":"2718:4:13","valueSize":1}],"id":2101,"nodeType":"InlineAssembly","src":"2685:47:13"}]},"documentation":{"id":2093,"nodeType":"StructuredDocumentation","src":"2456:87:13","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2103,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:13","nodeType":"FunctionDefinition","parameters":{"id":2096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2095,"mutability":"mutable","name":"slot","nameLocation":"2580:4:13","nodeType":"VariableDeclaration","scope":2103,"src":"2572:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:13"},"returnParameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"r","nameLocation":"2629:1:13","nodeType":"VariableDeclaration","scope":2103,"src":"2609:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2053_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2098,"nodeType":"UserDefinedTypeName","pathNode":{"id":2097,"name":"Uint256Slot","nameLocations":["2609:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2053,"src":"2609:11:13"},"referencedDeclaration":2053,"src":"2609:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2053_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:13"},"scope":2148,"src":"2548:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2113,"nodeType":"Block","src":"2917:106:13","statements":[{"AST":{"nativeSrc":"2979:38:13","nodeType":"YulBlock","src":"2979:38:13","statements":[{"nativeSrc":"2993:14:13","nodeType":"YulAssignment","src":"2993:14:13","value":{"name":"slot","nativeSrc":"3003:4:13","nodeType":"YulIdentifier","src":"3003:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:13","nodeType":"YulIdentifier","src":"2993:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2110,"isOffset":false,"isSlot":true,"src":"2993:6:13","suffix":"slot","valueSize":1},{"declaration":2106,"isOffset":false,"isSlot":false,"src":"3003:4:13","valueSize":1}],"id":2112,"nodeType":"InlineAssembly","src":"2970:47:13"}]},"documentation":{"id":2104,"nodeType":"StructuredDocumentation","src":"2744:86:13","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2114,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:13","nodeType":"FunctionDefinition","parameters":{"id":2107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2106,"mutability":"mutable","name":"slot","nameLocation":"2866:4:13","nodeType":"VariableDeclaration","scope":2114,"src":"2858:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2105,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:13"},"returnParameters":{"id":2111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2110,"mutability":"mutable","name":"r","nameLocation":"2914:1:13","nodeType":"VariableDeclaration","scope":2114,"src":"2895:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2056_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2109,"nodeType":"UserDefinedTypeName","pathNode":{"id":2108,"name":"StringSlot","nameLocations":["2895:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2056,"src":"2895:10:13"},"referencedDeclaration":2056,"src":"2895:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2056_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:13"},"scope":2148,"src":"2835:188:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2124,"nodeType":"Block","src":"3225:112:13","statements":[{"AST":{"nativeSrc":"3287:44:13","nodeType":"YulBlock","src":"3287:44:13","statements":[{"nativeSrc":"3301:20:13","nodeType":"YulAssignment","src":"3301:20:13","value":{"name":"store.slot","nativeSrc":"3311:10:13","nodeType":"YulIdentifier","src":"3311:10:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:13","nodeType":"YulIdentifier","src":"3301:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2121,"isOffset":false,"isSlot":true,"src":"3301:6:13","suffix":"slot","valueSize":1},{"declaration":2117,"isOffset":false,"isSlot":true,"src":"3311:10:13","suffix":"slot","valueSize":1}],"id":2123,"nodeType":"InlineAssembly","src":"3278:53:13"}]},"documentation":{"id":2115,"nodeType":"StructuredDocumentation","src":"3029:101:13","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2125,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:13","nodeType":"FunctionDefinition","parameters":{"id":2118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2117,"mutability":"mutable","name":"store","nameLocation":"3173:5:13","nodeType":"VariableDeclaration","scope":2125,"src":"3158:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2116,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:13"},"returnParameters":{"id":2122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"r","nameLocation":"3222:1:13","nodeType":"VariableDeclaration","scope":2125,"src":"3203:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2056_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2120,"nodeType":"UserDefinedTypeName","pathNode":{"id":2119,"name":"StringSlot","nameLocations":["3203:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2056,"src":"3203:10:13"},"referencedDeclaration":2056,"src":"3203:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2056_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:13"},"scope":2148,"src":"3135:202:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2135,"nodeType":"Block","src":"3513:106:13","statements":[{"AST":{"nativeSrc":"3575:38:13","nodeType":"YulBlock","src":"3575:38:13","statements":[{"nativeSrc":"3589:14:13","nodeType":"YulAssignment","src":"3589:14:13","value":{"name":"slot","nativeSrc":"3599:4:13","nodeType":"YulIdentifier","src":"3599:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:13","nodeType":"YulIdentifier","src":"3589:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2132,"isOffset":false,"isSlot":true,"src":"3589:6:13","suffix":"slot","valueSize":1},{"declaration":2128,"isOffset":false,"isSlot":false,"src":"3599:4:13","valueSize":1}],"id":2134,"nodeType":"InlineAssembly","src":"3566:47:13"}]},"documentation":{"id":2126,"nodeType":"StructuredDocumentation","src":"3343:85:13","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2136,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:13","nodeType":"FunctionDefinition","parameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"slot","nameLocation":"3463:4:13","nodeType":"VariableDeclaration","scope":2136,"src":"3455:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:13"},"returnParameters":{"id":2133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2132,"mutability":"mutable","name":"r","nameLocation":"3510:1:13","nodeType":"VariableDeclaration","scope":2136,"src":"3492:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2059_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2131,"nodeType":"UserDefinedTypeName","pathNode":{"id":2130,"name":"BytesSlot","nameLocations":["3492:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":2059,"src":"3492:9:13"},"referencedDeclaration":2059,"src":"3492:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2059_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:13"},"scope":2148,"src":"3433:186:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2146,"nodeType":"Block","src":"3816:112:13","statements":[{"AST":{"nativeSrc":"3878:44:13","nodeType":"YulBlock","src":"3878:44:13","statements":[{"nativeSrc":"3892:20:13","nodeType":"YulAssignment","src":"3892:20:13","value":{"name":"store.slot","nativeSrc":"3902:10:13","nodeType":"YulIdentifier","src":"3902:10:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:13","nodeType":"YulIdentifier","src":"3892:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2143,"isOffset":false,"isSlot":true,"src":"3892:6:13","suffix":"slot","valueSize":1},{"declaration":2139,"isOffset":false,"isSlot":true,"src":"3902:10:13","suffix":"slot","valueSize":1}],"id":2145,"nodeType":"InlineAssembly","src":"3869:53:13"}]},"documentation":{"id":2137,"nodeType":"StructuredDocumentation","src":"3625:99:13","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2147,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:13","nodeType":"FunctionDefinition","parameters":{"id":2140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2139,"mutability":"mutable","name":"store","nameLocation":"3765:5:13","nodeType":"VariableDeclaration","scope":2147,"src":"3751:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2138,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:13"},"returnParameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2143,"mutability":"mutable","name":"r","nameLocation":"3813:1:13","nodeType":"VariableDeclaration","scope":2147,"src":"3795:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2059_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2142,"nodeType":"UserDefinedTypeName","pathNode":{"id":2141,"name":"BytesSlot","nameLocations":["3795:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":2059,"src":"3795:9:13"},"referencedDeclaration":2059,"src":"3795:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2059_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:13"},"scope":2148,"src":"3729:199:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2149,"src":"1245:2685:13","usedErrors":[],"usedEvents":[]}],"src":"193:3738:13"},"id":13},"contracts/BaluniV1PoolPeriphery.sol":{"ast":{"absolutePath":"contracts/BaluniV1PoolPeriphery.sol","exportedSymbols":{"BaluniV1PoolPeriphery":[3607],"Context":[2038],"ContextUpgradeable":[676],"ERC1967Utils":[1126],"ERC20":[1651],"IBaluniV1Pool":[3884],"IBaluniV1PoolFactory":[3917],"IERC1822Proxiable":[686],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755],"Initializable":[448],"OwnableUpgradeable":[194],"UUPSUpgradeable":[630]},"id":3608,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2150,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:14"},{"absolutePath":"contracts/interfaces/IBaluniV1PoolFactory.sol","file":"./interfaces/IBaluniV1PoolFactory.sol","id":2151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3608,"sourceUnit":3918,"src":"1466:47:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Pool.sol","file":"./interfaces/IBaluniV1Pool.sol","id":2152,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3608,"sourceUnit":3885,"src":"1515:40:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":2153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3608,"sourceUnit":195,"src":"1557:75:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":2154,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3608,"sourceUnit":449,"src":"1634:75:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":2155,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3608,"sourceUnit":631,"src":"1711:77:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2157,"name":"Initializable","nameLocations":["2100:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"2100:13:14"},"id":2158,"nodeType":"InheritanceSpecifier","src":"2100:13:14"},{"baseName":{"id":2159,"name":"OwnableUpgradeable","nameLocations":["2115:18:14"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"2115:18:14"},"id":2160,"nodeType":"InheritanceSpecifier","src":"2115:18:14"},{"baseName":{"id":2161,"name":"UUPSUpgradeable","nameLocations":["2135:15:14"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"2135:15:14"},"id":2162,"nodeType":"InheritanceSpecifier","src":"2135:15:14"}],"canonicalName":"BaluniV1PoolPeriphery","contractDependencies":[],"contractKind":"contract","documentation":{"id":2156,"nodeType":"StructuredDocumentation","src":"1792:272:14","text":" @title BaluniV1PoolPeriphery\n @dev This contract serves as the periphery contract for interacting with BaluniV1Pool contracts.\n It provides functions for swapping tokens, adding liquidity, removing liquidity, and getting the amount out for a given swap."},"fullyImplemented":true,"id":3607,"linearizedBaseContracts":[3607,630,686,194,676,448],"name":"BaluniV1PoolPeriphery","nameLocation":"2075:21:14","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"4219dc40","id":2165,"mutability":"mutable","name":"poolFactory","nameLocation":"2186:11:14","nodeType":"VariableDeclaration","scope":3607,"src":"2158:39:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3917","typeString":"contract IBaluniV1PoolFactory"},"typeName":{"id":2164,"nodeType":"UserDefinedTypeName","pathNode":{"id":2163,"name":"IBaluniV1PoolFactory","nameLocations":["2158:20:14"],"nodeType":"IdentifierPath","referencedDeclaration":3917,"src":"2158:20:14"},"referencedDeclaration":3917,"src":"2158:20:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3917","typeString":"contract IBaluniV1PoolFactory"}},"visibility":"public"},{"constant":false,"functionSelector":"4056c37f","id":2171,"mutability":"mutable","name":"poolsReserves","nameLocation":"2261:13:14","nodeType":"VariableDeclaration","scope":3607,"src":"2206:68:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":2170,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2166,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2206:47:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2169,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2167,"name":"address","nodeType":"ElementaryTypeName","src":"2233:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2225:27:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2168,"name":"uint256","nodeType":"ElementaryTypeName","src":"2244:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"body":{"id":2193,"nodeType":"Block","src":"2578:139:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2179,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"2589:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2181,"nodeType":"ExpressionStatement","src":"2589:24:14"},{"expression":{"arguments":[{"expression":{"id":2183,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2639:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2643:6:14","memberName":"sender","nodeType":"MemberAccess","src":"2639:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2182,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"2624:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2624:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2186,"nodeType":"ExpressionStatement","src":"2624:26:14"},{"expression":{"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2187,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"2661:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3917","typeString":"contract IBaluniV1PoolFactory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2189,"name":"_poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"2696:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2188,"name":"IBaluniV1PoolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"2675:20:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolFactory_$3917_$","typeString":"type(contract IBaluniV1PoolFactory)"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3917","typeString":"contract IBaluniV1PoolFactory"}},"src":"2661:48:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3917","typeString":"contract IBaluniV1PoolFactory"}},"id":2192,"nodeType":"ExpressionStatement","src":"2661:48:14"}]},"documentation":{"id":2172,"nodeType":"StructuredDocumentation","src":"2347:164:14","text":" @dev Initializes the contract by setting the pool factory address.\n @param _poolFactory The address of the BaluniV1PoolFactory contract."},"functionSelector":"c4d66de8","id":2194,"implemented":true,"kind":"function","modifiers":[{"id":2177,"kind":"modifierInvocation","modifierName":{"id":2176,"name":"initializer","nameLocations":["2566:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"2566:11:14"},"nodeType":"ModifierInvocation","src":"2566:11:14"}],"name":"initialize","nameLocation":"2526:10:14","nodeType":"FunctionDefinition","parameters":{"id":2175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2174,"mutability":"mutable","name":"_poolFactory","nameLocation":"2545:12:14","nodeType":"VariableDeclaration","scope":2194,"src":"2537:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2173,"name":"address","nodeType":"ElementaryTypeName","src":"2537:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2536:22:14"},"returnParameters":{"id":2178,"nodeType":"ParameterList","parameters":[],"src":"2578:0:14"},"scope":3607,"src":"2517:200:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2211,"nodeType":"Block","src":"2985:67:14","statements":[{"expression":{"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2205,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"2996:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3917","typeString":"contract IBaluniV1PoolFactory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2207,"name":"_poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"3031:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2206,"name":"IBaluniV1PoolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"3010:20:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolFactory_$3917_$","typeString":"type(contract IBaluniV1PoolFactory)"}},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3917","typeString":"contract IBaluniV1PoolFactory"}},"src":"2996:48:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3917","typeString":"contract IBaluniV1PoolFactory"}},"id":2210,"nodeType":"ExpressionStatement","src":"2996:48:14"}]},"documentation":{"id":2195,"nodeType":"StructuredDocumentation","src":"2725:164:14","text":" @dev Initializes the contract by setting the pool factory address.\n @param _poolFactory The address of the BaluniV1PoolFactory contract."},"functionSelector":"8f2248bc","id":2212,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2202,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"2976:7:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":2203,"kind":"modifierInvocation","modifierName":{"id":2201,"name":"reinitializer","nameLocations":["2962:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":349,"src":"2962:13:14"},"nodeType":"ModifierInvocation","src":"2962:22:14"}],"name":"reinitialize","nameLocation":"2904:12:14","nodeType":"FunctionDefinition","parameters":{"id":2200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"_poolFactory","nameLocation":"2925:12:14","nodeType":"VariableDeclaration","scope":2212,"src":"2917:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2196,"name":"address","nodeType":"ElementaryTypeName","src":"2917:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2199,"mutability":"mutable","name":"version","nameLocation":"2946:7:14","nodeType":"VariableDeclaration","scope":2212,"src":"2939:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2198,"name":"uint64","nodeType":"ElementaryTypeName","src":"2939:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2916:38:14"},"returnParameters":{"id":2204,"nodeType":"ParameterList","parameters":[],"src":"2985:0:14"},"scope":3607,"src":"2895:157:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[584],"body":{"id":2221,"nodeType":"Block","src":"3402:2:14","statements":[]},"documentation":{"id":2213,"nodeType":"StructuredDocumentation","src":"3060:254:14","text":" @dev Internal function to authorize an upgrade to a new implementation contract.\n @param newImplementation The address of the new implementation contract.\n @notice This function can only be called by the contract owner."},"id":2222,"implemented":true,"kind":"function","modifiers":[{"id":2219,"kind":"modifierInvocation","modifierName":{"id":2218,"name":"onlyOwner","nameLocations":["3392:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3392:9:14"},"nodeType":"ModifierInvocation","src":"3392:9:14"}],"name":"_authorizeUpgrade","nameLocation":"3329:17:14","nodeType":"FunctionDefinition","overrides":{"id":2217,"nodeType":"OverrideSpecifier","overrides":[],"src":"3383:8:14"},"parameters":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2215,"mutability":"mutable","name":"newImplementation","nameLocation":"3355:17:14","nodeType":"VariableDeclaration","scope":2222,"src":"3347:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2214,"name":"address","nodeType":"ElementaryTypeName","src":"3347:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3346:27:14"},"returnParameters":{"id":2220,"nodeType":"ParameterList","parameters":[],"src":"3402:0:14"},"scope":3607,"src":"3320:84:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2307,"nodeType":"Block","src":"3824:566:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2237,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"3843:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3852:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3843:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":2240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3855:34:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":2236,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3835:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3835:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2242,"nodeType":"ExpressionStatement","src":"3835:55:14"},{"assignments":[2244],"declarations":[{"constant":false,"id":2244,"mutability":"mutable","name":"poolAddress","nameLocation":"3911:11:14","nodeType":"VariableDeclaration","scope":2307,"src":"3903:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2243,"name":"address","nodeType":"ElementaryTypeName","src":"3903:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2250,"initialValue":{"arguments":[{"id":2247,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"3953:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2248,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"3964:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2245,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"3925:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3917","typeString":"contract IBaluniV1PoolFactory"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3937:15:14","memberName":"getPoolByAssets","nodeType":"MemberAccess","referencedDeclaration":3895,"src":"3925:27:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view external returns (address)"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3925:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3903:69:14"},{"assignments":[2253],"declarations":[{"constant":false,"id":2253,"mutability":"mutable","name":"pool","nameLocation":"3997:4:14","nodeType":"VariableDeclaration","scope":2307,"src":"3983:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"},"typeName":{"id":2252,"nodeType":"UserDefinedTypeName","pathNode":{"id":2251,"name":"IBaluniV1Pool","nameLocations":["3983:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":3884,"src":"3983:13:14"},"referencedDeclaration":3884,"src":"3983:13:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":2257,"initialValue":{"arguments":[{"id":2255,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"4018:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2254,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"4004:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$3884_$","typeString":"type(contract IBaluniV1Pool)"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4004:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"3983:47:14"},{"expression":{"arguments":[{"expression":{"id":2262,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4074:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4078:6:14","memberName":"sender","nodeType":"MemberAccess","src":"4074:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2266,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4094:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3607","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3607","typeString":"contract BaluniV1PoolPeriphery"}],"id":2265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4086:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2264,"name":"address","nodeType":"ElementaryTypeName","src":"4086:7:14","typeDescriptions":{}}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2268,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"4101:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2259,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"4050:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2258,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"4043:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4043:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4061:12:14","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"4043:30:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4043:65:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2270,"nodeType":"ExpressionStatement","src":"4043:65:14"},{"assignments":[2272],"declarations":[{"constant":false,"id":2272,"mutability":"mutable","name":"toSend","nameLocation":"4129:6:14","nodeType":"VariableDeclaration","scope":2307,"src":"4121:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2271,"name":"uint256","nodeType":"ElementaryTypeName","src":"4121:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2280,"initialValue":{"arguments":[{"id":2275,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"4148:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2276,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"4159:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2277,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"4168:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2278,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"4176:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2273,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"4138:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4143:4:14","memberName":"swap","nodeType":"MemberAccess","referencedDeclaration":3780,"src":"4138:9:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) external returns (uint256)"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4138:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4121:64:14"},{"expression":{"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2281,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"4198:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2284,"indexExpression":{"id":2282,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"4212:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4198:26:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2285,"indexExpression":{"id":2283,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"4225:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4198:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2286,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"4239:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4198:47:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2288,"nodeType":"ExpressionStatement","src":"4198:47:14"},{"expression":{"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2289,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"4256:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2292,"indexExpression":{"id":2290,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"4270:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4256:26:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2293,"indexExpression":{"id":2291,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"4283:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4256:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2294,"name":"toSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"4295:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4256:45:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2296,"nodeType":"ExpressionStatement","src":"4256:45:14"},{"expression":{"arguments":[{"id":2301,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"4339:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2302,"name":"toSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"4349:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2298,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"4321:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2297,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"4314:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4314:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4330:8:14","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"4314:24:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4314:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2304,"nodeType":"ExpressionStatement","src":"4314:42:14"},{"expression":{"id":2305,"name":"toSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"4376:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2235,"id":2306,"nodeType":"Return","src":"4369:13:14"}]},"documentation":{"id":2223,"nodeType":"StructuredDocumentation","src":"3412:295:14","text":" @dev Swaps tokens in a BaluniV1Pool.\n @param fromToken The address of the token to swap from.\n @param toToken The address of the token to swap to.\n @param amount The amount of tokens to swap.\n @return The amount of tokens received after the swap."},"functionSelector":"6e81221c","id":2308,"implemented":true,"kind":"function","modifiers":[],"name":"swap","nameLocation":"3722:4:14","nodeType":"FunctionDefinition","parameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2225,"mutability":"mutable","name":"fromToken","nameLocation":"3735:9:14","nodeType":"VariableDeclaration","scope":2308,"src":"3727:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2224,"name":"address","nodeType":"ElementaryTypeName","src":"3727:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2227,"mutability":"mutable","name":"toToken","nameLocation":"3754:7:14","nodeType":"VariableDeclaration","scope":2308,"src":"3746:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2226,"name":"address","nodeType":"ElementaryTypeName","src":"3746:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2229,"mutability":"mutable","name":"amount","nameLocation":"3771:6:14","nodeType":"VariableDeclaration","scope":2308,"src":"3763:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2228,"name":"uint256","nodeType":"ElementaryTypeName","src":"3763:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2231,"mutability":"mutable","name":"receiver","nameLocation":"3787:8:14","nodeType":"VariableDeclaration","scope":2308,"src":"3779:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2230,"name":"address","nodeType":"ElementaryTypeName","src":"3779:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3726:70:14"},"returnParameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2308,"src":"3815:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2233,"name":"uint256","nodeType":"ElementaryTypeName","src":"3815:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3814:9:14"},"scope":3607,"src":"3713:677:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2472,"nodeType":"Block","src":"5135:1038:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2328,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"5168:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5179:6:14","memberName":"length","nodeType":"MemberAccess","src":"5168:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2330,"name":"toTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"5189:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5198:6:14","memberName":"length","nodeType":"MemberAccess","src":"5189:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:36:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2333,"name":"toTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"5225:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5234:6:14","memberName":"length","nodeType":"MemberAccess","src":"5225:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2335,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"5244:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5252:6:14","memberName":"length","nodeType":"MemberAccess","src":"5244:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5225:33:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5168:90:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2339,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"5279:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5287:6:14","memberName":"length","nodeType":"MemberAccess","src":"5279:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2341,"name":"receivers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"5297:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5307:6:14","memberName":"length","nodeType":"MemberAccess","src":"5297:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5279:34:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5168:145:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e70757420617272617973206c656e677468206d69736d61746368","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5328:30:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_435b01265a0cf39a5f3992d984afd4b4e7ac38f8506d53152286f12879fd2786","typeString":"literal_string \"Input arrays length mismatch\""},"value":"Input arrays length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_435b01265a0cf39a5f3992d984afd4b4e7ac38f8506d53152286f12879fd2786","typeString":"literal_string \"Input arrays length mismatch\""}],"id":2327,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5146:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5146:223:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2347,"nodeType":"ExpressionStatement","src":"5146:223:14"},{"assignments":[2352],"declarations":[{"constant":false,"id":2352,"mutability":"mutable","name":"amountsOut","nameLocation":"5399:10:14","nodeType":"VariableDeclaration","scope":2472,"src":"5382:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2350,"name":"uint256","nodeType":"ElementaryTypeName","src":"5382:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2351,"nodeType":"ArrayTypeName","src":"5382:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2359,"initialValue":{"arguments":[{"expression":{"id":2356,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"5426:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5437:6:14","memberName":"length","nodeType":"MemberAccess","src":"5426:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5412:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2353,"name":"uint256","nodeType":"ElementaryTypeName","src":"5416:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2354,"nodeType":"ArrayTypeName","src":"5416:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5412:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5382:62:14"},{"body":{"id":2468,"nodeType":"Block","src":"5505:631:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2372,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"5528:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2374,"indexExpression":{"id":2373,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5536:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5528:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5541:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5528:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5544:34:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":2371,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5520:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5520:59:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2379,"nodeType":"ExpressionStatement","src":"5520:59:14"},{"assignments":[2381],"declarations":[{"constant":false,"id":2381,"mutability":"mutable","name":"poolAddress","nameLocation":"5602:11:14","nodeType":"VariableDeclaration","scope":2468,"src":"5594:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2380,"name":"address","nodeType":"ElementaryTypeName","src":"5594:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2391,"initialValue":{"arguments":[{"baseExpression":{"id":2384,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"5644:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2386,"indexExpression":{"id":2385,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5655:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5644:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2387,"name":"toTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"5659:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2389,"indexExpression":{"id":2388,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5668:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5659:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2382,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"5616:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3917","typeString":"contract IBaluniV1PoolFactory"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5628:15:14","memberName":"getPoolByAssets","nodeType":"MemberAccess","referencedDeclaration":3895,"src":"5616:27:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view external returns (address)"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5616:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5594:77:14"},{"assignments":[2394],"declarations":[{"constant":false,"id":2394,"mutability":"mutable","name":"pool","nameLocation":"5700:4:14","nodeType":"VariableDeclaration","scope":2468,"src":"5686:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"},"typeName":{"id":2393,"nodeType":"UserDefinedTypeName","pathNode":{"id":2392,"name":"IBaluniV1Pool","nameLocations":["5686:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":3884,"src":"5686:13:14"},"referencedDeclaration":3884,"src":"5686:13:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":2398,"initialValue":{"arguments":[{"id":2396,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"5721:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2395,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"5707:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$3884_$","typeString":"type(contract IBaluniV1Pool)"}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5707:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"5686:47:14"},{"expression":{"arguments":[{"expression":{"id":2405,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5783:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5787:6:14","memberName":"sender","nodeType":"MemberAccess","src":"5783:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2409,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5803:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3607","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3607","typeString":"contract BaluniV1PoolPeriphery"}],"id":2408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5795:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2407,"name":"address","nodeType":"ElementaryTypeName","src":"5795:7:14","typeDescriptions":{}}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5795:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2411,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"5810:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2413,"indexExpression":{"id":2412,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5818:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5810:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":2400,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"5755:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2402,"indexExpression":{"id":2401,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5766:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5755:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2399,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"5748:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5748:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5770:12:14","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"5748:34:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5748:73:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2415,"nodeType":"ExpressionStatement","src":"5748:73:14"},{"assignments":[2417],"declarations":[{"constant":false,"id":2417,"mutability":"mutable","name":"amountOut","nameLocation":"5844:9:14","nodeType":"VariableDeclaration","scope":2468,"src":"5836:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2416,"name":"uint256","nodeType":"ElementaryTypeName","src":"5836:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2433,"initialValue":{"arguments":[{"baseExpression":{"id":2420,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"5866:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2422,"indexExpression":{"id":2421,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5877:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5866:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2423,"name":"toTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"5881:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2425,"indexExpression":{"id":2424,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5890:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5881:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2426,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"5894:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2428,"indexExpression":{"id":2427,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5902:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5894:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2429,"name":"receivers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"5906:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2431,"indexExpression":{"id":2430,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5916:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5906:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2418,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"5856:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5861:4:14","memberName":"swap","nodeType":"MemberAccess","referencedDeclaration":3780,"src":"5856:9:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) external returns (uint256)"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5856:63:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5836:83:14"},{"expression":{"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2434,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"5934:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2439,"indexExpression":{"id":2435,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"5948:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5934:26:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2440,"indexExpression":{"baseExpression":{"id":2436,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"5961:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2438,"indexExpression":{"id":2437,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5972:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5961:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5934:41:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":2441,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"5979:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2443,"indexExpression":{"id":2442,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5987:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5979:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5934:55:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2445,"nodeType":"ExpressionStatement","src":"5934:55:14"},{"expression":{"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2446,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"6004:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2451,"indexExpression":{"id":2447,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"6018:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6004:26:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2452,"indexExpression":{"baseExpression":{"id":2448,"name":"toTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"6031:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2450,"indexExpression":{"id":2449,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"6040:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6031:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6004:39:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2453,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"6047:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6004:52:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2455,"nodeType":"ExpressionStatement","src":"6004:52:14"},{"expression":{"arguments":[{"baseExpression":{"id":2462,"name":"receivers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"6100:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2464,"indexExpression":{"id":2463,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"6110:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6100:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2465,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"6114:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":2457,"name":"toTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"6078:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2459,"indexExpression":{"id":2458,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"6087:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6078:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2456,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"6071:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6071:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6091:8:14","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"6071:28:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6071:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2467,"nodeType":"ExpressionStatement","src":"6071:53:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2364,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5477:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2365,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"5481:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5492:6:14","memberName":"length","nodeType":"MemberAccess","src":"5481:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5477:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2469,"initializationExpression":{"assignments":[2361],"declarations":[{"constant":false,"id":2361,"mutability":"mutable","name":"i","nameLocation":"5470:1:14","nodeType":"VariableDeclaration","scope":2469,"src":"5462:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2360,"name":"uint256","nodeType":"ElementaryTypeName","src":"5462:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2363,"initialValue":{"hexValue":"30","id":2362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5474:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5462:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5500:3:14","subExpression":{"id":2368,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5500:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2370,"nodeType":"ExpressionStatement","src":"5500:3:14"},"nodeType":"ForStatement","src":"5457:679:14"},{"expression":{"id":2470,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"6155:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2326,"id":2471,"nodeType":"Return","src":"6148:17:14"}]},"documentation":{"id":2309,"nodeType":"StructuredDocumentation","src":"4398:515:14","text":" @dev Performs batch swaps between multiple token pairs.\n @param fromTokens An array of addresses representing the tokens to swap from.\n @param toTokens An array of addresses representing the tokens to swap to.\n @param amounts An array of amounts representing the amounts to swap.\n @param receivers An array of addresses representing the receivers of the swapped tokens.\n @return An array of amounts representing the amounts of tokens received after the swaps."},"functionSelector":"e74e9b06","id":2473,"implemented":true,"kind":"function","modifiers":[],"name":"batchSwap","nameLocation":"4928:9:14","nodeType":"FunctionDefinition","parameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2312,"mutability":"mutable","name":"fromTokens","nameLocation":"4967:10:14","nodeType":"VariableDeclaration","scope":2473,"src":"4948:29:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2310,"name":"address","nodeType":"ElementaryTypeName","src":"4948:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2311,"nodeType":"ArrayTypeName","src":"4948:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2315,"mutability":"mutable","name":"toTokens","nameLocation":"5007:8:14","nodeType":"VariableDeclaration","scope":2473,"src":"4988:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2313,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2314,"nodeType":"ArrayTypeName","src":"4988:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2318,"mutability":"mutable","name":"amounts","nameLocation":"5045:7:14","nodeType":"VariableDeclaration","scope":2473,"src":"5026:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2316,"name":"uint256","nodeType":"ElementaryTypeName","src":"5026:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2317,"nodeType":"ArrayTypeName","src":"5026:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2321,"mutability":"mutable","name":"receivers","nameLocation":"5082:9:14","nodeType":"VariableDeclaration","scope":2473,"src":"5063:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2319,"name":"address","nodeType":"ElementaryTypeName","src":"5063:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2320,"nodeType":"ArrayTypeName","src":"5063:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4937:161:14"},"returnParameters":{"id":2326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2473,"src":"5117:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2323,"name":"uint256","nodeType":"ElementaryTypeName","src":"5117:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2324,"nodeType":"ArrayTypeName","src":"5117:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5116:18:14"},"scope":3607,"src":"4919:1254:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2547,"nodeType":"Block","src":"6255:402:14","statements":[{"assignments":[2482],"declarations":[{"constant":false,"id":2482,"mutability":"mutable","name":"pool","nameLocation":"6280:4:14","nodeType":"VariableDeclaration","scope":2547,"src":"6266:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"},"typeName":{"id":2481,"nodeType":"UserDefinedTypeName","pathNode":{"id":2480,"name":"IBaluniV1Pool","nameLocations":["6266:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":3884,"src":"6266:13:14"},"referencedDeclaration":3884,"src":"6266:13:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":2486,"initialValue":{"arguments":[{"id":2484,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"6301:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2483,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"6287:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$3884_$","typeString":"type(contract IBaluniV1Pool)"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6287:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"6266:47:14"},{"assignments":[2491],"declarations":[{"constant":false,"id":2491,"mutability":"mutable","name":"amounts","nameLocation":"6341:7:14","nodeType":"VariableDeclaration","scope":2547,"src":"6324:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2489,"name":"uint256","nodeType":"ElementaryTypeName","src":"6324:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2490,"nodeType":"ArrayTypeName","src":"6324:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2496,"initialValue":{"arguments":[{"id":2494,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"6373:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2492,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"6351:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6356:16:14","memberName":"rebalanceWeights","nodeType":"MemberAccess","referencedDeclaration":3832,"src":"6351:21:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address) external returns (uint256[] memory)"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6351:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6324:58:14"},{"assignments":[2501],"declarations":[{"constant":false,"id":2501,"mutability":"mutable","name":"assets","nameLocation":"6410:6:14","nodeType":"VariableDeclaration","scope":2547,"src":"6393:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2499,"name":"address","nodeType":"ElementaryTypeName","src":"6393:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2500,"nodeType":"ArrayTypeName","src":"6393:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2505,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2502,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"6419:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6424:9:14","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3708,"src":"6419:14:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6393:42:14"},{"body":{"id":2545,"nodeType":"Block","src":"6490:160:14","statements":[{"expression":{"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2517,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"6505:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2522,"indexExpression":{"id":2518,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"6519:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6505:26:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2523,"indexExpression":{"baseExpression":{"id":2519,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"6532:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2521,"indexExpression":{"id":2520,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"6539:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6532:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6505:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":2524,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"6546:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2526,"indexExpression":{"id":2525,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"6554:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6546:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6505:51:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2528,"nodeType":"ExpressionStatement","src":"6505:51:14"},{"expression":{"arguments":[{"id":2535,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"6602:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2538,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6620:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3607","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3607","typeString":"contract BaluniV1PoolPeriphery"}],"id":2537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6612:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2536,"name":"address","nodeType":"ElementaryTypeName","src":"6612:7:14","typeDescriptions":{}}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6612:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2540,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"6627:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2542,"indexExpression":{"id":2541,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"6635:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6627:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":2530,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"6578:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2532,"indexExpression":{"id":2531,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"6585:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6578:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2529,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"6571:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6571:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6589:12:14","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"6571:30:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6571:67:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2544,"nodeType":"ExpressionStatement","src":"6571:67:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2510,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"6466:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2511,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"6470:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6477:6:14","memberName":"length","nodeType":"MemberAccess","src":"6470:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6466:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2546,"initializationExpression":{"assignments":[2507],"declarations":[{"constant":false,"id":2507,"mutability":"mutable","name":"i","nameLocation":"6459:1:14","nodeType":"VariableDeclaration","scope":2546,"src":"6451:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2506,"name":"uint256","nodeType":"ElementaryTypeName","src":"6451:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2509,"initialValue":{"hexValue":"30","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6463:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6451:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6485:3:14","subExpression":{"id":2514,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"6485:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2516,"nodeType":"ExpressionStatement","src":"6485:3:14"},"nodeType":"ForStatement","src":"6446:204:14"}]},"functionSelector":"ad414263","id":2548,"implemented":true,"kind":"function","modifiers":[],"name":"rebalanceWeights","nameLocation":"6190:16:14","nodeType":"FunctionDefinition","parameters":{"id":2478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"receiver","nameLocation":"6215:8:14","nodeType":"VariableDeclaration","scope":2548,"src":"6207:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2474,"name":"address","nodeType":"ElementaryTypeName","src":"6207:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2477,"mutability":"mutable","name":"poolAddress","nameLocation":"6233:11:14","nodeType":"VariableDeclaration","scope":2548,"src":"6225:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2476,"name":"address","nodeType":"ElementaryTypeName","src":"6225:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6206:39:14"},"returnParameters":{"id":2479,"nodeType":"ParameterList","parameters":[],"src":"6255:0:14"},"scope":3607,"src":"6181:476:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2757,"nodeType":"Block","src":"6824:1575:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2562,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"6843:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6852:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6843:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":2565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6855:34:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":2561,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6835:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6835:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2567,"nodeType":"ExpressionStatement","src":"6835:55:14"},{"assignments":[2572],"declarations":[{"constant":false,"id":2572,"mutability":"mutable","name":"pools","nameLocation":"6920:5:14","nodeType":"VariableDeclaration","scope":2757,"src":"6903:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2570,"name":"address","nodeType":"ElementaryTypeName","src":"6903:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2571,"nodeType":"ArrayTypeName","src":"6903:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2578,"initialValue":{"arguments":[{"id":2574,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"6946:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2575,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"6957:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2576,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"6966:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2573,"name":"_findOptimalRoute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"6928:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address,address,uint256) view returns (address[] memory)"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6928:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6903:70:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2580,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"6992:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6998:6:14","memberName":"length","nodeType":"MemberAccess","src":"6992:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7007:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6992:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20726f75746520666f756e64","id":2584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7010:16:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_ee7b828cb0281855c8b3bbf7bd552c39ac5e8c76d8779863b91d21e559bad900","typeString":"literal_string \"No route found\""},"value":"No route found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ee7b828cb0281855c8b3bbf7bd552c39ac5e8c76d8779863b91d21e559bad900","typeString":"literal_string \"No route found\""}],"id":2579,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6984:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6984:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2586,"nodeType":"ExpressionStatement","src":"6984:43:14"},{"expression":{"arguments":[{"expression":{"id":2591,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7071:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7075:6:14","memberName":"sender","nodeType":"MemberAccess","src":"7071:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2595,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7091:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3607","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3607","typeString":"contract BaluniV1PoolPeriphery"}],"id":2594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7083:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2593,"name":"address","nodeType":"ElementaryTypeName","src":"7083:7:14","typeDescriptions":{}}},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2597,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"7098:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2588,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"7047:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2587,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"7040:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7040:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7058:12:14","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"7040:30:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7040:65:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2599,"nodeType":"ExpressionStatement","src":"7040:65:14"},{"assignments":[2601],"declarations":[{"constant":false,"id":2601,"mutability":"mutable","name":"amountRemaining","nameLocation":"7126:15:14","nodeType":"VariableDeclaration","scope":2757,"src":"7118:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2600,"name":"uint256","nodeType":"ElementaryTypeName","src":"7118:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2603,"initialValue":{"id":2602,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"7144:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7118:32:14"},{"assignments":[2605],"declarations":[{"constant":false,"id":2605,"mutability":"mutable","name":"currentToken","nameLocation":"7169:12:14","nodeType":"VariableDeclaration","scope":2757,"src":"7161:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2604,"name":"address","nodeType":"ElementaryTypeName","src":"7161:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2607,"initialValue":{"id":2606,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"7184:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7161:32:14"},{"body":{"id":2753,"nodeType":"Block","src":"7247:1110:14","statements":[{"assignments":[2621],"declarations":[{"constant":false,"id":2621,"mutability":"mutable","name":"pool","nameLocation":"7276:4:14","nodeType":"VariableDeclaration","scope":2753,"src":"7262:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"},"typeName":{"id":2620,"nodeType":"UserDefinedTypeName","pathNode":{"id":2619,"name":"IBaluniV1Pool","nameLocations":["7262:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":3884,"src":"7262:13:14"},"referencedDeclaration":3884,"src":"7262:13:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":2627,"initialValue":{"arguments":[{"baseExpression":{"id":2623,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"7297:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2625,"indexExpression":{"id":2624,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"7303:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7297:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2622,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"7283:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$3884_$","typeString":"type(contract IBaluniV1Pool)"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7283:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"7262:44:14"},{"assignments":[2632],"declarations":[{"constant":false,"id":2632,"mutability":"mutable","name":"poolTokens","nameLocation":"7338:10:14","nodeType":"VariableDeclaration","scope":2753,"src":"7321:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2630,"name":"address","nodeType":"ElementaryTypeName","src":"7321:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2631,"nodeType":"ArrayTypeName","src":"7321:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2636,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2633,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"7351:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7356:9:14","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3708,"src":"7351:14:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7351:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7321:46:14"},{"assignments":[2641],"declarations":[{"constant":false,"id":2641,"mutability":"mutable","name":"reserves","nameLocation":"7399:8:14","nodeType":"VariableDeclaration","scope":2753,"src":"7382:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2639,"name":"uint256","nodeType":"ElementaryTypeName","src":"7382:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2640,"nodeType":"ArrayTypeName","src":"7382:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2647,"initialValue":{"arguments":[{"baseExpression":{"id":2643,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"7422:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2645,"indexExpression":{"id":2644,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"7428:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7422:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2642,"name":"getReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"7410:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address) view returns (uint256[] memory)"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7410:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7382:49:14"},{"assignments":[2649],"declarations":[{"constant":false,"id":2649,"mutability":"mutable","name":"nextToken","nameLocation":"7456:9:14","nodeType":"VariableDeclaration","scope":2753,"src":"7448:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2648,"name":"address","nodeType":"ElementaryTypeName","src":"7448:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2650,"nodeType":"VariableDeclarationStatement","src":"7448:17:14"},{"body":{"id":2682,"nodeType":"Block","src":"7528:184:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2662,"name":"poolTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"7551:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2664,"indexExpression":{"id":2663,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"7562:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7551:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2665,"name":"currentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"7568:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7551:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2667,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"7584:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2669,"indexExpression":{"id":2668,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"7593:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7584:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7598:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7584:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7551:48:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2681,"nodeType":"IfStatement","src":"7547:150:14","trueBody":{"id":2680,"nodeType":"Block","src":"7601:96:14","statements":[{"expression":{"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2673,"name":"nextToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"7624:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2674,"name":"poolTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"7636:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2676,"indexExpression":{"id":2675,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"7647:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7636:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7624:25:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2678,"nodeType":"ExpressionStatement","src":"7624:25:14"},{"id":2679,"nodeType":"Break","src":"7672:5:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2655,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"7500:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2656,"name":"poolTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"7504:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7515:6:14","memberName":"length","nodeType":"MemberAccess","src":"7504:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7500:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2683,"initializationExpression":{"assignments":[2652],"declarations":[{"constant":false,"id":2652,"mutability":"mutable","name":"j","nameLocation":"7493:1:14","nodeType":"VariableDeclaration","scope":2683,"src":"7485:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2651,"name":"uint256","nodeType":"ElementaryTypeName","src":"7485:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2654,"initialValue":{"hexValue":"30","id":2653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7497:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7485:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7523:3:14","subExpression":{"id":2659,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"7523:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2661,"nodeType":"ExpressionStatement","src":"7523:3:14"},"nodeType":"ForStatement","src":"7480:232:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2685,"name":"nextToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"7736:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7757:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7749:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2686,"name":"address","nodeType":"ElementaryTypeName","src":"7749:7:14","typeDescriptions":{}}},"id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7749:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7736:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2076616c6964206e65787420746f6b656e20666f756e64","id":2691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7761:27:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_ecec49bae7da7d66a50331e2bf4afac20670ba1e1de72e63ed33afdc33ab1c0d","typeString":"literal_string \"No valid next token found\""},"value":"No valid next token found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ecec49bae7da7d66a50331e2bf4afac20670ba1e1de72e63ed33afdc33ab1c0d","typeString":"literal_string \"No valid next token found\""}],"id":2684,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7728:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7728:61:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2693,"nodeType":"ExpressionStatement","src":"7728:61:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2697,"name":"nextToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"7833:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2695,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"7812:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7817:15:14","memberName":"getAssetReserve","nodeType":"MemberAccess","referencedDeclaration":3715,"src":"7812:20:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7812:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2699,"name":"amountRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"7847:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7812:50:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206c697175696469747920696e20706f6f6c20666f722073776170","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7864:41:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cd5218ddce9f9d1325aa32ed059b5884f2ed71b9548aabcb4725b422ee8090a6","typeString":"literal_string \"Insufficient liquidity in pool for swap\""},"value":"Insufficient liquidity in pool for swap"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cd5218ddce9f9d1325aa32ed059b5884f2ed71b9548aabcb4725b422ee8090a6","typeString":"literal_string \"Insufficient liquidity in pool for swap\""}],"id":2694,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7804:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7804:102:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2703,"nodeType":"ExpressionStatement","src":"7804:102:14"},{"assignments":[2705],"declarations":[{"constant":false,"id":2705,"mutability":"mutable","name":"amountOut","nameLocation":"7931:9:14","nodeType":"VariableDeclaration","scope":2753,"src":"7923:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2704,"name":"uint256","nodeType":"ElementaryTypeName","src":"7923:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2724,"initialValue":{"arguments":[{"id":2708,"name":"currentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"7971:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2709,"name":"nextToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"8002:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2710,"name":"amountRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"8030:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2711,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"8064:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2712,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"8069:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8075:6:14","memberName":"length","nodeType":"MemberAccess","src":"8069:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8084:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8069:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8064:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2720,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8107:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3607","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3607","typeString":"contract BaluniV1PoolPeriphery"}],"id":2719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8099:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2718,"name":"address","nodeType":"ElementaryTypeName","src":"8099:7:14","typeDescriptions":{}}},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8064:48:14","trueExpression":{"id":2717,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"8088:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2706,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"7943:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7948:4:14","memberName":"swap","nodeType":"MemberAccess","referencedDeclaration":3780,"src":"7943:9:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) external returns (uint256)"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7943:184:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7923:204:14"},{"expression":{"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2725,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"8144:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2730,"indexExpression":{"baseExpression":{"id":2726,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"8158:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2728,"indexExpression":{"id":2727,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"8164:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8158:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8144:23:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2731,"indexExpression":{"id":2729,"name":"currentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"8168:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8144:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2732,"name":"amountRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"8185:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:56:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2734,"nodeType":"ExpressionStatement","src":"8144:56:14"},{"expression":{"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2735,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"8215:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2740,"indexExpression":{"baseExpression":{"id":2736,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"8229:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2738,"indexExpression":{"id":2737,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"8235:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8229:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8215:23:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2741,"indexExpression":{"id":2739,"name":"nextToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"8239:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8215:34:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2742,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"8253:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8215:47:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2744,"nodeType":"ExpressionStatement","src":"8215:47:14"},{"expression":{"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2745,"name":"currentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"8279:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2746,"name":"nextToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"8294:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8279:24:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2748,"nodeType":"ExpressionStatement","src":"8279:24:14"},{"expression":{"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2749,"name":"amountRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"8318:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2750,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"8336:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8318:27:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2752,"nodeType":"ExpressionStatement","src":"8318:27:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2612,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"7224:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2613,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"7228:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7234:6:14","memberName":"length","nodeType":"MemberAccess","src":"7228:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7224:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2754,"initializationExpression":{"assignments":[2609],"declarations":[{"constant":false,"id":2609,"mutability":"mutable","name":"i","nameLocation":"7217:1:14","nodeType":"VariableDeclaration","scope":2754,"src":"7209:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2608,"name":"uint256","nodeType":"ElementaryTypeName","src":"7209:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2611,"initialValue":{"hexValue":"30","id":2610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7221:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7209:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7242:3:14","subExpression":{"id":2616,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"7242:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2618,"nodeType":"ExpressionStatement","src":"7242:3:14"},"nodeType":"ForStatement","src":"7204:1153:14"},{"expression":{"id":2755,"name":"amountRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"8376:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2560,"id":2756,"nodeType":"Return","src":"8369:22:14"}]},"functionSelector":"7442eca6","id":2758,"implemented":true,"kind":"function","modifiers":[],"name":"smartSwap","nameLocation":"6674:9:14","nodeType":"FunctionDefinition","parameters":{"id":2557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2550,"mutability":"mutable","name":"fromToken","nameLocation":"6702:9:14","nodeType":"VariableDeclaration","scope":2758,"src":"6694:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2549,"name":"address","nodeType":"ElementaryTypeName","src":"6694:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2552,"mutability":"mutable","name":"toToken","nameLocation":"6730:7:14","nodeType":"VariableDeclaration","scope":2758,"src":"6722:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2551,"name":"address","nodeType":"ElementaryTypeName","src":"6722:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2554,"mutability":"mutable","name":"amount","nameLocation":"6756:6:14","nodeType":"VariableDeclaration","scope":2758,"src":"6748:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2553,"name":"uint256","nodeType":"ElementaryTypeName","src":"6748:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2556,"mutability":"mutable","name":"receiver","nameLocation":"6781:8:14","nodeType":"VariableDeclaration","scope":2758,"src":"6773:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2555,"name":"address","nodeType":"ElementaryTypeName","src":"6773:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6683:113:14"},"returnParameters":{"id":2560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2758,"src":"6815:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2558,"name":"uint256","nodeType":"ElementaryTypeName","src":"6815:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6814:9:14"},"scope":3607,"src":"6665:1734:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2976,"nodeType":"Block","src":"8561:1629:14","statements":[{"assignments":[2774],"declarations":[{"constant":false,"id":2774,"mutability":"mutable","name":"allPools","nameLocation":"8589:8:14","nodeType":"VariableDeclaration","scope":2976,"src":"8572:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2772,"name":"address","nodeType":"ElementaryTypeName","src":"8572:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2773,"nodeType":"ArrayTypeName","src":"8572:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2778,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2775,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"8600:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3917","typeString":"contract IBaluniV1PoolFactory"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8612:11:14","memberName":"getAllPools","nodeType":"MemberAccess","referencedDeclaration":3916,"src":"8600:23:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8600:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8572:53:14"},{"assignments":[2780],"declarations":[{"constant":false,"id":2780,"mutability":"mutable","name":"poolCount","nameLocation":"8644:9:14","nodeType":"VariableDeclaration","scope":2976,"src":"8636:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2779,"name":"uint256","nodeType":"ElementaryTypeName","src":"8636:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2783,"initialValue":{"expression":{"id":2781,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"8656:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8665:6:14","memberName":"length","nodeType":"MemberAccess","src":"8656:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8636:35:14"},{"assignments":[2788],"declarations":[{"constant":false,"id":2788,"mutability":"mutable","name":"path","nameLocation":"8701:4:14","nodeType":"VariableDeclaration","scope":2976,"src":"8684:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2786,"name":"address","nodeType":"ElementaryTypeName","src":"8684:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2787,"nodeType":"ArrayTypeName","src":"8684:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2794,"initialValue":{"arguments":[{"id":2792,"name":"poolCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"8722:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8708:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2789,"name":"address","nodeType":"ElementaryTypeName","src":"8712:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2790,"nodeType":"ArrayTypeName","src":"8712:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8708:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8684:48:14"},{"assignments":[2796],"declarations":[{"constant":false,"id":2796,"mutability":"mutable","name":"pathLength","nameLocation":"8751:10:14","nodeType":"VariableDeclaration","scope":2976,"src":"8743:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2795,"name":"uint256","nodeType":"ElementaryTypeName","src":"8743:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2798,"initialValue":{"hexValue":"30","id":2797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8764:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8743:22:14"},{"assignments":[2803],"declarations":[{"constant":false,"id":2803,"mutability":"mutable","name":"visited","nameLocation":"8790:7:14","nodeType":"VariableDeclaration","scope":2976,"src":"8776:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":2801,"name":"bool","nodeType":"ElementaryTypeName","src":"8776:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2802,"nodeType":"ArrayTypeName","src":"8776:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"id":2809,"initialValue":{"arguments":[{"id":2807,"name":"poolCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"8811:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8800:10:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":2804,"name":"bool","nodeType":"ElementaryTypeName","src":"8804:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2805,"nodeType":"ArrayTypeName","src":"8804:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8800:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8776:45:14"},{"assignments":[2814],"declarations":[{"constant":false,"id":2814,"mutability":"mutable","name":"queue","nameLocation":"8851:5:14","nodeType":"VariableDeclaration","scope":2976,"src":"8834:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2812,"name":"address","nodeType":"ElementaryTypeName","src":"8834:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2813,"nodeType":"ArrayTypeName","src":"8834:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2820,"initialValue":{"arguments":[{"id":2818,"name":"poolCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"8873:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8859:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2815,"name":"address","nodeType":"ElementaryTypeName","src":"8863:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2816,"nodeType":"ArrayTypeName","src":"8863:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8859:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8834:49:14"},{"assignments":[2822],"declarations":[{"constant":false,"id":2822,"mutability":"mutable","name":"queueHead","nameLocation":"8902:9:14","nodeType":"VariableDeclaration","scope":2976,"src":"8894:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2821,"name":"uint256","nodeType":"ElementaryTypeName","src":"8894:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2824,"initialValue":{"hexValue":"30","id":2823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8894:21:14"},{"assignments":[2826],"declarations":[{"constant":false,"id":2826,"mutability":"mutable","name":"queueTail","nameLocation":"8934:9:14","nodeType":"VariableDeclaration","scope":2976,"src":"8926:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2825,"name":"uint256","nodeType":"ElementaryTypeName","src":"8926:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2828,"initialValue":{"hexValue":"30","id":2827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8946:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8926:21:14"},{"expression":{"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2829,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"8960:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2832,"indexExpression":{"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8966:11:14","subExpression":{"id":2830,"name":"queueTail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"8966:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8960:18:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2833,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"8981:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8960:30:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2835,"nodeType":"ExpressionStatement","src":"8960:30:14"},{"body":{"id":2961,"nodeType":"Block","src":"9033:1075:14","statements":[{"assignments":[2840],"declarations":[{"constant":false,"id":2840,"mutability":"mutable","name":"currentToken","nameLocation":"9056:12:14","nodeType":"VariableDeclaration","scope":2961,"src":"9048:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2839,"name":"address","nodeType":"ElementaryTypeName","src":"9048:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2845,"initialValue":{"baseExpression":{"id":2841,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"9071:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2844,"indexExpression":{"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9077:11:14","subExpression":{"id":2842,"name":"queueHead","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"9077:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9071:18:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9048:41:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2846,"name":"currentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"9108:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2847,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"9124:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9108:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2883,"nodeType":"IfStatement","src":"9104:277:14","trueBody":{"id":2882,"nodeType":"Block","src":"9133:248:14","statements":[{"assignments":[2853],"declarations":[{"constant":false,"id":2853,"mutability":"mutable","name":"finalPath","nameLocation":"9169:9:14","nodeType":"VariableDeclaration","scope":2882,"src":"9152:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2851,"name":"address","nodeType":"ElementaryTypeName","src":"9152:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2852,"nodeType":"ArrayTypeName","src":"9152:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2859,"initialValue":{"arguments":[{"id":2857,"name":"pathLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"9195:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9181:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2854,"name":"address","nodeType":"ElementaryTypeName","src":"9185:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2855,"nodeType":"ArrayTypeName","src":"9185:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9181:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9152:54:14"},{"body":{"id":2878,"nodeType":"Block","src":"9266:65:14","statements":[{"expression":{"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2870,"name":"finalPath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"9289:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2872,"indexExpression":{"id":2871,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9299:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9289:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2873,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"9304:4:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2875,"indexExpression":{"id":2874,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9309:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9304:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9289:22:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2877,"nodeType":"ExpressionStatement","src":"9289:22:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2864,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9245:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2865,"name":"pathLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"9249:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9245:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2879,"initializationExpression":{"assignments":[2861],"declarations":[{"constant":false,"id":2861,"mutability":"mutable","name":"i","nameLocation":"9238:1:14","nodeType":"VariableDeclaration","scope":2879,"src":"9230:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2860,"name":"uint256","nodeType":"ElementaryTypeName","src":"9230:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2863,"initialValue":{"hexValue":"30","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9242:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9230:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9261:3:14","subExpression":{"id":2867,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9261:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2869,"nodeType":"ExpressionStatement","src":"9261:3:14"},"nodeType":"ForStatement","src":"9225:106:14"},{"expression":{"id":2880,"name":"finalPath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"9356:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2769,"id":2881,"nodeType":"Return","src":"9349:16:14"}]}},{"body":{"id":2959,"nodeType":"Block","src":"9437:660:14","statements":[{"condition":{"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9460:11:14","subExpression":{"baseExpression":{"id":2894,"name":"visited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"9461:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":2896,"indexExpression":{"id":2895,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"9469:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9461:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2958,"nodeType":"IfStatement","src":"9456:626:14","trueBody":{"id":2957,"nodeType":"Block","src":"9473:609:14","statements":[{"assignments":[2900],"declarations":[{"constant":false,"id":2900,"mutability":"mutable","name":"pool","nameLocation":"9510:4:14","nodeType":"VariableDeclaration","scope":2957,"src":"9496:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"},"typeName":{"id":2899,"nodeType":"UserDefinedTypeName","pathNode":{"id":2898,"name":"IBaluniV1Pool","nameLocations":["9496:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":3884,"src":"9496:13:14"},"referencedDeclaration":3884,"src":"9496:13:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":2906,"initialValue":{"arguments":[{"baseExpression":{"id":2902,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"9531:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2904,"indexExpression":{"id":2903,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"9540:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9531:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2901,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"9517:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$3884_$","typeString":"type(contract IBaluniV1Pool)"}},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9517:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"9496:47:14"},{"assignments":[2911],"declarations":[{"constant":false,"id":2911,"mutability":"mutable","name":"poolTokens","nameLocation":"9583:10:14","nodeType":"VariableDeclaration","scope":2957,"src":"9566:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2909,"name":"address","nodeType":"ElementaryTypeName","src":"9566:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2910,"nodeType":"ArrayTypeName","src":"9566:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2915,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2912,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"9596:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9601:9:14","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3708,"src":"9596:14:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9596:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9566:46:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2917,"name":"poolTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"9682:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":2918,"name":"currentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"9694:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2916,"name":"_containsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"9667:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (address[] memory,address) pure returns (bool)"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9667:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":2921,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"9735:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},{"id":2922,"name":"currentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"9741:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2923,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"9755:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2920,"name":"_hasSufficientLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"9711:23:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_IBaluniV1Pool_$3884_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (contract IBaluniV1Pool,address,uint256) view returns (bool)"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9711:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9667:95:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2956,"nodeType":"IfStatement","src":"9637:426:14","trueBody":{"id":2955,"nodeType":"Block","src":"9786:277:14","statements":[{"assignments":[2927],"declarations":[{"constant":false,"id":2927,"mutability":"mutable","name":"nextToken","nameLocation":"9821:9:14","nodeType":"VariableDeclaration","scope":2955,"src":"9813:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2926,"name":"address","nodeType":"ElementaryTypeName","src":"9813:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2932,"initialValue":{"arguments":[{"id":2929,"name":"poolTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"9854:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":2930,"name":"currentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"9866:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2928,"name":"_getOtherTokenInPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"9833:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$_t_address_$","typeString":"function (address[] memory,address) pure returns (address)"}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9833:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9813:66:14"},{"expression":{"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2933,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"9906:4:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2936,"indexExpression":{"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9911:12:14","subExpression":{"id":2934,"name":"pathLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"9911:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9906:18:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2937,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"9927:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2939,"indexExpression":{"id":2938,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"9936:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9927:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9906:32:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2941,"nodeType":"ExpressionStatement","src":"9906:32:14"},{"expression":{"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2942,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"9965:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2945,"indexExpression":{"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9971:11:14","subExpression":{"id":2943,"name":"queueTail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"9971:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9965:18:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2946,"name":"nextToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"9986:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9965:30:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2948,"nodeType":"ExpressionStatement","src":"9965:30:14"},{"expression":{"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2949,"name":"visited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"10022:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":2951,"indexExpression":{"id":2950,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"10030:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10022:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10035:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"10022:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2954,"nodeType":"ExpressionStatement","src":"10022:17:14"}]}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2888,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"9417:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2889,"name":"poolCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"9421:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9417:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2960,"initializationExpression":{"assignments":[2885],"declarations":[{"constant":false,"id":2885,"mutability":"mutable","name":"i","nameLocation":"9410:1:14","nodeType":"VariableDeclaration","scope":2960,"src":"9402:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2884,"name":"uint256","nodeType":"ElementaryTypeName","src":"9402:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2887,"initialValue":{"hexValue":"30","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9414:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9402:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9432:3:14","subExpression":{"id":2891,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"9432:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2893,"nodeType":"ExpressionStatement","src":"9432:3:14"},"nodeType":"ForStatement","src":"9397:700:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2836,"name":"queueHead","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"9010:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2837,"name":"queueTail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"9022:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9010:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2962,"nodeType":"WhileStatement","src":"9003:1105:14"},{"assignments":[2967],"declarations":[{"constant":false,"id":2967,"mutability":"mutable","name":"addr","nameLocation":"10137:4:14","nodeType":"VariableDeclaration","scope":2976,"src":"10120:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2965,"name":"address","nodeType":"ElementaryTypeName","src":"10120:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2966,"nodeType":"ArrayTypeName","src":"10120:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2973,"initialValue":{"arguments":[{"hexValue":"30","id":2971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10158:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10144:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2968,"name":"address","nodeType":"ElementaryTypeName","src":"10148:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2969,"nodeType":"ArrayTypeName","src":"10148:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10120:40:14"},{"expression":{"id":2974,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"10178:4:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2769,"id":2975,"nodeType":"Return","src":"10171:11:14"}]},"id":2977,"implemented":true,"kind":"function","modifiers":[],"name":"_findOptimalRoute","nameLocation":"8416:17:14","nodeType":"FunctionDefinition","parameters":{"id":2765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"fromToken","nameLocation":"8452:9:14","nodeType":"VariableDeclaration","scope":2977,"src":"8444:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2759,"name":"address","nodeType":"ElementaryTypeName","src":"8444:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2762,"mutability":"mutable","name":"toToken","nameLocation":"8480:7:14","nodeType":"VariableDeclaration","scope":2977,"src":"8472:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2761,"name":"address","nodeType":"ElementaryTypeName","src":"8472:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2764,"mutability":"mutable","name":"amount","nameLocation":"8506:6:14","nodeType":"VariableDeclaration","scope":2977,"src":"8498:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2763,"name":"uint256","nodeType":"ElementaryTypeName","src":"8498:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8433:86:14"},"returnParameters":{"id":2769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2977,"src":"8543:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2766,"name":"address","nodeType":"ElementaryTypeName","src":"8543:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2767,"nodeType":"ArrayTypeName","src":"8543:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"8542:18:14"},"scope":3607,"src":"8407:1783:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3011,"nodeType":"Block","src":"10291:181:14","statements":[{"body":{"id":3007,"nodeType":"Block","src":"10346:96:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2998,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"10365:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3000,"indexExpression":{"id":2999,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"10372:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10365:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3001,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"10378:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10365:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3006,"nodeType":"IfStatement","src":"10361:70:14","trueBody":{"id":3005,"nodeType":"Block","src":"10385:46:14","statements":[{"expression":{"hexValue":"74727565","id":3003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10411:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2986,"id":3004,"nodeType":"Return","src":"10404:11:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2991,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"10322:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2992,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"10326:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10333:6:14","memberName":"length","nodeType":"MemberAccess","src":"10326:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10322:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3008,"initializationExpression":{"assignments":[2988],"declarations":[{"constant":false,"id":2988,"mutability":"mutable","name":"i","nameLocation":"10315:1:14","nodeType":"VariableDeclaration","scope":3008,"src":"10307:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2987,"name":"uint256","nodeType":"ElementaryTypeName","src":"10307:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2990,"initialValue":{"hexValue":"30","id":2989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10307:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10341:3:14","subExpression":{"id":2995,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"10341:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2997,"nodeType":"ExpressionStatement","src":"10341:3:14"},"nodeType":"ForStatement","src":"10302:140:14"},{"expression":{"hexValue":"66616c7365","id":3009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10459:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2986,"id":3010,"nodeType":"Return","src":"10452:12:14"}]},"id":3012,"implemented":true,"kind":"function","modifiers":[],"name":"_containsToken","nameLocation":"10207:14:14","nodeType":"FunctionDefinition","parameters":{"id":2983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2980,"mutability":"mutable","name":"tokens","nameLocation":"10239:6:14","nodeType":"VariableDeclaration","scope":3012,"src":"10222:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2978,"name":"address","nodeType":"ElementaryTypeName","src":"10222:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2979,"nodeType":"ArrayTypeName","src":"10222:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2982,"mutability":"mutable","name":"token","nameLocation":"10255:5:14","nodeType":"VariableDeclaration","scope":3012,"src":"10247:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2981,"name":"address","nodeType":"ElementaryTypeName","src":"10247:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10221:40:14"},"returnParameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3012,"src":"10285:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2984,"name":"bool","nodeType":"ElementaryTypeName","src":"10285:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10284:6:14"},"scope":3607,"src":"10198:274:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3073,"nodeType":"Block","src":"10593:316:14","statements":[{"assignments":[3028],"declarations":[{"constant":false,"id":3028,"mutability":"mutable","name":"reserves","nameLocation":"10621:8:14","nodeType":"VariableDeclaration","scope":3073,"src":"10604:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3026,"name":"uint256","nodeType":"ElementaryTypeName","src":"10604:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3027,"nodeType":"ArrayTypeName","src":"10604:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3035,"initialValue":{"arguments":[{"arguments":[{"id":3032,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"10652:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}],"id":3031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10644:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3030,"name":"address","nodeType":"ElementaryTypeName","src":"10644:7:14","typeDescriptions":{}}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10644:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3029,"name":"getReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"10632:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address) view returns (uint256[] memory)"}},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10632:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10604:54:14"},{"assignments":[3040],"declarations":[{"constant":false,"id":3040,"mutability":"mutable","name":"assets","nameLocation":"10686:6:14","nodeType":"VariableDeclaration","scope":3073,"src":"10669:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3038,"name":"address","nodeType":"ElementaryTypeName","src":"10669:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3039,"nodeType":"ArrayTypeName","src":"10669:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3044,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3041,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"10695:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10700:9:14","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3708,"src":"10695:14:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10695:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10669:42:14"},{"body":{"id":3069,"nodeType":"Block","src":"10766:113:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3056,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"10785:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3058,"indexExpression":{"id":3057,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"10792:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10785:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3059,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"10798:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10785:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3068,"nodeType":"IfStatement","src":"10781:87:14","trueBody":{"id":3067,"nodeType":"Block","src":"10805:63:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3061,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"10831:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3063,"indexExpression":{"id":3062,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"10840:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10831:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3064,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"10846:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10831:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3023,"id":3066,"nodeType":"Return","src":"10824:28:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3049,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"10742:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3050,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"10746:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10753:6:14","memberName":"length","nodeType":"MemberAccess","src":"10746:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10742:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3070,"initializationExpression":{"assignments":[3046],"declarations":[{"constant":false,"id":3046,"mutability":"mutable","name":"i","nameLocation":"10735:1:14","nodeType":"VariableDeclaration","scope":3070,"src":"10727:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3045,"name":"uint256","nodeType":"ElementaryTypeName","src":"10727:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3048,"initialValue":{"hexValue":"30","id":3047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10739:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10727:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10761:3:14","subExpression":{"id":3053,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"10761:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3055,"nodeType":"ExpressionStatement","src":"10761:3:14"},"nodeType":"ForStatement","src":"10722:157:14"},{"expression":{"hexValue":"66616c7365","id":3071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10896:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3023,"id":3072,"nodeType":"Return","src":"10889:12:14"}]},"id":3074,"implemented":true,"kind":"function","modifiers":[],"name":"_hasSufficientLiquidity","nameLocation":"10489:23:14","nodeType":"FunctionDefinition","parameters":{"id":3020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3015,"mutability":"mutable","name":"pool","nameLocation":"10527:4:14","nodeType":"VariableDeclaration","scope":3074,"src":"10513:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"},"typeName":{"id":3014,"nodeType":"UserDefinedTypeName","pathNode":{"id":3013,"name":"IBaluniV1Pool","nameLocations":["10513:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":3884,"src":"10513:13:14"},"referencedDeclaration":3884,"src":"10513:13:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"},{"constant":false,"id":3017,"mutability":"mutable","name":"token","nameLocation":"10541:5:14","nodeType":"VariableDeclaration","scope":3074,"src":"10533:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3016,"name":"address","nodeType":"ElementaryTypeName","src":"10533:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3019,"mutability":"mutable","name":"amount","nameLocation":"10556:6:14","nodeType":"VariableDeclaration","scope":3074,"src":"10548:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3018,"name":"uint256","nodeType":"ElementaryTypeName","src":"10548:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10512:51:14"},"returnParameters":{"id":3023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3074,"src":"10587:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3021,"name":"bool","nodeType":"ElementaryTypeName","src":"10587:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10586:6:14"},"scope":3607,"src":"10480:429:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3112,"nodeType":"Block","src":"11019:207:14","statements":[{"body":{"id":3106,"nodeType":"Block","src":"11074:101:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3095,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"11093:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3097,"indexExpression":{"id":3096,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"11100:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11093:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3098,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"11106:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11093:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3105,"nodeType":"IfStatement","src":"11089:75:14","trueBody":{"id":3104,"nodeType":"Block","src":"11113:51:14","statements":[{"expression":{"baseExpression":{"id":3100,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"11139:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3102,"indexExpression":{"id":3101,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"11146:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11139:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3083,"id":3103,"nodeType":"Return","src":"11132:16:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3088,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"11050:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3089,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"11054:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11061:6:14","memberName":"length","nodeType":"MemberAccess","src":"11054:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11050:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3107,"initializationExpression":{"assignments":[3085],"declarations":[{"constant":false,"id":3085,"mutability":"mutable","name":"i","nameLocation":"11043:1:14","nodeType":"VariableDeclaration","scope":3107,"src":"11035:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3084,"name":"uint256","nodeType":"ElementaryTypeName","src":"11035:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3087,"initialValue":{"hexValue":"30","id":3086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11047:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11035:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11069:3:14","subExpression":{"id":3092,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"11069:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3094,"nodeType":"ExpressionStatement","src":"11069:3:14"},"nodeType":"ForStatement","src":"11030:145:14"},{"expression":{"arguments":[{"hexValue":"546f6b656e206e6f7420666f756e6420696e20706f6f6c","id":3109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11192:25:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_e31199ef32a16af0ba9ac84d3033592bb18162b307e1b8bb697aa8f6e1f80823","typeString":"literal_string \"Token not found in pool\""},"value":"Token not found in pool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e31199ef32a16af0ba9ac84d3033592bb18162b307e1b8bb697aa8f6e1f80823","typeString":"literal_string \"Token not found in pool\""}],"id":3108,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"11185:6:14","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11185:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3111,"nodeType":"ExpressionStatement","src":"11185:33:14"}]},"id":3113,"implemented":true,"kind":"function","modifiers":[],"name":"_getOtherTokenInPool","nameLocation":"10926:20:14","nodeType":"FunctionDefinition","parameters":{"id":3080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3077,"mutability":"mutable","name":"tokens","nameLocation":"10964:6:14","nodeType":"VariableDeclaration","scope":3113,"src":"10947:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3075,"name":"address","nodeType":"ElementaryTypeName","src":"10947:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3076,"nodeType":"ArrayTypeName","src":"10947:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3079,"mutability":"mutable","name":"token","nameLocation":"10980:5:14","nodeType":"VariableDeclaration","scope":3113,"src":"10972:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3078,"name":"address","nodeType":"ElementaryTypeName","src":"10972:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10946:40:14"},"returnParameters":{"id":3083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3113,"src":"11010:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3081,"name":"address","nodeType":"ElementaryTypeName","src":"11010:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11009:9:14"},"scope":3607,"src":"10917:309:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3193,"nodeType":"Block","src":"11476:444:14","statements":[{"assignments":[3126],"declarations":[{"constant":false,"id":3126,"mutability":"mutable","name":"pool","nameLocation":"11501:4:14","nodeType":"VariableDeclaration","scope":3193,"src":"11487:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"},"typeName":{"id":3125,"nodeType":"UserDefinedTypeName","pathNode":{"id":3124,"name":"IBaluniV1Pool","nameLocations":["11487:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":3884,"src":"11487:13:14"},"referencedDeclaration":3884,"src":"11487:13:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":3130,"initialValue":{"arguments":[{"id":3128,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"11522:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3127,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"11508:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$3884_$","typeString":"type(contract IBaluniV1Pool)"}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11508:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"11487:47:14"},{"assignments":[3135],"declarations":[{"constant":false,"id":3135,"mutability":"mutable","name":"assets","nameLocation":"11562:6:14","nodeType":"VariableDeclaration","scope":3193,"src":"11545:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3133,"name":"address","nodeType":"ElementaryTypeName","src":"11545:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3134,"nodeType":"ArrayTypeName","src":"11545:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3139,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3136,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"11571:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11576:9:14","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3708,"src":"11571:14:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11571:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11545:42:14"},{"body":{"id":3184,"nodeType":"Block","src":"11644:228:14","statements":[{"assignments":[3152],"declarations":[{"constant":false,"id":3152,"mutability":"mutable","name":"asset","nameLocation":"11667:5:14","nodeType":"VariableDeclaration","scope":3184,"src":"11659:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3151,"name":"address","nodeType":"ElementaryTypeName","src":"11659:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3156,"initialValue":{"baseExpression":{"id":3153,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"11675:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3155,"indexExpression":{"id":3154,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"11682:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11675:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11659:25:14"},{"assignments":[3158],"declarations":[{"constant":false,"id":3158,"mutability":"mutable","name":"amount","nameLocation":"11707:6:14","nodeType":"VariableDeclaration","scope":3184,"src":"11699:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3157,"name":"uint256","nodeType":"ElementaryTypeName","src":"11699:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3162,"initialValue":{"baseExpression":{"id":3159,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"11716:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3161,"indexExpression":{"id":3160,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"11724:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11716:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11699:27:14"},{"expression":{"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3163,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"11741:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3166,"indexExpression":{"id":3164,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"11755:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11741:26:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3167,"indexExpression":{"id":3165,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"11768:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11741:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3168,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"11778:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11741:43:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3170,"nodeType":"ExpressionStatement","src":"11741:43:14"},{"expression":{"arguments":[{"expression":{"id":3175,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11826:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11830:6:14","memberName":"sender","nodeType":"MemberAccess","src":"11826:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3179,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11846:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3607","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3607","typeString":"contract BaluniV1PoolPeriphery"}],"id":3178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11838:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3177,"name":"address","nodeType":"ElementaryTypeName","src":"11838:7:14","typeDescriptions":{}}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11838:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3181,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"11853:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3172,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"11806:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3171,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"11799:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11799:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11813:12:14","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"11799:26:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11799:61:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3183,"nodeType":"ExpressionStatement","src":"11799:61:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3144,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"11620:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3145,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"11624:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11631:6:14","memberName":"length","nodeType":"MemberAccess","src":"11624:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11620:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3185,"initializationExpression":{"assignments":[3141],"declarations":[{"constant":false,"id":3141,"mutability":"mutable","name":"i","nameLocation":"11613:1:14","nodeType":"VariableDeclaration","scope":3185,"src":"11605:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3140,"name":"uint256","nodeType":"ElementaryTypeName","src":"11605:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3143,"initialValue":{"hexValue":"30","id":3142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11617:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11605:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11639:3:14","subExpression":{"id":3148,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"11639:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3150,"nodeType":"ExpressionStatement","src":"11639:3:14"},"nodeType":"ForStatement","src":"11600:272:14"},{"expression":{"arguments":[{"id":3189,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"11894:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3190,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"11904:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}],"expression":{"id":3186,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"11884:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11889:4:14","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":3790,"src":"11884:9:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256[] memory) external returns (uint256)"}},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11884:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3192,"nodeType":"ExpressionStatement","src":"11884:28:14"}]},"documentation":{"id":3114,"nodeType":"StructuredDocumentation","src":"11234:138:14","text":" @dev Adds liquidity to a BaluniV1Pool.\n @param amounts An array of amounts for each asset to add as liquidity."},"functionSelector":"ec0cd2eb","id":3194,"implemented":true,"kind":"function","modifiers":[],"name":"addLiquidity","nameLocation":"11387:12:14","nodeType":"FunctionDefinition","parameters":{"id":3122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3117,"mutability":"mutable","name":"amounts","nameLocation":"11419:7:14","nodeType":"VariableDeclaration","scope":3194,"src":"11400:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3115,"name":"uint256","nodeType":"ElementaryTypeName","src":"11400:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3116,"nodeType":"ArrayTypeName","src":"11400:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3119,"mutability":"mutable","name":"poolAddress","nameLocation":"11436:11:14","nodeType":"VariableDeclaration","scope":3194,"src":"11428:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3118,"name":"address","nodeType":"ElementaryTypeName","src":"11428:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3121,"mutability":"mutable","name":"receiver","nameLocation":"11457:8:14","nodeType":"VariableDeclaration","scope":3194,"src":"11449:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3120,"name":"address","nodeType":"ElementaryTypeName","src":"11449:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11399:67:14"},"returnParameters":{"id":3123,"nodeType":"ParameterList","parameters":[],"src":"11476:0:14"},"scope":3607,"src":"11378:542:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3353,"nodeType":"Block","src":"12209:1260:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3205,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"12228:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12236:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12228:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5368617265206d7573742062652067726561746572207468616e207a65726f","id":3208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12239:33:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_3014e9c0b78a52f3b40736c72d79bc01b52cf504238a7193820baa573d1cea6f","typeString":"literal_string \"Share must be greater than zero\""},"value":"Share must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3014e9c0b78a52f3b40736c72d79bc01b52cf504238a7193820baa573d1cea6f","typeString":"literal_string \"Share must be greater than zero\""}],"id":3204,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12220:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12220:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3210,"nodeType":"ExpressionStatement","src":"12220:53:14"},{"assignments":[3213],"declarations":[{"constant":false,"id":3213,"mutability":"mutable","name":"poolToken","nameLocation":"12291:9:14","nodeType":"VariableDeclaration","scope":3353,"src":"12284:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":3212,"nodeType":"UserDefinedTypeName","pathNode":{"id":3211,"name":"IERC20","nameLocations":["12284:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"12284:6:14"},"referencedDeclaration":1729,"src":"12284:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"}],"id":3217,"initialValue":{"arguments":[{"id":3215,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"12310:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3214,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"12303:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12303:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"12284:38:14"},{"assignments":[3219],"declarations":[{"constant":false,"id":3219,"mutability":"mutable","name":"allowance","nameLocation":"12371:9:14","nodeType":"VariableDeclaration","scope":3353,"src":"12363:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3218,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3229,"initialValue":{"arguments":[{"expression":{"id":3222,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12403:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12407:6:14","memberName":"sender","nodeType":"MemberAccess","src":"12403:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3226,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12423:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3607","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3607","typeString":"contract BaluniV1PoolPeriphery"}],"id":3225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12415:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3224,"name":"address","nodeType":"ElementaryTypeName","src":"12415:7:14","typeDescriptions":{}}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12415:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3220,"name":"poolToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"12383:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12393:9:14","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1706,"src":"12383:19:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12383:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:66:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3231,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"12448:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3232,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"12461:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12448:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420616c6c6f77616e6365","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12468:24:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc","typeString":"literal_string \"Insufficient allowance\""},"value":"Insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc","typeString":"literal_string \"Insufficient allowance\""}],"id":3230,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12440:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12440:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3236,"nodeType":"ExpressionStatement","src":"12440:53:14"},{"assignments":[3238],"declarations":[{"constant":false,"id":3238,"mutability":"mutable","name":"balance","nameLocation":"12540:7:14","nodeType":"VariableDeclaration","scope":3353,"src":"12532:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3237,"name":"uint256","nodeType":"ElementaryTypeName","src":"12532:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3244,"initialValue":{"arguments":[{"expression":{"id":3241,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12570:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12574:6:14","memberName":"sender","nodeType":"MemberAccess","src":"12570:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3239,"name":"poolToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"12550:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12560:9:14","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"12550:19:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12550:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12532:49:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3246,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"12600:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3247,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"12611:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12600:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":3249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12618:22:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":3245,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12592:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12592:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3251,"nodeType":"ExpressionStatement","src":"12592:49:14"},{"assignments":[3253],"declarations":[{"constant":false,"id":3253,"mutability":"mutable","name":"success","nameLocation":"12659:7:14","nodeType":"VariableDeclaration","scope":3353,"src":"12654:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3252,"name":"bool","nodeType":"ElementaryTypeName","src":"12654:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3261,"initialValue":{"arguments":[{"expression":{"id":3256,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12692:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12696:6:14","memberName":"sender","nodeType":"MemberAccess","src":"12692:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3258,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"12704:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3259,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"12717:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3254,"name":"poolToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"12669:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12679:12:14","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"12669:22:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12669:54:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12654:69:14"},{"expression":{"arguments":[{"id":3263,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"12742:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657246726f6d206661696c6564","id":3264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12751:21:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_b849694166808863930753dfec3778e05f6445bcb888da510cb2c25feefe8ef0","typeString":"literal_string \"TransferFrom failed\""},"value":"TransferFrom failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b849694166808863930753dfec3778e05f6445bcb888da510cb2c25feefe8ef0","typeString":"literal_string \"TransferFrom failed\""}],"id":3262,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12734:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12734:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3266,"nodeType":"ExpressionStatement","src":"12734:39:14"},{"assignments":[3271],"declarations":[{"constant":false,"id":3271,"mutability":"mutable","name":"amountsOut","nameLocation":"12923:10:14","nodeType":"VariableDeclaration","scope":3353,"src":"12906:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3269,"name":"uint256","nodeType":"ElementaryTypeName","src":"12906:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3270,"nodeType":"ArrayTypeName","src":"12906:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3278,"initialValue":{"arguments":[{"id":3276,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"12968:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3273,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"12950:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3272,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"12936:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$3884_$","typeString":"type(contract IBaluniV1Pool)"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12936:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12963:4:14","memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":3798,"src":"12936:31:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address) external returns (uint256[] memory)"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12936:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12906:71:14"},{"assignments":[3283],"declarations":[{"constant":false,"id":3283,"mutability":"mutable","name":"assets","nameLocation":"13005:6:14","nodeType":"VariableDeclaration","scope":3353,"src":"12988:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3281,"name":"address","nodeType":"ElementaryTypeName","src":"12988:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3282,"nodeType":"ArrayTypeName","src":"12988:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3289,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3285,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"13028:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3284,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"13014:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$3884_$","typeString":"type(contract IBaluniV1Pool)"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13014:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13041:9:14","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3708,"src":"13014:36:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13014:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12988:64:14"},{"body":{"id":3351,"nodeType":"Block","src":"13109:353:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3310,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13168:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3607","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3607","typeString":"contract BaluniV1PoolPeriphery"}],"id":3309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13160:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3308,"name":"address","nodeType":"ElementaryTypeName","src":"13160:7:14","typeDescriptions":{}}},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13160:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":3303,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"13139:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3305,"indexExpression":{"id":3304,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"13146:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13139:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3302,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"13132:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13132:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:9:14","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"13132:27:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13132:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"baseExpression":{"id":3313,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"13178:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3315,"indexExpression":{"id":3314,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"13189:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13178:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13132:59:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204c6971756964697479","id":3317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13193:24:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8","typeString":"literal_string \"Insufficient Liquidity\""},"value":"Insufficient Liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8","typeString":"literal_string \"Insufficient Liquidity\""}],"id":3301,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13124:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13124:94:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3319,"nodeType":"ExpressionStatement","src":"13124:94:14"},{"expression":{"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3320,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"13233:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3325,"indexExpression":{"id":3321,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"13247:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13233:26:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3326,"indexExpression":{"baseExpression":{"id":3322,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"13260:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3324,"indexExpression":{"id":3323,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"13267:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13260:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13233:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"baseExpression":{"id":3327,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"13274:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3329,"indexExpression":{"id":3328,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"13285:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13274:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13233:54:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3331,"nodeType":"ExpressionStatement","src":"13233:54:14"},{"assignments":[3333],"declarations":[{"constant":false,"id":3333,"mutability":"mutable","name":"assetTransferSuccess","nameLocation":"13307:20:14","nodeType":"VariableDeclaration","scope":3351,"src":"13302:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3332,"name":"bool","nodeType":"ElementaryTypeName","src":"13302:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3345,"initialValue":{"arguments":[{"id":3340,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"13357:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3341,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"13367:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3343,"indexExpression":{"id":3342,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"13378:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13367:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":3335,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"13337:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3337,"indexExpression":{"id":3336,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"13344:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13337:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3334,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"13330:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13330:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13348:8:14","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"13330:26:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13330:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"13302:79:14"},{"expression":{"arguments":[{"id":3347,"name":"assetTransferSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"13404:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4173736574207472616e73666572206661696c6564","id":3348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13426:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_7c814c07c32441cfc9da2a21de4a11134ec9451c699d8fbc5bbba1c5f5bc0385","typeString":"literal_string \"Asset transfer failed\""},"value":"Asset transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7c814c07c32441cfc9da2a21de4a11134ec9451c699d8fbc5bbba1c5f5bc0385","typeString":"literal_string \"Asset transfer failed\""}],"id":3346,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13396:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13396:54:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3350,"nodeType":"ExpressionStatement","src":"13396:54:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3294,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"13085:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3295,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"13089:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13096:6:14","memberName":"length","nodeType":"MemberAccess","src":"13089:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13085:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3352,"initializationExpression":{"assignments":[3291],"declarations":[{"constant":false,"id":3291,"mutability":"mutable","name":"i","nameLocation":"13078:1:14","nodeType":"VariableDeclaration","scope":3352,"src":"13070:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3290,"name":"uint256","nodeType":"ElementaryTypeName","src":"13070:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3293,"initialValue":{"hexValue":"30","id":3292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13082:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13070:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13104:3:14","subExpression":{"id":3298,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"13104:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3300,"nodeType":"ExpressionStatement","src":"13104:3:14"},"nodeType":"ForStatement","src":"13065:397:14"}]},"documentation":{"id":3195,"nodeType":"StructuredDocumentation","src":"11928:187:14","text":" @dev Removes liquidity from a BaluniV1Pool.\n @param share The amount of liquidity tokens to remove.\n @param poolAddress The address of the BaluniV1Pool."},"functionSelector":"f31abcc4","id":3354,"implemented":true,"kind":"function","modifiers":[],"name":"removeLiquidity","nameLocation":"12130:15:14","nodeType":"FunctionDefinition","parameters":{"id":3202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3197,"mutability":"mutable","name":"share","nameLocation":"12154:5:14","nodeType":"VariableDeclaration","scope":3354,"src":"12146:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3196,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3199,"mutability":"mutable","name":"poolAddress","nameLocation":"12169:11:14","nodeType":"VariableDeclaration","scope":3354,"src":"12161:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3198,"name":"address","nodeType":"ElementaryTypeName","src":"12161:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3201,"mutability":"mutable","name":"receiver","nameLocation":"12190:8:14","nodeType":"VariableDeclaration","scope":3354,"src":"12182:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3200,"name":"address","nodeType":"ElementaryTypeName","src":"12182:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12145:54:14"},"returnParameters":{"id":3203,"nodeType":"ParameterList","parameters":[],"src":"12209:0:14"},"scope":3607,"src":"12121:1348:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3388,"nodeType":"Block","src":"13919:209:14","statements":[{"assignments":[3367],"declarations":[{"constant":false,"id":3367,"mutability":"mutable","name":"poolAddress","nameLocation":"13938:11:14","nodeType":"VariableDeclaration","scope":3388,"src":"13930:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3366,"name":"address","nodeType":"ElementaryTypeName","src":"13930:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3373,"initialValue":{"arguments":[{"id":3370,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"13980:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3371,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"13991:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3368,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"13952:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3917","typeString":"contract IBaluniV1PoolFactory"}},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13964:15:14","memberName":"getPoolByAssets","nodeType":"MemberAccess","referencedDeclaration":3895,"src":"13952:27:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view external returns (address)"}},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13952:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13930:69:14"},{"assignments":[3376],"declarations":[{"constant":false,"id":3376,"mutability":"mutable","name":"pool","nameLocation":"14024:4:14","nodeType":"VariableDeclaration","scope":3388,"src":"14010:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"},"typeName":{"id":3375,"nodeType":"UserDefinedTypeName","pathNode":{"id":3374,"name":"IBaluniV1Pool","nameLocations":["14010:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":3884,"src":"14010:13:14"},"referencedDeclaration":3884,"src":"14010:13:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":3380,"initialValue":{"arguments":[{"id":3378,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"14045:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3377,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"14031:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$3884_$","typeString":"type(contract IBaluniV1Pool)"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14031:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"14010:47:14"},{"expression":{"arguments":[{"id":3383,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"14093:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3384,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"14104:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3385,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"14113:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3381,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"14075:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14080:12:14","memberName":"getAmountOut","nodeType":"MemberAccess","referencedDeclaration":3732,"src":"14075:17:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14075:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3365,"id":3387,"nodeType":"Return","src":"14068:52:14"}]},"documentation":{"id":3355,"nodeType":"StructuredDocumentation","src":"13477:330:14","text":" @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\n @param fromToken The address of the token to swap from.\n @param toToken The address of the token to swap to.\n @param amount The amount of tokens to swap.\n @return The amount of tokens received after the swap."},"functionSelector":"4aa06652","id":3389,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"13822:12:14","nodeType":"FunctionDefinition","parameters":{"id":3362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3357,"mutability":"mutable","name":"fromToken","nameLocation":"13843:9:14","nodeType":"VariableDeclaration","scope":3389,"src":"13835:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3356,"name":"address","nodeType":"ElementaryTypeName","src":"13835:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3359,"mutability":"mutable","name":"toToken","nameLocation":"13862:7:14","nodeType":"VariableDeclaration","scope":3389,"src":"13854:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3358,"name":"address","nodeType":"ElementaryTypeName","src":"13854:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3361,"mutability":"mutable","name":"amount","nameLocation":"13879:6:14","nodeType":"VariableDeclaration","scope":3389,"src":"13871:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3360,"name":"uint256","nodeType":"ElementaryTypeName","src":"13871:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13834:52:14"},"returnParameters":{"id":3365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3389,"src":"13910:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3363,"name":"uint256","nodeType":"ElementaryTypeName","src":"13910:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13909:9:14"},"scope":3607,"src":"13813:315:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3490,"nodeType":"Block","src":"14353:693:14","statements":[{"assignments":[3397],"declarations":[{"constant":false,"id":3397,"mutability":"mutable","name":"pool","nameLocation":"14378:4:14","nodeType":"VariableDeclaration","scope":3490,"src":"14364:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"},"typeName":{"id":3396,"nodeType":"UserDefinedTypeName","pathNode":{"id":3395,"name":"IBaluniV1Pool","nameLocations":["14364:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":3884,"src":"14364:13:14"},"referencedDeclaration":3884,"src":"14364:13:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":3401,"initialValue":{"arguments":[{"id":3399,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"14399:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3398,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"14385:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$3884_$","typeString":"type(contract IBaluniV1Pool)"}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14385:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"14364:47:14"},{"assignments":[3403],"declarations":[{"constant":false,"id":3403,"mutability":"mutable","name":"balance","nameLocation":"14430:7:14","nodeType":"VariableDeclaration","scope":3490,"src":"14422:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3402,"name":"uint256","nodeType":"ElementaryTypeName","src":"14422:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3411,"initialValue":{"arguments":[{"expression":{"id":3408,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14470:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14474:6:14","memberName":"sender","nodeType":"MemberAccess","src":"14470:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3405,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"14447:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3404,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"14440:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14440:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14460:9:14","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"14440:29:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14440:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14422:59:14"},{"assignments":[3413],"declarations":[{"constant":false,"id":3413,"mutability":"mutable","name":"totalSupply","nameLocation":"14500:11:14","nodeType":"VariableDeclaration","scope":3490,"src":"14492:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3412,"name":"uint256","nodeType":"ElementaryTypeName","src":"14492:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3419,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3415,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"14521:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3414,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"14514:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14534:11:14","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":1678,"src":"14514:31:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14492:55:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3421,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"14567:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130303030","id":3422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14577:5:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"14567:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3424,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14566:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3425,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"14586:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14566:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"313030","id":3427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14601:3:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"14566:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":3429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14606:22:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":3420,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14558:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14558:71:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3431,"nodeType":"ExpressionStatement","src":"14558:71:14"},{"assignments":[3436,3439],"declarations":[{"constant":false,"id":3436,"mutability":"mutable","name":"amountsToAdd","nameLocation":"14658:12:14","nodeType":"VariableDeclaration","scope":3490,"src":"14641:29:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3434,"name":"uint256","nodeType":"ElementaryTypeName","src":"14641:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3435,"nodeType":"ArrayTypeName","src":"14641:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3439,"mutability":"mutable","name":"amountsToRemove","nameLocation":"14689:15:14","nodeType":"VariableDeclaration","scope":3490,"src":"14672:32:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3437,"name":"uint256","nodeType":"ElementaryTypeName","src":"14672:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3438,"nodeType":"ArrayTypeName","src":"14672:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3443,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3440,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"14708:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14713:24:14","memberName":"performRebalanceIfNeeded","nodeType":"MemberAccess","referencedDeclaration":3741,"src":"14708:29:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () external returns (uint256[] memory,uint256[] memory)"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14708:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"14640:99:14"},{"assignments":[3448],"declarations":[{"constant":false,"id":3448,"mutability":"mutable","name":"assets","nameLocation":"14802:6:14","nodeType":"VariableDeclaration","scope":3490,"src":"14785:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3446,"name":"address","nodeType":"ElementaryTypeName","src":"14785:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3447,"nodeType":"ArrayTypeName","src":"14785:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3452,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3449,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"14811:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14816:9:14","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3708,"src":"14811:14:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14811:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14785:42:14"},{"body":{"id":3488,"nodeType":"Block","src":"14882:157:14","statements":[{"expression":{"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3464,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"14897:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3469,"indexExpression":{"id":3465,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"14911:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14897:26:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3470,"indexExpression":{"baseExpression":{"id":3466,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"14924:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3468,"indexExpression":{"id":3467,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"14931:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14924:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14897:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":3471,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"14938:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3473,"indexExpression":{"id":3472,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"14951:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14938:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14897:56:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3475,"nodeType":"ExpressionStatement","src":"14897:56:14"},{"expression":{"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3476,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"14968:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3481,"indexExpression":{"id":3477,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"14982:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14968:26:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3482,"indexExpression":{"baseExpression":{"id":3478,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"14995:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3480,"indexExpression":{"id":3479,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"15002:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14995:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14968:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"baseExpression":{"id":3483,"name":"amountsToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"15009:15:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3485,"indexExpression":{"id":3484,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"15025:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15009:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14968:59:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3487,"nodeType":"ExpressionStatement","src":"14968:59:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3457,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"14858:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3458,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"14862:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14869:6:14","memberName":"length","nodeType":"MemberAccess","src":"14862:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14858:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3489,"initializationExpression":{"assignments":[3454],"declarations":[{"constant":false,"id":3454,"mutability":"mutable","name":"i","nameLocation":"14851:1:14","nodeType":"VariableDeclaration","scope":3489,"src":"14843:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3453,"name":"uint256","nodeType":"ElementaryTypeName","src":"14843:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3456,"initialValue":{"hexValue":"30","id":3455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14855:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14843:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14877:3:14","subExpression":{"id":3461,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"14877:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3463,"nodeType":"ExpressionStatement","src":"14877:3:14"},"nodeType":"ForStatement","src":"14838:201:14"}]},"documentation":{"id":3390,"nodeType":"StructuredDocumentation","src":"14136:147:14","text":" @dev Performs rebalance if needed for the given tokens.\n @param poolAddress The address of the token pool to rebalance."},"functionSelector":"5568081a","id":3491,"implemented":true,"kind":"function","modifiers":[],"name":"performRebalanceIfNeeded","nameLocation":"14298:24:14","nodeType":"FunctionDefinition","parameters":{"id":3393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3392,"mutability":"mutable","name":"poolAddress","nameLocation":"14331:11:14","nodeType":"VariableDeclaration","scope":3491,"src":"14323:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3391,"name":"address","nodeType":"ElementaryTypeName","src":"14323:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14322:21:14"},"returnParameters":{"id":3394,"nodeType":"ParameterList","parameters":[],"src":"14353:0:14"},"scope":3607,"src":"14289:757:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3505,"nodeType":"Block","src":"15344:60:14","statements":[{"expression":{"arguments":[{"id":3502,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"15390:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3500,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"15362:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3917","typeString":"contract IBaluniV1PoolFactory"}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15374:15:14","memberName":"getPoolsByAsset","nodeType":"MemberAccess","referencedDeclaration":3903,"src":"15362:27:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address) view external returns (address[] memory)"}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15362:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3499,"id":3504,"nodeType":"Return","src":"15355:41:14"}]},"documentation":{"id":3492,"nodeType":"StructuredDocumentation","src":"15054:195:14","text":" @dev Returns an array of pool addresses that contain the given token.\n @param token The address of the token to search for.\n @return An array of pool addresses."},"functionSelector":"ae3cce1c","id":3506,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolsContainingToken","nameLocation":"15264:23:14","nodeType":"FunctionDefinition","parameters":{"id":3495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3494,"mutability":"mutable","name":"token","nameLocation":"15296:5:14","nodeType":"VariableDeclaration","scope":3506,"src":"15288:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3493,"name":"address","nodeType":"ElementaryTypeName","src":"15288:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15287:15:14"},"returnParameters":{"id":3499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3506,"src":"15326:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3496,"name":"address","nodeType":"ElementaryTypeName","src":"15326:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3497,"nodeType":"ArrayTypeName","src":"15326:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"15325:18:14"},"scope":3607,"src":"15255:149:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3515,"nodeType":"Block","src":"15569:50:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3512,"name":"_getInitializedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"15587:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint64_$","typeString":"function () view returns (uint64)"}},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15587:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":3511,"id":3514,"nodeType":"Return","src":"15580:31:14"}]},"documentation":{"id":3507,"nodeType":"StructuredDocumentation","src":"15412:98:14","text":" @dev Returns the version of the contract.\n @return The version string."},"functionSelector":"0d8e6e2c","id":3516,"implemented":true,"kind":"function","modifiers":[],"name":"getVersion","nameLocation":"15525:10:14","nodeType":"FunctionDefinition","parameters":{"id":3508,"nodeType":"ParameterList","parameters":[],"src":"15535:2:14"},"returnParameters":{"id":3511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3516,"src":"15561:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3509,"name":"uint64","nodeType":"ElementaryTypeName","src":"15561:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"15560:8:14"},"scope":3607,"src":"15516:103:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3530,"nodeType":"Block","src":"15900:67:14","statements":[{"expression":{"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3524,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"15911:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3917","typeString":"contract IBaluniV1PoolFactory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3526,"name":"_poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"15946:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3525,"name":"IBaluniV1PoolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"15925:20:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolFactory_$3917_$","typeString":"type(contract IBaluniV1PoolFactory)"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15925:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3917","typeString":"contract IBaluniV1PoolFactory"}},"src":"15911:48:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3917","typeString":"contract IBaluniV1PoolFactory"}},"id":3529,"nodeType":"ExpressionStatement","src":"15911:48:14"}]},"documentation":{"id":3517,"nodeType":"StructuredDocumentation","src":"15627:199:14","text":" @dev Changes the address of the pool factory contract.\n Can only be called by the contract owner.\n @param _poolFactory The new address of the pool factory contract."},"functionSelector":"72591be5","id":3531,"implemented":true,"kind":"function","modifiers":[{"id":3522,"kind":"modifierInvocation","modifierName":{"id":3521,"name":"onlyOwner","nameLocations":["15890:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"15890:9:14"},"nodeType":"ModifierInvocation","src":"15890:9:14"}],"name":"changePoolFactory","nameLocation":"15841:17:14","nodeType":"FunctionDefinition","parameters":{"id":3520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3519,"mutability":"mutable","name":"_poolFactory","nameLocation":"15867:12:14","nodeType":"VariableDeclaration","scope":3531,"src":"15859:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3518,"name":"address","nodeType":"ElementaryTypeName","src":"15859:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15858:22:14"},"returnParameters":{"id":3523,"nodeType":"ParameterList","parameters":[],"src":"15900:0:14"},"scope":3607,"src":"15832:135:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3589,"nodeType":"Block","src":"16049:294:14","statements":[{"assignments":[3543],"declarations":[{"constant":false,"id":3543,"mutability":"mutable","name":"assets","nameLocation":"16077:6:14","nodeType":"VariableDeclaration","scope":3589,"src":"16060:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3541,"name":"address","nodeType":"ElementaryTypeName","src":"16060:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3542,"nodeType":"ArrayTypeName","src":"16060:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3549,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3545,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"16100:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3544,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"16086:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$3884_$","typeString":"type(contract IBaluniV1Pool)"}},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16086:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3884","typeString":"contract IBaluniV1Pool"}},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16106:9:14","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3708,"src":"16086:29:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16086:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"16060:57:14"},{"assignments":[3554],"declarations":[{"constant":false,"id":3554,"mutability":"mutable","name":"reserves","nameLocation":"16145:8:14","nodeType":"VariableDeclaration","scope":3589,"src":"16128:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3552,"name":"uint256","nodeType":"ElementaryTypeName","src":"16128:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3553,"nodeType":"ArrayTypeName","src":"16128:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3561,"initialValue":{"arguments":[{"expression":{"id":3558,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"16170:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16177:6:14","memberName":"length","nodeType":"MemberAccess","src":"16170:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16156:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3555,"name":"uint256","nodeType":"ElementaryTypeName","src":"16160:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3556,"nodeType":"ArrayTypeName","src":"16160:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16156:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"16128:56:14"},{"body":{"id":3585,"nodeType":"Block","src":"16239:71:14","statements":[{"expression":{"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3573,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"16254:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3575,"indexExpression":{"id":3574,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"16263:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16254:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":3576,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"16268:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3578,"indexExpression":{"id":3577,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"16282:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16268:19:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3582,"indexExpression":{"baseExpression":{"id":3579,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"16288:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3581,"indexExpression":{"id":3580,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"16295:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16288:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16268:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16254:44:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3584,"nodeType":"ExpressionStatement","src":"16254:44:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3566,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"16215:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3567,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"16219:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16226:6:14","memberName":"length","nodeType":"MemberAccess","src":"16219:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16215:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3586,"initializationExpression":{"assignments":[3563],"declarations":[{"constant":false,"id":3563,"mutability":"mutable","name":"i","nameLocation":"16208:1:14","nodeType":"VariableDeclaration","scope":3586,"src":"16200:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3562,"name":"uint256","nodeType":"ElementaryTypeName","src":"16200:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3565,"initialValue":{"hexValue":"30","id":3564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16212:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16200:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16234:3:14","subExpression":{"id":3570,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"16234:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3572,"nodeType":"ExpressionStatement","src":"16234:3:14"},"nodeType":"ForStatement","src":"16195:115:14"},{"expression":{"id":3587,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"16327:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3538,"id":3588,"nodeType":"Return","src":"16320:15:14"}]},"functionSelector":"3e99c1e4","id":3590,"implemented":true,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"15984:11:14","nodeType":"FunctionDefinition","parameters":{"id":3534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3533,"mutability":"mutable","name":"pool","nameLocation":"16004:4:14","nodeType":"VariableDeclaration","scope":3590,"src":"15996:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3532,"name":"address","nodeType":"ElementaryTypeName","src":"15996:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15995:14:14"},"returnParameters":{"id":3538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3590,"src":"16031:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3535,"name":"uint256","nodeType":"ElementaryTypeName","src":"16031:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3536,"nodeType":"ArrayTypeName","src":"16031:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16030:18:14"},"scope":3607,"src":"15975:368:14","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3605,"nodeType":"Block","src":"16438:52:14","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":3599,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"16456:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3601,"indexExpression":{"id":3600,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"16470:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16456:19:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3603,"indexExpression":{"id":3602,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"16476:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16456:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3598,"id":3604,"nodeType":"Return","src":"16449:33:14"}]},"functionSelector":"8628991e","id":3606,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetReserves","nameLocation":"16360:16:14","nodeType":"FunctionDefinition","parameters":{"id":3595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3592,"mutability":"mutable","name":"pool","nameLocation":"16385:4:14","nodeType":"VariableDeclaration","scope":3606,"src":"16377:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3591,"name":"address","nodeType":"ElementaryTypeName","src":"16377:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3594,"mutability":"mutable","name":"asset","nameLocation":"16399:5:14","nodeType":"VariableDeclaration","scope":3606,"src":"16391:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3593,"name":"address","nodeType":"ElementaryTypeName","src":"16391:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16376:29:14"},"returnParameters":{"id":3598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3606,"src":"16429:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3596,"name":"uint256","nodeType":"ElementaryTypeName","src":"16429:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16428:9:14"},"scope":3607,"src":"16351:139:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3608,"src":"2066:14427:14","usedErrors":[30,35,211,214,475,480,858,871,1768,1771],"usedEvents":[41,219,837]}],"src":"40:16455:14"},"id":14},"contracts/interfaces/I1inchSpotAgg.sol":{"ast":{"absolutePath":"contracts/interfaces/I1inchSpotAgg.sol","exportedSymbols":{"I1inchSpotAgg":[3634],"IERC20":[1729]},"id":3635,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":3609,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3610,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3635,"sourceUnit":1730,"src":"65:56:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"I1inchSpotAgg","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3634,"linearizedBaseContracts":[3634],"name":"I1inchSpotAgg","nameLocation":"135:13:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"802431fb","id":3623,"implemented":false,"kind":"function","modifiers":[],"name":"getRate","nameLocation":"163:7:15","nodeType":"FunctionDefinition","parameters":{"id":3619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3613,"mutability":"mutable","name":"srcToken","nameLocation":"178:8:15","nodeType":"VariableDeclaration","scope":3623,"src":"171:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":3612,"nodeType":"UserDefinedTypeName","pathNode":{"id":3611,"name":"IERC20","nameLocations":["171:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"171:6:15"},"referencedDeclaration":1729,"src":"171:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3616,"mutability":"mutable","name":"dstToken","nameLocation":"195:8:15","nodeType":"VariableDeclaration","scope":3623,"src":"188:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":3615,"nodeType":"UserDefinedTypeName","pathNode":{"id":3614,"name":"IERC20","nameLocations":["188:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"188:6:15"},"referencedDeclaration":1729,"src":"188:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3618,"mutability":"mutable","name":"useWrappers","nameLocation":"210:11:15","nodeType":"VariableDeclaration","scope":3623,"src":"205:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3617,"name":"bool","nodeType":"ElementaryTypeName","src":"205:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"170:52:15"},"returnParameters":{"id":3622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3621,"mutability":"mutable","name":"weightedRate","nameLocation":"254:12:15","nodeType":"VariableDeclaration","scope":3623,"src":"246:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3620,"name":"uint256","nodeType":"ElementaryTypeName","src":"246:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"245:22:15"},"scope":3634,"src":"154:114:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7de4fd10","id":3633,"implemented":false,"kind":"function","modifiers":[],"name":"getRateToEth","nameLocation":"283:12:15","nodeType":"FunctionDefinition","parameters":{"id":3629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3626,"mutability":"mutable","name":"srcToken","nameLocation":"303:8:15","nodeType":"VariableDeclaration","scope":3633,"src":"296:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":3625,"nodeType":"UserDefinedTypeName","pathNode":{"id":3624,"name":"IERC20","nameLocations":["296:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"296:6:15"},"referencedDeclaration":1729,"src":"296:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3628,"mutability":"mutable","name":"useWrappers","nameLocation":"318:11:15","nodeType":"VariableDeclaration","scope":3633,"src":"313:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3627,"name":"bool","nodeType":"ElementaryTypeName","src":"313:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"295:35:15"},"returnParameters":{"id":3632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3631,"mutability":"mutable","name":"weightedRate","nameLocation":"362:12:15","nodeType":"VariableDeclaration","scope":3633,"src":"354:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3630,"name":"uint256","nodeType":"ElementaryTypeName","src":"354:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"353:22:15"},"scope":3634,"src":"274:102:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3635,"src":"125:254:15","usedErrors":[],"usedEvents":[]}],"src":"40:341:15"},"id":15},"contracts/interfaces/IBaluniV1Agent.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Agent.sol","exportedSymbols":{"IBaluniV1Agent":[3654]},"id":3655,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":3636,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Agent","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3654,"linearizedBaseContracts":[3654],"name":"IBaluniV1Agent","nameLocation":"77:14:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBaluniV1Agent.Call","id":3643,"members":[{"constant":false,"id":3638,"mutability":"mutable","name":"to","nameLocation":"124:2:16","nodeType":"VariableDeclaration","scope":3643,"src":"116:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3637,"name":"address","nodeType":"ElementaryTypeName","src":"116:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3640,"mutability":"mutable","name":"value","nameLocation":"141:5:16","nodeType":"VariableDeclaration","scope":3643,"src":"133:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3639,"name":"uint256","nodeType":"ElementaryTypeName","src":"133:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3642,"mutability":"mutable","name":"data","nameLocation":"159:4:16","nodeType":"VariableDeclaration","scope":3643,"src":"153:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3641,"name":"bytes","nodeType":"ElementaryTypeName","src":"153:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Call","nameLocation":"104:4:16","nodeType":"StructDefinition","scope":3654,"src":"97:72:16","visibility":"public"},{"functionSelector":"eedc3c50","id":3653,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"184:7:16","nodeType":"FunctionDefinition","parameters":{"id":3651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3647,"mutability":"mutable","name":"calls","nameLocation":"206:5:16","nodeType":"VariableDeclaration","scope":3653,"src":"192:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$3643_memory_ptr_$dyn_memory_ptr","typeString":"struct IBaluniV1Agent.Call[]"},"typeName":{"baseType":{"id":3645,"nodeType":"UserDefinedTypeName","pathNode":{"id":3644,"name":"Call","nameLocations":["192:4:16"],"nodeType":"IdentifierPath","referencedDeclaration":3643,"src":"192:4:16"},"referencedDeclaration":3643,"src":"192:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$3643_storage_ptr","typeString":"struct IBaluniV1Agent.Call"}},"id":3646,"nodeType":"ArrayTypeName","src":"192:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$3643_storage_$dyn_storage_ptr","typeString":"struct IBaluniV1Agent.Call[]"}},"visibility":"internal"},{"constant":false,"id":3650,"mutability":"mutable","name":"tokensReturn","nameLocation":"230:12:16","nodeType":"VariableDeclaration","scope":3653,"src":"213:29:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3648,"name":"address","nodeType":"ElementaryTypeName","src":"213:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3649,"nodeType":"ArrayTypeName","src":"213:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"191:52:16"},"returnParameters":{"id":3652,"nodeType":"ParameterList","parameters":[],"src":"252:0:16"},"scope":3654,"src":"175:78:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3655,"src":"67:189:16","usedErrors":[],"usedEvents":[]}],"src":"40:218:16"},"id":16},"contracts/interfaces/IBaluniV1Pool.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Pool.sol","exportedSymbols":{"Context":[2038],"ERC20":[1651],"IBaluniV1Pool":[3884],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755]},"id":3885,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":3656,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":3657,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3885,"sourceUnit":1652,"src":"65:55:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Pool","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3884,"linearizedBaseContracts":[3884],"name":"IBaluniV1Pool","nameLocation":"134:13:17","nodeType":"ContractDefinition","nodes":[{"functionSelector":"01d22ccd","id":3662,"implemented":false,"kind":"function","modifiers":[],"name":"rebalancer","nameLocation":"178:10:17","nodeType":"FunctionDefinition","parameters":{"id":3658,"nodeType":"ParameterList","parameters":[],"src":"188:2:17"},"returnParameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3662,"src":"214:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3659,"name":"address","nodeType":"ElementaryTypeName","src":"214:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"213:9:17"},"scope":3884,"src":"169:54:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cf35bdd0","id":3669,"implemented":false,"kind":"function","modifiers":[],"name":"assets","nameLocation":"240:6:17","nodeType":"FunctionDefinition","parameters":{"id":3665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3664,"mutability":"mutable","name":"index","nameLocation":"255:5:17","nodeType":"VariableDeclaration","scope":3669,"src":"247:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3663,"name":"uint256","nodeType":"ElementaryTypeName","src":"247:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"246:15:17"},"returnParameters":{"id":3668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3669,"src":"285:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3666,"name":"address","nodeType":"ElementaryTypeName","src":"285:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"284:9:17"},"scope":3884,"src":"231:63:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b5f163ff","id":3676,"implemented":false,"kind":"function","modifiers":[],"name":"weights","nameLocation":"311:7:17","nodeType":"FunctionDefinition","parameters":{"id":3672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3671,"mutability":"mutable","name":"index","nameLocation":"327:5:17","nodeType":"VariableDeclaration","scope":3676,"src":"319:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3670,"name":"uint256","nodeType":"ElementaryTypeName","src":"319:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"318:15:17"},"returnParameters":{"id":3675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3676,"src":"357:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3673,"name":"uint256","nodeType":"ElementaryTypeName","src":"357:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"356:9:17"},"scope":3884,"src":"302:64:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7fec8d38","id":3681,"implemented":false,"kind":"function","modifiers":[],"name":"trigger","nameLocation":"383:7:17","nodeType":"FunctionDefinition","parameters":{"id":3677,"nodeType":"ParameterList","parameters":[],"src":"390:2:17"},"returnParameters":{"id":3680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3681,"src":"416:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3678,"name":"uint256","nodeType":"ElementaryTypeName","src":"416:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"415:9:17"},"scope":3884,"src":"374:51:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c2ee3a08","id":3686,"implemented":false,"kind":"function","modifiers":[],"name":"ONE","nameLocation":"442:3:17","nodeType":"FunctionDefinition","parameters":{"id":3682,"nodeType":"ParameterList","parameters":[],"src":"445:2:17"},"returnParameters":{"id":3685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3686,"src":"471:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3683,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:17"},"scope":3884,"src":"433:47:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f887ea40","id":3691,"implemented":false,"kind":"function","modifiers":[],"name":"router","nameLocation":"497:6:17","nodeType":"FunctionDefinition","parameters":{"id":3687,"nodeType":"ParameterList","parameters":[],"src":"503:2:17"},"returnParameters":{"id":3690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3691,"src":"529:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3688,"name":"address","nodeType":"ElementaryTypeName","src":"529:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"528:9:17"},"scope":3884,"src":"488:50:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"67a6c440","id":3696,"implemented":false,"kind":"function","modifiers":[],"name":"SWAP_FEE_BPS","nameLocation":"555:12:17","nodeType":"FunctionDefinition","parameters":{"id":3692,"nodeType":"ParameterList","parameters":[],"src":"567:2:17"},"returnParameters":{"id":3695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3696,"src":"593:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3693,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"592:9:17"},"scope":3884,"src":"546:56:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0902f1ac","id":3702,"implemented":false,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"619:11:17","nodeType":"FunctionDefinition","parameters":{"id":3697,"nodeType":"ParameterList","parameters":[],"src":"630:2:17"},"returnParameters":{"id":3701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3702,"src":"656:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3698,"name":"uint256","nodeType":"ElementaryTypeName","src":"656:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3699,"nodeType":"ArrayTypeName","src":"656:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"655:18:17"},"scope":3884,"src":"610:64:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"67e4ac2c","id":3708,"implemented":false,"kind":"function","modifiers":[],"name":"getAssets","nameLocation":"691:9:17","nodeType":"FunctionDefinition","parameters":{"id":3703,"nodeType":"ParameterList","parameters":[],"src":"700:2:17"},"returnParameters":{"id":3707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3708,"src":"726:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3704,"name":"address","nodeType":"ElementaryTypeName","src":"726:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3705,"nodeType":"ArrayTypeName","src":"726:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"725:18:17"},"scope":3884,"src":"682:62:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b2b55d70","id":3715,"implemented":false,"kind":"function","modifiers":[],"name":"getAssetReserve","nameLocation":"761:15:17","nodeType":"FunctionDefinition","parameters":{"id":3711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3710,"mutability":"mutable","name":"asset","nameLocation":"785:5:17","nodeType":"VariableDeclaration","scope":3715,"src":"777:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3709,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:15:17"},"returnParameters":{"id":3714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3715,"src":"815:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3712,"name":"uint256","nodeType":"ElementaryTypeName","src":"815:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"814:9:17"},"scope":3884,"src":"752:72:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"22acb867","id":3721,"implemented":false,"kind":"function","modifiers":[],"name":"getWeights","nameLocation":"841:10:17","nodeType":"FunctionDefinition","parameters":{"id":3716,"nodeType":"ParameterList","parameters":[],"src":"851:2:17"},"returnParameters":{"id":3720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3721,"src":"877:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3717,"name":"uint256","nodeType":"ElementaryTypeName","src":"877:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3718,"nodeType":"ArrayTypeName","src":"877:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"876:18:17"},"scope":3884,"src":"832:63:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4aa06652","id":3732,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"912:12:17","nodeType":"FunctionDefinition","parameters":{"id":3728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3723,"mutability":"mutable","name":"fromToken","nameLocation":"933:9:17","nodeType":"VariableDeclaration","scope":3732,"src":"925:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3722,"name":"address","nodeType":"ElementaryTypeName","src":"925:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3725,"mutability":"mutable","name":"toToken","nameLocation":"952:7:17","nodeType":"VariableDeclaration","scope":3732,"src":"944:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3724,"name":"address","nodeType":"ElementaryTypeName","src":"944:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3727,"mutability":"mutable","name":"amount","nameLocation":"969:6:17","nodeType":"VariableDeclaration","scope":3732,"src":"961:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3726,"name":"uint256","nodeType":"ElementaryTypeName","src":"961:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:52:17"},"returnParameters":{"id":3731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3732,"src":"1000:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"999:9:17"},"scope":3884,"src":"903:106:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f47b45e8","id":3741,"implemented":false,"kind":"function","modifiers":[],"name":"performRebalanceIfNeeded","nameLocation":"1026:24:17","nodeType":"FunctionDefinition","parameters":{"id":3733,"nodeType":"ParameterList","parameters":[],"src":"1050:2:17"},"returnParameters":{"id":3740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3736,"mutability":"mutable","name":"amountsToAdd","nameLocation":"1106:12:17","nodeType":"VariableDeclaration","scope":3741,"src":"1089:29:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3734,"name":"uint256","nodeType":"ElementaryTypeName","src":"1089:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3735,"nodeType":"ArrayTypeName","src":"1089:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3739,"mutability":"mutable","name":"amountsToRemove","nameLocation":"1137:15:17","nodeType":"VariableDeclaration","scope":3741,"src":"1120:32:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3737,"name":"uint256","nodeType":"ElementaryTypeName","src":"1120:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3738,"nodeType":"ArrayTypeName","src":"1120:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1088:65:17"},"scope":3884,"src":"1017:137:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"89ab3532","id":3750,"implemented":false,"kind":"function","modifiers":[],"name":"getDeviation","nameLocation":"1171:12:17","nodeType":"FunctionDefinition","parameters":{"id":3742,"nodeType":"ParameterList","parameters":[],"src":"1183:2:17"},"returnParameters":{"id":3749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3745,"mutability":"mutable","name":"directions","nameLocation":"1223:10:17","nodeType":"VariableDeclaration","scope":3750,"src":"1209:24:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3743,"name":"bool","nodeType":"ElementaryTypeName","src":"1209:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3744,"nodeType":"ArrayTypeName","src":"1209:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3748,"mutability":"mutable","name":"deviations","nameLocation":"1252:10:17","nodeType":"VariableDeclaration","scope":3750,"src":"1235:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3746,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3747,"nodeType":"ArrayTypeName","src":"1235:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1208:55:17"},"scope":3884,"src":"1162:102:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cf8fa764","id":3757,"implemented":false,"kind":"function","modifiers":[],"name":"assetLiquidity","nameLocation":"1281:14:17","nodeType":"FunctionDefinition","parameters":{"id":3753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3752,"mutability":"mutable","name":"assetIndex","nameLocation":"1304:10:17","nodeType":"VariableDeclaration","scope":3757,"src":"1296:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3751,"name":"uint256","nodeType":"ElementaryTypeName","src":"1296:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1295:20:17"},"returnParameters":{"id":3756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3757,"src":"1339:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3754,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1338:9:17"},"scope":3884,"src":"1272:76:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1a686502","id":3762,"implemented":false,"kind":"function","modifiers":[],"name":"liquidity","nameLocation":"1365:9:17","nodeType":"FunctionDefinition","parameters":{"id":3758,"nodeType":"ParameterList","parameters":[],"src":"1374:2:17"},"returnParameters":{"id":3761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3762,"src":"1400:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3759,"name":"uint256","nodeType":"ElementaryTypeName","src":"1400:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:9:17"},"scope":3884,"src":"1356:53:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e73faa2d","id":3767,"implemented":false,"kind":"function","modifiers":[],"name":"unitPrice","nameLocation":"1426:9:17","nodeType":"FunctionDefinition","parameters":{"id":3763,"nodeType":"ParameterList","parameters":[],"src":"1435:2:17"},"returnParameters":{"id":3766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3767,"src":"1461:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3764,"name":"uint256","nodeType":"ElementaryTypeName","src":"1461:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1460:9:17"},"scope":3884,"src":"1417:53:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6e81221c","id":3780,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"1487:4:17","nodeType":"FunctionDefinition","parameters":{"id":3776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3769,"mutability":"mutable","name":"fromToken","nameLocation":"1510:9:17","nodeType":"VariableDeclaration","scope":3780,"src":"1502:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3768,"name":"address","nodeType":"ElementaryTypeName","src":"1502:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3771,"mutability":"mutable","name":"toToken","nameLocation":"1538:7:17","nodeType":"VariableDeclaration","scope":3780,"src":"1530:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3770,"name":"address","nodeType":"ElementaryTypeName","src":"1530:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3773,"mutability":"mutable","name":"amount","nameLocation":"1564:6:17","nodeType":"VariableDeclaration","scope":3780,"src":"1556:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3772,"name":"uint256","nodeType":"ElementaryTypeName","src":"1556:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3775,"mutability":"mutable","name":"receiver","nameLocation":"1589:8:17","nodeType":"VariableDeclaration","scope":3780,"src":"1581:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3774,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1491:113:17"},"returnParameters":{"id":3779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3778,"mutability":"mutable","name":"toSend","nameLocation":"1631:6:17","nodeType":"VariableDeclaration","scope":3780,"src":"1623:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3777,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:16:17"},"scope":3884,"src":"1478:161:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"de836ebd","id":3790,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1656:4:17","nodeType":"FunctionDefinition","parameters":{"id":3786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3782,"mutability":"mutable","name":"to","nameLocation":"1669:2:17","nodeType":"VariableDeclaration","scope":3790,"src":"1661:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3781,"name":"address","nodeType":"ElementaryTypeName","src":"1661:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3785,"mutability":"mutable","name":"amounts","nameLocation":"1690:7:17","nodeType":"VariableDeclaration","scope":3790,"src":"1673:24:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3783,"name":"uint256","nodeType":"ElementaryTypeName","src":"1673:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3784,"nodeType":"ArrayTypeName","src":"1673:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1660:38:17"},"returnParameters":{"id":3789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3790,"src":"1717:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3787,"name":"uint256","nodeType":"ElementaryTypeName","src":"1717:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1716:9:17"},"scope":3884,"src":"1647:79:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"89afcb44","id":3798,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"1743:4:17","nodeType":"FunctionDefinition","parameters":{"id":3793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3792,"mutability":"mutable","name":"to","nameLocation":"1756:2:17","nodeType":"VariableDeclaration","scope":3798,"src":"1748:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3791,"name":"address","nodeType":"ElementaryTypeName","src":"1748:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1747:12:17"},"returnParameters":{"id":3797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3798,"src":"1778:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3794,"name":"uint256","nodeType":"ElementaryTypeName","src":"1778:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3795,"nodeType":"ArrayTypeName","src":"1778:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1777:18:17"},"scope":3884,"src":"1734:62:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0918281b","id":3803,"implemented":false,"kind":"function","modifiers":[],"name":"changeRebalancer","nameLocation":"1813:16:17","nodeType":"FunctionDefinition","parameters":{"id":3801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3800,"mutability":"mutable","name":"_newRebalancer","nameLocation":"1838:14:17","nodeType":"VariableDeclaration","scope":3803,"src":"1830:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3799,"name":"address","nodeType":"ElementaryTypeName","src":"1830:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1829:24:17"},"returnParameters":{"id":3802,"nodeType":"ParameterList","parameters":[],"src":"1862:0:17"},"scope":3884,"src":"1804:59:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"340ac20f","id":3808,"implemented":false,"kind":"function","modifiers":[],"name":"changeRouter","nameLocation":"1880:12:17","nodeType":"FunctionDefinition","parameters":{"id":3806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"_newRouter","nameLocation":"1901:10:17","nodeType":"VariableDeclaration","scope":3808,"src":"1893:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3804,"name":"address","nodeType":"ElementaryTypeName","src":"1893:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1892:20:17"},"returnParameters":{"id":3807,"nodeType":"ParameterList","parameters":[],"src":"1921:0:17"},"scope":3884,"src":"1871:51:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"36bf6e39","id":3816,"implemented":false,"kind":"function","modifiers":[],"name":"computeTotalValuation","nameLocation":"1939:21:17","nodeType":"FunctionDefinition","parameters":{"id":3809,"nodeType":"ParameterList","parameters":[],"src":"1960:2:17"},"returnParameters":{"id":3815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3811,"mutability":"mutable","name":"totalVal","nameLocation":"1994:8:17","nodeType":"VariableDeclaration","scope":3816,"src":"1986:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3810,"name":"uint256","nodeType":"ElementaryTypeName","src":"1986:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3814,"mutability":"mutable","name":"valuations","nameLocation":"2021:10:17","nodeType":"VariableDeclaration","scope":3816,"src":"2004:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3812,"name":"uint256","nodeType":"ElementaryTypeName","src":"2004:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3813,"nodeType":"ArrayTypeName","src":"2004:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1985:47:17"},"scope":3884,"src":"1930:103:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3dff5b7f","id":3824,"implemented":false,"kind":"function","modifiers":[],"name":"updateReserves","nameLocation":"2050:14:17","nodeType":"FunctionDefinition","parameters":{"id":3822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3819,"mutability":"mutable","name":"amounts","nameLocation":"2082:7:17","nodeType":"VariableDeclaration","scope":3824,"src":"2065:24:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3817,"name":"uint256","nodeType":"ElementaryTypeName","src":"2065:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3818,"nodeType":"ArrayTypeName","src":"2065:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3821,"mutability":"mutable","name":"increase","nameLocation":"2096:8:17","nodeType":"VariableDeclaration","scope":3824,"src":"2091:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3820,"name":"bool","nodeType":"ElementaryTypeName","src":"2091:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2064:41:17"},"returnParameters":{"id":3823,"nodeType":"ParameterList","parameters":[],"src":"2114:0:17"},"scope":3884,"src":"2041:74:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0723c999","id":3832,"implemented":false,"kind":"function","modifiers":[],"name":"rebalanceWeights","nameLocation":"2132:16:17","nodeType":"FunctionDefinition","parameters":{"id":3827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3826,"mutability":"mutable","name":"receiver","nameLocation":"2157:8:17","nodeType":"VariableDeclaration","scope":3832,"src":"2149:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3825,"name":"address","nodeType":"ElementaryTypeName","src":"2149:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2148:18:17"},"returnParameters":{"id":3831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3832,"src":"2185:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3828,"name":"uint256","nodeType":"ElementaryTypeName","src":"2185:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3829,"nodeType":"ArrayTypeName","src":"2185:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2184:18:17"},"scope":3884,"src":"2123:80:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"IBaluniV1Pool.AssetInfo","id":3837,"members":[{"constant":false,"id":3834,"mutability":"mutable","name":"asset","nameLocation":"2247:5:17","nodeType":"VariableDeclaration","scope":3837,"src":"2239:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3833,"name":"address","nodeType":"ElementaryTypeName","src":"2239:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3836,"mutability":"mutable","name":"weight","nameLocation":"2271:6:17","nodeType":"VariableDeclaration","scope":3837,"src":"2263:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3835,"name":"uint256","nodeType":"ElementaryTypeName","src":"2263:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AssetInfo","nameLocation":"2218:9:17","nodeType":"StructDefinition","scope":3884,"src":"2211:74:17","visibility":"public"},{"functionSelector":"d14ef46d","id":3845,"implemented":false,"kind":"function","modifiers":[],"name":"assetInfos","nameLocation":"2302:10:17","nodeType":"FunctionDefinition","parameters":{"id":3840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3839,"mutability":"mutable","name":"_index","nameLocation":"2318:6:17","nodeType":"VariableDeclaration","scope":3845,"src":"2313:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3838,"name":"uint","nodeType":"ElementaryTypeName","src":"2313:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2312:13:17"},"returnParameters":{"id":3844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3845,"src":"2349:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$3837_memory_ptr","typeString":"struct IBaluniV1Pool.AssetInfo"},"typeName":{"id":3842,"nodeType":"UserDefinedTypeName","pathNode":{"id":3841,"name":"AssetInfo","nameLocations":["2349:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":3837,"src":"2349:9:17"},"referencedDeclaration":3837,"src":"2349:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$3837_storage_ptr","typeString":"struct IBaluniV1Pool.AssetInfo"}},"visibility":"internal"}],"src":"2348:18:17"},"scope":3884,"src":"2293:74:17","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"eventSelector":"279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b8","id":3852,"name":"RebalancePerformed","nameLocation":"2396:18:17","nodeType":"EventDefinition","parameters":{"id":3851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3847,"indexed":true,"mutability":"mutable","name":"by","nameLocation":"2431:2:17","nodeType":"VariableDeclaration","scope":3852,"src":"2415:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3846,"name":"address","nodeType":"ElementaryTypeName","src":"2415:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3850,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"2445:6:17","nodeType":"VariableDeclaration","scope":3852,"src":"2435:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3848,"name":"address","nodeType":"ElementaryTypeName","src":"2435:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3849,"nodeType":"ArrayTypeName","src":"2435:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2414:38:17"},"src":"2390:63:17"},{"anonymous":false,"eventSelector":"a95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e","id":3859,"name":"WeightsRebalanced","nameLocation":"2465:17:17","nodeType":"EventDefinition","parameters":{"id":3858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3854,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2499:4:17","nodeType":"VariableDeclaration","scope":3859,"src":"2483:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3853,"name":"address","nodeType":"ElementaryTypeName","src":"2483:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3857,"indexed":false,"mutability":"mutable","name":"amountsAdded","nameLocation":"2515:12:17","nodeType":"VariableDeclaration","scope":3859,"src":"2505:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"2505:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3856,"nodeType":"ArrayTypeName","src":"2505:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2482:46:17"},"src":"2459:70:17"},{"anonymous":false,"eventSelector":"cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5","id":3865,"name":"Burn","nameLocation":"2541:4:17","nodeType":"EventDefinition","parameters":{"id":3864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3861,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2562:4:17","nodeType":"VariableDeclaration","scope":3865,"src":"2546:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3860,"name":"address","nodeType":"ElementaryTypeName","src":"2546:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3863,"indexed":false,"mutability":"mutable","name":"sharesBurned","nameLocation":"2576:12:17","nodeType":"VariableDeclaration","scope":3865,"src":"2568:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3862,"name":"uint256","nodeType":"ElementaryTypeName","src":"2568:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2545:44:17"},"src":"2535:55:17"},{"anonymous":false,"eventSelector":"0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885","id":3871,"name":"Mint","nameLocation":"2602:4:17","nodeType":"EventDefinition","parameters":{"id":3870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3867,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2623:2:17","nodeType":"VariableDeclaration","scope":3871,"src":"2607:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3866,"name":"address","nodeType":"ElementaryTypeName","src":"2607:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3869,"indexed":false,"mutability":"mutable","name":"sharesMinted","nameLocation":"2635:12:17","nodeType":"VariableDeclaration","scope":3871,"src":"2627:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3868,"name":"uint256","nodeType":"ElementaryTypeName","src":"2627:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2606:42:17"},"src":"2596:53:17"},{"anonymous":false,"eventSelector":"cd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e46062","id":3883,"name":"Swap","nameLocation":"2661:4:17","nodeType":"EventDefinition","parameters":{"id":3882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2692:4:17","nodeType":"VariableDeclaration","scope":3883,"src":"2676:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3872,"name":"address","nodeType":"ElementaryTypeName","src":"2676:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3875,"indexed":true,"mutability":"mutable","name":"fromToken","nameLocation":"2723:9:17","nodeType":"VariableDeclaration","scope":3883,"src":"2707:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3874,"name":"address","nodeType":"ElementaryTypeName","src":"2707:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3877,"indexed":true,"mutability":"mutable","name":"toToken","nameLocation":"2759:7:17","nodeType":"VariableDeclaration","scope":3883,"src":"2743:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3876,"name":"address","nodeType":"ElementaryTypeName","src":"2743:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3879,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"2785:8:17","nodeType":"VariableDeclaration","scope":3883,"src":"2777:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3878,"name":"uint256","nodeType":"ElementaryTypeName","src":"2777:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3881,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"2812:9:17","nodeType":"VariableDeclaration","scope":3883,"src":"2804:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3880,"name":"uint256","nodeType":"ElementaryTypeName","src":"2804:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:163:17"},"src":"2655:174:17"}],"scope":3885,"src":"124:2708:17","usedErrors":[],"usedEvents":[3852,3859,3865,3871,3883]}],"src":"40:2794:17"},"id":17},"contracts/interfaces/IBaluniV1PoolFactory.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1PoolFactory.sol","exportedSymbols":{"IBaluniV1PoolFactory":[3917]},"id":3918,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":3886,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1PoolFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3917,"linearizedBaseContracts":[3917],"name":"IBaluniV1PoolFactory","nameLocation":"77:20:18","nodeType":"ContractDefinition","nodes":[{"functionSelector":"2d5e94a7","id":3895,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolByAssets","nameLocation":"114:15:18","nodeType":"FunctionDefinition","parameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3888,"mutability":"mutable","name":"asset1","nameLocation":"138:6:18","nodeType":"VariableDeclaration","scope":3895,"src":"130:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3887,"name":"address","nodeType":"ElementaryTypeName","src":"130:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3890,"mutability":"mutable","name":"asset2","nameLocation":"154:6:18","nodeType":"VariableDeclaration","scope":3895,"src":"146:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3889,"name":"address","nodeType":"ElementaryTypeName","src":"146:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"129:32:18"},"returnParameters":{"id":3894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3895,"src":"185:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3892,"name":"address","nodeType":"ElementaryTypeName","src":"185:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"184:9:18"},"scope":3917,"src":"105:89:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b4340e6a","id":3903,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolsByAsset","nameLocation":"211:15:18","nodeType":"FunctionDefinition","parameters":{"id":3898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3897,"mutability":"mutable","name":"token","nameLocation":"235:5:18","nodeType":"VariableDeclaration","scope":3903,"src":"227:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3896,"name":"address","nodeType":"ElementaryTypeName","src":"227:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"226:15:18"},"returnParameters":{"id":3902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3903,"src":"265:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3899,"name":"address","nodeType":"ElementaryTypeName","src":"265:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3900,"nodeType":"ArrayTypeName","src":"265:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"264:18:18"},"scope":3917,"src":"202:81:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"89345efb","id":3910,"implemented":false,"kind":"function","modifiers":[],"name":"poolExist","nameLocation":"300:9:18","nodeType":"FunctionDefinition","parameters":{"id":3906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3905,"mutability":"mutable","name":"_pool","nameLocation":"318:5:18","nodeType":"VariableDeclaration","scope":3910,"src":"310:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3904,"name":"address","nodeType":"ElementaryTypeName","src":"310:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"309:15:18"},"returnParameters":{"id":3909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3910,"src":"348:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3907,"name":"bool","nodeType":"ElementaryTypeName","src":"348:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"347:6:18"},"scope":3917,"src":"291:63:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d88ff1f4","id":3916,"implemented":false,"kind":"function","modifiers":[],"name":"getAllPools","nameLocation":"371:11:18","nodeType":"FunctionDefinition","parameters":{"id":3911,"nodeType":"ParameterList","parameters":[],"src":"382:2:18"},"returnParameters":{"id":3915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3916,"src":"408:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3912,"name":"address","nodeType":"ElementaryTypeName","src":"408:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3913,"nodeType":"ArrayTypeName","src":"408:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"407:18:18"},"scope":3917,"src":"362:64:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3918,"src":"67:362:18","usedErrors":[],"usedEvents":[]}],"src":"40:391:18"},"id":18},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Rebalancer.sol","exportedSymbols":{"I1inchSpotAgg":[3634],"IBaluniV1Agent":[3654],"IBaluniV1Rebalancer":[4038],"IBaluniV1Router":[4296],"IERC20":[1729],"IERC20Metadata":[1755]},"id":4039,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":3919,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:19"},{"absolutePath":"contracts/interfaces/IBaluniV1Router.sol","file":"./IBaluniV1Router.sol","id":3920,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4039,"sourceUnit":4297,"src":"67:31:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Rebalancer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4038,"linearizedBaseContracts":[4038],"name":"IBaluniV1Rebalancer","nameLocation":"112:19:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBaluniV1Rebalancer.RebalanceVars","id":3950,"members":[{"constant":false,"id":3922,"mutability":"mutable","name":"length","nameLocation":"173:6:19","nodeType":"VariableDeclaration","scope":3950,"src":"165:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3921,"name":"uint256","nodeType":"ElementaryTypeName","src":"165:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3924,"mutability":"mutable","name":"totalValue","nameLocation":"194:10:19","nodeType":"VariableDeclaration","scope":3950,"src":"186:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3923,"name":"uint256","nodeType":"ElementaryTypeName","src":"186:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3926,"mutability":"mutable","name":"finalUsdBalance","nameLocation":"219:15:19","nodeType":"VariableDeclaration","scope":3950,"src":"211:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"211:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3928,"mutability":"mutable","name":"overweightVaultsLength","nameLocation":"249:22:19","nodeType":"VariableDeclaration","scope":3950,"src":"241:30:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3927,"name":"uint256","nodeType":"ElementaryTypeName","src":"241:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3930,"mutability":"mutable","name":"underweightVaultsLength","nameLocation":"286:23:19","nodeType":"VariableDeclaration","scope":3950,"src":"278:31:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3929,"name":"uint256","nodeType":"ElementaryTypeName","src":"278:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3932,"mutability":"mutable","name":"totalActiveWeight","nameLocation":"324:17:19","nodeType":"VariableDeclaration","scope":3950,"src":"316:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3931,"name":"uint256","nodeType":"ElementaryTypeName","src":"316:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3934,"mutability":"mutable","name":"amountOut","nameLocation":"356:9:19","nodeType":"VariableDeclaration","scope":3950,"src":"348:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3933,"name":"uint256","nodeType":"ElementaryTypeName","src":"348:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3937,"mutability":"mutable","name":"overweightVaults","nameLocation":"382:16:19","nodeType":"VariableDeclaration","scope":3950,"src":"372:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3935,"name":"uint256","nodeType":"ElementaryTypeName","src":"372:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3936,"nodeType":"ArrayTypeName","src":"372:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3940,"mutability":"mutable","name":"overweightAmounts","nameLocation":"415:17:19","nodeType":"VariableDeclaration","scope":3950,"src":"405:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3938,"name":"uint256","nodeType":"ElementaryTypeName","src":"405:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3939,"nodeType":"ArrayTypeName","src":"405:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3943,"mutability":"mutable","name":"underweightVaults","nameLocation":"449:17:19","nodeType":"VariableDeclaration","scope":3950,"src":"439:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3941,"name":"uint256","nodeType":"ElementaryTypeName","src":"439:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3942,"nodeType":"ArrayTypeName","src":"439:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3946,"mutability":"mutable","name":"underweightAmounts","nameLocation":"483:18:19","nodeType":"VariableDeclaration","scope":3950,"src":"473:28:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3944,"name":"uint256","nodeType":"ElementaryTypeName","src":"473:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3945,"nodeType":"ArrayTypeName","src":"473:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3949,"mutability":"mutable","name":"balances","nameLocation":"518:8:19","nodeType":"VariableDeclaration","scope":3950,"src":"508:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3947,"name":"uint256","nodeType":"ElementaryTypeName","src":"508:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3948,"nodeType":"ArrayTypeName","src":"508:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"RebalanceVars","nameLocation":"144:13:19","nodeType":"StructDefinition","scope":4038,"src":"137:395:19","visibility":"public"},{"functionSelector":"39b65140","id":3955,"implemented":false,"kind":"function","modifiers":[],"name":"baluniRouter","nameLocation":"563:12:19","nodeType":"FunctionDefinition","parameters":{"id":3951,"nodeType":"ParameterList","parameters":[],"src":"575:2:19"},"returnParameters":{"id":3954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3955,"src":"601:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3952,"name":"address","nodeType":"ElementaryTypeName","src":"601:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"600:9:19"},"scope":4038,"src":"554:56:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"89a30271","id":3960,"implemented":false,"kind":"function","modifiers":[],"name":"USDC","nameLocation":"625:4:19","nodeType":"FunctionDefinition","parameters":{"id":3956,"nodeType":"ParameterList","parameters":[],"src":"629:2:19"},"returnParameters":{"id":3959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3960,"src":"655:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3957,"name":"address","nodeType":"ElementaryTypeName","src":"655:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"654:9:19"},"scope":4038,"src":"616:48:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b381cf40","id":3965,"implemented":false,"kind":"function","modifiers":[],"name":"WNATIVE","nameLocation":"679:7:19","nodeType":"FunctionDefinition","parameters":{"id":3961,"nodeType":"ParameterList","parameters":[],"src":"686:2:19"},"returnParameters":{"id":3964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3965,"src":"712:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3962,"name":"address","nodeType":"ElementaryTypeName","src":"712:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"711:9:19"},"scope":4038,"src":"670:51:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"735de9f7","id":3970,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapRouter","nameLocation":"736:13:19","nodeType":"FunctionDefinition","parameters":{"id":3966,"nodeType":"ParameterList","parameters":[],"src":"749:2:19"},"returnParameters":{"id":3969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3970,"src":"775:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3967,"name":"address","nodeType":"ElementaryTypeName","src":"775:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"774:9:19"},"scope":4038,"src":"727:57:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8bdb2afa","id":3975,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapFactory","nameLocation":"799:14:19","nodeType":"FunctionDefinition","parameters":{"id":3971,"nodeType":"ParameterList","parameters":[],"src":"813:2:19"},"returnParameters":{"id":3974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3975,"src":"839:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3972,"name":"address","nodeType":"ElementaryTypeName","src":"839:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"838:9:19"},"scope":4038,"src":"790:58:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"eb06b29d","id":3980,"implemented":false,"kind":"function","modifiers":[],"name":"_1InchSpotAgg","nameLocation":"863:13:19","nodeType":"FunctionDefinition","parameters":{"id":3976,"nodeType":"ParameterList","parameters":[],"src":"876:2:19"},"returnParameters":{"id":3979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3980,"src":"902:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3977,"name":"address","nodeType":"ElementaryTypeName","src":"902:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"901:9:19"},"scope":4038,"src":"854:57:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"61d027b3","id":3985,"implemented":false,"kind":"function","modifiers":[],"name":"treasury","nameLocation":"926:8:19","nodeType":"FunctionDefinition","parameters":{"id":3981,"nodeType":"ParameterList","parameters":[],"src":"934:2:19"},"returnParameters":{"id":3984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3985,"src":"960:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3982,"name":"address","nodeType":"ElementaryTypeName","src":"960:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"959:9:19"},"scope":4038,"src":"917:52:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f0bf7714","id":4005,"implemented":false,"kind":"function","modifiers":[],"name":"rebalance","nameLocation":"1000:9:19","nodeType":"FunctionDefinition","parameters":{"id":4003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3988,"mutability":"mutable","name":"balances","nameLocation":"1033:8:19","nodeType":"VariableDeclaration","scope":4005,"src":"1016:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3986,"name":"uint256","nodeType":"ElementaryTypeName","src":"1016:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3987,"nodeType":"ArrayTypeName","src":"1016:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3991,"mutability":"mutable","name":"assets","nameLocation":"1067:6:19","nodeType":"VariableDeclaration","scope":4005,"src":"1048:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3989,"name":"address","nodeType":"ElementaryTypeName","src":"1048:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3990,"nodeType":"ArrayTypeName","src":"1048:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3994,"mutability":"mutable","name":"weights","nameLocation":"1099:7:19","nodeType":"VariableDeclaration","scope":4005,"src":"1080:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3992,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3993,"nodeType":"ArrayTypeName","src":"1080:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3996,"mutability":"mutable","name":"limit","nameLocation":"1121:5:19","nodeType":"VariableDeclaration","scope":4005,"src":"1113:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3995,"name":"uint256","nodeType":"ElementaryTypeName","src":"1113:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3998,"mutability":"mutable","name":"sender","nameLocation":"1141:6:19","nodeType":"VariableDeclaration","scope":4005,"src":"1133:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3997,"name":"address","nodeType":"ElementaryTypeName","src":"1133:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4000,"mutability":"mutable","name":"receiver","nameLocation":"1162:8:19","nodeType":"VariableDeclaration","scope":4005,"src":"1154:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3999,"name":"address","nodeType":"ElementaryTypeName","src":"1154:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4002,"mutability":"mutable","name":"baseAsset","nameLocation":"1185:9:19","nodeType":"VariableDeclaration","scope":4005,"src":"1177:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4001,"name":"address","nodeType":"ElementaryTypeName","src":"1177:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1009:190:19"},"returnParameters":{"id":4004,"nodeType":"ParameterList","parameters":[],"src":"1208:0:19"},"scope":4038,"src":"991:218:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"997146f5","id":4026,"implemented":false,"kind":"function","modifiers":[],"name":"checkRebalance","nameLocation":"1224:14:19","nodeType":"FunctionDefinition","parameters":{"id":4021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4008,"mutability":"mutable","name":"balances","nameLocation":"1262:8:19","nodeType":"VariableDeclaration","scope":4026,"src":"1245:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4006,"name":"uint256","nodeType":"ElementaryTypeName","src":"1245:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4007,"nodeType":"ArrayTypeName","src":"1245:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4011,"mutability":"mutable","name":"assets","nameLocation":"1296:6:19","nodeType":"VariableDeclaration","scope":4026,"src":"1277:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4009,"name":"address","nodeType":"ElementaryTypeName","src":"1277:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4010,"nodeType":"ArrayTypeName","src":"1277:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4014,"mutability":"mutable","name":"weights","nameLocation":"1328:7:19","nodeType":"VariableDeclaration","scope":4026,"src":"1309:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4012,"name":"uint256","nodeType":"ElementaryTypeName","src":"1309:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4013,"nodeType":"ArrayTypeName","src":"1309:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4016,"mutability":"mutable","name":"limit","nameLocation":"1350:5:19","nodeType":"VariableDeclaration","scope":4026,"src":"1342:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4015,"name":"uint256","nodeType":"ElementaryTypeName","src":"1342:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4018,"mutability":"mutable","name":"sender","nameLocation":"1370:6:19","nodeType":"VariableDeclaration","scope":4026,"src":"1362:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4017,"name":"address","nodeType":"ElementaryTypeName","src":"1362:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4020,"mutability":"mutable","name":"baseAsset","nameLocation":"1391:9:19","nodeType":"VariableDeclaration","scope":4026,"src":"1383:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4019,"name":"address","nodeType":"ElementaryTypeName","src":"1383:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1238:167:19"},"returnParameters":{"id":4025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4026,"src":"1429:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RebalanceVars_$3950_memory_ptr","typeString":"struct IBaluniV1Rebalancer.RebalanceVars"},"typeName":{"id":4023,"nodeType":"UserDefinedTypeName","pathNode":{"id":4022,"name":"RebalanceVars","nameLocations":["1429:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":3950,"src":"1429:13:19"},"referencedDeclaration":3950,"src":"1429:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_RebalanceVars_$3950_storage_ptr","typeString":"struct IBaluniV1Rebalancer.RebalanceVars"}},"visibility":"internal"}],"src":"1428:22:19"},"scope":4038,"src":"1215:236:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"248391ff","id":4037,"implemented":false,"kind":"function","modifiers":[],"name":"convert","nameLocation":"1466:7:19","nodeType":"FunctionDefinition","parameters":{"id":4033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4028,"mutability":"mutable","name":"fromToken","nameLocation":"1482:9:19","nodeType":"VariableDeclaration","scope":4037,"src":"1474:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4027,"name":"address","nodeType":"ElementaryTypeName","src":"1474:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4030,"mutability":"mutable","name":"toToken","nameLocation":"1501:7:19","nodeType":"VariableDeclaration","scope":4037,"src":"1493:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4029,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4032,"mutability":"mutable","name":"amount","nameLocation":"1518:6:19","nodeType":"VariableDeclaration","scope":4037,"src":"1510:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4031,"name":"uint256","nodeType":"ElementaryTypeName","src":"1510:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1473:52:19"},"returnParameters":{"id":4036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4037,"src":"1549:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4034,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1548:9:19"},"scope":4038,"src":"1457:101:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4039,"src":"102:1459:19","usedErrors":[],"usedEvents":[]}],"src":"40:1523:19"},"id":19},"contracts/interfaces/IBaluniV1Router.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Router.sol","exportedSymbols":{"I1inchSpotAgg":[3634],"IBaluniV1Agent":[3654],"IBaluniV1Router":[4296],"IERC20":[1729],"IERC20Metadata":[1755]},"id":4297,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":4040,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:20"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4041,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4297,"sourceUnit":1730,"src":"67:56:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":4042,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4297,"sourceUnit":1756,"src":"125:75:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/I1inchSpotAgg.sol","file":"./I1inchSpotAgg.sol","id":4043,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4297,"sourceUnit":3635,"src":"202:29:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Agent.sol","file":"./IBaluniV1Agent.sol","id":4044,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4297,"sourceUnit":3655,"src":"233:30:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Router","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4296,"linearizedBaseContracts":[4296],"name":"IBaluniV1Router","nameLocation":"277:15:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBaluniV1Router.Call","id":4051,"members":[{"constant":false,"id":4046,"mutability":"mutable","name":"to","nameLocation":"325:2:20","nodeType":"VariableDeclaration","scope":4051,"src":"317:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4045,"name":"address","nodeType":"ElementaryTypeName","src":"317:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4048,"mutability":"mutable","name":"value","nameLocation":"342:5:20","nodeType":"VariableDeclaration","scope":4051,"src":"334:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4047,"name":"uint256","nodeType":"ElementaryTypeName","src":"334:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4050,"mutability":"mutable","name":"data","nameLocation":"360:4:20","nodeType":"VariableDeclaration","scope":4051,"src":"354:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4049,"name":"bytes","nodeType":"ElementaryTypeName","src":"354:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Call","nameLocation":"305:4:20","nodeType":"StructDefinition","scope":4296,"src":"298:72:20","visibility":"public"},{"functionSelector":"34decfc9","id":4056,"implemented":false,"kind":"function","modifiers":[],"name":"_MAX_BPS_FEE","nameLocation":"401:12:20","nodeType":"FunctionDefinition","parameters":{"id":4052,"nodeType":"ParameterList","parameters":[],"src":"413:2:20"},"returnParameters":{"id":4055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4056,"src":"439:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"439:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"438:9:20"},"scope":4296,"src":"392:56:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b9f5e617","id":4061,"implemented":false,"kind":"function","modifiers":[],"name":"_BPS_FEE","nameLocation":"463:8:20","nodeType":"FunctionDefinition","parameters":{"id":4057,"nodeType":"ParameterList","parameters":[],"src":"471:2:20"},"returnParameters":{"id":4060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4061,"src":"497:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4058,"name":"uint256","nodeType":"ElementaryTypeName","src":"497:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"496:9:20"},"scope":4296,"src":"454:52:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"85377188","id":4066,"implemented":false,"kind":"function","modifiers":[],"name":"_BPS_BASE","nameLocation":"521:9:20","nodeType":"FunctionDefinition","parameters":{"id":4062,"nodeType":"ParameterList","parameters":[],"src":"530:2:20"},"returnParameters":{"id":4065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4066,"src":"556:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4063,"name":"uint256","nodeType":"ElementaryTypeName","src":"556:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"555:9:20"},"scope":4296,"src":"512:53:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"aa6ca808","id":4072,"implemented":false,"kind":"function","modifiers":[],"name":"getTokens","nameLocation":"580:9:20","nodeType":"FunctionDefinition","parameters":{"id":4067,"nodeType":"ParameterList","parameters":[],"src":"589:2:20"},"returnParameters":{"id":4071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4072,"src":"615:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4068,"name":"address","nodeType":"ElementaryTypeName","src":"615:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4069,"nodeType":"ArrayTypeName","src":"615:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"614:18:20"},"scope":4296,"src":"571:62:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"89a30271","id":4078,"implemented":false,"kind":"function","modifiers":[],"name":"USDC","nameLocation":"648:4:20","nodeType":"FunctionDefinition","parameters":{"id":4073,"nodeType":"ParameterList","parameters":[],"src":"652:2:20"},"returnParameters":{"id":4077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4078,"src":"678:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":4075,"nodeType":"UserDefinedTypeName","pathNode":{"id":4074,"name":"IERC20","nameLocations":["678:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"678:6:20"},"referencedDeclaration":1729,"src":"678:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"677:8:20"},"scope":4296,"src":"639:47:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b381cf40","id":4083,"implemented":false,"kind":"function","modifiers":[],"name":"WNATIVE","nameLocation":"701:7:20","nodeType":"FunctionDefinition","parameters":{"id":4079,"nodeType":"ParameterList","parameters":[],"src":"708:2:20"},"returnParameters":{"id":4082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4083,"src":"734:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4080,"name":"address","nodeType":"ElementaryTypeName","src":"734:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"733:9:20"},"scope":4296,"src":"692:51:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7dc0d1d0","id":4088,"implemented":false,"kind":"function","modifiers":[],"name":"oracle","nameLocation":"758:6:20","nodeType":"FunctionDefinition","parameters":{"id":4084,"nodeType":"ParameterList","parameters":[],"src":"764:2:20"},"returnParameters":{"id":4087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4088,"src":"790:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4085,"name":"address","nodeType":"ElementaryTypeName","src":"790:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"789:9:20"},"scope":4296,"src":"749:50:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"735de9f7","id":4093,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapRouter","nameLocation":"814:13:20","nodeType":"FunctionDefinition","parameters":{"id":4089,"nodeType":"ParameterList","parameters":[],"src":"827:2:20"},"returnParameters":{"id":4092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4093,"src":"853:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4090,"name":"address","nodeType":"ElementaryTypeName","src":"853:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"852:9:20"},"scope":4296,"src":"805:57:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8bdb2afa","id":4098,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapFactory","nameLocation":"877:14:20","nodeType":"FunctionDefinition","parameters":{"id":4094,"nodeType":"ParameterList","parameters":[],"src":"891:2:20"},"returnParameters":{"id":4097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4098,"src":"917:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4095,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"916:9:20"},"scope":4296,"src":"868:58:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7df107ea","id":4103,"implemented":false,"kind":"function","modifiers":[],"name":"agentFactory","nameLocation":"941:12:20","nodeType":"FunctionDefinition","parameters":{"id":4099,"nodeType":"ParameterList","parameters":[],"src":"953:2:20"},"returnParameters":{"id":4102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4103,"src":"979:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4100,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"978:9:20"},"scope":4296,"src":"932:56:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"60961528","id":4108,"implemented":false,"kind":"function","modifiers":[],"name":"marketOracle","nameLocation":"1003:12:20","nodeType":"FunctionDefinition","parameters":{"id":4104,"nodeType":"ParameterList","parameters":[],"src":"1015:2:20"},"returnParameters":{"id":4107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4108,"src":"1041:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4105,"name":"address","nodeType":"ElementaryTypeName","src":"1041:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1040:9:20"},"scope":4296,"src":"994:56:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"01d22ccd","id":4113,"implemented":false,"kind":"function","modifiers":[],"name":"rebalancer","nameLocation":"1065:10:20","nodeType":"FunctionDefinition","parameters":{"id":4109,"nodeType":"ParameterList","parameters":[],"src":"1075:2:20"},"returnParameters":{"id":4112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4113,"src":"1101:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4110,"name":"address","nodeType":"ElementaryTypeName","src":"1101:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1100:9:20"},"scope":4296,"src":"1056:54:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"61d027b3","id":4118,"implemented":false,"kind":"function","modifiers":[],"name":"treasury","nameLocation":"1125:8:20","nodeType":"FunctionDefinition","parameters":{"id":4114,"nodeType":"ParameterList","parameters":[],"src":"1133:2:20"},"returnParameters":{"id":4117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4118,"src":"1159:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4115,"name":"address","nodeType":"ElementaryTypeName","src":"1159:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1158:9:20"},"scope":4296,"src":"1116:52:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cc2a9a5b","id":4133,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"1199:10:20","nodeType":"FunctionDefinition","parameters":{"id":4131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4120,"mutability":"mutable","name":"_usdc","nameLocation":"1224:5:20","nodeType":"VariableDeclaration","scope":4133,"src":"1216:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4119,"name":"address","nodeType":"ElementaryTypeName","src":"1216:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4122,"mutability":"mutable","name":"_wnative","nameLocation":"1244:8:20","nodeType":"VariableDeclaration","scope":4133,"src":"1236:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4121,"name":"address","nodeType":"ElementaryTypeName","src":"1236:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4124,"mutability":"mutable","name":"_1inchSpotAgg","nameLocation":"1267:13:20","nodeType":"VariableDeclaration","scope":4133,"src":"1259:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4123,"name":"address","nodeType":"ElementaryTypeName","src":"1259:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4126,"mutability":"mutable","name":"_uniRouter","nameLocation":"1295:10:20","nodeType":"VariableDeclaration","scope":4133,"src":"1287:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4125,"name":"address","nodeType":"ElementaryTypeName","src":"1287:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4128,"mutability":"mutable","name":"_uniFactory","nameLocation":"1320:11:20","nodeType":"VariableDeclaration","scope":4133,"src":"1312:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4127,"name":"address","nodeType":"ElementaryTypeName","src":"1312:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4130,"mutability":"mutable","name":"_rebalancer","nameLocation":"1346:11:20","nodeType":"VariableDeclaration","scope":4133,"src":"1338:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4129,"name":"address","nodeType":"ElementaryTypeName","src":"1338:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1209:153:20"},"returnParameters":{"id":4132,"nodeType":"ParameterList","parameters":[],"src":"1371:0:20"},"scope":4296,"src":"1190:182:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b0d60ba0","id":4150,"implemented":false,"kind":"function","modifiers":[],"name":"reinitialize","nameLocation":"1387:12:20","nodeType":"FunctionDefinition","parameters":{"id":4148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4135,"mutability":"mutable","name":"_usdc","nameLocation":"1414:5:20","nodeType":"VariableDeclaration","scope":4150,"src":"1406:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4134,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4137,"mutability":"mutable","name":"_wnative","nameLocation":"1434:8:20","nodeType":"VariableDeclaration","scope":4150,"src":"1426:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4136,"name":"address","nodeType":"ElementaryTypeName","src":"1426:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4139,"mutability":"mutable","name":"_1inchSpotAgg","nameLocation":"1457:13:20","nodeType":"VariableDeclaration","scope":4150,"src":"1449:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4138,"name":"address","nodeType":"ElementaryTypeName","src":"1449:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4141,"mutability":"mutable","name":"_uniRouter","nameLocation":"1485:10:20","nodeType":"VariableDeclaration","scope":4150,"src":"1477:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4140,"name":"address","nodeType":"ElementaryTypeName","src":"1477:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4143,"mutability":"mutable","name":"_uniFactory","nameLocation":"1510:11:20","nodeType":"VariableDeclaration","scope":4150,"src":"1502:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4142,"name":"address","nodeType":"ElementaryTypeName","src":"1502:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4145,"mutability":"mutable","name":"_rebalancer","nameLocation":"1536:11:20","nodeType":"VariableDeclaration","scope":4150,"src":"1528:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4144,"name":"address","nodeType":"ElementaryTypeName","src":"1528:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4147,"mutability":"mutable","name":"version","nameLocation":"1561:7:20","nodeType":"VariableDeclaration","scope":4150,"src":"1554:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4146,"name":"uint64","nodeType":"ElementaryTypeName","src":"1554:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1399:174:20"},"returnParameters":{"id":4149,"nodeType":"ParameterList","parameters":[],"src":"1582:0:20"},"scope":4296,"src":"1378:205:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"980d24f9","id":4155,"implemented":false,"kind":"function","modifiers":[],"name":"initializeMarketOracle","nameLocation":"1598:22:20","nodeType":"FunctionDefinition","parameters":{"id":4153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4152,"mutability":"mutable","name":"_marketOracle","nameLocation":"1629:13:20","nodeType":"VariableDeclaration","scope":4155,"src":"1621:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4151,"name":"address","nodeType":"ElementaryTypeName","src":"1621:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1620:23:20"},"returnParameters":{"id":4154,"nodeType":"ParameterList","parameters":[],"src":"1652:0:20"},"scope":4296,"src":"1589:64:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"35aa0efa","id":4160,"implemented":false,"kind":"function","modifiers":[],"name":"changeMarketOracle","nameLocation":"1668:18:20","nodeType":"FunctionDefinition","parameters":{"id":4158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4157,"mutability":"mutable","name":"_marketOracle","nameLocation":"1695:13:20","nodeType":"VariableDeclaration","scope":4160,"src":"1687:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4156,"name":"address","nodeType":"ElementaryTypeName","src":"1687:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1686:23:20"},"returnParameters":{"id":4159,"nodeType":"ParameterList","parameters":[],"src":"1718:0:20"},"scope":4296,"src":"1659:60:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"06497cb9","id":4165,"implemented":false,"kind":"function","modifiers":[],"name":"changeBpsFee","nameLocation":"1734:12:20","nodeType":"FunctionDefinition","parameters":{"id":4163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4162,"mutability":"mutable","name":"_newFee","nameLocation":"1755:7:20","nodeType":"VariableDeclaration","scope":4165,"src":"1747:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4161,"name":"uint256","nodeType":"ElementaryTypeName","src":"1747:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1746:17:20"},"returnParameters":{"id":4164,"nodeType":"ParameterList","parameters":[],"src":"1772:0:20"},"scope":4296,"src":"1725:48:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b14f2a39","id":4170,"implemented":false,"kind":"function","modifiers":[],"name":"changeTreasury","nameLocation":"1788:14:20","nodeType":"FunctionDefinition","parameters":{"id":4168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4167,"mutability":"mutable","name":"_newTreasury","nameLocation":"1811:12:20","nodeType":"VariableDeclaration","scope":4170,"src":"1803:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4166,"name":"address","nodeType":"ElementaryTypeName","src":"1803:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1802:22:20"},"returnParameters":{"id":4169,"nodeType":"ParameterList","parameters":[],"src":"1833:0:20"},"scope":4296,"src":"1779:55:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0918281b","id":4175,"implemented":false,"kind":"function","modifiers":[],"name":"changeRebalancer","nameLocation":"1849:16:20","nodeType":"FunctionDefinition","parameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4172,"mutability":"mutable","name":"_newRebalancer","nameLocation":"1874:14:20","nodeType":"VariableDeclaration","scope":4175,"src":"1866:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4171,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1865:24:20"},"returnParameters":{"id":4174,"nodeType":"ParameterList","parameters":[],"src":"1898:0:20"},"scope":4296,"src":"1840:59:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0a38abab","id":4180,"implemented":false,"kind":"function","modifiers":[],"name":"changeAgentFactory","nameLocation":"1914:18:20","nodeType":"FunctionDefinition","parameters":{"id":4178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4177,"mutability":"mutable","name":"_agentFactory","nameLocation":"1941:13:20","nodeType":"VariableDeclaration","scope":4180,"src":"1933:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4176,"name":"address","nodeType":"ElementaryTypeName","src":"1933:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1932:23:20"},"returnParameters":{"id":4179,"nodeType":"ParameterList","parameters":[],"src":"1964:0:20"},"scope":4296,"src":"1905:60:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"eedc3c50","id":4190,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"1980:7:20","nodeType":"FunctionDefinition","parameters":{"id":4188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4184,"mutability":"mutable","name":"calls","nameLocation":"2017:5:20","nodeType":"VariableDeclaration","scope":4190,"src":"1988:34:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$3643_memory_ptr_$dyn_memory_ptr","typeString":"struct IBaluniV1Agent.Call[]"},"typeName":{"baseType":{"id":4182,"nodeType":"UserDefinedTypeName","pathNode":{"id":4181,"name":"IBaluniV1Agent.Call","nameLocations":["1988:14:20","2003:4:20"],"nodeType":"IdentifierPath","referencedDeclaration":3643,"src":"1988:19:20"},"referencedDeclaration":3643,"src":"1988:19:20","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$3643_storage_ptr","typeString":"struct IBaluniV1Agent.Call"}},"id":4183,"nodeType":"ArrayTypeName","src":"1988:21:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$3643_storage_$dyn_storage_ptr","typeString":"struct IBaluniV1Agent.Call[]"}},"visibility":"internal"},{"constant":false,"id":4187,"mutability":"mutable","name":"tokensReturn","nameLocation":"2041:12:20","nodeType":"VariableDeclaration","scope":4190,"src":"2024:29:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4185,"name":"address","nodeType":"ElementaryTypeName","src":"2024:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4186,"nodeType":"ArrayTypeName","src":"2024:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1987:67:20"},"returnParameters":{"id":4189,"nodeType":"ParameterList","parameters":[],"src":"2063:0:20"},"scope":4296,"src":"1971:93:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2f865568","id":4195,"implemented":false,"kind":"function","modifiers":[],"name":"liquidate","nameLocation":"2079:9:20","nodeType":"FunctionDefinition","parameters":{"id":4193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4192,"mutability":"mutable","name":"token","nameLocation":"2097:5:20","nodeType":"VariableDeclaration","scope":4195,"src":"2089:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4191,"name":"address","nodeType":"ElementaryTypeName","src":"2089:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2088:15:20"},"returnParameters":{"id":4194,"nodeType":"ParameterList","parameters":[],"src":"2112:0:20"},"scope":4296,"src":"2070:43:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3c2066a9","id":4198,"implemented":false,"kind":"function","modifiers":[],"name":"liquidateAll","nameLocation":"2128:12:20","nodeType":"FunctionDefinition","parameters":{"id":4196,"nodeType":"ParameterList","parameters":[],"src":"2140:2:20"},"returnParameters":{"id":4197,"nodeType":"ParameterList","parameters":[],"src":"2151:0:20"},"scope":4296,"src":"2119:33:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1a168da2","id":4203,"implemented":false,"kind":"function","modifiers":[],"name":"burnERC20","nameLocation":"2167:9:20","nodeType":"FunctionDefinition","parameters":{"id":4201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4200,"mutability":"mutable","name":"burnAmount","nameLocation":"2185:10:20","nodeType":"VariableDeclaration","scope":4203,"src":"2177:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4199,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2176:20:20"},"returnParameters":{"id":4202,"nodeType":"ParameterList","parameters":[],"src":"2205:0:20"},"scope":4296,"src":"2158:48:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fe0a4dd1","id":4208,"implemented":false,"kind":"function","modifiers":[],"name":"burnUSDC","nameLocation":"2221:8:20","nodeType":"FunctionDefinition","parameters":{"id":4206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4205,"mutability":"mutable","name":"burnAmount","nameLocation":"2238:10:20","nodeType":"VariableDeclaration","scope":4208,"src":"2230:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4204,"name":"uint256","nodeType":"ElementaryTypeName","src":"2230:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2229:20:20"},"returnParameters":{"id":4207,"nodeType":"ParameterList","parameters":[],"src":"2258:0:20"},"scope":4296,"src":"2212:47:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"27d54a92","id":4215,"implemented":false,"kind":"function","modifiers":[],"name":"getAgentAddress","nameLocation":"2274:15:20","nodeType":"FunctionDefinition","parameters":{"id":4211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4210,"mutability":"mutable","name":"_user","nameLocation":"2298:5:20","nodeType":"VariableDeclaration","scope":4215,"src":"2290:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4209,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2289:15:20"},"returnParameters":{"id":4214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4215,"src":"2328:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4212,"name":"address","nodeType":"ElementaryTypeName","src":"2328:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2327:9:20"},"scope":4296,"src":"2265:72:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0cfc7386","id":4220,"implemented":false,"kind":"function","modifiers":[],"name":"mintWithUSDC","nameLocation":"2352:12:20","nodeType":"FunctionDefinition","parameters":{"id":4218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4217,"mutability":"mutable","name":"balAmountToMint","nameLocation":"2373:15:20","nodeType":"VariableDeclaration","scope":4220,"src":"2365:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4216,"name":"uint256","nodeType":"ElementaryTypeName","src":"2365:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2364:25:20"},"returnParameters":{"id":4219,"nodeType":"ParameterList","parameters":[],"src":"2398:0:20"},"scope":4296,"src":"2343:56:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"599f69f7","id":4237,"implemented":false,"kind":"function","modifiers":[],"name":"callRebalance","nameLocation":"2414:13:20","nodeType":"FunctionDefinition","parameters":{"id":4235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4223,"mutability":"mutable","name":"assets","nameLocation":"2453:6:20","nodeType":"VariableDeclaration","scope":4237,"src":"2434:25:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4221,"name":"address","nodeType":"ElementaryTypeName","src":"2434:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4222,"nodeType":"ArrayTypeName","src":"2434:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4226,"mutability":"mutable","name":"weights","nameLocation":"2485:7:20","nodeType":"VariableDeclaration","scope":4237,"src":"2466:26:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4224,"name":"uint256","nodeType":"ElementaryTypeName","src":"2466:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4225,"nodeType":"ArrayTypeName","src":"2466:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4228,"mutability":"mutable","name":"sender","nameLocation":"2507:6:20","nodeType":"VariableDeclaration","scope":4237,"src":"2499:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4227,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4230,"mutability":"mutable","name":"receiver","nameLocation":"2528:8:20","nodeType":"VariableDeclaration","scope":4237,"src":"2520:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4229,"name":"address","nodeType":"ElementaryTypeName","src":"2520:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4232,"mutability":"mutable","name":"limit","nameLocation":"2551:5:20","nodeType":"VariableDeclaration","scope":4237,"src":"2543:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4231,"name":"uint256","nodeType":"ElementaryTypeName","src":"2543:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4234,"mutability":"mutable","name":"baseAsset","nameLocation":"2571:9:20","nodeType":"VariableDeclaration","scope":4237,"src":"2563:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4233,"name":"address","nodeType":"ElementaryTypeName","src":"2563:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:158:20"},"returnParameters":{"id":4236,"nodeType":"ParameterList","parameters":[],"src":"2594:0:20"},"scope":4296,"src":"2405:190:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"aa95d893","id":4244,"implemented":false,"kind":"function","modifiers":[],"name":"requiredUSDCtoMint","nameLocation":"2610:18:20","nodeType":"FunctionDefinition","parameters":{"id":4240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4239,"mutability":"mutable","name":"balAmountToMint","nameLocation":"2637:15:20","nodeType":"VariableDeclaration","scope":4244,"src":"2629:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4238,"name":"uint256","nodeType":"ElementaryTypeName","src":"2629:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2628:25:20"},"returnParameters":{"id":4243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4244,"src":"2677:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4241,"name":"uint256","nodeType":"ElementaryTypeName","src":"2677:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:9:20"},"scope":4296,"src":"2601:85:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fe330a51","id":4257,"implemented":false,"kind":"function","modifiers":[],"name":"calculateTokenShare","nameLocation":"2701:19:20","nodeType":"FunctionDefinition","parameters":{"id":4253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4246,"mutability":"mutable","name":"totalBaluni","nameLocation":"2735:11:20","nodeType":"VariableDeclaration","scope":4257,"src":"2727:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4245,"name":"uint256","nodeType":"ElementaryTypeName","src":"2727:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4248,"mutability":"mutable","name":"totalERC20Balance","nameLocation":"2761:17:20","nodeType":"VariableDeclaration","scope":4257,"src":"2753:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4247,"name":"uint256","nodeType":"ElementaryTypeName","src":"2753:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4250,"mutability":"mutable","name":"baluniAmount","nameLocation":"2793:12:20","nodeType":"VariableDeclaration","scope":4257,"src":"2785:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4249,"name":"uint256","nodeType":"ElementaryTypeName","src":"2785:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4252,"mutability":"mutable","name":"tokenDecimals","nameLocation":"2820:13:20","nodeType":"VariableDeclaration","scope":4257,"src":"2812:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4251,"name":"uint256","nodeType":"ElementaryTypeName","src":"2812:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2720:118:20"},"returnParameters":{"id":4256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4257,"src":"2862:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4254,"name":"uint256","nodeType":"ElementaryTypeName","src":"2862:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2861:9:20"},"scope":4296,"src":"2692:179:20","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"2bdd955a","id":4266,"implemented":false,"kind":"function","modifiers":[],"name":"tokenValuation","nameLocation":"2886:14:20","nodeType":"FunctionDefinition","parameters":{"id":4262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4259,"mutability":"mutable","name":"amount","nameLocation":"2909:6:20","nodeType":"VariableDeclaration","scope":4266,"src":"2901:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4258,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4261,"mutability":"mutable","name":"token","nameLocation":"2925:5:20","nodeType":"VariableDeclaration","scope":4266,"src":"2917:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4260,"name":"address","nodeType":"ElementaryTypeName","src":"2917:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2900:31:20"},"returnParameters":{"id":4265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4266,"src":"2955:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4263,"name":"uint256","nodeType":"ElementaryTypeName","src":"2955:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2954:9:20"},"scope":4296,"src":"2877:87:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"295b9300","id":4271,"implemented":false,"kind":"function","modifiers":[],"name":"totalValuation","nameLocation":"2979:14:20","nodeType":"FunctionDefinition","parameters":{"id":4267,"nodeType":"ParameterList","parameters":[],"src":"2993:2:20"},"returnParameters":{"id":4270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4271,"src":"3019:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3019:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3018:9:20"},"scope":4296,"src":"2970:58:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"71ddcfb8","id":4278,"implemented":false,"kind":"function","modifiers":[],"name":"getUSDCShareValue","nameLocation":"3043:17:20","nodeType":"FunctionDefinition","parameters":{"id":4274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4273,"mutability":"mutable","name":"amount","nameLocation":"3069:6:20","nodeType":"VariableDeclaration","scope":4278,"src":"3061:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4272,"name":"uint256","nodeType":"ElementaryTypeName","src":"3061:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3060:16:20"},"returnParameters":{"id":4277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4278,"src":"3100:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4275,"name":"uint256","nodeType":"ElementaryTypeName","src":"3100:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3099:9:20"},"scope":4296,"src":"3034:75:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8d483df1","id":4285,"implemented":false,"kind":"function","modifiers":[],"name":"fetchMarketPrices","nameLocation":"3124:17:20","nodeType":"FunctionDefinition","parameters":{"id":4279,"nodeType":"ParameterList","parameters":[],"src":"3141:2:20"},"returnParameters":{"id":4284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4285,"src":"3167:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4280,"name":"uint256","nodeType":"ElementaryTypeName","src":"3167:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4285,"src":"3176:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4282,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3166:18:20"},"scope":4296,"src":"3115:70:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0d8e6e2c","id":4290,"implemented":false,"kind":"function","modifiers":[],"name":"getVersion","nameLocation":"3200:10:20","nodeType":"FunctionDefinition","parameters":{"id":4286,"nodeType":"ParameterList","parameters":[],"src":"3210:2:20"},"returnParameters":{"id":4289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4290,"src":"3236:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4287,"name":"uint64","nodeType":"ElementaryTypeName","src":"3236:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3235:8:20"},"scope":4296,"src":"3191:53:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e73faa2d","id":4295,"implemented":false,"kind":"function","modifiers":[],"name":"unitPrice","nameLocation":"3259:9:20","nodeType":"FunctionDefinition","parameters":{"id":4291,"nodeType":"ParameterList","parameters":[],"src":"3268:2:20"},"returnParameters":{"id":4294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4295,"src":"3294:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4292,"name":"uint256","nodeType":"ElementaryTypeName","src":"3294:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3293:9:20"},"scope":4296,"src":"3250:53:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4297,"src":"267:3043:20","usedErrors":[],"usedEvents":[]}],"src":"40:3272:20"},"id":20},"contracts/mock/MockRebalancer.sol":{"ast":{"absolutePath":"contracts/mock/MockRebalancer.sol","exportedSymbols":{"I1inchSpotAgg":[3634],"IBaluniV1Agent":[3654],"IBaluniV1Rebalancer":[4038],"IBaluniV1Router":[4296],"IERC20":[1729],"IERC20Metadata":[1755],"MockRebalancer":[4802]},"id":4803,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":4298,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:21"},{"absolutePath":"contracts/interfaces/IBaluniV1Rebalancer.sol","file":"../interfaces/IBaluniV1Rebalancer.sol","id":4299,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4803,"sourceUnit":4039,"src":"67:47:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MockRebalancer","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4802,"linearizedBaseContracts":[4802],"name":"MockRebalancer","nameLocation":"127:14:21","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"7b0cf44d","id":4305,"mutability":"mutable","name":"rates","nameLocation":"204:5:21","nodeType":"VariableDeclaration","scope":4802,"src":"149:60:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":4304,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4300,"name":"address","nodeType":"ElementaryTypeName","src":"157:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"149:47:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4303,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4301,"name":"address","nodeType":"ElementaryTypeName","src":"176:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"168:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4302,"name":"uint256","nodeType":"ElementaryTypeName","src":"187:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":true,"functionSelector":"e2338e72","id":4308,"mutability":"constant","name":"USDC_TO_WETH_RATE","nameLocation":"266:17:21","nodeType":"VariableDeclaration","scope":4802,"src":"242:71:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4306,"name":"uint256","nodeType":"ElementaryTypeName","src":"242:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323536383937313835373335383535313039343131353037313138","id":4307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"286:27:21","typeDescriptions":{"typeIdentifier":"t_rational_256897185735855109411507118_by_1","typeString":"int_const 256897185735855109411507118"},"value":"256897185735855109411507118"},"visibility":"public"},{"constant":true,"functionSelector":"b537d24b","id":4311,"mutability":"constant","name":"USDC_TO_USDT_RATE","nameLocation":"344:17:21","nodeType":"VariableDeclaration","scope":4802,"src":"320:63:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4309,"name":"uint256","nodeType":"ElementaryTypeName","src":"320:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31303030393833393839383338393235363430","id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"364:19:21","typeDescriptions":{"typeIdentifier":"t_rational_1000983989838925640_by_1","typeString":"int_const 1000983989838925640"},"value":"1000983989838925640"},"visibility":"public"},{"constant":true,"functionSelector":"02098719","id":4314,"mutability":"constant","name":"USDC_TO_WBTC_RATE","nameLocation":"414:17:21","nodeType":"VariableDeclaration","scope":4802,"src":"390:60:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4312,"name":"uint256","nodeType":"ElementaryTypeName","src":"390:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31343633363537343638393437373631","id":4313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"434:16:21","typeDescriptions":{"typeIdentifier":"t_rational_1463657468947761_by_1","typeString":"int_const 1463657468947761"},"value":"1463657468947761"},"visibility":"public"},{"constant":true,"functionSelector":"5107e94e","id":4317,"mutability":"constant","name":"USDC_TO_WMATIC_RATE","nameLocation":"481:19:21","nodeType":"VariableDeclaration","scope":4802,"src":"457:77:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4315,"name":"uint256","nodeType":"ElementaryTypeName","src":"457:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31333531313438323439303935363531333635333430393134303938363136","id":4316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"503:31:21","typeDescriptions":{"typeIdentifier":"t_rational_1351148249095651365340914098616_by_1","typeString":"int_const 1351148249095651365340914098616"},"value":"1351148249095651365340914098616"},"visibility":"public"},{"constant":true,"functionSelector":"0e091762","id":4320,"mutability":"constant","name":"WMATIC_TO_USDT_RATE","nameLocation":"567:19:21","nodeType":"VariableDeclaration","scope":4802,"src":"543:52:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4318,"name":"uint256","nodeType":"ElementaryTypeName","src":"543:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"373437373637","id":4319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:6:21","typeDescriptions":{"typeIdentifier":"t_rational_747767_by_1","typeString":"int_const 747767"},"value":"747767"},"visibility":"public"},{"constant":true,"functionSelector":"c0184983","id":4323,"mutability":"constant","name":"WMATIC_TO_USDC_RATE","nameLocation":"626:19:21","nodeType":"VariableDeclaration","scope":4802,"src":"602:52:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4321,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"373333393035","id":4322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"648:6:21","typeDescriptions":{"typeIdentifier":"t_rational_733905_by_1","typeString":"int_const 733905"},"value":"733905"},"visibility":"public"},{"constant":true,"functionSelector":"187029b8","id":4326,"mutability":"constant","name":"WMATIC_TO_WBTC_RATE","nameLocation":"685:19:21","nodeType":"VariableDeclaration","scope":4802,"src":"661:50:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4324,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31303830","id":4325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"707:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1080_by_1","typeString":"int_const 1080"},"value":"1080"},"visibility":"public"},{"constant":true,"functionSelector":"ae3bcc96","id":4329,"mutability":"constant","name":"WMATIC_TO_WETH_RATE","nameLocation":"742:19:21","nodeType":"VariableDeclaration","scope":4802,"src":"718:61:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4327,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313839363235353832363634313030","id":4328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"764:15:21","typeDescriptions":{"typeIdentifier":"t_rational_189625582664100_by_1","typeString":"int_const 189625582664100"},"value":"189625582664100"},"visibility":"public"},{"constant":true,"functionSelector":"8e5139ed","id":4332,"mutability":"constant","name":"WBTC_TO_WMATIC_RATE","nameLocation":"812:19:21","nodeType":"VariableDeclaration","scope":4802,"src":"788:79:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4330,"name":"uint256","nodeType":"ElementaryTypeName","src":"788:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"393234373738303333353338383131383436303338373632393733353739373339","id":4331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"834:33:21","typeDescriptions":{"typeIdentifier":"t_rational_924778033538811846038762973579739_by_1","typeString":"int_const 9247...(25 digits omitted)...9739"},"value":"924778033538811846038762973579739"},"visibility":"public"},{"constant":true,"functionSelector":"d135e3be","id":4335,"mutability":"constant","name":"WBTC_TO_USDT_RATE","nameLocation":"898:17:21","nodeType":"VariableDeclaration","scope":4802,"src":"874:65:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4333,"name":"uint256","nodeType":"ElementaryTypeName","src":"874:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"363831333630323333323433343834303039313338","id":4334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"918:21:21","typeDescriptions":{"typeIdentifier":"t_rational_681360233243484009138_by_1","typeString":"int_const 681360233243484009138"},"value":"681360233243484009138"},"visibility":"public"},{"constant":true,"functionSelector":"b9e93810","id":4338,"mutability":"constant","name":"WBTC_TO_WETH_RATE","nameLocation":"970:17:21","nodeType":"VariableDeclaration","scope":4802,"src":"946:74:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4336,"name":"uint256","nodeType":"ElementaryTypeName","src":"946:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313735343736343730393339343933353333353536313038353933353938","id":4337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"990:30:21","typeDescriptions":{"typeIdentifier":"t_rational_175476470939493533556108593598_by_1","typeString":"int_const 175476470939493533556108593598"},"value":"175476470939493533556108593598"},"visibility":"public"},{"constant":true,"functionSelector":"53ff493e","id":4341,"mutability":"constant","name":"WBTC_TO_USDC_RATE","nameLocation":"1051:17:21","nodeType":"VariableDeclaration","scope":4802,"src":"1027:65:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1027:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"363833303033333734353534353132303239393930","id":4340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1071:21:21","typeDescriptions":{"typeIdentifier":"t_rational_683003374554512029990_by_1","typeString":"int_const 683003374554512029990"},"value":"683003374554512029990"},"visibility":"public"},{"constant":true,"functionSelector":"97db8e02","id":4344,"mutability":"constant","name":"USDT_TO_WBTC_RATE","nameLocation":"1125:17:21","nodeType":"VariableDeclaration","scope":4802,"src":"1101:60:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4342,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31343537383434383431343532393433","id":4343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1145:16:21","typeDescriptions":{"typeIdentifier":"t_rational_1457844841452943_by_1","typeString":"int_const 1457844841452943"},"value":"1457844841452943"},"visibility":"public"},{"constant":true,"functionSelector":"a58a7f8a","id":4347,"mutability":"constant","name":"USDT_TO_USDC_RATE","nameLocation":"1192:17:21","nodeType":"VariableDeclaration","scope":4802,"src":"1168:62:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4345,"name":"uint256","nodeType":"ElementaryTypeName","src":"1168:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"393938353838363336353833373734303734","id":4346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1212:18:21","typeDescriptions":{"typeIdentifier":"t_rational_998588636583774074_by_1","typeString":"int_const 998588636583774074"},"value":"998588636583774074"},"visibility":"public"},{"constant":true,"functionSelector":"443dc789","id":4350,"mutability":"constant","name":"USDT_TO_WETH_RATE","nameLocation":"1261:17:21","nodeType":"VariableDeclaration","scope":4802,"src":"1237:71:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4348,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323536383834343834333438363730313932393733313132313335","id":4349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1281:27:21","typeDescriptions":{"typeIdentifier":"t_rational_256884484348670192973112135_by_1","typeString":"int_const 256884484348670192973112135"},"value":"256884484348670192973112135"},"visibility":"public"},{"constant":true,"functionSelector":"1a1e4a1f","id":4353,"mutability":"constant","name":"USDT_TO_WMATIC_RATE","nameLocation":"1339:19:21","nodeType":"VariableDeclaration","scope":4802,"src":"1315:77:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4351,"name":"uint256","nodeType":"ElementaryTypeName","src":"1315:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31333531353432343738373338343832373835353233383836363538303833","id":4352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1361:31:21","typeDescriptions":{"typeIdentifier":"t_rational_1351542478738482785523886658083_by_1","typeString":"int_const 1351542478738482785523886658083"},"value":"1351542478738482785523886658083"},"visibility":"public"},{"constant":true,"functionSelector":"e30f6892","id":4356,"mutability":"constant","name":"WETH_TO_WMATIC_RATE","nameLocation":"1425:19:21","nodeType":"VariableDeclaration","scope":4802,"src":"1401:68:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4354,"name":"uint256","nodeType":"ElementaryTypeName","src":"1401:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35323733353736343130363835303732373832373533","id":4355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1447:22:21","typeDescriptions":{"typeIdentifier":"t_rational_5273576410685072782753_by_1","typeString":"int_const 5273576410685072782753"},"value":"5273576410685072782753"},"visibility":"public"},{"constant":true,"functionSelector":"4039e687","id":4359,"mutability":"constant","name":"WETH_TO_USDC_RATE","nameLocation":"1500:17:21","nodeType":"VariableDeclaration","scope":4802,"src":"1476:54:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4357,"name":"uint256","nodeType":"ElementaryTypeName","src":"1476:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33383336343738373432","id":4358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:10:21","typeDescriptions":{"typeIdentifier":"t_rational_3836478742_by_1","typeString":"int_const 3836478742"},"value":"3836478742"},"visibility":"public"},{"constant":true,"functionSelector":"5fc8cd69","id":4362,"mutability":"constant","name":"WETH_TO_USDT_RATE","nameLocation":"1561:17:21","nodeType":"VariableDeclaration","scope":4802,"src":"1537:54:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4360,"name":"uint256","nodeType":"ElementaryTypeName","src":"1537:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33373439313633383837","id":4361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1581:10:21","typeDescriptions":{"typeIdentifier":"t_rational_3749163887_by_1","typeString":"int_const 3749163887"},"value":"3749163887"},"visibility":"public"},{"constant":true,"functionSelector":"43146399","id":4365,"mutability":"constant","name":"WETH_TO_WBTC_RATE","nameLocation":"1622:17:21","nodeType":"VariableDeclaration","scope":4802,"src":"1598:51:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4363,"name":"uint256","nodeType":"ElementaryTypeName","src":"1598:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35353631383231","id":4364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1642:7:21","typeDescriptions":{"typeIdentifier":"t_rational_5561821_by_1","typeString":"int_const 5561821"},"value":"5561821"},"visibility":"public"},{"constant":false,"functionSelector":"89a30271","id":4367,"mutability":"mutable","name":"USDC","nameLocation":"1673:4:21","nodeType":"VariableDeclaration","scope":4802,"src":"1658:19:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4366,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"b381cf40","id":4369,"mutability":"mutable","name":"WNATIVE","nameLocation":"1699:7:21","nodeType":"VariableDeclaration","scope":4802,"src":"1684:22:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4368,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"61d027b3","id":4371,"mutability":"mutable","name":"treasury","nameLocation":"1730:8:21","nodeType":"VariableDeclaration","scope":4802,"src":"1715:23:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4370,"name":"address","nodeType":"ElementaryTypeName","src":"1715:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":4557,"nodeType":"Block","src":"1833:1101:21","statements":[{"expression":{"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4384,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"1844:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4385,"name":"_wmatic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"1854:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1844:17:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4387,"nodeType":"ExpressionStatement","src":"1844:17:21"},{"expression":{"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4388,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"1872:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4389,"name":"_usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"1879:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1872:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4391,"nodeType":"ExpressionStatement","src":"1872:12:21"},{"expression":{"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4392,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"1895:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4393,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1906:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1910:6:21","memberName":"sender","nodeType":"MemberAccess","src":"1906:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1895:21:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4396,"nodeType":"ExpressionStatement","src":"1895:21:21"},{"expression":{"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4397,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"1929:5:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4400,"indexExpression":{"id":4398,"name":"usdt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"1935:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1929:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4401,"indexExpression":{"id":4399,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"1941:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1929:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4402,"name":"USDT_TO_USDC_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"1949:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1929:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4404,"nodeType":"ExpressionStatement","src":"1929:37:21"},{"expression":{"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4405,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"1977:5:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4408,"indexExpression":{"id":4406,"name":"usdt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"1983:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1977:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4409,"indexExpression":{"id":4407,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"1989:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1977:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4410,"name":"USDT_TO_WMATIC_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"2000:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1977:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4412,"nodeType":"ExpressionStatement","src":"1977:42:21"},{"expression":{"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4413,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"2030:5:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4416,"indexExpression":{"id":4414,"name":"usdt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"2036:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2030:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4417,"indexExpression":{"id":4415,"name":"wbtc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"2042:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2030:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4418,"name":"USDT_TO_WBTC_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"2050:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2030:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4420,"nodeType":"ExpressionStatement","src":"2030:37:21"},{"expression":{"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4421,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"2078:5:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4424,"indexExpression":{"id":4422,"name":"usdt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"2084:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2078:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4425,"indexExpression":{"id":4423,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"2090:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2078:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4426,"name":"USDT_TO_WETH_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4350,"src":"2098:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4428,"nodeType":"ExpressionStatement","src":"2078:37:21"},{"expression":{"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4429,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"2128:5:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4432,"indexExpression":{"id":4430,"name":"wbtc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"2134:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2128:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4433,"indexExpression":{"id":4431,"name":"usdt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"2140:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2128:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4434,"name":"WBTC_TO_USDT_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"2148:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2128:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4436,"nodeType":"ExpressionStatement","src":"2128:37:21"},{"expression":{"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4437,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"2176:5:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4440,"indexExpression":{"id":4438,"name":"wbtc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"2182:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2176:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4441,"indexExpression":{"id":4439,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"2188:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2176:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4442,"name":"WBTC_TO_WMATIC_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"2199:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2176:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4444,"nodeType":"ExpressionStatement","src":"2176:42:21"},{"expression":{"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4445,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"2229:5:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4448,"indexExpression":{"id":4446,"name":"wbtc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"2235:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2229:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4449,"indexExpression":{"id":4447,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"2241:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2229:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4450,"name":"WBTC_TO_USDC_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"2249:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2229:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4452,"nodeType":"ExpressionStatement","src":"2229:37:21"},{"expression":{"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4453,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"2277:5:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4456,"indexExpression":{"id":4454,"name":"wbtc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"2283:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2277:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4457,"indexExpression":{"id":4455,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"2289:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2277:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4458,"name":"WBTC_TO_WETH_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"2297:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2277:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4460,"nodeType":"ExpressionStatement","src":"2277:37:21"},{"expression":{"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4461,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"2327:5:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4464,"indexExpression":{"id":4462,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"2333:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2327:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4465,"indexExpression":{"id":4463,"name":"usdt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"2339:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2327:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4466,"name":"USDC_TO_USDT_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"2347:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2327:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4468,"nodeType":"ExpressionStatement","src":"2327:37:21"},{"expression":{"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4469,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"2375:5:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4472,"indexExpression":{"id":4470,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"2381:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2375:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4473,"indexExpression":{"id":4471,"name":"wbtc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"2387:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2375:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4474,"name":"USDC_TO_WBTC_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"2395:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2375:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4476,"nodeType":"ExpressionStatement","src":"2375:37:21"},{"expression":{"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4477,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"2423:5:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4480,"indexExpression":{"id":4478,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"2429:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2423:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4481,"indexExpression":{"id":4479,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"2435:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2423:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4482,"name":"USDC_TO_WMATIC_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"2446:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2423:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4484,"nodeType":"ExpressionStatement","src":"2423:42:21"},{"expression":{"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4485,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"2476:5:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4488,"indexExpression":{"id":4486,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"2482:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2476:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4489,"indexExpression":{"id":4487,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"2488:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2476:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4490,"name":"USDC_TO_WETH_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"2496:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2476:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4492,"nodeType":"ExpressionStatement","src":"2476:37:21"},{"expression":{"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4493,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"2526:5:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4496,"indexExpression":{"id":4494,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"2532:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2526:14:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4497,"indexExpression":{"id":4495,"name":"wbtc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"2541:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2526:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4498,"name":"WMATIC_TO_WBTC_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"2549:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2526:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4500,"nodeType":"ExpressionStatement","src":"2526:42:21"},{"expression":{"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4501,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"2579:5:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4504,"indexExpression":{"id":4502,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"2585:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2579:14:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4505,"indexExpression":{"id":4503,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"2594:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2579:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4506,"name":"WMATIC_TO_WETH_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"2602:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2579:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4508,"nodeType":"ExpressionStatement","src":"2579:42:21"},{"expression":{"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4509,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"2632:5:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4512,"indexExpression":{"id":4510,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"2638:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2632:14:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4513,"indexExpression":{"id":4511,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"2647:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2632:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4514,"name":"WMATIC_TO_USDC_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"2655:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2632:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4516,"nodeType":"ExpressionStatement","src":"2632:42:21"},{"expression":{"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4517,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"2685:5:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4520,"indexExpression":{"id":4518,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"2691:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2685:14:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4521,"indexExpression":{"id":4519,"name":"usdt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"2700:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2685:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4522,"name":"WMATIC_TO_USDT_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"2708:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2685:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4524,"nodeType":"ExpressionStatement","src":"2685:42:21"},{"expression":{"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4525,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"2740:5:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4528,"indexExpression":{"id":4526,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"2746:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2740:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4529,"indexExpression":{"id":4527,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"2752:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2740:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4530,"name":"WETH_TO_WMATIC_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"2763:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2740:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4532,"nodeType":"ExpressionStatement","src":"2740:42:21"},{"expression":{"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4533,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"2793:5:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4536,"indexExpression":{"id":4534,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"2799:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2793:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4537,"indexExpression":{"id":4535,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"2805:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2793:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4538,"name":"WETH_TO_USDC_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"2813:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2793:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4540,"nodeType":"ExpressionStatement","src":"2793:37:21"},{"expression":{"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4541,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"2841:5:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4544,"indexExpression":{"id":4542,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"2847:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2841:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4545,"indexExpression":{"id":4543,"name":"usdt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"2853:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2841:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4546,"name":"WETH_TO_USDC_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"2861:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2841:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4548,"nodeType":"ExpressionStatement","src":"2841:37:21"},{"expression":{"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4549,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"2889:5:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4552,"indexExpression":{"id":4550,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"2895:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2889:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4553,"indexExpression":{"id":4551,"name":"wbtc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"2901:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2889:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4554,"name":"WETH_TO_WBTC_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"2909:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2889:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4556,"nodeType":"ExpressionStatement","src":"2889:37:21"}]},"id":4558,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4373,"mutability":"mutable","name":"usdt","nameLocation":"1767:4:21","nodeType":"VariableDeclaration","scope":4558,"src":"1759:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4372,"name":"address","nodeType":"ElementaryTypeName","src":"1759:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4375,"mutability":"mutable","name":"_usdc","nameLocation":"1781:5:21","nodeType":"VariableDeclaration","scope":4558,"src":"1773:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4374,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4377,"mutability":"mutable","name":"_wmatic","nameLocation":"1796:7:21","nodeType":"VariableDeclaration","scope":4558,"src":"1788:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4376,"name":"address","nodeType":"ElementaryTypeName","src":"1788:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4379,"mutability":"mutable","name":"weth","nameLocation":"1813:4:21","nodeType":"VariableDeclaration","scope":4558,"src":"1805:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4378,"name":"address","nodeType":"ElementaryTypeName","src":"1805:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4381,"mutability":"mutable","name":"wbtc","nameLocation":"1827:4:21","nodeType":"VariableDeclaration","scope":4558,"src":"1819:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4380,"name":"address","nodeType":"ElementaryTypeName","src":"1819:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1758:74:21"},"returnParameters":{"id":4383,"nodeType":"ParameterList","parameters":[],"src":"1833:0:21"},"scope":4802,"src":"1747:1187:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4575,"nodeType":"Block","src":"3018:51:21","statements":[{"expression":{"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4567,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"3029:5:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4570,"indexExpression":{"id":4568,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"3035:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3029:16:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4571,"indexExpression":{"id":4569,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"3046:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3029:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4572,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"3057:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3029:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4574,"nodeType":"ExpressionStatement","src":"3029:32:21"}]},"functionSelector":"5911fb9a","id":4576,"implemented":true,"kind":"function","modifiers":[],"name":"setRate","nameLocation":"2951:7:21","nodeType":"FunctionDefinition","parameters":{"id":4565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4560,"mutability":"mutable","name":"fromToken","nameLocation":"2967:9:21","nodeType":"VariableDeclaration","scope":4576,"src":"2959:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4559,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4562,"mutability":"mutable","name":"toToken","nameLocation":"2986:7:21","nodeType":"VariableDeclaration","scope":4576,"src":"2978:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4561,"name":"address","nodeType":"ElementaryTypeName","src":"2978:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4564,"mutability":"mutable","name":"rate","nameLocation":"3003:4:21","nodeType":"VariableDeclaration","scope":4576,"src":"2995:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4563,"name":"uint256","nodeType":"ElementaryTypeName","src":"2995:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2958:50:21"},"returnParameters":{"id":4566,"nodeType":"ParameterList","parameters":[],"src":"3018:0:21"},"scope":4802,"src":"2942:127:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4601,"nodeType":"Block","src":"3179:69:21","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":4589,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"3197:5:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4594,"indexExpression":{"arguments":[{"id":4592,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"3211:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}],"id":4591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3203:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4590,"name":"address","nodeType":"ElementaryTypeName","src":"3203:7:21","typeDescriptions":{}}},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3203:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3197:25:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4599,"indexExpression":{"arguments":[{"id":4597,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"3231:7:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}],"id":4596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3223:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4595,"name":"address","nodeType":"ElementaryTypeName","src":"3223:7:21","typeDescriptions":{}}},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3223:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3197:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4588,"id":4600,"nodeType":"Return","src":"3190:50:21"}]},"functionSelector":"802431fb","id":4602,"implemented":true,"kind":"function","modifiers":[],"name":"getRate","nameLocation":"3086:7:21","nodeType":"FunctionDefinition","parameters":{"id":4585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4579,"mutability":"mutable","name":"fromToken","nameLocation":"3101:9:21","nodeType":"VariableDeclaration","scope":4602,"src":"3094:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":4578,"nodeType":"UserDefinedTypeName","pathNode":{"id":4577,"name":"IERC20","nameLocations":["3094:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"3094:6:21"},"referencedDeclaration":1729,"src":"3094:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4582,"mutability":"mutable","name":"toToken","nameLocation":"3119:7:21","nodeType":"VariableDeclaration","scope":4602,"src":"3112:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":4581,"nodeType":"UserDefinedTypeName","pathNode":{"id":4580,"name":"IERC20","nameLocations":["3112:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"3112:6:21"},"referencedDeclaration":1729,"src":"3112:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4602,"src":"3128:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4583,"name":"bool","nodeType":"ElementaryTypeName","src":"3128:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3093:53:21"},"returnParameters":{"id":4588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4602,"src":"3170:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4586,"name":"uint256","nodeType":"ElementaryTypeName","src":"3170:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3169:9:21"},"scope":4802,"src":"3077:171:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4621,"nodeType":"Block","src":"3347:60:21","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":4612,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"3365:5:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4617,"indexExpression":{"arguments":[{"id":4615,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"3379:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}],"id":4614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3371:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4613,"name":"address","nodeType":"ElementaryTypeName","src":"3371:7:21","typeDescriptions":{}}},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3371:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3365:25:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4619,"indexExpression":{"id":4618,"name":"WNATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"3391:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3365:34:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4611,"id":4620,"nodeType":"Return","src":"3358:41:21"}]},"functionSelector":"7de4fd10","id":4622,"implemented":true,"kind":"function","modifiers":[],"name":"getRateToEth","nameLocation":"3265:12:21","nodeType":"FunctionDefinition","parameters":{"id":4608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4605,"mutability":"mutable","name":"fromToken","nameLocation":"3285:9:21","nodeType":"VariableDeclaration","scope":4622,"src":"3278:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":4604,"nodeType":"UserDefinedTypeName","pathNode":{"id":4603,"name":"IERC20","nameLocations":["3278:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"3278:6:21"},"referencedDeclaration":1729,"src":"3278:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4622,"src":"3296:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4606,"name":"bool","nodeType":"ElementaryTypeName","src":"3296:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3277:37:21"},"returnParameters":{"id":4611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4622,"src":"3338:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4609,"name":"uint256","nodeType":"ElementaryTypeName","src":"3338:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3337:9:21"},"scope":4802,"src":"3256:151:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4637,"nodeType":"Block","src":"3631:2:21","statements":[]},"functionSelector":"84db1dfb","id":4638,"implemented":true,"kind":"function","modifiers":[],"name":"rebalance","nameLocation":"3424:9:21","nodeType":"FunctionDefinition","parameters":{"id":4635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4638,"src":"3444:18:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4623,"name":"address","nodeType":"ElementaryTypeName","src":"3444:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4624,"nodeType":"ArrayTypeName","src":"3444:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4638,"src":"3486:18:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4626,"name":"uint256","nodeType":"ElementaryTypeName","src":"3486:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4627,"nodeType":"ArrayTypeName","src":"3486:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4638,"src":"3529:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4629,"name":"address","nodeType":"ElementaryTypeName","src":"3529:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4638,"src":"3560:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4631,"name":"address","nodeType":"ElementaryTypeName","src":"3560:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4638,"src":"3593:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4633,"name":"uint256","nodeType":"ElementaryTypeName","src":"3593:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3433:188:21"},"returnParameters":{"id":4636,"nodeType":"ParameterList","parameters":[],"src":"3631:0:21"},"scope":4802,"src":"3415:218:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4654,"nodeType":"Block","src":"3829:30:21","statements":[{"expression":{"hexValue":"74727565","id":4652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3847:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4651,"id":4653,"nodeType":"Return","src":"3840:11:21"}]},"functionSelector":"18cdc49a","id":4655,"implemented":true,"kind":"function","modifiers":[],"name":"checkRebalance","nameLocation":"3650:14:21","nodeType":"FunctionDefinition","parameters":{"id":4648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4655,"src":"3675:18:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4639,"name":"address","nodeType":"ElementaryTypeName","src":"3675:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4640,"nodeType":"ArrayTypeName","src":"3675:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4655,"src":"3717:18:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4642,"name":"uint256","nodeType":"ElementaryTypeName","src":"3717:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4643,"nodeType":"ArrayTypeName","src":"3717:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4655,"src":"3760:18:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4645,"name":"uint256","nodeType":"ElementaryTypeName","src":"3760:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4646,"nodeType":"ArrayTypeName","src":"3760:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3664:135:21"},"returnParameters":{"id":4651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4655,"src":"3823:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4649,"name":"bool","nodeType":"ElementaryTypeName","src":"3823:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3822:6:21"},"scope":4802,"src":"3641:218:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4665,"nodeType":"Block","src":"3926:36:21","statements":[{"expression":{"arguments":[{"hexValue":"30","id":4662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3952:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3944:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4660,"name":"address","nodeType":"ElementaryTypeName","src":"3944:7:21","typeDescriptions":{}}},"id":4663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3944:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4659,"id":4664,"nodeType":"Return","src":"3937:17:21"}]},"functionSelector":"04cc7325","id":4666,"implemented":true,"kind":"function","modifiers":[],"name":"getBaluniRouter","nameLocation":"3876:15:21","nodeType":"FunctionDefinition","parameters":{"id":4656,"nodeType":"ParameterList","parameters":[],"src":"3891:2:21"},"returnParameters":{"id":4659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4666,"src":"3917:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4657,"name":"address","nodeType":"ElementaryTypeName","src":"3917:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3916:9:21"},"scope":4802,"src":"3867:95:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4673,"nodeType":"Block","src":"4025:34:21","statements":[{"expression":{"id":4671,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"4043:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4670,"id":4672,"nodeType":"Return","src":"4036:15:21"}]},"functionSelector":"3b19e84a","id":4674,"implemented":true,"kind":"function","modifiers":[],"name":"getTreasury","nameLocation":"3979:11:21","nodeType":"FunctionDefinition","parameters":{"id":4667,"nodeType":"ParameterList","parameters":[],"src":"3990:2:21"},"returnParameters":{"id":4670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4674,"src":"4016:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4668,"name":"address","nodeType":"ElementaryTypeName","src":"4016:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4015:9:21"},"scope":4802,"src":"3970:89:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4683,"nodeType":"Block","src":"4116:39:21","statements":[{"expression":{"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4679,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"4127:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4680,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"4138:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4127:20:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4682,"nodeType":"ExpressionStatement","src":"4127:20:21"}]},"functionSelector":"f0f44260","id":4684,"implemented":true,"kind":"function","modifiers":[],"name":"setTreasury","nameLocation":"4076:11:21","nodeType":"FunctionDefinition","parameters":{"id":4677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4676,"mutability":"mutable","name":"_treasury","nameLocation":"4096:9:21","nodeType":"VariableDeclaration","scope":4684,"src":"4088:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4675,"name":"address","nodeType":"ElementaryTypeName","src":"4088:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4087:19:21"},"returnParameters":{"id":4678,"nodeType":"ParameterList","parameters":[],"src":"4116:0:21"},"scope":4802,"src":"4067:88:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4800,"nodeType":"Block","src":"4264:811:21","statements":[{"assignments":[4696],"declarations":[{"constant":false,"id":4696,"mutability":"mutable","name":"rate","nameLocation":"4283:4:21","nodeType":"VariableDeclaration","scope":4800,"src":"4275:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4695,"name":"uint256","nodeType":"ElementaryTypeName","src":"4275:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4697,"nodeType":"VariableDeclarationStatement","src":"4275:12:21"},{"assignments":[4699],"declarations":[{"constant":false,"id":4699,"mutability":"mutable","name":"fromDecimal","nameLocation":"4306:11:21","nodeType":"VariableDeclaration","scope":4800,"src":"4300:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4698,"name":"uint8","nodeType":"ElementaryTypeName","src":"4300:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4705,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4701,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4686,"src":"4335:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4700,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"4320:14:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1755_$","typeString":"type(contract IERC20Metadata)"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1755","typeString":"contract IERC20Metadata"}},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4346:8:21","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1754,"src":"4320:34:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4300:56:21"},{"assignments":[4707],"declarations":[{"constant":false,"id":4707,"mutability":"mutable","name":"toDecimal","nameLocation":"4373:9:21","nodeType":"VariableDeclaration","scope":4800,"src":"4367:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4706,"name":"uint8","nodeType":"ElementaryTypeName","src":"4367:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4713,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4709,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"4400:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4708,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"4385:14:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1755_$","typeString":"type(contract IERC20Metadata)"}},"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4385:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1755","typeString":"contract IERC20Metadata"}},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4409:8:21","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1754,"src":"4385:32:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4385:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4367:52:21"},{"assignments":[4715],"declarations":[{"constant":false,"id":4715,"mutability":"mutable","name":"numerator","nameLocation":"4440:9:21","nodeType":"VariableDeclaration","scope":4800,"src":"4432:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4714,"name":"uint256","nodeType":"ElementaryTypeName","src":"4432:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4719,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4717,"name":"fromDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"4458:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4452:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4432:37:21"},{"assignments":[4721],"declarations":[{"constant":false,"id":4721,"mutability":"mutable","name":"denominator","nameLocation":"4488:11:21","nodeType":"VariableDeclaration","scope":4800,"src":"4480:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4720,"name":"uint256","nodeType":"ElementaryTypeName","src":"4480:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4725,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4502:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4723,"name":"toDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"4508:9:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4502:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4480:37:21"},{"expression":{"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4726,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"4530:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":4727,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"4537:5:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4732,"indexExpression":{"arguments":[{"id":4730,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4686,"src":"4551:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4543:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4728,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:21","typeDescriptions":{}}},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4543:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4537:25:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4737,"indexExpression":{"arguments":[{"id":4735,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"4571:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4733,"name":"address","nodeType":"ElementaryTypeName","src":"4563:7:21","typeDescriptions":{}}},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4537:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4530:50:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4739,"nodeType":"ExpressionStatement","src":"4530:50:21"},{"expression":{"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4740,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"4591:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4741,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"4599:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4742,"name":"numerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"4606:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4599:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4744,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4598:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4745,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"4619:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4598:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4591:39:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4748,"nodeType":"ExpressionStatement","src":"4591:39:21"},{"assignments":[4750],"declarations":[{"constant":false,"id":4750,"mutability":"mutable","name":"tokenAmount","nameLocation":"4651:11:21","nodeType":"VariableDeclaration","scope":4800,"src":"4643:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4749,"name":"uint256","nodeType":"ElementaryTypeName","src":"4643:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4760,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4751,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"4667:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4752,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"4676:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4667:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4754,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4666:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4684:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":4756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4690:2:21","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"4684:8:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"4666:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4759,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4665:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4643:50:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4761,"name":"fromDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"4710:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4762,"name":"toDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"4725:9:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4710:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4767,"nodeType":"IfStatement","src":"4706:75:21","trueBody":{"id":4766,"nodeType":"Block","src":"4736:45:21","statements":[{"expression":{"id":4764,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"4758:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4694,"id":4765,"nodeType":"Return","src":"4751:18:21"}]}},{"assignments":[4769],"declarations":[{"constant":false,"id":4769,"mutability":"mutable","name":"factor","nameLocation":"4801:6:21","nodeType":"VariableDeclaration","scope":4800,"src":"4793:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4768,"name":"uint256","nodeType":"ElementaryTypeName","src":"4793:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4783,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4810:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4771,"name":"fromDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"4817:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4772,"name":"toDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"4831:9:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4817:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4777,"name":"toDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"4869:9:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4778,"name":"fromDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"4881:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4869:23:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4817:75:21","trueExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4774,"name":"fromDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"4843:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4775,"name":"toDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"4857:9:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4843:23:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4781,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4816:77:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4810:83:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4793:100:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4784,"name":"fromDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"4910:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4785,"name":"toDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"4924:9:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4910:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4796,"nodeType":"Block","src":"4989:48:21","statements":[{"expression":{"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4792,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"5004:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"id":4793,"name":"factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"5019:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5004:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4795,"nodeType":"ExpressionStatement","src":"5004:21:21"}]},"id":4797,"nodeType":"IfStatement","src":"4906:131:21","trueBody":{"id":4791,"nodeType":"Block","src":"4935:48:21","statements":[{"expression":{"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4787,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"4950:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"id":4788,"name":"factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"4965:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4950:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4790,"nodeType":"ExpressionStatement","src":"4950:21:21"}]}},{"expression":{"id":4798,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"5056:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4694,"id":4799,"nodeType":"Return","src":"5049:18:21"}]},"functionSelector":"248391ff","id":4801,"implemented":true,"kind":"function","modifiers":[],"name":"convert","nameLocation":"4172:7:21","nodeType":"FunctionDefinition","parameters":{"id":4691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4686,"mutability":"mutable","name":"fromToken","nameLocation":"4188:9:21","nodeType":"VariableDeclaration","scope":4801,"src":"4180:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4685,"name":"address","nodeType":"ElementaryTypeName","src":"4180:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4688,"mutability":"mutable","name":"toToken","nameLocation":"4207:7:21","nodeType":"VariableDeclaration","scope":4801,"src":"4199:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4687,"name":"address","nodeType":"ElementaryTypeName","src":"4199:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4690,"mutability":"mutable","name":"amount","nameLocation":"4224:6:21","nodeType":"VariableDeclaration","scope":4801,"src":"4216:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4689,"name":"uint256","nodeType":"ElementaryTypeName","src":"4216:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4179:52:21"},"returnParameters":{"id":4694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4801,"src":"4255:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4692,"name":"uint256","nodeType":"ElementaryTypeName","src":"4255:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4254:9:21"},"scope":4802,"src":"4163:912:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4803,"src":"118:4960:21","usedErrors":[],"usedEvents":[]}],"src":"40:5040:21"},"id":21}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"stateVariables":{"UPGRADE_INTERFACE_VERSION":{"details":"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."},"__self":{"custom:oz-upgrades-unsafe-allow":"state-variable-immutable"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.","errors":{"ERC1967InvalidAdmin(address)":[{"details":"The `admin` of the proxy is invalid."}],"ERC1967InvalidBeacon(address)":[{"details":"The `beacon` of the proxy is invalid."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}]},"events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"stateVariables":{"ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212207005de0af9bdcd07bc27af235059474504c969d7d1eb45de76c62af2a7a1badc64736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x5DE0AF9BDCD07BC27AF235059474504C9 PUSH10 0xD7D1EB45DE76C62AF2A7 LOG1 0xBA 0xDC PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"449:6273:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea26469706673582212207005de0af9bdcd07bc27af235059474504c969d7d1eb45de76c62af2a7a1badc64736f6c63430008190033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x5DE0AF9BDCD07BC27AF235059474504C9 PUSH10 0xD7D1EB45DE76C62AF2A7 LOG1 0xBA 0xDC PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"449:6273:6:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11400","executionCost":"infinite","totalCost":"infinite"},"internal":{"_checkNonPayable()":"infinite","_setAdmin(address)":"infinite","_setBeacon(address)":"infinite","_setImplementation(address)":"infinite","changeAdmin(address)":"infinite","getAdmin()":"infinite","getBeacon()":"infinite","getImplementation()":"infinite","upgradeBeaconToAndCall(address,bytes memory)":"infinite","upgradeToAndCall(address,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1159,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1165,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1167,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1169,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1171,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"AddressInsufficientBalance(address)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220ae52ad6c51835f362cf568d02ce7cb25ef5a09315361fe4f2673055c4da8e2e964736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE MSTORE 0xAD PUSH13 0x51835F362CF568D02CE7CB25EF GAS MULMOD BALANCE MSTORE8 PUSH2 0xFE4F 0x26 PUSH20 0x55C4DA8E2E964736F6C63430008190033000000 ","sourceMap":"195:6066:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220ae52ad6c51835f362cf568d02ce7cb25ef5a09315361fe4f2673055c4da8e2e964736f6c63430008190033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE MSTORE 0xAD PUSH13 0x51835F362CF568D02CE7CB25EF GAS MULMOD BALANCE MSTORE8 PUSH2 0xFE4F 0x26 PUSH20 0x55C4DA8E2E964736F6C63430008190033000000 ","sourceMap":"195:6066:11:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11400","executionCost":"infinite","totalCost":"infinite"},"internal":{"_revert(bytes memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212205eb4622ceec81895e086e8df181e5cb9100afea8d4db8b06145e41cbd8ce34a864736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MCOPY 0xB4 PUSH3 0x2CEEC8 XOR SWAP6 0xE0 DUP7 0xE8 0xDF XOR 0x1E TLOAD 0xB9 LT EXP INVALID 0xA8 0xD4 0xDB DUP12 MOD EQ MCOPY COINBASE 0xCB 0xD8 0xCE CALLVALUE 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"1245:2685:13:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea26469706673582212205eb4622ceec81895e086e8df181e5cb9100afea8d4db8b06145e41cbd8ce34a864736f6c63430008190033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MCOPY 0xB4 PUSH3 0x2CEEC8 XOR SWAP6 0xE0 DUP7 0xE8 0xDF XOR 0x1E TLOAD 0xB9 LT EXP INVALID 0xA8 0xD4 0xDB DUP12 MOD EQ MCOPY COINBASE 0xCB 0xD8 0xCE CALLVALUE 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"1245:2685:13:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11400","executionCost":"infinite","totalCost":"infinite"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/BaluniV1PoolPeriphery.sol":{"BaluniV1PoolPeriphery":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address","name":"poolAddress","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"name":"addLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"fromTokens","type":"address[]"},{"internalType":"address[]","name":"toTokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address[]","name":"receivers","type":"address[]"}],"name":"batchSwap","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_poolFactory","type":"address"}],"name":"changePoolFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetReserves","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getPoolsContainingToken","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getReserves","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVersion","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_poolFactory","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"}],"name":"performRebalanceIfNeeded","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"poolFactory","outputs":[{"internalType":"contract IBaluniV1PoolFactory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"poolsReserves","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"poolAddress","type":"address"}],"name":"rebalanceWeights","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_poolFactory","type":"address"},{"internalType":"uint64","name":"version","type":"uint64"}],"name":"reinitialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"share","type":"uint256"},{"internalType":"address","name":"poolAddress","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"name":"removeLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"smartSwap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"This contract serves as the periphery contract for interacting with BaluniV1Pool contracts. It provides functions for swapping tokens, adding liquidity, removing liquidity, and getting the amount out for a given swap.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"addLiquidity(uint256[],address,address)":{"details":"Adds liquidity to a BaluniV1Pool.","params":{"amounts":"An array of amounts for each asset to add as liquidity."}},"batchSwap(address[],address[],uint256[],address[])":{"details":"Performs batch swaps between multiple token pairs.","params":{"amounts":"An array of amounts representing the amounts to swap.","fromTokens":"An array of addresses representing the tokens to swap from.","receivers":"An array of addresses representing the receivers of the swapped tokens.","toTokens":"An array of addresses representing the tokens to swap to."},"returns":{"_0":"An array of amounts representing the amounts of tokens received after the swaps."}},"changePoolFactory(address)":{"details":"Changes the address of the pool factory contract. Can only be called by the contract owner.","params":{"_poolFactory":"The new address of the pool factory contract."}},"getAmountOut(address,address,uint256)":{"details":"Gets the amount of tokens received after a swap in a BaluniV1Pool.","params":{"amount":"The amount of tokens to swap.","fromToken":"The address of the token to swap from.","toToken":"The address of the token to swap to."},"returns":{"_0":"The amount of tokens received after the swap."}},"getPoolsContainingToken(address)":{"details":"Returns an array of pool addresses that contain the given token.","params":{"token":"The address of the token to search for."},"returns":{"_0":"An array of pool addresses."}},"getVersion()":{"details":"Returns the version of the contract.","returns":{"_0":"The version string."}},"initialize(address)":{"details":"Initializes the contract by setting the pool factory address.","params":{"_poolFactory":"The address of the BaluniV1PoolFactory contract."}},"owner()":{"details":"Returns the address of the current owner."},"performRebalanceIfNeeded(address)":{"details":"Performs rebalance if needed for the given tokens.","params":{"poolAddress":"The address of the token pool to rebalance."}},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"reinitialize(address,uint64)":{"details":"Initializes the contract by setting the pool factory address.","params":{"_poolFactory":"The address of the BaluniV1PoolFactory contract."}},"removeLiquidity(uint256,address,address)":{"details":"Removes liquidity from a BaluniV1Pool.","params":{"poolAddress":"The address of the BaluniV1Pool.","share":"The amount of liquidity tokens to remove."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"swap(address,address,uint256,address)":{"details":"Swaps tokens in a BaluniV1Pool.","params":{"amount":"The amount of tokens to swap.","fromToken":"The address of the token to swap from.","toToken":"The address of the token to swap to."},"returns":{"_0":"The amount of tokens received after the swap."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"title":"BaluniV1PoolPeriphery","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a080604052346029573060805261384b908161002e823960805181818161250c01526126260152f35b5f80fdfe608060409080825260049081361015610016575f80fd5b5f3560e01c9081630d8e6e2c14612b09575080633e99c1e414612aba5780634056c37f146117925780634219dc4014612a695780634aa06652146128ad5780634f1ef2861461258157806352d1902d146124c55780635568081a146121a65780636e81221c14611ea4578063715018a614611de857806372591be514611d685780637442eca6146118075780638628991e146117925780638da5cb5b146117215780638f2248bc146115a3578063ad3cb1cc146114b5578063ad41426314611294578063ae3cce1c146111a3578063c4d66de814610fb3578063e74e9b0614610a0e578063ec0cd2eb146107a7578063f2fde38b146107605763f31abcc41461011d575f80fd5b346105585760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055857803590610157612b8d565b91610160612bb0565b81156107035784517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523384820190815230602082810191909152929173ffffffffffffffffffffffffffffffffffffffff878116929091908590829081906040010381865afa80156105b75786915f916106d2575b5010610676578751967f70a082310000000000000000000000000000000000000000000000000000000097888152338882015260249686828981885afa801561066c5787925f91610639575b509261023482610292951015612f73565b8b5193849283927f23b872dd000000000000000000000000000000000000000000000000000000008452338d850160409194939294606082019573ffffffffffffffffffffffffffffffffffffffff80921683521660208201520152565b03815f875af19081156105b7575f9161061c575b50156105c1578751917f89afcb44000000000000000000000000000000000000000000000000000000008352818416878401525f83878183855af19283156105b7575f93610593575b508851907f67e4ac2c0000000000000000000000000000000000000000000000000000000082525f828981845afa918215610589575f92610565575b505f5b8251811015610563578a878a8a8d88610347878a612e5e565b511694519485938492835230908301525afa9081156104cd575f91610532575b506103728287612e5e565b51116104d7576103828186612e5e565b51825f52600188528b5f20856103988487612e5e565b51165f5288526103ac8c5f20918254613073565b9055610425878c8b895f896103c1888b612e5e565b5116926103ce888d612e5e565b519451968795869485937fa9059cbb00000000000000000000000000000000000000000000000000000000855284016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af19081156104cd575f916104a0575b50156104455760010161032e565b60648960158a8a8f51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4173736574207472616e73666572206661696c656400000000000000000000006044820152fd5b6104c09150883d8a116104c6575b6104b88183612c0e565b8101906130e5565b5f610437565b503d6104ae565b8c513d5f823e3d90fd5b60648960168a8a8f51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f496e73756666696369656e74204c6971756964697479000000000000000000006044820152fd5b90508781813d831161055c575b6105498183612c0e565b8101031261055857515f610367565b5f80fd5b503d61053f565b005b6105829192503d805f833e61057a8183612c0e565b810190612d8d565b905f61032b565b8a513d5f823e3d90fd5b6105b09193503d805f833e6105a88183612c0e565b8101906130fd565b915f6102ef565b89513d5f823e3d90fd5b606486601387878c51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f5472616e7366657246726f6d206661696c6564000000000000000000000000006044820152fd5b6106339150853d87116104c6576104b88183612c0e565b5f6102a6565b83819492503d8311610665575b6106508183612c0e565b81010312610558579051869190610234610223565b503d610646565b8b513d5f823e3d90fd5b606486858a51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601660248201527f496e73756666696369656e7420616c6c6f77616e6365000000000000000000006044820152fd5b809250868092503d83116106fc575b6106eb8183612c0e565b81010312610558578590515f6101d7565b503d6106e1565b60648360208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601f60248201527f5368617265206d7573742062652067726561746572207468616e207a65726f006044820152fd5b346105585760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105585761056361079a612b6a565b6107a2613218565b613157565b50346105585760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055857803567ffffffffffffffff8111610558576107f59036908301612d23565b916107fe612b8d565b610806612bb0565b9373ffffffffffffffffffffffffffffffffffffffff8092169186517f67e4ac2c0000000000000000000000000000000000000000000000000000000081525f818681875afa908115610a04575f916109ea575b505f5b815181101561092d57805f8a856108776108f49587612e5e565b511661088484898d613126565b35908984528a60209485946001865280822084835286528082206108a9868254613039565b9055517f23b872dd0000000000000000000000000000000000000000000000000000000081523392810192835230602084015260408301949094529296879384929091839160600190565b03925af192831561066c5760019361090f575b50500161085d565b8161092592903d106104c6576104b88183612c0e565b505f80610907565b87898886888a888551967fde836ebd00000000000000000000000000000000000000000000000000000000885216908601528360248601528160448601527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821161055857845f606482602096819660051b80918484013781010301925af19081156109e157506109ba57005b602090813d83116109da575b6109d08183612c0e565b8101031261055857005b503d6109c6565b513d5f823e3d90fd5b6109fe91503d805f833e61057a8183612c0e565b5f61085a565b88513d5f823e3d90fd5b50346105585760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105585767ffffffffffffffff813581811161055857610a5d9036908401612d23565b91909260243582811161055857610a779036908301612d23565b92909160443582811161055857610a919036908301612d23565b91909260643590811161055857610aab9036908301612d23565b86889392931480610faa575b80610fa1575b15610f4457610acb88612e0f565b985f5b898110610ae6578b5180610ae28d82612bd3565b0390f35b80888b8e8786610b428f878f918f610b08610ba09c610b1092610b3796613126565b351515613080565b610b3c610b378373ffffffffffffffffffffffffffffffffffffffff9a8b5f541698613126565b613136565b98613126565b90835180809981947f2d5e94a70000000000000000000000000000000000000000000000000000000083526020998a97840190602090939293604083019473ffffffffffffffffffffffffffffffffffffffff809216845216910152565b03915afa9081156109e1578a8f88938e985f91610ee5575b5087879387610bd5610b3784610c279e9784610bdc98169b613126565b1693613126565b83517f23b872dd00000000000000000000000000000000000000000000000000000000815233818e01908152306020820152913560408301529889929183915f918391606090910190565b03925af18015610ebd578f8f8f908f8f938f918f948f9d908f610c5b8f8f9b968197938d83978496610ec7575b5050613126565b610c6490613136565b96610c6e92613126565b610c7790613136565b96610c8192613126565b359b610c8c92613126565b610c9590613136565b85517f6e81221c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9283169381019384529382166020840152604083019a909a52909816606089015296879081906080010381855a905f91f1928315610ebd578f8f918f928f938f938f978f968f968f915f9c610e55575b610e129f508e610dbc978f9e9d9c9b9994978f8f908e610dae915f9f9a9b879c610b379e610d548a610db59d610b379d613126565b35905f8390528d610d72610b378d600197888a525f8b902095613126565b165f5284525f85610d869120918254613039565b90555f5281528f829020908a610da0610b378a8a8a613126565b165f52528e20918254613073565b9055613126565b1697613126565b9251988995869485937fa9059cbb00000000000000000000000000000000000000000000000000000000855284016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af1928315610e4b57600193610e2d575b505001610ace565b81610e4392903d106104c6576104b88183612c0e565b505f80610e25565b8e513d5f823e3d90fd5b5050509b975050505094505050508281813d8311610eb6575b610e788183612c0e565b81010312610558578f94858f8f8f938f958f8f968f94998f918f94938e8e9d8196938f8395519850509794999b9c9d929350979499959d5050610d1f565b503d610e6e565b50513d5f823e3d90fd5b81610edd92903d106104c6576104b88183612c0e565b508d5f610c54565b985050505050508184813d8311610f3d575b610f018183612c0e565b8101031261055857848f838f610bdc878f928f90610bd5610b37848b93610c279f610f2c8691612d6c565b985050979e50505050509350610bb8565b503d610ef7565b60648260208c51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601c60248201527f496e70757420617272617973206c656e677468206d69736d61746368000000006044820152fd5b50808414610abd565b50838714610ab7565b50346105585760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055857610feb612b6a565b907ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0091825460ff81861c16159267ffffffffffffffff82168015908161119b575b6001149081611191575b159081611188575b50611161575090818360017fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000073ffffffffffffffffffffffffffffffffffffffff951617865561112c575b5061109261371c565b61109a61371c565b6110a261371c565b6110ab33613157565b167fffffffffffffffffffffffff00000000000000000000000000000000000000005f5416175f556110d957005b7fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d291817fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff602093541690555160018152a1005b7fffffffffffffffffffffffffffffffffffffffffffffff00000000000000000016680100000000000000011784555f611089565b85517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b9050155f61103e565b303b159150611036565b85915061102c565b503461055857602090817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610558576024925f6111e1612b6a565b73ffffffffffffffffffffffffffffffffffffffff95869182845416855196879485937fb4340e6a00000000000000000000000000000000000000000000000000000000855216908301525afa918215610ebd575f92611278575b50918251928180850191818652845180935285019301915f5b8281106112625785850386f35b8351871685529381019392810192600101611255565b61128d9192503d805f833e61057a8183612c0e565b905f61123c565b503461055857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610558576112cb612b6a565b73ffffffffffffffffffffffffffffffffffffffff90816112ea612b8d565b168451917f0723c999000000000000000000000000000000000000000000000000000000008352838116858401525f8360248183865af19283156114ab575f9361148f575b508551927f67e4ac2c0000000000000000000000000000000000000000000000000000000084525f848781865afa938415611485575f94611469575b505f5b845181101561056357806113856114309284612e5e565b51855f52602090600182528a5f208961139e858b612e5e565b51165f5282526113b28b5f20918254613039565b9055808a896113c1858b612e5e565b51168b5f6113cf878a612e5e565b5193518098819582947f23b872dd0000000000000000000000000000000000000000000000000000000084528d3091850160409194939294606082019573ffffffffffffffffffffffffffffffffffffffff80921683521660208201520152565b03925af19283156105895760019361144b575b50500161136e565b8161146192903d106104c6576104b88183612c0e565b505f80611443565b61147e9194503d805f833e61057a8183612c0e565b925f61136b565b87513d5f823e3d90fd5b6114a49193503d805f833e6105a88183612c0e565b915f61132f565b86513d5f823e3d90fd5b509034610558575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610558578051918183019083821067ffffffffffffffff831117611577575081526005825260208201917f352e302e3000000000000000000000000000000000000000000000000000000083527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8351948593602085525180918160208701528686015e5f85828601015201168101030190f35b6041907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b50903461055857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610558576115db612b6a565b916024359267ffffffffffffffff90818516809503610558577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00928354928660ff85881c16918215611714575b50506116ed577fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260208787877fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff68010000000000000000847fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000008b73ffffffffffffffffffffffffffffffffffffffff8c167fffffffffffffffffffffffff00000000000000000000000000000000000000005f5416175f5516171716905551908152a1005b84517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b851610159050865f611628565b8234610558575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105585760209073ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930054169051908152f35b823461055857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610558576020906117cc612b6a565b6117d4612b8d565b9073ffffffffffffffffffffffffffffffffffffffff8091165f5260018452825f2091165f528252805f20549051908152f35b5090346105585761183261181a36612cb6565b9591908093949161182c821515613080565b856132b5565b94855115611d0b5773ffffffffffffffffffffffffffffffffffffffff948051937f23b872dd0000000000000000000000000000000000000000000000000000000085526020948581806118b58530338b850160409194939294606082019573ffffffffffffffffffffffffffffffffffffffff80921683521660208201520152565b03815f8c8c165af18015611d0157611ce4575b5094915f945b8851861015611cdd57876118e2878b612e5e565b5116938351987f67e4ac2c000000000000000000000000000000000000000000000000000000008a525f8a8881895afa998a15611b43578b905f9b611cb5575b50816119318a61193893612e5e565b5116612e9f565b995f9a5f5b8251811015611ca457836119518285612e5e565b5116848616141580611c91575b61196a5760010161193d565b9050829b50611981919a969594999a979397612e5e565b5116905b898216908115611c355784517fb2b55d7000000000000000000000000000000000000000000000000000000000815282898201526024908a818381865afa908115611485579088915f91611c04575b5010611b83578c51907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201918211611b5957508387928b928d145f14611b4d57895f8c611a858a5b8c519d8e97889687957f6e81221c00000000000000000000000000000000000000000000000000000000875286019293606092919594608085019673ffffffffffffffffffffffffffffffffffffffff93848092168752166020860152604085015216910152565b03925af1958615611b43578a8d8b938e935f9a611b03575b50908291600198999a9b85611ab5611adc9685612e5e565b51165f528996878152868d5f2092165f5252611ad58b5f20918254613039565b9055612e5e565b51165f528852845f20905f528752835f20611af8868254613073565b9055939601946118ce565b94935096979850505081813d8311611b3c575b611b208183612c0e565b81010312610558575194939288908b908b908e90611adc611a9d565b503d611b16565b85513d5f823e3d90fd5b895f8c611a8530611a1d565b60118a7f4e487b71000000000000000000000000000000000000000000000000000000005f52525ffd5b8860276084928c8951937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f496e73756666696369656e74206c697175696469747920696e20706f6f6c206660448201527f6f722073776170000000000000000000000000000000000000000000000000006064820152fd5b8092508c8092503d8311611c2e575b611c1d8183612c0e565b81010312610558578790515f6119d4565b503d611c13565b6064888a8751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601960248201527f4e6f2076616c6964206e65787420746f6b656e20666f756e64000000000000006044820152fd5b50611c9c8183612e5e565b51151561195e565b505050989094979392919697611985565b611938919b506119318a611cd385933d805f833e61057a8183612c0e565b9d93505050611922565b8251878152f35b611cfa90863d88116104c6576104b88183612c0e565b505f6118c8565b83513d5f823e3d90fd5b60648260208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f4e6f20726f75746520666f756e640000000000000000000000000000000000006044820152fd5b346105585760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105585773ffffffffffffffffffffffffffffffffffffffff611db4612b6a565b611dbc613218565b167fffffffffffffffffffffffff00000000000000000000000000000000000000005f5416175f555f80f35b34610558575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055857611e1e613218565b5f73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993008054907fffffffffffffffffffffffff000000000000000000000000000000000000000082169055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b503461055857611eb336612cb6565b611ec1829693921515613080565b73ffffffffffffffffffffffffffffffffffffffff94855f541695845180977f2d5e94a700000000000000000000000000000000000000000000000000000000825260209889918180611f3e8a8d8a840190602090939293604083019473ffffffffffffffffffffffffffffffffffffffff809216845216910152565b03915afa9081156114ab579082915f9161216e575b5086517f23b872dd00000000000000000000000000000000000000000000000000000000815233858201908152306020820152604081018c9052848a169992909316928a908290819060600103815f8d5af18015610a04578b928b928992612151575b5089517f6e81221c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182168882019081529282166020840152604083019d909d52871660608201528b90819060800103815f865af197881561148557899a5f9a9899612111575b5092826120d4989795928b97955f95865260018a528b8620908652895261205b8b8620918254613039565b9055835260018752888320941693848352865287822061207c868254613073565b90558751968795869485937fa9059cbb00000000000000000000000000000000000000000000000000000000855284016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af18015612107576120ea575b5051908152f35b61210090843d86116104c6576104b88183612c0e565b505f6120e3565b82513d5f823e3d90fd5b80939795929a5088919694983d831161214a575b61212f8183612c0e565b8101031261055857905197899693959294919392915f612030565b503d612125565b61216790843d86116104c6576104b88183612c0e565b505f611fb6565b809250898092503d831161219f575b6121878183612c0e565b81010312610558576121998291612d6c565b5f611f53565b503d61217d565b503461055857602091827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105585773ffffffffffffffffffffffffffffffffffffffff91826121f7612b6a565b169180517f70a0823100000000000000000000000000000000000000000000000000000000815233838201528581602481875afa908115612107575f91612498575b508151907f18160ddd00000000000000000000000000000000000000000000000000000000825286828581885afa918215611d01575f92612469575b506127109081810291818304149015171561243d5781156124115761229f91606491041015612f73565b8051917ff47b45e80000000000000000000000000000000000000000000000000000000083525f83828183885af1958615612107575f935f976123b5575b505f835180937f67e4ac2c00000000000000000000000000000000000000000000000000000000825281885afa918215611d01575f92612399575b505f5b8251811015610563578061233160019287612e5e565b51875f528290818552865f208a6123488589612e5e565b51165f52855261235c875f20918254613039565b9055612368828b612e5e565b5190885f528452855f208961237d8488612e5e565b51165f528452612391865f20918254613073565b90550161231b565b6123ae9192503d805f833e61057a8183612c0e565b905f612318565b935095503d805f853e6123c88185612c0e565b83019282818503126105585780519367ffffffffffffffff9485811161055857816123f4918401612fd8565b94888301519081116105585761240a9201612fd8565b955f6122dd565b6012847f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b6011847f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b9091508681813d8311612491575b6124818183612c0e565b810103126105585751905f612275565b503d612477565b90508581813d83116124be575b6124af8183612c0e565b8101031261055857515f612239565b503d6124a5565b509034610558575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105585773ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016300361255b57602090517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b50817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610558576125b3612b6a565b602492833567ffffffffffffffff8111610558573660238201121561055857808401356125df81612c7c565b936125ec84519586612c0e565b818552602091828601933689838301011161055857815f928a86930187378701015273ffffffffffffffffffffffffffffffffffffffff807f00000000000000000000000000000000000000000000000000000000000000001680301490811561287f575b506128575761265e613218565b81169484517f52d1902d000000000000000000000000000000000000000000000000000000008152838189818a5afa5f9181612828575b506126c957505050505051917f4c9c8ce3000000000000000000000000000000000000000000000000000000008352820152fd5b9087878794938b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc918281036127fb5750853b156127ce5750817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790558451907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a282511561279b5750505f6105639581925190845af4913d15612791573d61278361277a82612c7c565b92519283612c0e565b81525f81943d92013e613775565b5060609250613775565b94509450505050346127a957005b7fb398979f000000000000000000000000000000000000000000000000000000008152fd5b83838851917f4c9c8ce3000000000000000000000000000000000000000000000000000000008352820152fd5b84908851917faa1d49a4000000000000000000000000000000000000000000000000000000008352820152fd5b9091508481813d8311612850575b6128408183612c0e565b810103126105585751905f612695565b503d612836565b8685517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541614155f612651565b50346105585760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610558576128e5612b6a565b916128ee612b8d565b9173ffffffffffffffffffffffffffffffffffffffff92835f54169083519586927f2d5e94a70000000000000000000000000000000000000000000000000000000084526020978891818061296d87878b840190602090939293604083019473ffffffffffffffffffffffffffffffffffffffff809216845216910152565b03915afa928315611b43579087949392915f93612a2c575b5085517f4aa0665200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821694810194855291166020840152604435604084015294859283919082906060015b0392165afa918215610ebd575f926129fd575051908152f35b9091508281813d8311612a25575b612a158183612c0e565b810103126105585751905f6120e3565b503d612a0b565b8581969294503d8311612a62575b612a448183612c0e565b81010312610558576129e495612a5a8895612d6c565b929096612985565b503d612a3a565b8234610558575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105585760209073ffffffffffffffffffffffffffffffffffffffff5f54169051908152f35b82346105585760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055857610ae290612afe612af9612b6a565b612e9f565b905191829182612bd3565b34610558575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105585760209067ffffffffffffffff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054168152f35b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361055857565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361055857565b6044359073ffffffffffffffffffffffffffffffffffffffff8216820361055857565b60209060206040818301928281528551809452019301915f5b828110612bfa575050505090565b835185529381019392810192600101612bec565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117612c4f57604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b67ffffffffffffffff8111612c4f57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60809101126105585773ffffffffffffffffffffffffffffffffffffffff9060043582811681036105585791602435818116810361055857916044359160643590811681036105585790565b9181601f840112156105585782359167ffffffffffffffff8311610558576020808501948460051b01011161055857565b67ffffffffffffffff8111612c4f5760051b60200190565b519073ffffffffffffffffffffffffffffffffffffffff8216820361055857565b60209081818403126105585780519067ffffffffffffffff821161055857019180601f84011215610558578251612dc381612d54565b93612dd16040519586612c0e565b818552838086019260051b820101928311610558578301905b828210612df8575050505090565b838091612e0484612d6c565b815201910190612dea565b90612e1982612d54565b612e266040519182612c0e565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0612e548294612d54565b0190602036910137565b8051821015612e725760209160051b010190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b9073ffffffffffffffffffffffffffffffffffffffff809216604092604051907f67e4ac2c0000000000000000000000000000000000000000000000000000000082525f82600481865afa918215612f68575f92612f4c575b50612f038251612e0f565b925f5b8351811015612f4357600190825f526020828152885f209085612f298489612e5e565b51165f5252875f2054612f3c8288612e5e565b5201612f06565b50929450505050565b612f619192503d805f833e61057a8183612c0e565b905f612ef8565b6040513d5f823e3d90fd5b15612f7a57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e73756666696369656e742062616c616e63650000000000000000000000006044820152fd5b9080601f8301121561055857815190602091612ff381612d54565b936130016040519586612c0e565b81855260208086019260051b82010192831161055857602001905b82821061302a575050505090565b8151815290830190830161301c565b9190820180921161304657565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b9190820391821161304657565b1561308757565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b90816020910312610558575180151581036105585790565b9060208282031261055857815167ffffffffffffffff8111610558576131239201612fd8565b90565b9190811015612e725760051b0190565b3573ffffffffffffffffffffffffffffffffffffffff811681036105585790565b73ffffffffffffffffffffffffffffffffffffffff8091169081156131e8577f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300805490837fffffffffffffffffffffffff00000000000000000000000000000000000000008316179055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b60246040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f6004820152fd5b73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005416330361325857565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146130465760010190565b73ffffffffffffffffffffffffffffffffffffffff60045f82815416604051928380927fd88ff1f40000000000000000000000000000000000000000000000000000000082525afa908115612f68575f91613542575b5080519361331885612e0f565b915f9361332487612d54565b926133326040519485612c0e565b8784527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061335f89612d54565b0136602086013761336f88612e0f565b965f600191895115612e7257841660208a01525b8181106133bc5750505050505050505050506040516020810181811067ffffffffffffffff821117612c4f576040525f81525f36813790565b836133d06133c983613288565b928b612e5e565b511684841681146134fb575f5b8b81106133eb575050613383565b6133f58189612e5e565b5115613404575b6001016133dd565b8561340f8289612e5e565b5116604051907f67e4ac2c0000000000000000000000000000000000000000000000000000000082525f82600481845afa908115612f68578f85935f936134df575b508361345d818561355c565b92836134cd575b505050613473575b50506133fc565b9061347d9161366f565b86613488838a612e5e565b51166134938c613288565b9b61349e908c612e5e565b52868c6134aa87613288565b966134b491612e5e565b911690526134c28189612e5e565b60019052815f61346c565b6134d793506135a9565b8f835f613464565b6134f49193503d805f833e61057a8183612c0e565b915f613451565b50505050945050509350915061351082612e0f565b925f5b838110613521575050505090565b808361352f60019385612e5e565b511661353b8288612e5e565b5201613513565b61355691503d805f833e61057a8183612c0e565b5f61330b565b905f5b82518110156135a25773ffffffffffffffffffffffffffffffffffffffff806135888386612e5e565b51169083161461359a5760010161355f565b505050600190565b5050505f90565b6004929173ffffffffffffffffffffffffffffffffffffffff809216915f6135d084612e9f565b93604051968780927f67e4ac2c0000000000000000000000000000000000000000000000000000000082525afa948515612f68575f95613653575b505f5b855181101561364957816136228288612e5e565b5116828416146136345760010161360e565b92915050613643929350612e5e565b51101590565b5050505050505f90565b6136689195503d805f833e61057a8183612c0e565b935f61360b565b905f5b82518110156136be5773ffffffffffffffffffffffffffffffffffffffff8061369b8386612e5e565b5116818416036136ae5750600101613672565b926136b99250612e5e565b511690565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f546f6b656e206e6f7420666f756e6420696e20706f6f6c0000000000000000006044820152fd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c161561374b57565b60046040517fd7e6bcf8000000000000000000000000000000000000000000000000000000008152fd5b906137b4575080511561378a57805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b8151158061380c575b6137c5575090565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b156137bd56fea2646970667358221220b2b5f43621235ca20b5f60045b9aba7f731fee953a8636e849ae9f04ab5f0cfc64736f6c63430008190033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x29 JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH2 0x384B SWAP1 DUP2 PUSH2 0x2E DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x250C ADD MSTORE PUSH2 0x2626 ADD MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xD8E6E2C EQ PUSH2 0x2B09 JUMPI POP DUP1 PUSH4 0x3E99C1E4 EQ PUSH2 0x2ABA JUMPI DUP1 PUSH4 0x4056C37F EQ PUSH2 0x1792 JUMPI DUP1 PUSH4 0x4219DC40 EQ PUSH2 0x2A69 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x28AD JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2581 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x24C5 JUMPI DUP1 PUSH4 0x5568081A EQ PUSH2 0x21A6 JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x1EA4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DE8 JUMPI DUP1 PUSH4 0x72591BE5 EQ PUSH2 0x1D68 JUMPI DUP1 PUSH4 0x7442ECA6 EQ PUSH2 0x1807 JUMPI DUP1 PUSH4 0x8628991E EQ PUSH2 0x1792 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1721 JUMPI DUP1 PUSH4 0x8F2248BC EQ PUSH2 0x15A3 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x14B5 JUMPI DUP1 PUSH4 0xAD414263 EQ PUSH2 0x1294 JUMPI DUP1 PUSH4 0xAE3CCE1C EQ PUSH2 0x11A3 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xFB3 JUMPI DUP1 PUSH4 0xE74E9B06 EQ PUSH2 0xA0E JUMPI DUP1 PUSH4 0xEC0CD2EB EQ PUSH2 0x7A7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x760 JUMPI PUSH4 0xF31ABCC4 EQ PUSH2 0x11D JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x558 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x157 PUSH2 0x2B8D JUMP JUMPDEST SWAP2 PUSH2 0x160 PUSH2 0x2BB0 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x703 JUMPI DUP5 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER DUP5 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND SWAP3 SWAP1 SWAP2 SWAP1 DUP6 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD SUB DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0x5B7 JUMPI DUP7 SWAP2 PUSH0 SWAP2 PUSH2 0x6D2 JUMPI JUMPDEST POP LT PUSH2 0x676 JUMPI DUP8 MLOAD SWAP7 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 SWAP8 DUP9 DUP2 MSTORE CALLER DUP9 DUP3 ADD MSTORE PUSH1 0x24 SWAP7 DUP7 DUP3 DUP10 DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0x66C JUMPI DUP8 SWAP3 PUSH0 SWAP2 PUSH2 0x639 JUMPI JUMPDEST POP SWAP3 PUSH2 0x234 DUP3 PUSH2 0x292 SWAP6 LT ISZERO PUSH2 0x2F73 JUMP JUMPDEST DUP12 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE CALLER DUP14 DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 SWAP5 PUSH1 0x60 DUP3 ADD SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP4 MSTORE AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB DUP2 PUSH0 DUP8 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x5B7 JUMPI PUSH0 SWAP2 PUSH2 0x61C JUMPI JUMPDEST POP ISZERO PUSH2 0x5C1 JUMPI DUP8 MLOAD SWAP2 PUSH32 0x89AFCB4400000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP2 DUP5 AND DUP8 DUP5 ADD MSTORE PUSH0 DUP4 DUP8 DUP2 DUP4 DUP6 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x5B7 JUMPI PUSH0 SWAP4 PUSH2 0x593 JUMPI JUMPDEST POP DUP9 MLOAD SWAP1 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH0 DUP3 DUP10 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x589 JUMPI PUSH0 SWAP3 PUSH2 0x565 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x563 JUMPI DUP11 DUP8 DUP11 DUP11 DUP14 DUP9 PUSH2 0x347 DUP8 DUP11 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND SWAP5 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4CD JUMPI PUSH0 SWAP2 PUSH2 0x532 JUMPI JUMPDEST POP PUSH2 0x372 DUP3 DUP8 PUSH2 0x2E5E JUMP JUMPDEST MLOAD GT PUSH2 0x4D7 JUMPI PUSH2 0x382 DUP2 DUP7 PUSH2 0x2E5E JUMP JUMPDEST MLOAD DUP3 PUSH0 MSTORE PUSH1 0x1 DUP9 MSTORE DUP12 PUSH0 KECCAK256 DUP6 PUSH2 0x398 DUP5 DUP8 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP9 MSTORE PUSH2 0x3AC DUP13 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x3073 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x425 DUP8 DUP13 DUP12 DUP10 PUSH0 DUP10 PUSH2 0x3C1 DUP9 DUP12 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND SWAP3 PUSH2 0x3CE DUP9 DUP14 PUSH2 0x2E5E JUMP JUMPDEST MLOAD SWAP5 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x4CD JUMPI PUSH0 SWAP2 PUSH2 0x4A0 JUMPI JUMPDEST POP ISZERO PUSH2 0x445 JUMPI PUSH1 0x1 ADD PUSH2 0x32E JUMP JUMPDEST PUSH1 0x64 DUP10 PUSH1 0x15 DUP11 DUP11 DUP16 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4173736574207472616E73666572206661696C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x4C0 SWAP2 POP DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x4C6 JUMPI JUMPDEST PUSH2 0x4B8 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x30E5 JUMP JUMPDEST PUSH0 PUSH2 0x437 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4AE JUMP JUMPDEST DUP13 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP10 PUSH1 0x16 DUP11 DUP11 DUP16 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x55C JUMPI JUMPDEST PUSH2 0x549 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI MLOAD PUSH0 PUSH2 0x367 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x53F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x582 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x57A DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2D8D JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x32B JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x5B0 SWAP2 SWAP4 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x5A8 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x30FD JUMP JUMPDEST SWAP2 PUSH0 PUSH2 0x2EF JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP7 PUSH1 0x13 DUP8 DUP8 DUP13 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x5472616E7366657246726F6D206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x633 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x4C6 JUMPI PUSH2 0x4B8 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST PUSH0 PUSH2 0x2A6 JUMP JUMPDEST DUP4 DUP2 SWAP5 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x665 JUMPI JUMPDEST PUSH2 0x650 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI SWAP1 MLOAD DUP7 SWAP2 SWAP1 PUSH2 0x234 PUSH2 0x223 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x646 JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP7 DUP6 DUP11 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420616C6C6F77616E636500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 SWAP3 POP DUP7 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x6FC JUMPI JUMPDEST PUSH2 0x6EB DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI DUP6 SWAP1 MLOAD PUSH0 PUSH2 0x1D7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x64 DUP4 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x558 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH2 0x563 PUSH2 0x79A PUSH2 0x2B6A JUMP JUMPDEST PUSH2 0x7A2 PUSH2 0x3218 JUMP JUMPDEST PUSH2 0x3157 JUMP JUMPDEST POP CALLVALUE PUSH2 0x558 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x558 JUMPI PUSH2 0x7F5 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x2D23 JUMP JUMPDEST SWAP2 PUSH2 0x7FE PUSH2 0x2B8D JUMP JUMPDEST PUSH2 0x806 PUSH2 0x2BB0 JUMP JUMPDEST SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP2 DUP7 MLOAD PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 DUP2 DUP7 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xA04 JUMPI PUSH0 SWAP2 PUSH2 0x9EA JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x92D JUMPI DUP1 PUSH0 DUP11 DUP6 PUSH2 0x877 PUSH2 0x8F4 SWAP6 DUP8 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND PUSH2 0x884 DUP5 DUP10 DUP14 PUSH2 0x3126 JUMP JUMPDEST CALLDATALOAD SWAP1 DUP10 DUP5 MSTORE DUP11 PUSH1 0x20 SWAP5 DUP6 SWAP5 PUSH1 0x1 DUP7 MSTORE DUP1 DUP3 KECCAK256 DUP5 DUP4 MSTORE DUP7 MSTORE DUP1 DUP3 KECCAK256 PUSH2 0x8A9 DUP7 DUP3 SLOAD PUSH2 0x3039 JUMP JUMPDEST SWAP1 SSTORE MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE ADDRESS PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 SWAP7 DUP8 SWAP4 DUP5 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x66C JUMPI PUSH1 0x1 SWAP4 PUSH2 0x90F JUMPI JUMPDEST POP POP ADD PUSH2 0x85D JUMP JUMPDEST DUP2 PUSH2 0x925 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x4C6 JUMPI PUSH2 0x4B8 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST POP PUSH0 DUP1 PUSH2 0x907 JUMP JUMPDEST DUP8 DUP10 DUP9 DUP7 DUP9 DUP11 DUP9 DUP6 MLOAD SWAP7 PUSH32 0xDE836EBD00000000000000000000000000000000000000000000000000000000 DUP9 MSTORE AND SWAP1 DUP7 ADD MSTORE DUP4 PUSH1 0x24 DUP7 ADD MSTORE DUP2 PUSH1 0x44 DUP7 ADD MSTORE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x558 JUMPI DUP5 PUSH0 PUSH1 0x64 DUP3 PUSH1 0x20 SWAP7 DUP2 SWAP7 PUSH1 0x5 SHL DUP1 SWAP2 DUP5 DUP5 ADD CALLDATACOPY DUP2 ADD SUB ADD SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x9E1 JUMPI POP PUSH2 0x9BA JUMPI STOP JUMPDEST PUSH1 0x20 SWAP1 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x9DA JUMPI JUMPDEST PUSH2 0x9D0 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI STOP JUMPDEST POP RETURNDATASIZE PUSH2 0x9C6 JUMP JUMPDEST MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x9FE SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x57A DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST PUSH0 PUSH2 0x85A JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x558 JUMPI PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x558 JUMPI PUSH2 0xA5D SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x2D23 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x558 JUMPI PUSH2 0xA77 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x2D23 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x558 JUMPI PUSH2 0xA91 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x2D23 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x558 JUMPI PUSH2 0xAAB SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x2D23 JUMP JUMPDEST DUP7 DUP9 SWAP4 SWAP3 SWAP4 EQ DUP1 PUSH2 0xFAA JUMPI JUMPDEST DUP1 PUSH2 0xFA1 JUMPI JUMPDEST ISZERO PUSH2 0xF44 JUMPI PUSH2 0xACB DUP9 PUSH2 0x2E0F JUMP JUMPDEST SWAP9 PUSH0 JUMPDEST DUP10 DUP2 LT PUSH2 0xAE6 JUMPI DUP12 MLOAD DUP1 PUSH2 0xAE2 DUP14 DUP3 PUSH2 0x2BD3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 DUP9 DUP12 DUP15 DUP8 DUP7 PUSH2 0xB42 DUP16 DUP8 DUP16 SWAP2 DUP16 PUSH2 0xB08 PUSH2 0xBA0 SWAP13 PUSH2 0xB10 SWAP3 PUSH2 0xB37 SWAP7 PUSH2 0x3126 JUMP JUMPDEST CALLDATALOAD ISZERO ISZERO PUSH2 0x3080 JUMP JUMPDEST PUSH2 0xB3C PUSH2 0xB37 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP11 DUP12 PUSH0 SLOAD AND SWAP9 PUSH2 0x3126 JUMP JUMPDEST PUSH2 0x3136 JUMP JUMPDEST SWAP9 PUSH2 0x3126 JUMP JUMPDEST SWAP1 DUP4 MLOAD DUP1 DUP1 SWAP10 DUP2 SWAP5 PUSH32 0x2D5E94A700000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x20 SWAP10 DUP11 SWAP8 DUP5 ADD SWAP1 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP4 PUSH1 0x40 DUP4 ADD SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP5 MSTORE AND SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x9E1 JUMPI DUP11 DUP16 DUP9 SWAP4 DUP15 SWAP9 PUSH0 SWAP2 PUSH2 0xEE5 JUMPI JUMPDEST POP DUP8 DUP8 SWAP4 DUP8 PUSH2 0xBD5 PUSH2 0xB37 DUP5 PUSH2 0xC27 SWAP15 SWAP8 DUP5 PUSH2 0xBDC SWAP9 AND SWAP12 PUSH2 0x3126 JUMP JUMPDEST AND SWAP4 PUSH2 0x3126 JUMP JUMPDEST DUP4 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER DUP2 DUP15 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE SWAP2 CALLDATALOAD PUSH1 0x40 DUP4 ADD MSTORE SWAP9 DUP10 SWAP3 SWAP2 DUP4 SWAP2 PUSH0 SWAP2 DUP4 SWAP2 PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xEBD JUMPI DUP16 DUP16 DUP16 SWAP1 DUP16 DUP16 SWAP4 DUP16 SWAP2 DUP16 SWAP5 DUP16 SWAP14 SWAP1 DUP16 PUSH2 0xC5B DUP16 DUP16 SWAP12 SWAP7 DUP2 SWAP8 SWAP4 DUP14 DUP4 SWAP8 DUP5 SWAP7 PUSH2 0xEC7 JUMPI JUMPDEST POP POP PUSH2 0x3126 JUMP JUMPDEST PUSH2 0xC64 SWAP1 PUSH2 0x3136 JUMP JUMPDEST SWAP7 PUSH2 0xC6E SWAP3 PUSH2 0x3126 JUMP JUMPDEST PUSH2 0xC77 SWAP1 PUSH2 0x3136 JUMP JUMPDEST SWAP7 PUSH2 0xC81 SWAP3 PUSH2 0x3126 JUMP JUMPDEST CALLDATALOAD SWAP12 PUSH2 0xC8C SWAP3 PUSH2 0x3126 JUMP JUMPDEST PUSH2 0xC95 SWAP1 PUSH2 0x3136 JUMP JUMPDEST DUP6 MLOAD PUSH32 0x6E81221C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND SWAP4 DUP2 ADD SWAP4 DUP5 MSTORE SWAP4 DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP11 SWAP1 SWAP11 MSTORE SWAP1 SWAP9 AND PUSH1 0x60 DUP10 ADD MSTORE SWAP7 DUP8 SWAP1 DUP2 SWAP1 PUSH1 0x80 ADD SUB DUP2 DUP6 GAS SWAP1 PUSH0 SWAP2 CALL SWAP3 DUP4 ISZERO PUSH2 0xEBD JUMPI DUP16 DUP16 SWAP2 DUP16 SWAP3 DUP16 SWAP4 DUP16 SWAP4 DUP16 SWAP8 DUP16 SWAP7 DUP16 SWAP7 DUP16 SWAP2 PUSH0 SWAP13 PUSH2 0xE55 JUMPI JUMPDEST PUSH2 0xE12 SWAP16 POP DUP15 PUSH2 0xDBC SWAP8 DUP16 SWAP15 SWAP14 SWAP13 SWAP12 SWAP10 SWAP5 SWAP8 DUP16 DUP16 SWAP1 DUP15 PUSH2 0xDAE SWAP2 PUSH0 SWAP16 SWAP11 SWAP12 DUP8 SWAP13 PUSH2 0xB37 SWAP15 PUSH2 0xD54 DUP11 PUSH2 0xDB5 SWAP14 PUSH2 0xB37 SWAP14 PUSH2 0x3126 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH0 DUP4 SWAP1 MSTORE DUP14 PUSH2 0xD72 PUSH2 0xB37 DUP14 PUSH1 0x1 SWAP8 DUP9 DUP11 MSTORE PUSH0 DUP12 SWAP1 KECCAK256 SWAP6 PUSH2 0x3126 JUMP JUMPDEST AND PUSH0 MSTORE DUP5 MSTORE PUSH0 DUP6 PUSH2 0xD86 SWAP2 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x3039 JUMP JUMPDEST SWAP1 SSTORE PUSH0 MSTORE DUP2 MSTORE DUP16 DUP3 SWAP1 KECCAK256 SWAP1 DUP11 PUSH2 0xDA0 PUSH2 0xB37 DUP11 DUP11 DUP11 PUSH2 0x3126 JUMP JUMPDEST AND PUSH0 MSTORE MSTORE DUP15 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x3073 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x3126 JUMP JUMPDEST AND SWAP8 PUSH2 0x3126 JUMP JUMPDEST SWAP3 MLOAD SWAP9 DUP10 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0xE4B JUMPI PUSH1 0x1 SWAP4 PUSH2 0xE2D JUMPI JUMPDEST POP POP ADD PUSH2 0xACE JUMP JUMPDEST DUP2 PUSH2 0xE43 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x4C6 JUMPI PUSH2 0x4B8 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST POP PUSH0 DUP1 PUSH2 0xE25 JUMP JUMPDEST DUP15 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP SWAP12 SWAP8 POP POP POP POP SWAP5 POP POP POP POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xEB6 JUMPI JUMPDEST PUSH2 0xE78 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI DUP16 SWAP5 DUP6 DUP16 DUP16 DUP16 SWAP4 DUP16 SWAP6 DUP16 DUP16 SWAP7 DUP16 SWAP5 SWAP10 DUP16 SWAP2 DUP16 SWAP5 SWAP4 DUP15 DUP15 SWAP14 DUP2 SWAP7 SWAP4 DUP16 DUP4 SWAP6 MLOAD SWAP9 POP POP SWAP8 SWAP5 SWAP10 SWAP12 SWAP13 SWAP14 SWAP3 SWAP4 POP SWAP8 SWAP5 SWAP10 SWAP6 SWAP14 POP POP PUSH2 0xD1F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xE6E JUMP JUMPDEST POP MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP2 PUSH2 0xEDD SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x4C6 JUMPI PUSH2 0x4B8 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST POP DUP14 PUSH0 PUSH2 0xC54 JUMP JUMPDEST SWAP9 POP POP POP POP POP POP DUP2 DUP5 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xF3D JUMPI JUMPDEST PUSH2 0xF01 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI DUP5 DUP16 DUP4 DUP16 PUSH2 0xBDC DUP8 DUP16 SWAP3 DUP16 SWAP1 PUSH2 0xBD5 PUSH2 0xB37 DUP5 DUP12 SWAP4 PUSH2 0xC27 SWAP16 PUSH2 0xF2C DUP7 SWAP2 PUSH2 0x2D6C JUMP JUMPDEST SWAP9 POP POP SWAP8 SWAP15 POP POP POP POP POP SWAP4 POP PUSH2 0xBB8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x64 DUP3 PUSH1 0x20 DUP13 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E70757420617272617973206C656E677468206D69736D6174636800000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 DUP5 EQ PUSH2 0xABD JUMP JUMPDEST POP DUP4 DUP8 EQ PUSH2 0xAB7 JUMP JUMPDEST POP CALLVALUE PUSH2 0x558 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH2 0xFEB PUSH2 0x2B6A JUMP JUMPDEST SWAP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP2 DUP3 SLOAD PUSH1 0xFF DUP2 DUP7 SHR AND ISZERO SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x119B JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x1191 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x1188 JUMPI JUMPDEST POP PUSH2 0x1161 JUMPI POP SWAP1 DUP2 DUP4 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 AND OR DUP7 SSTORE PUSH2 0x112C JUMPI JUMPDEST POP PUSH2 0x1092 PUSH2 0x371C JUMP JUMPDEST PUSH2 0x109A PUSH2 0x371C JUMP JUMPDEST PUSH2 0x10A2 PUSH2 0x371C JUMP JUMPDEST PUSH2 0x10AB CALLER PUSH2 0x3157 JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH0 SLOAD AND OR PUSH0 SSTORE PUSH2 0x10D9 JUMPI STOP JUMPDEST PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP2 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF PUSH1 0x20 SWAP4 SLOAD AND SWAP1 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 AND PUSH9 0x10000000000000001 OR DUP5 SSTORE PUSH0 PUSH2 0x1089 JUMP JUMPDEST DUP6 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP ISZERO PUSH0 PUSH2 0x103E JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x1036 JUMP JUMPDEST DUP6 SWAP2 POP PUSH2 0x102C JUMP JUMPDEST POP CALLVALUE PUSH2 0x558 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH1 0x24 SWAP3 PUSH0 PUSH2 0x11E1 PUSH2 0x2B6A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 SWAP2 DUP3 DUP5 SLOAD AND DUP6 MLOAD SWAP7 DUP8 SWAP5 DUP6 SWAP4 PUSH32 0xB4340E6A00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE AND SWAP1 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xEBD JUMPI PUSH0 SWAP3 PUSH2 0x1278 JUMPI JUMPDEST POP SWAP2 DUP3 MLOAD SWAP3 DUP2 DUP1 DUP6 ADD SWAP2 DUP2 DUP7 MSTORE DUP5 MLOAD DUP1 SWAP4 MSTORE DUP6 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1262 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD DUP8 AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1255 JUMP JUMPDEST PUSH2 0x128D SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x57A DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x123C JUMP JUMPDEST POP CALLVALUE PUSH2 0x558 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH2 0x12CB PUSH2 0x2B6A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH2 0x12EA PUSH2 0x2B8D JUMP JUMPDEST AND DUP5 MLOAD SWAP2 PUSH32 0x723C99900000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP4 DUP2 AND DUP6 DUP5 ADD MSTORE PUSH0 DUP4 PUSH1 0x24 DUP2 DUP4 DUP7 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x14AB JUMPI PUSH0 SWAP4 PUSH2 0x148F JUMPI JUMPDEST POP DUP6 MLOAD SWAP3 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH0 DUP5 DUP8 DUP2 DUP7 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x1485 JUMPI PUSH0 SWAP5 PUSH2 0x1469 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x563 JUMPI DUP1 PUSH2 0x1385 PUSH2 0x1430 SWAP3 DUP5 PUSH2 0x2E5E JUMP JUMPDEST MLOAD DUP6 PUSH0 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x1 DUP3 MSTORE DUP11 PUSH0 KECCAK256 DUP10 PUSH2 0x139E DUP6 DUP12 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP3 MSTORE PUSH2 0x13B2 DUP12 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x3039 JUMP JUMPDEST SWAP1 SSTORE DUP1 DUP11 DUP10 PUSH2 0x13C1 DUP6 DUP12 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND DUP12 PUSH0 PUSH2 0x13CF DUP8 DUP11 PUSH2 0x2E5E JUMP JUMPDEST MLOAD SWAP4 MLOAD DUP1 SWAP9 DUP2 SWAP6 DUP3 SWAP5 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP14 ADDRESS SWAP2 DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 SWAP5 PUSH1 0x60 DUP3 ADD SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP4 MSTORE AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x589 JUMPI PUSH1 0x1 SWAP4 PUSH2 0x144B JUMPI JUMPDEST POP POP ADD PUSH2 0x136E JUMP JUMPDEST DUP2 PUSH2 0x1461 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x4C6 JUMPI PUSH2 0x4B8 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST POP PUSH0 DUP1 PUSH2 0x1443 JUMP JUMPDEST PUSH2 0x147E SWAP2 SWAP5 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x57A DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST SWAP3 PUSH0 PUSH2 0x136B JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x14A4 SWAP2 SWAP4 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x5A8 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST SWAP2 PUSH0 PUSH2 0x132F JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x558 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI DUP1 MLOAD SWAP2 DUP2 DUP4 ADD SWAP1 DUP4 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x1577 JUMPI POP DUP2 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 MLOAD SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 DUP2 PUSH1 0x20 DUP8 ADD MSTORE DUP7 DUP7 ADD MCOPY PUSH0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH1 0x41 SWAP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x558 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH2 0x15DB PUSH2 0x2B6A JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP1 SWAP6 SUB PUSH2 0x558 JUMPI PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP3 DUP4 SLOAD SWAP3 DUP7 PUSH1 0xFF DUP6 DUP9 SHR AND SWAP2 DUP3 ISZERO PUSH2 0x1714 JUMPI JUMPDEST POP POP PUSH2 0x16ED JUMPI PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 DUP8 DUP8 DUP8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF PUSH9 0x10000000000000000 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH0 SLOAD AND OR PUSH0 SSTORE AND OR OR AND SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST DUP5 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 AND LT ISZERO SWAP1 POP DUP7 PUSH0 PUSH2 0x1628 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x558 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x558 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x17CC PUSH2 0x2B6A JUMP JUMPDEST PUSH2 0x17D4 PUSH2 0x2B8D JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x558 JUMPI PUSH2 0x1832 PUSH2 0x181A CALLDATASIZE PUSH2 0x2CB6 JUMP JUMPDEST SWAP6 SWAP2 SWAP1 DUP1 SWAP4 SWAP5 SWAP2 PUSH2 0x182C DUP3 ISZERO ISZERO PUSH2 0x3080 JUMP JUMPDEST DUP6 PUSH2 0x32B5 JUMP JUMPDEST SWAP5 DUP6 MLOAD ISZERO PUSH2 0x1D0B JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP1 MLOAD SWAP4 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x20 SWAP5 DUP6 DUP2 DUP1 PUSH2 0x18B5 DUP6 ADDRESS CALLER DUP12 DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 SWAP5 PUSH1 0x60 DUP3 ADD SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP4 MSTORE AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB DUP2 PUSH0 DUP13 DUP13 AND GAS CALL DUP1 ISZERO PUSH2 0x1D01 JUMPI PUSH2 0x1CE4 JUMPI JUMPDEST POP SWAP5 SWAP2 PUSH0 SWAP5 JUMPDEST DUP9 MLOAD DUP7 LT ISZERO PUSH2 0x1CDD JUMPI DUP8 PUSH2 0x18E2 DUP8 DUP12 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND SWAP4 DUP4 MLOAD SWAP9 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP11 MSTORE PUSH0 DUP11 DUP9 DUP2 DUP10 GAS STATICCALL SWAP10 DUP11 ISZERO PUSH2 0x1B43 JUMPI DUP12 SWAP1 PUSH0 SWAP12 PUSH2 0x1CB5 JUMPI JUMPDEST POP DUP2 PUSH2 0x1931 DUP11 PUSH2 0x1938 SWAP4 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND PUSH2 0x2E9F JUMP JUMPDEST SWAP10 PUSH0 SWAP11 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1CA4 JUMPI DUP4 PUSH2 0x1951 DUP3 DUP6 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND DUP5 DUP7 AND EQ ISZERO DUP1 PUSH2 0x1C91 JUMPI JUMPDEST PUSH2 0x196A JUMPI PUSH1 0x1 ADD PUSH2 0x193D JUMP JUMPDEST SWAP1 POP DUP3 SWAP12 POP PUSH2 0x1981 SWAP2 SWAP11 SWAP7 SWAP6 SWAP5 SWAP10 SWAP11 SWAP8 SWAP4 SWAP8 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND SWAP1 JUMPDEST DUP10 DUP3 AND SWAP1 DUP2 ISZERO PUSH2 0x1C35 JUMPI DUP5 MLOAD PUSH32 0xB2B55D7000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP3 DUP10 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 DUP11 DUP2 DUP4 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1485 JUMPI SWAP1 DUP9 SWAP2 PUSH0 SWAP2 PUSH2 0x1C04 JUMPI JUMPDEST POP LT PUSH2 0x1B83 JUMPI DUP13 MLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 ADD SWAP2 DUP3 GT PUSH2 0x1B59 JUMPI POP DUP4 DUP8 SWAP3 DUP12 SWAP3 DUP14 EQ PUSH0 EQ PUSH2 0x1B4D JUMPI DUP10 PUSH0 DUP13 PUSH2 0x1A85 DUP11 JUMPDEST DUP13 MLOAD SWAP14 DUP15 SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH32 0x6E81221C00000000000000000000000000000000000000000000000000000000 DUP8 MSTORE DUP7 ADD SWAP3 SWAP4 PUSH1 0x60 SWAP3 SWAP2 SWAP6 SWAP5 PUSH1 0x80 DUP6 ADD SWAP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 DUP1 SWAP3 AND DUP8 MSTORE AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE AND SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP6 DUP7 ISZERO PUSH2 0x1B43 JUMPI DUP11 DUP14 DUP12 SWAP4 DUP15 SWAP4 PUSH0 SWAP11 PUSH2 0x1B03 JUMPI JUMPDEST POP SWAP1 DUP3 SWAP2 PUSH1 0x1 SWAP9 SWAP10 SWAP11 SWAP12 DUP6 PUSH2 0x1AB5 PUSH2 0x1ADC SWAP7 DUP6 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP10 SWAP7 DUP8 DUP2 MSTORE DUP7 DUP14 PUSH0 KECCAK256 SWAP3 AND PUSH0 MSTORE MSTORE PUSH2 0x1AD5 DUP12 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x3039 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP9 MSTORE DUP5 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE DUP8 MSTORE DUP4 PUSH0 KECCAK256 PUSH2 0x1AF8 DUP7 DUP3 SLOAD PUSH2 0x3073 JUMP JUMPDEST SWAP1 SSTORE SWAP4 SWAP7 ADD SWAP5 PUSH2 0x18CE JUMP JUMPDEST SWAP5 SWAP4 POP SWAP7 SWAP8 SWAP9 POP POP POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1B3C JUMPI JUMPDEST PUSH2 0x1B20 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI MLOAD SWAP5 SWAP4 SWAP3 DUP9 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP15 SWAP1 PUSH2 0x1ADC PUSH2 0x1A9D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1B16 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP10 PUSH0 DUP13 PUSH2 0x1A85 ADDRESS PUSH2 0x1A1D JUMP JUMPDEST PUSH1 0x11 DUP11 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP9 PUSH1 0x27 PUSH1 0x84 SWAP3 DUP13 DUP10 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C697175696469747920696E20706F6F6C2066 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F72207377617000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 SWAP3 POP DUP13 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1C2E JUMPI JUMPDEST PUSH2 0x1C1D DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI DUP8 SWAP1 MLOAD PUSH0 PUSH2 0x19D4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1C13 JUMP JUMPDEST PUSH1 0x64 DUP9 DUP11 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2076616C6964206E65787420746F6B656E20666F756E6400000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH2 0x1C9C DUP2 DUP4 PUSH2 0x2E5E JUMP JUMPDEST MLOAD ISZERO ISZERO PUSH2 0x195E JUMP JUMPDEST POP POP POP SWAP9 SWAP1 SWAP5 SWAP8 SWAP4 SWAP3 SWAP2 SWAP7 SWAP8 PUSH2 0x1985 JUMP JUMPDEST PUSH2 0x1938 SWAP2 SWAP12 POP PUSH2 0x1931 DUP11 PUSH2 0x1CD3 DUP6 SWAP4 RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x57A DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST SWAP14 SWAP4 POP POP POP PUSH2 0x1922 JUMP JUMPDEST DUP3 MLOAD DUP8 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1CFA SWAP1 DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x4C6 JUMPI PUSH2 0x4B8 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST POP PUSH0 PUSH2 0x18C8 JUMP JUMPDEST DUP4 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP3 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20726F75746520666F756E64000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x558 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1DB4 PUSH2 0x2B6A JUMP JUMPDEST PUSH2 0x1DBC PUSH2 0x3218 JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH0 SLOAD AND OR PUSH0 SSTORE PUSH0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x558 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH2 0x1E1E PUSH2 0x3218 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND SWAP1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST POP CALLVALUE PUSH2 0x558 JUMPI PUSH2 0x1EB3 CALLDATASIZE PUSH2 0x2CB6 JUMP JUMPDEST PUSH2 0x1EC1 DUP3 SWAP7 SWAP4 SWAP3 ISZERO ISZERO PUSH2 0x3080 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 PUSH0 SLOAD AND SWAP6 DUP5 MLOAD DUP1 SWAP8 PUSH32 0x2D5E94A700000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x20 SWAP9 DUP10 SWAP2 DUP2 DUP1 PUSH2 0x1F3E DUP11 DUP14 DUP11 DUP5 ADD SWAP1 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP4 PUSH1 0x40 DUP4 ADD SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP5 MSTORE AND SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x14AB JUMPI SWAP1 DUP3 SWAP2 PUSH0 SWAP2 PUSH2 0x216E JUMPI JUMPDEST POP DUP7 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER DUP6 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP13 SWAP1 MSTORE DUP5 DUP11 AND SWAP10 SWAP3 SWAP1 SWAP4 AND SWAP3 DUP11 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB DUP2 PUSH0 DUP14 GAS CALL DUP1 ISZERO PUSH2 0xA04 JUMPI DUP12 SWAP3 DUP12 SWAP3 DUP10 SWAP3 PUSH2 0x2151 JUMPI JUMPDEST POP DUP10 MLOAD PUSH32 0x6E81221C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND DUP9 DUP3 ADD SWAP1 DUP2 MSTORE SWAP3 DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP14 SWAP1 SWAP14 MSTORE DUP8 AND PUSH1 0x60 DUP3 ADD MSTORE DUP12 SWAP1 DUP2 SWAP1 PUSH1 0x80 ADD SUB DUP2 PUSH0 DUP7 GAS CALL SWAP8 DUP9 ISZERO PUSH2 0x1485 JUMPI DUP10 SWAP11 PUSH0 SWAP11 SWAP9 SWAP10 PUSH2 0x2111 JUMPI JUMPDEST POP SWAP3 DUP3 PUSH2 0x20D4 SWAP9 SWAP8 SWAP6 SWAP3 DUP12 SWAP8 SWAP6 PUSH0 SWAP6 DUP7 MSTORE PUSH1 0x1 DUP11 MSTORE DUP12 DUP7 KECCAK256 SWAP1 DUP7 MSTORE DUP10 MSTORE PUSH2 0x205B DUP12 DUP7 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x3039 JUMP JUMPDEST SWAP1 SSTORE DUP4 MSTORE PUSH1 0x1 DUP8 MSTORE DUP9 DUP4 KECCAK256 SWAP5 AND SWAP4 DUP5 DUP4 MSTORE DUP7 MSTORE DUP8 DUP3 KECCAK256 PUSH2 0x207C DUP7 DUP3 SLOAD PUSH2 0x3073 JUMP JUMPDEST SWAP1 SSTORE DUP8 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2107 JUMPI PUSH2 0x20EA JUMPI JUMPDEST POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x2100 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x4C6 JUMPI PUSH2 0x4B8 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST POP PUSH0 PUSH2 0x20E3 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 SWAP4 SWAP8 SWAP6 SWAP3 SWAP11 POP DUP9 SWAP2 SWAP7 SWAP5 SWAP9 RETURNDATASIZE DUP4 GT PUSH2 0x214A JUMPI JUMPDEST PUSH2 0x212F DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI SWAP1 MLOAD SWAP8 DUP10 SWAP7 SWAP4 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 SWAP3 SWAP2 PUSH0 PUSH2 0x2030 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2125 JUMP JUMPDEST PUSH2 0x2167 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x4C6 JUMPI PUSH2 0x4B8 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST POP PUSH0 PUSH2 0x1FB6 JUMP JUMPDEST DUP1 SWAP3 POP DUP10 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x219F JUMPI JUMPDEST PUSH2 0x2187 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI PUSH2 0x2199 DUP3 SWAP2 PUSH2 0x2D6C JUMP JUMPDEST PUSH0 PUSH2 0x1F53 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x217D JUMP JUMPDEST POP CALLVALUE PUSH2 0x558 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH2 0x21F7 PUSH2 0x2B6A JUMP JUMPDEST AND SWAP2 DUP1 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER DUP4 DUP3 ADD MSTORE DUP6 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2107 JUMPI PUSH0 SWAP2 PUSH2 0x2498 JUMPI JUMPDEST POP DUP2 MLOAD SWAP1 PUSH32 0x18160DDD00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP7 DUP3 DUP6 DUP2 DUP9 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1D01 JUMPI PUSH0 SWAP3 PUSH2 0x2469 JUMPI JUMPDEST POP PUSH2 0x2710 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x243D JUMPI DUP2 ISZERO PUSH2 0x2411 JUMPI PUSH2 0x229F SWAP2 PUSH1 0x64 SWAP2 DIV LT ISZERO PUSH2 0x2F73 JUMP JUMPDEST DUP1 MLOAD SWAP2 PUSH32 0xF47B45E800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH0 DUP4 DUP3 DUP2 DUP4 DUP9 GAS CALL SWAP6 DUP7 ISZERO PUSH2 0x2107 JUMPI PUSH0 SWAP4 PUSH0 SWAP8 PUSH2 0x23B5 JUMPI JUMPDEST POP PUSH0 DUP4 MLOAD DUP1 SWAP4 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 DUP9 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1D01 JUMPI PUSH0 SWAP3 PUSH2 0x2399 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x563 JUMPI DUP1 PUSH2 0x2331 PUSH1 0x1 SWAP3 DUP8 PUSH2 0x2E5E JUMP JUMPDEST MLOAD DUP8 PUSH0 MSTORE DUP3 SWAP1 DUP2 DUP6 MSTORE DUP7 PUSH0 KECCAK256 DUP11 PUSH2 0x2348 DUP6 DUP10 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP6 MSTORE PUSH2 0x235C DUP8 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x3039 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x2368 DUP3 DUP12 PUSH2 0x2E5E JUMP JUMPDEST MLOAD SWAP1 DUP9 PUSH0 MSTORE DUP5 MSTORE DUP6 PUSH0 KECCAK256 DUP10 PUSH2 0x237D DUP5 DUP9 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP5 MSTORE PUSH2 0x2391 DUP7 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x3073 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x231B JUMP JUMPDEST PUSH2 0x23AE SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x57A DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x2318 JUMP JUMPDEST SWAP4 POP SWAP6 POP RETURNDATASIZE DUP1 PUSH0 DUP6 RETURNDATACOPY PUSH2 0x23C8 DUP2 DUP6 PUSH2 0x2C0E JUMP JUMPDEST DUP4 ADD SWAP3 DUP3 DUP2 DUP6 SUB SLT PUSH2 0x558 JUMPI DUP1 MLOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF SWAP5 DUP6 DUP2 GT PUSH2 0x558 JUMPI DUP2 PUSH2 0x23F4 SWAP2 DUP5 ADD PUSH2 0x2FD8 JUMP JUMPDEST SWAP5 DUP9 DUP4 ADD MLOAD SWAP1 DUP2 GT PUSH2 0x558 JUMPI PUSH2 0x240A SWAP3 ADD PUSH2 0x2FD8 JUMP JUMPDEST SWAP6 PUSH0 PUSH2 0x22DD JUMP JUMPDEST PUSH1 0x12 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x11 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 SWAP2 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2491 JUMPI JUMPDEST PUSH2 0x2481 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI MLOAD SWAP1 PUSH0 PUSH2 0x2275 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2477 JUMP JUMPDEST SWAP1 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x24BE JUMPI JUMPDEST PUSH2 0x24AF DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI MLOAD PUSH0 PUSH2 0x2239 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x24A5 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x558 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0x255B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH2 0x25B3 PUSH2 0x2B6A JUMP JUMPDEST PUSH1 0x24 SWAP3 DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x558 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x558 JUMPI DUP1 DUP5 ADD CALLDATALOAD PUSH2 0x25DF DUP2 PUSH2 0x2C7C JUMP JUMPDEST SWAP4 PUSH2 0x25EC DUP5 MLOAD SWAP6 DUP7 PUSH2 0x2C0E JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 SWAP2 DUP3 DUP7 ADD SWAP4 CALLDATASIZE DUP10 DUP4 DUP4 ADD ADD GT PUSH2 0x558 JUMPI DUP2 PUSH0 SWAP3 DUP11 DUP7 SWAP4 ADD DUP8 CALLDATACOPY DUP8 ADD ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x0 AND DUP1 ADDRESS EQ SWAP1 DUP2 ISZERO PUSH2 0x287F JUMPI JUMPDEST POP PUSH2 0x2857 JUMPI PUSH2 0x265E PUSH2 0x3218 JUMP JUMPDEST DUP2 AND SWAP5 DUP5 MLOAD PUSH32 0x52D1902D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 DUP2 DUP10 DUP2 DUP11 GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0x2828 JUMPI JUMPDEST POP PUSH2 0x26C9 JUMPI POP POP POP POP POP MLOAD SWAP2 PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP8 DUP8 DUP8 SWAP5 SWAP4 DUP12 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP2 DUP3 DUP2 SUB PUSH2 0x27FB JUMPI POP DUP6 EXTCODESIZE ISZERO PUSH2 0x27CE JUMPI POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 MLOAD SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP3 MLOAD ISZERO PUSH2 0x279B JUMPI POP POP PUSH0 PUSH2 0x563 SWAP6 DUP2 SWAP3 MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x2791 JUMPI RETURNDATASIZE PUSH2 0x2783 PUSH2 0x277A DUP3 PUSH2 0x2C7C JUMP JUMPDEST SWAP3 MLOAD SWAP3 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 MSTORE PUSH0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x3775 JUMP JUMPDEST POP PUSH1 0x60 SWAP3 POP PUSH2 0x3775 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP CALLVALUE PUSH2 0x27A9 JUMPI STOP JUMPDEST PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 DUP4 DUP9 MLOAD SWAP2 PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP5 SWAP1 DUP9 MLOAD SWAP2 PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2850 JUMPI JUMPDEST PUSH2 0x2840 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI MLOAD SWAP1 PUSH0 PUSH2 0x2695 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2836 JUMP JUMPDEST DUP7 DUP6 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP DUP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ ISZERO PUSH0 PUSH2 0x2651 JUMP JUMPDEST POP CALLVALUE PUSH2 0x558 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH2 0x28E5 PUSH2 0x2B6A JUMP JUMPDEST SWAP2 PUSH2 0x28EE PUSH2 0x2B8D JUMP JUMPDEST SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 PUSH0 SLOAD AND SWAP1 DUP4 MLOAD SWAP6 DUP7 SWAP3 PUSH32 0x2D5E94A700000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x20 SWAP8 DUP9 SWAP2 DUP2 DUP1 PUSH2 0x296D DUP8 DUP8 DUP12 DUP5 ADD SWAP1 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP4 PUSH1 0x40 DUP4 ADD SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP5 MSTORE AND SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x1B43 JUMPI SWAP1 DUP8 SWAP5 SWAP4 SWAP3 SWAP2 PUSH0 SWAP4 PUSH2 0x2A2C JUMPI JUMPDEST POP DUP6 MLOAD PUSH32 0x4AA0665200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND SWAP5 DUP2 ADD SWAP5 DUP6 MSTORE SWAP2 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x40 DUP5 ADD MSTORE SWAP5 DUP6 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x60 ADD JUMPDEST SUB SWAP3 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xEBD JUMPI PUSH0 SWAP3 PUSH2 0x29FD JUMPI POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2A25 JUMPI JUMPDEST PUSH2 0x2A15 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI MLOAD SWAP1 PUSH0 PUSH2 0x20E3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2A0B JUMP JUMPDEST DUP6 DUP2 SWAP7 SWAP3 SWAP5 POP RETURNDATASIZE DUP4 GT PUSH2 0x2A62 JUMPI JUMPDEST PUSH2 0x2A44 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI PUSH2 0x29E4 SWAP6 PUSH2 0x2A5A DUP9 SWAP6 PUSH2 0x2D6C JUMP JUMPDEST SWAP3 SWAP1 SWAP7 PUSH2 0x2985 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2A3A JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x558 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH0 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x558 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH2 0xAE2 SWAP1 PUSH2 0x2AFE PUSH2 0x2AF9 PUSH2 0x2B6A JUMP JUMPDEST PUSH2 0x2E9F JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2BD3 JUMP JUMPDEST CALLVALUE PUSH2 0x558 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH1 0x20 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x558 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x558 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x558 JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2BFA JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2BEC JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2C4F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2C4F JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x80 SWAP2 ADD SLT PUSH2 0x558 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x558 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x558 JUMPI SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x558 JUMPI SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x558 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x558 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x558 JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2C4F JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x558 JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x558 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x558 JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x558 JUMPI DUP3 MLOAD PUSH2 0x2DC3 DUP2 PUSH2 0x2D54 JUMP JUMPDEST SWAP4 PUSH2 0x2DD1 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x2C0E JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x558 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2DF8 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 DUP1 SWAP2 PUSH2 0x2E04 DUP5 PUSH2 0x2D6C JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x2DEA JUMP JUMPDEST SWAP1 PUSH2 0x2E19 DUP3 PUSH2 0x2D54 JUMP JUMPDEST PUSH2 0x2E26 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x2C0E JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x2E54 DUP3 SWAP5 PUSH2 0x2D54 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2E72 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND PUSH1 0x40 SWAP3 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH0 DUP3 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2F68 JUMPI PUSH0 SWAP3 PUSH2 0x2F4C JUMPI JUMPDEST POP PUSH2 0x2F03 DUP3 MLOAD PUSH2 0x2E0F JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2F43 JUMPI PUSH1 0x1 SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE DUP9 PUSH0 KECCAK256 SWAP1 DUP6 PUSH2 0x2F29 DUP5 DUP10 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE MSTORE DUP8 PUSH0 KECCAK256 SLOAD PUSH2 0x2F3C DUP3 DUP9 PUSH2 0x2E5E JUMP JUMPDEST MSTORE ADD PUSH2 0x2F06 JUMP JUMPDEST POP SWAP3 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH2 0x2F61 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x57A DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x2EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2F7A JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x558 JUMPI DUP2 MLOAD SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2FF3 DUP2 PUSH2 0x2D54 JUMP JUMPDEST SWAP4 PUSH2 0x3001 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x2C0E JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x558 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x302A JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x301C JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x3046 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x3046 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x3087 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x558 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x558 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x558 JUMPI DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x558 JUMPI PUSH2 0x3123 SWAP3 ADD PUSH2 0x2FD8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x2E72 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x558 JUMPI SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x31E8 JUMPI PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD SWAP1 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND OR SWAP1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND CALLER SUB PUSH2 0x3258 JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x3046 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 PUSH0 DUP3 DUP2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0xD88FF1F400000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2F68 JUMPI PUSH0 SWAP2 PUSH2 0x3542 JUMPI JUMPDEST POP DUP1 MLOAD SWAP4 PUSH2 0x3318 DUP6 PUSH2 0x2E0F JUMP JUMPDEST SWAP2 PUSH0 SWAP4 PUSH2 0x3324 DUP8 PUSH2 0x2D54 JUMP JUMPDEST SWAP3 PUSH2 0x3332 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2C0E JUMP JUMPDEST DUP8 DUP5 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x335F DUP10 PUSH2 0x2D54 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP7 ADD CALLDATACOPY PUSH2 0x336F DUP9 PUSH2 0x2E0F JUMP JUMPDEST SWAP7 PUSH0 PUSH1 0x1 SWAP2 DUP10 MLOAD ISZERO PUSH2 0x2E72 JUMPI DUP5 AND PUSH1 0x20 DUP11 ADD MSTORE JUMPDEST DUP2 DUP2 LT PUSH2 0x33BC JUMPI POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2C4F JUMPI PUSH1 0x40 MSTORE PUSH0 DUP2 MSTORE PUSH0 CALLDATASIZE DUP2 CALLDATACOPY SWAP1 JUMP JUMPDEST DUP4 PUSH2 0x33D0 PUSH2 0x33C9 DUP4 PUSH2 0x3288 JUMP JUMPDEST SWAP3 DUP12 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND DUP5 DUP5 AND DUP2 EQ PUSH2 0x34FB JUMPI PUSH0 JUMPDEST DUP12 DUP2 LT PUSH2 0x33EB JUMPI POP POP PUSH2 0x3383 JUMP JUMPDEST PUSH2 0x33F5 DUP2 DUP10 PUSH2 0x2E5E JUMP JUMPDEST MLOAD ISZERO PUSH2 0x3404 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x33DD JUMP JUMPDEST DUP6 PUSH2 0x340F DUP3 DUP10 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH0 DUP3 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2F68 JUMPI DUP16 DUP6 SWAP4 PUSH0 SWAP4 PUSH2 0x34DF JUMPI JUMPDEST POP DUP4 PUSH2 0x345D DUP2 DUP6 PUSH2 0x355C JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x34CD JUMPI JUMPDEST POP POP POP PUSH2 0x3473 JUMPI JUMPDEST POP POP PUSH2 0x33FC JUMP JUMPDEST SWAP1 PUSH2 0x347D SWAP2 PUSH2 0x366F JUMP JUMPDEST DUP7 PUSH2 0x3488 DUP4 DUP11 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND PUSH2 0x3493 DUP13 PUSH2 0x3288 JUMP JUMPDEST SWAP12 PUSH2 0x349E SWAP1 DUP13 PUSH2 0x2E5E JUMP JUMPDEST MSTORE DUP7 DUP13 PUSH2 0x34AA DUP8 PUSH2 0x3288 JUMP JUMPDEST SWAP7 PUSH2 0x34B4 SWAP2 PUSH2 0x2E5E JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH2 0x34C2 DUP2 DUP10 PUSH2 0x2E5E JUMP JUMPDEST PUSH1 0x1 SWAP1 MSTORE DUP2 PUSH0 PUSH2 0x346C JUMP JUMPDEST PUSH2 0x34D7 SWAP4 POP PUSH2 0x35A9 JUMP JUMPDEST DUP16 DUP4 PUSH0 PUSH2 0x3464 JUMP JUMPDEST PUSH2 0x34F4 SWAP2 SWAP4 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x57A DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST SWAP2 PUSH0 PUSH2 0x3451 JUMP JUMPDEST POP POP POP POP SWAP5 POP POP POP SWAP4 POP SWAP2 POP PUSH2 0x3510 DUP3 PUSH2 0x2E0F JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3521 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP1 DUP4 PUSH2 0x352F PUSH1 0x1 SWAP4 DUP6 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND PUSH2 0x353B DUP3 DUP9 PUSH2 0x2E5E JUMP JUMPDEST MSTORE ADD PUSH2 0x3513 JUMP JUMPDEST PUSH2 0x3556 SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x57A DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST PUSH0 PUSH2 0x330B JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x35A2 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x3588 DUP4 DUP7 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND SWAP1 DUP4 AND EQ PUSH2 0x359A JUMPI PUSH1 0x1 ADD PUSH2 0x355F JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x4 SWAP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP2 PUSH0 PUSH2 0x35D0 DUP5 PUSH2 0x2E9F JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD SWAP7 DUP8 DUP1 SWAP3 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x2F68 JUMPI PUSH0 SWAP6 PUSH2 0x3653 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x3649 JUMPI DUP2 PUSH2 0x3622 DUP3 DUP9 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND DUP3 DUP5 AND EQ PUSH2 0x3634 JUMPI PUSH1 0x1 ADD PUSH2 0x360E JUMP JUMPDEST SWAP3 SWAP2 POP POP PUSH2 0x3643 SWAP3 SWAP4 POP PUSH2 0x2E5E JUMP JUMPDEST MLOAD LT ISZERO SWAP1 JUMP JUMPDEST POP POP POP POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3668 SWAP2 SWAP6 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x57A DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST SWAP4 PUSH0 PUSH2 0x360B JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x36BE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x369B DUP4 DUP7 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND DUP2 DUP5 AND SUB PUSH2 0x36AE JUMPI POP PUSH1 0x1 ADD PUSH2 0x3672 JUMP JUMPDEST SWAP3 PUSH2 0x36B9 SWAP3 POP PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F7420666F756E6420696E20706F6F6C000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x374B JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x37B4 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x378A JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x380C JUMPI JUMPDEST PUSH2 0x37C5 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE AND PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x37BD JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xB5 DELEGATECALL CALLDATASIZE 0x21 0x23 TLOAD LOG2 SIGNEXTEND PUSH0 PUSH1 0x4 JUMPDEST SWAP11 0xBA PUSH32 0x731FEE953A8636E849AE9F04AB5F0CFC64736F6C634300081900330000000000 ","sourceMap":"2066:14427:14:-:0;;;;;;;1171:4:2;1163:13;;2066:14427:14;;;;;;1163:13:2;2066:14427:14;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":11149,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_22293":{"entryPoint":11114,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_22313":{"entryPoint":11184,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":11628,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_addresst_addresst_uint256t_address":{"entryPoint":11446,"id":null,"parameterSlots":1,"returnSlots":4},"abi_decode_array_address_dyn_calldata":{"entryPoint":11555,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_address_dyn_fromMemory":{"entryPoint":11661,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_uint256_dyn_fromMemory":{"entryPoint":12541,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_uint256_dyn_memory_ptr_fromMemory":{"entryPoint":12248,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":12517,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_address_uint256_address":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":11219,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":11791,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":11604,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":11388,"id":null,"parameterSlots":1,"returnSlots":1},"calldata_array_index_access_uint256_dyn_calldata":{"entryPoint":12582,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_uint256":{"entryPoint":12345,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":12403,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":11278,"id":null,"parameterSlots":2,"returnSlots":0},"fun_checkInitializing":{"entryPoint":14108,"id":370,"parameterSlots":0,"returnSlots":0},"fun_checkOwner":{"entryPoint":12824,"id":122,"parameterSlots":0,"returnSlots":0},"fun_containsToken":{"entryPoint":13660,"id":3012,"parameterSlots":2,"returnSlots":1},"fun_findOptimalRoute":{"entryPoint":12981,"id":2977,"parameterSlots":3,"returnSlots":1},"fun_getOtherTokenInPool":{"entryPoint":13935,"id":3113,"parameterSlots":2,"returnSlots":1},"fun_getReserves":{"entryPoint":11935,"id":3590,"parameterSlots":1,"returnSlots":1},"fun_hasSufficientLiquidity":{"entryPoint":13737,"id":3074,"parameterSlots":3,"returnSlots":1},"fun_transferOwnership_inner":{"entryPoint":12631,"id":null,"parameterSlots":1,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":14197,"id":1967,"parameterSlots":3,"returnSlots":1},"increment_uint256":{"entryPoint":12936,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_address_dyn":{"entryPoint":11870,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_calldatat_address":{"entryPoint":12598,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":12147,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_335f":{"entryPoint":12416,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"468":[{"length":32,"start":9484},{"length":32,"start":9766}]},"linkReferences":{},"object":"608060409080825260049081361015610016575f80fd5b5f3560e01c9081630d8e6e2c14612b09575080633e99c1e414612aba5780634056c37f146117925780634219dc4014612a695780634aa06652146128ad5780634f1ef2861461258157806352d1902d146124c55780635568081a146121a65780636e81221c14611ea4578063715018a614611de857806372591be514611d685780637442eca6146118075780638628991e146117925780638da5cb5b146117215780638f2248bc146115a3578063ad3cb1cc146114b5578063ad41426314611294578063ae3cce1c146111a3578063c4d66de814610fb3578063e74e9b0614610a0e578063ec0cd2eb146107a7578063f2fde38b146107605763f31abcc41461011d575f80fd5b346105585760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055857803590610157612b8d565b91610160612bb0565b81156107035784517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523384820190815230602082810191909152929173ffffffffffffffffffffffffffffffffffffffff878116929091908590829081906040010381865afa80156105b75786915f916106d2575b5010610676578751967f70a082310000000000000000000000000000000000000000000000000000000097888152338882015260249686828981885afa801561066c5787925f91610639575b509261023482610292951015612f73565b8b5193849283927f23b872dd000000000000000000000000000000000000000000000000000000008452338d850160409194939294606082019573ffffffffffffffffffffffffffffffffffffffff80921683521660208201520152565b03815f875af19081156105b7575f9161061c575b50156105c1578751917f89afcb44000000000000000000000000000000000000000000000000000000008352818416878401525f83878183855af19283156105b7575f93610593575b508851907f67e4ac2c0000000000000000000000000000000000000000000000000000000082525f828981845afa918215610589575f92610565575b505f5b8251811015610563578a878a8a8d88610347878a612e5e565b511694519485938492835230908301525afa9081156104cd575f91610532575b506103728287612e5e565b51116104d7576103828186612e5e565b51825f52600188528b5f20856103988487612e5e565b51165f5288526103ac8c5f20918254613073565b9055610425878c8b895f896103c1888b612e5e565b5116926103ce888d612e5e565b519451968795869485937fa9059cbb00000000000000000000000000000000000000000000000000000000855284016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af19081156104cd575f916104a0575b50156104455760010161032e565b60648960158a8a8f51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4173736574207472616e73666572206661696c656400000000000000000000006044820152fd5b6104c09150883d8a116104c6575b6104b88183612c0e565b8101906130e5565b5f610437565b503d6104ae565b8c513d5f823e3d90fd5b60648960168a8a8f51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f496e73756666696369656e74204c6971756964697479000000000000000000006044820152fd5b90508781813d831161055c575b6105498183612c0e565b8101031261055857515f610367565b5f80fd5b503d61053f565b005b6105829192503d805f833e61057a8183612c0e565b810190612d8d565b905f61032b565b8a513d5f823e3d90fd5b6105b09193503d805f833e6105a88183612c0e565b8101906130fd565b915f6102ef565b89513d5f823e3d90fd5b606486601387878c51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f5472616e7366657246726f6d206661696c6564000000000000000000000000006044820152fd5b6106339150853d87116104c6576104b88183612c0e565b5f6102a6565b83819492503d8311610665575b6106508183612c0e565b81010312610558579051869190610234610223565b503d610646565b8b513d5f823e3d90fd5b606486858a51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601660248201527f496e73756666696369656e7420616c6c6f77616e6365000000000000000000006044820152fd5b809250868092503d83116106fc575b6106eb8183612c0e565b81010312610558578590515f6101d7565b503d6106e1565b60648360208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601f60248201527f5368617265206d7573742062652067726561746572207468616e207a65726f006044820152fd5b346105585760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105585761056361079a612b6a565b6107a2613218565b613157565b50346105585760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055857803567ffffffffffffffff8111610558576107f59036908301612d23565b916107fe612b8d565b610806612bb0565b9373ffffffffffffffffffffffffffffffffffffffff8092169186517f67e4ac2c0000000000000000000000000000000000000000000000000000000081525f818681875afa908115610a04575f916109ea575b505f5b815181101561092d57805f8a856108776108f49587612e5e565b511661088484898d613126565b35908984528a60209485946001865280822084835286528082206108a9868254613039565b9055517f23b872dd0000000000000000000000000000000000000000000000000000000081523392810192835230602084015260408301949094529296879384929091839160600190565b03925af192831561066c5760019361090f575b50500161085d565b8161092592903d106104c6576104b88183612c0e565b505f80610907565b87898886888a888551967fde836ebd00000000000000000000000000000000000000000000000000000000885216908601528360248601528160448601527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821161055857845f606482602096819660051b80918484013781010301925af19081156109e157506109ba57005b602090813d83116109da575b6109d08183612c0e565b8101031261055857005b503d6109c6565b513d5f823e3d90fd5b6109fe91503d805f833e61057a8183612c0e565b5f61085a565b88513d5f823e3d90fd5b50346105585760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105585767ffffffffffffffff813581811161055857610a5d9036908401612d23565b91909260243582811161055857610a779036908301612d23565b92909160443582811161055857610a919036908301612d23565b91909260643590811161055857610aab9036908301612d23565b86889392931480610faa575b80610fa1575b15610f4457610acb88612e0f565b985f5b898110610ae6578b5180610ae28d82612bd3565b0390f35b80888b8e8786610b428f878f918f610b08610ba09c610b1092610b3796613126565b351515613080565b610b3c610b378373ffffffffffffffffffffffffffffffffffffffff9a8b5f541698613126565b613136565b98613126565b90835180809981947f2d5e94a70000000000000000000000000000000000000000000000000000000083526020998a97840190602090939293604083019473ffffffffffffffffffffffffffffffffffffffff809216845216910152565b03915afa9081156109e1578a8f88938e985f91610ee5575b5087879387610bd5610b3784610c279e9784610bdc98169b613126565b1693613126565b83517f23b872dd00000000000000000000000000000000000000000000000000000000815233818e01908152306020820152913560408301529889929183915f918391606090910190565b03925af18015610ebd578f8f8f908f8f938f918f948f9d908f610c5b8f8f9b968197938d83978496610ec7575b5050613126565b610c6490613136565b96610c6e92613126565b610c7790613136565b96610c8192613126565b359b610c8c92613126565b610c9590613136565b85517f6e81221c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9283169381019384529382166020840152604083019a909a52909816606089015296879081906080010381855a905f91f1928315610ebd578f8f918f928f938f938f978f968f968f915f9c610e55575b610e129f508e610dbc978f9e9d9c9b9994978f8f908e610dae915f9f9a9b879c610b379e610d548a610db59d610b379d613126565b35905f8390528d610d72610b378d600197888a525f8b902095613126565b165f5284525f85610d869120918254613039565b90555f5281528f829020908a610da0610b378a8a8a613126565b165f52528e20918254613073565b9055613126565b1697613126565b9251988995869485937fa9059cbb00000000000000000000000000000000000000000000000000000000855284016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af1928315610e4b57600193610e2d575b505001610ace565b81610e4392903d106104c6576104b88183612c0e565b505f80610e25565b8e513d5f823e3d90fd5b5050509b975050505094505050508281813d8311610eb6575b610e788183612c0e565b81010312610558578f94858f8f8f938f958f8f968f94998f918f94938e8e9d8196938f8395519850509794999b9c9d929350979499959d5050610d1f565b503d610e6e565b50513d5f823e3d90fd5b81610edd92903d106104c6576104b88183612c0e565b508d5f610c54565b985050505050508184813d8311610f3d575b610f018183612c0e565b8101031261055857848f838f610bdc878f928f90610bd5610b37848b93610c279f610f2c8691612d6c565b985050979e50505050509350610bb8565b503d610ef7565b60648260208c51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601c60248201527f496e70757420617272617973206c656e677468206d69736d61746368000000006044820152fd5b50808414610abd565b50838714610ab7565b50346105585760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055857610feb612b6a565b907ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0091825460ff81861c16159267ffffffffffffffff82168015908161119b575b6001149081611191575b159081611188575b50611161575090818360017fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000073ffffffffffffffffffffffffffffffffffffffff951617865561112c575b5061109261371c565b61109a61371c565b6110a261371c565b6110ab33613157565b167fffffffffffffffffffffffff00000000000000000000000000000000000000005f5416175f556110d957005b7fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d291817fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff602093541690555160018152a1005b7fffffffffffffffffffffffffffffffffffffffffffffff00000000000000000016680100000000000000011784555f611089565b85517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b9050155f61103e565b303b159150611036565b85915061102c565b503461055857602090817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610558576024925f6111e1612b6a565b73ffffffffffffffffffffffffffffffffffffffff95869182845416855196879485937fb4340e6a00000000000000000000000000000000000000000000000000000000855216908301525afa918215610ebd575f92611278575b50918251928180850191818652845180935285019301915f5b8281106112625785850386f35b8351871685529381019392810192600101611255565b61128d9192503d805f833e61057a8183612c0e565b905f61123c565b503461055857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610558576112cb612b6a565b73ffffffffffffffffffffffffffffffffffffffff90816112ea612b8d565b168451917f0723c999000000000000000000000000000000000000000000000000000000008352838116858401525f8360248183865af19283156114ab575f9361148f575b508551927f67e4ac2c0000000000000000000000000000000000000000000000000000000084525f848781865afa938415611485575f94611469575b505f5b845181101561056357806113856114309284612e5e565b51855f52602090600182528a5f208961139e858b612e5e565b51165f5282526113b28b5f20918254613039565b9055808a896113c1858b612e5e565b51168b5f6113cf878a612e5e565b5193518098819582947f23b872dd0000000000000000000000000000000000000000000000000000000084528d3091850160409194939294606082019573ffffffffffffffffffffffffffffffffffffffff80921683521660208201520152565b03925af19283156105895760019361144b575b50500161136e565b8161146192903d106104c6576104b88183612c0e565b505f80611443565b61147e9194503d805f833e61057a8183612c0e565b925f61136b565b87513d5f823e3d90fd5b6114a49193503d805f833e6105a88183612c0e565b915f61132f565b86513d5f823e3d90fd5b509034610558575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610558578051918183019083821067ffffffffffffffff831117611577575081526005825260208201917f352e302e3000000000000000000000000000000000000000000000000000000083527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8351948593602085525180918160208701528686015e5f85828601015201168101030190f35b6041907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b50903461055857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610558576115db612b6a565b916024359267ffffffffffffffff90818516809503610558577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00928354928660ff85881c16918215611714575b50506116ed577fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260208787877fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff68010000000000000000847fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000008b73ffffffffffffffffffffffffffffffffffffffff8c167fffffffffffffffffffffffff00000000000000000000000000000000000000005f5416175f5516171716905551908152a1005b84517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b851610159050865f611628565b8234610558575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105585760209073ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930054169051908152f35b823461055857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610558576020906117cc612b6a565b6117d4612b8d565b9073ffffffffffffffffffffffffffffffffffffffff8091165f5260018452825f2091165f528252805f20549051908152f35b5090346105585761183261181a36612cb6565b9591908093949161182c821515613080565b856132b5565b94855115611d0b5773ffffffffffffffffffffffffffffffffffffffff948051937f23b872dd0000000000000000000000000000000000000000000000000000000085526020948581806118b58530338b850160409194939294606082019573ffffffffffffffffffffffffffffffffffffffff80921683521660208201520152565b03815f8c8c165af18015611d0157611ce4575b5094915f945b8851861015611cdd57876118e2878b612e5e565b5116938351987f67e4ac2c000000000000000000000000000000000000000000000000000000008a525f8a8881895afa998a15611b43578b905f9b611cb5575b50816119318a61193893612e5e565b5116612e9f565b995f9a5f5b8251811015611ca457836119518285612e5e565b5116848616141580611c91575b61196a5760010161193d565b9050829b50611981919a969594999a979397612e5e565b5116905b898216908115611c355784517fb2b55d7000000000000000000000000000000000000000000000000000000000815282898201526024908a818381865afa908115611485579088915f91611c04575b5010611b83578c51907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201918211611b5957508387928b928d145f14611b4d57895f8c611a858a5b8c519d8e97889687957f6e81221c00000000000000000000000000000000000000000000000000000000875286019293606092919594608085019673ffffffffffffffffffffffffffffffffffffffff93848092168752166020860152604085015216910152565b03925af1958615611b43578a8d8b938e935f9a611b03575b50908291600198999a9b85611ab5611adc9685612e5e565b51165f528996878152868d5f2092165f5252611ad58b5f20918254613039565b9055612e5e565b51165f528852845f20905f528752835f20611af8868254613073565b9055939601946118ce565b94935096979850505081813d8311611b3c575b611b208183612c0e565b81010312610558575194939288908b908b908e90611adc611a9d565b503d611b16565b85513d5f823e3d90fd5b895f8c611a8530611a1d565b60118a7f4e487b71000000000000000000000000000000000000000000000000000000005f52525ffd5b8860276084928c8951937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f496e73756666696369656e74206c697175696469747920696e20706f6f6c206660448201527f6f722073776170000000000000000000000000000000000000000000000000006064820152fd5b8092508c8092503d8311611c2e575b611c1d8183612c0e565b81010312610558578790515f6119d4565b503d611c13565b6064888a8751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601960248201527f4e6f2076616c6964206e65787420746f6b656e20666f756e64000000000000006044820152fd5b50611c9c8183612e5e565b51151561195e565b505050989094979392919697611985565b611938919b506119318a611cd385933d805f833e61057a8183612c0e565b9d93505050611922565b8251878152f35b611cfa90863d88116104c6576104b88183612c0e565b505f6118c8565b83513d5f823e3d90fd5b60648260208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f4e6f20726f75746520666f756e640000000000000000000000000000000000006044820152fd5b346105585760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105585773ffffffffffffffffffffffffffffffffffffffff611db4612b6a565b611dbc613218565b167fffffffffffffffffffffffff00000000000000000000000000000000000000005f5416175f555f80f35b34610558575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055857611e1e613218565b5f73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993008054907fffffffffffffffffffffffff000000000000000000000000000000000000000082169055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b503461055857611eb336612cb6565b611ec1829693921515613080565b73ffffffffffffffffffffffffffffffffffffffff94855f541695845180977f2d5e94a700000000000000000000000000000000000000000000000000000000825260209889918180611f3e8a8d8a840190602090939293604083019473ffffffffffffffffffffffffffffffffffffffff809216845216910152565b03915afa9081156114ab579082915f9161216e575b5086517f23b872dd00000000000000000000000000000000000000000000000000000000815233858201908152306020820152604081018c9052848a169992909316928a908290819060600103815f8d5af18015610a04578b928b928992612151575b5089517f6e81221c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182168882019081529282166020840152604083019d909d52871660608201528b90819060800103815f865af197881561148557899a5f9a9899612111575b5092826120d4989795928b97955f95865260018a528b8620908652895261205b8b8620918254613039565b9055835260018752888320941693848352865287822061207c868254613073565b90558751968795869485937fa9059cbb00000000000000000000000000000000000000000000000000000000855284016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af18015612107576120ea575b5051908152f35b61210090843d86116104c6576104b88183612c0e565b505f6120e3565b82513d5f823e3d90fd5b80939795929a5088919694983d831161214a575b61212f8183612c0e565b8101031261055857905197899693959294919392915f612030565b503d612125565b61216790843d86116104c6576104b88183612c0e565b505f611fb6565b809250898092503d831161219f575b6121878183612c0e565b81010312610558576121998291612d6c565b5f611f53565b503d61217d565b503461055857602091827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105585773ffffffffffffffffffffffffffffffffffffffff91826121f7612b6a565b169180517f70a0823100000000000000000000000000000000000000000000000000000000815233838201528581602481875afa908115612107575f91612498575b508151907f18160ddd00000000000000000000000000000000000000000000000000000000825286828581885afa918215611d01575f92612469575b506127109081810291818304149015171561243d5781156124115761229f91606491041015612f73565b8051917ff47b45e80000000000000000000000000000000000000000000000000000000083525f83828183885af1958615612107575f935f976123b5575b505f835180937f67e4ac2c00000000000000000000000000000000000000000000000000000000825281885afa918215611d01575f92612399575b505f5b8251811015610563578061233160019287612e5e565b51875f528290818552865f208a6123488589612e5e565b51165f52855261235c875f20918254613039565b9055612368828b612e5e565b5190885f528452855f208961237d8488612e5e565b51165f528452612391865f20918254613073565b90550161231b565b6123ae9192503d805f833e61057a8183612c0e565b905f612318565b935095503d805f853e6123c88185612c0e565b83019282818503126105585780519367ffffffffffffffff9485811161055857816123f4918401612fd8565b94888301519081116105585761240a9201612fd8565b955f6122dd565b6012847f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b6011847f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b9091508681813d8311612491575b6124818183612c0e565b810103126105585751905f612275565b503d612477565b90508581813d83116124be575b6124af8183612c0e565b8101031261055857515f612239565b503d6124a5565b509034610558575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105585773ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016300361255b57602090517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b50817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610558576125b3612b6a565b602492833567ffffffffffffffff8111610558573660238201121561055857808401356125df81612c7c565b936125ec84519586612c0e565b818552602091828601933689838301011161055857815f928a86930187378701015273ffffffffffffffffffffffffffffffffffffffff807f00000000000000000000000000000000000000000000000000000000000000001680301490811561287f575b506128575761265e613218565b81169484517f52d1902d000000000000000000000000000000000000000000000000000000008152838189818a5afa5f9181612828575b506126c957505050505051917f4c9c8ce3000000000000000000000000000000000000000000000000000000008352820152fd5b9087878794938b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc918281036127fb5750853b156127ce5750817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790558451907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a282511561279b5750505f6105639581925190845af4913d15612791573d61278361277a82612c7c565b92519283612c0e565b81525f81943d92013e613775565b5060609250613775565b94509450505050346127a957005b7fb398979f000000000000000000000000000000000000000000000000000000008152fd5b83838851917f4c9c8ce3000000000000000000000000000000000000000000000000000000008352820152fd5b84908851917faa1d49a4000000000000000000000000000000000000000000000000000000008352820152fd5b9091508481813d8311612850575b6128408183612c0e565b810103126105585751905f612695565b503d612836565b8685517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541614155f612651565b50346105585760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610558576128e5612b6a565b916128ee612b8d565b9173ffffffffffffffffffffffffffffffffffffffff92835f54169083519586927f2d5e94a70000000000000000000000000000000000000000000000000000000084526020978891818061296d87878b840190602090939293604083019473ffffffffffffffffffffffffffffffffffffffff809216845216910152565b03915afa928315611b43579087949392915f93612a2c575b5085517f4aa0665200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821694810194855291166020840152604435604084015294859283919082906060015b0392165afa918215610ebd575f926129fd575051908152f35b9091508281813d8311612a25575b612a158183612c0e565b810103126105585751905f6120e3565b503d612a0b565b8581969294503d8311612a62575b612a448183612c0e565b81010312610558576129e495612a5a8895612d6c565b929096612985565b503d612a3a565b8234610558575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105585760209073ffffffffffffffffffffffffffffffffffffffff5f54169051908152f35b82346105585760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055857610ae290612afe612af9612b6a565b612e9f565b905191829182612bd3565b34610558575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105585760209067ffffffffffffffff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054168152f35b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361055857565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361055857565b6044359073ffffffffffffffffffffffffffffffffffffffff8216820361055857565b60209060206040818301928281528551809452019301915f5b828110612bfa575050505090565b835185529381019392810192600101612bec565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117612c4f57604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b67ffffffffffffffff8111612c4f57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60809101126105585773ffffffffffffffffffffffffffffffffffffffff9060043582811681036105585791602435818116810361055857916044359160643590811681036105585790565b9181601f840112156105585782359167ffffffffffffffff8311610558576020808501948460051b01011161055857565b67ffffffffffffffff8111612c4f5760051b60200190565b519073ffffffffffffffffffffffffffffffffffffffff8216820361055857565b60209081818403126105585780519067ffffffffffffffff821161055857019180601f84011215610558578251612dc381612d54565b93612dd16040519586612c0e565b818552838086019260051b820101928311610558578301905b828210612df8575050505090565b838091612e0484612d6c565b815201910190612dea565b90612e1982612d54565b612e266040519182612c0e565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0612e548294612d54565b0190602036910137565b8051821015612e725760209160051b010190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b9073ffffffffffffffffffffffffffffffffffffffff809216604092604051907f67e4ac2c0000000000000000000000000000000000000000000000000000000082525f82600481865afa918215612f68575f92612f4c575b50612f038251612e0f565b925f5b8351811015612f4357600190825f526020828152885f209085612f298489612e5e565b51165f5252875f2054612f3c8288612e5e565b5201612f06565b50929450505050565b612f619192503d805f833e61057a8183612c0e565b905f612ef8565b6040513d5f823e3d90fd5b15612f7a57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e73756666696369656e742062616c616e63650000000000000000000000006044820152fd5b9080601f8301121561055857815190602091612ff381612d54565b936130016040519586612c0e565b81855260208086019260051b82010192831161055857602001905b82821061302a575050505090565b8151815290830190830161301c565b9190820180921161304657565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b9190820391821161304657565b1561308757565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b90816020910312610558575180151581036105585790565b9060208282031261055857815167ffffffffffffffff8111610558576131239201612fd8565b90565b9190811015612e725760051b0190565b3573ffffffffffffffffffffffffffffffffffffffff811681036105585790565b73ffffffffffffffffffffffffffffffffffffffff8091169081156131e8577f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300805490837fffffffffffffffffffffffff00000000000000000000000000000000000000008316179055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b60246040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f6004820152fd5b73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005416330361325857565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146130465760010190565b73ffffffffffffffffffffffffffffffffffffffff60045f82815416604051928380927fd88ff1f40000000000000000000000000000000000000000000000000000000082525afa908115612f68575f91613542575b5080519361331885612e0f565b915f9361332487612d54565b926133326040519485612c0e565b8784527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061335f89612d54565b0136602086013761336f88612e0f565b965f600191895115612e7257841660208a01525b8181106133bc5750505050505050505050506040516020810181811067ffffffffffffffff821117612c4f576040525f81525f36813790565b836133d06133c983613288565b928b612e5e565b511684841681146134fb575f5b8b81106133eb575050613383565b6133f58189612e5e565b5115613404575b6001016133dd565b8561340f8289612e5e565b5116604051907f67e4ac2c0000000000000000000000000000000000000000000000000000000082525f82600481845afa908115612f68578f85935f936134df575b508361345d818561355c565b92836134cd575b505050613473575b50506133fc565b9061347d9161366f565b86613488838a612e5e565b51166134938c613288565b9b61349e908c612e5e565b52868c6134aa87613288565b966134b491612e5e565b911690526134c28189612e5e565b60019052815f61346c565b6134d793506135a9565b8f835f613464565b6134f49193503d805f833e61057a8183612c0e565b915f613451565b50505050945050509350915061351082612e0f565b925f5b838110613521575050505090565b808361352f60019385612e5e565b511661353b8288612e5e565b5201613513565b61355691503d805f833e61057a8183612c0e565b5f61330b565b905f5b82518110156135a25773ffffffffffffffffffffffffffffffffffffffff806135888386612e5e565b51169083161461359a5760010161355f565b505050600190565b5050505f90565b6004929173ffffffffffffffffffffffffffffffffffffffff809216915f6135d084612e9f565b93604051968780927f67e4ac2c0000000000000000000000000000000000000000000000000000000082525afa948515612f68575f95613653575b505f5b855181101561364957816136228288612e5e565b5116828416146136345760010161360e565b92915050613643929350612e5e565b51101590565b5050505050505f90565b6136689195503d805f833e61057a8183612c0e565b935f61360b565b905f5b82518110156136be5773ffffffffffffffffffffffffffffffffffffffff8061369b8386612e5e565b5116818416036136ae5750600101613672565b926136b99250612e5e565b511690565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f546f6b656e206e6f7420666f756e6420696e20706f6f6c0000000000000000006044820152fd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c161561374b57565b60046040517fd7e6bcf8000000000000000000000000000000000000000000000000000000008152fd5b906137b4575080511561378a57805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b8151158061380c575b6137c5575090565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b156137bd56fea2646970667358221220b2b5f43621235ca20b5f60045b9aba7f731fee953a8636e849ae9f04ab5f0cfc64736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xD8E6E2C EQ PUSH2 0x2B09 JUMPI POP DUP1 PUSH4 0x3E99C1E4 EQ PUSH2 0x2ABA JUMPI DUP1 PUSH4 0x4056C37F EQ PUSH2 0x1792 JUMPI DUP1 PUSH4 0x4219DC40 EQ PUSH2 0x2A69 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x28AD JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2581 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x24C5 JUMPI DUP1 PUSH4 0x5568081A EQ PUSH2 0x21A6 JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x1EA4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DE8 JUMPI DUP1 PUSH4 0x72591BE5 EQ PUSH2 0x1D68 JUMPI DUP1 PUSH4 0x7442ECA6 EQ PUSH2 0x1807 JUMPI DUP1 PUSH4 0x8628991E EQ PUSH2 0x1792 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1721 JUMPI DUP1 PUSH4 0x8F2248BC EQ PUSH2 0x15A3 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x14B5 JUMPI DUP1 PUSH4 0xAD414263 EQ PUSH2 0x1294 JUMPI DUP1 PUSH4 0xAE3CCE1C EQ PUSH2 0x11A3 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xFB3 JUMPI DUP1 PUSH4 0xE74E9B06 EQ PUSH2 0xA0E JUMPI DUP1 PUSH4 0xEC0CD2EB EQ PUSH2 0x7A7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x760 JUMPI PUSH4 0xF31ABCC4 EQ PUSH2 0x11D JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x558 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x157 PUSH2 0x2B8D JUMP JUMPDEST SWAP2 PUSH2 0x160 PUSH2 0x2BB0 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x703 JUMPI DUP5 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER DUP5 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND SWAP3 SWAP1 SWAP2 SWAP1 DUP6 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD SUB DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0x5B7 JUMPI DUP7 SWAP2 PUSH0 SWAP2 PUSH2 0x6D2 JUMPI JUMPDEST POP LT PUSH2 0x676 JUMPI DUP8 MLOAD SWAP7 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 SWAP8 DUP9 DUP2 MSTORE CALLER DUP9 DUP3 ADD MSTORE PUSH1 0x24 SWAP7 DUP7 DUP3 DUP10 DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0x66C JUMPI DUP8 SWAP3 PUSH0 SWAP2 PUSH2 0x639 JUMPI JUMPDEST POP SWAP3 PUSH2 0x234 DUP3 PUSH2 0x292 SWAP6 LT ISZERO PUSH2 0x2F73 JUMP JUMPDEST DUP12 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE CALLER DUP14 DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 SWAP5 PUSH1 0x60 DUP3 ADD SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP4 MSTORE AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB DUP2 PUSH0 DUP8 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x5B7 JUMPI PUSH0 SWAP2 PUSH2 0x61C JUMPI JUMPDEST POP ISZERO PUSH2 0x5C1 JUMPI DUP8 MLOAD SWAP2 PUSH32 0x89AFCB4400000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP2 DUP5 AND DUP8 DUP5 ADD MSTORE PUSH0 DUP4 DUP8 DUP2 DUP4 DUP6 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x5B7 JUMPI PUSH0 SWAP4 PUSH2 0x593 JUMPI JUMPDEST POP DUP9 MLOAD SWAP1 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH0 DUP3 DUP10 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x589 JUMPI PUSH0 SWAP3 PUSH2 0x565 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x563 JUMPI DUP11 DUP8 DUP11 DUP11 DUP14 DUP9 PUSH2 0x347 DUP8 DUP11 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND SWAP5 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4CD JUMPI PUSH0 SWAP2 PUSH2 0x532 JUMPI JUMPDEST POP PUSH2 0x372 DUP3 DUP8 PUSH2 0x2E5E JUMP JUMPDEST MLOAD GT PUSH2 0x4D7 JUMPI PUSH2 0x382 DUP2 DUP7 PUSH2 0x2E5E JUMP JUMPDEST MLOAD DUP3 PUSH0 MSTORE PUSH1 0x1 DUP9 MSTORE DUP12 PUSH0 KECCAK256 DUP6 PUSH2 0x398 DUP5 DUP8 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP9 MSTORE PUSH2 0x3AC DUP13 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x3073 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x425 DUP8 DUP13 DUP12 DUP10 PUSH0 DUP10 PUSH2 0x3C1 DUP9 DUP12 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND SWAP3 PUSH2 0x3CE DUP9 DUP14 PUSH2 0x2E5E JUMP JUMPDEST MLOAD SWAP5 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x4CD JUMPI PUSH0 SWAP2 PUSH2 0x4A0 JUMPI JUMPDEST POP ISZERO PUSH2 0x445 JUMPI PUSH1 0x1 ADD PUSH2 0x32E JUMP JUMPDEST PUSH1 0x64 DUP10 PUSH1 0x15 DUP11 DUP11 DUP16 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4173736574207472616E73666572206661696C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x4C0 SWAP2 POP DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x4C6 JUMPI JUMPDEST PUSH2 0x4B8 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x30E5 JUMP JUMPDEST PUSH0 PUSH2 0x437 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4AE JUMP JUMPDEST DUP13 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP10 PUSH1 0x16 DUP11 DUP11 DUP16 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x55C JUMPI JUMPDEST PUSH2 0x549 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI MLOAD PUSH0 PUSH2 0x367 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x53F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x582 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x57A DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2D8D JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x32B JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x5B0 SWAP2 SWAP4 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x5A8 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x30FD JUMP JUMPDEST SWAP2 PUSH0 PUSH2 0x2EF JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP7 PUSH1 0x13 DUP8 DUP8 DUP13 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x5472616E7366657246726F6D206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x633 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x4C6 JUMPI PUSH2 0x4B8 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST PUSH0 PUSH2 0x2A6 JUMP JUMPDEST DUP4 DUP2 SWAP5 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x665 JUMPI JUMPDEST PUSH2 0x650 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI SWAP1 MLOAD DUP7 SWAP2 SWAP1 PUSH2 0x234 PUSH2 0x223 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x646 JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP7 DUP6 DUP11 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420616C6C6F77616E636500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 SWAP3 POP DUP7 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x6FC JUMPI JUMPDEST PUSH2 0x6EB DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI DUP6 SWAP1 MLOAD PUSH0 PUSH2 0x1D7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x64 DUP4 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x558 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH2 0x563 PUSH2 0x79A PUSH2 0x2B6A JUMP JUMPDEST PUSH2 0x7A2 PUSH2 0x3218 JUMP JUMPDEST PUSH2 0x3157 JUMP JUMPDEST POP CALLVALUE PUSH2 0x558 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x558 JUMPI PUSH2 0x7F5 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x2D23 JUMP JUMPDEST SWAP2 PUSH2 0x7FE PUSH2 0x2B8D JUMP JUMPDEST PUSH2 0x806 PUSH2 0x2BB0 JUMP JUMPDEST SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP2 DUP7 MLOAD PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 DUP2 DUP7 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xA04 JUMPI PUSH0 SWAP2 PUSH2 0x9EA JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x92D JUMPI DUP1 PUSH0 DUP11 DUP6 PUSH2 0x877 PUSH2 0x8F4 SWAP6 DUP8 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND PUSH2 0x884 DUP5 DUP10 DUP14 PUSH2 0x3126 JUMP JUMPDEST CALLDATALOAD SWAP1 DUP10 DUP5 MSTORE DUP11 PUSH1 0x20 SWAP5 DUP6 SWAP5 PUSH1 0x1 DUP7 MSTORE DUP1 DUP3 KECCAK256 DUP5 DUP4 MSTORE DUP7 MSTORE DUP1 DUP3 KECCAK256 PUSH2 0x8A9 DUP7 DUP3 SLOAD PUSH2 0x3039 JUMP JUMPDEST SWAP1 SSTORE MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE ADDRESS PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 SWAP7 DUP8 SWAP4 DUP5 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x66C JUMPI PUSH1 0x1 SWAP4 PUSH2 0x90F JUMPI JUMPDEST POP POP ADD PUSH2 0x85D JUMP JUMPDEST DUP2 PUSH2 0x925 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x4C6 JUMPI PUSH2 0x4B8 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST POP PUSH0 DUP1 PUSH2 0x907 JUMP JUMPDEST DUP8 DUP10 DUP9 DUP7 DUP9 DUP11 DUP9 DUP6 MLOAD SWAP7 PUSH32 0xDE836EBD00000000000000000000000000000000000000000000000000000000 DUP9 MSTORE AND SWAP1 DUP7 ADD MSTORE DUP4 PUSH1 0x24 DUP7 ADD MSTORE DUP2 PUSH1 0x44 DUP7 ADD MSTORE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x558 JUMPI DUP5 PUSH0 PUSH1 0x64 DUP3 PUSH1 0x20 SWAP7 DUP2 SWAP7 PUSH1 0x5 SHL DUP1 SWAP2 DUP5 DUP5 ADD CALLDATACOPY DUP2 ADD SUB ADD SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x9E1 JUMPI POP PUSH2 0x9BA JUMPI STOP JUMPDEST PUSH1 0x20 SWAP1 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x9DA JUMPI JUMPDEST PUSH2 0x9D0 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI STOP JUMPDEST POP RETURNDATASIZE PUSH2 0x9C6 JUMP JUMPDEST MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x9FE SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x57A DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST PUSH0 PUSH2 0x85A JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x558 JUMPI PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x558 JUMPI PUSH2 0xA5D SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x2D23 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x558 JUMPI PUSH2 0xA77 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x2D23 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x558 JUMPI PUSH2 0xA91 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x2D23 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x558 JUMPI PUSH2 0xAAB SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x2D23 JUMP JUMPDEST DUP7 DUP9 SWAP4 SWAP3 SWAP4 EQ DUP1 PUSH2 0xFAA JUMPI JUMPDEST DUP1 PUSH2 0xFA1 JUMPI JUMPDEST ISZERO PUSH2 0xF44 JUMPI PUSH2 0xACB DUP9 PUSH2 0x2E0F JUMP JUMPDEST SWAP9 PUSH0 JUMPDEST DUP10 DUP2 LT PUSH2 0xAE6 JUMPI DUP12 MLOAD DUP1 PUSH2 0xAE2 DUP14 DUP3 PUSH2 0x2BD3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 DUP9 DUP12 DUP15 DUP8 DUP7 PUSH2 0xB42 DUP16 DUP8 DUP16 SWAP2 DUP16 PUSH2 0xB08 PUSH2 0xBA0 SWAP13 PUSH2 0xB10 SWAP3 PUSH2 0xB37 SWAP7 PUSH2 0x3126 JUMP JUMPDEST CALLDATALOAD ISZERO ISZERO PUSH2 0x3080 JUMP JUMPDEST PUSH2 0xB3C PUSH2 0xB37 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP11 DUP12 PUSH0 SLOAD AND SWAP9 PUSH2 0x3126 JUMP JUMPDEST PUSH2 0x3136 JUMP JUMPDEST SWAP9 PUSH2 0x3126 JUMP JUMPDEST SWAP1 DUP4 MLOAD DUP1 DUP1 SWAP10 DUP2 SWAP5 PUSH32 0x2D5E94A700000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x20 SWAP10 DUP11 SWAP8 DUP5 ADD SWAP1 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP4 PUSH1 0x40 DUP4 ADD SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP5 MSTORE AND SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x9E1 JUMPI DUP11 DUP16 DUP9 SWAP4 DUP15 SWAP9 PUSH0 SWAP2 PUSH2 0xEE5 JUMPI JUMPDEST POP DUP8 DUP8 SWAP4 DUP8 PUSH2 0xBD5 PUSH2 0xB37 DUP5 PUSH2 0xC27 SWAP15 SWAP8 DUP5 PUSH2 0xBDC SWAP9 AND SWAP12 PUSH2 0x3126 JUMP JUMPDEST AND SWAP4 PUSH2 0x3126 JUMP JUMPDEST DUP4 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER DUP2 DUP15 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE SWAP2 CALLDATALOAD PUSH1 0x40 DUP4 ADD MSTORE SWAP9 DUP10 SWAP3 SWAP2 DUP4 SWAP2 PUSH0 SWAP2 DUP4 SWAP2 PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xEBD JUMPI DUP16 DUP16 DUP16 SWAP1 DUP16 DUP16 SWAP4 DUP16 SWAP2 DUP16 SWAP5 DUP16 SWAP14 SWAP1 DUP16 PUSH2 0xC5B DUP16 DUP16 SWAP12 SWAP7 DUP2 SWAP8 SWAP4 DUP14 DUP4 SWAP8 DUP5 SWAP7 PUSH2 0xEC7 JUMPI JUMPDEST POP POP PUSH2 0x3126 JUMP JUMPDEST PUSH2 0xC64 SWAP1 PUSH2 0x3136 JUMP JUMPDEST SWAP7 PUSH2 0xC6E SWAP3 PUSH2 0x3126 JUMP JUMPDEST PUSH2 0xC77 SWAP1 PUSH2 0x3136 JUMP JUMPDEST SWAP7 PUSH2 0xC81 SWAP3 PUSH2 0x3126 JUMP JUMPDEST CALLDATALOAD SWAP12 PUSH2 0xC8C SWAP3 PUSH2 0x3126 JUMP JUMPDEST PUSH2 0xC95 SWAP1 PUSH2 0x3136 JUMP JUMPDEST DUP6 MLOAD PUSH32 0x6E81221C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND SWAP4 DUP2 ADD SWAP4 DUP5 MSTORE SWAP4 DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP11 SWAP1 SWAP11 MSTORE SWAP1 SWAP9 AND PUSH1 0x60 DUP10 ADD MSTORE SWAP7 DUP8 SWAP1 DUP2 SWAP1 PUSH1 0x80 ADD SUB DUP2 DUP6 GAS SWAP1 PUSH0 SWAP2 CALL SWAP3 DUP4 ISZERO PUSH2 0xEBD JUMPI DUP16 DUP16 SWAP2 DUP16 SWAP3 DUP16 SWAP4 DUP16 SWAP4 DUP16 SWAP8 DUP16 SWAP7 DUP16 SWAP7 DUP16 SWAP2 PUSH0 SWAP13 PUSH2 0xE55 JUMPI JUMPDEST PUSH2 0xE12 SWAP16 POP DUP15 PUSH2 0xDBC SWAP8 DUP16 SWAP15 SWAP14 SWAP13 SWAP12 SWAP10 SWAP5 SWAP8 DUP16 DUP16 SWAP1 DUP15 PUSH2 0xDAE SWAP2 PUSH0 SWAP16 SWAP11 SWAP12 DUP8 SWAP13 PUSH2 0xB37 SWAP15 PUSH2 0xD54 DUP11 PUSH2 0xDB5 SWAP14 PUSH2 0xB37 SWAP14 PUSH2 0x3126 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH0 DUP4 SWAP1 MSTORE DUP14 PUSH2 0xD72 PUSH2 0xB37 DUP14 PUSH1 0x1 SWAP8 DUP9 DUP11 MSTORE PUSH0 DUP12 SWAP1 KECCAK256 SWAP6 PUSH2 0x3126 JUMP JUMPDEST AND PUSH0 MSTORE DUP5 MSTORE PUSH0 DUP6 PUSH2 0xD86 SWAP2 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x3039 JUMP JUMPDEST SWAP1 SSTORE PUSH0 MSTORE DUP2 MSTORE DUP16 DUP3 SWAP1 KECCAK256 SWAP1 DUP11 PUSH2 0xDA0 PUSH2 0xB37 DUP11 DUP11 DUP11 PUSH2 0x3126 JUMP JUMPDEST AND PUSH0 MSTORE MSTORE DUP15 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x3073 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x3126 JUMP JUMPDEST AND SWAP8 PUSH2 0x3126 JUMP JUMPDEST SWAP3 MLOAD SWAP9 DUP10 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0xE4B JUMPI PUSH1 0x1 SWAP4 PUSH2 0xE2D JUMPI JUMPDEST POP POP ADD PUSH2 0xACE JUMP JUMPDEST DUP2 PUSH2 0xE43 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x4C6 JUMPI PUSH2 0x4B8 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST POP PUSH0 DUP1 PUSH2 0xE25 JUMP JUMPDEST DUP15 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP SWAP12 SWAP8 POP POP POP POP SWAP5 POP POP POP POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xEB6 JUMPI JUMPDEST PUSH2 0xE78 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI DUP16 SWAP5 DUP6 DUP16 DUP16 DUP16 SWAP4 DUP16 SWAP6 DUP16 DUP16 SWAP7 DUP16 SWAP5 SWAP10 DUP16 SWAP2 DUP16 SWAP5 SWAP4 DUP15 DUP15 SWAP14 DUP2 SWAP7 SWAP4 DUP16 DUP4 SWAP6 MLOAD SWAP9 POP POP SWAP8 SWAP5 SWAP10 SWAP12 SWAP13 SWAP14 SWAP3 SWAP4 POP SWAP8 SWAP5 SWAP10 SWAP6 SWAP14 POP POP PUSH2 0xD1F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xE6E JUMP JUMPDEST POP MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP2 PUSH2 0xEDD SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x4C6 JUMPI PUSH2 0x4B8 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST POP DUP14 PUSH0 PUSH2 0xC54 JUMP JUMPDEST SWAP9 POP POP POP POP POP POP DUP2 DUP5 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xF3D JUMPI JUMPDEST PUSH2 0xF01 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI DUP5 DUP16 DUP4 DUP16 PUSH2 0xBDC DUP8 DUP16 SWAP3 DUP16 SWAP1 PUSH2 0xBD5 PUSH2 0xB37 DUP5 DUP12 SWAP4 PUSH2 0xC27 SWAP16 PUSH2 0xF2C DUP7 SWAP2 PUSH2 0x2D6C JUMP JUMPDEST SWAP9 POP POP SWAP8 SWAP15 POP POP POP POP POP SWAP4 POP PUSH2 0xBB8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x64 DUP3 PUSH1 0x20 DUP13 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E70757420617272617973206C656E677468206D69736D6174636800000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 DUP5 EQ PUSH2 0xABD JUMP JUMPDEST POP DUP4 DUP8 EQ PUSH2 0xAB7 JUMP JUMPDEST POP CALLVALUE PUSH2 0x558 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH2 0xFEB PUSH2 0x2B6A JUMP JUMPDEST SWAP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP2 DUP3 SLOAD PUSH1 0xFF DUP2 DUP7 SHR AND ISZERO SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x119B JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x1191 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x1188 JUMPI JUMPDEST POP PUSH2 0x1161 JUMPI POP SWAP1 DUP2 DUP4 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 AND OR DUP7 SSTORE PUSH2 0x112C JUMPI JUMPDEST POP PUSH2 0x1092 PUSH2 0x371C JUMP JUMPDEST PUSH2 0x109A PUSH2 0x371C JUMP JUMPDEST PUSH2 0x10A2 PUSH2 0x371C JUMP JUMPDEST PUSH2 0x10AB CALLER PUSH2 0x3157 JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH0 SLOAD AND OR PUSH0 SSTORE PUSH2 0x10D9 JUMPI STOP JUMPDEST PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP2 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF PUSH1 0x20 SWAP4 SLOAD AND SWAP1 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 AND PUSH9 0x10000000000000001 OR DUP5 SSTORE PUSH0 PUSH2 0x1089 JUMP JUMPDEST DUP6 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP ISZERO PUSH0 PUSH2 0x103E JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x1036 JUMP JUMPDEST DUP6 SWAP2 POP PUSH2 0x102C JUMP JUMPDEST POP CALLVALUE PUSH2 0x558 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH1 0x24 SWAP3 PUSH0 PUSH2 0x11E1 PUSH2 0x2B6A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 SWAP2 DUP3 DUP5 SLOAD AND DUP6 MLOAD SWAP7 DUP8 SWAP5 DUP6 SWAP4 PUSH32 0xB4340E6A00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE AND SWAP1 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xEBD JUMPI PUSH0 SWAP3 PUSH2 0x1278 JUMPI JUMPDEST POP SWAP2 DUP3 MLOAD SWAP3 DUP2 DUP1 DUP6 ADD SWAP2 DUP2 DUP7 MSTORE DUP5 MLOAD DUP1 SWAP4 MSTORE DUP6 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1262 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD DUP8 AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1255 JUMP JUMPDEST PUSH2 0x128D SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x57A DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x123C JUMP JUMPDEST POP CALLVALUE PUSH2 0x558 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH2 0x12CB PUSH2 0x2B6A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH2 0x12EA PUSH2 0x2B8D JUMP JUMPDEST AND DUP5 MLOAD SWAP2 PUSH32 0x723C99900000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP4 DUP2 AND DUP6 DUP5 ADD MSTORE PUSH0 DUP4 PUSH1 0x24 DUP2 DUP4 DUP7 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x14AB JUMPI PUSH0 SWAP4 PUSH2 0x148F JUMPI JUMPDEST POP DUP6 MLOAD SWAP3 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH0 DUP5 DUP8 DUP2 DUP7 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x1485 JUMPI PUSH0 SWAP5 PUSH2 0x1469 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x563 JUMPI DUP1 PUSH2 0x1385 PUSH2 0x1430 SWAP3 DUP5 PUSH2 0x2E5E JUMP JUMPDEST MLOAD DUP6 PUSH0 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x1 DUP3 MSTORE DUP11 PUSH0 KECCAK256 DUP10 PUSH2 0x139E DUP6 DUP12 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP3 MSTORE PUSH2 0x13B2 DUP12 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x3039 JUMP JUMPDEST SWAP1 SSTORE DUP1 DUP11 DUP10 PUSH2 0x13C1 DUP6 DUP12 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND DUP12 PUSH0 PUSH2 0x13CF DUP8 DUP11 PUSH2 0x2E5E JUMP JUMPDEST MLOAD SWAP4 MLOAD DUP1 SWAP9 DUP2 SWAP6 DUP3 SWAP5 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP14 ADDRESS SWAP2 DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 SWAP5 PUSH1 0x60 DUP3 ADD SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP4 MSTORE AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x589 JUMPI PUSH1 0x1 SWAP4 PUSH2 0x144B JUMPI JUMPDEST POP POP ADD PUSH2 0x136E JUMP JUMPDEST DUP2 PUSH2 0x1461 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x4C6 JUMPI PUSH2 0x4B8 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST POP PUSH0 DUP1 PUSH2 0x1443 JUMP JUMPDEST PUSH2 0x147E SWAP2 SWAP5 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x57A DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST SWAP3 PUSH0 PUSH2 0x136B JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x14A4 SWAP2 SWAP4 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x5A8 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST SWAP2 PUSH0 PUSH2 0x132F JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x558 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI DUP1 MLOAD SWAP2 DUP2 DUP4 ADD SWAP1 DUP4 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x1577 JUMPI POP DUP2 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 MLOAD SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 DUP2 PUSH1 0x20 DUP8 ADD MSTORE DUP7 DUP7 ADD MCOPY PUSH0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH1 0x41 SWAP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x558 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH2 0x15DB PUSH2 0x2B6A JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP1 SWAP6 SUB PUSH2 0x558 JUMPI PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP3 DUP4 SLOAD SWAP3 DUP7 PUSH1 0xFF DUP6 DUP9 SHR AND SWAP2 DUP3 ISZERO PUSH2 0x1714 JUMPI JUMPDEST POP POP PUSH2 0x16ED JUMPI PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 DUP8 DUP8 DUP8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF PUSH9 0x10000000000000000 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH0 SLOAD AND OR PUSH0 SSTORE AND OR OR AND SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST DUP5 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 AND LT ISZERO SWAP1 POP DUP7 PUSH0 PUSH2 0x1628 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x558 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x558 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x17CC PUSH2 0x2B6A JUMP JUMPDEST PUSH2 0x17D4 PUSH2 0x2B8D JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x558 JUMPI PUSH2 0x1832 PUSH2 0x181A CALLDATASIZE PUSH2 0x2CB6 JUMP JUMPDEST SWAP6 SWAP2 SWAP1 DUP1 SWAP4 SWAP5 SWAP2 PUSH2 0x182C DUP3 ISZERO ISZERO PUSH2 0x3080 JUMP JUMPDEST DUP6 PUSH2 0x32B5 JUMP JUMPDEST SWAP5 DUP6 MLOAD ISZERO PUSH2 0x1D0B JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP1 MLOAD SWAP4 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x20 SWAP5 DUP6 DUP2 DUP1 PUSH2 0x18B5 DUP6 ADDRESS CALLER DUP12 DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 SWAP5 PUSH1 0x60 DUP3 ADD SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP4 MSTORE AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB DUP2 PUSH0 DUP13 DUP13 AND GAS CALL DUP1 ISZERO PUSH2 0x1D01 JUMPI PUSH2 0x1CE4 JUMPI JUMPDEST POP SWAP5 SWAP2 PUSH0 SWAP5 JUMPDEST DUP9 MLOAD DUP7 LT ISZERO PUSH2 0x1CDD JUMPI DUP8 PUSH2 0x18E2 DUP8 DUP12 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND SWAP4 DUP4 MLOAD SWAP9 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP11 MSTORE PUSH0 DUP11 DUP9 DUP2 DUP10 GAS STATICCALL SWAP10 DUP11 ISZERO PUSH2 0x1B43 JUMPI DUP12 SWAP1 PUSH0 SWAP12 PUSH2 0x1CB5 JUMPI JUMPDEST POP DUP2 PUSH2 0x1931 DUP11 PUSH2 0x1938 SWAP4 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND PUSH2 0x2E9F JUMP JUMPDEST SWAP10 PUSH0 SWAP11 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1CA4 JUMPI DUP4 PUSH2 0x1951 DUP3 DUP6 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND DUP5 DUP7 AND EQ ISZERO DUP1 PUSH2 0x1C91 JUMPI JUMPDEST PUSH2 0x196A JUMPI PUSH1 0x1 ADD PUSH2 0x193D JUMP JUMPDEST SWAP1 POP DUP3 SWAP12 POP PUSH2 0x1981 SWAP2 SWAP11 SWAP7 SWAP6 SWAP5 SWAP10 SWAP11 SWAP8 SWAP4 SWAP8 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND SWAP1 JUMPDEST DUP10 DUP3 AND SWAP1 DUP2 ISZERO PUSH2 0x1C35 JUMPI DUP5 MLOAD PUSH32 0xB2B55D7000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP3 DUP10 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 DUP11 DUP2 DUP4 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1485 JUMPI SWAP1 DUP9 SWAP2 PUSH0 SWAP2 PUSH2 0x1C04 JUMPI JUMPDEST POP LT PUSH2 0x1B83 JUMPI DUP13 MLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 ADD SWAP2 DUP3 GT PUSH2 0x1B59 JUMPI POP DUP4 DUP8 SWAP3 DUP12 SWAP3 DUP14 EQ PUSH0 EQ PUSH2 0x1B4D JUMPI DUP10 PUSH0 DUP13 PUSH2 0x1A85 DUP11 JUMPDEST DUP13 MLOAD SWAP14 DUP15 SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH32 0x6E81221C00000000000000000000000000000000000000000000000000000000 DUP8 MSTORE DUP7 ADD SWAP3 SWAP4 PUSH1 0x60 SWAP3 SWAP2 SWAP6 SWAP5 PUSH1 0x80 DUP6 ADD SWAP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 DUP1 SWAP3 AND DUP8 MSTORE AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE AND SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP6 DUP7 ISZERO PUSH2 0x1B43 JUMPI DUP11 DUP14 DUP12 SWAP4 DUP15 SWAP4 PUSH0 SWAP11 PUSH2 0x1B03 JUMPI JUMPDEST POP SWAP1 DUP3 SWAP2 PUSH1 0x1 SWAP9 SWAP10 SWAP11 SWAP12 DUP6 PUSH2 0x1AB5 PUSH2 0x1ADC SWAP7 DUP6 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP10 SWAP7 DUP8 DUP2 MSTORE DUP7 DUP14 PUSH0 KECCAK256 SWAP3 AND PUSH0 MSTORE MSTORE PUSH2 0x1AD5 DUP12 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x3039 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP9 MSTORE DUP5 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE DUP8 MSTORE DUP4 PUSH0 KECCAK256 PUSH2 0x1AF8 DUP7 DUP3 SLOAD PUSH2 0x3073 JUMP JUMPDEST SWAP1 SSTORE SWAP4 SWAP7 ADD SWAP5 PUSH2 0x18CE JUMP JUMPDEST SWAP5 SWAP4 POP SWAP7 SWAP8 SWAP9 POP POP POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1B3C JUMPI JUMPDEST PUSH2 0x1B20 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI MLOAD SWAP5 SWAP4 SWAP3 DUP9 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP15 SWAP1 PUSH2 0x1ADC PUSH2 0x1A9D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1B16 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP10 PUSH0 DUP13 PUSH2 0x1A85 ADDRESS PUSH2 0x1A1D JUMP JUMPDEST PUSH1 0x11 DUP11 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP9 PUSH1 0x27 PUSH1 0x84 SWAP3 DUP13 DUP10 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C697175696469747920696E20706F6F6C2066 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F72207377617000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 SWAP3 POP DUP13 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1C2E JUMPI JUMPDEST PUSH2 0x1C1D DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI DUP8 SWAP1 MLOAD PUSH0 PUSH2 0x19D4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1C13 JUMP JUMPDEST PUSH1 0x64 DUP9 DUP11 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2076616C6964206E65787420746F6B656E20666F756E6400000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH2 0x1C9C DUP2 DUP4 PUSH2 0x2E5E JUMP JUMPDEST MLOAD ISZERO ISZERO PUSH2 0x195E JUMP JUMPDEST POP POP POP SWAP9 SWAP1 SWAP5 SWAP8 SWAP4 SWAP3 SWAP2 SWAP7 SWAP8 PUSH2 0x1985 JUMP JUMPDEST PUSH2 0x1938 SWAP2 SWAP12 POP PUSH2 0x1931 DUP11 PUSH2 0x1CD3 DUP6 SWAP4 RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x57A DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST SWAP14 SWAP4 POP POP POP PUSH2 0x1922 JUMP JUMPDEST DUP3 MLOAD DUP8 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1CFA SWAP1 DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x4C6 JUMPI PUSH2 0x4B8 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST POP PUSH0 PUSH2 0x18C8 JUMP JUMPDEST DUP4 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP3 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20726F75746520666F756E64000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x558 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1DB4 PUSH2 0x2B6A JUMP JUMPDEST PUSH2 0x1DBC PUSH2 0x3218 JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH0 SLOAD AND OR PUSH0 SSTORE PUSH0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x558 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH2 0x1E1E PUSH2 0x3218 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND SWAP1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST POP CALLVALUE PUSH2 0x558 JUMPI PUSH2 0x1EB3 CALLDATASIZE PUSH2 0x2CB6 JUMP JUMPDEST PUSH2 0x1EC1 DUP3 SWAP7 SWAP4 SWAP3 ISZERO ISZERO PUSH2 0x3080 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 PUSH0 SLOAD AND SWAP6 DUP5 MLOAD DUP1 SWAP8 PUSH32 0x2D5E94A700000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x20 SWAP9 DUP10 SWAP2 DUP2 DUP1 PUSH2 0x1F3E DUP11 DUP14 DUP11 DUP5 ADD SWAP1 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP4 PUSH1 0x40 DUP4 ADD SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP5 MSTORE AND SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x14AB JUMPI SWAP1 DUP3 SWAP2 PUSH0 SWAP2 PUSH2 0x216E JUMPI JUMPDEST POP DUP7 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER DUP6 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP13 SWAP1 MSTORE DUP5 DUP11 AND SWAP10 SWAP3 SWAP1 SWAP4 AND SWAP3 DUP11 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB DUP2 PUSH0 DUP14 GAS CALL DUP1 ISZERO PUSH2 0xA04 JUMPI DUP12 SWAP3 DUP12 SWAP3 DUP10 SWAP3 PUSH2 0x2151 JUMPI JUMPDEST POP DUP10 MLOAD PUSH32 0x6E81221C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND DUP9 DUP3 ADD SWAP1 DUP2 MSTORE SWAP3 DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP14 SWAP1 SWAP14 MSTORE DUP8 AND PUSH1 0x60 DUP3 ADD MSTORE DUP12 SWAP1 DUP2 SWAP1 PUSH1 0x80 ADD SUB DUP2 PUSH0 DUP7 GAS CALL SWAP8 DUP9 ISZERO PUSH2 0x1485 JUMPI DUP10 SWAP11 PUSH0 SWAP11 SWAP9 SWAP10 PUSH2 0x2111 JUMPI JUMPDEST POP SWAP3 DUP3 PUSH2 0x20D4 SWAP9 SWAP8 SWAP6 SWAP3 DUP12 SWAP8 SWAP6 PUSH0 SWAP6 DUP7 MSTORE PUSH1 0x1 DUP11 MSTORE DUP12 DUP7 KECCAK256 SWAP1 DUP7 MSTORE DUP10 MSTORE PUSH2 0x205B DUP12 DUP7 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x3039 JUMP JUMPDEST SWAP1 SSTORE DUP4 MSTORE PUSH1 0x1 DUP8 MSTORE DUP9 DUP4 KECCAK256 SWAP5 AND SWAP4 DUP5 DUP4 MSTORE DUP7 MSTORE DUP8 DUP3 KECCAK256 PUSH2 0x207C DUP7 DUP3 SLOAD PUSH2 0x3073 JUMP JUMPDEST SWAP1 SSTORE DUP8 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2107 JUMPI PUSH2 0x20EA JUMPI JUMPDEST POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x2100 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x4C6 JUMPI PUSH2 0x4B8 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST POP PUSH0 PUSH2 0x20E3 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 SWAP4 SWAP8 SWAP6 SWAP3 SWAP11 POP DUP9 SWAP2 SWAP7 SWAP5 SWAP9 RETURNDATASIZE DUP4 GT PUSH2 0x214A JUMPI JUMPDEST PUSH2 0x212F DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI SWAP1 MLOAD SWAP8 DUP10 SWAP7 SWAP4 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 SWAP3 SWAP2 PUSH0 PUSH2 0x2030 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2125 JUMP JUMPDEST PUSH2 0x2167 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x4C6 JUMPI PUSH2 0x4B8 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST POP PUSH0 PUSH2 0x1FB6 JUMP JUMPDEST DUP1 SWAP3 POP DUP10 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x219F JUMPI JUMPDEST PUSH2 0x2187 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI PUSH2 0x2199 DUP3 SWAP2 PUSH2 0x2D6C JUMP JUMPDEST PUSH0 PUSH2 0x1F53 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x217D JUMP JUMPDEST POP CALLVALUE PUSH2 0x558 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH2 0x21F7 PUSH2 0x2B6A JUMP JUMPDEST AND SWAP2 DUP1 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER DUP4 DUP3 ADD MSTORE DUP6 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2107 JUMPI PUSH0 SWAP2 PUSH2 0x2498 JUMPI JUMPDEST POP DUP2 MLOAD SWAP1 PUSH32 0x18160DDD00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP7 DUP3 DUP6 DUP2 DUP9 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1D01 JUMPI PUSH0 SWAP3 PUSH2 0x2469 JUMPI JUMPDEST POP PUSH2 0x2710 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x243D JUMPI DUP2 ISZERO PUSH2 0x2411 JUMPI PUSH2 0x229F SWAP2 PUSH1 0x64 SWAP2 DIV LT ISZERO PUSH2 0x2F73 JUMP JUMPDEST DUP1 MLOAD SWAP2 PUSH32 0xF47B45E800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH0 DUP4 DUP3 DUP2 DUP4 DUP9 GAS CALL SWAP6 DUP7 ISZERO PUSH2 0x2107 JUMPI PUSH0 SWAP4 PUSH0 SWAP8 PUSH2 0x23B5 JUMPI JUMPDEST POP PUSH0 DUP4 MLOAD DUP1 SWAP4 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 DUP9 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1D01 JUMPI PUSH0 SWAP3 PUSH2 0x2399 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x563 JUMPI DUP1 PUSH2 0x2331 PUSH1 0x1 SWAP3 DUP8 PUSH2 0x2E5E JUMP JUMPDEST MLOAD DUP8 PUSH0 MSTORE DUP3 SWAP1 DUP2 DUP6 MSTORE DUP7 PUSH0 KECCAK256 DUP11 PUSH2 0x2348 DUP6 DUP10 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP6 MSTORE PUSH2 0x235C DUP8 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x3039 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x2368 DUP3 DUP12 PUSH2 0x2E5E JUMP JUMPDEST MLOAD SWAP1 DUP9 PUSH0 MSTORE DUP5 MSTORE DUP6 PUSH0 KECCAK256 DUP10 PUSH2 0x237D DUP5 DUP9 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP5 MSTORE PUSH2 0x2391 DUP7 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x3073 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x231B JUMP JUMPDEST PUSH2 0x23AE SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x57A DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x2318 JUMP JUMPDEST SWAP4 POP SWAP6 POP RETURNDATASIZE DUP1 PUSH0 DUP6 RETURNDATACOPY PUSH2 0x23C8 DUP2 DUP6 PUSH2 0x2C0E JUMP JUMPDEST DUP4 ADD SWAP3 DUP3 DUP2 DUP6 SUB SLT PUSH2 0x558 JUMPI DUP1 MLOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF SWAP5 DUP6 DUP2 GT PUSH2 0x558 JUMPI DUP2 PUSH2 0x23F4 SWAP2 DUP5 ADD PUSH2 0x2FD8 JUMP JUMPDEST SWAP5 DUP9 DUP4 ADD MLOAD SWAP1 DUP2 GT PUSH2 0x558 JUMPI PUSH2 0x240A SWAP3 ADD PUSH2 0x2FD8 JUMP JUMPDEST SWAP6 PUSH0 PUSH2 0x22DD JUMP JUMPDEST PUSH1 0x12 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x11 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 SWAP2 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2491 JUMPI JUMPDEST PUSH2 0x2481 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI MLOAD SWAP1 PUSH0 PUSH2 0x2275 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2477 JUMP JUMPDEST SWAP1 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x24BE JUMPI JUMPDEST PUSH2 0x24AF DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI MLOAD PUSH0 PUSH2 0x2239 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x24A5 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x558 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0x255B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH2 0x25B3 PUSH2 0x2B6A JUMP JUMPDEST PUSH1 0x24 SWAP3 DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x558 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x558 JUMPI DUP1 DUP5 ADD CALLDATALOAD PUSH2 0x25DF DUP2 PUSH2 0x2C7C JUMP JUMPDEST SWAP4 PUSH2 0x25EC DUP5 MLOAD SWAP6 DUP7 PUSH2 0x2C0E JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 SWAP2 DUP3 DUP7 ADD SWAP4 CALLDATASIZE DUP10 DUP4 DUP4 ADD ADD GT PUSH2 0x558 JUMPI DUP2 PUSH0 SWAP3 DUP11 DUP7 SWAP4 ADD DUP8 CALLDATACOPY DUP8 ADD ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x0 AND DUP1 ADDRESS EQ SWAP1 DUP2 ISZERO PUSH2 0x287F JUMPI JUMPDEST POP PUSH2 0x2857 JUMPI PUSH2 0x265E PUSH2 0x3218 JUMP JUMPDEST DUP2 AND SWAP5 DUP5 MLOAD PUSH32 0x52D1902D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 DUP2 DUP10 DUP2 DUP11 GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0x2828 JUMPI JUMPDEST POP PUSH2 0x26C9 JUMPI POP POP POP POP POP MLOAD SWAP2 PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP8 DUP8 DUP8 SWAP5 SWAP4 DUP12 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP2 DUP3 DUP2 SUB PUSH2 0x27FB JUMPI POP DUP6 EXTCODESIZE ISZERO PUSH2 0x27CE JUMPI POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 MLOAD SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP3 MLOAD ISZERO PUSH2 0x279B JUMPI POP POP PUSH0 PUSH2 0x563 SWAP6 DUP2 SWAP3 MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x2791 JUMPI RETURNDATASIZE PUSH2 0x2783 PUSH2 0x277A DUP3 PUSH2 0x2C7C JUMP JUMPDEST SWAP3 MLOAD SWAP3 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 MSTORE PUSH0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x3775 JUMP JUMPDEST POP PUSH1 0x60 SWAP3 POP PUSH2 0x3775 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP CALLVALUE PUSH2 0x27A9 JUMPI STOP JUMPDEST PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 DUP4 DUP9 MLOAD SWAP2 PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP5 SWAP1 DUP9 MLOAD SWAP2 PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2850 JUMPI JUMPDEST PUSH2 0x2840 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI MLOAD SWAP1 PUSH0 PUSH2 0x2695 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2836 JUMP JUMPDEST DUP7 DUP6 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP DUP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ ISZERO PUSH0 PUSH2 0x2651 JUMP JUMPDEST POP CALLVALUE PUSH2 0x558 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH2 0x28E5 PUSH2 0x2B6A JUMP JUMPDEST SWAP2 PUSH2 0x28EE PUSH2 0x2B8D JUMP JUMPDEST SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 PUSH0 SLOAD AND SWAP1 DUP4 MLOAD SWAP6 DUP7 SWAP3 PUSH32 0x2D5E94A700000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x20 SWAP8 DUP9 SWAP2 DUP2 DUP1 PUSH2 0x296D DUP8 DUP8 DUP12 DUP5 ADD SWAP1 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP4 PUSH1 0x40 DUP4 ADD SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP5 MSTORE AND SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x1B43 JUMPI SWAP1 DUP8 SWAP5 SWAP4 SWAP3 SWAP2 PUSH0 SWAP4 PUSH2 0x2A2C JUMPI JUMPDEST POP DUP6 MLOAD PUSH32 0x4AA0665200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND SWAP5 DUP2 ADD SWAP5 DUP6 MSTORE SWAP2 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x40 DUP5 ADD MSTORE SWAP5 DUP6 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x60 ADD JUMPDEST SUB SWAP3 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xEBD JUMPI PUSH0 SWAP3 PUSH2 0x29FD JUMPI POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2A25 JUMPI JUMPDEST PUSH2 0x2A15 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI MLOAD SWAP1 PUSH0 PUSH2 0x20E3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2A0B JUMP JUMPDEST DUP6 DUP2 SWAP7 SWAP3 SWAP5 POP RETURNDATASIZE DUP4 GT PUSH2 0x2A62 JUMPI JUMPDEST PUSH2 0x2A44 DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI PUSH2 0x29E4 SWAP6 PUSH2 0x2A5A DUP9 SWAP6 PUSH2 0x2D6C JUMP JUMPDEST SWAP3 SWAP1 SWAP7 PUSH2 0x2985 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2A3A JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x558 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH0 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x558 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH2 0xAE2 SWAP1 PUSH2 0x2AFE PUSH2 0x2AF9 PUSH2 0x2B6A JUMP JUMPDEST PUSH2 0x2E9F JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2BD3 JUMP JUMPDEST CALLVALUE PUSH2 0x558 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x558 JUMPI PUSH1 0x20 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x558 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x558 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x558 JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2BFA JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2BEC JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2C4F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2C4F JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x80 SWAP2 ADD SLT PUSH2 0x558 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x558 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x558 JUMPI SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x558 JUMPI SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x558 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x558 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x558 JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2C4F JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x558 JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x558 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x558 JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x558 JUMPI DUP3 MLOAD PUSH2 0x2DC3 DUP2 PUSH2 0x2D54 JUMP JUMPDEST SWAP4 PUSH2 0x2DD1 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x2C0E JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x558 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2DF8 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 DUP1 SWAP2 PUSH2 0x2E04 DUP5 PUSH2 0x2D6C JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x2DEA JUMP JUMPDEST SWAP1 PUSH2 0x2E19 DUP3 PUSH2 0x2D54 JUMP JUMPDEST PUSH2 0x2E26 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x2C0E JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x2E54 DUP3 SWAP5 PUSH2 0x2D54 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2E72 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND PUSH1 0x40 SWAP3 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH0 DUP3 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2F68 JUMPI PUSH0 SWAP3 PUSH2 0x2F4C JUMPI JUMPDEST POP PUSH2 0x2F03 DUP3 MLOAD PUSH2 0x2E0F JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2F43 JUMPI PUSH1 0x1 SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE DUP9 PUSH0 KECCAK256 SWAP1 DUP6 PUSH2 0x2F29 DUP5 DUP10 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE MSTORE DUP8 PUSH0 KECCAK256 SLOAD PUSH2 0x2F3C DUP3 DUP9 PUSH2 0x2E5E JUMP JUMPDEST MSTORE ADD PUSH2 0x2F06 JUMP JUMPDEST POP SWAP3 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH2 0x2F61 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x57A DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x2EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2F7A JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x558 JUMPI DUP2 MLOAD SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2FF3 DUP2 PUSH2 0x2D54 JUMP JUMPDEST SWAP4 PUSH2 0x3001 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x2C0E JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x558 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x302A JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x301C JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x3046 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x3046 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x3087 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x558 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x558 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x558 JUMPI DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x558 JUMPI PUSH2 0x3123 SWAP3 ADD PUSH2 0x2FD8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x2E72 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x558 JUMPI SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x31E8 JUMPI PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD SWAP1 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND OR SWAP1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND CALLER SUB PUSH2 0x3258 JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x3046 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 PUSH0 DUP3 DUP2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0xD88FF1F400000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2F68 JUMPI PUSH0 SWAP2 PUSH2 0x3542 JUMPI JUMPDEST POP DUP1 MLOAD SWAP4 PUSH2 0x3318 DUP6 PUSH2 0x2E0F JUMP JUMPDEST SWAP2 PUSH0 SWAP4 PUSH2 0x3324 DUP8 PUSH2 0x2D54 JUMP JUMPDEST SWAP3 PUSH2 0x3332 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2C0E JUMP JUMPDEST DUP8 DUP5 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x335F DUP10 PUSH2 0x2D54 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP7 ADD CALLDATACOPY PUSH2 0x336F DUP9 PUSH2 0x2E0F JUMP JUMPDEST SWAP7 PUSH0 PUSH1 0x1 SWAP2 DUP10 MLOAD ISZERO PUSH2 0x2E72 JUMPI DUP5 AND PUSH1 0x20 DUP11 ADD MSTORE JUMPDEST DUP2 DUP2 LT PUSH2 0x33BC JUMPI POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2C4F JUMPI PUSH1 0x40 MSTORE PUSH0 DUP2 MSTORE PUSH0 CALLDATASIZE DUP2 CALLDATACOPY SWAP1 JUMP JUMPDEST DUP4 PUSH2 0x33D0 PUSH2 0x33C9 DUP4 PUSH2 0x3288 JUMP JUMPDEST SWAP3 DUP12 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND DUP5 DUP5 AND DUP2 EQ PUSH2 0x34FB JUMPI PUSH0 JUMPDEST DUP12 DUP2 LT PUSH2 0x33EB JUMPI POP POP PUSH2 0x3383 JUMP JUMPDEST PUSH2 0x33F5 DUP2 DUP10 PUSH2 0x2E5E JUMP JUMPDEST MLOAD ISZERO PUSH2 0x3404 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x33DD JUMP JUMPDEST DUP6 PUSH2 0x340F DUP3 DUP10 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH0 DUP3 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2F68 JUMPI DUP16 DUP6 SWAP4 PUSH0 SWAP4 PUSH2 0x34DF JUMPI JUMPDEST POP DUP4 PUSH2 0x345D DUP2 DUP6 PUSH2 0x355C JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x34CD JUMPI JUMPDEST POP POP POP PUSH2 0x3473 JUMPI JUMPDEST POP POP PUSH2 0x33FC JUMP JUMPDEST SWAP1 PUSH2 0x347D SWAP2 PUSH2 0x366F JUMP JUMPDEST DUP7 PUSH2 0x3488 DUP4 DUP11 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND PUSH2 0x3493 DUP13 PUSH2 0x3288 JUMP JUMPDEST SWAP12 PUSH2 0x349E SWAP1 DUP13 PUSH2 0x2E5E JUMP JUMPDEST MSTORE DUP7 DUP13 PUSH2 0x34AA DUP8 PUSH2 0x3288 JUMP JUMPDEST SWAP7 PUSH2 0x34B4 SWAP2 PUSH2 0x2E5E JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH2 0x34C2 DUP2 DUP10 PUSH2 0x2E5E JUMP JUMPDEST PUSH1 0x1 SWAP1 MSTORE DUP2 PUSH0 PUSH2 0x346C JUMP JUMPDEST PUSH2 0x34D7 SWAP4 POP PUSH2 0x35A9 JUMP JUMPDEST DUP16 DUP4 PUSH0 PUSH2 0x3464 JUMP JUMPDEST PUSH2 0x34F4 SWAP2 SWAP4 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x57A DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST SWAP2 PUSH0 PUSH2 0x3451 JUMP JUMPDEST POP POP POP POP SWAP5 POP POP POP SWAP4 POP SWAP2 POP PUSH2 0x3510 DUP3 PUSH2 0x2E0F JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3521 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP1 DUP4 PUSH2 0x352F PUSH1 0x1 SWAP4 DUP6 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND PUSH2 0x353B DUP3 DUP9 PUSH2 0x2E5E JUMP JUMPDEST MSTORE ADD PUSH2 0x3513 JUMP JUMPDEST PUSH2 0x3556 SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x57A DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST PUSH0 PUSH2 0x330B JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x35A2 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x3588 DUP4 DUP7 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND SWAP1 DUP4 AND EQ PUSH2 0x359A JUMPI PUSH1 0x1 ADD PUSH2 0x355F JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x4 SWAP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP2 PUSH0 PUSH2 0x35D0 DUP5 PUSH2 0x2E9F JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD SWAP7 DUP8 DUP1 SWAP3 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x2F68 JUMPI PUSH0 SWAP6 PUSH2 0x3653 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x3649 JUMPI DUP2 PUSH2 0x3622 DUP3 DUP9 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND DUP3 DUP5 AND EQ PUSH2 0x3634 JUMPI PUSH1 0x1 ADD PUSH2 0x360E JUMP JUMPDEST SWAP3 SWAP2 POP POP PUSH2 0x3643 SWAP3 SWAP4 POP PUSH2 0x2E5E JUMP JUMPDEST MLOAD LT ISZERO SWAP1 JUMP JUMPDEST POP POP POP POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3668 SWAP2 SWAP6 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x57A DUP2 DUP4 PUSH2 0x2C0E JUMP JUMPDEST SWAP4 PUSH0 PUSH2 0x360B JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x36BE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x369B DUP4 DUP7 PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND DUP2 DUP5 AND SUB PUSH2 0x36AE JUMPI POP PUSH1 0x1 ADD PUSH2 0x3672 JUMP JUMPDEST SWAP3 PUSH2 0x36B9 SWAP3 POP PUSH2 0x2E5E JUMP JUMPDEST MLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F7420666F756E6420696E20706F6F6C000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x374B JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x37B4 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x378A JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x380C JUMPI JUMPDEST PUSH2 0x37C5 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE AND PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x37BD JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xB5 DELEGATECALL CALLDATASIZE 0x21 0x23 TLOAD LOG2 SIGNEXTEND PUSH0 PUSH1 0x4 JUMPDEST SWAP11 0xBA PUSH32 0x731FEE953A8636E849AE9F04AB5F0CFC64736F6C634300081900330000000000 ","sourceMap":"2066:14427:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3925:47;2066:14427;3925:47;;;2066:14427;;;;;;;;;;7040:65;2066:14427;7040:65;;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;12228:9;;2066:14427;;;;;12383:46;;12403:10;12383:46;;;2066:14427;;;12423:4;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;;;12383:46;;;;;;;;;;;2066:14427;12383:46;;;2066:14427;12448:18;;2066:14427;;;;;;12550:31;;;;12403:10;12550:31;;;2066:14427;;12550:31;;;;;;;;;;;;;;2066:14427;12550:31;;;2066:14427;12600:16;;12592:49;12600:16;12669:54;12600:16;;;12592:49;:::i;:::-;2066:14427;;12669:54;;;;;2066:14427;12669:54;;12403:10;12669:54;;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;12669:54;;;2066:14427;12669:54;;;;;;;;2066:14427;12669:54;;;2066:14427;;;;;;;12936:41;2066:14427;12936:41;;2066:14427;;;12936:41;;;2066:14427;;12936:41;;;;;;;;;;;;2066:14427;12936:41;;;2066:14427;;;;13014:38;2066:14427;13014:38;;2066:14427;13014:38;;;;;;;;;;;2066:14427;13014:38;;;2066:14427;13070:13;2066:14427;13104:3;2066:14427;;13085:17;;;;;13139:9;;;;;;;;;;:::i;:::-;2066:14427;;;;13132:42;;;;;;;12423:4;13132:42;;;2066:14427;13132:42;;;;;;;2066:14427;13132:42;;;13104:3;13178:13;;;;;:::i;:::-;2066:14427;-1:-1:-1;2066:14427:14;;13274:13;;;;:::i;:::-;2066:14427;;;;;;;;;;13260:9;;;;;:::i;:::-;2066:14427;;;;;;13233:54;2066:14427;;;;;;13233:54;:::i;:::-;2066:14427;;13330:51;13337:9;;;;2066:14427;13337:9;;;;;:::i;:::-;2066:14427;;13367:13;;;;;:::i;:::-;2066:14427;;;13330:51;;;;;;;2066:14427;13330:51;;;;2066:14427;;;;;;;;;;;;;;;;;13330:51;;;;;;;;;;2066:14427;13330:51;;;13104:3;2066:14427;;;;;;13070:13;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;13330:51;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13132:42;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14427;;;;;13132:42;;;2066:14427;;;;13132:42;;;;;13085:17;2066:14427;13014:38;;;;;;;2066:14427;13014:38;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;2066:14427;;;;;;;;;12936:41;;;;;;;2066:14427;12936:41;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12669:54;;;;;;;;;;;;;;:::i;:::-;;;;12550:31;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14427;;;;;;;;;12592:49;12550:31;;;;;;;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12383:46;;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14427;;;;;;;12383:46;;;;;;;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2357:1:0;2066:14427:14;;:::i;:::-;2303:62:0;;:::i;:::-;2357:1;:::i;2066:14427:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;11571:16;;2066:14427;11571:16;;;;;;;;;;;2066:14427;11571:16;;;2066:14427;11605:13;2066:14427;11639:3;2066:14427;;11620:17;;;;;11675:9;2066:14427;11675:9;;;11799:61;11675:9;;;:::i;:::-;2066:14427;;11716:10;;;;;:::i;:::-;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;11741:43;2066:14427;;;11741:43;:::i;:::-;2066:14427;;;;11799:61;;11826:10;11799:61;;;2066:14427;;;11846:4;2066:14427;;;;;;;;;;;;;;;;;-1:-1:-1;;2066:14427:14;;;;;;11799:61;;;;;;;;;;2066:14427;11799:61;;;11639:3;;;2066:14427;11605:13;;11799:61;;;;;;-1:-1:-1;11799:61:14;;;;;;:::i;:::-;;;;;;11620:17;;;;;;;;2066:14427;;11884:28;2066:14427;11884:28;;2066:14427;11884:28;;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11884:28;;;;;;;;;;;;;2066:14427;11884:28;2066:14427;11884:28;;;;;;;;;;;;:::i;:::-;;;2066:14427;;;;;11884:28;;;;;;2066:14427;;;;;;;;11571:16;;;;;;2066:14427;11571:16;;;;;;:::i;:::-;;;;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;5168:36;;;;;;:90;;;2066:14427;5168:145;;;2066:14427;;;;5412:32;;;:::i;:::-;5462:13;2066:14427;5477:21;;;;;;2066:14427;;;;;;;:::i;:::-;;;;5500:3;5528:10;;;;;;5659:11;5528:10;;;;;;5616:55;5528:10;5520:59;5528:10;5659:11;5528:10;;:::i;:::-;2066:14427;5528:14;;5520:59;:::i;:::-;5644:13;;2066:14427;;;;;;;5644:13;;:::i;:::-;;:::i;:::-;5659:11;;:::i;:::-;2066:14427;;;5616:55;;;;;2066:14427;5616:55;;2066:14427;5616:55;;;;;2066:14427;;;;;;;;;;;;;;;;;;;;;5616:55;;;;;;;;;;;;;;;;2066:14427;5616:55;;;5500:3;2066:14427;;;;;5755:13;;2066:14427;5748:73;2066:14427;;;5810:10;2066:14427;;5755:13;;:::i;:::-;2066:14427;5810:10;;:::i;:::-;2066:14427;;;5748:73;;5783:10;5748:73;;;2066:14427;;;5803:4;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;;;5748:73;;;;;;;;;;;;;;;;;;;;;;;;5866:13;5748:73;;;;;;;;;;;;;;5500:3;5866:13;;;:::i;:::-;;;;:::i;:::-;5881:11;;;;:::i;:::-;;;;:::i;:::-;5894:10;;;;:::i;:::-;2066:14427;5906:12;;;;:::i;:::-;;;;:::i;:::-;2066:14427;;;5856:63;;2066:14427;;;;5856:63;;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5856:63;;;;;2066:14427;5856:63;;;;;;;;;;;;;;;;;;;;;;;;2066:14427;5856:63;;;5500:3;6071:53;5979:10;;;6100:12;5979:10;;;;;;;;;;;;;6004:52;5979:10;2066:14427;5979:10;;;;;6100:12;5979:10;;;6078:11;5979:10;6078:11;5979:10;;:::i;:::-;2066:14427;;;;;;;5961:13;;2066:14427;;;;;;;;;;5961:13;;:::i;:::-;2066:14427;;;;;;;5934:55;2066:14427;;;;;5934:55;:::i;:::-;2066:14427;;;;;;;;;;6031:11;;;;;;;;:::i;:::-;2066:14427;;;;;;;;;6004:52;:::i;:::-;2066:14427;;6078:11;:::i;:::-;2066:14427;6100:12;;:::i;:::-;2066:14427;;6071:53;;;;;;;2066:14427;6071:53;;;;2066:14427;;;;;;;;;;;;;;;;;6071:53;;;;;;;;;;2066:14427;6071:53;;;5500:3;;;2066:14427;5462:13;;6071:53;;;;;;-1:-1:-1;6071:53:14;;;;;;:::i;:::-;;;;;;;2066:14427;;;;;;;;;5856:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5856:63;;;;;;;;;;;;;;;;;;;;;;;;;;;2066:14427;;;;;;;;;5748:73;;;;;;-1:-1:-1;5748:73:14;;;;;;:::i;:::-;;;;;;5616:55;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14427;;;;;;;;5810:10;2066:14427;;;;;5755:13;;2066:14427;;;5748:73;2066:14427;;;;;:::i;:::-;5616:55;;;;;;;;;;;;;;;;;;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;5168:145;5279:34;;;;5168:145;;:90;5225:33;;;;5168:90;;2066:14427;;;;;;;;;;;;;;:::i;:::-;8837:64:1;;2066:14427:14;;;;;;;;4301:16:1;2066:14427:14;;;;4726:16:1;;:34;;;;2066:14427:14;4805:1:1;4790:16;:50;;;;2066:14427:14;4855:13:1;:30;;;;2066:14427:14;4851:91:1;;;2066:14427:14;;;;4805:1:1;2066:14427:14;;;;;;;4979:67:1;;2066:14427:14;6893:76:1;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;6961:1;2639:10:14;6961:1:1;:::i;:::-;2066:14427:14;;;;;;;;5066:101:1;;2066:14427:14;5066:101:1;5142:14;2066:14427:14;;;;;;;;;;4805:1:1;2066:14427:14;;5142:14:1;2066:14427:14;4979:67:1;2066:14427:14;;;;;;4979:67:1;;;4851:91;2066:14427:14;;4908:23:1;;;;4855:30;4872:13;;;4855:30;;;4790:50;4818:4;4810:25;:30;;-1:-1:-1;4790:50:1;;4726:34;;;-1:-1:-1;4726:34:1;;2066:14427:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;15362:34;;;;;2066:14427;15362:34;;2066:14427;15362:34;;;2066:14427;15362:34;;;;;;;2066:14427;15362:34;;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15362:34;;;;;;;2066:14427;15362:34;;;;;;:::i;:::-;;;;;2066:14427;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;6351:31;2066:14427;6351:31;;2066:14427;;;6351:31;;;2066:14427;;6351:31;2066:14427;6351:31;;;;;;;;;;2066:14427;6351:31;;;2066:14427;;;;6419:16;2066:14427;6419:16;;2066:14427;6419:16;;;;;;;;;;;2066:14427;6419:16;;;2066:14427;6451:13;2066:14427;6485:3;2066:14427;;6466:17;;;;;6546:10;;6571:67;6546:10;;;:::i;:::-;2066:14427;;;;;;;;;;;;6532:9;;;;;:::i;:::-;2066:14427;;;;;;6505:51;2066:14427;;;;;;6505:51;:::i;:::-;2066:14427;;6578:9;;;;;;;:::i;:::-;2066:14427;;6627:10;2066:14427;6627:10;;;;:::i;:::-;2066:14427;;;6571:67;;;;;;2066:14427;6571:67;;6620:4;;6571:67;;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;6571:67;;;;;;;;;;2066:14427;6571:67;;;6485:3;;;2066:14427;6451:13;;6571:67;;;;;;-1:-1:-1;6571:67:14;;;;;;:::i;:::-;;;;;;6419:16;;;;;;;2066:14427;6419:16;;;;;;:::i;:::-;;;;;;2066:14427;;;;;;;;;6351:31;;;;;;;2066:14427;6351:31;;;;;;:::i;:::-;;;;;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;8837:64:1;2066:14427:14;;;;;;;;;;6431:44:1;;;;;2066:14427:14;6427:105:1;;;;6656:20;2066:14427:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6656:20:1;2066:14427:14;6427:105:1;2066:14427:14;;6498:23:1;;;;6431:44;2066:14427:14;;6450:25:1;;;-1:-1:-1;6431:44:1;;;;2066:14427:14;;;;;;;;;;;;;;;1280:65:0;2066:14427:14;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;16456:13;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;;;;6928:45;2066:14427;;;:::i;:::-;6843:10;;;;;;;6835:55;6843:10;;;6835:55;:::i;:::-;6928:45;;:::i;:::-;2066:14427;;;6992:16;2066:14427;;;;;;7040:65;2066:14427;7040:65;;;7091:4;;;;7040:65;7091:4;;7071:10;7040:65;;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;7040:65;;2066:14427;;;;;7040:65;;;;;;;;2066:14427;7118:32;7161;7209:13;2066:14427;7204:1153;7242:3;2066:14427;;7224:16;;;;;7297:8;;;;;:::i;:::-;2066:14427;;;;;7351:16;2066:14427;7351:16;;2066:14427;7351:16;;;;;;;;;;;;;2066:14427;7351:16;;;7242:3;7422:8;;;;7410:21;7422:8;;:::i;:::-;2066:14427;;7410:21;:::i;:::-;7448:17;2066:14427;7485:13;2066:14427;7523:3;2066:14427;;7500:21;;;;;7551:13;;;;;:::i;:::-;2066:14427;;;;;7551:29;;:48;;;7523:3;7547:150;;8084:1;2066:14427;7485:13;;7547:150;7636:13;;;;;;;;;;;;;;;;;:::i;:::-;2066:14427;;7672:5;7480:232;2066:14427;;;7736:23;;;2066:14427;;;;;7812:31;;;;;;2066:14427;;7812:31;;;;;;;;;;;;;;;;2066:14427;7812:31;;;7480:232;7812:50;;2066:14427;;;;;;;;;;;;;8064:48;;;;;;:21;;:48;:21;;;:48;2066:14427;8064:48;7943:184;8064:48;;2066:14427;;7943:184;;;;;;;2066:14427;7943:184;;;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7943:184;;;;;;;;;;;;;;;;2066:14427;7943:184;;;8064:48;8158:8;;;;8084:1;8158:8;;;;;;8229;8158;;;:::i;:::-;2066:14427;;;;8084:1;2066:14427;;;;;;;;;;;;;8144:56;2066:14427;;;;;;8144:56;:::i;:::-;2066:14427;;8229:8;:::i;:::-;2066:14427;;;;;;;;;;;;;;;;;8215:47;2066:14427;;;8215:47;:::i;:::-;2066:14427;;8318:27;7242:3;2066:14427;7209:13;;;7943:184;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14427;;;;;;7943:184;;2066:14427;;;;;;;;8229:8;7943:184;;;;;;;;2066:14427;;;;;;;;;8064:48;7091:4;2066:14427;7091:4;7943:184;7091:4;8064:48;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7812:31;;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14427;;;;;;;7812:31;;;;;;;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;7551:48;7584:11;;;;;:::i;:::-;2066:14427;7584:15;;7551:48;;7500:21;;;;;;;;;;;;;;;7351:16;7410:21;7351:16;;;7422:8;7351:16;;;;;;2066:14427;7351:16;;;;;;:::i;:::-;;;;;;;;7224;2066:14427;;;;;;7040:65;;;;;;;;;;;;;:::i;:::-;;;;;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2303:62:0;;:::i;:::-;2066:14427:14;;;;;;;;;;;;;;;;;;;;;;2303:62:0;;:::i;:::-;2066:14427:14;;1280:65:0;2066:14427:14;;;;;;;;;3975:40:0;;;;2066:14427:14;;;;;;;;;:::i;:::-;3835:55;3843:10;;;;;;3835:55;:::i;:::-;2066:14427;;;;;;;;;3925:47;;2066:14427;3925:47;;;;;;;;;;;;;;2066:14427;;;;;;;;;;;;;;;;;;;;;3925:47;;;;;;;;;;;;;2066:14427;3925:47;;;2066:14427;-1:-1:-1;2066:14427:14;;;4043:65;;4074:10;4043:65;;;2066:14427;;;4094:4;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;;;;4043:65;;2066:14427;4043:65;;;;;;;;;;;;;;;2066:14427;-1:-1:-1;2066:14427:14;;;4138:47;;2066:14427;;;;4138:47;;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4138:47;;2066:14427;4138:47;;;;;;;;;;2066:14427;4138:47;;;;;2066:14427;;;;4314:42;2066:14427;;;;;;;;;;;4198:13;2066:14427;;;;;;;;;;4198:47;2066:14427;;;;;;4198:47;:::i;:::-;2066:14427;;;;4198:13;2066:14427;;;;;;;;;;;;;;;;4256:45;2066:14427;;;4256:45;:::i;:::-;2066:14427;;;;4314:42;;;;;;;2066:14427;4314:42;;;;2066:14427;;;;;;;;;;;;;;;;;4314:42;;;;;;;;;;;2066:14427;;;;;;;4314:42;;;;;;;;;;;;;:::i;:::-;;;;;;2066:14427;;;;;;;;;4138:47;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14427;;;;;;;;;4138:47;;;;;;2066:14427;;;4138:47;;;;;;;4043:65;;;;;;;;;;;;;:::i;:::-;;;;;3925:47;;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14427;;;;;;;;:::i;:::-;3925:47;;;;;;;;2066:14427;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;14440:41;;14470:10;14440:41;;;2066:14427;14440:41;;2066:14427;14440:41;;;;;;;;;2066:14427;14440:41;;;2066:14427;;;;14514:33;2066:14427;14514:33;;;;;;;;;;;;;;2066:14427;14514:33;;;2066:14427;14577:5;;2066:14427;;;;;;;;;;;;;;;;;;;14558:71;2066:14427;14601:3;2066:14427;;14566:38;;14558:71;:::i;:::-;2066:14427;;14708:31;2066:14427;14708:31;;2066:14427;14708:31;;;;;;;;;;;;2066:14427;;;14708:31;;;2066:14427;;;;;14811:16;;2066:14427;14811:16;;;;;;;;;;;2066:14427;14811:16;;;2066:14427;14843:13;2066:14427;14877:3;2066:14427;;14858:17;;;;;14938:15;;2066:14427;14938:15;;;:::i;:::-;2066:14427;;;;;;;;;;;;14924:9;;;;;:::i;:::-;2066:14427;;;;;;14897:56;2066:14427;;;;;;14897:56;:::i;:::-;2066:14427;;15009:18;;;;:::i;:::-;2066:14427;;;;;;;;;;14995:9;;;;;:::i;:::-;2066:14427;;;;;;14968:59;2066:14427;;;;;;14968:59;:::i;:::-;2066:14427;;;14843:13;;14811:16;;;;;;;2066:14427;14811:16;;;;;;:::i;:::-;;;;;14708:31;;;;;;;2066:14427;14708:31;;;;;;:::i;:::-;;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;14708:31;;;;2066:14427;;;;;;;;;;;;;;;;;;;;14514:33;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14427;;;;;14514:33;;;;;;;;;14440:41;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14427;;;;;14440:41;;;;;;;;2066:14427;;;;;;;;;;;;;;5111:6:2;2066:14427:14;5102:4:2;5094:23;5090:145;;2066:14427:14;;;1327:66:6;2066:14427:14;;;5090:145:2;2066:14427:14;5195:29:2;;;;2066:14427:14;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4688:6:2;;2066:14427:14;4679:4:2;;4671:23;:120;;;;;2066:14427:14;4654:251:2;;;2303:62:0;;:::i;:::-;2066:14427:14;;;;;;6151:52:2;;;;;;;;;2066:14427:14;;6151:52:2;;;2066:14427:14;-1:-1:-1;6147:437:2;;2066:14427:14;;;;;;6513:60:2;;;;;;2066:14427:14;6513:60:2;6147:437;1327:66:6;;;;;;;;6245:40:2;;;;6241:120;;2263:29:6;;;:34;2259:119;;2066:14427:14;;;;;;;;;;;2922:27:6;;2066:14427:14;2922:27:6;;2066:14427:14;;2964:15:6;:11;;4255:25:11;;2066:14427:14;4297:55:11;4255:25;;;;;;;;;2066:14427:14;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;4297:55:11;:::i;2066:14427:14:-;-1:-1:-1;2066:14427:14;;-1:-1:-1;4297:55:11;:::i;2960:148:6:-;6648:9;;;;;;;;6644:70;;2066:14427:14;6644:70:6;6684:19;;;;2259:119;2066:14427:14;;;;2320:47:6;;;;;;2066:14427:14;2320:47:6;6241:120:2;2066:14427:14;;;;6312:34:2;;;;;;2066:14427:14;6312:34:2;6151:52;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14427:14;;;;;6151:52:2;;;;;;;;;4654:251;2066:14427:14;;;4865:29:2;;;;4671:120;2066:14427:14;;;1327:66:6;2066:14427:14;;4749:42:2;;4671:120;;;2066:14427:14;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;13952:47;;;2066:14427;13952:47;;2066:14427;13952:47;;;;;;;;;;;2066:14427;;;;;;;;;;;;;;;;;;;;;13952:47;;;;;;;;;;;;;;;;2066:14427;13952:47;;;2066:14427;-1:-1:-1;2066:14427:14;;;14075:45;;2066:14427;;;;14075:45;;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;;14075:45;;2066:14427;;14075:45;;;;;;;2066:14427;14075:45;;;2066:14427;;;;;;14075:45;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14427;;;;;14075:45;;;;;;;;;13952:47;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14427;;;;14075:45;2066:14427;;;;;:::i;:::-;13952:47;;;;;;;;;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;8837:64:1;2066:14427:14;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;15975:368;;2066:14427;;;;;;;;16086:31;2066:14427;16086:31;;;;;;;;;;;;;;;;;;15975:368;2066:14427;16156:28;2066:14427;;16156:28;:::i;:::-;16200:13;16086:31;16234:3;2066:14427;;16215:17;;;;;2066:14427;;;16086:31;2066:14427;;;;;;16086:31;2066:14427;16288:9;;;;;;:::i;:::-;2066:14427;;16086:31;2066:14427;;;16086:31;2066:14427;;16254:44;;;;:::i;:::-;2066:14427;;16200:13;;16215:17;-1:-1:-1;16215:17:14;;-1:-1:-1;;;;15975:368:14:o;16086:31::-;;;;;;;;;;;;;;:::i;:::-;;;;;;2066:14427;;;16086:31;2066:14427;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;3405:215:0:-;2066:14427:14;;;;3489:22:0;;;3485:91;;1280:65;2066:14427:14;;;;;;;;;;;3975:40:0;-1:-1:-1;3975:40:0;;3405:215::o;3485:91::-;2066:14427:14;;;3534:31:0;;;3509:1;3534:31;;;2066:14427:14;3534:31:0;2658:162;2066:14427:14;1280:65:0;2066:14427:14;;966:10:3;2717:23:0;2713:101;;2658:162::o;2713:101::-;2066:14427:14;;;2763:40:0;;;966:10:3;2763:40:0;;;2066:14427:14;2763:40:0;2066:14427:14;;;;;;;;;:::o;8407:1783::-;2066:14427;8600:25;:11;2066:14427;;;;;;8600:25;;;;2066:14427;8600:25;;;;;;;;;:11;:25;;;8407:1783;2066:14427;;;8708:24;;;;:::i;:::-;8743:22;8600:11;2066:14427;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;8859:24;;;:::i;:::-;8894:21;8600:11;2066:14427;;;;;;;;;;;;;9010:21;;;;;;2066:14427;;;;;;;;;;;;;;;;;;;;;;;;;;;8600:11;2066:14427;;8600:11;2066:14427;;;8407:1783;:::o;9003:1105::-;9077:11;9071:18;9077:11;;;:::i;:::-;9071:18;;;:::i;:::-;2066:14427;;;;;9108:23;;9104:277;;8600:11;9417:13;;;;;;9003:1105;;;;9432:3;9461:10;;;;:::i;:::-;2066:14427;;9456:626;;9432:3;2066:14427;;9402:13;;9456:626;9531:11;;;;;:::i;:::-;2066:14427;;;;9596:16;2066:14427;9596:16;;8600:11;9596:16;8600:25;9596:16;;;;;;;;;;;;8600:11;9596:16;;;9456:626;9667:40;;;;;;:::i;:::-;:95;;;;9456:626;9637:426;;;;;9456:626;;;;;9637:426;9833:46;;;;:::i;:::-;9927:11;;;;;:::i;:::-;2066:14427;;9911:12;;;:::i;:::-;9906:32;;;;;:::i;:::-;2066:14427;9971:11;;;;;:::i;:::-;9965:30;;;;:::i;:::-;2066:14427;;;;10022:17;;;;:::i;:::-;2066:14427;;;9637:426;;;;9667:95;9711:51;;;;:::i;:::-;9667:95;;;;;9596:16;;;;;;;8600:11;9596:16;;;;;;:::i;:::-;;;;;9104:277;9181:25;;;;;;;;;;;;;;;:::i;:::-;9230:13;8600:11;9245:14;;;;;;9349:16;;;;;:::o;9261:3::-;9304:7;;;2066:14427;9304:7;;;:::i;:::-;2066:14427;;9289:22;;;;:::i;:::-;2066:14427;;9230:13;;8600:25;;;;;;:11;:25;;;;;;:::i;:::-;;;;10198:274;;10319:1;10341:3;2066:14427;;10322:17;;;;;2066:14427;10365:9;;;;;:::i;:::-;2066:14427;;;;;10365:18;10361:70;;2066:14427;;10307:13;;10361:70;10404:11;;;2066:14427;10404:11;:::o;10322:17::-;;;;10319:1;10198:274;:::o;10480:429::-;10695:16;10480:429;;2066:14427;;;;10632:26;10695:16;10632:26;;;:::i;:::-;2066:14427;;;10695:16;;;;2066:14427;10695:16;;;;;;;;;;;;;10480:429;10727:13;10695:16;10761:3;2066:14427;;10742:17;;;;;10785:9;;;;;:::i;:::-;2066:14427;;;;;10785:18;10781:87;;2066:14427;;10727:13;;10781:87;10831:11;;;;;;;;;:::i;:::-;2066:14427;10831:21;;10824:28;:::o;10742:17::-;;;;;;;10695:16;10480:429;:::o;10695:16::-;;;;;;;;;;;;;;:::i;:::-;;;;;10917:309;;11047:1;11069:3;2066:14427;;11050:17;;;;;2066:14427;11093:9;;;;;:::i;:::-;2066:14427;;;;;11093:18;11089:75;;11069:3;2066:14427;;11035:13;;11089:75;11139:9;;;;;:::i;:::-;2066:14427;;11132:16;:::o;11050:17::-;2066:14427;;;11185:33;;;2066:14427;11185:33;;;2066:14427;;;;;;;;;;;11185:33;7084:141:1;2066:14427:14;8837:64:1;2066:14427:14;;;;7150:18:1;7146:73;;7084:141::o;7146:73::-;7191:17;2066:14427:14;;7191:17:1;;;;4625:582:11;;4797:8;;-1:-1:-1;2066:14427:14;;5874:21:11;:17;;6046:142;;;;;;5870:383;6225:17;2066:14427:14;;6225:17:11;;;;4793:408;2066:14427:14;;5045:22:11;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;2066:14427:14;;;;;5121:24:11;;;;2066:14427:14;5121:24:11;;;2066:14427:14;5121:24:11;5045:49;5071:18;;;:23;5045:49;"},"gasEstimates":{"creation":{"codeDepositCost":"2882200","executionCost":"infinite","totalCost":"infinite"},"external":{"UPGRADE_INTERFACE_VERSION()":"697","addLiquidity(uint256[],address,address)":"infinite","batchSwap(address[],address[],uint256[],address[])":"infinite","changePoolFactory(address)":"26795","getAmountOut(address,address,uint256)":"infinite","getAssetReserves(address,address)":"2795","getPoolsContainingToken(address)":"infinite","getReserves(address)":"infinite","getVersion()":"2263","initialize(address)":"infinite","owner()":"2563","performRebalanceIfNeeded(address)":"infinite","poolFactory()":"2342","poolsReserves(address,address)":"2575","proxiableUUID()":"infinite","rebalanceWeights(address,address)":"infinite","reinitialize(address,uint64)":"50157","removeLiquidity(uint256,address,address)":"infinite","renounceOwnership()":"28225","smartSwap(address,address,uint256,address)":"infinite","swap(address,address,uint256,address)":"infinite","transferOwnership(address)":"28609","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite","_containsToken(address[] memory,address)":"infinite","_findOptimalRoute(address,address,uint256)":"infinite","_getOtherTokenInPool(address[] memory,address)":"infinite","_hasSufficientLiquidity(contract IBaluniV1Pool,address,uint256)":"infinite"}},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","addLiquidity(uint256[],address,address)":"ec0cd2eb","batchSwap(address[],address[],uint256[],address[])":"e74e9b06","changePoolFactory(address)":"72591be5","getAmountOut(address,address,uint256)":"4aa06652","getAssetReserves(address,address)":"8628991e","getPoolsContainingToken(address)":"ae3cce1c","getReserves(address)":"3e99c1e4","getVersion()":"0d8e6e2c","initialize(address)":"c4d66de8","owner()":"8da5cb5b","performRebalanceIfNeeded(address)":"5568081a","poolFactory()":"4219dc40","poolsReserves(address,address)":"4056c37f","proxiableUUID()":"52d1902d","rebalanceWeights(address,address)":"ad414263","reinitialize(address,uint64)":"8f2248bc","removeLiquidity(uint256,address,address)":"f31abcc4","renounceOwnership()":"715018a6","smartSwap(address,address,uint256,address)":"7442eca6","swap(address,address,uint256,address)":"6e81221c","transferOwnership(address)":"f2fde38b","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"fromTokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"toTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolFactory\",\"type\":\"address\"}],\"name\":\"changePoolFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolsContainingToken\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolFactory\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"performRebalanceIfNeeded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFactory\",\"outputs\":[{\"internalType\":\"contract IBaluniV1PoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolsReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"rebalanceWeights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolFactory\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"smartSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract serves as the periphery contract for interacting with BaluniV1Pool contracts. It provides functions for swapping tokens, adding liquidity, removing liquidity, and getting the amount out for a given swap.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"addLiquidity(uint256[],address,address)\":{\"details\":\"Adds liquidity to a BaluniV1Pool.\",\"params\":{\"amounts\":\"An array of amounts for each asset to add as liquidity.\"}},\"batchSwap(address[],address[],uint256[],address[])\":{\"details\":\"Performs batch swaps between multiple token pairs.\",\"params\":{\"amounts\":\"An array of amounts representing the amounts to swap.\",\"fromTokens\":\"An array of addresses representing the tokens to swap from.\",\"receivers\":\"An array of addresses representing the receivers of the swapped tokens.\",\"toTokens\":\"An array of addresses representing the tokens to swap to.\"},\"returns\":{\"_0\":\"An array of amounts representing the amounts of tokens received after the swaps.\"}},\"changePoolFactory(address)\":{\"details\":\"Changes the address of the pool factory contract. Can only be called by the contract owner.\",\"params\":{\"_poolFactory\":\"The new address of the pool factory contract.\"}},\"getAmountOut(address,address,uint256)\":{\"details\":\"Gets the amount of tokens received after a swap in a BaluniV1Pool.\",\"params\":{\"amount\":\"The amount of tokens to swap.\",\"fromToken\":\"The address of the token to swap from.\",\"toToken\":\"The address of the token to swap to.\"},\"returns\":{\"_0\":\"The amount of tokens received after the swap.\"}},\"getPoolsContainingToken(address)\":{\"details\":\"Returns an array of pool addresses that contain the given token.\",\"params\":{\"token\":\"The address of the token to search for.\"},\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getVersion()\":{\"details\":\"Returns the version of the contract.\",\"returns\":{\"_0\":\"The version string.\"}},\"initialize(address)\":{\"details\":\"Initializes the contract by setting the pool factory address.\",\"params\":{\"_poolFactory\":\"The address of the BaluniV1PoolFactory contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"performRebalanceIfNeeded(address)\":{\"details\":\"Performs rebalance if needed for the given tokens.\",\"params\":{\"poolAddress\":\"The address of the token pool to rebalance.\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"reinitialize(address,uint64)\":{\"details\":\"Initializes the contract by setting the pool factory address.\",\"params\":{\"_poolFactory\":\"The address of the BaluniV1PoolFactory contract.\"}},\"removeLiquidity(uint256,address,address)\":{\"details\":\"Removes liquidity from a BaluniV1Pool.\",\"params\":{\"poolAddress\":\"The address of the BaluniV1Pool.\",\"share\":\"The amount of liquidity tokens to remove.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"swap(address,address,uint256,address)\":{\"details\":\"Swaps tokens in a BaluniV1Pool.\",\"params\":{\"amount\":\"The amount of tokens to swap.\",\"fromToken\":\"The address of the token to swap from.\",\"toToken\":\"The address of the token to swap to.\"},\"returns\":{\"_0\":\"The amount of tokens received after the swap.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"BaluniV1PoolPeriphery\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaluniV1PoolPeriphery.sol\":\"BaluniV1PoolPeriphery\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"contracts/BaluniV1PoolPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\nimport './interfaces/IBaluniV1PoolFactory.sol';\\r\\nimport './interfaces/IBaluniV1Pool.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\\r\\n\\r\\n/**\\r\\n * @title BaluniV1PoolPeriphery\\r\\n * @dev This contract serves as the periphery contract for interacting with BaluniV1Pool contracts.\\r\\n * It provides functions for swapping tokens, adding liquidity, removing liquidity, and getting the amount out for a given swap.\\r\\n */\\r\\ncontract BaluniV1PoolPeriphery is Initializable, OwnableUpgradeable, UUPSUpgradeable {\\r\\n    IBaluniV1PoolFactory public poolFactory;\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) public poolsReserves; // Mapping of token address to pool addresses (for quick lookup\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract by setting the pool factory address.\\r\\n     * @param _poolFactory The address of the BaluniV1PoolFactory contract.\\r\\n     */\\r\\n    function initialize(address _poolFactory) public initializer {\\r\\n        __UUPSUpgradeable_init();\\r\\n        __Ownable_init(msg.sender);\\r\\n        poolFactory = IBaluniV1PoolFactory(_poolFactory);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract by setting the pool factory address.\\r\\n     * @param _poolFactory The address of the BaluniV1PoolFactory contract.\\r\\n     */\\r\\n    function reinitialize(address _poolFactory, uint64 version) public reinitializer(version) {\\r\\n        poolFactory = IBaluniV1PoolFactory(_poolFactory);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to authorize an upgrade to a new implementation contract.\\r\\n     * @param newImplementation The address of the new implementation contract.\\r\\n     * @notice This function can only be called by the contract owner.\\r\\n     */\\r\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\r\\n\\r\\n    /**\\r\\n     * @dev Swaps tokens in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256) {\\r\\n        require(amount > 0, 'Amount must be greater than zero');\\r\\n\\r\\n        address poolAddress = poolFactory.getPoolByAssets(fromToken, toToken);\\r\\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\\r\\n\\r\\n        IERC20(fromToken).transferFrom(msg.sender, address(this), amount);\\r\\n\\r\\n        uint256 toSend = pool.swap(fromToken, toToken, amount, receiver);\\r\\n\\r\\n        poolsReserves[poolAddress][fromToken] += amount;\\r\\n        poolsReserves[poolAddress][toToken] -= toSend;\\r\\n\\r\\n        IERC20(toToken).transfer(receiver, toSend);\\r\\n\\r\\n        return toSend;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs batch swaps between multiple token pairs.\\r\\n     * @param fromTokens An array of addresses representing the tokens to swap from.\\r\\n     * @param toTokens An array of addresses representing the tokens to swap to.\\r\\n     * @param amounts An array of amounts representing the amounts to swap.\\r\\n     * @param receivers An array of addresses representing the receivers of the swapped tokens.\\r\\n     * @return An array of amounts representing the amounts of tokens received after the swaps.\\r\\n     */\\r\\n    function batchSwap(\\r\\n        address[] calldata fromTokens,\\r\\n        address[] calldata toTokens,\\r\\n        uint256[] calldata amounts,\\r\\n        address[] calldata receivers\\r\\n    ) external returns (uint256[] memory) {\\r\\n        require(\\r\\n            fromTokens.length == toTokens.length &&\\r\\n                toTokens.length == amounts.length &&\\r\\n                amounts.length == receivers.length,\\r\\n            'Input arrays length mismatch'\\r\\n        );\\r\\n\\r\\n        uint256[] memory amountsOut = new uint256[](fromTokens.length);\\r\\n\\r\\n        for (uint256 i = 0; i < fromTokens.length; i++) {\\r\\n            require(amounts[i] > 0, 'Amount must be greater than zero');\\r\\n            address poolAddress = poolFactory.getPoolByAssets(fromTokens[i], toTokens[i]);\\r\\n            IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\\r\\n            IERC20(fromTokens[i]).transferFrom(msg.sender, address(this), amounts[i]);\\r\\n            uint256 amountOut = pool.swap(fromTokens[i], toTokens[i], amounts[i], receivers[i]);\\r\\n            poolsReserves[poolAddress][fromTokens[i]] += amounts[i];\\r\\n            poolsReserves[poolAddress][toTokens[i]] -= amountOut;\\r\\n            IERC20(toTokens[i]).transfer(receivers[i], amountOut);\\r\\n        }\\r\\n\\r\\n        return amountsOut;\\r\\n    }\\r\\n\\r\\n    function rebalanceWeights(address receiver, address poolAddress) external {\\r\\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\\r\\n        uint256[] memory amounts = pool.rebalanceWeights(receiver);\\r\\n        address[] memory assets = pool.getAssets();\\r\\n        for (uint256 i = 0; i < assets.length; i++) {\\r\\n            poolsReserves[poolAddress][assets[i]] += amounts[i];\\r\\n            IERC20(assets[i]).transferFrom(receiver, address(this), amounts[i]);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function smartSwap(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256) {\\r\\n        require(amount > 0, 'Amount must be greater than zero');\\r\\n\\r\\n        address[] memory pools = _findOptimalRoute(fromToken, toToken, amount);\\r\\n        require(pools.length > 0, 'No route found');\\r\\n\\r\\n        IERC20(fromToken).transferFrom(msg.sender, address(this), amount);\\r\\n\\r\\n        uint256 amountRemaining = amount;\\r\\n        address currentToken = fromToken;\\r\\n        for (uint256 i = 0; i < pools.length; i++) {\\r\\n            IBaluniV1Pool pool = IBaluniV1Pool(pools[i]);\\r\\n            address[] memory poolTokens = pool.getAssets();\\r\\n            uint256[] memory reserves = getReserves(pools[i]);\\r\\n\\r\\n            address nextToken;\\r\\n            for (uint256 j = 0; j < poolTokens.length; j++) {\\r\\n                if (poolTokens[j] != currentToken && reserves[j] > 0) {\\r\\n                    nextToken = poolTokens[j];\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            require(nextToken != address(0), 'No valid next token found');\\r\\n            require(pool.getAssetReserve(nextToken) >= amountRemaining, 'Insufficient liquidity in pool for swap');\\r\\n\\r\\n            uint256 amountOut = pool.swap(\\r\\n                currentToken,\\r\\n                nextToken,\\r\\n                amountRemaining,\\r\\n                i == pools.length - 1 ? receiver : address(this)\\r\\n            );\\r\\n\\r\\n            poolsReserves[pools[i]][currentToken] += amountRemaining;\\r\\n            poolsReserves[pools[i]][nextToken] -= amountOut;\\r\\n\\r\\n            currentToken = nextToken;\\r\\n            amountRemaining = amountOut;\\r\\n        }\\r\\n\\r\\n        return amountRemaining;\\r\\n    }\\r\\n\\r\\n    function _findOptimalRoute(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) internal view returns (address[] memory) {\\r\\n        address[] memory allPools = poolFactory.getAllPools();\\r\\n        uint256 poolCount = allPools.length;\\r\\n\\r\\n        address[] memory path = new address[](poolCount);\\r\\n        uint256 pathLength = 0;\\r\\n        bool[] memory visited = new bool[](poolCount);\\r\\n\\r\\n        address[] memory queue = new address[](poolCount);\\r\\n        uint256 queueHead = 0;\\r\\n        uint256 queueTail = 0;\\r\\n\\r\\n        queue[queueTail++] = fromToken;\\r\\n\\r\\n        while (queueHead < queueTail) {\\r\\n            address currentToken = queue[queueHead++];\\r\\n            if (currentToken == toToken) {\\r\\n                address[] memory finalPath = new address[](pathLength);\\r\\n                for (uint256 i = 0; i < pathLength; i++) {\\r\\n                    finalPath[i] = path[i];\\r\\n                }\\r\\n                return finalPath;\\r\\n            }\\r\\n\\r\\n            for (uint256 i = 0; i < poolCount; i++) {\\r\\n                if (!visited[i]) {\\r\\n                    IBaluniV1Pool pool = IBaluniV1Pool(allPools[i]);\\r\\n                    address[] memory poolTokens = pool.getAssets();\\r\\n\\r\\n                    if (\\r\\n                        _containsToken(poolTokens, currentToken) && _hasSufficientLiquidity(pool, currentToken, amount)\\r\\n                    ) {\\r\\n                        address nextToken = _getOtherTokenInPool(poolTokens, currentToken);\\r\\n                        path[pathLength++] = allPools[i];\\r\\n                        queue[queueTail++] = nextToken;\\r\\n                        visited[i] = true;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        address[] memory addr = new address[](0);\\r\\n        return addr;\\r\\n    }\\r\\n\\r\\n    function _containsToken(address[] memory tokens, address token) internal pure returns (bool) {\\r\\n        for (uint256 i = 0; i < tokens.length; i++) {\\r\\n            if (tokens[i] == token) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function _hasSufficientLiquidity(IBaluniV1Pool pool, address token, uint256 amount) internal view returns (bool) {\\r\\n        uint256[] memory reserves = getReserves(address(pool));\\r\\n        address[] memory assets = pool.getAssets();\\r\\n        for (uint256 i = 0; i < assets.length; i++) {\\r\\n            if (assets[i] == token) {\\r\\n                return reserves[i] >= amount;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function _getOtherTokenInPool(address[] memory tokens, address token) internal pure returns (address) {\\r\\n        for (uint256 i = 0; i < tokens.length; i++) {\\r\\n            if (tokens[i] != token) {\\r\\n                return tokens[i];\\r\\n            }\\r\\n        }\\r\\n        revert('Token not found in pool');\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Adds liquidity to a BaluniV1Pool.\\r\\n     * @param amounts An array of amounts for each asset to add as liquidity.\\r\\n     */\\r\\n    function addLiquidity(uint256[] calldata amounts, address poolAddress, address receiver) external {\\r\\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\\r\\n        address[] memory assets = pool.getAssets();\\r\\n\\r\\n        for (uint256 i = 0; i < assets.length; i++) {\\r\\n            address asset = assets[i];\\r\\n            uint256 amount = amounts[i];\\r\\n            poolsReserves[poolAddress][asset] += amount;\\r\\n            IERC20(asset).transferFrom(msg.sender, address(this), amount);\\r\\n        }\\r\\n\\r\\n        pool.mint(receiver, amounts);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Removes liquidity from a BaluniV1Pool.\\r\\n     * @param share The amount of liquidity tokens to remove.\\r\\n     * @param poolAddress The address of the BaluniV1Pool.\\r\\n     */\\r\\n    function removeLiquidity(uint256 share, address poolAddress, address receiver) external {\\r\\n        require(share > 0, 'Share must be greater than zero');\\r\\n        IERC20 poolToken = IERC20(poolAddress);\\r\\n\\r\\n        // Check allowance\\r\\n        uint256 allowance = poolToken.allowance(msg.sender, address(this));\\r\\n        require(allowance >= share, 'Insufficient allowance');\\r\\n\\r\\n        // Check balance\\r\\n        uint256 balance = poolToken.balanceOf(msg.sender);\\r\\n        require(balance >= share, 'Insufficient balance');\\r\\n\\r\\n        bool success = poolToken.transferFrom(msg.sender, poolAddress, share);\\r\\n        require(success, 'TransferFrom failed');\\r\\n\\r\\n        // bool success2 = poolToken.transfer(poolAddress, share);\\r\\n        // require(success2, 'Transfer failed');\\r\\n\\r\\n        uint256[] memory amountsOut = IBaluniV1Pool(poolAddress).burn(receiver);\\r\\n        address[] memory assets = IBaluniV1Pool(poolAddress).getAssets();\\r\\n\\r\\n        for (uint256 i = 0; i < assets.length; i++) {\\r\\n            require(IERC20(assets[i]).balanceOf(address(this)) >= amountsOut[i], 'Insufficient Liquidity');\\r\\n            poolsReserves[poolAddress][assets[i]] -= amountsOut[i];\\r\\n            bool assetTransferSuccess = IERC20(assets[i]).transfer(receiver, amountsOut[i]);\\r\\n            require(assetTransferSuccess, 'Asset transfer failed');\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256) {\\r\\n        address poolAddress = poolFactory.getPoolByAssets(fromToken, toToken);\\r\\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\\r\\n        return pool.getAmountOut(fromToken, toToken, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed for the given tokens.\\r\\n     * @param poolAddress The address of the token pool to rebalance.\\r\\n     */\\r\\n    function performRebalanceIfNeeded(address poolAddress) external {\\r\\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\\r\\n        uint256 balance = IERC20(poolAddress).balanceOf(msg.sender);\\r\\n        uint256 totalSupply = IERC20(poolAddress).totalSupply();\\r\\n        require((balance * 10000) / totalSupply >= 100, 'Insufficient balance');\\r\\n        (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove) = pool.performRebalanceIfNeeded();\\r\\n\\r\\n        // update Pool reserves\\r\\n        address[] memory assets = pool.getAssets();\\r\\n        for (uint256 i = 0; i < assets.length; i++) {\\r\\n            poolsReserves[poolAddress][assets[i]] += amountsToAdd[i];\\r\\n            poolsReserves[poolAddress][assets[i]] -= amountsToRemove[i];\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of pool addresses that contain the given token.\\r\\n     * @param token The address of the token to search for.\\r\\n     * @return An array of pool addresses.\\r\\n     */\\r\\n    function getPoolsContainingToken(address token) external view returns (address[] memory) {\\r\\n        return poolFactory.getPoolsByAsset(token);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the version of the contract.\\r\\n     * @return The version string.\\r\\n     */\\r\\n    function getVersion() external view returns (uint64) {\\r\\n        return _getInitializedVersion();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Changes the address of the pool factory contract.\\r\\n     * Can only be called by the contract owner.\\r\\n     * @param _poolFactory The new address of the pool factory contract.\\r\\n     */\\r\\n    function changePoolFactory(address _poolFactory) external onlyOwner {\\r\\n        poolFactory = IBaluniV1PoolFactory(_poolFactory);\\r\\n    }\\r\\n\\r\\n    function getReserves(address pool) public view returns (uint256[] memory) {\\r\\n        address[] memory assets = IBaluniV1Pool(pool).getAssets();\\r\\n        uint256[] memory reserves = new uint256[](assets.length);\\r\\n        for (uint256 i = 0; i < assets.length; i++) {\\r\\n            reserves[i] = poolsReserves[pool][assets[i]];\\r\\n        }\\r\\n        return reserves;\\r\\n    }\\r\\n\\r\\n    function getAssetReserves(address pool, address asset) external view returns (uint256) {\\r\\n        return poolsReserves[pool][asset];\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1c7050161d899eb07cefa8033b8bdfacac754822dfe9e22a297ae4dffd0483cb\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\n\\r\\ninterface IBaluniV1Pool {\\r\\n    // Views\\r\\n    function rebalancer() external view returns (address);\\r\\n\\r\\n    function assets(uint256 index) external view returns (address);\\r\\n\\r\\n    function weights(uint256 index) external view returns (uint256);\\r\\n\\r\\n    function trigger() external view returns (uint256);\\r\\n\\r\\n    function ONE() external view returns (uint256);\\r\\n\\r\\n    function router() external view returns (address);\\r\\n\\r\\n    function SWAP_FEE_BPS() external view returns (uint256);\\r\\n\\r\\n    function getReserves() external view returns (uint256[] memory);\\r\\n\\r\\n    function getAssets() external view returns (address[] memory);\\r\\n\\r\\n    function getAssetReserve(address asset) external view returns (uint256);\\r\\n\\r\\n    function getWeights() external view returns (uint256[] memory);\\r\\n\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n\\r\\n    function performRebalanceIfNeeded()\\r\\n        external\\r\\n        returns (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove);\\r\\n\\r\\n    function getDeviation() external view returns (bool[] memory directions, uint256[] memory deviations);\\r\\n\\r\\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256);\\r\\n\\r\\n    function liquidity() external view returns (uint256);\\r\\n\\r\\n    function unitPrice() external view returns (uint256);\\r\\n\\r\\n    function swap(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256 toSend);\\r\\n\\r\\n    function mint(address to, uint256[] memory amounts) external returns (uint256);\\r\\n\\r\\n    function burn(address to) external returns (uint256[] memory);\\r\\n\\r\\n    function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n    function changeRouter(address _newRouter) external;\\r\\n\\r\\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations);\\r\\n\\r\\n    function updateReserves(uint256[] memory amounts, bool increase) external;\\r\\n\\r\\n    function rebalanceWeights(address receiver) external returns (uint256[] memory);\\r\\n\\r\\n    struct AssetInfo {\\r\\n        address asset;\\r\\n        uint256 weight;\\r\\n    }\\r\\n\\r\\n    function assetInfos(uint _index) external view returns (AssetInfo memory);\\r\\n\\r\\n    // Events\\r\\n    event RebalancePerformed(address indexed by, address[] assets);\\r\\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\\r\\n    event Burn(address indexed user, uint256 sharesBurned);\\r\\n    event Mint(address indexed to, uint256 sharesMinted);\\r\\n    event Swap(\\r\\n        address indexed user,\\r\\n        address indexed fromToken,\\r\\n        address indexed toToken,\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOut\\r\\n    );\\r\\n}\\r\\n\",\"keccak256\":\"0xbd04537a5ea07c608c25fafb77e1e7feb3900f483526bcdc31c6b1cd2296b3d9\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1PoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1PoolFactory {\\r\\n    function getPoolByAssets(address asset1, address asset2) external view returns (address);\\r\\n\\r\\n    function getPoolsByAsset(address token) external view returns (address[] memory);\\r\\n\\r\\n    function poolExist(address _pool) external view returns (bool);\\r\\n\\r\\n    function getAllPools() external view returns (address[] memory);\\r\\n}\\r\\n\",\"keccak256\":\"0x4f51278fac200941b584fe1eea589e22e4f6fb323d9bf2dfea3dcf6179b4b694\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2165,"contract":"contracts/BaluniV1PoolPeriphery.sol:BaluniV1PoolPeriphery","label":"poolFactory","offset":0,"slot":"0","type":"t_contract(IBaluniV1PoolFactory)3917"},{"astId":2171,"contract":"contracts/BaluniV1PoolPeriphery.sol:BaluniV1PoolPeriphery","label":"poolsReserves","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(IBaluniV1PoolFactory)3917":{"encoding":"inplace","label":"contract IBaluniV1PoolFactory","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/I1inchSpotAgg.sol":{"I1inchSpotAgg":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"srcToken","type":"address"},{"internalType":"contract IERC20","name":"dstToken","type":"address"},{"internalType":"bool","name":"useWrappers","type":"bool"}],"name":"getRate","outputs":[{"internalType":"uint256","name":"weightedRate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"srcToken","type":"address"},{"internalType":"bool","name":"useWrappers","type":"bool"}],"name":"getRateToEth","outputs":[{"internalType":"uint256","name":"weightedRate","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getRate(address,address,bool)":"802431fb","getRateToEth(address,bool)":"7de4fd10"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"dstToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useWrappers\",\"type\":\"bool\"}],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weightedRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useWrappers\",\"type\":\"bool\"}],\"name\":\"getRateToEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weightedRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/I1inchSpotAgg.sol\":\"I1inchSpotAgg\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Agent.sol":{"IBaluniV1Agent":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct IBaluniV1Agent.Call[]","name":"calls","type":"tuple[]"},{"internalType":"address[]","name":"tokensReturn","type":"address[]"}],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"execute((address,uint256,bytes)[],address[])":"eedc3c50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IBaluniV1Agent.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"tokensReturn\",\"type\":\"address[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Agent.sol\":\"IBaluniV1Agent\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IBaluniV1Agent.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Agent {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1bbf5ddbc4f525451e727d6997e6a20a6238d69232b58b3813760a16e7f60bbe\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Pool.sol":{"IBaluniV1Pool":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"sharesBurned","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"sharesMinted","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"by","type":"address"},{"indexed":false,"internalType":"address[]","name":"assets","type":"address[]"}],"name":"RebalancePerformed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"fromToken","type":"address"},{"indexed":true,"internalType":"address","name":"toToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"amountsAdded","type":"uint256[]"}],"name":"WeightsRebalanced","type":"event"},{"inputs":[],"name":"ONE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SWAP_FEE_BPS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"assetInfos","outputs":[{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"weight","type":"uint256"}],"internalType":"struct IBaluniV1Pool.AssetInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetIndex","type":"uint256"}],"name":"assetLiquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"assets","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"burn","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newRebalancer","type":"address"}],"name":"changeRebalancer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newRouter","type":"address"}],"name":"changeRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"computeTotalValuation","outputs":[{"internalType":"uint256","name":"totalVal","type":"uint256"},{"internalType":"uint256[]","name":"valuations","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAssets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeviation","outputs":[{"internalType":"bool[]","name":"directions","type":"bool[]"},{"internalType":"uint256[]","name":"deviations","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWeights","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"performRebalanceIfNeeded","outputs":[{"internalType":"uint256[]","name":"amountsToAdd","type":"uint256[]"},{"internalType":"uint256[]","name":"amountsToRemove","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"rebalanceWeights","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"router","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"toSend","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"trigger","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bool","name":"increase","type":"bool"}],"name":"updateReserves","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"weights","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"ONE()":"c2ee3a08","SWAP_FEE_BPS()":"67a6c440","assetInfos(uint256)":"d14ef46d","assetLiquidity(uint256)":"cf8fa764","assets(uint256)":"cf35bdd0","burn(address)":"89afcb44","changeRebalancer(address)":"0918281b","changeRouter(address)":"340ac20f","computeTotalValuation()":"36bf6e39","getAmountOut(address,address,uint256)":"4aa06652","getAssetReserve(address)":"b2b55d70","getAssets()":"67e4ac2c","getDeviation()":"89ab3532","getReserves()":"0902f1ac","getWeights()":"22acb867","liquidity()":"1a686502","mint(address,uint256[])":"de836ebd","performRebalanceIfNeeded()":"f47b45e8","rebalanceWeights(address)":"0723c999","rebalancer()":"01d22ccd","router()":"f887ea40","swap(address,address,uint256,address)":"6e81221c","trigger()":"7fec8d38","unitPrice()":"e73faa2d","updateReserves(uint256[],bool)":"3dff5b7f","weights(uint256)":"b5f163ff"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesBurned\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesMinted\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"RebalancePerformed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amountsAdded\",\"type\":\"uint256[]\"}],\"name\":\"WeightsRebalanced\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWAP_FEE_BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"assetInfos\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaluniV1Pool.AssetInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetIndex\",\"type\":\"uint256\"}],\"name\":\"assetLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRebalancer\",\"type\":\"address\"}],\"name\":\"changeRebalancer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRouter\",\"type\":\"address\"}],\"name\":\"changeRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"computeTotalValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalVal\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"valuations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeviation\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"directions\",\"type\":\"bool[]\"},{\"internalType\":\"uint256[]\",\"name\":\"deviations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performRebalanceIfNeeded\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsToAdd\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsToRemove\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"rebalanceWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"toSend\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trigger\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"increase\",\"type\":\"bool\"}],\"name\":\"updateReserves\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"weights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Pool.sol\":\"IBaluniV1Pool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/interfaces/IBaluniV1Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\n\\r\\ninterface IBaluniV1Pool {\\r\\n    // Views\\r\\n    function rebalancer() external view returns (address);\\r\\n\\r\\n    function assets(uint256 index) external view returns (address);\\r\\n\\r\\n    function weights(uint256 index) external view returns (uint256);\\r\\n\\r\\n    function trigger() external view returns (uint256);\\r\\n\\r\\n    function ONE() external view returns (uint256);\\r\\n\\r\\n    function router() external view returns (address);\\r\\n\\r\\n    function SWAP_FEE_BPS() external view returns (uint256);\\r\\n\\r\\n    function getReserves() external view returns (uint256[] memory);\\r\\n\\r\\n    function getAssets() external view returns (address[] memory);\\r\\n\\r\\n    function getAssetReserve(address asset) external view returns (uint256);\\r\\n\\r\\n    function getWeights() external view returns (uint256[] memory);\\r\\n\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n\\r\\n    function performRebalanceIfNeeded()\\r\\n        external\\r\\n        returns (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove);\\r\\n\\r\\n    function getDeviation() external view returns (bool[] memory directions, uint256[] memory deviations);\\r\\n\\r\\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256);\\r\\n\\r\\n    function liquidity() external view returns (uint256);\\r\\n\\r\\n    function unitPrice() external view returns (uint256);\\r\\n\\r\\n    function swap(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256 toSend);\\r\\n\\r\\n    function mint(address to, uint256[] memory amounts) external returns (uint256);\\r\\n\\r\\n    function burn(address to) external returns (uint256[] memory);\\r\\n\\r\\n    function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n    function changeRouter(address _newRouter) external;\\r\\n\\r\\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations);\\r\\n\\r\\n    function updateReserves(uint256[] memory amounts, bool increase) external;\\r\\n\\r\\n    function rebalanceWeights(address receiver) external returns (uint256[] memory);\\r\\n\\r\\n    struct AssetInfo {\\r\\n        address asset;\\r\\n        uint256 weight;\\r\\n    }\\r\\n\\r\\n    function assetInfos(uint _index) external view returns (AssetInfo memory);\\r\\n\\r\\n    // Events\\r\\n    event RebalancePerformed(address indexed by, address[] assets);\\r\\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\\r\\n    event Burn(address indexed user, uint256 sharesBurned);\\r\\n    event Mint(address indexed to, uint256 sharesMinted);\\r\\n    event Swap(\\r\\n        address indexed user,\\r\\n        address indexed fromToken,\\r\\n        address indexed toToken,\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOut\\r\\n    );\\r\\n}\\r\\n\",\"keccak256\":\"0xbd04537a5ea07c608c25fafb77e1e7feb3900f483526bcdc31c6b1cd2296b3d9\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1PoolFactory.sol":{"IBaluniV1PoolFactory":{"abi":[{"inputs":[],"name":"getAllPools","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset1","type":"address"},{"internalType":"address","name":"asset2","type":"address"}],"name":"getPoolByAssets","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getPoolsByAsset","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_pool","type":"address"}],"name":"poolExist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAllPools()":"d88ff1f4","getPoolByAssets(address,address)":"2d5e94a7","getPoolsByAsset(address)":"b4340e6a","poolExist(address)":"89345efb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getAllPools\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset2\",\"type\":\"address\"}],\"name\":\"getPoolByAssets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolsByAsset\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"poolExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1PoolFactory.sol\":\"IBaluniV1PoolFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IBaluniV1PoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1PoolFactory {\\r\\n    function getPoolByAssets(address asset1, address asset2) external view returns (address);\\r\\n\\r\\n    function getPoolsByAsset(address token) external view returns (address[] memory);\\r\\n\\r\\n    function poolExist(address _pool) external view returns (bool);\\r\\n\\r\\n    function getAllPools() external view returns (address[] memory);\\r\\n}\\r\\n\",\"keccak256\":\"0x4f51278fac200941b584fe1eea589e22e4f6fb323d9bf2dfea3dcf6179b4b694\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"IBaluniV1Rebalancer":{"abi":[{"inputs":[],"name":"USDC","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WNATIVE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_1InchSpotAgg","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baluniRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"checkRebalance","outputs":[{"components":[{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"uint256","name":"totalValue","type":"uint256"},{"internalType":"uint256","name":"finalUsdBalance","type":"uint256"},{"internalType":"uint256","name":"overweightVaultsLength","type":"uint256"},{"internalType":"uint256","name":"underweightVaultsLength","type":"uint256"},{"internalType":"uint256","name":"totalActiveWeight","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256[]","name":"overweightVaults","type":"uint256[]"},{"internalType":"uint256[]","name":"overweightAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"underweightVaults","type":"uint256[]"},{"internalType":"uint256[]","name":"underweightAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"}],"internalType":"struct IBaluniV1Rebalancer.RebalanceVars","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convert","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"rebalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uniswapFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uniswapRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"USDC()":"89a30271","WNATIVE()":"b381cf40","_1InchSpotAgg()":"eb06b29d","baluniRouter()":"39b65140","checkRebalance(uint256[],address[],uint256[],uint256,address,address)":"997146f5","convert(address,address,uint256)":"248391ff","rebalance(uint256[],address[],uint256[],uint256,address,address,address)":"f0bf7714","treasury()":"61d027b3","uniswapFactory()":"8bdb2afa","uniswapRouter()":"735de9f7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WNATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_1InchSpotAgg\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baluniRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"checkRebalance\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalUsdBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overweightVaultsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underweightVaultsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalActiveWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"overweightVaults\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"overweightAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underweightVaults\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underweightAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IBaluniV1Rebalancer.RebalanceVars\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Rebalancer.sol\":\"IBaluniV1Rebalancer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Agent.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Agent {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1bbf5ddbc4f525451e727d6997e6a20a6238d69232b58b3813760a16e7f60bbe\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport './IBaluniV1Router.sol';\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n  struct RebalanceVars {\\r\\n    uint256 length;\\r\\n    uint256 totalValue;\\r\\n    uint256 finalUsdBalance;\\r\\n    uint256 overweightVaultsLength;\\r\\n    uint256 underweightVaultsLength;\\r\\n    uint256 totalActiveWeight;\\r\\n    uint256 amountOut;\\r\\n    uint256[] overweightVaults;\\r\\n    uint256[] overweightAmounts;\\r\\n    uint256[] underweightVaults;\\r\\n    uint256[] underweightAmounts;\\r\\n    uint256[] balances;\\r\\n  }\\r\\n\\r\\n  // Variables\\r\\n  function baluniRouter() external view returns (address);\\r\\n\\r\\n  function USDC() external view returns (address);\\r\\n\\r\\n  function WNATIVE() external view returns (address);\\r\\n\\r\\n  function uniswapRouter() external view returns (address);\\r\\n\\r\\n  function uniswapFactory() external view returns (address);\\r\\n\\r\\n  function _1InchSpotAgg() external view returns (address);\\r\\n\\r\\n  function treasury() external view returns (address);\\r\\n\\r\\n  // Functions\\r\\n  function rebalance(\\r\\n    uint256[] memory balances,\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    uint256 limit,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function checkRebalance(\\r\\n    uint256[] memory balances,\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    uint256 limit,\\r\\n    address sender,\\r\\n    address baseAsset\\r\\n  ) external view returns (RebalanceVars memory);\\r\\n\\r\\n  function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0xe7e9c4fbe80061f09e49a3c9861c415d023383069ee1c59b39f85290791e8c3f\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Router.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\\r\\nimport './I1inchSpotAgg.sol';\\r\\nimport './IBaluniV1Agent.sol';\\r\\n\\r\\ninterface IBaluniV1Router {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  // Variables\\r\\n  function _MAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_BASE() external view returns (uint256);\\r\\n\\r\\n  function getTokens() external view returns (address[] memory);\\r\\n\\r\\n  function USDC() external view returns (IERC20);\\r\\n\\r\\n  function WNATIVE() external view returns (address);\\r\\n\\r\\n  function oracle() external view returns (address);\\r\\n\\r\\n  function uniswapRouter() external view returns (address);\\r\\n\\r\\n  function uniswapFactory() external view returns (address);\\r\\n\\r\\n  function agentFactory() external view returns (address);\\r\\n\\r\\n  function marketOracle() external view returns (address);\\r\\n\\r\\n  function rebalancer() external view returns (address);\\r\\n\\r\\n  function treasury() external view returns (address);\\r\\n\\r\\n  // Functions\\r\\n  function initialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer\\r\\n  ) external;\\r\\n\\r\\n  function reinitialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer,\\r\\n    uint64 version\\r\\n  ) external;\\r\\n\\r\\n  function initializeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeBpsFee(uint256 _newFee) external;\\r\\n\\r\\n  function changeTreasury(address _newTreasury) external;\\r\\n\\r\\n  function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n  function changeAgentFactory(address _agentFactory) external;\\r\\n\\r\\n  function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external;\\r\\n\\r\\n  function liquidate(address token) external;\\r\\n\\r\\n  function liquidateAll() external;\\r\\n\\r\\n  function burnERC20(uint256 burnAmount) external;\\r\\n\\r\\n  function burnUSDC(uint256 burnAmount) external;\\r\\n\\r\\n  function getAgentAddress(address _user) external view returns (address);\\r\\n\\r\\n  function mintWithUSDC(uint256 balAmountToMint) external;\\r\\n\\r\\n  function callRebalance(\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    uint256 limit,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function requiredUSDCtoMint(uint256 balAmountToMint) external view returns (uint256);\\r\\n\\r\\n  function calculateTokenShare(\\r\\n    uint256 totalBaluni,\\r\\n    uint256 totalERC20Balance,\\r\\n    uint256 baluniAmount,\\r\\n    uint256 tokenDecimals\\r\\n  ) external pure returns (uint256);\\r\\n\\r\\n  function tokenValuation(uint256 amount, address token) external view returns (uint256);\\r\\n\\r\\n  function totalValuation() external view returns (uint256);\\r\\n\\r\\n  function getUSDCShareValue(uint256 amount) external view returns (uint256);\\r\\n\\r\\n  function fetchMarketPrices() external view returns (uint256, uint256);\\r\\n\\r\\n  function getVersion() external view returns (uint64);\\r\\n\\r\\n  function unitPrice() external view returns (uint256);\\r\\n  \\r\\n}\\r\\n\",\"keccak256\":\"0x0795abf370daca8b74052ab6f425ab982bb4e0aecc4a72de19b3ff505d9e18a5\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Router.sol":{"IBaluniV1Router":{"abi":[{"inputs":[],"name":"USDC","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WNATIVE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_BPS_BASE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_BPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_MAX_BPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"agentFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"burnAmount","type":"uint256"}],"name":"burnERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"burnAmount","type":"uint256"}],"name":"burnUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"totalBaluni","type":"uint256"},{"internalType":"uint256","name":"totalERC20Balance","type":"uint256"},{"internalType":"uint256","name":"baluniAmount","type":"uint256"},{"internalType":"uint256","name":"tokenDecimals","type":"uint256"}],"name":"calculateTokenShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"callRebalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_agentFactory","type":"address"}],"name":"changeAgentFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"changeBpsFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_marketOracle","type":"address"}],"name":"changeMarketOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newRebalancer","type":"address"}],"name":"changeRebalancer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newTreasury","type":"address"}],"name":"changeTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct IBaluniV1Agent.Call[]","name":"calls","type":"tuple[]"},{"internalType":"address[]","name":"tokensReturn","type":"address[]"}],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fetchMarketPrices","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getAgentAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getUSDCShareValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVersion","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_usdc","type":"address"},{"internalType":"address","name":"_wnative","type":"address"},{"internalType":"address","name":"_1inchSpotAgg","type":"address"},{"internalType":"address","name":"_uniRouter","type":"address"},{"internalType":"address","name":"_uniFactory","type":"address"},{"internalType":"address","name":"_rebalancer","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_marketOracle","type":"address"}],"name":"initializeMarketOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"liquidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"liquidateAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"marketOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"balAmountToMint","type":"uint256"}],"name":"mintWithUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"oracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_usdc","type":"address"},{"internalType":"address","name":"_wnative","type":"address"},{"internalType":"address","name":"_1inchSpotAgg","type":"address"},{"internalType":"address","name":"_uniRouter","type":"address"},{"internalType":"address","name":"_uniFactory","type":"address"},{"internalType":"address","name":"_rebalancer","type":"address"},{"internalType":"uint64","name":"version","type":"uint64"}],"name":"reinitialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"balAmountToMint","type":"uint256"}],"name":"requiredUSDCtoMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"token","type":"address"}],"name":"tokenValuation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalValuation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uniswapFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uniswapRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"USDC()":"89a30271","WNATIVE()":"b381cf40","_BPS_BASE()":"85377188","_BPS_FEE()":"b9f5e617","_MAX_BPS_FEE()":"34decfc9","agentFactory()":"7df107ea","burnERC20(uint256)":"1a168da2","burnUSDC(uint256)":"fe0a4dd1","calculateTokenShare(uint256,uint256,uint256,uint256)":"fe330a51","callRebalance(address[],uint256[],address,address,uint256,address)":"599f69f7","changeAgentFactory(address)":"0a38abab","changeBpsFee(uint256)":"06497cb9","changeMarketOracle(address)":"35aa0efa","changeRebalancer(address)":"0918281b","changeTreasury(address)":"b14f2a39","execute((address,uint256,bytes)[],address[])":"eedc3c50","fetchMarketPrices()":"8d483df1","getAgentAddress(address)":"27d54a92","getTokens()":"aa6ca808","getUSDCShareValue(uint256)":"71ddcfb8","getVersion()":"0d8e6e2c","initialize(address,address,address,address,address,address)":"cc2a9a5b","initializeMarketOracle(address)":"980d24f9","liquidate(address)":"2f865568","liquidateAll()":"3c2066a9","marketOracle()":"60961528","mintWithUSDC(uint256)":"0cfc7386","oracle()":"7dc0d1d0","rebalancer()":"01d22ccd","reinitialize(address,address,address,address,address,address,uint64)":"b0d60ba0","requiredUSDCtoMint(uint256)":"aa95d893","tokenValuation(uint256,address)":"2bdd955a","totalValuation()":"295b9300","treasury()":"61d027b3","uniswapFactory()":"8bdb2afa","uniswapRouter()":"735de9f7","unitPrice()":"e73faa2d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WNATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BPS_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_MAX_BPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"agentFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"burnERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"burnUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBaluni\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalERC20Balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baluniAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenDecimals\",\"type\":\"uint256\"}],\"name\":\"calculateTokenShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"callRebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agentFactory\",\"type\":\"address\"}],\"name\":\"changeAgentFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"changeBpsFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketOracle\",\"type\":\"address\"}],\"name\":\"changeMarketOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRebalancer\",\"type\":\"address\"}],\"name\":\"changeRebalancer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newTreasury\",\"type\":\"address\"}],\"name\":\"changeTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IBaluniV1Agent.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"tokensReturn\",\"type\":\"address[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetchMarketPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getAgentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getUSDCShareValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wnative\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_1inchSpotAgg\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketOracle\",\"type\":\"address\"}],\"name\":\"initializeMarketOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidateAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balAmountToMint\",\"type\":\"uint256\"}],\"name\":\"mintWithUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wnative\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_1inchSpotAgg\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balAmountToMint\",\"type\":\"uint256\"}],\"name\":\"requiredUSDCtoMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"tokenValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Router.sol\":\"IBaluniV1Router\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Agent.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Agent {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1bbf5ddbc4f525451e727d6997e6a20a6238d69232b58b3813760a16e7f60bbe\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Router.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\\r\\nimport './I1inchSpotAgg.sol';\\r\\nimport './IBaluniV1Agent.sol';\\r\\n\\r\\ninterface IBaluniV1Router {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  // Variables\\r\\n  function _MAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_BASE() external view returns (uint256);\\r\\n\\r\\n  function getTokens() external view returns (address[] memory);\\r\\n\\r\\n  function USDC() external view returns (IERC20);\\r\\n\\r\\n  function WNATIVE() external view returns (address);\\r\\n\\r\\n  function oracle() external view returns (address);\\r\\n\\r\\n  function uniswapRouter() external view returns (address);\\r\\n\\r\\n  function uniswapFactory() external view returns (address);\\r\\n\\r\\n  function agentFactory() external view returns (address);\\r\\n\\r\\n  function marketOracle() external view returns (address);\\r\\n\\r\\n  function rebalancer() external view returns (address);\\r\\n\\r\\n  function treasury() external view returns (address);\\r\\n\\r\\n  // Functions\\r\\n  function initialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer\\r\\n  ) external;\\r\\n\\r\\n  function reinitialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer,\\r\\n    uint64 version\\r\\n  ) external;\\r\\n\\r\\n  function initializeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeBpsFee(uint256 _newFee) external;\\r\\n\\r\\n  function changeTreasury(address _newTreasury) external;\\r\\n\\r\\n  function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n  function changeAgentFactory(address _agentFactory) external;\\r\\n\\r\\n  function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external;\\r\\n\\r\\n  function liquidate(address token) external;\\r\\n\\r\\n  function liquidateAll() external;\\r\\n\\r\\n  function burnERC20(uint256 burnAmount) external;\\r\\n\\r\\n  function burnUSDC(uint256 burnAmount) external;\\r\\n\\r\\n  function getAgentAddress(address _user) external view returns (address);\\r\\n\\r\\n  function mintWithUSDC(uint256 balAmountToMint) external;\\r\\n\\r\\n  function callRebalance(\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    uint256 limit,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function requiredUSDCtoMint(uint256 balAmountToMint) external view returns (uint256);\\r\\n\\r\\n  function calculateTokenShare(\\r\\n    uint256 totalBaluni,\\r\\n    uint256 totalERC20Balance,\\r\\n    uint256 baluniAmount,\\r\\n    uint256 tokenDecimals\\r\\n  ) external pure returns (uint256);\\r\\n\\r\\n  function tokenValuation(uint256 amount, address token) external view returns (uint256);\\r\\n\\r\\n  function totalValuation() external view returns (uint256);\\r\\n\\r\\n  function getUSDCShareValue(uint256 amount) external view returns (uint256);\\r\\n\\r\\n  function fetchMarketPrices() external view returns (uint256, uint256);\\r\\n\\r\\n  function getVersion() external view returns (uint64);\\r\\n\\r\\n  function unitPrice() external view returns (uint256);\\r\\n  \\r\\n}\\r\\n\",\"keccak256\":\"0x0795abf370daca8b74052ab6f425ab982bb4e0aecc4a72de19b3ff505d9e18a5\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/mock/MockRebalancer.sol":{"MockRebalancer":{"abi":[{"inputs":[{"internalType":"address","name":"usdt","type":"address"},{"internalType":"address","name":"_usdc","type":"address"},{"internalType":"address","name":"_wmatic","type":"address"},{"internalType":"address","name":"weth","type":"address"},{"internalType":"address","name":"wbtc","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"USDC","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDC_TO_USDT_RATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDC_TO_WBTC_RATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDC_TO_WETH_RATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDC_TO_WMATIC_RATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDT_TO_USDC_RATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDT_TO_WBTC_RATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDT_TO_WETH_RATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDT_TO_WMATIC_RATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WBTC_TO_USDC_RATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WBTC_TO_USDT_RATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WBTC_TO_WETH_RATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WBTC_TO_WMATIC_RATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WETH_TO_USDC_RATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WETH_TO_USDT_RATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WETH_TO_WBTC_RATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WETH_TO_WMATIC_RATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WMATIC_TO_USDC_RATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WMATIC_TO_USDT_RATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WMATIC_TO_WBTC_RATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WMATIC_TO_WETH_RATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WNATIVE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"","type":"address[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"name":"checkRebalance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convert","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"fromToken","type":"address"},{"internalType":"contract IERC20","name":"toToken","type":"address"},{"internalType":"bool","name":"","type":"bool"}],"name":"getRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"fromToken","type":"address"},{"internalType":"bool","name":"","type":"bool"}],"name":"getRateToEth","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTreasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"rates","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"","type":"address[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"rebalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"rate","type":"uint256"}],"name":"setRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_treasury","type":"address"}],"name":"setTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":806,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60803461030e57601f61122438819003918201601f191683019291906001600160401b03841183851017610312578160a0928492604096875283398101031261030e5761004b81610326565b9060209061005a828201610326565b92610066858301610326565b9361007f608061007860608601610326565b9401610326565b9460018060a01b0390818060018060a01b03199481600294168685541617845516946001948681875416178655339060035416176003551693845f525f8752885f20905f528652670ddbb3130051477a885f2055835f525f8652875f20828254165f5286526c110f11bc46bc3efcc5b8ff1223885f2055835f525f865281885f20971696875f52865266052de6f3e9958f885f2055835f525f865281885f20951694855f5286526ad47d67cce9223fad7de347885f2055865f525f8652875f20845f5286526824efc5d2223b2ab2b2885f2055865f525f8652875f20828254165f5286526d2d9856fc421a9fd095f8b44c49db885f2055865f525f8652875f20828454165f528652682506936e734ac2f926885f2055865f525f8652875f20855f5286526c0236febc16a26943df322289be885f2055818354165f525f8652875f20845f528652670de435a2a433cf48885f2055818354165f525f8652875f20875f528652660533304f826d31885f2055818354165f525f8652875f20828254165f5286526c110dcba2e6f97b2a41a7eba1b8885f2055818354165f525f8652875f20855f5286526ad4801858112018c8850bae885f2055818154165f525f8652875f20875f528652610438885f2055818154165f525f8652875f20855f52865265ac76a57eb9a4885f2055818154165f525f8652875f20828454165f528652620b32d1885f2055818154165f525f8652875f20845f528652620b68f7885f2055845f525f865281885f209154165f52855269011de1930ce9ab44b5a1875f2055835f525f8552865f209154165f52835263e4ac05169081865f2055825f525f8452855f20905f528352845f20555f525f8152825f20915f52526254dddd815f205551610ee9908161033b8239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b038216820361030e5756fe60806040818152600480361015610014575f80fd5b5f3560e01c9283630209871914610add5750826304cc732514610aa55782630e09176214610a6a578263187029b814610a3057826318cdc49a146109a45782631a1e4a1f1461095f578263248391ff1461093d5782633b19e84a1461072f5782634039e6871461090157826343146399146108c6578263443dc789146108835782635107e94e1461083e57826353ff493e146107fd5782635911fb9a146107bd5782635fc8cd691461078157826361d027b31461072f5782637b0cf44d146106bb5782637de4fd1014610641578263802431fb146105c157826384db1dfb1461052a5750816389a30271146104d95781638e5139ed1461049457816397db8e0214610456578163a58a7f8a14610417578163ae3bcc96146103da578163b381cf4014610389578163b537d24b1461034a578163b9e9381014610306578163c0184983146102cc578163d135e3be1461028c578163e2338e721461024a578163e30f689214610209575063f0f442601461018b575f80fd5b346102055760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102055773ffffffffffffffffffffffffffffffffffffffff6101d7610b4b565b167fffffffffffffffffffffffff000000000000000000000000000000000000000060035416176003555f80f35b5f80fd5b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610205576020905169011de1930ce9ab44b5a18152f35b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020557602090516ad4801858112018c8850bae8152f35b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020557602090516824efc5d2223b2ab2b28152f35b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102055760209051620b32d18152f35b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020557602090516c0236febc16a26943df322289be8152f35b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102055760209051670de435a2a433cf488152f35b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102055760209073ffffffffffffffffffffffffffffffffffffffff600254169051908152f35b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610205576020905165ac76a57eb9a48152f35b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102055760209051670ddbb3130051477a8152f35b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610205576020905166052de6f3e9958f8152f35b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020557602090516d2d9856fc421a9fd095f8b44c49db8152f35b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102055760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b346102055760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102055767ffffffffffffffff908035828111610205576105799036908301610b1a565b50506024359182116102055761059191369101610b1a565b505060443573ffffffffffffffffffffffffffffffffffffffff9081811603610205576064359081160361020557005b50346102055760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610205576105f9610b4b565b90610602610b6e565b604435801515036102055760209273ffffffffffffffffffffffffffffffffffffffff8091165f525f8452825f2091165f528252805f20549051908152f35b503461020557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020557610678610b4b565b90602435801515036102055760209173ffffffffffffffffffffffffffffffffffffffff8091165f525f8352815f2090600254165f528252805f20549051908152f35b503461020557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610205576020906106f5610b4b565b6106fd610b6e565b9073ffffffffffffffffffffffffffffffffffffffff8091165f525f8452825f2091165f528252805f20549051908152f35b5034610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102055760209073ffffffffffffffffffffffffffffffffffffffff600354169051908152f35b5034610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610205576020905163df77b36f8152f35b5034610205576107cc36610b91565b929173ffffffffffffffffffffffffffffffffffffffff8091165f525f602052825f2091165f526020525f20555f80f35b5034610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102055760209051682506936e734ac2f9268152f35b5034610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020557602090516c110dcba2e6f97b2a41a7eba1b88152f35b5034610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020557602090516ad47d67cce9223fad7de3478152f35b5034610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020557602090516254dddd8152f35b5034610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610205576020905163e4ac05168152f35b50346102055760209061095861095236610b91565b91610d14565b9051908152f35b5034610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020557602090516c110f11bc46bc3efcc5b8ff12238152f35b90346102055760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102055767ffffffffffffffff8235818111610205576109f39036908501610b1a565b505060243581811161020557610a0c9036908501610b1a565b505060443590811161020557602092610a2791369101610b1a565b50505160018152f35b5034610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020557602090516104388152f35b5034610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102055760209051620b68f78152f35b5034610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020557602090515f8152f35b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102055780660533304f826d3160209252f35b9181601f840112156102055782359167ffffffffffffffff8311610205576020808501948460051b01011161020557565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361020557565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361020557565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126102055773ffffffffffffffffffffffffffffffffffffffff90600435828116810361020557916024359081168103610205579060443590565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610c3257604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90816020910312610205575160ff811681036102055790565b60ff16604d8111610c8957600a0a90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b81810292918115918404141715610c8957565b8115610cd3570490565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b9060ff8091169116039060ff8211610c8957565b9173ffffffffffffffffffffffffffffffffffffffff8093166040928351937f313ce56700000000000000000000000000000000000000000000000000000000958686526020928387600481885afa968715610ea9575f97610e8a575b501681519687528287600481845afa968715610e80575f97610e33575b5092610dce670de0b6b3a76400009593610dd393610dd996610daf8a610c78565b92610db98c610c78565b955f525f8152825f20915f52525f2054610cb6565b610cc9565b90610cb6565b049160ff81169060ff831691808314610e2c57610e08921192835f14610e235790610e0391610d00565b610c78565b9015610e1a57610e1791610cc9565b90565b610e1791610cb6565b610e0391610d00565b5050505090565b610dd99491975083610dd393610e6b610dce93670de0b6b3a764000099973d8511610e79575b610e638183610bf1565b810190610c5f565b999396509350939550610d8e565b503d610e59565b82513d5f823e3d90fd5b610ea2919750843d8611610e7957610e638183610bf1565b955f610d71565b83513d5f823e3d90fdfea2646970667358221220bd0d93ebd1f53655e0d0c85211db868f8d9f5e4a72a9e77e893d2d745878fdb664736f6c63430008190033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0x30E JUMPI PUSH1 0x1F PUSH2 0x1224 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT DUP4 DUP6 LT OR PUSH2 0x312 JUMPI DUP2 PUSH1 0xA0 SWAP3 DUP5 SWAP3 PUSH1 0x40 SWAP7 DUP8 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x30E JUMPI PUSH2 0x4B DUP2 PUSH2 0x326 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x5A DUP3 DUP3 ADD PUSH2 0x326 JUMP JUMPDEST SWAP3 PUSH2 0x66 DUP6 DUP4 ADD PUSH2 0x326 JUMP JUMPDEST SWAP4 PUSH2 0x7F PUSH1 0x80 PUSH2 0x78 PUSH1 0x60 DUP7 ADD PUSH2 0x326 JUMP JUMPDEST SWAP5 ADD PUSH2 0x326 JUMP JUMPDEST SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP5 DUP2 PUSH1 0x2 SWAP5 AND DUP7 DUP6 SLOAD AND OR DUP5 SSTORE AND SWAP5 PUSH1 0x1 SWAP5 DUP7 DUP2 DUP8 SLOAD AND OR DUP7 SSTORE CALLER SWAP1 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE AND SWAP4 DUP5 PUSH0 MSTORE PUSH0 DUP8 MSTORE DUP9 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE DUP7 MSTORE PUSH8 0xDDBB3130051477A DUP9 PUSH0 KECCAK256 SSTORE DUP4 PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP8 PUSH0 KECCAK256 DUP3 DUP3 SLOAD AND PUSH0 MSTORE DUP7 MSTORE PUSH13 0x110F11BC46BC3EFCC5B8FF1223 DUP9 PUSH0 KECCAK256 SSTORE DUP4 PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP2 DUP9 PUSH0 KECCAK256 SWAP8 AND SWAP7 DUP8 PUSH0 MSTORE DUP7 MSTORE PUSH7 0x52DE6F3E9958F DUP9 PUSH0 KECCAK256 SSTORE DUP4 PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP2 DUP9 PUSH0 KECCAK256 SWAP6 AND SWAP5 DUP6 PUSH0 MSTORE DUP7 MSTORE PUSH11 0xD47D67CCE9223FAD7DE347 DUP9 PUSH0 KECCAK256 SSTORE DUP7 PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP8 PUSH0 KECCAK256 DUP5 PUSH0 MSTORE DUP7 MSTORE PUSH9 0x24EFC5D2223B2AB2B2 DUP9 PUSH0 KECCAK256 SSTORE DUP7 PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP8 PUSH0 KECCAK256 DUP3 DUP3 SLOAD AND PUSH0 MSTORE DUP7 MSTORE PUSH14 0x2D9856FC421A9FD095F8B44C49DB DUP9 PUSH0 KECCAK256 SSTORE DUP7 PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP8 PUSH0 KECCAK256 DUP3 DUP5 SLOAD AND PUSH0 MSTORE DUP7 MSTORE PUSH9 0x2506936E734AC2F926 DUP9 PUSH0 KECCAK256 SSTORE DUP7 PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP8 PUSH0 KECCAK256 DUP6 PUSH0 MSTORE DUP7 MSTORE PUSH13 0x236FEBC16A26943DF322289BE DUP9 PUSH0 KECCAK256 SSTORE DUP2 DUP4 SLOAD AND PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP8 PUSH0 KECCAK256 DUP5 PUSH0 MSTORE DUP7 MSTORE PUSH8 0xDE435A2A433CF48 DUP9 PUSH0 KECCAK256 SSTORE DUP2 DUP4 SLOAD AND PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP8 PUSH0 KECCAK256 DUP8 PUSH0 MSTORE DUP7 MSTORE PUSH7 0x533304F826D31 DUP9 PUSH0 KECCAK256 SSTORE DUP2 DUP4 SLOAD AND PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP8 PUSH0 KECCAK256 DUP3 DUP3 SLOAD AND PUSH0 MSTORE DUP7 MSTORE PUSH13 0x110DCBA2E6F97B2A41A7EBA1B8 DUP9 PUSH0 KECCAK256 SSTORE DUP2 DUP4 SLOAD AND PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP8 PUSH0 KECCAK256 DUP6 PUSH0 MSTORE DUP7 MSTORE PUSH11 0xD4801858112018C8850BAE DUP9 PUSH0 KECCAK256 SSTORE DUP2 DUP2 SLOAD AND PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP8 PUSH0 KECCAK256 DUP8 PUSH0 MSTORE DUP7 MSTORE PUSH2 0x438 DUP9 PUSH0 KECCAK256 SSTORE DUP2 DUP2 SLOAD AND PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP8 PUSH0 KECCAK256 DUP6 PUSH0 MSTORE DUP7 MSTORE PUSH6 0xAC76A57EB9A4 DUP9 PUSH0 KECCAK256 SSTORE DUP2 DUP2 SLOAD AND PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP8 PUSH0 KECCAK256 DUP3 DUP5 SLOAD AND PUSH0 MSTORE DUP7 MSTORE PUSH3 0xB32D1 DUP9 PUSH0 KECCAK256 SSTORE DUP2 DUP2 SLOAD AND PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP8 PUSH0 KECCAK256 DUP5 PUSH0 MSTORE DUP7 MSTORE PUSH3 0xB68F7 DUP9 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP2 DUP9 PUSH0 KECCAK256 SWAP2 SLOAD AND PUSH0 MSTORE DUP6 MSTORE PUSH10 0x11DE1930CE9AB44B5A1 DUP8 PUSH0 KECCAK256 SSTORE DUP4 PUSH0 MSTORE PUSH0 DUP6 MSTORE DUP7 PUSH0 KECCAK256 SWAP2 SLOAD AND PUSH0 MSTORE DUP4 MSTORE PUSH4 0xE4AC0516 SWAP1 DUP2 DUP7 PUSH0 KECCAK256 SSTORE DUP3 PUSH0 MSTORE PUSH0 DUP5 MSTORE DUP6 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE DUP4 MSTORE DUP5 PUSH0 KECCAK256 SSTORE PUSH0 MSTORE PUSH0 DUP2 MSTORE DUP3 PUSH0 KECCAK256 SWAP2 PUSH0 MSTORE MSTORE PUSH3 0x54DDDD DUP2 PUSH0 KECCAK256 SSTORE MLOAD PUSH2 0xEE9 SWAP1 DUP2 PUSH2 0x33B DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x30E JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP3 DUP4 PUSH4 0x2098719 EQ PUSH2 0xADD JUMPI POP DUP3 PUSH4 0x4CC7325 EQ PUSH2 0xAA5 JUMPI DUP3 PUSH4 0xE091762 EQ PUSH2 0xA6A JUMPI DUP3 PUSH4 0x187029B8 EQ PUSH2 0xA30 JUMPI DUP3 PUSH4 0x18CDC49A EQ PUSH2 0x9A4 JUMPI DUP3 PUSH4 0x1A1E4A1F EQ PUSH2 0x95F JUMPI DUP3 PUSH4 0x248391FF EQ PUSH2 0x93D JUMPI DUP3 PUSH4 0x3B19E84A EQ PUSH2 0x72F JUMPI DUP3 PUSH4 0x4039E687 EQ PUSH2 0x901 JUMPI DUP3 PUSH4 0x43146399 EQ PUSH2 0x8C6 JUMPI DUP3 PUSH4 0x443DC789 EQ PUSH2 0x883 JUMPI DUP3 PUSH4 0x5107E94E EQ PUSH2 0x83E JUMPI DUP3 PUSH4 0x53FF493E EQ PUSH2 0x7FD JUMPI DUP3 PUSH4 0x5911FB9A EQ PUSH2 0x7BD JUMPI DUP3 PUSH4 0x5FC8CD69 EQ PUSH2 0x781 JUMPI DUP3 PUSH4 0x61D027B3 EQ PUSH2 0x72F JUMPI DUP3 PUSH4 0x7B0CF44D EQ PUSH2 0x6BB JUMPI DUP3 PUSH4 0x7DE4FD10 EQ PUSH2 0x641 JUMPI DUP3 PUSH4 0x802431FB EQ PUSH2 0x5C1 JUMPI DUP3 PUSH4 0x84DB1DFB EQ PUSH2 0x52A JUMPI POP DUP2 PUSH4 0x89A30271 EQ PUSH2 0x4D9 JUMPI DUP2 PUSH4 0x8E5139ED EQ PUSH2 0x494 JUMPI DUP2 PUSH4 0x97DB8E02 EQ PUSH2 0x456 JUMPI DUP2 PUSH4 0xA58A7F8A EQ PUSH2 0x417 JUMPI DUP2 PUSH4 0xAE3BCC96 EQ PUSH2 0x3DA JUMPI DUP2 PUSH4 0xB381CF40 EQ PUSH2 0x389 JUMPI DUP2 PUSH4 0xB537D24B EQ PUSH2 0x34A JUMPI DUP2 PUSH4 0xB9E93810 EQ PUSH2 0x306 JUMPI DUP2 PUSH4 0xC0184983 EQ PUSH2 0x2CC JUMPI DUP2 PUSH4 0xD135E3BE EQ PUSH2 0x28C JUMPI DUP2 PUSH4 0xE2338E72 EQ PUSH2 0x24A JUMPI DUP2 PUSH4 0xE30F6892 EQ PUSH2 0x209 JUMPI POP PUSH4 0xF0F44260 EQ PUSH2 0x18B JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1D7 PUSH2 0xB4B JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH0 DUP1 RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH10 0x11DE1930CE9AB44B5A1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH11 0xD4801858112018C8850BAE DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH9 0x24EFC5D2223B2AB2B2 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0xB32D1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH13 0x236FEBC16A26943DF322289BE DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0xDE435A2A433CF48 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH6 0xAC76A57EB9A4 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0xDDBB3130051477A DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH7 0x52DE6F3E9958F DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH14 0x2D9856FC421A9FD095F8B44C49DB DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH1 0xA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP1 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x205 JUMPI PUSH2 0x579 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0xB1A JUMP JUMPDEST POP POP PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x205 JUMPI PUSH2 0x591 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0xB1A JUMP JUMPDEST POP POP PUSH1 0x44 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP2 AND SUB PUSH2 0x205 JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 AND SUB PUSH2 0x205 JUMPI STOP JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH2 0x5F9 PUSH2 0xB4B JUMP JUMPDEST SWAP1 PUSH2 0x602 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP1 ISZERO ISZERO SUB PUSH2 0x205 JUMPI PUSH1 0x20 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH0 MSTORE PUSH0 DUP5 MSTORE DUP3 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH2 0x678 PUSH2 0xB4B JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO SUB PUSH2 0x205 JUMPI PUSH1 0x20 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH0 MSTORE PUSH0 DUP4 MSTORE DUP2 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 SLOAD AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x6F5 PUSH2 0xB4B JUMP JUMPDEST PUSH2 0x6FD PUSH2 0xB6E JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH0 MSTORE PUSH0 DUP5 MSTORE DUP3 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH4 0xDF77B36F DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH2 0x7CC CALLDATASIZE PUSH2 0xB91 JUMP JUMPDEST SWAP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE DUP3 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH0 KECCAK256 SSTORE PUSH0 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH9 0x2506936E734AC2F926 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH13 0x110DCBA2E6F97B2A41A7EBA1B8 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH11 0xD47D67CCE9223FAD7DE347 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0x54DDDD DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH4 0xE4AC0516 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x958 PUSH2 0x952 CALLDATASIZE PUSH2 0xB91 JUMP JUMPDEST SWAP2 PUSH2 0xD14 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH13 0x110F11BC46BC3EFCC5B8FF1223 DUP2 MSTORE RETURN JUMPDEST SWAP1 CALLVALUE PUSH2 0x205 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x205 JUMPI PUSH2 0x9F3 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0xB1A JUMP JUMPDEST POP POP PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x205 JUMPI PUSH2 0xA0C SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0xB1A JUMP JUMPDEST POP POP PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP3 PUSH2 0xA27 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0xB1A JUMP JUMPDEST POP POP MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x438 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0xB68F7 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI DUP1 PUSH7 0x533304F826D31 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x205 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x205 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x205 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x205 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x205 JUMPI JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x60 SWAP2 ADD SLT PUSH2 0x205 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x205 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x205 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xC32 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x205 JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x205 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x4D DUP2 GT PUSH2 0xC89 JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xC89 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0xCD3 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0xFF DUP1 SWAP2 AND SWAP2 AND SUB SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0xC89 JUMPI JUMP JUMPDEST SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP4 AND PUSH1 0x40 SWAP3 DUP4 MLOAD SWAP4 PUSH32 0x313CE56700000000000000000000000000000000000000000000000000000000 SWAP6 DUP7 DUP7 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP8 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0xEA9 JUMPI PUSH0 SWAP8 PUSH2 0xE8A JUMPI JUMPDEST POP AND DUP2 MLOAD SWAP7 DUP8 MSTORE DUP3 DUP8 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0xE80 JUMPI PUSH0 SWAP8 PUSH2 0xE33 JUMPI JUMPDEST POP SWAP3 PUSH2 0xDCE PUSH8 0xDE0B6B3A7640000 SWAP6 SWAP4 PUSH2 0xDD3 SWAP4 PUSH2 0xDD9 SWAP7 PUSH2 0xDAF DUP11 PUSH2 0xC78 JUMP JUMPDEST SWAP3 PUSH2 0xDB9 DUP13 PUSH2 0xC78 JUMP JUMPDEST SWAP6 PUSH0 MSTORE PUSH0 DUP2 MSTORE DUP3 PUSH0 KECCAK256 SWAP2 PUSH0 MSTORE MSTORE PUSH0 KECCAK256 SLOAD PUSH2 0xCB6 JUMP JUMPDEST PUSH2 0xCC9 JUMP JUMPDEST SWAP1 PUSH2 0xCB6 JUMP JUMPDEST DIV SWAP2 PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0xFF DUP4 AND SWAP2 DUP1 DUP4 EQ PUSH2 0xE2C JUMPI PUSH2 0xE08 SWAP3 GT SWAP3 DUP4 PUSH0 EQ PUSH2 0xE23 JUMPI SWAP1 PUSH2 0xE03 SWAP2 PUSH2 0xD00 JUMP JUMPDEST PUSH2 0xC78 JUMP JUMPDEST SWAP1 ISZERO PUSH2 0xE1A JUMPI PUSH2 0xE17 SWAP2 PUSH2 0xCC9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xE17 SWAP2 PUSH2 0xCB6 JUMP JUMPDEST PUSH2 0xE03 SWAP2 PUSH2 0xD00 JUMP JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xDD9 SWAP5 SWAP2 SWAP8 POP DUP4 PUSH2 0xDD3 SWAP4 PUSH2 0xE6B PUSH2 0xDCE SWAP4 PUSH8 0xDE0B6B3A7640000 SWAP10 SWAP8 RETURNDATASIZE DUP6 GT PUSH2 0xE79 JUMPI JUMPDEST PUSH2 0xE63 DUP2 DUP4 PUSH2 0xBF1 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xC5F JUMP JUMPDEST SWAP10 SWAP4 SWAP7 POP SWAP4 POP SWAP4 SWAP6 POP PUSH2 0xD8E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xE59 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xEA2 SWAP2 SWAP8 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0xE79 JUMPI PUSH2 0xE63 DUP2 DUP4 PUSH2 0xBF1 JUMP JUMPDEST SWAP6 PUSH0 PUSH2 0xD71 JUMP JUMPDEST DUP4 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xD SWAP4 0xEB 0xD1 CREATE2 CALLDATASIZE SSTORE 0xE0 0xD0 0xC8 MSTORE GT 0xDB DUP7 DUP16 DUP14 SWAP16 MCOPY BLOBBASEFEE PUSH19 0xA9E77E893D2D745878FDB664736F6C63430008 NOT STOP CALLER ","sourceMap":"118:4960:21:-:0;;;;;;;;;;;;;-1:-1:-1;;118:4960:21;;;;;;-1:-1:-1;;;;;118:4960:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;1844:17;;;118:4960;;;;;;;;;;1872:12;;118:4960;;;;;;;;;1906:10;118:4960;1895:21;118:4960;;;1895:21;118:4960;;1212:18;;-1:-1:-1;1212:18:21;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;;-1:-1:-1;1212:18:21;;;;;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;;;;118:4960;-1:-1:-1;1212:18:21;;;1361:31;1212:18;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;-1:-1:-1;1212:18:21;;;;-1:-1:-1;1212:18:21;118:4960;;1212:18;;-1:-1:-1;1212:18:21;;;1145:16;1212:18;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;-1:-1:-1;1212:18:21;;;;-1:-1:-1;1212:18:21;118:4960;;1212:18;;-1:-1:-1;1212:18:21;;;1281:27;1212:18;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;;-1:-1:-1;1212:18:21;;;918:21;1212:18;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;;;;118:4960;-1:-1:-1;1212:18:21;;;834:33;1212:18;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;;;;118:4960;-1:-1:-1;1212:18:21;;;1071:21;1212:18;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;;-1:-1:-1;1212:18:21;;;990:30;1212:18;-1:-1:-1;1212:18:21;;;;;118:4960;-1:-1:-1;1212:18:21;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;;-1:-1:-1;1212:18:21;;;364:19;1212:18;-1:-1:-1;1212:18:21;;;;;118:4960;-1:-1:-1;1212:18:21;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;;-1:-1:-1;1212:18:21;;;434:16;1212:18;-1:-1:-1;1212:18:21;;;;;118:4960;-1:-1:-1;1212:18:21;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;;;;118:4960;-1:-1:-1;1212:18:21;;;503:31;1212:18;-1:-1:-1;1212:18:21;;;;;118:4960;-1:-1:-1;1212:18:21;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;;-1:-1:-1;1212:18:21;;;286:27;1212:18;-1:-1:-1;1212:18:21;;;;;118:4960;-1:-1:-1;1212:18:21;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;;-1:-1:-1;1212:18:21;;;707:4;1212:18;-1:-1:-1;1212:18:21;;;;;118:4960;-1:-1:-1;1212:18:21;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;;-1:-1:-1;1212:18:21;;;764:15;1212:18;-1:-1:-1;1212:18:21;;;;;118:4960;-1:-1:-1;1212:18:21;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;;;;118:4960;-1:-1:-1;1212:18:21;;;648:6;1212:18;-1:-1:-1;1212:18:21;;;;;118:4960;-1:-1:-1;1212:18:21;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;;-1:-1:-1;1212:18:21;;;589:6;1212:18;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;-1:-1:-1;1212:18:21;;;;-1:-1:-1;1212:18:21;;;118:4960;-1:-1:-1;1212:18:21;;;1447:22;1212:18;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;;;118:4960;-1:-1:-1;1212:18:21;;;1520:10;1212:18;;;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;;-1:-1:-1;1212:18:21;;;;-1:-1:-1;1212:18:21;;-1:-1:-1;1212:18:21;-1:-1:-1;1212:18:21;;;-1:-1:-1;1212:18:21;;-1:-1:-1;1212:18:21;;1642:7;1212:18;-1:-1:-1;1212:18:21;;118:4960;;;;;;;;;-1:-1:-1;118:4960:21;;;;;;-1:-1:-1;118:4960:21;;;;;-1:-1:-1;118:4960:21;;;;-1:-1:-1;;;;;118:4960:21;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":2926,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_4160":{"entryPoint":2891,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":2961,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_array_address_dyn_calldata":{"entryPoint":2842,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_uint8_fromMemory":{"entryPoint":3167,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":3273,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_rational_by_uint8":{"entryPoint":3192,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256":{"entryPoint":3254,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint8":{"entryPoint":3328,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":3057,"id":null,"parameterSlots":2,"returnSlots":0},"fun_convert":{"entryPoint":3348,"id":4801,"parameterSlots":3,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60806040818152600480361015610014575f80fd5b5f3560e01c9283630209871914610add5750826304cc732514610aa55782630e09176214610a6a578263187029b814610a3057826318cdc49a146109a45782631a1e4a1f1461095f578263248391ff1461093d5782633b19e84a1461072f5782634039e6871461090157826343146399146108c6578263443dc789146108835782635107e94e1461083e57826353ff493e146107fd5782635911fb9a146107bd5782635fc8cd691461078157826361d027b31461072f5782637b0cf44d146106bb5782637de4fd1014610641578263802431fb146105c157826384db1dfb1461052a5750816389a30271146104d95781638e5139ed1461049457816397db8e0214610456578163a58a7f8a14610417578163ae3bcc96146103da578163b381cf4014610389578163b537d24b1461034a578163b9e9381014610306578163c0184983146102cc578163d135e3be1461028c578163e2338e721461024a578163e30f689214610209575063f0f442601461018b575f80fd5b346102055760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102055773ffffffffffffffffffffffffffffffffffffffff6101d7610b4b565b167fffffffffffffffffffffffff000000000000000000000000000000000000000060035416176003555f80f35b5f80fd5b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610205576020905169011de1930ce9ab44b5a18152f35b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020557602090516ad4801858112018c8850bae8152f35b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020557602090516824efc5d2223b2ab2b28152f35b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102055760209051620b32d18152f35b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020557602090516c0236febc16a26943df322289be8152f35b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102055760209051670de435a2a433cf488152f35b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102055760209073ffffffffffffffffffffffffffffffffffffffff600254169051908152f35b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610205576020905165ac76a57eb9a48152f35b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102055760209051670ddbb3130051477a8152f35b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610205576020905166052de6f3e9958f8152f35b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020557602090516d2d9856fc421a9fd095f8b44c49db8152f35b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102055760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b346102055760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102055767ffffffffffffffff908035828111610205576105799036908301610b1a565b50506024359182116102055761059191369101610b1a565b505060443573ffffffffffffffffffffffffffffffffffffffff9081811603610205576064359081160361020557005b50346102055760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610205576105f9610b4b565b90610602610b6e565b604435801515036102055760209273ffffffffffffffffffffffffffffffffffffffff8091165f525f8452825f2091165f528252805f20549051908152f35b503461020557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020557610678610b4b565b90602435801515036102055760209173ffffffffffffffffffffffffffffffffffffffff8091165f525f8352815f2090600254165f528252805f20549051908152f35b503461020557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610205576020906106f5610b4b565b6106fd610b6e565b9073ffffffffffffffffffffffffffffffffffffffff8091165f525f8452825f2091165f528252805f20549051908152f35b5034610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102055760209073ffffffffffffffffffffffffffffffffffffffff600354169051908152f35b5034610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610205576020905163df77b36f8152f35b5034610205576107cc36610b91565b929173ffffffffffffffffffffffffffffffffffffffff8091165f525f602052825f2091165f526020525f20555f80f35b5034610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102055760209051682506936e734ac2f9268152f35b5034610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020557602090516c110dcba2e6f97b2a41a7eba1b88152f35b5034610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020557602090516ad47d67cce9223fad7de3478152f35b5034610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020557602090516254dddd8152f35b5034610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610205576020905163e4ac05168152f35b50346102055760209061095861095236610b91565b91610d14565b9051908152f35b5034610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020557602090516c110f11bc46bc3efcc5b8ff12238152f35b90346102055760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102055767ffffffffffffffff8235818111610205576109f39036908501610b1a565b505060243581811161020557610a0c9036908501610b1a565b505060443590811161020557602092610a2791369101610b1a565b50505160018152f35b5034610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020557602090516104388152f35b5034610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102055760209051620b68f78152f35b5034610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020557602090515f8152f35b34610205575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102055780660533304f826d3160209252f35b9181601f840112156102055782359167ffffffffffffffff8311610205576020808501948460051b01011161020557565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361020557565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361020557565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126102055773ffffffffffffffffffffffffffffffffffffffff90600435828116810361020557916024359081168103610205579060443590565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610c3257604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90816020910312610205575160ff811681036102055790565b60ff16604d8111610c8957600a0a90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b81810292918115918404141715610c8957565b8115610cd3570490565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b9060ff8091169116039060ff8211610c8957565b9173ffffffffffffffffffffffffffffffffffffffff8093166040928351937f313ce56700000000000000000000000000000000000000000000000000000000958686526020928387600481885afa968715610ea9575f97610e8a575b501681519687528287600481845afa968715610e80575f97610e33575b5092610dce670de0b6b3a76400009593610dd393610dd996610daf8a610c78565b92610db98c610c78565b955f525f8152825f20915f52525f2054610cb6565b610cc9565b90610cb6565b049160ff81169060ff831691808314610e2c57610e08921192835f14610e235790610e0391610d00565b610c78565b9015610e1a57610e1791610cc9565b90565b610e1791610cb6565b610e0391610d00565b5050505090565b610dd99491975083610dd393610e6b610dce93670de0b6b3a764000099973d8511610e79575b610e638183610bf1565b810190610c5f565b999396509350939550610d8e565b503d610e59565b82513d5f823e3d90fd5b610ea2919750843d8611610e7957610e638183610bf1565b955f610d71565b83513d5f823e3d90fdfea2646970667358221220bd0d93ebd1f53655e0d0c85211db868f8d9f5e4a72a9e77e893d2d745878fdb664736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP3 DUP4 PUSH4 0x2098719 EQ PUSH2 0xADD JUMPI POP DUP3 PUSH4 0x4CC7325 EQ PUSH2 0xAA5 JUMPI DUP3 PUSH4 0xE091762 EQ PUSH2 0xA6A JUMPI DUP3 PUSH4 0x187029B8 EQ PUSH2 0xA30 JUMPI DUP3 PUSH4 0x18CDC49A EQ PUSH2 0x9A4 JUMPI DUP3 PUSH4 0x1A1E4A1F EQ PUSH2 0x95F JUMPI DUP3 PUSH4 0x248391FF EQ PUSH2 0x93D JUMPI DUP3 PUSH4 0x3B19E84A EQ PUSH2 0x72F JUMPI DUP3 PUSH4 0x4039E687 EQ PUSH2 0x901 JUMPI DUP3 PUSH4 0x43146399 EQ PUSH2 0x8C6 JUMPI DUP3 PUSH4 0x443DC789 EQ PUSH2 0x883 JUMPI DUP3 PUSH4 0x5107E94E EQ PUSH2 0x83E JUMPI DUP3 PUSH4 0x53FF493E EQ PUSH2 0x7FD JUMPI DUP3 PUSH4 0x5911FB9A EQ PUSH2 0x7BD JUMPI DUP3 PUSH4 0x5FC8CD69 EQ PUSH2 0x781 JUMPI DUP3 PUSH4 0x61D027B3 EQ PUSH2 0x72F JUMPI DUP3 PUSH4 0x7B0CF44D EQ PUSH2 0x6BB JUMPI DUP3 PUSH4 0x7DE4FD10 EQ PUSH2 0x641 JUMPI DUP3 PUSH4 0x802431FB EQ PUSH2 0x5C1 JUMPI DUP3 PUSH4 0x84DB1DFB EQ PUSH2 0x52A JUMPI POP DUP2 PUSH4 0x89A30271 EQ PUSH2 0x4D9 JUMPI DUP2 PUSH4 0x8E5139ED EQ PUSH2 0x494 JUMPI DUP2 PUSH4 0x97DB8E02 EQ PUSH2 0x456 JUMPI DUP2 PUSH4 0xA58A7F8A EQ PUSH2 0x417 JUMPI DUP2 PUSH4 0xAE3BCC96 EQ PUSH2 0x3DA JUMPI DUP2 PUSH4 0xB381CF40 EQ PUSH2 0x389 JUMPI DUP2 PUSH4 0xB537D24B EQ PUSH2 0x34A JUMPI DUP2 PUSH4 0xB9E93810 EQ PUSH2 0x306 JUMPI DUP2 PUSH4 0xC0184983 EQ PUSH2 0x2CC JUMPI DUP2 PUSH4 0xD135E3BE EQ PUSH2 0x28C JUMPI DUP2 PUSH4 0xE2338E72 EQ PUSH2 0x24A JUMPI DUP2 PUSH4 0xE30F6892 EQ PUSH2 0x209 JUMPI POP PUSH4 0xF0F44260 EQ PUSH2 0x18B JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1D7 PUSH2 0xB4B JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH0 DUP1 RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH10 0x11DE1930CE9AB44B5A1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH11 0xD4801858112018C8850BAE DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH9 0x24EFC5D2223B2AB2B2 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0xB32D1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH13 0x236FEBC16A26943DF322289BE DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0xDE435A2A433CF48 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH6 0xAC76A57EB9A4 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0xDDBB3130051477A DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH7 0x52DE6F3E9958F DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH14 0x2D9856FC421A9FD095F8B44C49DB DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH1 0xA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP1 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x205 JUMPI PUSH2 0x579 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0xB1A JUMP JUMPDEST POP POP PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x205 JUMPI PUSH2 0x591 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0xB1A JUMP JUMPDEST POP POP PUSH1 0x44 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP2 AND SUB PUSH2 0x205 JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 AND SUB PUSH2 0x205 JUMPI STOP JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH2 0x5F9 PUSH2 0xB4B JUMP JUMPDEST SWAP1 PUSH2 0x602 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP1 ISZERO ISZERO SUB PUSH2 0x205 JUMPI PUSH1 0x20 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH0 MSTORE PUSH0 DUP5 MSTORE DUP3 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH2 0x678 PUSH2 0xB4B JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO SUB PUSH2 0x205 JUMPI PUSH1 0x20 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH0 MSTORE PUSH0 DUP4 MSTORE DUP2 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 SLOAD AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x6F5 PUSH2 0xB4B JUMP JUMPDEST PUSH2 0x6FD PUSH2 0xB6E JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH0 MSTORE PUSH0 DUP5 MSTORE DUP3 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH4 0xDF77B36F DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH2 0x7CC CALLDATASIZE PUSH2 0xB91 JUMP JUMPDEST SWAP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE DUP3 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH0 KECCAK256 SSTORE PUSH0 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH9 0x2506936E734AC2F926 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH13 0x110DCBA2E6F97B2A41A7EBA1B8 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH11 0xD47D67CCE9223FAD7DE347 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0x54DDDD DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH4 0xE4AC0516 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x958 PUSH2 0x952 CALLDATASIZE PUSH2 0xB91 JUMP JUMPDEST SWAP2 PUSH2 0xD14 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH13 0x110F11BC46BC3EFCC5B8FF1223 DUP2 MSTORE RETURN JUMPDEST SWAP1 CALLVALUE PUSH2 0x205 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x205 JUMPI PUSH2 0x9F3 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0xB1A JUMP JUMPDEST POP POP PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x205 JUMPI PUSH2 0xA0C SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0xB1A JUMP JUMPDEST POP POP PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP3 PUSH2 0xA27 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0xB1A JUMP JUMPDEST POP POP MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x438 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0xB68F7 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x205 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x205 JUMPI DUP1 PUSH7 0x533304F826D31 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x205 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x205 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x205 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x205 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x205 JUMPI JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x60 SWAP2 ADD SLT PUSH2 0x205 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x205 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x205 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xC32 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x205 JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x205 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x4D DUP2 GT PUSH2 0xC89 JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xC89 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0xCD3 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0xFF DUP1 SWAP2 AND SWAP2 AND SUB SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0xC89 JUMPI JUMP JUMPDEST SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP4 AND PUSH1 0x40 SWAP3 DUP4 MLOAD SWAP4 PUSH32 0x313CE56700000000000000000000000000000000000000000000000000000000 SWAP6 DUP7 DUP7 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP8 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0xEA9 JUMPI PUSH0 SWAP8 PUSH2 0xE8A JUMPI JUMPDEST POP AND DUP2 MLOAD SWAP7 DUP8 MSTORE DUP3 DUP8 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0xE80 JUMPI PUSH0 SWAP8 PUSH2 0xE33 JUMPI JUMPDEST POP SWAP3 PUSH2 0xDCE PUSH8 0xDE0B6B3A7640000 SWAP6 SWAP4 PUSH2 0xDD3 SWAP4 PUSH2 0xDD9 SWAP7 PUSH2 0xDAF DUP11 PUSH2 0xC78 JUMP JUMPDEST SWAP3 PUSH2 0xDB9 DUP13 PUSH2 0xC78 JUMP JUMPDEST SWAP6 PUSH0 MSTORE PUSH0 DUP2 MSTORE DUP3 PUSH0 KECCAK256 SWAP2 PUSH0 MSTORE MSTORE PUSH0 KECCAK256 SLOAD PUSH2 0xCB6 JUMP JUMPDEST PUSH2 0xCC9 JUMP JUMPDEST SWAP1 PUSH2 0xCB6 JUMP JUMPDEST DIV SWAP2 PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0xFF DUP4 AND SWAP2 DUP1 DUP4 EQ PUSH2 0xE2C JUMPI PUSH2 0xE08 SWAP3 GT SWAP3 DUP4 PUSH0 EQ PUSH2 0xE23 JUMPI SWAP1 PUSH2 0xE03 SWAP2 PUSH2 0xD00 JUMP JUMPDEST PUSH2 0xC78 JUMP JUMPDEST SWAP1 ISZERO PUSH2 0xE1A JUMPI PUSH2 0xE17 SWAP2 PUSH2 0xCC9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xE17 SWAP2 PUSH2 0xCB6 JUMP JUMPDEST PUSH2 0xE03 SWAP2 PUSH2 0xD00 JUMP JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xDD9 SWAP5 SWAP2 SWAP8 POP DUP4 PUSH2 0xDD3 SWAP4 PUSH2 0xE6B PUSH2 0xDCE SWAP4 PUSH8 0xDE0B6B3A7640000 SWAP10 SWAP8 RETURNDATASIZE DUP6 GT PUSH2 0xE79 JUMPI JUMPDEST PUSH2 0xE63 DUP2 DUP4 PUSH2 0xBF1 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xC5F JUMP JUMPDEST SWAP10 SWAP4 SWAP7 POP SWAP4 POP SWAP4 SWAP6 POP PUSH2 0xD8E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xE59 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xEA2 SWAP2 SWAP8 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0xE79 JUMPI PUSH2 0xE63 DUP2 DUP4 PUSH2 0xBF1 JUMP JUMPDEST SWAP6 PUSH0 PUSH2 0xD71 JUMP JUMPDEST DUP4 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xD SWAP4 0xEB 0xD1 CREATE2 CALLDATASIZE SSTORE 0xE0 0xD0 0xC8 MSTORE GT 0xDB DUP7 DUP16 DUP14 SWAP16 MCOPY BLOBBASEFEE PUSH19 0xA9E77E893D2D745878FDB664736F6C63430008 NOT STOP CALLER ","sourceMap":"118:4960:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;4127:20;118:4960;;;4127:20;118:4960;;;;;;;;;;;;;;;;;;;;;;1447:22;118:4960;;;;;;;;;;;;;;;;;286:27;118:4960;;;;;;;;;;;;;;;;;918:21;118:4960;;;;;;;;;;;;;;;;;648:6;118:4960;;;;;;;;;;;;;;;;;990:30;118:4960;;;;;;;;;;;;;;;;;364:19;118:4960;;;;;;;;;;;;;;;;;1684:22;118:4960;;;;;;;;;;;;;;;;;;;;;;764:15;118:4960;;;;;;;;;;;;;;;;;1212:18;118:4960;;;;;;;;;;;;;;;;;1145:16;118:4960;;;;;;;;;;;;;;;;;834:33;118:4960;;;;;;;;;;;;;;;;;1658:19;118:4960;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;3391:7;118:4960;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1715:23;118:4960;;;;;;;;;;;;;;;;;;;;;;;1581:10;118:4960;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1071:21;118:4960;;;;;;;;;;;;;;;;;;503:31;118:4960;;;;;;;;;;;;;;;;;;1281:27;118:4960;;;;;;;;;;;;;;;;;;1642:7;118:4960;;;;;;;;;;;;;;;;;;1520:10;118:4960;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1361:31;118:4960;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;3847:4;118:4960;;;;;;;;;;;;;;;;;;707:4;118:4960;;;;;;;;;;;;;;;;;;589:6;118:4960;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;434:16;118:4960;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4163:912::-;;118:4960;;;;;;;;;;4320:36;;;;;;;;;;;;;;;;;;;;;;4163:912;118:4960;;;;4385:34;;;;;4320:36;4385:34;;;;;;;;;4320:36;4385:34;;;4163:912;4452:17;;4599:16;4684:8;4452:17;;4598:32;4452:17;4667:13;4452:17;;;;:::i;:::-;4502:15;;;;:::i;:::-;118:4960;4320:36;118:4960;4320:36;118:4960;;;4320:36;118:4960;;4320:36;118:4960;;4320:36;118:4960;;4599:16;:::i;:::-;4598:32;:::i;:::-;4667:13;;:::i;:::-;118:4960;;;;;;;;;4710:24;;;;4706:75;;4810:83;4817:23;;:75;;;;;;4843:23;;;;:::i;:::-;4810:83;:::i;:::-;4906:131;;;;4950:21;;;:::i;:::-;4163:912;:::o;4906:131::-;5004:21;;;:::i;4817:75::-;4869:23;;;:::i;4706:75::-;4751:18;;;;;:::o;4385:34::-;4667:13;4385:34;;;;;4598:32;4385:34;;4599:16;4385:34;4684:8;4385:34;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;118:4960;;;4320:36;118:4960;;;;;4320:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;118:4960;;;4320:36;118:4960;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"763400","executionCost":"infinite","totalCost":"infinite"},"external":{"USDC()":"2710","USDC_TO_USDT_RATE()":"730","USDC_TO_WBTC_RATE()":"151","USDC_TO_WETH_RATE()":"818","USDC_TO_WMATIC_RATE()":"400","USDT_TO_USDC_RATE()":"664","USDT_TO_WBTC_RATE()":"642","USDT_TO_WETH_RATE()":"378","USDT_TO_WMATIC_RATE()":"268","WBTC_TO_USDC_RATE()":"422","WBTC_TO_USDT_RATE()":"796","WBTC_TO_WETH_RATE()":"752","WBTC_TO_WMATIC_RATE()":"620","WETH_TO_USDC_RATE()":"334","WETH_TO_USDT_RATE()":"466","WETH_TO_WBTC_RATE()":"356","WETH_TO_WMATIC_RATE()":"840","WMATIC_TO_USDC_RATE()":"774","WMATIC_TO_USDT_RATE()":"202","WMATIC_TO_WBTC_RATE()":"224","WMATIC_TO_WETH_RATE()":"686","WNATIVE()":"2820","checkRebalance(address[],uint256[],uint256[])":"infinite","convert(address,address,uint256)":"infinite","getBaluniRouter()":"179","getRate(address,address,bool)":"2950","getRateToEth(address,bool)":"4970","getTreasury()":"2424","rates(address,address)":"2875","rebalance(address[],uint256[],address,address,uint256)":"infinite","setRate(address,address,uint256)":"22781","setTreasury(address)":"25125","treasury()":"2600"}},"methodIdentifiers":{"USDC()":"89a30271","USDC_TO_USDT_RATE()":"b537d24b","USDC_TO_WBTC_RATE()":"02098719","USDC_TO_WETH_RATE()":"e2338e72","USDC_TO_WMATIC_RATE()":"5107e94e","USDT_TO_USDC_RATE()":"a58a7f8a","USDT_TO_WBTC_RATE()":"97db8e02","USDT_TO_WETH_RATE()":"443dc789","USDT_TO_WMATIC_RATE()":"1a1e4a1f","WBTC_TO_USDC_RATE()":"53ff493e","WBTC_TO_USDT_RATE()":"d135e3be","WBTC_TO_WETH_RATE()":"b9e93810","WBTC_TO_WMATIC_RATE()":"8e5139ed","WETH_TO_USDC_RATE()":"4039e687","WETH_TO_USDT_RATE()":"5fc8cd69","WETH_TO_WBTC_RATE()":"43146399","WETH_TO_WMATIC_RATE()":"e30f6892","WMATIC_TO_USDC_RATE()":"c0184983","WMATIC_TO_USDT_RATE()":"0e091762","WMATIC_TO_WBTC_RATE()":"187029b8","WMATIC_TO_WETH_RATE()":"ae3bcc96","WNATIVE()":"b381cf40","checkRebalance(address[],uint256[],uint256[])":"18cdc49a","convert(address,address,uint256)":"248391ff","getBaluniRouter()":"04cc7325","getRate(address,address,bool)":"802431fb","getRateToEth(address,bool)":"7de4fd10","getTreasury()":"3b19e84a","rates(address,address)":"7b0cf44d","rebalance(address[],uint256[],address,address,uint256)":"84db1dfb","setRate(address,address,uint256)":"5911fb9a","setTreasury(address)":"f0f44260","treasury()":"61d027b3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usdt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wmatic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"wbtc\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC_TO_USDT_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC_TO_WBTC_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC_TO_WETH_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC_TO_WMATIC_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT_TO_USDC_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT_TO_WBTC_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT_TO_WETH_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT_TO_WMATIC_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBTC_TO_USDC_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBTC_TO_USDT_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBTC_TO_WETH_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBTC_TO_WMATIC_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH_TO_USDC_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH_TO_USDT_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH_TO_WBTC_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH_TO_WMATIC_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WMATIC_TO_USDC_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WMATIC_TO_USDT_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WMATIC_TO_WBTC_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WMATIC_TO_WETH_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WNATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"name\":\"checkRebalance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"getRateToEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/MockRebalancer.sol\":\"MockRebalancer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Agent.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Agent {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1bbf5ddbc4f525451e727d6997e6a20a6238d69232b58b3813760a16e7f60bbe\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport './IBaluniV1Router.sol';\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n  struct RebalanceVars {\\r\\n    uint256 length;\\r\\n    uint256 totalValue;\\r\\n    uint256 finalUsdBalance;\\r\\n    uint256 overweightVaultsLength;\\r\\n    uint256 underweightVaultsLength;\\r\\n    uint256 totalActiveWeight;\\r\\n    uint256 amountOut;\\r\\n    uint256[] overweightVaults;\\r\\n    uint256[] overweightAmounts;\\r\\n    uint256[] underweightVaults;\\r\\n    uint256[] underweightAmounts;\\r\\n    uint256[] balances;\\r\\n  }\\r\\n\\r\\n  // Variables\\r\\n  function baluniRouter() external view returns (address);\\r\\n\\r\\n  function USDC() external view returns (address);\\r\\n\\r\\n  function WNATIVE() external view returns (address);\\r\\n\\r\\n  function uniswapRouter() external view returns (address);\\r\\n\\r\\n  function uniswapFactory() external view returns (address);\\r\\n\\r\\n  function _1InchSpotAgg() external view returns (address);\\r\\n\\r\\n  function treasury() external view returns (address);\\r\\n\\r\\n  // Functions\\r\\n  function rebalance(\\r\\n    uint256[] memory balances,\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    uint256 limit,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function checkRebalance(\\r\\n    uint256[] memory balances,\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    uint256 limit,\\r\\n    address sender,\\r\\n    address baseAsset\\r\\n  ) external view returns (RebalanceVars memory);\\r\\n\\r\\n  function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0xe7e9c4fbe80061f09e49a3c9861c415d023383069ee1c59b39f85290791e8c3f\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Router.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\\r\\nimport './I1inchSpotAgg.sol';\\r\\nimport './IBaluniV1Agent.sol';\\r\\n\\r\\ninterface IBaluniV1Router {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  // Variables\\r\\n  function _MAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_BASE() external view returns (uint256);\\r\\n\\r\\n  function getTokens() external view returns (address[] memory);\\r\\n\\r\\n  function USDC() external view returns (IERC20);\\r\\n\\r\\n  function WNATIVE() external view returns (address);\\r\\n\\r\\n  function oracle() external view returns (address);\\r\\n\\r\\n  function uniswapRouter() external view returns (address);\\r\\n\\r\\n  function uniswapFactory() external view returns (address);\\r\\n\\r\\n  function agentFactory() external view returns (address);\\r\\n\\r\\n  function marketOracle() external view returns (address);\\r\\n\\r\\n  function rebalancer() external view returns (address);\\r\\n\\r\\n  function treasury() external view returns (address);\\r\\n\\r\\n  // Functions\\r\\n  function initialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer\\r\\n  ) external;\\r\\n\\r\\n  function reinitialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer,\\r\\n    uint64 version\\r\\n  ) external;\\r\\n\\r\\n  function initializeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeBpsFee(uint256 _newFee) external;\\r\\n\\r\\n  function changeTreasury(address _newTreasury) external;\\r\\n\\r\\n  function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n  function changeAgentFactory(address _agentFactory) external;\\r\\n\\r\\n  function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external;\\r\\n\\r\\n  function liquidate(address token) external;\\r\\n\\r\\n  function liquidateAll() external;\\r\\n\\r\\n  function burnERC20(uint256 burnAmount) external;\\r\\n\\r\\n  function burnUSDC(uint256 burnAmount) external;\\r\\n\\r\\n  function getAgentAddress(address _user) external view returns (address);\\r\\n\\r\\n  function mintWithUSDC(uint256 balAmountToMint) external;\\r\\n\\r\\n  function callRebalance(\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    uint256 limit,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function requiredUSDCtoMint(uint256 balAmountToMint) external view returns (uint256);\\r\\n\\r\\n  function calculateTokenShare(\\r\\n    uint256 totalBaluni,\\r\\n    uint256 totalERC20Balance,\\r\\n    uint256 baluniAmount,\\r\\n    uint256 tokenDecimals\\r\\n  ) external pure returns (uint256);\\r\\n\\r\\n  function tokenValuation(uint256 amount, address token) external view returns (uint256);\\r\\n\\r\\n  function totalValuation() external view returns (uint256);\\r\\n\\r\\n  function getUSDCShareValue(uint256 amount) external view returns (uint256);\\r\\n\\r\\n  function fetchMarketPrices() external view returns (uint256, uint256);\\r\\n\\r\\n  function getVersion() external view returns (uint64);\\r\\n\\r\\n  function unitPrice() external view returns (uint256);\\r\\n  \\r\\n}\\r\\n\",\"keccak256\":\"0x0795abf370daca8b74052ab6f425ab982bb4e0aecc4a72de19b3ff505d9e18a5\",\"license\":\"GNU AGPLv3\"},\"contracts/mock/MockRebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport '../interfaces/IBaluniV1Rebalancer.sol';\\r\\n\\r\\ncontract MockRebalancer {\\r\\n    mapping(address => mapping(address => uint256)) public rates;\\r\\n\\r\\n    // Hardcoded rates\\r\\n    uint256 public constant USDC_TO_WETH_RATE = 256897185735855109411507118;\\r\\n    uint256 public constant USDC_TO_USDT_RATE = 1000983989838925640;\\r\\n    uint256 public constant USDC_TO_WBTC_RATE = 1463657468947761;\\r\\n    uint256 public constant USDC_TO_WMATIC_RATE = 1351148249095651365340914098616;\\r\\n\\r\\n    uint256 public constant WMATIC_TO_USDT_RATE = 747767;\\r\\n    uint256 public constant WMATIC_TO_USDC_RATE = 733905;\\r\\n    uint256 public constant WMATIC_TO_WBTC_RATE = 1080;\\r\\n    uint256 public constant WMATIC_TO_WETH_RATE = 189625582664100;\\r\\n\\r\\n    uint256 public constant WBTC_TO_WMATIC_RATE = 924778033538811846038762973579739;\\r\\n    uint256 public constant WBTC_TO_USDT_RATE = 681360233243484009138;\\r\\n    uint256 public constant WBTC_TO_WETH_RATE = 175476470939493533556108593598;\\r\\n    uint256 public constant WBTC_TO_USDC_RATE = 683003374554512029990;\\r\\n\\r\\n    uint256 public constant USDT_TO_WBTC_RATE = 1457844841452943;\\r\\n    uint256 public constant USDT_TO_USDC_RATE = 998588636583774074;\\r\\n    uint256 public constant USDT_TO_WETH_RATE = 256884484348670192973112135;\\r\\n    uint256 public constant USDT_TO_WMATIC_RATE = 1351542478738482785523886658083;\\r\\n\\r\\n    uint256 public constant WETH_TO_WMATIC_RATE = 5273576410685072782753;\\r\\n    uint256 public constant WETH_TO_USDC_RATE = 3836478742;\\r\\n    uint256 public constant WETH_TO_USDT_RATE = 3749163887;\\r\\n    uint256 public constant WETH_TO_WBTC_RATE = 5561821;\\r\\n\\r\\n    address public USDC;\\r\\n    address public WNATIVE;\\r\\n\\r\\n    address public treasury;\\r\\n\\r\\n    constructor(address usdt, address _usdc, address _wmatic, address weth, address wbtc) {\\r\\n        WNATIVE = _wmatic;\\r\\n        USDC = _usdc;\\r\\n        treasury = msg.sender;\\r\\n\\r\\n        rates[usdt][USDC] = USDT_TO_USDC_RATE;\\r\\n        rates[usdt][WNATIVE] = USDT_TO_WMATIC_RATE;\\r\\n        rates[usdt][wbtc] = USDT_TO_WBTC_RATE;\\r\\n        rates[usdt][weth] = USDT_TO_WETH_RATE;\\r\\n\\r\\n        rates[wbtc][usdt] = WBTC_TO_USDT_RATE;\\r\\n        rates[wbtc][WNATIVE] = WBTC_TO_WMATIC_RATE;\\r\\n        rates[wbtc][USDC] = WBTC_TO_USDC_RATE;\\r\\n        rates[wbtc][weth] = WBTC_TO_WETH_RATE;\\r\\n\\r\\n        rates[USDC][usdt] = USDC_TO_USDT_RATE;\\r\\n        rates[USDC][wbtc] = USDC_TO_WBTC_RATE;\\r\\n        rates[USDC][WNATIVE] = USDC_TO_WMATIC_RATE;\\r\\n        rates[USDC][weth] = USDC_TO_WETH_RATE;\\r\\n\\r\\n        rates[WNATIVE][wbtc] = WMATIC_TO_WBTC_RATE;\\r\\n        rates[WNATIVE][weth] = WMATIC_TO_WETH_RATE;\\r\\n        rates[WNATIVE][USDC] = WMATIC_TO_USDC_RATE;\\r\\n        rates[WNATIVE][usdt] = WMATIC_TO_USDT_RATE;\\r\\n\\r\\n        rates[weth][WNATIVE] = WETH_TO_WMATIC_RATE;\\r\\n        rates[weth][USDC] = WETH_TO_USDC_RATE;\\r\\n        rates[weth][usdt] = WETH_TO_USDC_RATE;\\r\\n        rates[weth][wbtc] = WETH_TO_WBTC_RATE;\\r\\n    }\\r\\n\\r\\n    function setRate(address fromToken, address toToken, uint256 rate) external {\\r\\n        rates[fromToken][toToken] = rate;\\r\\n    }\\r\\n\\r\\n    function getRate(IERC20 fromToken, IERC20 toToken, bool /*isBuying*/) external view returns (uint256) {\\r\\n        return rates[address(fromToken)][address(toToken)];\\r\\n    }\\r\\n\\r\\n    function getRateToEth(IERC20 fromToken, bool /*isBuying*/) external view returns (uint256) {\\r\\n        return rates[address(fromToken)][WNATIVE];\\r\\n    }\\r\\n\\r\\n    function rebalance(\\r\\n        address[] calldata /* assets */,\\r\\n        uint256[] calldata /* weights */,\\r\\n        address /* caller */,\\r\\n        address /* receiver */,\\r\\n        uint256 /* trigger */\\r\\n    ) external {}\\r\\n\\r\\n    function checkRebalance(\\r\\n        address[] calldata /* assets */,\\r\\n        uint256[] calldata /* weights */,\\r\\n        uint256[] calldata /* amounts */\\r\\n    ) external view returns (bool) {\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function getBaluniRouter() external view returns (address) {\\r\\n        return address(0);\\r\\n    }\\r\\n\\r\\n    function getTreasury() external view returns (address) {\\r\\n        return treasury;\\r\\n    }\\r\\n\\r\\n    function setTreasury(address _treasury) external {\\r\\n        treasury = _treasury;\\r\\n    }\\r\\n\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256) {\\r\\n        uint256 rate;\\r\\n\\r\\n        uint8 fromDecimal = IERC20Metadata(fromToken).decimals();\\r\\n        uint8 toDecimal = IERC20Metadata(toToken).decimals();\\r\\n\\r\\n        uint256 numerator = 10 ** fromDecimal;\\r\\n        uint256 denominator = 10 ** toDecimal;\\r\\n\\r\\n        rate = rates[address(fromToken)][address(toToken)];\\r\\n        rate = (rate * numerator) / denominator;\\r\\n\\r\\n        uint256 tokenAmount = ((amount * rate) / 10 ** 18);\\r\\n\\r\\n        if (fromDecimal == toDecimal) {\\r\\n            return tokenAmount;\\r\\n        }\\r\\n\\r\\n        uint256 factor = 10 ** (fromDecimal > toDecimal ? fromDecimal - toDecimal : toDecimal - fromDecimal);\\r\\n\\r\\n        if (fromDecimal > toDecimal) {\\r\\n            tokenAmount /= factor;\\r\\n        } else {\\r\\n            tokenAmount *= factor;\\r\\n        }\\r\\n\\r\\n        return tokenAmount;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xb46bbfcb28c216efdc7f8c3013d9e7b299e8a49274f1cd58a6f4449b43a4eb84\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4305,"contract":"contracts/mock/MockRebalancer.sol:MockRebalancer","label":"rates","offset":0,"slot":"0","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":4367,"contract":"contracts/mock/MockRebalancer.sol:MockRebalancer","label":"USDC","offset":0,"slot":"1","type":"t_address"},{"astId":4369,"contract":"contracts/mock/MockRebalancer.sol:MockRebalancer","label":"WNATIVE","offset":0,"slot":"2","type":"t_address"},{"astId":4371,"contract":"contracts/mock/MockRebalancer.sol:MockRebalancer","label":"treasury","offset":0,"slot":"3","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}